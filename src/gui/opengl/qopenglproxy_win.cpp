begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QByteArray>
end_include
begin_include
include|#
directive|include
file|<QVector>
end_include
begin_include
include|#
directive|include
file|<QCoreApplication>
end_include
begin_include
include|#
directive|include
file|<QLoggingCategory>
end_include
begin_include
include|#
directive|include
file|<qt_windows.h>
end_include
begin_comment
comment|// Must not include QOpenGLFunctions or anything that pulls in qopengl.h.
end_comment
begin_comment
comment|// Otherwise we end up with errors about inconsistent linkage.
end_comment
begin_include
include|#
directive|include
file|<GL/gl.h>
end_include
begin_include
include|#
directive|include
file|<EGL/egl.h>
end_include
begin_if
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES
argument_list|)
operator|||
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
end_if
begin_error
error|#
directive|error
literal|"Proxy GL is not compatible with static ES builds"
end_error
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// This should not be an issue with the compilers used on Windows, but just in case:
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|Q_COMPILER_VARIADIC_MACROS
end_ifndef
begin_error
error|#
directive|error
literal|"Proxy GL requires variadic macro support"
end_error
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// Disable inconsistent dll linkage warnings. gl.h and egl.h are included and these mark
end_comment
begin_comment
comment|// the egl and (w)gl functions as imported. We will mark them as exported.
end_comment
begin_if
if|#
directive|if
name|defined
argument_list|(
name|Q_CC_MSVC
argument_list|)
end_if
begin_pragma
pragma|#
directive|pragma
name|warning
name|(
name|disable
name|:
name|4273
name|)
end_pragma
begin_elif
elif|#
directive|elif
name|defined
argument_list|(
name|Q_CC_MINGW
argument_list|)
end_elif
begin_pragma
pragma|#
directive|pragma
name|GCC
name|diagnostic
name|ignored
literal|"-Wattributes"
end_pragma
begin_endif
endif|#
directive|endif
end_endif
begin_ifdef
ifdef|#
directive|ifdef
name|Q_OS_WIN64
end_ifdef
begin_typedef
DECL|typedef|khronos_intptr_t
typedef|typedef
name|signed
name|long
name|long
name|int
name|khronos_intptr_t
typedef|;
end_typedef
begin_typedef
DECL|typedef|khronos_ssize_t
typedef|typedef
name|signed
name|long
name|long
name|int
name|khronos_ssize_t
typedef|;
end_typedef
begin_else
else|#
directive|else
end_else
begin_typedef
DECL|typedef|khronos_intptr_t
typedef|typedef
name|signed
name|long
name|int
name|khronos_intptr_t
typedef|;
end_typedef
begin_typedef
DECL|typedef|khronos_ssize_t
typedef|typedef
name|signed
name|long
name|int
name|khronos_ssize_t
typedef|;
end_typedef
begin_endif
endif|#
directive|endif
end_endif
begin_typedef
DECL|typedef|GLchar
typedef|typedef
name|char
name|GLchar
typedef|;
end_typedef
begin_typedef
DECL|typedef|GLintptr
typedef|typedef
name|khronos_intptr_t
name|GLintptr
typedef|;
end_typedef
begin_typedef
DECL|typedef|GLsizeiptr
typedef|typedef
name|khronos_ssize_t
name|GLsizeiptr
typedef|;
end_typedef
begin_macro
name|Q_LOGGING_CATEGORY
argument_list|(
argument|qglLc
argument_list|,
literal|"qt.gui.openglproxy"
argument_list|)
end_macro
begin_class
DECL|class|QAbstractWindowsOpenGL
class|class
name|QAbstractWindowsOpenGL
block|{
public|public:
name|QAbstractWindowsOpenGL
parameter_list|()
constructor_decl|;
DECL|function|~QAbstractWindowsOpenGL
specifier|virtual
name|~
name|QAbstractWindowsOpenGL
parameter_list|()
block|{ }
DECL|enum|LibType
enum|enum
name|LibType
block|{
comment|// must match QOpenGLFunctions::PlatformGLType
DECL|enumerator|DesktopGL
name|DesktopGL
init|=
literal|0
block|,
DECL|enumerator|GLES2
name|GLES2
block|}
enum|;
DECL|function|libraryType
name|LibType
name|libraryType
parameter_list|()
specifier|const
block|{
return|return
name|m_libraryType
return|;
block|}
DECL|function|libraryHandle
name|HMODULE
name|libraryHandle
parameter_list|()
specifier|const
block|{
return|return
name|m_lib
return|;
block|}
DECL|function|functionsReady
name|bool
name|functionsReady
parameter_list|()
specifier|const
block|{
return|return
name|m_loaded
return|;
block|}
comment|// WGL
DECL|member|CopyContext
name|BOOL
function_decl|(
name|WINAPI
modifier|*
name|CopyContext
function_decl|)
parameter_list|(
name|HGLRC
name|src
parameter_list|,
name|HGLRC
name|dst
parameter_list|,
name|UINT
name|mask
parameter_list|)
function_decl|;
DECL|member|CreateContext
name|HGLRC
function_decl|(
name|WINAPI
modifier|*
name|CreateContext
function_decl|)
parameter_list|(
name|HDC
name|dc
parameter_list|)
function_decl|;
DECL|member|CreateLayerContext
name|HGLRC
function_decl|(
name|WINAPI
modifier|*
name|CreateLayerContext
function_decl|)
parameter_list|(
name|HDC
name|dc
parameter_list|,
name|int
name|plane
parameter_list|)
function_decl|;
DECL|member|DeleteContext
name|BOOL
function_decl|(
name|WINAPI
modifier|*
name|DeleteContext
function_decl|)
parameter_list|(
name|HGLRC
name|context
parameter_list|)
function_decl|;
DECL|member|GetCurrentContext
name|HGLRC
function_decl|(
name|WINAPI
modifier|*
name|GetCurrentContext
function_decl|)
parameter_list|()
function_decl|;
DECL|member|GetCurrentDC
name|HDC
function_decl|(
name|WINAPI
modifier|*
name|GetCurrentDC
function_decl|)
parameter_list|()
function_decl|;
DECL|member|GetProcAddress
name|PROC
function_decl|(
name|WINAPI
modifier|*
name|GetProcAddress
function_decl|)
parameter_list|(
name|LPCSTR
name|name
parameter_list|)
function_decl|;
DECL|member|MakeCurrent
name|BOOL
function_decl|(
name|WINAPI
modifier|*
name|MakeCurrent
function_decl|)
parameter_list|(
name|HDC
name|dc
parameter_list|,
name|HGLRC
name|context
parameter_list|)
function_decl|;
DECL|member|ShareLists
name|BOOL
function_decl|(
name|WINAPI
modifier|*
name|ShareLists
function_decl|)
parameter_list|(
name|HGLRC
name|context1
parameter_list|,
name|HGLRC
name|context2
parameter_list|)
function_decl|;
DECL|member|UseFontBitmapsW
name|BOOL
function_decl|(
name|WINAPI
modifier|*
name|UseFontBitmapsW
function_decl|)
parameter_list|(
name|HDC
name|dc
parameter_list|,
name|DWORD
name|first
parameter_list|,
name|DWORD
name|count
parameter_list|,
name|DWORD
name|base
parameter_list|)
function_decl|;
DECL|member|UseFontOutlinesW
name|BOOL
function_decl|(
name|WINAPI
modifier|*
name|UseFontOutlinesW
function_decl|)
parameter_list|(
name|HDC
name|dc
parameter_list|,
name|DWORD
name|first
parameter_list|,
name|DWORD
name|count
parameter_list|,
name|DWORD
name|base
parameter_list|,
name|FLOAT
name|deviation
parameter_list|,
name|FLOAT
name|extrusion
parameter_list|,
name|int
name|format
parameter_list|,
name|LPGLYPHMETRICSFLOAT
name|gmf
parameter_list|)
function_decl|;
DECL|member|DescribeLayerPlane
name|BOOL
function_decl|(
name|WINAPI
modifier|*
name|DescribeLayerPlane
function_decl|)
parameter_list|(
name|HDC
name|dc
parameter_list|,
name|int
name|pixelFormat
parameter_list|,
name|int
name|plane
parameter_list|,
name|UINT
name|n
parameter_list|,
name|LPLAYERPLANEDESCRIPTOR
name|planeDescriptor
parameter_list|)
function_decl|;
DECL|member|SetLayerPaletteEntries
name|int
function_decl|(
name|WINAPI
modifier|*
name|SetLayerPaletteEntries
function_decl|)
parameter_list|(
name|HDC
name|dc
parameter_list|,
name|int
name|plane
parameter_list|,
name|int
name|start
parameter_list|,
name|int
name|entries
parameter_list|,
name|CONST
name|COLORREF
modifier|*
name|colors
parameter_list|)
function_decl|;
DECL|member|GetLayerPaletteEntries
name|int
function_decl|(
name|WINAPI
modifier|*
name|GetLayerPaletteEntries
function_decl|)
parameter_list|(
name|HDC
name|dc
parameter_list|,
name|int
name|plane
parameter_list|,
name|int
name|start
parameter_list|,
name|int
name|entries
parameter_list|,
name|COLORREF
modifier|*
name|color
parameter_list|)
function_decl|;
DECL|member|RealizeLayerPalette
name|BOOL
function_decl|(
name|WINAPI
modifier|*
name|RealizeLayerPalette
function_decl|)
parameter_list|(
name|HDC
name|dc
parameter_list|,
name|int
name|plane
parameter_list|,
name|BOOL
name|realize
parameter_list|)
function_decl|;
DECL|member|SwapLayerBuffers
name|BOOL
function_decl|(
name|WINAPI
modifier|*
name|SwapLayerBuffers
function_decl|)
parameter_list|(
name|HDC
name|dc
parameter_list|,
name|UINT
name|planes
parameter_list|)
function_decl|;
DECL|member|SwapMultipleBuffers
name|DWORD
function_decl|(
name|WINAPI
modifier|*
name|SwapMultipleBuffers
function_decl|)
parameter_list|(
name|UINT
name|n
parameter_list|,
name|CONST
name|WGLSWAP
modifier|*
name|buffers
parameter_list|)
function_decl|;
comment|// EGL
DECL|member|EGL_GetError
name|EGLint
function_decl|(
name|EGLAPIENTRY
modifier|*
name|EGL_GetError
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
DECL|member|EGL_GetDisplay
name|EGLDisplay
function_decl|(
name|EGLAPIENTRY
modifier|*
name|EGL_GetDisplay
function_decl|)
parameter_list|(
name|EGLNativeDisplayType
name|display_id
parameter_list|)
function_decl|;
DECL|member|EGL_Initialize
name|EGLBoolean
function_decl|(
name|EGLAPIENTRY
modifier|*
name|EGL_Initialize
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLint
modifier|*
name|major
parameter_list|,
name|EGLint
modifier|*
name|minor
parameter_list|)
function_decl|;
DECL|member|EGL_Terminate
name|EGLBoolean
function_decl|(
name|EGLAPIENTRY
modifier|*
name|EGL_Terminate
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|)
function_decl|;
DECL|member|EGL_QueryString
specifier|const
name|char
modifier|*
function_decl|(
name|EGLAPIENTRY
modifier|*
name|EGL_QueryString
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLint
name|name
parameter_list|)
function_decl|;
DECL|member|EGL_GetConfigs
name|EGLBoolean
function_decl|(
name|EGLAPIENTRY
modifier|*
name|EGL_GetConfigs
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLConfig
modifier|*
name|configs
parameter_list|,
name|EGLint
name|config_size
parameter_list|,
name|EGLint
modifier|*
name|num_config
parameter_list|)
function_decl|;
DECL|member|EGL_ChooseConfig
name|EGLBoolean
function_decl|(
name|EGLAPIENTRY
modifier|*
name|EGL_ChooseConfig
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
specifier|const
name|EGLint
modifier|*
name|attrib_list
parameter_list|,
name|EGLConfig
modifier|*
name|configs
parameter_list|,
name|EGLint
name|config_size
parameter_list|,
name|EGLint
modifier|*
name|num_config
parameter_list|)
function_decl|;
DECL|member|EGL_GetConfigAttrib
name|EGLBoolean
function_decl|(
name|EGLAPIENTRY
modifier|*
name|EGL_GetConfigAttrib
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLConfig
name|config
parameter_list|,
name|EGLint
name|attribute
parameter_list|,
name|EGLint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|member|EGL_CreateWindowSurface
name|EGLSurface
function_decl|(
name|EGLAPIENTRY
modifier|*
name|EGL_CreateWindowSurface
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLConfig
name|config
parameter_list|,
name|EGLNativeWindowType
name|win
parameter_list|,
specifier|const
name|EGLint
modifier|*
name|attrib_list
parameter_list|)
function_decl|;
DECL|member|EGL_CreatePbufferSurface
name|EGLSurface
function_decl|(
name|EGLAPIENTRY
modifier|*
name|EGL_CreatePbufferSurface
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLConfig
name|config
parameter_list|,
specifier|const
name|EGLint
modifier|*
name|attrib_list
parameter_list|)
function_decl|;
DECL|member|EGL_CreatePixmapSurface
name|EGLSurface
function_decl|(
name|EGLAPIENTRY
modifier|*
name|EGL_CreatePixmapSurface
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLConfig
name|config
parameter_list|,
name|EGLNativePixmapType
name|pixmap
parameter_list|,
specifier|const
name|EGLint
modifier|*
name|attrib_list
parameter_list|)
function_decl|;
DECL|member|EGL_DestroySurface
name|EGLBoolean
function_decl|(
name|EGLAPIENTRY
modifier|*
name|EGL_DestroySurface
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSurface
name|surface
parameter_list|)
function_decl|;
DECL|member|EGL_QuerySurface
name|EGLBoolean
function_decl|(
name|EGLAPIENTRY
modifier|*
name|EGL_QuerySurface
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSurface
name|surface
parameter_list|,
name|EGLint
name|attribute
parameter_list|,
name|EGLint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|member|EGL_BindAPI
name|EGLBoolean
function_decl|(
name|EGLAPIENTRY
modifier|*
name|EGL_BindAPI
function_decl|)
parameter_list|(
name|EGLenum
name|api
parameter_list|)
function_decl|;
DECL|member|EGL_QueryAPI
name|EGLenum
function_decl|(
name|EGLAPIENTRY
modifier|*
name|EGL_QueryAPI
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
DECL|member|EGL_WaitClient
name|EGLBoolean
function_decl|(
name|EGLAPIENTRY
modifier|*
name|EGL_WaitClient
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
DECL|member|EGL_ReleaseThread
name|EGLBoolean
function_decl|(
name|EGLAPIENTRY
modifier|*
name|EGL_ReleaseThread
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
DECL|member|EGL_CreatePbufferFromClientBuffer
name|EGLSurface
function_decl|(
name|EGLAPIENTRY
modifier|*
name|EGL_CreatePbufferFromClientBuffer
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLenum
name|buftype
parameter_list|,
name|EGLClientBuffer
name|buffer
parameter_list|,
name|EGLConfig
name|config
parameter_list|,
specifier|const
name|EGLint
modifier|*
name|attrib_list
parameter_list|)
function_decl|;
DECL|member|EGL_SurfaceAttrib
name|EGLBoolean
function_decl|(
name|EGLAPIENTRY
modifier|*
name|EGL_SurfaceAttrib
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSurface
name|surface
parameter_list|,
name|EGLint
name|attribute
parameter_list|,
name|EGLint
name|value
parameter_list|)
function_decl|;
DECL|member|EGL_BindTexImage
name|EGLBoolean
function_decl|(
name|EGLAPIENTRY
modifier|*
name|EGL_BindTexImage
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSurface
name|surface
parameter_list|,
name|EGLint
name|buffer
parameter_list|)
function_decl|;
DECL|member|EGL_ReleaseTexImage
name|EGLBoolean
function_decl|(
name|EGLAPIENTRY
modifier|*
name|EGL_ReleaseTexImage
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSurface
name|surface
parameter_list|,
name|EGLint
name|buffer
parameter_list|)
function_decl|;
DECL|member|EGL_SwapInterval
name|EGLBoolean
function_decl|(
name|EGLAPIENTRY
modifier|*
name|EGL_SwapInterval
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLint
name|interval
parameter_list|)
function_decl|;
DECL|member|EGL_CreateContext
name|EGLContext
function_decl|(
name|EGLAPIENTRY
modifier|*
name|EGL_CreateContext
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLConfig
name|config
parameter_list|,
name|EGLContext
name|share_context
parameter_list|,
specifier|const
name|EGLint
modifier|*
name|attrib_list
parameter_list|)
function_decl|;
DECL|member|EGL_DestroyContext
name|EGLBoolean
function_decl|(
name|EGLAPIENTRY
modifier|*
name|EGL_DestroyContext
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLContext
name|ctx
parameter_list|)
function_decl|;
DECL|member|EGL_MakeCurrent
name|EGLBoolean
function_decl|(
name|EGLAPIENTRY
modifier|*
name|EGL_MakeCurrent
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSurface
name|draw
parameter_list|,
name|EGLSurface
name|read
parameter_list|,
name|EGLContext
name|ctx
parameter_list|)
function_decl|;
DECL|member|EGL_GetCurrentContext
name|EGLContext
function_decl|(
name|EGLAPIENTRY
modifier|*
name|EGL_GetCurrentContext
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
DECL|member|EGL_GetCurrentSurface
name|EGLSurface
function_decl|(
name|EGLAPIENTRY
modifier|*
name|EGL_GetCurrentSurface
function_decl|)
parameter_list|(
name|EGLint
name|readdraw
parameter_list|)
function_decl|;
DECL|member|EGL_GetCurrentDisplay
name|EGLDisplay
function_decl|(
name|EGLAPIENTRY
modifier|*
name|EGL_GetCurrentDisplay
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
DECL|member|EGL_QueryContext
name|EGLBoolean
function_decl|(
name|EGLAPIENTRY
modifier|*
name|EGL_QueryContext
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLContext
name|ctx
parameter_list|,
name|EGLint
name|attribute
parameter_list|,
name|EGLint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|member|EGL_WaitGL
name|EGLBoolean
function_decl|(
name|EGLAPIENTRY
modifier|*
name|EGL_WaitGL
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
DECL|member|EGL_WaitNative
name|EGLBoolean
function_decl|(
name|EGLAPIENTRY
modifier|*
name|EGL_WaitNative
function_decl|)
parameter_list|(
name|EGLint
name|engine
parameter_list|)
function_decl|;
DECL|member|EGL_SwapBuffers
name|EGLBoolean
function_decl|(
name|EGLAPIENTRY
modifier|*
name|EGL_SwapBuffers
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSurface
name|surface
parameter_list|)
function_decl|;
DECL|member|EGL_CopyBuffers
name|EGLBoolean
function_decl|(
name|EGLAPIENTRY
modifier|*
name|EGL_CopyBuffers
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSurface
name|surface
parameter_list|,
name|EGLNativePixmapType
name|target
parameter_list|)
function_decl|;
DECL|member|EGL_GetProcAddress
name|__eglMustCastToProperFunctionPointerType
function_decl|(
name|EGLAPIENTRY
modifier|*
name|EGL_GetProcAddress
function_decl|)
parameter_list|(
specifier|const
name|char
modifier|*
name|procname
parameter_list|)
function_decl|;
comment|// OpenGL 1.0
DECL|member|Viewport
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Viewport
function_decl|)
parameter_list|(
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
DECL|member|DepthRange
name|void
function_decl|(
name|APIENTRY
modifier|*
name|DepthRange
function_decl|)
parameter_list|(
name|GLdouble
name|nearVal
parameter_list|,
name|GLdouble
name|farVal
parameter_list|)
function_decl|;
DECL|member|IsEnabled
name|GLboolean
function_decl|(
name|APIENTRY
modifier|*
name|IsEnabled
function_decl|)
parameter_list|(
name|GLenum
name|cap
parameter_list|)
function_decl|;
DECL|member|GetTexLevelParameteriv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|GetTexLevelParameteriv
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|GetTexLevelParameterfv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|GetTexLevelParameterfv
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|GetTexParameteriv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|GetTexParameteriv
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|GetTexParameterfv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|GetTexParameterfv
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|GetTexImage
name|void
function_decl|(
name|APIENTRY
modifier|*
name|GetTexImage
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
DECL|member|GetString
specifier|const
name|GLubyte
modifier|*
function_decl|(
name|APIENTRY
modifier|*
name|GetString
function_decl|)
parameter_list|(
name|GLenum
name|name
parameter_list|)
function_decl|;
DECL|member|GetIntegerv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|GetIntegerv
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|GetFloatv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|GetFloatv
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|GetError
name|GLenum
function_decl|(
name|APIENTRY
modifier|*
name|GetError
function_decl|)
parameter_list|()
function_decl|;
DECL|member|GetDoublev
name|void
function_decl|(
name|APIENTRY
modifier|*
name|GetDoublev
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLdouble
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|GetBooleanv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|GetBooleanv
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLboolean
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|ReadPixels
name|void
function_decl|(
name|APIENTRY
modifier|*
name|ReadPixels
function_decl|)
parameter_list|(
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
DECL|member|ReadBuffer
name|void
function_decl|(
name|APIENTRY
modifier|*
name|ReadBuffer
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|)
function_decl|;
DECL|member|PixelStorei
name|void
function_decl|(
name|APIENTRY
modifier|*
name|PixelStorei
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
DECL|member|PixelStoref
name|void
function_decl|(
name|APIENTRY
modifier|*
name|PixelStoref
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
function_decl|;
DECL|member|DepthFunc
name|void
function_decl|(
name|APIENTRY
modifier|*
name|DepthFunc
function_decl|)
parameter_list|(
name|GLenum
name|func
parameter_list|)
function_decl|;
DECL|member|StencilOp
name|void
function_decl|(
name|APIENTRY
modifier|*
name|StencilOp
function_decl|)
parameter_list|(
name|GLenum
name|fail
parameter_list|,
name|GLenum
name|zfail
parameter_list|,
name|GLenum
name|zpass
parameter_list|)
function_decl|;
DECL|member|StencilFunc
name|void
function_decl|(
name|APIENTRY
modifier|*
name|StencilFunc
function_decl|)
parameter_list|(
name|GLenum
name|func
parameter_list|,
name|GLint
name|ref
parameter_list|,
name|GLuint
name|mask
parameter_list|)
function_decl|;
DECL|member|LogicOp
name|void
function_decl|(
name|APIENTRY
modifier|*
name|LogicOp
function_decl|)
parameter_list|(
name|GLenum
name|opcode
parameter_list|)
function_decl|;
DECL|member|BlendFunc
name|void
function_decl|(
name|APIENTRY
modifier|*
name|BlendFunc
function_decl|)
parameter_list|(
name|GLenum
name|sfactor
parameter_list|,
name|GLenum
name|dfactor
parameter_list|)
function_decl|;
DECL|member|Flush
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Flush
function_decl|)
parameter_list|()
function_decl|;
DECL|member|Finish
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Finish
function_decl|)
parameter_list|()
function_decl|;
DECL|member|Enable
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Enable
function_decl|)
parameter_list|(
name|GLenum
name|cap
parameter_list|)
function_decl|;
DECL|member|Disable
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Disable
function_decl|)
parameter_list|(
name|GLenum
name|cap
parameter_list|)
function_decl|;
DECL|member|DepthMask
name|void
function_decl|(
name|APIENTRY
modifier|*
name|DepthMask
function_decl|)
parameter_list|(
name|GLboolean
name|flag
parameter_list|)
function_decl|;
DECL|member|ColorMask
name|void
function_decl|(
name|APIENTRY
modifier|*
name|ColorMask
function_decl|)
parameter_list|(
name|GLboolean
name|red
parameter_list|,
name|GLboolean
name|green
parameter_list|,
name|GLboolean
name|blue
parameter_list|,
name|GLboolean
name|alpha
parameter_list|)
function_decl|;
DECL|member|StencilMask
name|void
function_decl|(
name|APIENTRY
modifier|*
name|StencilMask
function_decl|)
parameter_list|(
name|GLuint
name|mask
parameter_list|)
function_decl|;
DECL|member|ClearDepth
name|void
function_decl|(
name|APIENTRY
modifier|*
name|ClearDepth
function_decl|)
parameter_list|(
name|GLdouble
name|depth
parameter_list|)
function_decl|;
DECL|member|ClearStencil
name|void
function_decl|(
name|APIENTRY
modifier|*
name|ClearStencil
function_decl|)
parameter_list|(
name|GLint
name|s
parameter_list|)
function_decl|;
DECL|member|ClearColor
name|void
function_decl|(
name|APIENTRY
modifier|*
name|ClearColor
function_decl|)
parameter_list|(
name|GLfloat
name|red
parameter_list|,
name|GLfloat
name|green
parameter_list|,
name|GLfloat
name|blue
parameter_list|,
name|GLfloat
name|alpha
parameter_list|)
function_decl|;
DECL|member|Clear
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Clear
function_decl|)
parameter_list|(
name|GLbitfield
name|mask
parameter_list|)
function_decl|;
DECL|member|DrawBuffer
name|void
function_decl|(
name|APIENTRY
modifier|*
name|DrawBuffer
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|)
function_decl|;
DECL|member|TexImage2D
name|void
function_decl|(
name|APIENTRY
modifier|*
name|TexImage2D
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
DECL|member|TexImage1D
name|void
function_decl|(
name|APIENTRY
modifier|*
name|TexImage1D
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
DECL|member|TexParameteriv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|TexParameteriv
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|TexParameteri
name|void
function_decl|(
name|APIENTRY
modifier|*
name|TexParameteri
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
DECL|member|TexParameterfv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|TexParameterfv
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|TexParameterf
name|void
function_decl|(
name|APIENTRY
modifier|*
name|TexParameterf
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
function_decl|;
DECL|member|Scissor
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Scissor
function_decl|)
parameter_list|(
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
DECL|member|PolygonMode
name|void
function_decl|(
name|APIENTRY
modifier|*
name|PolygonMode
function_decl|)
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|mode
parameter_list|)
function_decl|;
DECL|member|PointSize
name|void
function_decl|(
name|APIENTRY
modifier|*
name|PointSize
function_decl|)
parameter_list|(
name|GLfloat
name|size
parameter_list|)
function_decl|;
DECL|member|LineWidth
name|void
function_decl|(
name|APIENTRY
modifier|*
name|LineWidth
function_decl|)
parameter_list|(
name|GLfloat
name|width
parameter_list|)
function_decl|;
DECL|member|Hint
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Hint
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|mode
parameter_list|)
function_decl|;
DECL|member|FrontFace
name|void
function_decl|(
name|APIENTRY
modifier|*
name|FrontFace
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|)
function_decl|;
DECL|member|CullFace
name|void
function_decl|(
name|APIENTRY
modifier|*
name|CullFace
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|)
function_decl|;
DECL|member|Translatef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Translatef
function_decl|)
parameter_list|(
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
DECL|member|Translated
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Translated
function_decl|)
parameter_list|(
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|)
function_decl|;
DECL|member|Scalef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Scalef
function_decl|)
parameter_list|(
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
DECL|member|Scaled
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Scaled
function_decl|)
parameter_list|(
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|)
function_decl|;
DECL|member|Rotatef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Rotatef
function_decl|)
parameter_list|(
name|GLfloat
name|angle
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
DECL|member|Rotated
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Rotated
function_decl|)
parameter_list|(
name|GLdouble
name|angle
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|)
function_decl|;
DECL|member|PushMatrix
name|void
function_decl|(
name|APIENTRY
modifier|*
name|PushMatrix
function_decl|)
parameter_list|()
function_decl|;
DECL|member|PopMatrix
name|void
function_decl|(
name|APIENTRY
modifier|*
name|PopMatrix
function_decl|)
parameter_list|()
function_decl|;
DECL|member|Ortho
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Ortho
function_decl|)
parameter_list|(
name|GLdouble
name|left
parameter_list|,
name|GLdouble
name|right
parameter_list|,
name|GLdouble
name|bottom
parameter_list|,
name|GLdouble
name|top
parameter_list|,
name|GLdouble
name|zNear
parameter_list|,
name|GLdouble
name|zFar
parameter_list|)
function_decl|;
DECL|member|MultMatrixd
name|void
function_decl|(
name|APIENTRY
modifier|*
name|MultMatrixd
function_decl|)
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|m
parameter_list|)
function_decl|;
DECL|member|MultMatrixf
name|void
function_decl|(
name|APIENTRY
modifier|*
name|MultMatrixf
function_decl|)
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|m
parameter_list|)
function_decl|;
DECL|member|MatrixMode
name|void
function_decl|(
name|APIENTRY
modifier|*
name|MatrixMode
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|)
function_decl|;
DECL|member|LoadMatrixd
name|void
function_decl|(
name|APIENTRY
modifier|*
name|LoadMatrixd
function_decl|)
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|m
parameter_list|)
function_decl|;
DECL|member|LoadMatrixf
name|void
function_decl|(
name|APIENTRY
modifier|*
name|LoadMatrixf
function_decl|)
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|m
parameter_list|)
function_decl|;
DECL|member|LoadIdentity
name|void
function_decl|(
name|APIENTRY
modifier|*
name|LoadIdentity
function_decl|)
parameter_list|()
function_decl|;
DECL|member|Frustum
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Frustum
function_decl|)
parameter_list|(
name|GLdouble
name|left
parameter_list|,
name|GLdouble
name|right
parameter_list|,
name|GLdouble
name|bottom
parameter_list|,
name|GLdouble
name|top
parameter_list|,
name|GLdouble
name|zNear
parameter_list|,
name|GLdouble
name|zFar
parameter_list|)
function_decl|;
DECL|member|IsList
name|GLboolean
function_decl|(
name|APIENTRY
modifier|*
name|IsList
function_decl|)
parameter_list|(
name|GLuint
name|list
parameter_list|)
function_decl|;
DECL|member|GetTexGeniv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|GetTexGeniv
function_decl|)
parameter_list|(
name|GLenum
name|coord
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|GetTexGenfv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|GetTexGenfv
function_decl|)
parameter_list|(
name|GLenum
name|coord
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|GetTexGendv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|GetTexGendv
function_decl|)
parameter_list|(
name|GLenum
name|coord
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLdouble
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|GetTexEnviv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|GetTexEnviv
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|GetTexEnvfv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|GetTexEnvfv
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|GetPolygonStipple
name|void
function_decl|(
name|APIENTRY
modifier|*
name|GetPolygonStipple
function_decl|)
parameter_list|(
name|GLubyte
modifier|*
name|mask
parameter_list|)
function_decl|;
DECL|member|GetPixelMapusv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|GetPixelMapusv
function_decl|)
parameter_list|(
name|GLenum
name|map
parameter_list|,
name|GLushort
modifier|*
name|values
parameter_list|)
function_decl|;
DECL|member|GetPixelMapuiv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|GetPixelMapuiv
function_decl|)
parameter_list|(
name|GLenum
name|map
parameter_list|,
name|GLuint
modifier|*
name|values
parameter_list|)
function_decl|;
DECL|member|GetPixelMapfv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|GetPixelMapfv
function_decl|)
parameter_list|(
name|GLenum
name|map
parameter_list|,
name|GLfloat
modifier|*
name|values
parameter_list|)
function_decl|;
DECL|member|GetMaterialiv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|GetMaterialiv
function_decl|)
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|GetMaterialfv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|GetMaterialfv
function_decl|)
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|GetMapiv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|GetMapiv
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|query
parameter_list|,
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|GetMapfv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|GetMapfv
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|query
parameter_list|,
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|GetMapdv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|GetMapdv
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|query
parameter_list|,
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|GetLightiv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|GetLightiv
function_decl|)
parameter_list|(
name|GLenum
name|light
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|GetLightfv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|GetLightfv
function_decl|)
parameter_list|(
name|GLenum
name|light
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|GetClipPlane
name|void
function_decl|(
name|APIENTRY
modifier|*
name|GetClipPlane
function_decl|)
parameter_list|(
name|GLenum
name|plane
parameter_list|,
name|GLdouble
modifier|*
name|equation
parameter_list|)
function_decl|;
DECL|member|DrawPixels
name|void
function_decl|(
name|APIENTRY
modifier|*
name|DrawPixels
function_decl|)
parameter_list|(
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
DECL|member|CopyPixels
name|void
function_decl|(
name|APIENTRY
modifier|*
name|CopyPixels
function_decl|)
parameter_list|(
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|type
parameter_list|)
function_decl|;
DECL|member|PixelMapusv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|PixelMapusv
function_decl|)
parameter_list|(
name|GLenum
name|map
parameter_list|,
name|GLint
name|mapsize
parameter_list|,
specifier|const
name|GLushort
modifier|*
name|values
parameter_list|)
function_decl|;
DECL|member|PixelMapuiv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|PixelMapuiv
function_decl|)
parameter_list|(
name|GLenum
name|map
parameter_list|,
name|GLint
name|mapsize
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|values
parameter_list|)
function_decl|;
DECL|member|PixelMapfv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|PixelMapfv
function_decl|)
parameter_list|(
name|GLenum
name|map
parameter_list|,
name|GLint
name|mapsize
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|values
parameter_list|)
function_decl|;
DECL|member|PixelTransferi
name|void
function_decl|(
name|APIENTRY
modifier|*
name|PixelTransferi
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
DECL|member|PixelTransferf
name|void
function_decl|(
name|APIENTRY
modifier|*
name|PixelTransferf
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
function_decl|;
DECL|member|PixelZoom
name|void
function_decl|(
name|APIENTRY
modifier|*
name|PixelZoom
function_decl|)
parameter_list|(
name|GLfloat
name|xfactor
parameter_list|,
name|GLfloat
name|yfactor
parameter_list|)
function_decl|;
DECL|member|AlphaFunc
name|void
function_decl|(
name|APIENTRY
modifier|*
name|AlphaFunc
function_decl|)
parameter_list|(
name|GLenum
name|func
parameter_list|,
name|GLfloat
name|ref
parameter_list|)
function_decl|;
DECL|member|EvalPoint2
name|void
function_decl|(
name|APIENTRY
modifier|*
name|EvalPoint2
function_decl|)
parameter_list|(
name|GLint
name|i
parameter_list|,
name|GLint
name|j
parameter_list|)
function_decl|;
DECL|member|EvalMesh2
name|void
function_decl|(
name|APIENTRY
modifier|*
name|EvalMesh2
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLint
name|i1
parameter_list|,
name|GLint
name|i2
parameter_list|,
name|GLint
name|j1
parameter_list|,
name|GLint
name|j2
parameter_list|)
function_decl|;
DECL|member|EvalPoint1
name|void
function_decl|(
name|APIENTRY
modifier|*
name|EvalPoint1
function_decl|)
parameter_list|(
name|GLint
name|i
parameter_list|)
function_decl|;
DECL|member|EvalMesh1
name|void
function_decl|(
name|APIENTRY
modifier|*
name|EvalMesh1
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLint
name|i1
parameter_list|,
name|GLint
name|i2
parameter_list|)
function_decl|;
DECL|member|EvalCoord2fv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|EvalCoord2fv
function_decl|)
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|u
parameter_list|)
function_decl|;
DECL|member|EvalCoord2f
name|void
function_decl|(
name|APIENTRY
modifier|*
name|EvalCoord2f
function_decl|)
parameter_list|(
name|GLfloat
name|u
parameter_list|,
name|GLfloat
name|v
parameter_list|)
function_decl|;
DECL|member|EvalCoord2dv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|EvalCoord2dv
function_decl|)
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|u
parameter_list|)
function_decl|;
DECL|member|EvalCoord2d
name|void
function_decl|(
name|APIENTRY
modifier|*
name|EvalCoord2d
function_decl|)
parameter_list|(
name|GLdouble
name|u
parameter_list|,
name|GLdouble
name|v
parameter_list|)
function_decl|;
DECL|member|EvalCoord1fv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|EvalCoord1fv
function_decl|)
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|u
parameter_list|)
function_decl|;
DECL|member|EvalCoord1f
name|void
function_decl|(
name|APIENTRY
modifier|*
name|EvalCoord1f
function_decl|)
parameter_list|(
name|GLfloat
name|u
parameter_list|)
function_decl|;
DECL|member|EvalCoord1dv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|EvalCoord1dv
function_decl|)
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|u
parameter_list|)
function_decl|;
DECL|member|EvalCoord1d
name|void
function_decl|(
name|APIENTRY
modifier|*
name|EvalCoord1d
function_decl|)
parameter_list|(
name|GLdouble
name|u
parameter_list|)
function_decl|;
DECL|member|MapGrid2f
name|void
function_decl|(
name|APIENTRY
modifier|*
name|MapGrid2f
function_decl|)
parameter_list|(
name|GLint
name|un
parameter_list|,
name|GLfloat
name|u1
parameter_list|,
name|GLfloat
name|u2
parameter_list|,
name|GLint
name|vn
parameter_list|,
name|GLfloat
name|v1
parameter_list|,
name|GLfloat
name|v2
parameter_list|)
function_decl|;
DECL|member|MapGrid2d
name|void
function_decl|(
name|APIENTRY
modifier|*
name|MapGrid2d
function_decl|)
parameter_list|(
name|GLint
name|un
parameter_list|,
name|GLdouble
name|u1
parameter_list|,
name|GLdouble
name|u2
parameter_list|,
name|GLint
name|vn
parameter_list|,
name|GLdouble
name|v1
parameter_list|,
name|GLdouble
name|v2
parameter_list|)
function_decl|;
DECL|member|MapGrid1f
name|void
function_decl|(
name|APIENTRY
modifier|*
name|MapGrid1f
function_decl|)
parameter_list|(
name|GLint
name|un
parameter_list|,
name|GLfloat
name|u1
parameter_list|,
name|GLfloat
name|u2
parameter_list|)
function_decl|;
DECL|member|MapGrid1d
name|void
function_decl|(
name|APIENTRY
modifier|*
name|MapGrid1d
function_decl|)
parameter_list|(
name|GLint
name|un
parameter_list|,
name|GLdouble
name|u1
parameter_list|,
name|GLdouble
name|u2
parameter_list|)
function_decl|;
DECL|member|Map2f
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Map2f
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLfloat
name|u1
parameter_list|,
name|GLfloat
name|u2
parameter_list|,
name|GLint
name|ustride
parameter_list|,
name|GLint
name|uorder
parameter_list|,
name|GLfloat
name|v1
parameter_list|,
name|GLfloat
name|v2
parameter_list|,
name|GLint
name|vstride
parameter_list|,
name|GLint
name|vorder
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|points
parameter_list|)
function_decl|;
DECL|member|Map2d
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Map2d
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLdouble
name|u1
parameter_list|,
name|GLdouble
name|u2
parameter_list|,
name|GLint
name|ustride
parameter_list|,
name|GLint
name|uorder
parameter_list|,
name|GLdouble
name|v1
parameter_list|,
name|GLdouble
name|v2
parameter_list|,
name|GLint
name|vstride
parameter_list|,
name|GLint
name|vorder
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|points
parameter_list|)
function_decl|;
DECL|member|Map1f
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Map1f
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLfloat
name|u1
parameter_list|,
name|GLfloat
name|u2
parameter_list|,
name|GLint
name|stride
parameter_list|,
name|GLint
name|order
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|points
parameter_list|)
function_decl|;
DECL|member|Map1d
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Map1d
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLdouble
name|u1
parameter_list|,
name|GLdouble
name|u2
parameter_list|,
name|GLint
name|stride
parameter_list|,
name|GLint
name|order
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|points
parameter_list|)
function_decl|;
DECL|member|PushAttrib
name|void
function_decl|(
name|APIENTRY
modifier|*
name|PushAttrib
function_decl|)
parameter_list|(
name|GLbitfield
name|mask
parameter_list|)
function_decl|;
DECL|member|PopAttrib
name|void
function_decl|(
name|APIENTRY
modifier|*
name|PopAttrib
function_decl|)
parameter_list|()
function_decl|;
DECL|member|Accum
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Accum
function_decl|)
parameter_list|(
name|GLenum
name|op
parameter_list|,
name|GLfloat
name|value
parameter_list|)
function_decl|;
DECL|member|IndexMask
name|void
function_decl|(
name|APIENTRY
modifier|*
name|IndexMask
function_decl|)
parameter_list|(
name|GLuint
name|mask
parameter_list|)
function_decl|;
DECL|member|ClearIndex
name|void
function_decl|(
name|APIENTRY
modifier|*
name|ClearIndex
function_decl|)
parameter_list|(
name|GLfloat
name|c
parameter_list|)
function_decl|;
DECL|member|ClearAccum
name|void
function_decl|(
name|APIENTRY
modifier|*
name|ClearAccum
function_decl|)
parameter_list|(
name|GLfloat
name|red
parameter_list|,
name|GLfloat
name|green
parameter_list|,
name|GLfloat
name|blue
parameter_list|,
name|GLfloat
name|alpha
parameter_list|)
function_decl|;
DECL|member|PushName
name|void
function_decl|(
name|APIENTRY
modifier|*
name|PushName
function_decl|)
parameter_list|(
name|GLuint
name|name
parameter_list|)
function_decl|;
DECL|member|PopName
name|void
function_decl|(
name|APIENTRY
modifier|*
name|PopName
function_decl|)
parameter_list|()
function_decl|;
DECL|member|PassThrough
name|void
function_decl|(
name|APIENTRY
modifier|*
name|PassThrough
function_decl|)
parameter_list|(
name|GLfloat
name|token
parameter_list|)
function_decl|;
DECL|member|LoadName
name|void
function_decl|(
name|APIENTRY
modifier|*
name|LoadName
function_decl|)
parameter_list|(
name|GLuint
name|name
parameter_list|)
function_decl|;
DECL|member|InitNames
name|void
function_decl|(
name|APIENTRY
modifier|*
name|InitNames
function_decl|)
parameter_list|()
function_decl|;
DECL|member|RenderMode
name|GLint
function_decl|(
name|APIENTRY
modifier|*
name|RenderMode
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|)
function_decl|;
DECL|member|SelectBuffer
name|void
function_decl|(
name|APIENTRY
modifier|*
name|SelectBuffer
function_decl|)
parameter_list|(
name|GLsizei
name|size
parameter_list|,
name|GLuint
modifier|*
name|buffer
parameter_list|)
function_decl|;
DECL|member|FeedbackBuffer
name|void
function_decl|(
name|APIENTRY
modifier|*
name|FeedbackBuffer
function_decl|)
parameter_list|(
name|GLsizei
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLfloat
modifier|*
name|buffer
parameter_list|)
function_decl|;
DECL|member|TexGeniv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|TexGeniv
function_decl|)
parameter_list|(
name|GLenum
name|coord
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|TexGeni
name|void
function_decl|(
name|APIENTRY
modifier|*
name|TexGeni
function_decl|)
parameter_list|(
name|GLenum
name|coord
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
DECL|member|TexGenfv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|TexGenfv
function_decl|)
parameter_list|(
name|GLenum
name|coord
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|TexGenf
name|void
function_decl|(
name|APIENTRY
modifier|*
name|TexGenf
function_decl|)
parameter_list|(
name|GLenum
name|coord
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
function_decl|;
DECL|member|TexGendv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|TexGendv
function_decl|)
parameter_list|(
name|GLenum
name|coord
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|TexGend
name|void
function_decl|(
name|APIENTRY
modifier|*
name|TexGend
function_decl|)
parameter_list|(
name|GLenum
name|coord
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLdouble
name|param
parameter_list|)
function_decl|;
DECL|member|TexEnviv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|TexEnviv
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|TexEnvi
name|void
function_decl|(
name|APIENTRY
modifier|*
name|TexEnvi
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
DECL|member|TexEnvfv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|TexEnvfv
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|TexEnvf
name|void
function_decl|(
name|APIENTRY
modifier|*
name|TexEnvf
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
function_decl|;
DECL|member|ShadeModel
name|void
function_decl|(
name|APIENTRY
modifier|*
name|ShadeModel
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|)
function_decl|;
DECL|member|PolygonStipple
name|void
function_decl|(
name|APIENTRY
modifier|*
name|PolygonStipple
function_decl|)
parameter_list|(
specifier|const
name|GLubyte
modifier|*
name|mask
parameter_list|)
function_decl|;
DECL|member|Materialiv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Materialiv
function_decl|)
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|Materiali
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Materiali
function_decl|)
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
DECL|member|Materialfv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Materialfv
function_decl|)
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|Materialf
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Materialf
function_decl|)
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
function_decl|;
DECL|member|LineStipple
name|void
function_decl|(
name|APIENTRY
modifier|*
name|LineStipple
function_decl|)
parameter_list|(
name|GLint
name|factor
parameter_list|,
name|GLushort
name|pattern
parameter_list|)
function_decl|;
DECL|member|LightModeliv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|LightModeliv
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|LightModeli
name|void
function_decl|(
name|APIENTRY
modifier|*
name|LightModeli
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
DECL|member|LightModelfv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|LightModelfv
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|LightModelf
name|void
function_decl|(
name|APIENTRY
modifier|*
name|LightModelf
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
function_decl|;
DECL|member|Lightiv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Lightiv
function_decl|)
parameter_list|(
name|GLenum
name|light
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|Lighti
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Lighti
function_decl|)
parameter_list|(
name|GLenum
name|light
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
DECL|member|Lightfv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Lightfv
function_decl|)
parameter_list|(
name|GLenum
name|light
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|Lightf
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Lightf
function_decl|)
parameter_list|(
name|GLenum
name|light
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
function_decl|;
DECL|member|Fogiv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Fogiv
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|Fogi
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Fogi
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
DECL|member|Fogfv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Fogfv
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|Fogf
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Fogf
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
function_decl|;
DECL|member|ColorMaterial
name|void
function_decl|(
name|APIENTRY
modifier|*
name|ColorMaterial
function_decl|)
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|mode
parameter_list|)
function_decl|;
DECL|member|ClipPlane
name|void
function_decl|(
name|APIENTRY
modifier|*
name|ClipPlane
function_decl|)
parameter_list|(
name|GLenum
name|plane
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|equation
parameter_list|)
function_decl|;
DECL|member|Vertex4sv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Vertex4sv
function_decl|)
parameter_list|(
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|Vertex4s
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Vertex4s
function_decl|)
parameter_list|(
name|GLshort
name|x
parameter_list|,
name|GLshort
name|y
parameter_list|,
name|GLshort
name|z
parameter_list|,
name|GLshort
name|w
parameter_list|)
function_decl|;
DECL|member|Vertex4iv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Vertex4iv
function_decl|)
parameter_list|(
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|Vertex4i
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Vertex4i
function_decl|)
parameter_list|(
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLint
name|z
parameter_list|,
name|GLint
name|w
parameter_list|)
function_decl|;
DECL|member|Vertex4fv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Vertex4fv
function_decl|)
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|Vertex4f
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Vertex4f
function_decl|)
parameter_list|(
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|,
name|GLfloat
name|w
parameter_list|)
function_decl|;
DECL|member|Vertex4dv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Vertex4dv
function_decl|)
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|Vertex4d
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Vertex4d
function_decl|)
parameter_list|(
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|,
name|GLdouble
name|w
parameter_list|)
function_decl|;
DECL|member|Vertex3sv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Vertex3sv
function_decl|)
parameter_list|(
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|Vertex3s
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Vertex3s
function_decl|)
parameter_list|(
name|GLshort
name|x
parameter_list|,
name|GLshort
name|y
parameter_list|,
name|GLshort
name|z
parameter_list|)
function_decl|;
DECL|member|Vertex3iv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Vertex3iv
function_decl|)
parameter_list|(
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|Vertex3i
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Vertex3i
function_decl|)
parameter_list|(
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLint
name|z
parameter_list|)
function_decl|;
DECL|member|Vertex3fv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Vertex3fv
function_decl|)
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|Vertex3f
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Vertex3f
function_decl|)
parameter_list|(
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
DECL|member|Vertex3dv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Vertex3dv
function_decl|)
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|Vertex3d
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Vertex3d
function_decl|)
parameter_list|(
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|)
function_decl|;
DECL|member|Vertex2sv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Vertex2sv
function_decl|)
parameter_list|(
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|Vertex2s
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Vertex2s
function_decl|)
parameter_list|(
name|GLshort
name|x
parameter_list|,
name|GLshort
name|y
parameter_list|)
function_decl|;
DECL|member|Vertex2iv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Vertex2iv
function_decl|)
parameter_list|(
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|Vertex2i
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Vertex2i
function_decl|)
parameter_list|(
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|)
function_decl|;
DECL|member|Vertex2fv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Vertex2fv
function_decl|)
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|Vertex2f
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Vertex2f
function_decl|)
parameter_list|(
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|)
function_decl|;
DECL|member|Vertex2dv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Vertex2dv
function_decl|)
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|Vertex2d
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Vertex2d
function_decl|)
parameter_list|(
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|)
function_decl|;
DECL|member|TexCoord4sv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|TexCoord4sv
function_decl|)
parameter_list|(
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|TexCoord4s
name|void
function_decl|(
name|APIENTRY
modifier|*
name|TexCoord4s
function_decl|)
parameter_list|(
name|GLshort
name|s
parameter_list|,
name|GLshort
name|t
parameter_list|,
name|GLshort
name|r
parameter_list|,
name|GLshort
name|q
parameter_list|)
function_decl|;
DECL|member|TexCoord4iv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|TexCoord4iv
function_decl|)
parameter_list|(
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|TexCoord4i
name|void
function_decl|(
name|APIENTRY
modifier|*
name|TexCoord4i
function_decl|)
parameter_list|(
name|GLint
name|s
parameter_list|,
name|GLint
name|t
parameter_list|,
name|GLint
name|r
parameter_list|,
name|GLint
name|q
parameter_list|)
function_decl|;
DECL|member|TexCoord4fv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|TexCoord4fv
function_decl|)
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|TexCoord4f
name|void
function_decl|(
name|APIENTRY
modifier|*
name|TexCoord4f
function_decl|)
parameter_list|(
name|GLfloat
name|s
parameter_list|,
name|GLfloat
name|t
parameter_list|,
name|GLfloat
name|r
parameter_list|,
name|GLfloat
name|q
parameter_list|)
function_decl|;
DECL|member|TexCoord4dv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|TexCoord4dv
function_decl|)
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|TexCoord4d
name|void
function_decl|(
name|APIENTRY
modifier|*
name|TexCoord4d
function_decl|)
parameter_list|(
name|GLdouble
name|s
parameter_list|,
name|GLdouble
name|t
parameter_list|,
name|GLdouble
name|r
parameter_list|,
name|GLdouble
name|q
parameter_list|)
function_decl|;
DECL|member|TexCoord3sv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|TexCoord3sv
function_decl|)
parameter_list|(
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|TexCoord3s
name|void
function_decl|(
name|APIENTRY
modifier|*
name|TexCoord3s
function_decl|)
parameter_list|(
name|GLshort
name|s
parameter_list|,
name|GLshort
name|t
parameter_list|,
name|GLshort
name|r
parameter_list|)
function_decl|;
DECL|member|TexCoord3iv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|TexCoord3iv
function_decl|)
parameter_list|(
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|TexCoord3i
name|void
function_decl|(
name|APIENTRY
modifier|*
name|TexCoord3i
function_decl|)
parameter_list|(
name|GLint
name|s
parameter_list|,
name|GLint
name|t
parameter_list|,
name|GLint
name|r
parameter_list|)
function_decl|;
DECL|member|TexCoord3fv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|TexCoord3fv
function_decl|)
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|TexCoord3f
name|void
function_decl|(
name|APIENTRY
modifier|*
name|TexCoord3f
function_decl|)
parameter_list|(
name|GLfloat
name|s
parameter_list|,
name|GLfloat
name|t
parameter_list|,
name|GLfloat
name|r
parameter_list|)
function_decl|;
DECL|member|TexCoord3dv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|TexCoord3dv
function_decl|)
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|TexCoord3d
name|void
function_decl|(
name|APIENTRY
modifier|*
name|TexCoord3d
function_decl|)
parameter_list|(
name|GLdouble
name|s
parameter_list|,
name|GLdouble
name|t
parameter_list|,
name|GLdouble
name|r
parameter_list|)
function_decl|;
DECL|member|TexCoord2sv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|TexCoord2sv
function_decl|)
parameter_list|(
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|TexCoord2s
name|void
function_decl|(
name|APIENTRY
modifier|*
name|TexCoord2s
function_decl|)
parameter_list|(
name|GLshort
name|s
parameter_list|,
name|GLshort
name|t
parameter_list|)
function_decl|;
DECL|member|TexCoord2iv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|TexCoord2iv
function_decl|)
parameter_list|(
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|TexCoord2i
name|void
function_decl|(
name|APIENTRY
modifier|*
name|TexCoord2i
function_decl|)
parameter_list|(
name|GLint
name|s
parameter_list|,
name|GLint
name|t
parameter_list|)
function_decl|;
DECL|member|TexCoord2fv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|TexCoord2fv
function_decl|)
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|TexCoord2f
name|void
function_decl|(
name|APIENTRY
modifier|*
name|TexCoord2f
function_decl|)
parameter_list|(
name|GLfloat
name|s
parameter_list|,
name|GLfloat
name|t
parameter_list|)
function_decl|;
DECL|member|TexCoord2dv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|TexCoord2dv
function_decl|)
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|TexCoord2d
name|void
function_decl|(
name|APIENTRY
modifier|*
name|TexCoord2d
function_decl|)
parameter_list|(
name|GLdouble
name|s
parameter_list|,
name|GLdouble
name|t
parameter_list|)
function_decl|;
DECL|member|TexCoord1sv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|TexCoord1sv
function_decl|)
parameter_list|(
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|TexCoord1s
name|void
function_decl|(
name|APIENTRY
modifier|*
name|TexCoord1s
function_decl|)
parameter_list|(
name|GLshort
name|s
parameter_list|)
function_decl|;
DECL|member|TexCoord1iv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|TexCoord1iv
function_decl|)
parameter_list|(
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|TexCoord1i
name|void
function_decl|(
name|APIENTRY
modifier|*
name|TexCoord1i
function_decl|)
parameter_list|(
name|GLint
name|s
parameter_list|)
function_decl|;
DECL|member|TexCoord1fv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|TexCoord1fv
function_decl|)
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|TexCoord1f
name|void
function_decl|(
name|APIENTRY
modifier|*
name|TexCoord1f
function_decl|)
parameter_list|(
name|GLfloat
name|s
parameter_list|)
function_decl|;
DECL|member|TexCoord1dv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|TexCoord1dv
function_decl|)
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|TexCoord1d
name|void
function_decl|(
name|APIENTRY
modifier|*
name|TexCoord1d
function_decl|)
parameter_list|(
name|GLdouble
name|s
parameter_list|)
function_decl|;
DECL|member|Rectsv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Rectsv
function_decl|)
parameter_list|(
specifier|const
name|GLshort
modifier|*
name|v1
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v2
parameter_list|)
function_decl|;
DECL|member|Rects
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Rects
function_decl|)
parameter_list|(
name|GLshort
name|x1
parameter_list|,
name|GLshort
name|y1
parameter_list|,
name|GLshort
name|x2
parameter_list|,
name|GLshort
name|y2
parameter_list|)
function_decl|;
DECL|member|Rectiv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Rectiv
function_decl|)
parameter_list|(
specifier|const
name|GLint
modifier|*
name|v1
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v2
parameter_list|)
function_decl|;
DECL|member|Recti
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Recti
function_decl|)
parameter_list|(
name|GLint
name|x1
parameter_list|,
name|GLint
name|y1
parameter_list|,
name|GLint
name|x2
parameter_list|,
name|GLint
name|y2
parameter_list|)
function_decl|;
DECL|member|Rectfv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Rectfv
function_decl|)
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|v1
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v2
parameter_list|)
function_decl|;
DECL|member|Rectf
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Rectf
function_decl|)
parameter_list|(
name|GLfloat
name|x1
parameter_list|,
name|GLfloat
name|y1
parameter_list|,
name|GLfloat
name|x2
parameter_list|,
name|GLfloat
name|y2
parameter_list|)
function_decl|;
DECL|member|Rectdv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Rectdv
function_decl|)
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|v1
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v2
parameter_list|)
function_decl|;
DECL|member|Rectd
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Rectd
function_decl|)
parameter_list|(
name|GLdouble
name|x1
parameter_list|,
name|GLdouble
name|y1
parameter_list|,
name|GLdouble
name|x2
parameter_list|,
name|GLdouble
name|y2
parameter_list|)
function_decl|;
DECL|member|RasterPos4sv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|RasterPos4sv
function_decl|)
parameter_list|(
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|RasterPos4s
name|void
function_decl|(
name|APIENTRY
modifier|*
name|RasterPos4s
function_decl|)
parameter_list|(
name|GLshort
name|x
parameter_list|,
name|GLshort
name|y
parameter_list|,
name|GLshort
name|z
parameter_list|,
name|GLshort
name|w
parameter_list|)
function_decl|;
DECL|member|RasterPos4iv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|RasterPos4iv
function_decl|)
parameter_list|(
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|RasterPos4i
name|void
function_decl|(
name|APIENTRY
modifier|*
name|RasterPos4i
function_decl|)
parameter_list|(
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLint
name|z
parameter_list|,
name|GLint
name|w
parameter_list|)
function_decl|;
DECL|member|RasterPos4fv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|RasterPos4fv
function_decl|)
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|RasterPos4f
name|void
function_decl|(
name|APIENTRY
modifier|*
name|RasterPos4f
function_decl|)
parameter_list|(
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|,
name|GLfloat
name|w
parameter_list|)
function_decl|;
DECL|member|RasterPos4dv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|RasterPos4dv
function_decl|)
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|RasterPos4d
name|void
function_decl|(
name|APIENTRY
modifier|*
name|RasterPos4d
function_decl|)
parameter_list|(
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|,
name|GLdouble
name|w
parameter_list|)
function_decl|;
DECL|member|RasterPos3sv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|RasterPos3sv
function_decl|)
parameter_list|(
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|RasterPos3s
name|void
function_decl|(
name|APIENTRY
modifier|*
name|RasterPos3s
function_decl|)
parameter_list|(
name|GLshort
name|x
parameter_list|,
name|GLshort
name|y
parameter_list|,
name|GLshort
name|z
parameter_list|)
function_decl|;
DECL|member|RasterPos3iv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|RasterPos3iv
function_decl|)
parameter_list|(
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|RasterPos3i
name|void
function_decl|(
name|APIENTRY
modifier|*
name|RasterPos3i
function_decl|)
parameter_list|(
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLint
name|z
parameter_list|)
function_decl|;
DECL|member|RasterPos3fv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|RasterPos3fv
function_decl|)
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|RasterPos3f
name|void
function_decl|(
name|APIENTRY
modifier|*
name|RasterPos3f
function_decl|)
parameter_list|(
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
DECL|member|RasterPos3dv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|RasterPos3dv
function_decl|)
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|RasterPos3d
name|void
function_decl|(
name|APIENTRY
modifier|*
name|RasterPos3d
function_decl|)
parameter_list|(
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|)
function_decl|;
DECL|member|RasterPos2sv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|RasterPos2sv
function_decl|)
parameter_list|(
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|RasterPos2s
name|void
function_decl|(
name|APIENTRY
modifier|*
name|RasterPos2s
function_decl|)
parameter_list|(
name|GLshort
name|x
parameter_list|,
name|GLshort
name|y
parameter_list|)
function_decl|;
DECL|member|RasterPos2iv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|RasterPos2iv
function_decl|)
parameter_list|(
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|RasterPos2i
name|void
function_decl|(
name|APIENTRY
modifier|*
name|RasterPos2i
function_decl|)
parameter_list|(
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|)
function_decl|;
DECL|member|RasterPos2fv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|RasterPos2fv
function_decl|)
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|RasterPos2f
name|void
function_decl|(
name|APIENTRY
modifier|*
name|RasterPos2f
function_decl|)
parameter_list|(
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|)
function_decl|;
DECL|member|RasterPos2dv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|RasterPos2dv
function_decl|)
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|RasterPos2d
name|void
function_decl|(
name|APIENTRY
modifier|*
name|RasterPos2d
function_decl|)
parameter_list|(
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|)
function_decl|;
DECL|member|Normal3sv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Normal3sv
function_decl|)
parameter_list|(
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|Normal3s
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Normal3s
function_decl|)
parameter_list|(
name|GLshort
name|nx
parameter_list|,
name|GLshort
name|ny
parameter_list|,
name|GLshort
name|nz
parameter_list|)
function_decl|;
DECL|member|Normal3iv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Normal3iv
function_decl|)
parameter_list|(
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|Normal3i
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Normal3i
function_decl|)
parameter_list|(
name|GLint
name|nx
parameter_list|,
name|GLint
name|ny
parameter_list|,
name|GLint
name|nz
parameter_list|)
function_decl|;
DECL|member|Normal3fv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Normal3fv
function_decl|)
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|Normal3f
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Normal3f
function_decl|)
parameter_list|(
name|GLfloat
name|nx
parameter_list|,
name|GLfloat
name|ny
parameter_list|,
name|GLfloat
name|nz
parameter_list|)
function_decl|;
DECL|member|Normal3dv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Normal3dv
function_decl|)
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|Normal3d
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Normal3d
function_decl|)
parameter_list|(
name|GLdouble
name|nx
parameter_list|,
name|GLdouble
name|ny
parameter_list|,
name|GLdouble
name|nz
parameter_list|)
function_decl|;
DECL|member|Normal3bv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Normal3bv
function_decl|)
parameter_list|(
specifier|const
name|GLbyte
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|Normal3b
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Normal3b
function_decl|)
parameter_list|(
name|GLbyte
name|nx
parameter_list|,
name|GLbyte
name|ny
parameter_list|,
name|GLbyte
name|nz
parameter_list|)
function_decl|;
DECL|member|Indexsv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Indexsv
function_decl|)
parameter_list|(
specifier|const
name|GLshort
modifier|*
name|c
parameter_list|)
function_decl|;
DECL|member|Indexs
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Indexs
function_decl|)
parameter_list|(
name|GLshort
name|c
parameter_list|)
function_decl|;
DECL|member|Indexiv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Indexiv
function_decl|)
parameter_list|(
specifier|const
name|GLint
modifier|*
name|c
parameter_list|)
function_decl|;
DECL|member|Indexi
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Indexi
function_decl|)
parameter_list|(
name|GLint
name|c
parameter_list|)
function_decl|;
DECL|member|Indexfv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Indexfv
function_decl|)
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|c
parameter_list|)
function_decl|;
DECL|member|Indexf
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Indexf
function_decl|)
parameter_list|(
name|GLfloat
name|c
parameter_list|)
function_decl|;
DECL|member|Indexdv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Indexdv
function_decl|)
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|c
parameter_list|)
function_decl|;
DECL|member|Indexd
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Indexd
function_decl|)
parameter_list|(
name|GLdouble
name|c
parameter_list|)
function_decl|;
DECL|member|End
name|void
function_decl|(
name|APIENTRY
modifier|*
name|End
function_decl|)
parameter_list|()
function_decl|;
DECL|member|EdgeFlagv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|EdgeFlagv
function_decl|)
parameter_list|(
specifier|const
name|GLboolean
modifier|*
name|flag
parameter_list|)
function_decl|;
DECL|member|EdgeFlag
name|void
function_decl|(
name|APIENTRY
modifier|*
name|EdgeFlag
function_decl|)
parameter_list|(
name|GLboolean
name|flag
parameter_list|)
function_decl|;
DECL|member|Color4usv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Color4usv
function_decl|)
parameter_list|(
specifier|const
name|GLushort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|Color4us
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Color4us
function_decl|)
parameter_list|(
name|GLushort
name|red
parameter_list|,
name|GLushort
name|green
parameter_list|,
name|GLushort
name|blue
parameter_list|,
name|GLushort
name|alpha
parameter_list|)
function_decl|;
DECL|member|Color4uiv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Color4uiv
function_decl|)
parameter_list|(
specifier|const
name|GLuint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|Color4ui
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Color4ui
function_decl|)
parameter_list|(
name|GLuint
name|red
parameter_list|,
name|GLuint
name|green
parameter_list|,
name|GLuint
name|blue
parameter_list|,
name|GLuint
name|alpha
parameter_list|)
function_decl|;
DECL|member|Color4ubv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Color4ubv
function_decl|)
parameter_list|(
specifier|const
name|GLubyte
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|Color4ub
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Color4ub
function_decl|)
parameter_list|(
name|GLubyte
name|red
parameter_list|,
name|GLubyte
name|green
parameter_list|,
name|GLubyte
name|blue
parameter_list|,
name|GLubyte
name|alpha
parameter_list|)
function_decl|;
DECL|member|Color4sv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Color4sv
function_decl|)
parameter_list|(
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|Color4s
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Color4s
function_decl|)
parameter_list|(
name|GLshort
name|red
parameter_list|,
name|GLshort
name|green
parameter_list|,
name|GLshort
name|blue
parameter_list|,
name|GLshort
name|alpha
parameter_list|)
function_decl|;
DECL|member|Color4iv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Color4iv
function_decl|)
parameter_list|(
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|Color4i
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Color4i
function_decl|)
parameter_list|(
name|GLint
name|red
parameter_list|,
name|GLint
name|green
parameter_list|,
name|GLint
name|blue
parameter_list|,
name|GLint
name|alpha
parameter_list|)
function_decl|;
DECL|member|Color4fv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Color4fv
function_decl|)
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|Color4f
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Color4f
function_decl|)
parameter_list|(
name|GLfloat
name|red
parameter_list|,
name|GLfloat
name|green
parameter_list|,
name|GLfloat
name|blue
parameter_list|,
name|GLfloat
name|alpha
parameter_list|)
function_decl|;
DECL|member|Color4dv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Color4dv
function_decl|)
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|Color4d
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Color4d
function_decl|)
parameter_list|(
name|GLdouble
name|red
parameter_list|,
name|GLdouble
name|green
parameter_list|,
name|GLdouble
name|blue
parameter_list|,
name|GLdouble
name|alpha
parameter_list|)
function_decl|;
DECL|member|Color4bv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Color4bv
function_decl|)
parameter_list|(
specifier|const
name|GLbyte
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|Color4b
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Color4b
function_decl|)
parameter_list|(
name|GLbyte
name|red
parameter_list|,
name|GLbyte
name|green
parameter_list|,
name|GLbyte
name|blue
parameter_list|,
name|GLbyte
name|alpha
parameter_list|)
function_decl|;
DECL|member|Color3usv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Color3usv
function_decl|)
parameter_list|(
specifier|const
name|GLushort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|Color3us
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Color3us
function_decl|)
parameter_list|(
name|GLushort
name|red
parameter_list|,
name|GLushort
name|green
parameter_list|,
name|GLushort
name|blue
parameter_list|)
function_decl|;
DECL|member|Color3uiv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Color3uiv
function_decl|)
parameter_list|(
specifier|const
name|GLuint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|Color3ui
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Color3ui
function_decl|)
parameter_list|(
name|GLuint
name|red
parameter_list|,
name|GLuint
name|green
parameter_list|,
name|GLuint
name|blue
parameter_list|)
function_decl|;
DECL|member|Color3ubv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Color3ubv
function_decl|)
parameter_list|(
specifier|const
name|GLubyte
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|Color3ub
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Color3ub
function_decl|)
parameter_list|(
name|GLubyte
name|red
parameter_list|,
name|GLubyte
name|green
parameter_list|,
name|GLubyte
name|blue
parameter_list|)
function_decl|;
DECL|member|Color3sv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Color3sv
function_decl|)
parameter_list|(
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|Color3s
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Color3s
function_decl|)
parameter_list|(
name|GLshort
name|red
parameter_list|,
name|GLshort
name|green
parameter_list|,
name|GLshort
name|blue
parameter_list|)
function_decl|;
DECL|member|Color3iv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Color3iv
function_decl|)
parameter_list|(
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|Color3i
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Color3i
function_decl|)
parameter_list|(
name|GLint
name|red
parameter_list|,
name|GLint
name|green
parameter_list|,
name|GLint
name|blue
parameter_list|)
function_decl|;
DECL|member|Color3fv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Color3fv
function_decl|)
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|Color3f
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Color3f
function_decl|)
parameter_list|(
name|GLfloat
name|red
parameter_list|,
name|GLfloat
name|green
parameter_list|,
name|GLfloat
name|blue
parameter_list|)
function_decl|;
DECL|member|Color3dv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Color3dv
function_decl|)
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|Color3d
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Color3d
function_decl|)
parameter_list|(
name|GLdouble
name|red
parameter_list|,
name|GLdouble
name|green
parameter_list|,
name|GLdouble
name|blue
parameter_list|)
function_decl|;
DECL|member|Color3bv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Color3bv
function_decl|)
parameter_list|(
specifier|const
name|GLbyte
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|Color3b
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Color3b
function_decl|)
parameter_list|(
name|GLbyte
name|red
parameter_list|,
name|GLbyte
name|green
parameter_list|,
name|GLbyte
name|blue
parameter_list|)
function_decl|;
DECL|member|Bitmap
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Bitmap
function_decl|)
parameter_list|(
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLfloat
name|xorig
parameter_list|,
name|GLfloat
name|yorig
parameter_list|,
name|GLfloat
name|xmove
parameter_list|,
name|GLfloat
name|ymove
parameter_list|,
specifier|const
name|GLubyte
modifier|*
name|bitmap
parameter_list|)
function_decl|;
DECL|member|Begin
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Begin
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|)
function_decl|;
DECL|member|ListBase
name|void
function_decl|(
name|APIENTRY
modifier|*
name|ListBase
function_decl|)
parameter_list|(
name|GLuint
name|base
parameter_list|)
function_decl|;
DECL|member|GenLists
name|GLuint
function_decl|(
name|APIENTRY
modifier|*
name|GenLists
function_decl|)
parameter_list|(
name|GLsizei
name|range
parameter_list|)
function_decl|;
DECL|member|DeleteLists
name|void
function_decl|(
name|APIENTRY
modifier|*
name|DeleteLists
function_decl|)
parameter_list|(
name|GLuint
name|list
parameter_list|,
name|GLsizei
name|range
parameter_list|)
function_decl|;
DECL|member|CallLists
name|void
function_decl|(
name|APIENTRY
modifier|*
name|CallLists
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|lists
parameter_list|)
function_decl|;
DECL|member|CallList
name|void
function_decl|(
name|APIENTRY
modifier|*
name|CallList
function_decl|)
parameter_list|(
name|GLuint
name|list
parameter_list|)
function_decl|;
DECL|member|EndList
name|void
function_decl|(
name|APIENTRY
modifier|*
name|EndList
function_decl|)
parameter_list|()
function_decl|;
DECL|member|NewList
name|void
function_decl|(
name|APIENTRY
modifier|*
name|NewList
function_decl|)
parameter_list|(
name|GLuint
name|list
parameter_list|,
name|GLenum
name|mode
parameter_list|)
function_decl|;
comment|// OpenGL 1.1
DECL|member|Indexubv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Indexubv
function_decl|)
parameter_list|(
specifier|const
name|GLubyte
modifier|*
name|c
parameter_list|)
function_decl|;
DECL|member|Indexub
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Indexub
function_decl|)
parameter_list|(
name|GLubyte
name|c
parameter_list|)
function_decl|;
DECL|member|IsTexture
name|GLboolean
function_decl|(
name|APIENTRY
modifier|*
name|IsTexture
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|)
function_decl|;
DECL|member|GenTextures
name|void
function_decl|(
name|APIENTRY
modifier|*
name|GenTextures
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|textures
parameter_list|)
function_decl|;
DECL|member|DeleteTextures
name|void
function_decl|(
name|APIENTRY
modifier|*
name|DeleteTextures
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|textures
parameter_list|)
function_decl|;
DECL|member|BindTexture
name|void
function_decl|(
name|APIENTRY
modifier|*
name|BindTexture
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|texture
parameter_list|)
function_decl|;
DECL|member|TexSubImage2D
name|void
function_decl|(
name|APIENTRY
modifier|*
name|TexSubImage2D
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
DECL|member|TexSubImage1D
name|void
function_decl|(
name|APIENTRY
modifier|*
name|TexSubImage1D
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
DECL|member|CopyTexSubImage2D
name|void
function_decl|(
name|APIENTRY
modifier|*
name|CopyTexSubImage2D
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
DECL|member|CopyTexSubImage1D
name|void
function_decl|(
name|APIENTRY
modifier|*
name|CopyTexSubImage1D
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|)
function_decl|;
DECL|member|CopyTexImage2D
name|void
function_decl|(
name|APIENTRY
modifier|*
name|CopyTexImage2D
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLint
name|border
parameter_list|)
function_decl|;
DECL|member|CopyTexImage1D
name|void
function_decl|(
name|APIENTRY
modifier|*
name|CopyTexImage1D
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLint
name|border
parameter_list|)
function_decl|;
DECL|member|PolygonOffset
name|void
function_decl|(
name|APIENTRY
modifier|*
name|PolygonOffset
function_decl|)
parameter_list|(
name|GLfloat
name|factor
parameter_list|,
name|GLfloat
name|units
parameter_list|)
function_decl|;
DECL|member|GetPointerv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|GetPointerv
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLvoid
modifier|*
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|DrawElements
name|void
function_decl|(
name|APIENTRY
modifier|*
name|DrawElements
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|indices
parameter_list|)
function_decl|;
DECL|member|DrawArrays
name|void
function_decl|(
name|APIENTRY
modifier|*
name|DrawArrays
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLint
name|first
parameter_list|,
name|GLsizei
name|count
parameter_list|)
function_decl|;
DECL|member|PushClientAttrib
name|void
function_decl|(
name|APIENTRY
modifier|*
name|PushClientAttrib
function_decl|)
parameter_list|(
name|GLbitfield
name|mask
parameter_list|)
function_decl|;
DECL|member|PopClientAttrib
name|void
function_decl|(
name|APIENTRY
modifier|*
name|PopClientAttrib
function_decl|)
parameter_list|()
function_decl|;
DECL|member|PrioritizeTextures
name|void
function_decl|(
name|APIENTRY
modifier|*
name|PrioritizeTextures
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|textures
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|priorities
parameter_list|)
function_decl|;
DECL|member|AreTexturesResident
name|GLboolean
function_decl|(
name|APIENTRY
modifier|*
name|AreTexturesResident
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|textures
parameter_list|,
name|GLboolean
modifier|*
name|residences
parameter_list|)
function_decl|;
DECL|member|VertexPointer
name|void
function_decl|(
name|APIENTRY
modifier|*
name|VertexPointer
function_decl|)
parameter_list|(
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
DECL|member|TexCoordPointer
name|void
function_decl|(
name|APIENTRY
modifier|*
name|TexCoordPointer
function_decl|)
parameter_list|(
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
DECL|member|NormalPointer
name|void
function_decl|(
name|APIENTRY
modifier|*
name|NormalPointer
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
DECL|member|InterleavedArrays
name|void
function_decl|(
name|APIENTRY
modifier|*
name|InterleavedArrays
function_decl|)
parameter_list|(
name|GLenum
name|format
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
DECL|member|IndexPointer
name|void
function_decl|(
name|APIENTRY
modifier|*
name|IndexPointer
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
DECL|member|EnableClientState
name|void
function_decl|(
name|APIENTRY
modifier|*
name|EnableClientState
function_decl|)
parameter_list|(
name|GLenum
name|array
parameter_list|)
function_decl|;
DECL|member|EdgeFlagPointer
name|void
function_decl|(
name|APIENTRY
modifier|*
name|EdgeFlagPointer
function_decl|)
parameter_list|(
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
DECL|member|DisableClientState
name|void
function_decl|(
name|APIENTRY
modifier|*
name|DisableClientState
function_decl|)
parameter_list|(
name|GLenum
name|array
parameter_list|)
function_decl|;
DECL|member|ColorPointer
name|void
function_decl|(
name|APIENTRY
modifier|*
name|ColorPointer
function_decl|)
parameter_list|(
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
DECL|member|ArrayElement
name|void
function_decl|(
name|APIENTRY
modifier|*
name|ArrayElement
function_decl|)
parameter_list|(
name|GLint
name|i
parameter_list|)
function_decl|;
comment|// OpenGL ES 2.0
DECL|member|ActiveTexture
name|void
function_decl|(
name|APIENTRY
modifier|*
name|ActiveTexture
function_decl|)
parameter_list|(
name|GLenum
name|texture
parameter_list|)
function_decl|;
DECL|member|AttachShader
name|void
function_decl|(
name|APIENTRY
modifier|*
name|AttachShader
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|shader
parameter_list|)
function_decl|;
DECL|member|BindAttribLocation
name|void
function_decl|(
name|APIENTRY
modifier|*
name|BindAttribLocation
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
DECL|member|BindBuffer
name|void
function_decl|(
name|APIENTRY
modifier|*
name|BindBuffer
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|buffer
parameter_list|)
function_decl|;
DECL|member|BindFramebuffer
name|void
function_decl|(
name|APIENTRY
modifier|*
name|BindFramebuffer
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|framebuffer
parameter_list|)
function_decl|;
DECL|member|BindRenderbuffer
name|void
function_decl|(
name|APIENTRY
modifier|*
name|BindRenderbuffer
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|renderbuffer
parameter_list|)
function_decl|;
DECL|member|BlendColor
name|void
function_decl|(
name|APIENTRY
modifier|*
name|BlendColor
function_decl|)
parameter_list|(
name|GLclampf
name|red
parameter_list|,
name|GLclampf
name|green
parameter_list|,
name|GLclampf
name|blue
parameter_list|,
name|GLclampf
name|alpha
parameter_list|)
function_decl|;
DECL|member|BlendEquation
name|void
function_decl|(
name|APIENTRY
modifier|*
name|BlendEquation
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|)
function_decl|;
DECL|member|BlendEquationSeparate
name|void
function_decl|(
name|APIENTRY
modifier|*
name|BlendEquationSeparate
function_decl|)
parameter_list|(
name|GLenum
name|modeRGB
parameter_list|,
name|GLenum
name|modeAlpha
parameter_list|)
function_decl|;
DECL|member|BlendFuncSeparate
name|void
function_decl|(
name|APIENTRY
modifier|*
name|BlendFuncSeparate
function_decl|)
parameter_list|(
name|GLenum
name|srcRGB
parameter_list|,
name|GLenum
name|dstRGB
parameter_list|,
name|GLenum
name|srcAlpha
parameter_list|,
name|GLenum
name|dstAlpha
parameter_list|)
function_decl|;
DECL|member|BufferData
name|void
function_decl|(
name|APIENTRY
modifier|*
name|BufferData
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizeiptr
name|size
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|data
parameter_list|,
name|GLenum
name|usage
parameter_list|)
function_decl|;
DECL|member|BufferSubData
name|void
function_decl|(
name|APIENTRY
modifier|*
name|BufferSubData
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLintptr
name|offset
parameter_list|,
name|GLsizeiptr
name|size
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|member|CheckFramebufferStatus
name|GLenum
function_decl|(
name|APIENTRY
modifier|*
name|CheckFramebufferStatus
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
DECL|member|ClearDepthf
name|void
function_decl|(
name|APIENTRY
modifier|*
name|ClearDepthf
function_decl|)
parameter_list|(
name|GLclampf
name|depth
parameter_list|)
function_decl|;
DECL|member|CompileShader
name|void
function_decl|(
name|APIENTRY
modifier|*
name|CompileShader
function_decl|)
parameter_list|(
name|GLuint
name|shader
parameter_list|)
function_decl|;
DECL|member|CompressedTexImage2D
name|void
function_decl|(
name|APIENTRY
modifier|*
name|CompressedTexImage2D
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|member|CompressedTexSubImage2D
name|void
function_decl|(
name|APIENTRY
modifier|*
name|CompressedTexSubImage2D
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|member|CreateProgram
name|GLuint
function_decl|(
name|APIENTRY
modifier|*
name|CreateProgram
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
DECL|member|CreateShader
name|GLuint
function_decl|(
name|APIENTRY
modifier|*
name|CreateShader
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|)
function_decl|;
DECL|member|DeleteBuffers
name|void
function_decl|(
name|APIENTRY
modifier|*
name|DeleteBuffers
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|buffers
parameter_list|)
function_decl|;
DECL|member|DeleteFramebuffers
name|void
function_decl|(
name|APIENTRY
modifier|*
name|DeleteFramebuffers
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|framebuffers
parameter_list|)
function_decl|;
DECL|member|DeleteProgram
name|void
function_decl|(
name|APIENTRY
modifier|*
name|DeleteProgram
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|)
function_decl|;
DECL|member|DeleteRenderbuffers
name|void
function_decl|(
name|APIENTRY
modifier|*
name|DeleteRenderbuffers
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|renderbuffers
parameter_list|)
function_decl|;
DECL|member|DeleteShader
name|void
function_decl|(
name|APIENTRY
modifier|*
name|DeleteShader
function_decl|)
parameter_list|(
name|GLuint
name|shader
parameter_list|)
function_decl|;
DECL|member|DepthRangef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|DepthRangef
function_decl|)
parameter_list|(
name|GLclampf
name|zNear
parameter_list|,
name|GLclampf
name|zFar
parameter_list|)
function_decl|;
DECL|member|DetachShader
name|void
function_decl|(
name|APIENTRY
modifier|*
name|DetachShader
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|shader
parameter_list|)
function_decl|;
DECL|member|DisableVertexAttribArray
name|void
function_decl|(
name|APIENTRY
modifier|*
name|DisableVertexAttribArray
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|)
function_decl|;
DECL|member|EnableVertexAttribArray
name|void
function_decl|(
name|APIENTRY
modifier|*
name|EnableVertexAttribArray
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|)
function_decl|;
DECL|member|FramebufferRenderbuffer
name|void
function_decl|(
name|APIENTRY
modifier|*
name|FramebufferRenderbuffer
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|renderbuffertarget
parameter_list|,
name|GLuint
name|renderbuffer
parameter_list|)
function_decl|;
DECL|member|FramebufferTexture2D
name|void
function_decl|(
name|APIENTRY
modifier|*
name|FramebufferTexture2D
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|textarget
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|)
function_decl|;
DECL|member|GenBuffers
name|void
function_decl|(
name|APIENTRY
modifier|*
name|GenBuffers
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|buffers
parameter_list|)
function_decl|;
DECL|member|GenerateMipmap
name|void
function_decl|(
name|APIENTRY
modifier|*
name|GenerateMipmap
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
DECL|member|GenFramebuffers
name|void
function_decl|(
name|APIENTRY
modifier|*
name|GenFramebuffers
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|framebuffers
parameter_list|)
function_decl|;
DECL|member|GenRenderbuffers
name|void
function_decl|(
name|APIENTRY
modifier|*
name|GenRenderbuffers
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|renderbuffers
parameter_list|)
function_decl|;
DECL|member|GetActiveAttrib
name|void
function_decl|(
name|APIENTRY
modifier|*
name|GetActiveAttrib
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|bufsize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLint
modifier|*
name|size
parameter_list|,
name|GLenum
modifier|*
name|type
parameter_list|,
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
DECL|member|GetActiveUniform
name|void
function_decl|(
name|APIENTRY
modifier|*
name|GetActiveUniform
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|bufsize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLint
modifier|*
name|size
parameter_list|,
name|GLenum
modifier|*
name|type
parameter_list|,
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
DECL|member|GetAttachedShaders
name|void
function_decl|(
name|APIENTRY
modifier|*
name|GetAttachedShaders
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLsizei
name|maxcount
parameter_list|,
name|GLsizei
modifier|*
name|count
parameter_list|,
name|GLuint
modifier|*
name|shaders
parameter_list|)
function_decl|;
DECL|member|GetAttribLocation
name|int
function_decl|(
name|APIENTRY
modifier|*
name|GetAttribLocation
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
DECL|member|GetBufferParameteriv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|GetBufferParameteriv
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|GetFramebufferAttachmentParameteriv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|GetFramebufferAttachmentParameteriv
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|GetProgramiv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|GetProgramiv
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|GetProgramInfoLog
name|void
function_decl|(
name|APIENTRY
modifier|*
name|GetProgramInfoLog
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLsizei
name|bufsize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|infolog
parameter_list|)
function_decl|;
DECL|member|GetRenderbufferParameteriv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|GetRenderbufferParameteriv
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|GetShaderiv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|GetShaderiv
function_decl|)
parameter_list|(
name|GLuint
name|shader
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|GetShaderInfoLog
name|void
function_decl|(
name|APIENTRY
modifier|*
name|GetShaderInfoLog
function_decl|)
parameter_list|(
name|GLuint
name|shader
parameter_list|,
name|GLsizei
name|bufsize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|infolog
parameter_list|)
function_decl|;
DECL|member|GetShaderPrecisionFormat
name|void
function_decl|(
name|APIENTRY
modifier|*
name|GetShaderPrecisionFormat
function_decl|)
parameter_list|(
name|GLenum
name|shadertype
parameter_list|,
name|GLenum
name|precisiontype
parameter_list|,
name|GLint
modifier|*
name|range
parameter_list|,
name|GLint
modifier|*
name|precision
parameter_list|)
function_decl|;
DECL|member|GetShaderSource
name|void
function_decl|(
name|APIENTRY
modifier|*
name|GetShaderSource
function_decl|)
parameter_list|(
name|GLuint
name|shader
parameter_list|,
name|GLsizei
name|bufsize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|source
parameter_list|)
function_decl|;
DECL|member|GetUniformfv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|GetUniformfv
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|GetUniformiv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|GetUniformiv
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|GetUniformLocation
name|int
function_decl|(
name|APIENTRY
modifier|*
name|GetUniformLocation
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
DECL|member|GetVertexAttribfv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|GetVertexAttribfv
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|GetVertexAttribiv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|GetVertexAttribiv
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|GetVertexAttribPointerv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|GetVertexAttribPointerv
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLvoid
modifier|*
modifier|*
name|pointer
parameter_list|)
function_decl|;
DECL|member|IsBuffer
name|GLboolean
function_decl|(
name|APIENTRY
modifier|*
name|IsBuffer
function_decl|)
parameter_list|(
name|GLuint
name|buffer
parameter_list|)
function_decl|;
DECL|member|IsFramebuffer
name|GLboolean
function_decl|(
name|APIENTRY
modifier|*
name|IsFramebuffer
function_decl|)
parameter_list|(
name|GLuint
name|framebuffer
parameter_list|)
function_decl|;
DECL|member|IsProgram
name|GLboolean
function_decl|(
name|APIENTRY
modifier|*
name|IsProgram
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|)
function_decl|;
DECL|member|IsRenderbuffer
name|GLboolean
function_decl|(
name|APIENTRY
modifier|*
name|IsRenderbuffer
function_decl|)
parameter_list|(
name|GLuint
name|renderbuffer
parameter_list|)
function_decl|;
DECL|member|IsShader
name|GLboolean
function_decl|(
name|APIENTRY
modifier|*
name|IsShader
function_decl|)
parameter_list|(
name|GLuint
name|shader
parameter_list|)
function_decl|;
DECL|member|LinkProgram
name|void
function_decl|(
name|APIENTRY
modifier|*
name|LinkProgram
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|)
function_decl|;
DECL|member|ReleaseShaderCompiler
name|void
function_decl|(
name|APIENTRY
modifier|*
name|ReleaseShaderCompiler
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
DECL|member|RenderbufferStorage
name|void
function_decl|(
name|APIENTRY
modifier|*
name|RenderbufferStorage
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
DECL|member|SampleCoverage
name|void
function_decl|(
name|APIENTRY
modifier|*
name|SampleCoverage
function_decl|)
parameter_list|(
name|GLclampf
name|value
parameter_list|,
name|GLboolean
name|invert
parameter_list|)
function_decl|;
DECL|member|ShaderBinary
name|void
function_decl|(
name|APIENTRY
modifier|*
name|ShaderBinary
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|shaders
parameter_list|,
name|GLenum
name|binaryformat
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|binary
parameter_list|,
name|GLsizei
name|length
parameter_list|)
function_decl|;
DECL|member|ShaderSource
name|void
function_decl|(
name|APIENTRY
modifier|*
name|ShaderSource
function_decl|)
parameter_list|(
name|GLuint
name|shader
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLchar
modifier|*
modifier|*
name|string
parameter_list|,
specifier|const
name|GLint
modifier|*
name|length
parameter_list|)
function_decl|;
DECL|member|StencilFuncSeparate
name|void
function_decl|(
name|APIENTRY
modifier|*
name|StencilFuncSeparate
function_decl|)
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|func
parameter_list|,
name|GLint
name|ref
parameter_list|,
name|GLuint
name|mask
parameter_list|)
function_decl|;
DECL|member|StencilMaskSeparate
name|void
function_decl|(
name|APIENTRY
modifier|*
name|StencilMaskSeparate
function_decl|)
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLuint
name|mask
parameter_list|)
function_decl|;
DECL|member|StencilOpSeparate
name|void
function_decl|(
name|APIENTRY
modifier|*
name|StencilOpSeparate
function_decl|)
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|fail
parameter_list|,
name|GLenum
name|zfail
parameter_list|,
name|GLenum
name|zpass
parameter_list|)
function_decl|;
DECL|member|Uniform1f
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Uniform1f
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLfloat
name|x
parameter_list|)
function_decl|;
DECL|member|Uniform1fv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Uniform1fv
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|Uniform1i
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Uniform1i
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLint
name|x
parameter_list|)
function_decl|;
DECL|member|Uniform1iv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Uniform1iv
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|Uniform2f
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Uniform2f
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|)
function_decl|;
DECL|member|Uniform2fv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Uniform2fv
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|Uniform2i
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Uniform2i
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|)
function_decl|;
DECL|member|Uniform2iv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Uniform2iv
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|Uniform3f
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Uniform3f
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
DECL|member|Uniform3fv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Uniform3fv
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|Uniform3i
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Uniform3i
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLint
name|z
parameter_list|)
function_decl|;
DECL|member|Uniform3iv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Uniform3iv
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|Uniform4f
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Uniform4f
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|,
name|GLfloat
name|w
parameter_list|)
function_decl|;
DECL|member|Uniform4fv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Uniform4fv
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|Uniform4i
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Uniform4i
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLint
name|z
parameter_list|,
name|GLint
name|w
parameter_list|)
function_decl|;
DECL|member|Uniform4iv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|Uniform4iv
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|UniformMatrix2fv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|UniformMatrix2fv
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|member|UniformMatrix3fv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|UniformMatrix3fv
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|member|UniformMatrix4fv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|UniformMatrix4fv
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|member|UseProgram
name|void
function_decl|(
name|APIENTRY
modifier|*
name|UseProgram
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|)
function_decl|;
DECL|member|ValidateProgram
name|void
function_decl|(
name|APIENTRY
modifier|*
name|ValidateProgram
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|)
function_decl|;
DECL|member|VertexAttrib1f
name|void
function_decl|(
name|APIENTRY
modifier|*
name|VertexAttrib1f
function_decl|)
parameter_list|(
name|GLuint
name|indx
parameter_list|,
name|GLfloat
name|x
parameter_list|)
function_decl|;
DECL|member|VertexAttrib1fv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|VertexAttrib1fv
function_decl|)
parameter_list|(
name|GLuint
name|indx
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|values
parameter_list|)
function_decl|;
DECL|member|VertexAttrib2f
name|void
function_decl|(
name|APIENTRY
modifier|*
name|VertexAttrib2f
function_decl|)
parameter_list|(
name|GLuint
name|indx
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|)
function_decl|;
DECL|member|VertexAttrib2fv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|VertexAttrib2fv
function_decl|)
parameter_list|(
name|GLuint
name|indx
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|values
parameter_list|)
function_decl|;
DECL|member|VertexAttrib3f
name|void
function_decl|(
name|APIENTRY
modifier|*
name|VertexAttrib3f
function_decl|)
parameter_list|(
name|GLuint
name|indx
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
DECL|member|VertexAttrib3fv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|VertexAttrib3fv
function_decl|)
parameter_list|(
name|GLuint
name|indx
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|values
parameter_list|)
function_decl|;
DECL|member|VertexAttrib4f
name|void
function_decl|(
name|APIENTRY
modifier|*
name|VertexAttrib4f
function_decl|)
parameter_list|(
name|GLuint
name|indx
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|,
name|GLfloat
name|w
parameter_list|)
function_decl|;
DECL|member|VertexAttrib4fv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|VertexAttrib4fv
function_decl|)
parameter_list|(
name|GLuint
name|indx
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|values
parameter_list|)
function_decl|;
DECL|member|VertexAttribPointer
name|void
function_decl|(
name|APIENTRY
modifier|*
name|VertexAttribPointer
function_decl|)
parameter_list|(
name|GLuint
name|indx
parameter_list|,
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLboolean
name|normalized
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|ptr
parameter_list|)
function_decl|;
protected|protected:
DECL|member|m_lib
name|HMODULE
name|m_lib
decl_stmt|;
DECL|member|m_libraryType
name|LibType
name|m_libraryType
decl_stmt|;
DECL|member|m_loaded
name|bool
name|m_loaded
decl_stmt|;
block|}
class|;
end_class
begin_class
DECL|class|QWindowsOpenGL
class|class
name|QWindowsOpenGL
super|:
specifier|public
name|QAbstractWindowsOpenGL
block|{
public|public:
name|QWindowsOpenGL
parameter_list|()
constructor_decl|;
name|~
name|QWindowsOpenGL
parameter_list|()
destructor_decl|;
private|private:
name|bool
name|load
parameter_list|(
specifier|const
name|char
modifier|*
name|glName
parameter_list|,
specifier|const
name|char
modifier|*
name|eglName
parameter_list|)
function_decl|;
name|void
name|unload
parameter_list|()
function_decl|;
name|void
name|resolve
parameter_list|()
function_decl|;
name|void
name|resolveWGL
parameter_list|()
function_decl|;
name|void
name|resolveEGL
parameter_list|()
function_decl|;
name|void
name|resolveGLCommon
parameter_list|()
function_decl|;
name|void
name|resolveGL11
parameter_list|()
function_decl|;
name|void
name|resolveGLES2
parameter_list|()
function_decl|;
name|FARPROC
name|resolveFunc
parameter_list|(
specifier|const
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
name|FARPROC
name|resolveEglFunc
parameter_list|(
specifier|const
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
name|bool
name|testDesktopGL
parameter_list|()
function_decl|;
DECL|member|m_eglLib
name|HMODULE
name|m_eglLib
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|qgl_windowsErrorMessage
specifier|static
name|QString
name|qgl_windowsErrorMessage
parameter_list|(
name|unsigned
name|long
name|errorCode
parameter_list|)
block|{
name|QString
name|rc
init|=
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"#%1: "
argument_list|)
operator|.
name|arg
argument_list|(
name|errorCode
argument_list|)
decl_stmt|;
name|ushort
modifier|*
name|lpMsgBuf
decl_stmt|;
specifier|const
name|int
name|len
init|=
name|FormatMessage
argument_list|(
name|FORMAT_MESSAGE_ALLOCATE_BUFFER
operator||
name|FORMAT_MESSAGE_FROM_SYSTEM
operator||
name|FORMAT_MESSAGE_IGNORE_INSERTS
argument_list|,
name|NULL
argument_list|,
name|errorCode
argument_list|,
literal|0
argument_list|,
operator|(
name|LPTSTR
operator|)
operator|&
name|lpMsgBuf
argument_list|,
literal|0
argument_list|,
name|NULL
argument_list|)
decl_stmt|;
if|if
condition|(
name|len
condition|)
block|{
name|rc
operator|=
name|QString
operator|::
name|fromUtf16
argument_list|(
name|lpMsgBuf
argument_list|,
name|len
argument_list|)
expr_stmt|;
name|LocalFree
argument_list|(
name|lpMsgBuf
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|rc
operator|+=
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"<unknown error>"
argument_list|)
expr_stmt|;
block|}
return|return
name|rc
return|;
block|}
end_function
begin_function
DECL|function|qgl_loadLib
specifier|static
name|HMODULE
name|qgl_loadLib
parameter_list|(
specifier|const
name|char
modifier|*
name|name
parameter_list|,
name|bool
name|warnOnFail
init|=
literal|true
parameter_list|)
block|{
name|HMODULE
name|lib
init|=
name|LoadLibraryA
argument_list|(
name|name
argument_list|)
decl_stmt|;
if|if
condition|(
name|lib
condition|)
return|return
name|lib
return|;
if|if
condition|(
name|warnOnFail
condition|)
block|{
name|QString
name|msg
init|=
name|qgl_windowsErrorMessage
argument_list|(
name|GetLastError
argument_list|()
argument_list|)
decl_stmt|;
name|qCWarning
argument_list|(
name|qglLc
argument_list|,
literal|"Failed to load %s (%s)"
argument_list|,
name|name
argument_list|,
name|qPrintable
argument_list|(
name|msg
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
literal|0
return|;
block|}
end_function
begin_constructor
DECL|function|QWindowsOpenGL
name|QWindowsOpenGL
operator|::
name|QWindowsOpenGL
parameter_list|()
member_init_list|:
name|m_eglLib
argument_list|(
literal|0
argument_list|)
block|{
name|qglLc
argument_list|()
operator|.
name|setEnabled
argument_list|(
name|QtWarningMsg
argument_list|,
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|qEnvironmentVariableIsSet
argument_list|(
literal|"QT_OPENGLPROXY_DEBUG"
argument_list|)
condition|)
name|qglLc
argument_list|()
operator|.
name|setEnabled
argument_list|(
name|QtDebugMsg
argument_list|,
literal|true
argument_list|)
expr_stmt|;
enum|enum
name|RequestedLib
block|{
name|Unknown
block|,
name|Desktop
block|,
name|GLES
block|}
name|req
init|=
name|Unknown
enum|;
comment|// Check if the application has requested a certain implementation.
if|if
condition|(
name|QCoreApplication
operator|::
name|testAttribute
argument_list|(
name|Qt
operator|::
name|AA_UseDesktopOpenGL
argument_list|)
condition|)
name|req
operator|=
name|Desktop
expr_stmt|;
elseif|else
if|if
condition|(
name|QCoreApplication
operator|::
name|testAttribute
argument_list|(
name|Qt
operator|::
name|AA_UseOpenGLES
argument_list|)
condition|)
name|req
operator|=
name|GLES
expr_stmt|;
comment|// Check if an implementation is forced through the environment variable.
name|QByteArray
name|requested
init|=
name|qgetenv
argument_list|(
literal|"QT_OPENGL"
argument_list|)
decl_stmt|;
if|if
condition|(
name|requested
operator|==
name|QByteArrayLiteral
argument_list|(
literal|"desktop"
argument_list|)
condition|)
name|req
operator|=
name|Desktop
expr_stmt|;
elseif|else
if|if
condition|(
name|requested
operator|==
name|QByteArrayLiteral
argument_list|(
literal|"angle"
argument_list|)
condition|)
name|req
operator|=
name|GLES
expr_stmt|;
name|bool
name|desktopTested
init|=
literal|false
decl_stmt|;
if|if
condition|(
name|req
operator|==
name|Unknown
condition|)
block|{
comment|// No explicit request. Start testing. opengl32.dll is preferred. Angle is the fallback.
name|desktopTested
operator|=
literal|true
expr_stmt|;
if|if
condition|(
name|testDesktopGL
argument_list|()
condition|)
name|req
operator|=
name|Desktop
expr_stmt|;
else|else
name|req
operator|=
name|GLES
expr_stmt|;
block|}
name|Q_ASSERT
argument_list|(
name|req
operator|!=
name|Unknown
argument_list|)
expr_stmt|;
if|if
condition|(
name|req
operator|==
name|GLES
condition|)
block|{
name|qCDebug
argument_list|(
name|qglLc
argument_list|,
literal|"Using Angle"
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|QT_DEBUG
name|m_loaded
operator|=
name|load
argument_list|(
literal|"libglesv2d.dll"
argument_list|,
literal|"libegld.dll"
argument_list|)
expr_stmt|;
else|#
directive|else
name|m_loaded
operator|=
name|load
argument_list|(
literal|"libglesv2.dll"
argument_list|,
literal|"libegl.dll"
argument_list|)
expr_stmt|;
endif|#
directive|endif
if|if
condition|(
name|m_loaded
condition|)
block|{
name|m_libraryType
operator|=
name|QWindowsOpenGL
operator|::
name|GLES2
expr_stmt|;
block|}
else|else
block|{
comment|// Could not load Angle. Try opengl32.dll.
if|if
condition|(
operator|!
name|desktopTested
operator|&&
name|testDesktopGL
argument_list|()
condition|)
name|req
operator|=
name|Desktop
expr_stmt|;
block|}
block|}
if|if
condition|(
name|req
operator|==
name|Desktop
condition|)
block|{
name|qCDebug
argument_list|(
name|qglLc
argument_list|,
literal|"Using desktop OpenGL"
argument_list|)
expr_stmt|;
name|m_loaded
operator|=
name|load
argument_list|(
literal|"opengl32.dll"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
name|m_loaded
condition|)
name|m_libraryType
operator|=
name|QWindowsOpenGL
operator|::
name|DesktopGL
expr_stmt|;
block|}
if|if
condition|(
name|m_loaded
condition|)
name|resolve
argument_list|()
expr_stmt|;
comment|// When no library is loaded, keep on running. All EGL/WGL/GL functions will
comment|// return 0 in this case without further errors. It is up to the clients
comment|// (application code, Qt Quick, etc.) to act when eglInitialize() and
comment|// friends fail, i.e. when QOpenGLContext::create() returns false due to the
comment|// platform plugin's failure to create a platform context.
block|}
end_constructor
begin_destructor
DECL|function|~QWindowsOpenGL
name|QWindowsOpenGL
operator|::
name|~
name|QWindowsOpenGL
parameter_list|()
block|{
name|unload
argument_list|()
expr_stmt|;
block|}
end_destructor
begin_function
DECL|function|load
name|bool
name|QWindowsOpenGL
operator|::
name|load
parameter_list|(
specifier|const
name|char
modifier|*
name|glName
parameter_list|,
specifier|const
name|char
modifier|*
name|eglName
parameter_list|)
block|{
name|qCDebug
argument_list|(
name|qglLc
argument_list|,
literal|"Loading %s %s"
argument_list|,
name|glName
argument_list|,
name|eglName
condition|?
name|eglName
else|:
literal|""
argument_list|)
expr_stmt|;
name|bool
name|result
init|=
literal|true
decl_stmt|;
if|if
condition|(
name|glName
condition|)
block|{
name|m_lib
operator|=
name|qgl_loadLib
argument_list|(
name|glName
argument_list|)
expr_stmt|;
name|result
operator|&=
name|m_lib
operator|!=
literal|0
expr_stmt|;
block|}
if|if
condition|(
name|eglName
condition|)
block|{
name|m_eglLib
operator|=
name|qgl_loadLib
argument_list|(
name|eglName
argument_list|)
expr_stmt|;
name|result
operator|&=
name|m_eglLib
operator|!=
literal|0
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|result
condition|)
name|unload
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
end_function
begin_function
DECL|function|unload
name|void
name|QWindowsOpenGL
operator|::
name|unload
parameter_list|()
block|{
if|if
condition|(
name|m_lib
condition|)
block|{
name|FreeLibrary
argument_list|(
name|m_lib
argument_list|)
expr_stmt|;
name|m_lib
operator|=
literal|0
expr_stmt|;
block|}
if|if
condition|(
name|m_eglLib
condition|)
block|{
name|FreeLibrary
argument_list|(
name|m_eglLib
argument_list|)
expr_stmt|;
name|m_eglLib
operator|=
literal|0
expr_stmt|;
block|}
name|m_loaded
operator|=
literal|false
expr_stmt|;
block|}
end_function
begin_function
DECL|function|resolveFunc
name|FARPROC
name|QWindowsOpenGL
operator|::
name|resolveFunc
parameter_list|(
specifier|const
name|char
modifier|*
name|name
parameter_list|)
block|{
name|FARPROC
name|proc
init|=
name|m_lib
condition|?
operator|::
name|GetProcAddress
argument_list|(
name|m_lib
argument_list|,
name|name
argument_list|)
else|:
literal|0
decl_stmt|;
if|if
condition|(
operator|!
name|proc
condition|)
name|qCDebug
argument_list|(
name|qglLc
argument_list|,
literal|"Failed to resolve GL function %s"
argument_list|,
name|name
argument_list|)
expr_stmt|;
return|return
name|proc
return|;
block|}
end_function
begin_function
DECL|function|resolveEglFunc
name|FARPROC
name|QWindowsOpenGL
operator|::
name|resolveEglFunc
parameter_list|(
specifier|const
name|char
modifier|*
name|name
parameter_list|)
block|{
name|FARPROC
name|proc
init|=
name|m_eglLib
condition|?
operator|::
name|GetProcAddress
argument_list|(
name|m_eglLib
argument_list|,
name|name
argument_list|)
else|:
literal|0
decl_stmt|;
if|if
condition|(
operator|!
name|proc
condition|)
name|qCDebug
argument_list|(
name|qglLc
argument_list|,
literal|"Failed to resolve EGL function %s"
argument_list|,
name|name
argument_list|)
expr_stmt|;
return|return
name|proc
return|;
block|}
end_function
begin_function
DECL|function|resolveWGL
name|void
name|QWindowsOpenGL
operator|::
name|resolveWGL
parameter_list|()
block|{
name|CopyContext
operator|=
expr|reinterpret_cast
operator|<
name|BOOL
argument_list|(
name|WINAPI
operator|*
argument_list|)
argument_list|(
name|HGLRC
argument_list|,
name|HGLRC
argument_list|,
name|UINT
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"wglCopyContext"
argument_list|)
operator|)
expr_stmt|;
name|CreateContext
operator|=
cast|reinterpret_cast
argument_list|<
name|HGLRC
operator|(
name|WINAPI
operator|*
operator|)
operator|(
name|HDC
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"wglCreateContext"
argument_list|)
argument_list|)
expr_stmt|;
name|CreateLayerContext
operator|=
expr|reinterpret_cast
operator|<
name|HGLRC
argument_list|(
name|WINAPI
operator|*
argument_list|)
argument_list|(
name|HDC
argument_list|,
name|int
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"wglCreateLayerContext"
argument_list|)
operator|)
expr_stmt|;
name|DeleteContext
operator|=
cast|reinterpret_cast
argument_list|<
name|BOOL
operator|(
name|WINAPI
operator|*
operator|)
operator|(
name|HGLRC
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"wglDeleteContext"
argument_list|)
argument_list|)
expr_stmt|;
name|GetCurrentContext
operator|=
cast|reinterpret_cast
argument_list|<
name|HGLRC
operator|(
name|WINAPI
operator|*
operator|)
operator|(
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"wglGetCurrentContext"
argument_list|)
argument_list|)
expr_stmt|;
name|GetCurrentDC
operator|=
cast|reinterpret_cast
argument_list|<
name|HDC
operator|(
name|WINAPI
operator|*
operator|)
operator|(
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"wglGetCurrentDC"
argument_list|)
argument_list|)
expr_stmt|;
name|GetProcAddress
operator|=
cast|reinterpret_cast
argument_list|<
name|PROC
operator|(
name|WINAPI
operator|*
operator|)
operator|(
name|LPCSTR
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"wglGetProcAddress"
argument_list|)
argument_list|)
expr_stmt|;
name|MakeCurrent
operator|=
expr|reinterpret_cast
operator|<
name|BOOL
argument_list|(
name|WINAPI
operator|*
argument_list|)
argument_list|(
name|HDC
argument_list|,
name|HGLRC
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"wglMakeCurrent"
argument_list|)
operator|)
expr_stmt|;
name|ShareLists
operator|=
expr|reinterpret_cast
operator|<
name|BOOL
argument_list|(
name|WINAPI
operator|*
argument_list|)
argument_list|(
name|HGLRC
argument_list|,
name|HGLRC
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"wglShareLists"
argument_list|)
operator|)
expr_stmt|;
name|UseFontBitmapsW
operator|=
expr|reinterpret_cast
operator|<
name|BOOL
argument_list|(
name|WINAPI
operator|*
argument_list|)
argument_list|(
name|HDC
argument_list|,
name|DWORD
argument_list|,
name|DWORD
argument_list|,
name|DWORD
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"wglUseFontBitmapsW"
argument_list|)
operator|)
expr_stmt|;
name|UseFontOutlinesW
operator|=
expr|reinterpret_cast
operator|<
name|BOOL
argument_list|(
name|WINAPI
operator|*
argument_list|)
argument_list|(
name|HDC
argument_list|,
name|DWORD
argument_list|,
name|DWORD
argument_list|,
name|DWORD
argument_list|,
name|FLOAT
argument_list|,
name|FLOAT
argument_list|,
name|int
argument_list|,
name|LPGLYPHMETRICSFLOAT
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"wglUseFontOutlinesW"
argument_list|)
operator|)
expr_stmt|;
name|DescribeLayerPlane
operator|=
expr|reinterpret_cast
operator|<
name|BOOL
argument_list|(
name|WINAPI
operator|*
argument_list|)
argument_list|(
name|HDC
argument_list|,
name|int
argument_list|,
name|int
argument_list|,
name|UINT
argument_list|,
name|LPLAYERPLANEDESCRIPTOR
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"wglDescribeLayerPlane"
argument_list|)
operator|)
expr_stmt|;
name|SetLayerPaletteEntries
operator|=
expr|reinterpret_cast
operator|<
name|int
argument_list|(
argument|WINAPI *
argument_list|)
operator|(
name|HDC
operator|,
name|int
operator|,
name|int
operator|,
name|int
operator|,
name|CONST
name|COLORREF
operator|*
operator|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"wglSetLayerPaletteEntries"
argument_list|)
operator|)
expr_stmt|;
name|GetLayerPaletteEntries
operator|=
expr|reinterpret_cast
operator|<
name|int
argument_list|(
name|WINAPI
operator|*
argument_list|)
argument_list|(
name|HDC
argument_list|,
name|int
argument_list|,
name|int
argument_list|,
name|int
argument_list|,
name|COLORREF
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"wglGetLayerPaletteEntries"
argument_list|)
operator|)
expr_stmt|;
name|RealizeLayerPalette
operator|=
expr|reinterpret_cast
operator|<
name|BOOL
argument_list|(
name|WINAPI
operator|*
argument_list|)
argument_list|(
name|HDC
argument_list|,
name|int
argument_list|,
name|BOOL
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"wglRealizeLayerPalette"
argument_list|)
operator|)
expr_stmt|;
name|SwapLayerBuffers
operator|=
expr|reinterpret_cast
operator|<
name|BOOL
argument_list|(
name|WINAPI
operator|*
argument_list|)
argument_list|(
name|HDC
argument_list|,
name|UINT
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"wglSwapLayerBuffers"
argument_list|)
operator|)
expr_stmt|;
name|SwapMultipleBuffers
operator|=
expr|reinterpret_cast
operator|<
name|DWORD
argument_list|(
argument|WINAPI *
argument_list|)
operator|(
name|UINT
operator|,
name|CONST
name|WGLSWAP
operator|*
operator|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"wglSwapMultipleBuffers"
argument_list|)
operator|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|resolveEGL
name|void
name|QWindowsOpenGL
operator|::
name|resolveEGL
parameter_list|()
block|{
name|EGL_GetError
operator|=
cast|reinterpret_cast
argument_list|<
name|EGLint
operator|(
name|EGLAPIENTRY
operator|*
operator|)
operator|(
name|void
operator|)
argument_list|>
argument_list|(
name|resolveEglFunc
argument_list|(
literal|"eglGetError"
argument_list|)
argument_list|)
expr_stmt|;
name|EGL_GetDisplay
operator|=
cast|reinterpret_cast
argument_list|<
name|EGLDisplay
operator|(
name|EGLAPIENTRY
operator|*
operator|)
operator|(
name|EGLNativeDisplayType
operator|)
argument_list|>
argument_list|(
name|resolveEglFunc
argument_list|(
literal|"eglGetDisplay"
argument_list|)
argument_list|)
expr_stmt|;
name|EGL_Initialize
operator|=
expr|reinterpret_cast
operator|<
name|EGLBoolean
argument_list|(
name|EGLAPIENTRY
operator|*
argument_list|)
argument_list|(
name|EGLDisplay
argument_list|,
name|EGLint
operator|*
argument_list|,
name|EGLint
operator|*
argument_list|)
operator|>
operator|(
name|resolveEglFunc
argument_list|(
literal|"eglInitialize"
argument_list|)
operator|)
expr_stmt|;
name|EGL_Terminate
operator|=
cast|reinterpret_cast
argument_list|<
name|EGLBoolean
operator|(
name|EGLAPIENTRY
operator|*
operator|)
operator|(
name|EGLDisplay
operator|)
argument_list|>
argument_list|(
name|resolveEglFunc
argument_list|(
literal|"eglTerminate"
argument_list|)
argument_list|)
expr_stmt|;
name|EGL_QueryString
operator|=
expr|reinterpret_cast
operator|<
specifier|const
name|char
operator|*
operator|(
name|EGLAPIENTRY
operator|*
operator|)
operator|(
name|EGLDisplay
operator|,
name|EGLint
operator|)
operator|>
operator|(
name|resolveEglFunc
argument_list|(
literal|"eglQueryString"
argument_list|)
operator|)
expr_stmt|;
name|EGL_GetConfigs
operator|=
expr|reinterpret_cast
operator|<
name|EGLBoolean
argument_list|(
name|EGLAPIENTRY
operator|*
argument_list|)
argument_list|(
name|EGLDisplay
argument_list|,
name|EGLConfig
operator|*
argument_list|,
name|EGLint
argument_list|,
name|EGLint
operator|*
argument_list|)
operator|>
operator|(
name|resolveEglFunc
argument_list|(
literal|"eglGetConfigs"
argument_list|)
operator|)
expr_stmt|;
name|EGL_ChooseConfig
operator|=
expr|reinterpret_cast
operator|<
name|EGLBoolean
argument_list|(
name|EGLAPIENTRY
operator|*
argument_list|)
argument_list|(
name|EGLDisplay
argument_list|,
specifier|const
name|EGLint
operator|*
argument_list|,
name|EGLConfig
operator|*
argument_list|,
name|EGLint
argument_list|,
name|EGLint
operator|*
argument_list|)
operator|>
operator|(
name|resolveEglFunc
argument_list|(
literal|"eglChooseConfig"
argument_list|)
operator|)
expr_stmt|;
name|EGL_GetConfigAttrib
operator|=
expr|reinterpret_cast
operator|<
name|EGLBoolean
argument_list|(
name|EGLAPIENTRY
operator|*
argument_list|)
argument_list|(
name|EGLDisplay
argument_list|,
name|EGLConfig
argument_list|,
name|EGLint
argument_list|,
name|EGLint
operator|*
argument_list|)
operator|>
operator|(
name|resolveEglFunc
argument_list|(
literal|"eglGetConfigAttrib"
argument_list|)
operator|)
expr_stmt|;
name|EGL_CreateWindowSurface
operator|=
expr|reinterpret_cast
operator|<
name|EGLSurface
argument_list|(
name|EGLAPIENTRY
operator|*
argument_list|)
argument_list|(
name|EGLDisplay
argument_list|,
name|EGLConfig
argument_list|,
name|EGLNativeWindowType
argument_list|,
specifier|const
name|EGLint
operator|*
argument_list|)
operator|>
operator|(
name|resolveEglFunc
argument_list|(
literal|"eglCreateWindowSurface"
argument_list|)
operator|)
expr_stmt|;
name|EGL_CreatePbufferSurface
operator|=
expr|reinterpret_cast
operator|<
name|EGLSurface
argument_list|(
name|EGLAPIENTRY
operator|*
argument_list|)
argument_list|(
name|EGLDisplay
argument_list|,
name|EGLConfig
argument_list|,
specifier|const
name|EGLint
operator|*
argument_list|)
operator|>
operator|(
name|resolveEglFunc
argument_list|(
literal|"eglCreatePbufferSurface"
argument_list|)
operator|)
expr_stmt|;
name|EGL_CreatePixmapSurface
operator|=
expr|reinterpret_cast
operator|<
name|EGLSurface
argument_list|(
argument|EGLAPIENTRY *
argument_list|)
operator|(
name|EGLDisplay
name|dpy
operator|,
name|EGLConfig
name|config
operator|,
name|EGLNativePixmapType
operator|,
specifier|const
name|EGLint
operator|*
operator|)
operator|>
operator|(
name|resolveEglFunc
argument_list|(
literal|"eglCreatePixmapSurface"
argument_list|)
operator|)
expr_stmt|;
name|EGL_DestroySurface
operator|=
expr|reinterpret_cast
operator|<
name|EGLBoolean
argument_list|(
name|EGLAPIENTRY
operator|*
argument_list|)
argument_list|(
name|EGLDisplay
argument_list|,
name|EGLSurface
argument_list|)
operator|>
operator|(
name|resolveEglFunc
argument_list|(
literal|"eglDestroySurface"
argument_list|)
operator|)
expr_stmt|;
name|EGL_QuerySurface
operator|=
expr|reinterpret_cast
operator|<
name|EGLBoolean
argument_list|(
name|EGLAPIENTRY
operator|*
argument_list|)
argument_list|(
name|EGLDisplay
argument_list|,
name|EGLSurface
argument_list|,
name|EGLint
argument_list|,
name|EGLint
operator|*
argument_list|)
operator|>
operator|(
name|resolveEglFunc
argument_list|(
literal|"eglQuerySurface"
argument_list|)
operator|)
expr_stmt|;
name|EGL_BindAPI
operator|=
cast|reinterpret_cast
argument_list|<
name|EGLBoolean
operator|(
name|EGLAPIENTRY
operator|*
operator|)
operator|(
name|EGLenum
operator|)
argument_list|>
argument_list|(
name|resolveEglFunc
argument_list|(
literal|"eglBindAPI"
argument_list|)
argument_list|)
expr_stmt|;
name|EGL_QueryAPI
operator|=
cast|reinterpret_cast
argument_list|<
name|EGLenum
operator|(
name|EGLAPIENTRY
operator|*
operator|)
operator|(
name|void
operator|)
argument_list|>
argument_list|(
name|resolveEglFunc
argument_list|(
literal|"eglQueryAPI"
argument_list|)
argument_list|)
expr_stmt|;
name|EGL_WaitClient
operator|=
cast|reinterpret_cast
argument_list|<
name|EGLBoolean
operator|(
name|EGLAPIENTRY
operator|*
operator|)
operator|(
name|void
operator|)
argument_list|>
argument_list|(
name|resolveEglFunc
argument_list|(
literal|"eglWaitClient"
argument_list|)
argument_list|)
expr_stmt|;
name|EGL_ReleaseThread
operator|=
cast|reinterpret_cast
argument_list|<
name|EGLBoolean
operator|(
name|EGLAPIENTRY
operator|*
operator|)
operator|(
name|void
operator|)
argument_list|>
argument_list|(
name|resolveEglFunc
argument_list|(
literal|"eglReleaseThread"
argument_list|)
argument_list|)
expr_stmt|;
name|EGL_CreatePbufferFromClientBuffer
operator|=
expr|reinterpret_cast
operator|<
name|EGLSurface
argument_list|(
name|EGLAPIENTRY
operator|*
argument_list|)
argument_list|(
name|EGLDisplay
argument_list|,
name|EGLenum
argument_list|,
name|EGLClientBuffer
argument_list|,
name|EGLConfig
argument_list|,
specifier|const
name|EGLint
operator|*
argument_list|)
operator|>
operator|(
name|resolveEglFunc
argument_list|(
literal|"eglCreatePbufferFromClientBuffer"
argument_list|)
operator|)
expr_stmt|;
name|EGL_SurfaceAttrib
operator|=
expr|reinterpret_cast
operator|<
name|EGLBoolean
argument_list|(
name|EGLAPIENTRY
operator|*
argument_list|)
argument_list|(
name|EGLDisplay
argument_list|,
name|EGLSurface
argument_list|,
name|EGLint
argument_list|,
name|EGLint
argument_list|)
operator|>
operator|(
name|resolveEglFunc
argument_list|(
literal|"eglSurfaceAttrib"
argument_list|)
operator|)
expr_stmt|;
name|EGL_BindTexImage
operator|=
expr|reinterpret_cast
operator|<
name|EGLBoolean
argument_list|(
name|EGLAPIENTRY
operator|*
argument_list|)
argument_list|(
name|EGLDisplay
argument_list|,
name|EGLSurface
argument_list|,
name|EGLint
argument_list|)
operator|>
operator|(
name|resolveEglFunc
argument_list|(
literal|"eglBindTexImage"
argument_list|)
operator|)
expr_stmt|;
name|EGL_ReleaseTexImage
operator|=
expr|reinterpret_cast
operator|<
name|EGLBoolean
argument_list|(
name|EGLAPIENTRY
operator|*
argument_list|)
argument_list|(
name|EGLDisplay
argument_list|,
name|EGLSurface
argument_list|,
name|EGLint
argument_list|)
operator|>
operator|(
name|resolveEglFunc
argument_list|(
literal|"eglReleaseTexImage"
argument_list|)
operator|)
expr_stmt|;
name|EGL_SwapInterval
operator|=
expr|reinterpret_cast
operator|<
name|EGLBoolean
argument_list|(
name|EGLAPIENTRY
operator|*
argument_list|)
argument_list|(
name|EGLDisplay
argument_list|,
name|EGLint
argument_list|)
operator|>
operator|(
name|resolveEglFunc
argument_list|(
literal|"eglSwapInterval"
argument_list|)
operator|)
expr_stmt|;
name|EGL_CreateContext
operator|=
expr|reinterpret_cast
operator|<
name|EGLContext
argument_list|(
name|EGLAPIENTRY
operator|*
argument_list|)
argument_list|(
name|EGLDisplay
argument_list|,
name|EGLConfig
argument_list|,
name|EGLContext
argument_list|,
specifier|const
name|EGLint
operator|*
argument_list|)
operator|>
operator|(
name|resolveEglFunc
argument_list|(
literal|"eglCreateContext"
argument_list|)
operator|)
expr_stmt|;
name|EGL_DestroyContext
operator|=
expr|reinterpret_cast
operator|<
name|EGLBoolean
argument_list|(
name|EGLAPIENTRY
operator|*
argument_list|)
argument_list|(
name|EGLDisplay
argument_list|,
name|EGLContext
argument_list|)
operator|>
operator|(
name|resolveEglFunc
argument_list|(
literal|"eglDestroyContext"
argument_list|)
operator|)
expr_stmt|;
name|EGL_MakeCurrent
operator|=
expr|reinterpret_cast
operator|<
name|EGLBoolean
argument_list|(
name|EGLAPIENTRY
operator|*
argument_list|)
argument_list|(
name|EGLDisplay
argument_list|,
name|EGLSurface
argument_list|,
name|EGLSurface
argument_list|,
name|EGLContext
argument_list|)
operator|>
operator|(
name|resolveEglFunc
argument_list|(
literal|"eglMakeCurrent"
argument_list|)
operator|)
expr_stmt|;
name|EGL_GetCurrentContext
operator|=
cast|reinterpret_cast
argument_list|<
name|EGLContext
operator|(
name|EGLAPIENTRY
operator|*
operator|)
operator|(
name|void
operator|)
argument_list|>
argument_list|(
name|resolveEglFunc
argument_list|(
literal|"eglGetCurrentContext"
argument_list|)
argument_list|)
expr_stmt|;
name|EGL_GetCurrentSurface
operator|=
cast|reinterpret_cast
argument_list|<
name|EGLSurface
operator|(
name|EGLAPIENTRY
operator|*
operator|)
operator|(
name|EGLint
operator|)
argument_list|>
argument_list|(
name|resolveEglFunc
argument_list|(
literal|"eglGetCurrentSurface"
argument_list|)
argument_list|)
expr_stmt|;
name|EGL_GetCurrentDisplay
operator|=
cast|reinterpret_cast
argument_list|<
name|EGLDisplay
operator|(
name|EGLAPIENTRY
operator|*
operator|)
operator|(
name|void
operator|)
argument_list|>
argument_list|(
name|resolveEglFunc
argument_list|(
literal|"eglGetCurrentDisplay"
argument_list|)
argument_list|)
expr_stmt|;
name|EGL_QueryContext
operator|=
expr|reinterpret_cast
operator|<
name|EGLBoolean
argument_list|(
name|EGLAPIENTRY
operator|*
argument_list|)
argument_list|(
name|EGLDisplay
argument_list|,
name|EGLContext
argument_list|,
name|EGLint
argument_list|,
name|EGLint
operator|*
argument_list|)
operator|>
operator|(
name|resolveEglFunc
argument_list|(
literal|"eglQueryContext"
argument_list|)
operator|)
expr_stmt|;
name|EGL_WaitGL
operator|=
cast|reinterpret_cast
argument_list|<
name|EGLBoolean
operator|(
name|EGLAPIENTRY
operator|*
operator|)
operator|(
name|void
operator|)
argument_list|>
argument_list|(
name|resolveEglFunc
argument_list|(
literal|"eglWaitGL"
argument_list|)
argument_list|)
expr_stmt|;
name|EGL_WaitNative
operator|=
cast|reinterpret_cast
argument_list|<
name|EGLBoolean
operator|(
name|EGLAPIENTRY
operator|*
operator|)
operator|(
name|EGLint
operator|)
argument_list|>
argument_list|(
name|resolveEglFunc
argument_list|(
literal|"eglWaitNative"
argument_list|)
argument_list|)
expr_stmt|;
name|EGL_SwapBuffers
operator|=
expr|reinterpret_cast
operator|<
name|EGLBoolean
argument_list|(
name|EGLAPIENTRY
operator|*
argument_list|)
argument_list|(
name|EGLDisplay
argument_list|,
name|EGLSurface
argument_list|)
operator|>
operator|(
name|resolveEglFunc
argument_list|(
literal|"eglSwapBuffers"
argument_list|)
operator|)
expr_stmt|;
name|EGL_CopyBuffers
operator|=
expr|reinterpret_cast
operator|<
name|EGLBoolean
argument_list|(
name|EGLAPIENTRY
operator|*
argument_list|)
argument_list|(
name|EGLDisplay
argument_list|,
name|EGLSurface
argument_list|,
name|EGLNativePixmapType
argument_list|)
operator|>
operator|(
name|resolveEglFunc
argument_list|(
literal|"eglCopyBuffers"
argument_list|)
operator|)
expr_stmt|;
name|EGL_GetProcAddress
operator|=
cast|reinterpret_cast
argument_list|<
name|__eglMustCastToProperFunctionPointerType
operator|(
name|EGLAPIENTRY
operator|*
operator|)
operator|(
specifier|const
name|char
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveEglFunc
argument_list|(
literal|"eglGetProcAddress"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|resolveGLCommon
name|void
name|QWindowsOpenGL
operator|::
name|resolveGLCommon
parameter_list|()
block|{
name|Viewport
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glViewport"
argument_list|)
operator|)
expr_stmt|;
name|IsEnabled
operator|=
cast|reinterpret_cast
argument_list|<
name|GLboolean
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glIsEnabled"
argument_list|)
argument_list|)
expr_stmt|;
name|GetTexParameteriv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glGetTexParameteriv"
argument_list|)
operator|)
expr_stmt|;
name|GetTexParameterfv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glGetTexParameterfv"
argument_list|)
operator|)
expr_stmt|;
name|GetString
operator|=
cast|reinterpret_cast
argument_list|<
specifier|const
name|GLubyte
operator|*
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glGetString"
argument_list|)
argument_list|)
expr_stmt|;
name|GetIntegerv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glGetIntegerv"
argument_list|)
operator|)
expr_stmt|;
name|GetFloatv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glGetFloatv"
argument_list|)
operator|)
expr_stmt|;
name|GetError
operator|=
cast|reinterpret_cast
argument_list|<
name|GLenum
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glGetError"
argument_list|)
argument_list|)
expr_stmt|;
name|GetBooleanv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLboolean
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glGetBooleanv"
argument_list|)
operator|)
expr_stmt|;
name|ReadPixels
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glReadPixels"
argument_list|)
operator|)
expr_stmt|;
name|PixelStorei
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glPixelStorei"
argument_list|)
operator|)
expr_stmt|;
name|DepthFunc
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glDepthFunc"
argument_list|)
argument_list|)
expr_stmt|;
name|StencilOp
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glStencilOp"
argument_list|)
operator|)
expr_stmt|;
name|StencilFunc
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glStencilFunc"
argument_list|)
operator|)
expr_stmt|;
name|BlendFunc
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glBlendFunc"
argument_list|)
operator|)
expr_stmt|;
name|Flush
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glFlush"
argument_list|)
argument_list|)
expr_stmt|;
name|Finish
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glFinish"
argument_list|)
argument_list|)
expr_stmt|;
name|Enable
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glEnable"
argument_list|)
argument_list|)
expr_stmt|;
name|Disable
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glDisable"
argument_list|)
argument_list|)
expr_stmt|;
name|DepthMask
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLboolean
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glDepthMask"
argument_list|)
argument_list|)
expr_stmt|;
name|ColorMask
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLboolean
argument_list|,
name|GLboolean
argument_list|,
name|GLboolean
argument_list|,
name|GLboolean
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glColorMask"
argument_list|)
operator|)
expr_stmt|;
name|StencilMask
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glStencilMask"
argument_list|)
argument_list|)
expr_stmt|;
name|ClearStencil
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLint
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glClearStencil"
argument_list|)
argument_list|)
expr_stmt|;
name|ClearColor
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glClearColor"
argument_list|)
operator|)
expr_stmt|;
name|Clear
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLbitfield
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glClear"
argument_list|)
argument_list|)
expr_stmt|;
name|TexImage2D
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glTexImage2D"
argument_list|)
operator|)
expr_stmt|;
name|TexParameteriv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glTexParameteriv"
argument_list|)
operator|)
expr_stmt|;
name|TexParameteri
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glTexParameteri"
argument_list|)
operator|)
expr_stmt|;
name|TexParameterfv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glTexParameterfv"
argument_list|)
operator|)
expr_stmt|;
name|TexParameterf
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glTexParameterf"
argument_list|)
operator|)
expr_stmt|;
name|Scissor
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glScissor"
argument_list|)
operator|)
expr_stmt|;
name|LineWidth
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLfloat
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glLineWidth"
argument_list|)
argument_list|)
expr_stmt|;
name|Hint
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glHint"
argument_list|)
operator|)
expr_stmt|;
name|FrontFace
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glFrontFace"
argument_list|)
argument_list|)
expr_stmt|;
name|CullFace
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glCullFace"
argument_list|)
argument_list|)
expr_stmt|;
name|IsTexture
operator|=
cast|reinterpret_cast
argument_list|<
name|GLboolean
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glIsTexture"
argument_list|)
argument_list|)
expr_stmt|;
name|GenTextures
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glGenTextures"
argument_list|)
operator|)
expr_stmt|;
name|DeleteTextures
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glDeleteTextures"
argument_list|)
operator|)
expr_stmt|;
name|BindTexture
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glBindTexture"
argument_list|)
operator|)
expr_stmt|;
name|TexSubImage2D
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glTexSubImage2D"
argument_list|)
operator|)
expr_stmt|;
name|CopyTexSubImage2D
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glCopyTexSubImage2D"
argument_list|)
operator|)
expr_stmt|;
name|CopyTexImage2D
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glCopyTexImage2D"
argument_list|)
operator|)
expr_stmt|;
name|PolygonOffset
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glPolygonOffset"
argument_list|)
operator|)
expr_stmt|;
name|DrawElements
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glDrawElements"
argument_list|)
operator|)
expr_stmt|;
name|DrawArrays
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glDrawArrays"
argument_list|)
operator|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|resolveGL11
name|void
name|QWindowsOpenGL
operator|::
name|resolveGL11
parameter_list|()
block|{
name|DepthRange
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glDepthRange"
argument_list|)
operator|)
expr_stmt|;
name|GetTexImage
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glGetTexImage"
argument_list|)
operator|)
expr_stmt|;
name|LogicOp
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glLogicOp"
argument_list|)
argument_list|)
expr_stmt|;
name|ClearDepth
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLdouble
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glClearDepth"
argument_list|)
argument_list|)
expr_stmt|;
name|PolygonMode
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glPolygonMode"
argument_list|)
operator|)
expr_stmt|;
name|PointSize
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLfloat
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glPointSize"
argument_list|)
argument_list|)
expr_stmt|;
name|GetTexLevelParameteriv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glGetTexLevelParameteriv"
argument_list|)
operator|)
expr_stmt|;
name|GetTexLevelParameterfv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glGetTexLevelParameterfv"
argument_list|)
operator|)
expr_stmt|;
name|GetDoublev
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glGetDoublev"
argument_list|)
operator|)
expr_stmt|;
name|PixelStoref
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glPixelStoref"
argument_list|)
operator|)
expr_stmt|;
name|ReadBuffer
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glReadBuffer"
argument_list|)
argument_list|)
expr_stmt|;
name|DrawBuffer
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glDrawBuffer"
argument_list|)
argument_list|)
expr_stmt|;
name|TexImage1D
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glTexImage1D"
argument_list|)
operator|)
expr_stmt|;
name|Translatef
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glTranslatef"
argument_list|)
operator|)
expr_stmt|;
name|Translated
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glTranslated"
argument_list|)
operator|)
expr_stmt|;
name|Scalef
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glScalef"
argument_list|)
operator|)
expr_stmt|;
name|Scaled
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glScaled"
argument_list|)
operator|)
expr_stmt|;
name|Rotatef
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glRotatef"
argument_list|)
operator|)
expr_stmt|;
name|Rotated
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glRotated"
argument_list|)
operator|)
expr_stmt|;
name|PushMatrix
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glPushMatrix"
argument_list|)
argument_list|)
expr_stmt|;
name|PopMatrix
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glPopMatrix"
argument_list|)
argument_list|)
expr_stmt|;
name|Ortho
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glOrtho"
argument_list|)
operator|)
expr_stmt|;
name|MultMatrixd
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLdouble
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glMultMatrixd"
argument_list|)
argument_list|)
expr_stmt|;
name|MultMatrixf
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLfloat
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glMultMatrixf"
argument_list|)
argument_list|)
expr_stmt|;
name|MatrixMode
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glMatrixMode"
argument_list|)
argument_list|)
expr_stmt|;
name|LoadMatrixd
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLdouble
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glLoadMatrixd"
argument_list|)
argument_list|)
expr_stmt|;
name|LoadMatrixf
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLfloat
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glLoadMatrixf"
argument_list|)
argument_list|)
expr_stmt|;
name|LoadIdentity
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glLoadIdentity"
argument_list|)
argument_list|)
expr_stmt|;
name|Frustum
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glFrustum"
argument_list|)
operator|)
expr_stmt|;
name|IsList
operator|=
cast|reinterpret_cast
argument_list|<
name|GLboolean
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glIsList"
argument_list|)
argument_list|)
expr_stmt|;
name|GetTexGeniv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glGetTexGeniv"
argument_list|)
operator|)
expr_stmt|;
name|GetTexGenfv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glGetTexGenfv"
argument_list|)
operator|)
expr_stmt|;
name|GetTexGendv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glGetTexGendv"
argument_list|)
operator|)
expr_stmt|;
name|GetTexEnviv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glGetTexEnviv"
argument_list|)
operator|)
expr_stmt|;
name|GetTexEnvfv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glGetTexEnvfv"
argument_list|)
operator|)
expr_stmt|;
name|GetPolygonStipple
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLubyte
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glGetPolygonStipple"
argument_list|)
argument_list|)
expr_stmt|;
name|GetPixelMapusv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLushort
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glGetPixelMapusv"
argument_list|)
operator|)
expr_stmt|;
name|GetPixelMapuiv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glGetPixelMapuiv"
argument_list|)
operator|)
expr_stmt|;
name|GetPixelMapfv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glGetPixelMapfv"
argument_list|)
operator|)
expr_stmt|;
name|GetMaterialiv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glGetMaterialiv"
argument_list|)
operator|)
expr_stmt|;
name|GetMaterialfv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glGetMaterialfv"
argument_list|)
operator|)
expr_stmt|;
name|GetMapiv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glGetMapiv"
argument_list|)
operator|)
expr_stmt|;
name|GetMapfv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glGetMapfv"
argument_list|)
operator|)
expr_stmt|;
name|GetMapdv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glGetMapdv"
argument_list|)
operator|)
expr_stmt|;
name|GetLightiv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glGetLightiv"
argument_list|)
operator|)
expr_stmt|;
name|GetLightfv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glGetLightfv"
argument_list|)
operator|)
expr_stmt|;
name|GetClipPlane
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glGetClipPlane"
argument_list|)
operator|)
expr_stmt|;
name|DrawPixels
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glDrawPixels"
argument_list|)
operator|)
expr_stmt|;
name|CopyPixels
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glCopyPixels"
argument_list|)
operator|)
expr_stmt|;
name|PixelMapusv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
specifier|const
name|GLushort
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glPixelMapusv"
argument_list|)
operator|)
expr_stmt|;
name|PixelMapuiv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glPixelMapuiv"
argument_list|)
operator|)
expr_stmt|;
name|PixelMapfv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glPixelMapfv"
argument_list|)
operator|)
expr_stmt|;
name|PixelTransferi
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glPixelTransferi"
argument_list|)
operator|)
expr_stmt|;
name|PixelTransferf
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glPixelTransferf"
argument_list|)
operator|)
expr_stmt|;
name|PixelZoom
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glPixelZoom"
argument_list|)
operator|)
expr_stmt|;
name|AlphaFunc
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glAlphaFunc"
argument_list|)
operator|)
expr_stmt|;
name|EvalPoint2
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glEvalPoint2"
argument_list|)
operator|)
expr_stmt|;
name|EvalMesh2
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glEvalMesh2"
argument_list|)
operator|)
expr_stmt|;
name|EvalPoint1
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLint
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glEvalPoint1"
argument_list|)
argument_list|)
expr_stmt|;
name|EvalMesh1
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glEvalMesh1"
argument_list|)
operator|)
expr_stmt|;
name|EvalCoord2fv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLfloat
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glEvalCoord2fv"
argument_list|)
argument_list|)
expr_stmt|;
name|EvalCoord2f
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glEvalCoord2f"
argument_list|)
operator|)
expr_stmt|;
name|EvalCoord2dv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLdouble
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glEvalCoord2dv"
argument_list|)
argument_list|)
expr_stmt|;
name|EvalCoord2d
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glEvalCoord2d"
argument_list|)
operator|)
expr_stmt|;
name|EvalCoord1fv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLfloat
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glEvalCoord1fv"
argument_list|)
argument_list|)
expr_stmt|;
name|EvalCoord1f
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLfloat
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glEvalCoord1f"
argument_list|)
argument_list|)
expr_stmt|;
name|EvalCoord1dv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLdouble
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glEvalCoord1dv"
argument_list|)
argument_list|)
expr_stmt|;
name|EvalCoord1d
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLdouble
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glEvalCoord1d"
argument_list|)
argument_list|)
expr_stmt|;
name|MapGrid2f
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLint
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glMapGrid2f"
argument_list|)
operator|)
expr_stmt|;
name|MapGrid2d
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLint
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glMapGrid2d"
argument_list|)
operator|)
expr_stmt|;
name|MapGrid1f
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glMapGrid1f"
argument_list|)
operator|)
expr_stmt|;
name|MapGrid1d
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glMapGrid1d"
argument_list|)
operator|)
expr_stmt|;
name|Map2f
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glMap2f"
argument_list|)
operator|)
expr_stmt|;
name|Map2d
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glMap2d"
argument_list|)
operator|)
expr_stmt|;
name|Map1f
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glMap1f"
argument_list|)
operator|)
expr_stmt|;
name|Map1d
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glMap1d"
argument_list|)
operator|)
expr_stmt|;
name|PushAttrib
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLbitfield
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glPushAttrib"
argument_list|)
argument_list|)
expr_stmt|;
name|PopAttrib
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glPopAttrib"
argument_list|)
argument_list|)
expr_stmt|;
name|Accum
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glAccum"
argument_list|)
operator|)
expr_stmt|;
name|IndexMask
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glIndexMask"
argument_list|)
argument_list|)
expr_stmt|;
name|ClearIndex
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLfloat
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glClearIndex"
argument_list|)
argument_list|)
expr_stmt|;
name|ClearAccum
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glClearAccum"
argument_list|)
operator|)
expr_stmt|;
name|PushName
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glPushName"
argument_list|)
argument_list|)
expr_stmt|;
name|PopName
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glPopName"
argument_list|)
argument_list|)
expr_stmt|;
name|PassThrough
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLfloat
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glPassThrough"
argument_list|)
argument_list|)
expr_stmt|;
name|LoadName
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glLoadName"
argument_list|)
argument_list|)
expr_stmt|;
name|InitNames
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glInitNames"
argument_list|)
argument_list|)
expr_stmt|;
name|RenderMode
operator|=
cast|reinterpret_cast
argument_list|<
name|GLint
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glRenderMode"
argument_list|)
argument_list|)
expr_stmt|;
name|SelectBuffer
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glSelectBuffer"
argument_list|)
operator|)
expr_stmt|;
name|FeedbackBuffer
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glFeedbackBuffer"
argument_list|)
operator|)
expr_stmt|;
name|TexGeniv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glTexGeniv"
argument_list|)
operator|)
expr_stmt|;
name|TexGeni
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glTexGeni"
argument_list|)
operator|)
expr_stmt|;
name|TexGenfv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glTexGenfv"
argument_list|)
operator|)
expr_stmt|;
name|TexGenf
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glTexGenf"
argument_list|)
operator|)
expr_stmt|;
name|TexGendv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glTexGendv"
argument_list|)
operator|)
expr_stmt|;
name|TexGend
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glTexGend"
argument_list|)
operator|)
expr_stmt|;
name|TexEnviv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glTexEnviv"
argument_list|)
operator|)
expr_stmt|;
name|TexEnvi
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glTexEnvi"
argument_list|)
operator|)
expr_stmt|;
name|TexEnvfv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glTexEnvfv"
argument_list|)
operator|)
expr_stmt|;
name|TexEnvf
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glTexEnvf"
argument_list|)
operator|)
expr_stmt|;
name|ShadeModel
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glShadeModel"
argument_list|)
argument_list|)
expr_stmt|;
name|PolygonStipple
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLubyte
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glPolygonStipple"
argument_list|)
argument_list|)
expr_stmt|;
name|Materialiv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glMaterialiv"
argument_list|)
operator|)
expr_stmt|;
name|Materiali
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glMateriali"
argument_list|)
operator|)
expr_stmt|;
name|Materialfv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glMaterialfv"
argument_list|)
operator|)
expr_stmt|;
name|Materialf
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glMaterialf"
argument_list|)
operator|)
expr_stmt|;
name|LineStipple
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLushort
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glLineStipple"
argument_list|)
operator|)
expr_stmt|;
name|LightModeliv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glLightModeliv"
argument_list|)
operator|)
expr_stmt|;
name|LightModeli
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glLightModeli"
argument_list|)
operator|)
expr_stmt|;
name|LightModelfv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glLightModelfv"
argument_list|)
operator|)
expr_stmt|;
name|LightModelf
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glLightModelf"
argument_list|)
operator|)
expr_stmt|;
name|Lightiv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glLightiv"
argument_list|)
operator|)
expr_stmt|;
name|Lighti
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glLighti"
argument_list|)
operator|)
expr_stmt|;
name|Lightfv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glLightfv"
argument_list|)
operator|)
expr_stmt|;
name|Lightf
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glLightf"
argument_list|)
operator|)
expr_stmt|;
name|Fogiv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glFogiv"
argument_list|)
operator|)
expr_stmt|;
name|Fogi
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glFogi"
argument_list|)
operator|)
expr_stmt|;
name|Fogfv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glFogfv"
argument_list|)
operator|)
expr_stmt|;
name|Fogf
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glFogf"
argument_list|)
operator|)
expr_stmt|;
name|ColorMaterial
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glColorMaterial"
argument_list|)
operator|)
expr_stmt|;
name|ClipPlane
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glClipPlane"
argument_list|)
operator|)
expr_stmt|;
name|Vertex4sv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLshort
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glVertex4sv"
argument_list|)
argument_list|)
expr_stmt|;
name|Vertex4s
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLshort
argument_list|,
name|GLshort
argument_list|,
name|GLshort
argument_list|,
name|GLshort
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glVertex4s"
argument_list|)
operator|)
expr_stmt|;
name|Vertex4iv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLint
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glVertex4iv"
argument_list|)
argument_list|)
expr_stmt|;
name|Vertex4i
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glVertex4i"
argument_list|)
operator|)
expr_stmt|;
name|Vertex4fv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLfloat
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glVertex4fv"
argument_list|)
argument_list|)
expr_stmt|;
name|Vertex4f
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glVertex4f"
argument_list|)
operator|)
expr_stmt|;
name|Vertex4dv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLdouble
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glVertex4dv"
argument_list|)
argument_list|)
expr_stmt|;
name|Vertex4d
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glVertex4d"
argument_list|)
operator|)
expr_stmt|;
name|Vertex3sv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLshort
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glVertex3sv"
argument_list|)
argument_list|)
expr_stmt|;
name|Vertex3s
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLshort
argument_list|,
name|GLshort
argument_list|,
name|GLshort
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glVertex3s"
argument_list|)
operator|)
expr_stmt|;
name|Vertex3iv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLint
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glVertex3iv"
argument_list|)
argument_list|)
expr_stmt|;
name|Vertex3i
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glVertex3i"
argument_list|)
operator|)
expr_stmt|;
name|Vertex3fv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLfloat
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glVertex3fv"
argument_list|)
argument_list|)
expr_stmt|;
name|Vertex3f
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glVertex3f"
argument_list|)
operator|)
expr_stmt|;
name|Vertex3dv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLdouble
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glVertex3dv"
argument_list|)
argument_list|)
expr_stmt|;
name|Vertex3d
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glVertex3d"
argument_list|)
operator|)
expr_stmt|;
name|Vertex2sv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLshort
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glVertex2sv"
argument_list|)
argument_list|)
expr_stmt|;
name|Vertex2s
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLshort
argument_list|,
name|GLshort
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glVertex2s"
argument_list|)
operator|)
expr_stmt|;
name|Vertex2iv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLint
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glVertex2iv"
argument_list|)
argument_list|)
expr_stmt|;
name|Vertex2i
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glVertex2i"
argument_list|)
operator|)
expr_stmt|;
name|Vertex2fv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLfloat
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glVertex2fv"
argument_list|)
argument_list|)
expr_stmt|;
name|Vertex2f
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glVertex2f"
argument_list|)
operator|)
expr_stmt|;
name|Vertex2dv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLdouble
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glVertex2dv"
argument_list|)
argument_list|)
expr_stmt|;
name|Vertex2d
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glVertex2d"
argument_list|)
operator|)
expr_stmt|;
name|TexCoord4sv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLshort
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glTexCoord4sv"
argument_list|)
argument_list|)
expr_stmt|;
name|TexCoord4s
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLshort
argument_list|,
name|GLshort
argument_list|,
name|GLshort
argument_list|,
name|GLshort
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glTexCoord4s"
argument_list|)
operator|)
expr_stmt|;
name|TexCoord4iv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLint
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glTexCoord4iv"
argument_list|)
argument_list|)
expr_stmt|;
name|TexCoord4i
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glTexCoord4i"
argument_list|)
operator|)
expr_stmt|;
name|TexCoord4fv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLfloat
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glTexCoord4fv"
argument_list|)
argument_list|)
expr_stmt|;
name|TexCoord4f
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glTexCoord4f"
argument_list|)
operator|)
expr_stmt|;
name|TexCoord4dv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLdouble
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glTexCoord4dv"
argument_list|)
argument_list|)
expr_stmt|;
name|TexCoord4d
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glTexCoord4d"
argument_list|)
operator|)
expr_stmt|;
name|TexCoord3sv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLshort
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glTexCoord3sv"
argument_list|)
argument_list|)
expr_stmt|;
name|TexCoord3s
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLshort
argument_list|,
name|GLshort
argument_list|,
name|GLshort
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glTexCoord3s"
argument_list|)
operator|)
expr_stmt|;
name|TexCoord3iv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLint
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glTexCoord3iv"
argument_list|)
argument_list|)
expr_stmt|;
name|TexCoord3i
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glTexCoord3i"
argument_list|)
operator|)
expr_stmt|;
name|TexCoord3fv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLfloat
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glTexCoord3fv"
argument_list|)
argument_list|)
expr_stmt|;
name|TexCoord3f
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glTexCoord3f"
argument_list|)
operator|)
expr_stmt|;
name|TexCoord3dv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLdouble
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glTexCoord3dv"
argument_list|)
argument_list|)
expr_stmt|;
name|TexCoord3d
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glTexCoord3d"
argument_list|)
operator|)
expr_stmt|;
name|TexCoord2sv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLshort
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glTexCoord2sv"
argument_list|)
argument_list|)
expr_stmt|;
name|TexCoord2s
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLshort
argument_list|,
name|GLshort
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glTexCoord2s"
argument_list|)
operator|)
expr_stmt|;
name|TexCoord2iv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLint
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glTexCoord2iv"
argument_list|)
argument_list|)
expr_stmt|;
name|TexCoord2i
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glTexCoord2i"
argument_list|)
operator|)
expr_stmt|;
name|TexCoord2fv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLfloat
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glTexCoord2fv"
argument_list|)
argument_list|)
expr_stmt|;
name|TexCoord2f
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glTexCoord2f"
argument_list|)
operator|)
expr_stmt|;
name|TexCoord2dv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLdouble
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glTexCoord2dv"
argument_list|)
argument_list|)
expr_stmt|;
name|TexCoord2d
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glTexCoord2d"
argument_list|)
operator|)
expr_stmt|;
name|TexCoord1sv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLshort
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glTexCoord1sv"
argument_list|)
argument_list|)
expr_stmt|;
name|TexCoord1s
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLshort
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glTexCoord1s"
argument_list|)
argument_list|)
expr_stmt|;
name|TexCoord1iv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLint
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glTexCoord1iv"
argument_list|)
argument_list|)
expr_stmt|;
name|TexCoord1i
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLint
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glTexCoord1i"
argument_list|)
argument_list|)
expr_stmt|;
name|TexCoord1fv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLfloat
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glTexCoord1fv"
argument_list|)
argument_list|)
expr_stmt|;
name|TexCoord1f
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLfloat
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glTexCoord1f"
argument_list|)
argument_list|)
expr_stmt|;
name|TexCoord1dv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLdouble
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glTexCoord1dv"
argument_list|)
argument_list|)
expr_stmt|;
name|TexCoord1d
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLdouble
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glTexCoord1d"
argument_list|)
argument_list|)
expr_stmt|;
name|Rectsv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
specifier|const
name|GLshort
operator|*
argument_list|,
specifier|const
name|GLshort
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glRectsv"
argument_list|)
operator|)
expr_stmt|;
name|Rects
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLshort
argument_list|,
name|GLshort
argument_list|,
name|GLshort
argument_list|,
name|GLshort
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glRects"
argument_list|)
operator|)
expr_stmt|;
name|Rectiv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
specifier|const
name|GLint
operator|*
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glRectiv"
argument_list|)
operator|)
expr_stmt|;
name|Recti
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glRecti"
argument_list|)
operator|)
expr_stmt|;
name|Rectfv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
specifier|const
name|GLfloat
operator|*
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glRectfv"
argument_list|)
operator|)
expr_stmt|;
name|Rectf
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glRectf"
argument_list|)
operator|)
expr_stmt|;
name|Rectdv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
specifier|const
name|GLdouble
operator|*
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glRectdv"
argument_list|)
operator|)
expr_stmt|;
name|Rectd
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glRectd"
argument_list|)
operator|)
expr_stmt|;
name|RasterPos4sv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLshort
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glRasterPos4sv"
argument_list|)
argument_list|)
expr_stmt|;
name|RasterPos4s
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLshort
argument_list|,
name|GLshort
argument_list|,
name|GLshort
argument_list|,
name|GLshort
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glRasterPos4s"
argument_list|)
operator|)
expr_stmt|;
name|RasterPos4iv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLint
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glRasterPos4iv"
argument_list|)
argument_list|)
expr_stmt|;
name|RasterPos4i
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glRasterPos4i"
argument_list|)
operator|)
expr_stmt|;
name|RasterPos4fv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLfloat
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glRasterPos4fv"
argument_list|)
argument_list|)
expr_stmt|;
name|RasterPos4f
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glRasterPos4f"
argument_list|)
operator|)
expr_stmt|;
name|RasterPos4dv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLdouble
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glRasterPos4dv"
argument_list|)
argument_list|)
expr_stmt|;
name|RasterPos4d
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glRasterPos4d"
argument_list|)
operator|)
expr_stmt|;
name|RasterPos3sv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLshort
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glRasterPos3sv"
argument_list|)
argument_list|)
expr_stmt|;
name|RasterPos3s
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLshort
argument_list|,
name|GLshort
argument_list|,
name|GLshort
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glRasterPos3s"
argument_list|)
operator|)
expr_stmt|;
name|RasterPos3iv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLint
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glRasterPos3iv"
argument_list|)
argument_list|)
expr_stmt|;
name|RasterPos3i
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glRasterPos3i"
argument_list|)
operator|)
expr_stmt|;
name|RasterPos3fv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLfloat
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glRasterPos3fv"
argument_list|)
argument_list|)
expr_stmt|;
name|RasterPos3f
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glRasterPos3f"
argument_list|)
operator|)
expr_stmt|;
name|RasterPos3dv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLdouble
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glRasterPos3dv"
argument_list|)
argument_list|)
expr_stmt|;
name|RasterPos3d
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glRasterPos3d"
argument_list|)
operator|)
expr_stmt|;
name|RasterPos2sv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLshort
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glRasterPos2sv"
argument_list|)
argument_list|)
expr_stmt|;
name|RasterPos2s
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLshort
argument_list|,
name|GLshort
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glRasterPos2s"
argument_list|)
operator|)
expr_stmt|;
name|RasterPos2iv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLint
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glRasterPos2iv"
argument_list|)
argument_list|)
expr_stmt|;
name|RasterPos2i
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glRasterPos2i"
argument_list|)
operator|)
expr_stmt|;
name|RasterPos2fv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLfloat
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glRasterPos2fv"
argument_list|)
argument_list|)
expr_stmt|;
name|RasterPos2f
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glRasterPos2f"
argument_list|)
operator|)
expr_stmt|;
name|RasterPos2dv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLdouble
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glRasterPos2dv"
argument_list|)
argument_list|)
expr_stmt|;
name|RasterPos2d
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glRasterPos2d"
argument_list|)
operator|)
expr_stmt|;
name|Normal3sv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLshort
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glNormal3sv"
argument_list|)
argument_list|)
expr_stmt|;
name|Normal3s
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLshort
argument_list|,
name|GLshort
argument_list|,
name|GLshort
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glNormal3s"
argument_list|)
operator|)
expr_stmt|;
name|Normal3iv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLint
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glNormal3iv"
argument_list|)
argument_list|)
expr_stmt|;
name|Normal3i
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glNormal3i"
argument_list|)
operator|)
expr_stmt|;
name|Normal3fv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLfloat
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glNormal3fv"
argument_list|)
argument_list|)
expr_stmt|;
name|Normal3f
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glNormal3f"
argument_list|)
operator|)
expr_stmt|;
name|Normal3dv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLdouble
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glNormal3dv"
argument_list|)
argument_list|)
expr_stmt|;
name|Normal3d
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glNormal3d"
argument_list|)
operator|)
expr_stmt|;
name|Normal3bv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLbyte
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glNormal3bv"
argument_list|)
argument_list|)
expr_stmt|;
name|Normal3b
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLbyte
argument_list|,
name|GLbyte
argument_list|,
name|GLbyte
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glNormal3b"
argument_list|)
operator|)
expr_stmt|;
name|Indexsv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLshort
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glIndexsv"
argument_list|)
argument_list|)
expr_stmt|;
name|Indexs
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLshort
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glIndexs"
argument_list|)
argument_list|)
expr_stmt|;
name|Indexiv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLint
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glIndexiv"
argument_list|)
argument_list|)
expr_stmt|;
name|Indexi
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLint
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glIndexi"
argument_list|)
argument_list|)
expr_stmt|;
name|Indexfv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLfloat
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glIndexfv"
argument_list|)
argument_list|)
expr_stmt|;
name|Indexf
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLfloat
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glIndexf"
argument_list|)
argument_list|)
expr_stmt|;
name|Indexdv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLdouble
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glIndexdv"
argument_list|)
argument_list|)
expr_stmt|;
name|Indexd
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLdouble
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glIndexd"
argument_list|)
argument_list|)
expr_stmt|;
name|End
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glEnd"
argument_list|)
argument_list|)
expr_stmt|;
name|EdgeFlagv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLboolean
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glEdgeFlagv"
argument_list|)
argument_list|)
expr_stmt|;
name|EdgeFlag
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLboolean
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glEdgeFlag"
argument_list|)
argument_list|)
expr_stmt|;
name|Color4usv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLushort
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glColor4usv"
argument_list|)
argument_list|)
expr_stmt|;
name|Color4us
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLushort
argument_list|,
name|GLushort
argument_list|,
name|GLushort
argument_list|,
name|GLushort
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glColor4us"
argument_list|)
operator|)
expr_stmt|;
name|Color4uiv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLuint
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glColor4uiv"
argument_list|)
argument_list|)
expr_stmt|;
name|Color4ui
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glColor4ui"
argument_list|)
operator|)
expr_stmt|;
name|Color4ubv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLubyte
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glColor4ubv"
argument_list|)
argument_list|)
expr_stmt|;
name|Color4ub
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLubyte
argument_list|,
name|GLubyte
argument_list|,
name|GLubyte
argument_list|,
name|GLubyte
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glColor4ub"
argument_list|)
operator|)
expr_stmt|;
name|Color4sv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLshort
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glColor4sv"
argument_list|)
argument_list|)
expr_stmt|;
name|Color4s
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLshort
argument_list|,
name|GLshort
argument_list|,
name|GLshort
argument_list|,
name|GLshort
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glColor4s"
argument_list|)
operator|)
expr_stmt|;
name|Color4iv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLint
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glColor4iv"
argument_list|)
argument_list|)
expr_stmt|;
name|Color4i
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glColor4i"
argument_list|)
operator|)
expr_stmt|;
name|Color4fv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLfloat
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glColor4fv"
argument_list|)
argument_list|)
expr_stmt|;
name|Color4f
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glColor4f"
argument_list|)
operator|)
expr_stmt|;
name|Color4dv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLdouble
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glColor4dv"
argument_list|)
argument_list|)
expr_stmt|;
name|Color4d
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glColor4d"
argument_list|)
operator|)
expr_stmt|;
name|Color4bv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLbyte
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glColor4bv"
argument_list|)
argument_list|)
expr_stmt|;
name|Color4b
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLbyte
argument_list|,
name|GLbyte
argument_list|,
name|GLbyte
argument_list|,
name|GLbyte
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glColor4b"
argument_list|)
operator|)
expr_stmt|;
name|Color3usv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLushort
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glColor3usv"
argument_list|)
argument_list|)
expr_stmt|;
name|Color3us
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLushort
argument_list|,
name|GLushort
argument_list|,
name|GLushort
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glColor3us"
argument_list|)
operator|)
expr_stmt|;
name|Color3uiv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLuint
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glColor3uiv"
argument_list|)
argument_list|)
expr_stmt|;
name|Color3ui
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glColor3ui"
argument_list|)
operator|)
expr_stmt|;
name|Color3ubv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLubyte
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glColor3ubv"
argument_list|)
argument_list|)
expr_stmt|;
name|Color3ub
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLubyte
argument_list|,
name|GLubyte
argument_list|,
name|GLubyte
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glColor3ub"
argument_list|)
operator|)
expr_stmt|;
name|Color3sv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLshort
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glColor3sv"
argument_list|)
argument_list|)
expr_stmt|;
name|Color3s
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLshort
argument_list|,
name|GLshort
argument_list|,
name|GLshort
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glColor3s"
argument_list|)
operator|)
expr_stmt|;
name|Color3iv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLint
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glColor3iv"
argument_list|)
argument_list|)
expr_stmt|;
name|Color3i
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glColor3i"
argument_list|)
operator|)
expr_stmt|;
name|Color3fv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLfloat
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glColor3fv"
argument_list|)
argument_list|)
expr_stmt|;
name|Color3f
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glColor3f"
argument_list|)
operator|)
expr_stmt|;
name|Color3dv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLdouble
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glColor3dv"
argument_list|)
argument_list|)
expr_stmt|;
name|Color3d
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glColor3d"
argument_list|)
operator|)
expr_stmt|;
name|Color3bv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLbyte
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glColor3bv"
argument_list|)
argument_list|)
expr_stmt|;
name|Color3b
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLbyte
argument_list|,
name|GLbyte
argument_list|,
name|GLbyte
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glColor3b"
argument_list|)
operator|)
expr_stmt|;
name|Bitmap
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
specifier|const
name|GLubyte
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glBitmap"
argument_list|)
operator|)
expr_stmt|;
name|Begin
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glBegin"
argument_list|)
argument_list|)
expr_stmt|;
name|ListBase
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glListBase"
argument_list|)
argument_list|)
expr_stmt|;
name|GenLists
operator|=
cast|reinterpret_cast
argument_list|<
name|GLuint
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLsizei
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glGenLists"
argument_list|)
argument_list|)
expr_stmt|;
name|DeleteLists
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glDeleteLists"
argument_list|)
operator|)
expr_stmt|;
name|CallLists
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glCallLists"
argument_list|)
operator|)
expr_stmt|;
name|CallList
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glCallList"
argument_list|)
argument_list|)
expr_stmt|;
name|EndList
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glEndList"
argument_list|)
argument_list|)
expr_stmt|;
name|NewList
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glNewList"
argument_list|)
operator|)
expr_stmt|;
name|Indexubv
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
specifier|const
name|GLubyte
operator|*
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glIndexubv"
argument_list|)
argument_list|)
expr_stmt|;
name|Indexub
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLubyte
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glIndexub"
argument_list|)
argument_list|)
expr_stmt|;
name|TexSubImage1D
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glTexSubImage1D"
argument_list|)
operator|)
expr_stmt|;
name|CopyTexSubImage1D
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glCopyTexSubImage1D"
argument_list|)
operator|)
expr_stmt|;
name|CopyTexImage1D
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glCopyTexImage1D"
argument_list|)
operator|)
expr_stmt|;
name|GetPointerv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLvoid
operator|*
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glGetPointerv"
argument_list|)
operator|)
expr_stmt|;
name|PushClientAttrib
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLbitfield
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glPushClientAttrib"
argument_list|)
argument_list|)
expr_stmt|;
name|PopClientAttrib
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glPopClientAttrib"
argument_list|)
argument_list|)
expr_stmt|;
name|PrioritizeTextures
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glPrioritizeTextures"
argument_list|)
operator|)
expr_stmt|;
name|AreTexturesResident
operator|=
expr|reinterpret_cast
operator|<
name|GLboolean
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|,
name|GLboolean
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glAreTexturesResident"
argument_list|)
operator|)
expr_stmt|;
name|VertexPointer
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glVertexPointer"
argument_list|)
operator|)
expr_stmt|;
name|TexCoordPointer
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glTexCoordPointer"
argument_list|)
operator|)
expr_stmt|;
name|NormalPointer
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glNormalPointer"
argument_list|)
operator|)
expr_stmt|;
name|InterleavedArrays
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glInterleavedArrays"
argument_list|)
operator|)
expr_stmt|;
name|IndexPointer
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glIndexPointer"
argument_list|)
operator|)
expr_stmt|;
name|EnableClientState
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glEnableClientState"
argument_list|)
argument_list|)
expr_stmt|;
name|EdgeFlagPointer
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glEdgeFlagPointer"
argument_list|)
operator|)
expr_stmt|;
name|DisableClientState
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glDisableClientState"
argument_list|)
argument_list|)
expr_stmt|;
name|ColorPointer
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glColorPointer"
argument_list|)
operator|)
expr_stmt|;
name|ArrayElement
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLint
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glArrayElement"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|resolveGLES2
name|void
name|QWindowsOpenGL
operator|::
name|resolveGLES2
parameter_list|()
block|{
name|ActiveTexture
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glActiveTexture"
argument_list|)
argument_list|)
expr_stmt|;
name|AttachShader
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glAttachShader"
argument_list|)
operator|)
expr_stmt|;
name|BindAttribLocation
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
specifier|const
name|GLchar
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glBindAttribLocation"
argument_list|)
operator|)
expr_stmt|;
name|BindBuffer
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glBindBuffer"
argument_list|)
operator|)
expr_stmt|;
name|BindFramebuffer
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glBindFramebuffer"
argument_list|)
operator|)
expr_stmt|;
name|BindRenderbuffer
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glBindRenderbuffer"
argument_list|)
operator|)
expr_stmt|;
name|BlendColor
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLclampf
argument_list|,
name|GLclampf
argument_list|,
name|GLclampf
argument_list|,
name|GLclampf
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glBlendColor"
argument_list|)
operator|)
expr_stmt|;
name|BlendEquation
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glBlendEquation"
argument_list|)
argument_list|)
expr_stmt|;
name|BlendEquationSeparate
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glBlendEquationSeparate"
argument_list|)
operator|)
expr_stmt|;
name|BlendFuncSeparate
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glBlendFuncSeparate"
argument_list|)
operator|)
expr_stmt|;
name|BufferData
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizeiptr
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glBufferData"
argument_list|)
operator|)
expr_stmt|;
name|BufferSubData
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLintptr
argument_list|,
name|GLsizeiptr
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glBufferSubData"
argument_list|)
operator|)
expr_stmt|;
name|CheckFramebufferStatus
operator|=
cast|reinterpret_cast
argument_list|<
name|GLenum
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glCheckFramebufferStatus"
argument_list|)
argument_list|)
expr_stmt|;
name|ClearDepthf
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLclampf
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glClearDepthf"
argument_list|)
argument_list|)
expr_stmt|;
name|CompileShader
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glCompileShader"
argument_list|)
argument_list|)
expr_stmt|;
name|CompressedTexImage2D
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glCompressedTexImage2D"
argument_list|)
operator|)
expr_stmt|;
name|CompressedTexSubImage2D
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glCompressedTexSubImage2D"
argument_list|)
operator|)
expr_stmt|;
name|CreateProgram
operator|=
cast|reinterpret_cast
argument_list|<
name|GLuint
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|void
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glCreateProgram"
argument_list|)
argument_list|)
expr_stmt|;
name|CreateShader
operator|=
cast|reinterpret_cast
argument_list|<
name|GLuint
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glCreateShader"
argument_list|)
argument_list|)
expr_stmt|;
name|DeleteBuffers
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glDeleteBuffers"
argument_list|)
operator|)
expr_stmt|;
name|DeleteFramebuffers
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glDeleteFramebuffers"
argument_list|)
operator|)
expr_stmt|;
name|DeleteProgram
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glDeleteProgram"
argument_list|)
argument_list|)
expr_stmt|;
name|DeleteRenderbuffers
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glDeleteRenderbuffers"
argument_list|)
operator|)
expr_stmt|;
name|DeleteShader
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glDeleteShader"
argument_list|)
argument_list|)
expr_stmt|;
name|DepthRangef
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLclampf
argument_list|,
name|GLclampf
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glDepthRangef"
argument_list|)
operator|)
expr_stmt|;
name|DetachShader
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glDetachShader"
argument_list|)
operator|)
expr_stmt|;
name|DisableVertexAttribArray
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glDisableVertexAttribArray"
argument_list|)
argument_list|)
expr_stmt|;
name|EnableVertexAttribArray
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glEnableVertexAttribArray"
argument_list|)
argument_list|)
expr_stmt|;
name|FramebufferRenderbuffer
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glFramebufferRenderbuffer"
argument_list|)
operator|)
expr_stmt|;
name|FramebufferTexture2D
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glFramebufferTexture2D"
argument_list|)
operator|)
expr_stmt|;
name|GenBuffers
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glGenBuffers"
argument_list|)
operator|)
expr_stmt|;
name|GenerateMipmap
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glGenerateMipmap"
argument_list|)
argument_list|)
expr_stmt|;
name|GenFramebuffers
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glGenFramebuffers"
argument_list|)
operator|)
expr_stmt|;
name|GenRenderbuffers
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glGenRenderbuffers"
argument_list|)
operator|)
expr_stmt|;
name|GetActiveAttrib
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
operator|*
argument_list|,
name|GLint
operator|*
argument_list|,
name|GLenum
operator|*
argument_list|,
name|GLchar
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glGetActiveAttrib"
argument_list|)
operator|)
expr_stmt|;
name|GetActiveUniform
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
operator|*
argument_list|,
name|GLint
operator|*
argument_list|,
name|GLenum
operator|*
argument_list|,
name|GLchar
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glGetActiveUniform"
argument_list|)
operator|)
expr_stmt|;
name|GetAttachedShaders
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
operator|*
argument_list|,
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glGetAttachedShaders"
argument_list|)
operator|)
expr_stmt|;
name|GetAttribLocation
operator|=
expr|reinterpret_cast
operator|<
name|int
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLchar
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glGetAttribLocation"
argument_list|)
operator|)
expr_stmt|;
name|GetBufferParameteriv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glGetBufferParameteriv"
argument_list|)
operator|)
expr_stmt|;
name|GetFramebufferAttachmentParameteriv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glGetFramebufferAttachmentParameteriv"
argument_list|)
operator|)
expr_stmt|;
name|GetProgramiv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glGetProgramiv"
argument_list|)
operator|)
expr_stmt|;
name|GetProgramInfoLog
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
operator|*
argument_list|,
name|GLchar
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glGetProgramInfoLog"
argument_list|)
operator|)
expr_stmt|;
name|GetRenderbufferParameteriv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glGetRenderbufferParameteriv"
argument_list|)
operator|)
expr_stmt|;
name|GetShaderiv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glGetShaderiv"
argument_list|)
operator|)
expr_stmt|;
name|GetShaderInfoLog
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
operator|*
argument_list|,
name|GLchar
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glGetShaderInfoLog"
argument_list|)
operator|)
expr_stmt|;
name|GetShaderPrecisionFormat
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glGetShaderPrecisionFormat"
argument_list|)
operator|)
expr_stmt|;
name|GetShaderSource
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
operator|*
argument_list|,
name|GLchar
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glGetShaderSource"
argument_list|)
operator|)
expr_stmt|;
name|GetUniformfv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glGetUniformfv"
argument_list|)
operator|)
expr_stmt|;
name|GetUniformiv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glGetUniformiv"
argument_list|)
operator|)
expr_stmt|;
name|GetUniformLocation
operator|=
expr|reinterpret_cast
operator|<
name|int
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLchar
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glGetUniformLocation"
argument_list|)
operator|)
expr_stmt|;
name|GetVertexAttribfv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glGetVertexAttribfv"
argument_list|)
operator|)
expr_stmt|;
name|GetVertexAttribiv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glGetVertexAttribiv"
argument_list|)
operator|)
expr_stmt|;
name|GetVertexAttribPointerv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLvoid
operator|*
operator|*
name|pointer
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glGetVertexAttribPointerv"
argument_list|)
operator|)
expr_stmt|;
name|IsBuffer
operator|=
cast|reinterpret_cast
argument_list|<
name|GLboolean
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glIsBuffer"
argument_list|)
argument_list|)
expr_stmt|;
name|IsFramebuffer
operator|=
cast|reinterpret_cast
argument_list|<
name|GLboolean
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glIsFramebuffer"
argument_list|)
argument_list|)
expr_stmt|;
name|IsProgram
operator|=
cast|reinterpret_cast
argument_list|<
name|GLboolean
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glIsProgram"
argument_list|)
argument_list|)
expr_stmt|;
name|IsRenderbuffer
operator|=
cast|reinterpret_cast
argument_list|<
name|GLboolean
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glIsRenderbuffer"
argument_list|)
argument_list|)
expr_stmt|;
name|IsShader
operator|=
cast|reinterpret_cast
argument_list|<
name|GLboolean
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glIsShader"
argument_list|)
argument_list|)
expr_stmt|;
name|LinkProgram
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glLinkProgram"
argument_list|)
argument_list|)
expr_stmt|;
name|ReleaseShaderCompiler
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|void
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glReleaseShaderCompiler"
argument_list|)
argument_list|)
expr_stmt|;
name|RenderbufferStorage
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glRenderbufferStorage"
argument_list|)
operator|)
expr_stmt|;
name|SampleCoverage
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLclampf
argument_list|,
name|GLboolean
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glSampleCoverage"
argument_list|)
operator|)
expr_stmt|;
name|ShaderBinary
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glShaderBinary"
argument_list|)
operator|)
expr_stmt|;
name|ShaderSource
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLchar
operator|*
operator|*
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glShaderSource"
argument_list|)
operator|)
expr_stmt|;
name|StencilFuncSeparate
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glStencilFuncSeparate"
argument_list|)
operator|)
expr_stmt|;
name|StencilMaskSeparate
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glStencilMaskSeparate"
argument_list|)
operator|)
expr_stmt|;
name|StencilOpSeparate
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glStencilOpSeparate"
argument_list|)
operator|)
expr_stmt|;
name|Uniform1f
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glUniform1f"
argument_list|)
operator|)
expr_stmt|;
name|Uniform1fv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glUniform1fv"
argument_list|)
operator|)
expr_stmt|;
name|Uniform1i
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glUniform1i"
argument_list|)
operator|)
expr_stmt|;
name|Uniform1iv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glUniform1iv"
argument_list|)
operator|)
expr_stmt|;
name|Uniform2f
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glUniform2f"
argument_list|)
operator|)
expr_stmt|;
name|Uniform2fv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glUniform2fv"
argument_list|)
operator|)
expr_stmt|;
name|Uniform2i
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glUniform2i"
argument_list|)
operator|)
expr_stmt|;
name|Uniform2iv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glUniform2iv"
argument_list|)
operator|)
expr_stmt|;
name|Uniform3f
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glUniform3f"
argument_list|)
operator|)
expr_stmt|;
name|Uniform3fv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glUniform3fv"
argument_list|)
operator|)
expr_stmt|;
name|Uniform3i
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glUniform3i"
argument_list|)
operator|)
expr_stmt|;
name|Uniform3iv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glUniform3iv"
argument_list|)
operator|)
expr_stmt|;
name|Uniform4f
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glUniform4f"
argument_list|)
operator|)
expr_stmt|;
name|Uniform4fv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glUniform4fv"
argument_list|)
operator|)
expr_stmt|;
name|Uniform4i
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glUniform4i"
argument_list|)
operator|)
expr_stmt|;
name|Uniform4iv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glUniform4iv"
argument_list|)
operator|)
expr_stmt|;
name|UniformMatrix2fv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glUniformMatrix2fv"
argument_list|)
operator|)
expr_stmt|;
name|UniformMatrix3fv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glUniformMatrix3fv"
argument_list|)
operator|)
expr_stmt|;
name|UniformMatrix4fv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glUniformMatrix4fv"
argument_list|)
operator|)
expr_stmt|;
name|UseProgram
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glUseProgram"
argument_list|)
argument_list|)
expr_stmt|;
name|ValidateProgram
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|APIENTRY
operator|*
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|resolveFunc
argument_list|(
literal|"glValidateProgram"
argument_list|)
argument_list|)
expr_stmt|;
name|VertexAttrib1f
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glVertexAttrib1f"
argument_list|)
operator|)
expr_stmt|;
name|VertexAttrib1fv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glVertexAttrib1fv"
argument_list|)
operator|)
expr_stmt|;
name|VertexAttrib2f
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glVertexAttrib2f"
argument_list|)
operator|)
expr_stmt|;
name|VertexAttrib2fv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glVertexAttrib2fv"
argument_list|)
operator|)
expr_stmt|;
name|VertexAttrib3f
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glVertexAttrib3f"
argument_list|)
operator|)
expr_stmt|;
name|VertexAttrib3fv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glVertexAttrib3fv"
argument_list|)
operator|)
expr_stmt|;
name|VertexAttrib4f
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glVertexAttrib4f"
argument_list|)
operator|)
expr_stmt|;
name|VertexAttrib4fv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glVertexAttrib4fv"
argument_list|)
operator|)
expr_stmt|;
name|VertexAttribPointer
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|APIENTRY
operator|*
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLboolean
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|resolveFunc
argument_list|(
literal|"glVertexAttribPointer"
argument_list|)
operator|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|resolve
name|void
name|QWindowsOpenGL
operator|::
name|resolve
parameter_list|()
block|{
switch|switch
condition|(
name|libraryType
argument_list|()
condition|)
block|{
case|case
name|DesktopGL
case|:
name|resolveWGL
argument_list|()
expr_stmt|;
name|resolveGLCommon
argument_list|()
expr_stmt|;
name|resolveGL11
argument_list|()
expr_stmt|;
break|break;
case|case
name|GLES2
case|:
name|resolveEGL
argument_list|()
expr_stmt|;
name|resolveGLCommon
argument_list|()
expr_stmt|;
name|resolveGLES2
argument_list|()
expr_stmt|;
break|break;
default|default:
name|Q_ASSERT_X
argument_list|(
literal|0
argument_list|,
literal|"QWindowsOpenGL"
argument_list|,
literal|"Nothing to resolve"
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
end_function
begin_function
DECL|function|testDesktopGL
name|bool
name|QWindowsOpenGL
operator|::
name|testDesktopGL
parameter_list|()
block|{
name|HMODULE
name|lib
init|=
literal|0
decl_stmt|;
name|HWND
name|wnd
init|=
literal|0
decl_stmt|;
name|HDC
name|dc
init|=
literal|0
decl_stmt|;
name|HGLRC
name|context
init|=
literal|0
decl_stmt|;
name|LPCTSTR
name|className
init|=
literal|L"qtopenglproxytest"
decl_stmt|;
name|HGLRC
function_decl|(
name|WINAPI
modifier|*
name|CreateContext
function_decl|)
parameter_list|(
name|HDC
name|dc
parameter_list|)
function_decl|=
literal|0
function_decl|;
name|BOOL
function_decl|(
name|WINAPI
modifier|*
name|DeleteContext
function_decl|)
parameter_list|(
name|HGLRC
name|context
parameter_list|)
function_decl|=
literal|0
function_decl|;
name|BOOL
function_decl|(
name|WINAPI
modifier|*
name|MakeCurrent
function_decl|)
parameter_list|(
name|HDC
name|dc
parameter_list|,
name|HGLRC
name|context
parameter_list|)
function_decl|=
literal|0
function_decl|;
name|PROC
function_decl|(
name|WINAPI
modifier|*
name|WGL_GetProcAddress
function_decl|)
parameter_list|(
name|LPCSTR
name|name
parameter_list|)
function_decl|=
literal|0
function_decl|;
name|bool
name|result
init|=
literal|false
decl_stmt|;
comment|// Test #1: Load opengl32.dll and try to resolve an OpenGL 2 function.
comment|// This will typically fail on systems that do not have a real OpenGL driver.
name|lib
operator|=
name|qgl_loadLib
argument_list|(
literal|"opengl32.dll"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
if|if
condition|(
name|lib
condition|)
block|{
name|CreateContext
operator|=
cast|reinterpret_cast
argument_list|<
name|HGLRC
operator|(
name|WINAPI
operator|*
operator|)
operator|(
name|HDC
operator|)
argument_list|>
argument_list|(
operator|::
name|GetProcAddress
argument_list|(
name|lib
argument_list|,
literal|"wglCreateContext"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|CreateContext
condition|)
goto|goto
name|cleanup
goto|;
name|DeleteContext
operator|=
cast|reinterpret_cast
argument_list|<
name|BOOL
operator|(
name|WINAPI
operator|*
operator|)
operator|(
name|HGLRC
operator|)
argument_list|>
argument_list|(
operator|::
name|GetProcAddress
argument_list|(
name|lib
argument_list|,
literal|"wglDeleteContext"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|DeleteContext
condition|)
goto|goto
name|cleanup
goto|;
name|MakeCurrent
operator|=
expr|reinterpret_cast
operator|<
name|BOOL
argument_list|(
name|WINAPI
operator|*
argument_list|)
argument_list|(
name|HDC
argument_list|,
name|HGLRC
argument_list|)
operator|>
operator|(
operator|::
name|GetProcAddress
argument_list|(
name|lib
argument_list|,
literal|"wglMakeCurrent"
argument_list|)
operator|)
expr_stmt|;
if|if
condition|(
operator|!
name|MakeCurrent
condition|)
goto|goto
name|cleanup
goto|;
name|WGL_GetProcAddress
operator|=
cast|reinterpret_cast
argument_list|<
name|PROC
operator|(
name|WINAPI
operator|*
operator|)
operator|(
name|LPCSTR
operator|)
argument_list|>
argument_list|(
operator|::
name|GetProcAddress
argument_list|(
name|lib
argument_list|,
literal|"wglGetProcAddress"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|WGL_GetProcAddress
condition|)
goto|goto
name|cleanup
goto|;
name|WNDCLASS
name|wclass
decl_stmt|;
name|wclass
operator|.
name|cbClsExtra
operator|=
literal|0
expr_stmt|;
name|wclass
operator|.
name|cbWndExtra
operator|=
literal|0
expr_stmt|;
name|wclass
operator|.
name|hInstance
operator|=
operator|(
name|HINSTANCE
operator|)
name|GetModuleHandle
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|wclass
operator|.
name|hIcon
operator|=
literal|0
expr_stmt|;
name|wclass
operator|.
name|hCursor
operator|=
literal|0
expr_stmt|;
name|wclass
operator|.
name|hbrBackground
operator|=
call|(
name|HBRUSH
call|)
argument_list|(
name|COLOR_BACKGROUND
argument_list|)
expr_stmt|;
name|wclass
operator|.
name|lpszMenuName
operator|=
literal|0
expr_stmt|;
name|wclass
operator|.
name|lpfnWndProc
operator|=
name|DefWindowProc
expr_stmt|;
name|wclass
operator|.
name|lpszClassName
operator|=
name|className
expr_stmt|;
name|wclass
operator|.
name|style
operator|=
name|CS_OWNDC
expr_stmt|;
if|if
condition|(
operator|!
name|RegisterClass
argument_list|(
operator|&
name|wclass
argument_list|)
condition|)
goto|goto
name|cleanup
goto|;
name|wnd
operator|=
name|CreateWindow
argument_list|(
name|className
argument_list|,
literal|L"qtopenglproxytest"
argument_list|,
name|WS_OVERLAPPED
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|640
argument_list|,
literal|480
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|wclass
operator|.
name|hInstance
argument_list|,
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|wnd
condition|)
goto|goto
name|cleanup
goto|;
name|dc
operator|=
name|GetDC
argument_list|(
name|wnd
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|dc
condition|)
goto|goto
name|cleanup
goto|;
name|PIXELFORMATDESCRIPTOR
name|pfd
decl_stmt|;
name|memset
argument_list|(
operator|&
name|pfd
argument_list|,
literal|0
argument_list|,
sizeof|sizeof
argument_list|(
name|PIXELFORMATDESCRIPTOR
argument_list|)
argument_list|)
expr_stmt|;
name|pfd
operator|.
name|nSize
operator|=
sizeof|sizeof
argument_list|(
name|PIXELFORMATDESCRIPTOR
argument_list|)
expr_stmt|;
name|pfd
operator|.
name|nVersion
operator|=
literal|1
expr_stmt|;
name|pfd
operator|.
name|dwFlags
operator|=
name|PFD_SUPPORT_OPENGL
operator||
name|PFD_DRAW_TO_WINDOW
operator||
name|PFD_GENERIC_FORMAT
expr_stmt|;
name|pfd
operator|.
name|iPixelType
operator|=
name|PFD_TYPE_RGBA
expr_stmt|;
comment|// Use the GDI functions. Under the hood this will call the wgl variants in opengl32.dll.
name|int
name|pixelFormat
init|=
name|ChoosePixelFormat
argument_list|(
name|dc
argument_list|,
operator|&
name|pfd
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|pixelFormat
condition|)
goto|goto
name|cleanup
goto|;
if|if
condition|(
operator|!
name|SetPixelFormat
argument_list|(
name|dc
argument_list|,
name|pixelFormat
argument_list|,
operator|&
name|pfd
argument_list|)
condition|)
goto|goto
name|cleanup
goto|;
name|context
operator|=
name|CreateContext
argument_list|(
name|dc
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
goto|goto
name|cleanup
goto|;
if|if
condition|(
operator|!
name|MakeCurrent
argument_list|(
name|dc
argument_list|,
name|context
argument_list|)
condition|)
goto|goto
name|cleanup
goto|;
comment|// Now that there is finally a context current, try doing something useful.
if|if
condition|(
name|WGL_GetProcAddress
argument_list|(
literal|"glCreateShader"
argument_list|)
condition|)
block|{
name|result
operator|=
literal|true
expr_stmt|;
name|qCDebug
argument_list|(
name|qglLc
argument_list|,
literal|"OpenGL 2 entry points available"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|qCDebug
argument_list|(
name|qglLc
argument_list|,
literal|"OpenGL 2 entry points not found"
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|qCDebug
argument_list|(
name|qglLc
argument_list|,
literal|"Failed to load opengl32.dll"
argument_list|)
expr_stmt|;
block|}
name|cleanup
label|:
if|if
condition|(
name|MakeCurrent
condition|)
name|MakeCurrent
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
name|context
condition|)
name|DeleteContext
argument_list|(
name|context
argument_list|)
expr_stmt|;
if|if
condition|(
name|dc
operator|&&
name|wnd
condition|)
name|ReleaseDC
argument_list|(
name|wnd
argument_list|,
name|dc
argument_list|)
expr_stmt|;
if|if
condition|(
name|wnd
condition|)
name|DestroyWindow
argument_list|(
name|wnd
argument_list|)
expr_stmt|;
name|UnregisterClass
argument_list|(
name|className
argument_list|,
name|GetModuleHandle
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|lib
condition|)
name|FreeLibrary
argument_list|(
name|lib
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
end_function
begin_class
DECL|class|QWindowsOpenGLList
class|class
name|QWindowsOpenGLList
block|{
public|public:
name|QWindowsOpenGLList
parameter_list|()
constructor_decl|;
name|~
name|QWindowsOpenGLList
parameter_list|()
destructor_decl|;
DECL|member|list
name|QVector
argument_list|<
name|QAbstractWindowsOpenGL
modifier|*
argument_list|>
name|list
decl_stmt|;
block|}
class|;
end_class
begin_constructor
DECL|function|QWindowsOpenGLList
name|QWindowsOpenGLList
operator|::
name|QWindowsOpenGLList
parameter_list|()
block|{
comment|// For now there is always one OpenGL ( + winsys interface) loaded.
comment|// This may change in the future.
name|list
operator|.
name|append
argument_list|(
operator|new
name|QWindowsOpenGL
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_destructor
DECL|function|~QWindowsOpenGLList
name|QWindowsOpenGLList
operator|::
name|~
name|QWindowsOpenGLList
parameter_list|()
block|{
name|qDeleteAll
argument_list|(
name|list
argument_list|)
expr_stmt|;
block|}
end_destructor
begin_comment
comment|// Use Q_GLOBAL_STATIC and perform initialization in the constructor to be
end_comment
begin_comment
comment|// thread safe.
end_comment
begin_macro
name|Q_GLOBAL_STATIC
argument_list|(
argument|QWindowsOpenGLList
argument_list|,
argument|gl
argument_list|)
end_macro
begin_function
DECL|function|qgl_choose
specifier|static
specifier|inline
name|QAbstractWindowsOpenGL
modifier|*
name|qgl_choose
parameter_list|()
block|{
return|return
name|gl
argument_list|()
operator|->
name|list
index|[
literal|0
index|]
return|;
block|}
end_function
begin_comment
comment|// functionsReady() -> the DLL is there but some functions were not resolved. This is fatal.
end_comment
begin_comment
comment|// !functionsReady() -> could not load a GL implementation. No error message in this case.
end_comment
begin_define
DECL|macro|GLWARN
define|#
directive|define
name|GLWARN
parameter_list|(
name|g
parameter_list|,
name|func
parameter_list|,
name|prefix
parameter_list|)
define|\
value|{                                                                   \         if (g->functionsReady())                                        \             qFatal("Qt OpenGL: Attempted to call unresolved function %s%s. " \                    "This is likely caused by making OpenGL-only calls with an OpenGL ES implementation (Angle).", \                    prefix, #func);                                      \     }
end_define
begin_define
DECL|macro|GLCALLV
define|#
directive|define
name|GLCALLV
parameter_list|(
name|func
parameter_list|,
modifier|...
parameter_list|)
define|\
value|{                                                   \         QAbstractWindowsOpenGL *g = qgl_choose();       \         if (g->func)                                    \             g->func(__VA_ARGS__);                       \         else                                            \             GLWARN(g, func, "gl")                       \     }
end_define
begin_define
DECL|macro|GLCALL
define|#
directive|define
name|GLCALL
parameter_list|(
name|func
parameter_list|,
modifier|...
parameter_list|)
define|\
value|{                                                   \         QAbstractWindowsOpenGL *g = qgl_choose();       \         if (g->func)                                    \             return g->func(__VA_ARGS__);                \         GLWARN(g, func, "gl")                           \         return 0;                                       \     }
end_define
begin_define
DECL|macro|WGLCALL
define|#
directive|define
name|WGLCALL
parameter_list|(
name|func
parameter_list|,
modifier|...
parameter_list|)
define|\
value|{                                                   \         QAbstractWindowsOpenGL *g = qgl_choose();       \         if (g->func)                                    \             return g->func(__VA_ARGS__);                \         GLWARN(g, func, "wgl")                          \         return 0;                                       \     }
end_define
begin_define
DECL|macro|EGLCALL
define|#
directive|define
name|EGLCALL
parameter_list|(
name|func
parameter_list|,
modifier|...
parameter_list|)
define|\
value|{                                                   \         QAbstractWindowsOpenGL *g = qgl_choose();       \         if (g->EGL_##func)                              \             return g->EGL_##func(__VA_ARGS__);          \         GLWARN(g, func, "egl")                          \         return 0;                                       \     }
end_define
begin_extern
extern|extern
literal|"C"
block|{
comment|// WGL
DECL|function|wglCopyContext
name|Q_DECL_EXPORT
name|BOOL
name|WINAPI
name|wglCopyContext
parameter_list|(
name|HGLRC
name|src
parameter_list|,
name|HGLRC
name|dst
parameter_list|,
name|UINT
name|mask
parameter_list|)
block|{
name|WGLCALL
argument_list|(
name|CopyContext
argument_list|,
name|src
argument_list|,
name|dst
argument_list|,
name|mask
argument_list|)
expr_stmt|;
block|}
DECL|function|wglCreateContext
name|Q_DECL_EXPORT
name|HGLRC
name|WINAPI
name|wglCreateContext
parameter_list|(
name|HDC
name|dc
parameter_list|)
block|{
name|WGLCALL
argument_list|(
name|CreateContext
argument_list|,
name|dc
argument_list|)
expr_stmt|;
block|}
DECL|function|wglCreateLayerContext
name|Q_DECL_EXPORT
name|HGLRC
name|WINAPI
name|wglCreateLayerContext
parameter_list|(
name|HDC
name|dc
parameter_list|,
name|int
name|plane
parameter_list|)
block|{
name|WGLCALL
argument_list|(
name|CreateLayerContext
argument_list|,
name|dc
argument_list|,
name|plane
argument_list|)
expr_stmt|;
block|}
DECL|function|wglDeleteContext
name|Q_DECL_EXPORT
name|BOOL
name|WINAPI
name|wglDeleteContext
parameter_list|(
name|HGLRC
name|context
parameter_list|)
block|{
name|WGLCALL
argument_list|(
name|DeleteContext
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
DECL|function|wglGetCurrentContext
name|Q_DECL_EXPORT
name|HGLRC
name|WINAPI
name|wglGetCurrentContext
parameter_list|(
name|VOID
parameter_list|)
block|{
name|WGLCALL
argument_list|(
name|GetCurrentContext
argument_list|)
expr_stmt|;
block|}
DECL|function|wglGetCurrentDC
name|Q_DECL_EXPORT
name|HDC
name|WINAPI
name|wglGetCurrentDC
parameter_list|(
name|VOID
parameter_list|)
block|{
name|WGLCALL
argument_list|(
name|GetCurrentDC
argument_list|)
expr_stmt|;
block|}
DECL|function|wglGetProcAddress
name|Q_DECL_EXPORT
name|PROC
name|WINAPI
name|wglGetProcAddress
parameter_list|(
name|LPCSTR
name|name
parameter_list|)
block|{
name|WGLCALL
argument_list|(
name|GetProcAddress
argument_list|,
name|name
argument_list|)
expr_stmt|;
block|}
DECL|function|wglMakeCurrent
name|Q_DECL_EXPORT
name|BOOL
name|WINAPI
name|wglMakeCurrent
parameter_list|(
name|HDC
name|dc
parameter_list|,
name|HGLRC
name|context
parameter_list|)
block|{
name|WGLCALL
argument_list|(
name|MakeCurrent
argument_list|,
name|dc
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
DECL|function|wglShareLists
name|Q_DECL_EXPORT
name|BOOL
name|WINAPI
name|wglShareLists
parameter_list|(
name|HGLRC
name|context1
parameter_list|,
name|HGLRC
name|context2
parameter_list|)
block|{
name|WGLCALL
argument_list|(
name|ShareLists
argument_list|,
name|context1
argument_list|,
name|context2
argument_list|)
expr_stmt|;
block|}
DECL|function|wglUseFontBitmapsW
name|Q_DECL_EXPORT
name|BOOL
name|WINAPI
name|wglUseFontBitmapsW
parameter_list|(
name|HDC
name|dc
parameter_list|,
name|DWORD
name|first
parameter_list|,
name|DWORD
name|count
parameter_list|,
name|DWORD
name|base
parameter_list|)
block|{
name|WGLCALL
argument_list|(
name|UseFontBitmapsW
argument_list|,
name|dc
argument_list|,
name|first
argument_list|,
name|count
argument_list|,
name|base
argument_list|)
expr_stmt|;
block|}
DECL|function|wglUseFontOutlinesW
name|Q_DECL_EXPORT
name|BOOL
name|WINAPI
name|wglUseFontOutlinesW
parameter_list|(
name|HDC
name|dc
parameter_list|,
name|DWORD
name|first
parameter_list|,
name|DWORD
name|count
parameter_list|,
name|DWORD
name|base
parameter_list|,
name|FLOAT
name|deviation
parameter_list|,
name|FLOAT
name|extrusion
parameter_list|,
name|int
name|format
parameter_list|,
name|LPGLYPHMETRICSFLOAT
name|gmf
parameter_list|)
block|{
name|WGLCALL
argument_list|(
name|UseFontOutlinesW
argument_list|,
name|dc
argument_list|,
name|first
argument_list|,
name|count
argument_list|,
name|base
argument_list|,
name|deviation
argument_list|,
name|extrusion
argument_list|,
name|format
argument_list|,
name|gmf
argument_list|)
expr_stmt|;
block|}
DECL|function|wglDescribeLayerPlane
name|Q_DECL_EXPORT
name|BOOL
name|WINAPI
name|wglDescribeLayerPlane
parameter_list|(
name|HDC
name|dc
parameter_list|,
name|int
name|pixelFormat
parameter_list|,
name|int
name|plane
parameter_list|,
name|UINT
name|n
parameter_list|,
name|LPLAYERPLANEDESCRIPTOR
name|planeDescriptor
parameter_list|)
block|{
name|WGLCALL
argument_list|(
name|DescribeLayerPlane
argument_list|,
name|dc
argument_list|,
name|pixelFormat
argument_list|,
name|plane
argument_list|,
name|n
argument_list|,
name|planeDescriptor
argument_list|)
expr_stmt|;
block|}
DECL|function|wglSetLayerPaletteEntries
name|Q_DECL_EXPORT
name|int
name|WINAPI
name|wglSetLayerPaletteEntries
parameter_list|(
name|HDC
name|dc
parameter_list|,
name|int
name|plane
parameter_list|,
name|int
name|start
parameter_list|,
name|int
name|entries
parameter_list|,
name|CONST
name|COLORREF
modifier|*
name|colors
parameter_list|)
block|{
name|WGLCALL
argument_list|(
name|SetLayerPaletteEntries
argument_list|,
name|dc
argument_list|,
name|plane
argument_list|,
name|start
argument_list|,
name|entries
argument_list|,
name|colors
argument_list|)
expr_stmt|;
block|}
DECL|function|wglGetLayerPaletteEntries
name|Q_DECL_EXPORT
name|int
name|WINAPI
name|wglGetLayerPaletteEntries
parameter_list|(
name|HDC
name|dc
parameter_list|,
name|int
name|plane
parameter_list|,
name|int
name|start
parameter_list|,
name|int
name|entries
parameter_list|,
name|COLORREF
modifier|*
name|color
parameter_list|)
block|{
name|WGLCALL
argument_list|(
name|GetLayerPaletteEntries
argument_list|,
name|dc
argument_list|,
name|plane
argument_list|,
name|start
argument_list|,
name|entries
argument_list|,
name|color
argument_list|)
expr_stmt|;
block|}
DECL|function|wglRealizeLayerPalette
name|Q_DECL_EXPORT
name|BOOL
name|WINAPI
name|wglRealizeLayerPalette
parameter_list|(
name|HDC
name|dc
parameter_list|,
name|int
name|plane
parameter_list|,
name|BOOL
name|realize
parameter_list|)
block|{
name|WGLCALL
argument_list|(
name|RealizeLayerPalette
argument_list|,
name|dc
argument_list|,
name|plane
argument_list|,
name|realize
argument_list|)
expr_stmt|;
block|}
DECL|function|wglSwapLayerBuffers
name|Q_DECL_EXPORT
name|BOOL
name|WINAPI
name|wglSwapLayerBuffers
parameter_list|(
name|HDC
name|dc
parameter_list|,
name|UINT
name|planes
parameter_list|)
block|{
name|WGLCALL
argument_list|(
name|SwapLayerBuffers
argument_list|,
name|dc
argument_list|,
name|planes
argument_list|)
expr_stmt|;
block|}
DECL|function|wglSwapMultipleBuffers
name|Q_DECL_EXPORT
name|DWORD
name|WINAPI
name|wglSwapMultipleBuffers
parameter_list|(
name|UINT
name|n
parameter_list|,
name|CONST
name|WGLSWAP
modifier|*
name|buffers
parameter_list|)
block|{
name|WGLCALL
argument_list|(
name|SwapMultipleBuffers
argument_list|,
name|n
argument_list|,
name|buffers
argument_list|)
expr_stmt|;
block|}
comment|// EGL
DECL|function|eglGetError
name|Q_DECL_EXPORT
name|EGLint
name|EGLAPIENTRY
name|eglGetError
parameter_list|(
name|void
parameter_list|)
block|{
name|EGLCALL
argument_list|(
name|GetError
argument_list|)
expr_stmt|;
block|}
DECL|function|eglGetDisplay
name|Q_DECL_EXPORT
name|EGLDisplay
name|EGLAPIENTRY
name|eglGetDisplay
parameter_list|(
name|EGLNativeDisplayType
name|display_id
parameter_list|)
block|{
name|EGLCALL
argument_list|(
name|GetDisplay
argument_list|,
name|display_id
argument_list|)
expr_stmt|;
block|}
DECL|function|eglInitialize
name|Q_DECL_EXPORT
name|EGLBoolean
name|EGLAPIENTRY
name|eglInitialize
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLint
modifier|*
name|major
parameter_list|,
name|EGLint
modifier|*
name|minor
parameter_list|)
block|{
name|EGLCALL
argument_list|(
name|Initialize
argument_list|,
name|dpy
argument_list|,
name|major
argument_list|,
name|minor
argument_list|)
expr_stmt|;
block|}
DECL|function|eglTerminate
name|Q_DECL_EXPORT
name|EGLBoolean
name|EGLAPIENTRY
name|eglTerminate
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|)
block|{
name|EGLCALL
argument_list|(
name|Terminate
argument_list|,
name|dpy
argument_list|)
expr_stmt|;
block|}
DECL|function|eglQueryString
name|Q_DECL_EXPORT
specifier|const
name|char
modifier|*
name|EGLAPIENTRY
name|eglQueryString
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLint
name|name
parameter_list|)
block|{
name|EGLCALL
argument_list|(
name|QueryString
argument_list|,
name|dpy
argument_list|,
name|name
argument_list|)
expr_stmt|;
block|}
DECL|function|eglGetConfigs
name|Q_DECL_EXPORT
name|EGLBoolean
name|EGLAPIENTRY
name|eglGetConfigs
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLConfig
modifier|*
name|configs
parameter_list|,
name|EGLint
name|config_size
parameter_list|,
name|EGLint
modifier|*
name|num_config
parameter_list|)
block|{
name|EGLCALL
argument_list|(
name|GetConfigs
argument_list|,
name|dpy
argument_list|,
name|configs
argument_list|,
name|config_size
argument_list|,
name|num_config
argument_list|)
expr_stmt|;
block|}
DECL|function|eglChooseConfig
name|Q_DECL_EXPORT
name|EGLBoolean
name|EGLAPIENTRY
name|eglChooseConfig
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
specifier|const
name|EGLint
modifier|*
name|attrib_list
parameter_list|,
name|EGLConfig
modifier|*
name|configs
parameter_list|,
name|EGLint
name|config_size
parameter_list|,
name|EGLint
modifier|*
name|num_config
parameter_list|)
block|{
name|EGLCALL
argument_list|(
name|ChooseConfig
argument_list|,
name|dpy
argument_list|,
name|attrib_list
argument_list|,
name|configs
argument_list|,
name|config_size
argument_list|,
name|num_config
argument_list|)
expr_stmt|;
block|}
DECL|function|eglGetConfigAttrib
name|Q_DECL_EXPORT
name|EGLBoolean
name|EGLAPIENTRY
name|eglGetConfigAttrib
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLConfig
name|config
parameter_list|,
name|EGLint
name|attribute
parameter_list|,
name|EGLint
modifier|*
name|value
parameter_list|)
block|{
name|EGLCALL
argument_list|(
name|GetConfigAttrib
argument_list|,
name|dpy
argument_list|,
name|config
argument_list|,
name|attribute
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
DECL|function|eglCreateWindowSurface
name|Q_DECL_EXPORT
name|EGLSurface
name|EGLAPIENTRY
name|eglCreateWindowSurface
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLConfig
name|config
parameter_list|,
name|EGLNativeWindowType
name|win
parameter_list|,
specifier|const
name|EGLint
modifier|*
name|attrib_list
parameter_list|)
block|{
name|EGLCALL
argument_list|(
name|CreateWindowSurface
argument_list|,
name|dpy
argument_list|,
name|config
argument_list|,
name|win
argument_list|,
name|attrib_list
argument_list|)
expr_stmt|;
block|}
DECL|function|eglCreatePbufferSurface
name|Q_DECL_EXPORT
name|EGLSurface
name|EGLAPIENTRY
name|eglCreatePbufferSurface
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLConfig
name|config
parameter_list|,
specifier|const
name|EGLint
modifier|*
name|attrib_list
parameter_list|)
block|{
name|EGLCALL
argument_list|(
name|CreatePbufferSurface
argument_list|,
name|dpy
argument_list|,
name|config
argument_list|,
name|attrib_list
argument_list|)
expr_stmt|;
block|}
DECL|function|eglCreatePixmapSurface
name|Q_DECL_EXPORT
name|EGLSurface
name|EGLAPIENTRY
name|eglCreatePixmapSurface
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLConfig
name|config
parameter_list|,
name|EGLNativePixmapType
name|pixmap
parameter_list|,
specifier|const
name|EGLint
modifier|*
name|attrib_list
parameter_list|)
block|{
name|EGLCALL
argument_list|(
name|CreatePixmapSurface
argument_list|,
name|dpy
argument_list|,
name|config
argument_list|,
name|pixmap
argument_list|,
name|attrib_list
argument_list|)
expr_stmt|;
block|}
DECL|function|eglDestroySurface
name|Q_DECL_EXPORT
name|EGLBoolean
name|EGLAPIENTRY
name|eglDestroySurface
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSurface
name|surface
parameter_list|)
block|{
name|EGLCALL
argument_list|(
name|DestroySurface
argument_list|,
name|dpy
argument_list|,
name|surface
argument_list|)
expr_stmt|;
block|}
DECL|function|eglQuerySurface
name|Q_DECL_EXPORT
name|EGLBoolean
name|EGLAPIENTRY
name|eglQuerySurface
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSurface
name|surface
parameter_list|,
name|EGLint
name|attribute
parameter_list|,
name|EGLint
modifier|*
name|value
parameter_list|)
block|{
name|EGLCALL
argument_list|(
name|QuerySurface
argument_list|,
name|dpy
argument_list|,
name|surface
argument_list|,
name|attribute
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
DECL|function|eglBindAPI
name|Q_DECL_EXPORT
name|EGLBoolean
name|EGLAPIENTRY
name|eglBindAPI
parameter_list|(
name|EGLenum
name|api
parameter_list|)
block|{
name|EGLCALL
argument_list|(
name|BindAPI
argument_list|,
name|api
argument_list|)
expr_stmt|;
block|}
DECL|function|eglQueryAPI
name|Q_DECL_EXPORT
name|EGLenum
name|EGLAPIENTRY
name|eglQueryAPI
parameter_list|(
name|void
parameter_list|)
block|{
name|EGLCALL
argument_list|(
name|QueryAPI
argument_list|)
expr_stmt|;
block|}
DECL|function|eglWaitClient
name|Q_DECL_EXPORT
name|EGLBoolean
name|EGLAPIENTRY
name|eglWaitClient
parameter_list|(
name|void
parameter_list|)
block|{
name|EGLCALL
argument_list|(
name|WaitClient
argument_list|)
expr_stmt|;
block|}
DECL|function|eglReleaseThread
name|Q_DECL_EXPORT
name|EGLBoolean
name|EGLAPIENTRY
name|eglReleaseThread
parameter_list|(
name|void
parameter_list|)
block|{
name|EGLCALL
argument_list|(
name|ReleaseThread
argument_list|)
expr_stmt|;
block|}
DECL|function|eglCreatePbufferFromClientBuffer
name|Q_DECL_EXPORT
name|EGLSurface
name|EGLAPIENTRY
name|eglCreatePbufferFromClientBuffer
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLenum
name|buftype
parameter_list|,
name|EGLClientBuffer
name|buffer
parameter_list|,
name|EGLConfig
name|config
parameter_list|,
specifier|const
name|EGLint
modifier|*
name|attrib_list
parameter_list|)
block|{
name|EGLCALL
argument_list|(
name|CreatePbufferFromClientBuffer
argument_list|,
name|dpy
argument_list|,
name|buftype
argument_list|,
name|buffer
argument_list|,
name|config
argument_list|,
name|attrib_list
argument_list|)
expr_stmt|;
block|}
DECL|function|eglSurfaceAttrib
name|Q_DECL_EXPORT
name|EGLBoolean
name|EGLAPIENTRY
name|eglSurfaceAttrib
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSurface
name|surface
parameter_list|,
name|EGLint
name|attribute
parameter_list|,
name|EGLint
name|value
parameter_list|)
block|{
name|EGLCALL
argument_list|(
name|SurfaceAttrib
argument_list|,
name|dpy
argument_list|,
name|surface
argument_list|,
name|attribute
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
DECL|function|eglBindTexImage
name|Q_DECL_EXPORT
name|EGLBoolean
name|EGLAPIENTRY
name|eglBindTexImage
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSurface
name|surface
parameter_list|,
name|EGLint
name|buffer
parameter_list|)
block|{
name|EGLCALL
argument_list|(
name|BindTexImage
argument_list|,
name|dpy
argument_list|,
name|surface
argument_list|,
name|buffer
argument_list|)
expr_stmt|;
block|}
DECL|function|eglReleaseTexImage
name|Q_DECL_EXPORT
name|EGLBoolean
name|EGLAPIENTRY
name|eglReleaseTexImage
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSurface
name|surface
parameter_list|,
name|EGLint
name|buffer
parameter_list|)
block|{
name|EGLCALL
argument_list|(
name|ReleaseTexImage
argument_list|,
name|dpy
argument_list|,
name|surface
argument_list|,
name|buffer
argument_list|)
expr_stmt|;
block|}
DECL|function|eglSwapInterval
name|Q_DECL_EXPORT
name|EGLBoolean
name|EGLAPIENTRY
name|eglSwapInterval
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLint
name|interval
parameter_list|)
block|{
name|EGLCALL
argument_list|(
name|SwapInterval
argument_list|,
name|dpy
argument_list|,
name|interval
argument_list|)
expr_stmt|;
block|}
DECL|function|eglCreateContext
name|Q_DECL_EXPORT
name|EGLContext
name|EGLAPIENTRY
name|eglCreateContext
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLConfig
name|config
parameter_list|,
name|EGLContext
name|share_context
parameter_list|,
specifier|const
name|EGLint
modifier|*
name|attrib_list
parameter_list|)
block|{
name|EGLCALL
argument_list|(
name|CreateContext
argument_list|,
name|dpy
argument_list|,
name|config
argument_list|,
name|share_context
argument_list|,
name|attrib_list
argument_list|)
expr_stmt|;
block|}
DECL|function|eglDestroyContext
name|Q_DECL_EXPORT
name|EGLBoolean
name|EGLAPIENTRY
name|eglDestroyContext
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLContext
name|ctx
parameter_list|)
block|{
name|EGLCALL
argument_list|(
name|DestroyContext
argument_list|,
name|dpy
argument_list|,
name|ctx
argument_list|)
expr_stmt|;
block|}
DECL|function|eglMakeCurrent
name|Q_DECL_EXPORT
name|EGLBoolean
name|EGLAPIENTRY
name|eglMakeCurrent
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSurface
name|draw
parameter_list|,
name|EGLSurface
name|read
parameter_list|,
name|EGLContext
name|ctx
parameter_list|)
block|{
name|EGLCALL
argument_list|(
name|MakeCurrent
argument_list|,
name|dpy
argument_list|,
name|draw
argument_list|,
name|read
argument_list|,
name|ctx
argument_list|)
expr_stmt|;
block|}
DECL|function|eglGetCurrentContext
name|Q_DECL_EXPORT
name|EGLContext
name|EGLAPIENTRY
name|eglGetCurrentContext
parameter_list|(
name|void
parameter_list|)
block|{
name|EGLCALL
argument_list|(
name|GetCurrentContext
argument_list|)
expr_stmt|;
block|}
DECL|function|eglGetCurrentSurface
name|Q_DECL_EXPORT
name|EGLSurface
name|EGLAPIENTRY
name|eglGetCurrentSurface
parameter_list|(
name|EGLint
name|readdraw
parameter_list|)
block|{
name|EGLCALL
argument_list|(
name|GetCurrentSurface
argument_list|,
name|readdraw
argument_list|)
expr_stmt|;
block|}
DECL|function|eglGetCurrentDisplay
name|Q_DECL_EXPORT
name|EGLDisplay
name|EGLAPIENTRY
name|eglGetCurrentDisplay
parameter_list|(
name|void
parameter_list|)
block|{
name|EGLCALL
argument_list|(
name|GetCurrentDisplay
argument_list|)
expr_stmt|;
block|}
DECL|function|eglQueryContext
name|Q_DECL_EXPORT
name|EGLBoolean
name|EGLAPIENTRY
name|eglQueryContext
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLContext
name|ctx
parameter_list|,
name|EGLint
name|attribute
parameter_list|,
name|EGLint
modifier|*
name|value
parameter_list|)
block|{
name|EGLCALL
argument_list|(
name|QueryContext
argument_list|,
name|dpy
argument_list|,
name|ctx
argument_list|,
name|attribute
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
DECL|function|eglWaitGL
name|Q_DECL_EXPORT
name|EGLBoolean
name|EGLAPIENTRY
name|eglWaitGL
parameter_list|(
name|void
parameter_list|)
block|{
name|EGLCALL
argument_list|(
name|WaitGL
argument_list|)
expr_stmt|;
block|}
DECL|function|eglWaitNative
name|Q_DECL_EXPORT
name|EGLBoolean
name|EGLAPIENTRY
name|eglWaitNative
parameter_list|(
name|EGLint
name|engine
parameter_list|)
block|{
name|EGLCALL
argument_list|(
name|WaitNative
argument_list|,
name|engine
argument_list|)
expr_stmt|;
block|}
DECL|function|eglSwapBuffers
name|Q_DECL_EXPORT
name|EGLBoolean
name|EGLAPIENTRY
name|eglSwapBuffers
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSurface
name|surface
parameter_list|)
block|{
name|EGLCALL
argument_list|(
name|SwapBuffers
argument_list|,
name|dpy
argument_list|,
name|surface
argument_list|)
expr_stmt|;
block|}
DECL|function|eglCopyBuffers
name|Q_DECL_EXPORT
name|EGLBoolean
name|EGLAPIENTRY
name|eglCopyBuffers
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSurface
name|surface
parameter_list|,
name|EGLNativePixmapType
name|target
parameter_list|)
block|{
name|EGLCALL
argument_list|(
name|CopyBuffers
argument_list|,
name|dpy
argument_list|,
name|surface
argument_list|,
name|target
argument_list|)
expr_stmt|;
block|}
comment|// OpenGL
DECL|function|glViewport
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glViewport
parameter_list|(
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Viewport
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
expr_stmt|;
block|}
DECL|function|glDepthRange
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glDepthRange
parameter_list|(
name|GLdouble
name|nearVal
parameter_list|,
name|GLdouble
name|farVal
parameter_list|)
block|{
if|if
condition|(
name|qgl_choose
argument_list|()
operator|->
name|libraryType
argument_list|()
operator|==
name|QAbstractWindowsOpenGL
operator|::
name|DesktopGL
condition|)
block|{
name|GLCALLV
argument_list|(
name|DepthRange
argument_list|,
name|nearVal
argument_list|,
name|farVal
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|GLCALLV
argument_list|(
name|DepthRangef
argument_list|,
name|nearVal
argument_list|,
name|farVal
argument_list|)
expr_stmt|;
block|}
block|}
DECL|function|glIsEnabled
name|Q_DECL_EXPORT
name|GLboolean
name|APIENTRY
name|glIsEnabled
parameter_list|(
name|GLenum
name|cap
parameter_list|)
block|{
name|GLCALL
argument_list|(
name|IsEnabled
argument_list|,
name|cap
argument_list|)
expr_stmt|;
block|}
DECL|function|glGetTexLevelParameteriv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glGetTexLevelParameteriv
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|GetTexLevelParameteriv
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
DECL|function|glGetTexLevelParameterfv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glGetTexLevelParameterfv
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|GetTexLevelParameterfv
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
DECL|function|glGetTexParameteriv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glGetTexParameteriv
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|GetTexParameteriv
argument_list|,
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
DECL|function|glGetTexParameterfv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glGetTexParameterfv
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|GetTexParameterfv
argument_list|,
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
DECL|function|glGetTexImage
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glGetTexImage
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLvoid
modifier|*
name|pixels
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|GetTexImage
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
expr_stmt|;
block|}
DECL|function|glGetString
name|Q_DECL_EXPORT
specifier|const
name|GLubyte
modifier|*
name|APIENTRY
name|glGetString
parameter_list|(
name|GLenum
name|name
parameter_list|)
block|{
name|GLCALL
argument_list|(
name|GetString
argument_list|,
name|name
argument_list|)
expr_stmt|;
block|}
DECL|function|glGetIntegerv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glGetIntegerv
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|GetIntegerv
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
DECL|function|glGetFloatv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glGetFloatv
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|GetFloatv
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
DECL|function|glGetError
name|Q_DECL_EXPORT
name|GLenum
name|APIENTRY
name|glGetError
parameter_list|()
block|{
name|GLCALL
argument_list|(
name|GetError
argument_list|)
expr_stmt|;
block|}
DECL|function|glGetDoublev
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glGetDoublev
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLdouble
modifier|*
name|params
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|GetDoublev
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
DECL|function|glGetBooleanv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glGetBooleanv
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLboolean
modifier|*
name|params
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|GetBooleanv
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
DECL|function|glReadPixels
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glReadPixels
parameter_list|(
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLvoid
modifier|*
name|pixels
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|ReadPixels
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
expr_stmt|;
block|}
DECL|function|glReadBuffer
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glReadBuffer
parameter_list|(
name|GLenum
name|mode
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|ReadBuffer
argument_list|,
name|mode
argument_list|)
expr_stmt|;
block|}
DECL|function|glPixelStorei
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glPixelStorei
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|PixelStorei
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
expr_stmt|;
block|}
DECL|function|glPixelStoref
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glPixelStoref
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|PixelStoref
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
expr_stmt|;
block|}
DECL|function|glDepthFunc
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glDepthFunc
parameter_list|(
name|GLenum
name|func
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|DepthFunc
argument_list|,
name|func
argument_list|)
expr_stmt|;
block|}
DECL|function|glStencilOp
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glStencilOp
parameter_list|(
name|GLenum
name|fail
parameter_list|,
name|GLenum
name|zfail
parameter_list|,
name|GLenum
name|zpass
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|StencilOp
argument_list|,
name|fail
argument_list|,
name|zfail
argument_list|,
name|zpass
argument_list|)
expr_stmt|;
block|}
DECL|function|glStencilFunc
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glStencilFunc
parameter_list|(
name|GLenum
name|func
parameter_list|,
name|GLint
name|ref
parameter_list|,
name|GLuint
name|mask
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|StencilFunc
argument_list|,
name|func
argument_list|,
name|ref
argument_list|,
name|mask
argument_list|)
expr_stmt|;
block|}
DECL|function|glLogicOp
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glLogicOp
parameter_list|(
name|GLenum
name|opcode
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|LogicOp
argument_list|,
name|opcode
argument_list|)
expr_stmt|;
block|}
DECL|function|glBlendFunc
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glBlendFunc
parameter_list|(
name|GLenum
name|sfactor
parameter_list|,
name|GLenum
name|dfactor
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|BlendFunc
argument_list|,
name|sfactor
argument_list|,
name|dfactor
argument_list|)
expr_stmt|;
block|}
DECL|function|glFlush
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glFlush
parameter_list|()
block|{
name|GLCALLV
argument_list|(
name|Flush
argument_list|)
expr_stmt|;
block|}
DECL|function|glFinish
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glFinish
parameter_list|()
block|{
name|GLCALLV
argument_list|(
name|Finish
argument_list|)
expr_stmt|;
block|}
DECL|function|glEnable
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glEnable
parameter_list|(
name|GLenum
name|cap
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Enable
argument_list|,
name|cap
argument_list|)
expr_stmt|;
block|}
DECL|function|glDisable
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glDisable
parameter_list|(
name|GLenum
name|cap
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Disable
argument_list|,
name|cap
argument_list|)
expr_stmt|;
block|}
DECL|function|glDepthMask
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glDepthMask
parameter_list|(
name|GLboolean
name|flag
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|DepthMask
argument_list|,
name|flag
argument_list|)
expr_stmt|;
block|}
DECL|function|glColorMask
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glColorMask
parameter_list|(
name|GLboolean
name|red
parameter_list|,
name|GLboolean
name|green
parameter_list|,
name|GLboolean
name|blue
parameter_list|,
name|GLboolean
name|alpha
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|ColorMask
argument_list|,
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|,
name|alpha
argument_list|)
expr_stmt|;
block|}
DECL|function|glStencilMask
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glStencilMask
parameter_list|(
name|GLuint
name|mask
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|StencilMask
argument_list|,
name|mask
argument_list|)
expr_stmt|;
block|}
DECL|function|glClearDepth
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glClearDepth
parameter_list|(
name|GLdouble
name|depth
parameter_list|)
block|{
if|if
condition|(
name|qgl_choose
argument_list|()
operator|->
name|libraryType
argument_list|()
operator|==
name|QAbstractWindowsOpenGL
operator|::
name|DesktopGL
condition|)
block|{
name|GLCALLV
argument_list|(
name|ClearDepth
argument_list|,
name|depth
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|GLCALLV
argument_list|(
name|ClearDepthf
argument_list|,
name|depth
argument_list|)
expr_stmt|;
block|}
block|}
DECL|function|glClearStencil
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glClearStencil
parameter_list|(
name|GLint
name|s
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|ClearStencil
argument_list|,
name|s
argument_list|)
expr_stmt|;
block|}
DECL|function|glClearColor
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glClearColor
parameter_list|(
name|GLfloat
name|red
parameter_list|,
name|GLfloat
name|green
parameter_list|,
name|GLfloat
name|blue
parameter_list|,
name|GLfloat
name|alpha
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|ClearColor
argument_list|,
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|,
name|alpha
argument_list|)
expr_stmt|;
block|}
DECL|function|glClear
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glClear
parameter_list|(
name|GLbitfield
name|mask
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Clear
argument_list|,
name|mask
argument_list|)
expr_stmt|;
block|}
DECL|function|glDrawBuffer
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glDrawBuffer
parameter_list|(
name|GLenum
name|mode
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|DrawBuffer
argument_list|,
name|mode
argument_list|)
expr_stmt|;
block|}
DECL|function|glTexImage2D
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glTexImage2D
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|TexImage2D
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|border
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
expr_stmt|;
block|}
DECL|function|glTexImage1D
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glTexImage1D
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|TexImage1D
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|border
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
expr_stmt|;
block|}
DECL|function|glTexParameteriv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glTexParameteriv
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|TexParameteriv
argument_list|,
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
DECL|function|glTexParameteri
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glTexParameteri
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|TexParameteri
argument_list|,
name|target
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
expr_stmt|;
block|}
DECL|function|glTexParameterfv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glTexParameterfv
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|TexParameterfv
argument_list|,
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
DECL|function|glTexParameterf
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glTexParameterf
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|TexParameterf
argument_list|,
name|target
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
expr_stmt|;
block|}
DECL|function|glScissor
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glScissor
parameter_list|(
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Scissor
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
expr_stmt|;
block|}
DECL|function|glPolygonMode
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glPolygonMode
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|mode
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|PolygonMode
argument_list|,
name|face
argument_list|,
name|mode
argument_list|)
expr_stmt|;
block|}
DECL|function|glPointSize
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glPointSize
parameter_list|(
name|GLfloat
name|size
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|PointSize
argument_list|,
name|size
argument_list|)
expr_stmt|;
block|}
DECL|function|glLineWidth
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glLineWidth
parameter_list|(
name|GLfloat
name|width
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|LineWidth
argument_list|,
name|width
argument_list|)
expr_stmt|;
block|}
DECL|function|glHint
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glHint
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|mode
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Hint
argument_list|,
name|target
argument_list|,
name|mode
argument_list|)
expr_stmt|;
block|}
DECL|function|glFrontFace
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glFrontFace
parameter_list|(
name|GLenum
name|mode
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|FrontFace
argument_list|,
name|mode
argument_list|)
expr_stmt|;
block|}
DECL|function|glCullFace
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glCullFace
parameter_list|(
name|GLenum
name|mode
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|CullFace
argument_list|,
name|mode
argument_list|)
expr_stmt|;
block|}
DECL|function|glTranslatef
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glTranslatef
parameter_list|(
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Translatef
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
expr_stmt|;
block|}
DECL|function|glTranslated
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glTranslated
parameter_list|(
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Translated
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
expr_stmt|;
block|}
DECL|function|glScalef
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glScalef
parameter_list|(
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Scalef
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
expr_stmt|;
block|}
DECL|function|glScaled
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glScaled
parameter_list|(
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Scaled
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
expr_stmt|;
block|}
DECL|function|glRotatef
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glRotatef
parameter_list|(
name|GLfloat
name|angle
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Rotatef
argument_list|,
name|angle
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
expr_stmt|;
block|}
DECL|function|glRotated
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glRotated
parameter_list|(
name|GLdouble
name|angle
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Rotated
argument_list|,
name|angle
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
expr_stmt|;
block|}
DECL|function|glPushMatrix
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glPushMatrix
parameter_list|()
block|{
name|GLCALLV
argument_list|(
name|PushMatrix
argument_list|)
expr_stmt|;
block|}
DECL|function|glPopMatrix
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glPopMatrix
parameter_list|()
block|{
name|GLCALLV
argument_list|(
name|PopMatrix
argument_list|)
expr_stmt|;
block|}
DECL|function|glOrtho
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glOrtho
parameter_list|(
name|GLdouble
name|left
parameter_list|,
name|GLdouble
name|right
parameter_list|,
name|GLdouble
name|bottom
parameter_list|,
name|GLdouble
name|top
parameter_list|,
name|GLdouble
name|zNear
parameter_list|,
name|GLdouble
name|zFar
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Ortho
argument_list|,
name|left
argument_list|,
name|right
argument_list|,
name|bottom
argument_list|,
name|top
argument_list|,
name|zNear
argument_list|,
name|zFar
argument_list|)
expr_stmt|;
block|}
DECL|function|glMultMatrixd
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glMultMatrixd
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|m
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|MultMatrixd
argument_list|,
name|m
argument_list|)
expr_stmt|;
block|}
DECL|function|glMultMatrixf
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glMultMatrixf
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|m
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|MultMatrixf
argument_list|,
name|m
argument_list|)
expr_stmt|;
block|}
DECL|function|glMatrixMode
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glMatrixMode
parameter_list|(
name|GLenum
name|mode
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|MatrixMode
argument_list|,
name|mode
argument_list|)
expr_stmt|;
block|}
DECL|function|glLoadMatrixd
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glLoadMatrixd
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|m
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|LoadMatrixd
argument_list|,
name|m
argument_list|)
expr_stmt|;
block|}
DECL|function|glLoadMatrixf
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glLoadMatrixf
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|m
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|LoadMatrixf
argument_list|,
name|m
argument_list|)
expr_stmt|;
block|}
DECL|function|glLoadIdentity
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glLoadIdentity
parameter_list|()
block|{
name|GLCALLV
argument_list|(
name|LoadIdentity
argument_list|)
expr_stmt|;
block|}
DECL|function|glFrustum
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glFrustum
parameter_list|(
name|GLdouble
name|left
parameter_list|,
name|GLdouble
name|right
parameter_list|,
name|GLdouble
name|bottom
parameter_list|,
name|GLdouble
name|top
parameter_list|,
name|GLdouble
name|zNear
parameter_list|,
name|GLdouble
name|zFar
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Frustum
argument_list|,
name|left
argument_list|,
name|right
argument_list|,
name|bottom
argument_list|,
name|top
argument_list|,
name|zNear
argument_list|,
name|zFar
argument_list|)
expr_stmt|;
block|}
DECL|function|glIsList
name|Q_DECL_EXPORT
name|GLboolean
name|APIENTRY
name|glIsList
parameter_list|(
name|GLuint
name|list
parameter_list|)
block|{
name|GLCALL
argument_list|(
name|IsList
argument_list|,
name|list
argument_list|)
expr_stmt|;
block|}
DECL|function|glGetTexGeniv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glGetTexGeniv
parameter_list|(
name|GLenum
name|coord
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|GetTexGeniv
argument_list|,
name|coord
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
DECL|function|glGetTexGenfv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glGetTexGenfv
parameter_list|(
name|GLenum
name|coord
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|GetTexGenfv
argument_list|,
name|coord
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
DECL|function|glGetTexGendv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glGetTexGendv
parameter_list|(
name|GLenum
name|coord
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLdouble
modifier|*
name|params
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|GetTexGendv
argument_list|,
name|coord
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
DECL|function|glGetTexEnviv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glGetTexEnviv
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|GetTexEnviv
argument_list|,
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
DECL|function|glGetTexEnvfv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glGetTexEnvfv
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|GetTexEnvfv
argument_list|,
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
DECL|function|glGetPolygonStipple
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glGetPolygonStipple
parameter_list|(
name|GLubyte
modifier|*
name|mask
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|GetPolygonStipple
argument_list|,
name|mask
argument_list|)
expr_stmt|;
block|}
DECL|function|glGetPixelMapusv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glGetPixelMapusv
parameter_list|(
name|GLenum
name|map
parameter_list|,
name|GLushort
modifier|*
name|values
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|GetPixelMapusv
argument_list|,
name|map
argument_list|,
name|values
argument_list|)
expr_stmt|;
block|}
DECL|function|glGetPixelMapuiv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glGetPixelMapuiv
parameter_list|(
name|GLenum
name|map
parameter_list|,
name|GLuint
modifier|*
name|values
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|GetPixelMapuiv
argument_list|,
name|map
argument_list|,
name|values
argument_list|)
expr_stmt|;
block|}
DECL|function|glGetPixelMapfv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glGetPixelMapfv
parameter_list|(
name|GLenum
name|map
parameter_list|,
name|GLfloat
modifier|*
name|values
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|GetPixelMapfv
argument_list|,
name|map
argument_list|,
name|values
argument_list|)
expr_stmt|;
block|}
DECL|function|glGetMaterialiv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glGetMaterialiv
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|GetMaterialiv
argument_list|,
name|face
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
DECL|function|glGetMaterialfv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glGetMaterialfv
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|GetMaterialfv
argument_list|,
name|face
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
DECL|function|glGetMapiv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glGetMapiv
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|query
parameter_list|,
name|GLint
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|GetMapiv
argument_list|,
name|target
argument_list|,
name|query
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glGetMapfv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glGetMapfv
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|query
parameter_list|,
name|GLfloat
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|GetMapfv
argument_list|,
name|target
argument_list|,
name|query
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glGetMapdv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glGetMapdv
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|query
parameter_list|,
name|GLdouble
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|GetMapdv
argument_list|,
name|target
argument_list|,
name|query
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glGetLightiv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glGetLightiv
parameter_list|(
name|GLenum
name|light
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|GetLightiv
argument_list|,
name|light
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
DECL|function|glGetLightfv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glGetLightfv
parameter_list|(
name|GLenum
name|light
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|GetLightfv
argument_list|,
name|light
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
DECL|function|glGetClipPlane
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glGetClipPlane
parameter_list|(
name|GLenum
name|plane
parameter_list|,
name|GLdouble
modifier|*
name|equation
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|GetClipPlane
argument_list|,
name|plane
argument_list|,
name|equation
argument_list|)
expr_stmt|;
block|}
DECL|function|glDrawPixels
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glDrawPixels
parameter_list|(
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|DrawPixels
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
expr_stmt|;
block|}
DECL|function|glCopyPixels
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glCopyPixels
parameter_list|(
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|type
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|CopyPixels
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|type
argument_list|)
expr_stmt|;
block|}
DECL|function|glPixelMapusv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glPixelMapusv
parameter_list|(
name|GLenum
name|map
parameter_list|,
name|GLint
name|mapsize
parameter_list|,
specifier|const
name|GLushort
modifier|*
name|values
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|PixelMapusv
argument_list|,
name|map
argument_list|,
name|mapsize
argument_list|,
name|values
argument_list|)
expr_stmt|;
block|}
DECL|function|glPixelMapuiv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glPixelMapuiv
parameter_list|(
name|GLenum
name|map
parameter_list|,
name|GLint
name|mapsize
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|values
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|PixelMapuiv
argument_list|,
name|map
argument_list|,
name|mapsize
argument_list|,
name|values
argument_list|)
expr_stmt|;
block|}
DECL|function|glPixelMapfv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glPixelMapfv
parameter_list|(
name|GLenum
name|map
parameter_list|,
name|GLint
name|mapsize
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|values
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|PixelMapfv
argument_list|,
name|map
argument_list|,
name|mapsize
argument_list|,
name|values
argument_list|)
expr_stmt|;
block|}
DECL|function|glPixelTransferi
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glPixelTransferi
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|PixelTransferi
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
expr_stmt|;
block|}
DECL|function|glPixelTransferf
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glPixelTransferf
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|PixelTransferf
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
expr_stmt|;
block|}
DECL|function|glPixelZoom
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glPixelZoom
parameter_list|(
name|GLfloat
name|xfactor
parameter_list|,
name|GLfloat
name|yfactor
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|PixelZoom
argument_list|,
name|xfactor
argument_list|,
name|yfactor
argument_list|)
expr_stmt|;
block|}
DECL|function|glAlphaFunc
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glAlphaFunc
parameter_list|(
name|GLenum
name|func
parameter_list|,
name|GLfloat
name|ref
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|AlphaFunc
argument_list|,
name|func
argument_list|,
name|ref
argument_list|)
expr_stmt|;
block|}
DECL|function|glEvalPoint2
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glEvalPoint2
parameter_list|(
name|GLint
name|i
parameter_list|,
name|GLint
name|j
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|EvalPoint2
argument_list|,
name|i
argument_list|,
name|j
argument_list|)
expr_stmt|;
block|}
DECL|function|glEvalMesh2
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glEvalMesh2
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLint
name|i1
parameter_list|,
name|GLint
name|i2
parameter_list|,
name|GLint
name|j1
parameter_list|,
name|GLint
name|j2
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|EvalMesh2
argument_list|,
name|mode
argument_list|,
name|i1
argument_list|,
name|i2
argument_list|,
name|j1
argument_list|,
name|j2
argument_list|)
expr_stmt|;
block|}
DECL|function|glEvalPoint1
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glEvalPoint1
parameter_list|(
name|GLint
name|i
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|EvalPoint1
argument_list|,
name|i
argument_list|)
expr_stmt|;
block|}
DECL|function|glEvalMesh1
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glEvalMesh1
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLint
name|i1
parameter_list|,
name|GLint
name|i2
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|EvalMesh1
argument_list|,
name|mode
argument_list|,
name|i1
argument_list|,
name|i2
argument_list|)
expr_stmt|;
block|}
DECL|function|glEvalCoord2fv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glEvalCoord2fv
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|u
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|EvalCoord2fv
argument_list|,
name|u
argument_list|)
expr_stmt|;
block|}
DECL|function|glEvalCoord2f
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glEvalCoord2f
parameter_list|(
name|GLfloat
name|u
parameter_list|,
name|GLfloat
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|EvalCoord2f
argument_list|,
name|u
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glEvalCoord2dv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glEvalCoord2dv
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|u
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|EvalCoord2dv
argument_list|,
name|u
argument_list|)
expr_stmt|;
block|}
DECL|function|glEvalCoord2d
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glEvalCoord2d
parameter_list|(
name|GLdouble
name|u
parameter_list|,
name|GLdouble
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|EvalCoord2d
argument_list|,
name|u
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glEvalCoord1fv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glEvalCoord1fv
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|u
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|EvalCoord1fv
argument_list|,
name|u
argument_list|)
expr_stmt|;
block|}
DECL|function|glEvalCoord1f
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glEvalCoord1f
parameter_list|(
name|GLfloat
name|u
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|EvalCoord1f
argument_list|,
name|u
argument_list|)
expr_stmt|;
block|}
DECL|function|glEvalCoord1dv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glEvalCoord1dv
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|u
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|EvalCoord1dv
argument_list|,
name|u
argument_list|)
expr_stmt|;
block|}
DECL|function|glEvalCoord1d
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glEvalCoord1d
parameter_list|(
name|GLdouble
name|u
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|EvalCoord1d
argument_list|,
name|u
argument_list|)
expr_stmt|;
block|}
DECL|function|glMapGrid2f
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glMapGrid2f
parameter_list|(
name|GLint
name|un
parameter_list|,
name|GLfloat
name|u1
parameter_list|,
name|GLfloat
name|u2
parameter_list|,
name|GLint
name|vn
parameter_list|,
name|GLfloat
name|v1
parameter_list|,
name|GLfloat
name|v2
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|MapGrid2f
argument_list|,
name|un
argument_list|,
name|u1
argument_list|,
name|u2
argument_list|,
name|vn
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|)
expr_stmt|;
block|}
DECL|function|glMapGrid2d
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glMapGrid2d
parameter_list|(
name|GLint
name|un
parameter_list|,
name|GLdouble
name|u1
parameter_list|,
name|GLdouble
name|u2
parameter_list|,
name|GLint
name|vn
parameter_list|,
name|GLdouble
name|v1
parameter_list|,
name|GLdouble
name|v2
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|MapGrid2d
argument_list|,
name|un
argument_list|,
name|u1
argument_list|,
name|u2
argument_list|,
name|vn
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|)
expr_stmt|;
block|}
DECL|function|glMapGrid1f
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glMapGrid1f
parameter_list|(
name|GLint
name|un
parameter_list|,
name|GLfloat
name|u1
parameter_list|,
name|GLfloat
name|u2
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|MapGrid1f
argument_list|,
name|un
argument_list|,
name|u1
argument_list|,
name|u2
argument_list|)
expr_stmt|;
block|}
DECL|function|glMapGrid1d
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glMapGrid1d
parameter_list|(
name|GLint
name|un
parameter_list|,
name|GLdouble
name|u1
parameter_list|,
name|GLdouble
name|u2
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|MapGrid1d
argument_list|,
name|un
argument_list|,
name|u1
argument_list|,
name|u2
argument_list|)
expr_stmt|;
block|}
DECL|function|glMap2f
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glMap2f
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLfloat
name|u1
parameter_list|,
name|GLfloat
name|u2
parameter_list|,
name|GLint
name|ustride
parameter_list|,
name|GLint
name|uorder
parameter_list|,
name|GLfloat
name|v1
parameter_list|,
name|GLfloat
name|v2
parameter_list|,
name|GLint
name|vstride
parameter_list|,
name|GLint
name|vorder
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|points
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Map2f
argument_list|,
name|target
argument_list|,
name|u1
argument_list|,
name|u2
argument_list|,
name|ustride
argument_list|,
name|uorder
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|,
name|vstride
argument_list|,
name|vorder
argument_list|,
name|points
argument_list|)
expr_stmt|;
block|}
DECL|function|glMap2d
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glMap2d
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLdouble
name|u1
parameter_list|,
name|GLdouble
name|u2
parameter_list|,
name|GLint
name|ustride
parameter_list|,
name|GLint
name|uorder
parameter_list|,
name|GLdouble
name|v1
parameter_list|,
name|GLdouble
name|v2
parameter_list|,
name|GLint
name|vstride
parameter_list|,
name|GLint
name|vorder
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|points
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Map2d
argument_list|,
name|target
argument_list|,
name|u1
argument_list|,
name|u2
argument_list|,
name|ustride
argument_list|,
name|uorder
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|,
name|vstride
argument_list|,
name|vorder
argument_list|,
name|points
argument_list|)
expr_stmt|;
block|}
DECL|function|glMap1f
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glMap1f
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLfloat
name|u1
parameter_list|,
name|GLfloat
name|u2
parameter_list|,
name|GLint
name|stride
parameter_list|,
name|GLint
name|order
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|points
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Map1f
argument_list|,
name|target
argument_list|,
name|u1
argument_list|,
name|u2
argument_list|,
name|stride
argument_list|,
name|order
argument_list|,
name|points
argument_list|)
expr_stmt|;
block|}
DECL|function|glMap1d
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glMap1d
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLdouble
name|u1
parameter_list|,
name|GLdouble
name|u2
parameter_list|,
name|GLint
name|stride
parameter_list|,
name|GLint
name|order
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|points
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Map1d
argument_list|,
name|target
argument_list|,
name|u1
argument_list|,
name|u2
argument_list|,
name|stride
argument_list|,
name|order
argument_list|,
name|points
argument_list|)
expr_stmt|;
block|}
DECL|function|glPushAttrib
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glPushAttrib
parameter_list|(
name|GLbitfield
name|mask
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|PushAttrib
argument_list|,
name|mask
argument_list|)
expr_stmt|;
block|}
DECL|function|glPopAttrib
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glPopAttrib
parameter_list|()
block|{
name|GLCALLV
argument_list|(
name|PopAttrib
argument_list|)
expr_stmt|;
block|}
DECL|function|glAccum
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glAccum
parameter_list|(
name|GLenum
name|op
parameter_list|,
name|GLfloat
name|value
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Accum
argument_list|,
name|op
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
DECL|function|glIndexMask
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glIndexMask
parameter_list|(
name|GLuint
name|mask
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|IndexMask
argument_list|,
name|mask
argument_list|)
expr_stmt|;
block|}
DECL|function|glClearIndex
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glClearIndex
parameter_list|(
name|GLfloat
name|c
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|ClearIndex
argument_list|,
name|c
argument_list|)
expr_stmt|;
block|}
DECL|function|glClearAccum
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glClearAccum
parameter_list|(
name|GLfloat
name|red
parameter_list|,
name|GLfloat
name|green
parameter_list|,
name|GLfloat
name|blue
parameter_list|,
name|GLfloat
name|alpha
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|ClearAccum
argument_list|,
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|,
name|alpha
argument_list|)
expr_stmt|;
block|}
DECL|function|glPushName
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glPushName
parameter_list|(
name|GLuint
name|name
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|PushName
argument_list|,
name|name
argument_list|)
expr_stmt|;
block|}
DECL|function|glPopName
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glPopName
parameter_list|()
block|{
name|GLCALLV
argument_list|(
name|PopName
argument_list|)
expr_stmt|;
block|}
DECL|function|glPassThrough
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glPassThrough
parameter_list|(
name|GLfloat
name|token
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|PassThrough
argument_list|,
name|token
argument_list|)
expr_stmt|;
block|}
DECL|function|glLoadName
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glLoadName
parameter_list|(
name|GLuint
name|name
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|LoadName
argument_list|,
name|name
argument_list|)
expr_stmt|;
block|}
DECL|function|glInitNames
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glInitNames
parameter_list|()
block|{
name|GLCALLV
argument_list|(
name|InitNames
argument_list|)
expr_stmt|;
block|}
DECL|function|glRenderMode
name|Q_DECL_EXPORT
name|GLint
name|APIENTRY
name|glRenderMode
parameter_list|(
name|GLenum
name|mode
parameter_list|)
block|{
name|GLCALL
argument_list|(
name|RenderMode
argument_list|,
name|mode
argument_list|)
expr_stmt|;
block|}
DECL|function|glSelectBuffer
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glSelectBuffer
parameter_list|(
name|GLsizei
name|size
parameter_list|,
name|GLuint
modifier|*
name|buffer
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|SelectBuffer
argument_list|,
name|size
argument_list|,
name|buffer
argument_list|)
expr_stmt|;
block|}
DECL|function|glFeedbackBuffer
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glFeedbackBuffer
parameter_list|(
name|GLsizei
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLfloat
modifier|*
name|buffer
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|FeedbackBuffer
argument_list|,
name|size
argument_list|,
name|type
argument_list|,
name|buffer
argument_list|)
expr_stmt|;
block|}
DECL|function|glTexGeniv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glTexGeniv
parameter_list|(
name|GLenum
name|coord
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|TexGeniv
argument_list|,
name|coord
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
DECL|function|glTexGeni
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glTexGeni
parameter_list|(
name|GLenum
name|coord
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|TexGeni
argument_list|,
name|coord
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
expr_stmt|;
block|}
DECL|function|glTexGenfv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glTexGenfv
parameter_list|(
name|GLenum
name|coord
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|TexGenfv
argument_list|,
name|coord
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
DECL|function|glTexGenf
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glTexGenf
parameter_list|(
name|GLenum
name|coord
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|TexGenf
argument_list|,
name|coord
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
expr_stmt|;
block|}
DECL|function|glTexGendv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glTexGendv
parameter_list|(
name|GLenum
name|coord
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|params
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|TexGendv
argument_list|,
name|coord
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
DECL|function|glTexGend
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glTexGend
parameter_list|(
name|GLenum
name|coord
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLdouble
name|param
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|TexGend
argument_list|,
name|coord
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
expr_stmt|;
block|}
DECL|function|glTexEnviv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glTexEnviv
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|TexEnviv
argument_list|,
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
DECL|function|glTexEnvi
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glTexEnvi
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|TexEnvi
argument_list|,
name|target
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
expr_stmt|;
block|}
DECL|function|glTexEnvfv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glTexEnvfv
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|TexEnvfv
argument_list|,
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
DECL|function|glTexEnvf
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glTexEnvf
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|TexEnvf
argument_list|,
name|target
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
expr_stmt|;
block|}
DECL|function|glShadeModel
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glShadeModel
parameter_list|(
name|GLenum
name|mode
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|ShadeModel
argument_list|,
name|mode
argument_list|)
expr_stmt|;
block|}
DECL|function|glPolygonStipple
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glPolygonStipple
parameter_list|(
specifier|const
name|GLubyte
modifier|*
name|mask
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|PolygonStipple
argument_list|,
name|mask
argument_list|)
expr_stmt|;
block|}
DECL|function|glMaterialiv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glMaterialiv
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Materialiv
argument_list|,
name|face
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
DECL|function|glMateriali
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glMateriali
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Materiali
argument_list|,
name|face
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
expr_stmt|;
block|}
DECL|function|glMaterialfv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glMaterialfv
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Materialfv
argument_list|,
name|face
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
DECL|function|glMaterialf
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glMaterialf
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Materialf
argument_list|,
name|face
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
expr_stmt|;
block|}
DECL|function|glLineStipple
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glLineStipple
parameter_list|(
name|GLint
name|factor
parameter_list|,
name|GLushort
name|pattern
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|LineStipple
argument_list|,
name|factor
argument_list|,
name|pattern
argument_list|)
expr_stmt|;
block|}
DECL|function|glLightModeliv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glLightModeliv
parameter_list|(
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|LightModeliv
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
DECL|function|glLightModeli
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glLightModeli
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|LightModeli
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
expr_stmt|;
block|}
DECL|function|glLightModelfv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glLightModelfv
parameter_list|(
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|LightModelfv
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
DECL|function|glLightModelf
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glLightModelf
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|LightModelf
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
expr_stmt|;
block|}
DECL|function|glLightiv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glLightiv
parameter_list|(
name|GLenum
name|light
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Lightiv
argument_list|,
name|light
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
DECL|function|glLighti
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glLighti
parameter_list|(
name|GLenum
name|light
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Lighti
argument_list|,
name|light
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
expr_stmt|;
block|}
DECL|function|glLightfv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glLightfv
parameter_list|(
name|GLenum
name|light
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Lightfv
argument_list|,
name|light
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
DECL|function|glLightf
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glLightf
parameter_list|(
name|GLenum
name|light
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Lightf
argument_list|,
name|light
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
expr_stmt|;
block|}
DECL|function|glFogiv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glFogiv
parameter_list|(
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Fogiv
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
DECL|function|glFogi
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glFogi
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Fogi
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
expr_stmt|;
block|}
DECL|function|glFogfv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glFogfv
parameter_list|(
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Fogfv
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
DECL|function|glFogf
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glFogf
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Fogf
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
expr_stmt|;
block|}
DECL|function|glColorMaterial
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glColorMaterial
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|mode
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|ColorMaterial
argument_list|,
name|face
argument_list|,
name|mode
argument_list|)
expr_stmt|;
block|}
DECL|function|glClipPlane
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glClipPlane
parameter_list|(
name|GLenum
name|plane
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|equation
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|ClipPlane
argument_list|,
name|plane
argument_list|,
name|equation
argument_list|)
expr_stmt|;
block|}
DECL|function|glVertex4sv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glVertex4sv
parameter_list|(
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Vertex4sv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glVertex4s
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glVertex4s
parameter_list|(
name|GLshort
name|x
parameter_list|,
name|GLshort
name|y
parameter_list|,
name|GLshort
name|z
parameter_list|,
name|GLshort
name|w
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Vertex4s
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
expr_stmt|;
block|}
DECL|function|glVertex4iv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glVertex4iv
parameter_list|(
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Vertex4iv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glVertex4i
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glVertex4i
parameter_list|(
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLint
name|z
parameter_list|,
name|GLint
name|w
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Vertex4i
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
expr_stmt|;
block|}
DECL|function|glVertex4fv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glVertex4fv
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Vertex4fv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glVertex4f
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glVertex4f
parameter_list|(
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|,
name|GLfloat
name|w
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Vertex4f
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
expr_stmt|;
block|}
DECL|function|glVertex4dv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glVertex4dv
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Vertex4dv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glVertex4d
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glVertex4d
parameter_list|(
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|,
name|GLdouble
name|w
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Vertex4d
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
expr_stmt|;
block|}
DECL|function|glVertex3sv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glVertex3sv
parameter_list|(
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Vertex3sv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glVertex3s
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glVertex3s
parameter_list|(
name|GLshort
name|x
parameter_list|,
name|GLshort
name|y
parameter_list|,
name|GLshort
name|z
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Vertex3s
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
expr_stmt|;
block|}
DECL|function|glVertex3iv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glVertex3iv
parameter_list|(
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Vertex3iv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glVertex3i
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glVertex3i
parameter_list|(
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLint
name|z
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Vertex3i
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
expr_stmt|;
block|}
DECL|function|glVertex3fv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glVertex3fv
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Vertex3fv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glVertex3f
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glVertex3f
parameter_list|(
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Vertex3f
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
expr_stmt|;
block|}
DECL|function|glVertex3dv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glVertex3dv
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Vertex3dv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glVertex3d
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glVertex3d
parameter_list|(
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Vertex3d
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
expr_stmt|;
block|}
DECL|function|glVertex2sv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glVertex2sv
parameter_list|(
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Vertex2sv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glVertex2s
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glVertex2s
parameter_list|(
name|GLshort
name|x
parameter_list|,
name|GLshort
name|y
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Vertex2s
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
expr_stmt|;
block|}
DECL|function|glVertex2iv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glVertex2iv
parameter_list|(
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Vertex2iv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glVertex2i
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glVertex2i
parameter_list|(
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Vertex2i
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
expr_stmt|;
block|}
DECL|function|glVertex2fv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glVertex2fv
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Vertex2fv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glVertex2f
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glVertex2f
parameter_list|(
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Vertex2f
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
expr_stmt|;
block|}
DECL|function|glVertex2dv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glVertex2dv
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Vertex2dv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glVertex2d
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glVertex2d
parameter_list|(
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Vertex2d
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
expr_stmt|;
block|}
DECL|function|glTexCoord4sv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glTexCoord4sv
parameter_list|(
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|TexCoord4sv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glTexCoord4s
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glTexCoord4s
parameter_list|(
name|GLshort
name|s
parameter_list|,
name|GLshort
name|t
parameter_list|,
name|GLshort
name|r
parameter_list|,
name|GLshort
name|q
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|TexCoord4s
argument_list|,
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|,
name|q
argument_list|)
expr_stmt|;
block|}
DECL|function|glTexCoord4iv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glTexCoord4iv
parameter_list|(
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|TexCoord4iv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glTexCoord4i
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glTexCoord4i
parameter_list|(
name|GLint
name|s
parameter_list|,
name|GLint
name|t
parameter_list|,
name|GLint
name|r
parameter_list|,
name|GLint
name|q
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|TexCoord4i
argument_list|,
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|,
name|q
argument_list|)
expr_stmt|;
block|}
DECL|function|glTexCoord4fv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glTexCoord4fv
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|TexCoord4fv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glTexCoord4f
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glTexCoord4f
parameter_list|(
name|GLfloat
name|s
parameter_list|,
name|GLfloat
name|t
parameter_list|,
name|GLfloat
name|r
parameter_list|,
name|GLfloat
name|q
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|TexCoord4f
argument_list|,
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|,
name|q
argument_list|)
expr_stmt|;
block|}
DECL|function|glTexCoord4dv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glTexCoord4dv
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|TexCoord4dv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glTexCoord4d
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glTexCoord4d
parameter_list|(
name|GLdouble
name|s
parameter_list|,
name|GLdouble
name|t
parameter_list|,
name|GLdouble
name|r
parameter_list|,
name|GLdouble
name|q
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|TexCoord4d
argument_list|,
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|,
name|q
argument_list|)
expr_stmt|;
block|}
DECL|function|glTexCoord3sv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glTexCoord3sv
parameter_list|(
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|TexCoord3sv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glTexCoord3s
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glTexCoord3s
parameter_list|(
name|GLshort
name|s
parameter_list|,
name|GLshort
name|t
parameter_list|,
name|GLshort
name|r
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|TexCoord3s
argument_list|,
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|)
expr_stmt|;
block|}
DECL|function|glTexCoord3iv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glTexCoord3iv
parameter_list|(
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|TexCoord3iv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glTexCoord3i
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glTexCoord3i
parameter_list|(
name|GLint
name|s
parameter_list|,
name|GLint
name|t
parameter_list|,
name|GLint
name|r
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|TexCoord3i
argument_list|,
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|)
expr_stmt|;
block|}
DECL|function|glTexCoord3fv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glTexCoord3fv
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|TexCoord3fv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glTexCoord3f
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glTexCoord3f
parameter_list|(
name|GLfloat
name|s
parameter_list|,
name|GLfloat
name|t
parameter_list|,
name|GLfloat
name|r
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|TexCoord3f
argument_list|,
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|)
expr_stmt|;
block|}
DECL|function|glTexCoord3dv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glTexCoord3dv
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|TexCoord3dv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glTexCoord3d
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glTexCoord3d
parameter_list|(
name|GLdouble
name|s
parameter_list|,
name|GLdouble
name|t
parameter_list|,
name|GLdouble
name|r
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|TexCoord3d
argument_list|,
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|)
expr_stmt|;
block|}
DECL|function|glTexCoord2sv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glTexCoord2sv
parameter_list|(
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|TexCoord2sv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glTexCoord2s
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glTexCoord2s
parameter_list|(
name|GLshort
name|s
parameter_list|,
name|GLshort
name|t
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|TexCoord2s
argument_list|,
name|s
argument_list|,
name|t
argument_list|)
expr_stmt|;
block|}
DECL|function|glTexCoord2iv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glTexCoord2iv
parameter_list|(
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|TexCoord2iv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glTexCoord2i
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glTexCoord2i
parameter_list|(
name|GLint
name|s
parameter_list|,
name|GLint
name|t
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|TexCoord2i
argument_list|,
name|s
argument_list|,
name|t
argument_list|)
expr_stmt|;
block|}
DECL|function|glTexCoord2fv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glTexCoord2fv
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|TexCoord2fv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glTexCoord2f
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glTexCoord2f
parameter_list|(
name|GLfloat
name|s
parameter_list|,
name|GLfloat
name|t
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|TexCoord2f
argument_list|,
name|s
argument_list|,
name|t
argument_list|)
expr_stmt|;
block|}
DECL|function|glTexCoord2dv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glTexCoord2dv
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|TexCoord2dv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glTexCoord2d
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glTexCoord2d
parameter_list|(
name|GLdouble
name|s
parameter_list|,
name|GLdouble
name|t
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|TexCoord2d
argument_list|,
name|s
argument_list|,
name|t
argument_list|)
expr_stmt|;
block|}
DECL|function|glTexCoord1sv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glTexCoord1sv
parameter_list|(
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|TexCoord1sv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glTexCoord1s
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glTexCoord1s
parameter_list|(
name|GLshort
name|s
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|TexCoord1s
argument_list|,
name|s
argument_list|)
expr_stmt|;
block|}
DECL|function|glTexCoord1iv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glTexCoord1iv
parameter_list|(
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|TexCoord1iv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glTexCoord1i
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glTexCoord1i
parameter_list|(
name|GLint
name|s
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|TexCoord1i
argument_list|,
name|s
argument_list|)
expr_stmt|;
block|}
DECL|function|glTexCoord1fv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glTexCoord1fv
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|TexCoord1fv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glTexCoord1f
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glTexCoord1f
parameter_list|(
name|GLfloat
name|s
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|TexCoord1f
argument_list|,
name|s
argument_list|)
expr_stmt|;
block|}
DECL|function|glTexCoord1dv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glTexCoord1dv
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|TexCoord1dv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glTexCoord1d
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glTexCoord1d
parameter_list|(
name|GLdouble
name|s
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|TexCoord1d
argument_list|,
name|s
argument_list|)
expr_stmt|;
block|}
DECL|function|glRectsv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glRectsv
parameter_list|(
specifier|const
name|GLshort
modifier|*
name|v1
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v2
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Rectsv
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|)
expr_stmt|;
block|}
DECL|function|glRects
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glRects
parameter_list|(
name|GLshort
name|x1
parameter_list|,
name|GLshort
name|y1
parameter_list|,
name|GLshort
name|x2
parameter_list|,
name|GLshort
name|y2
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Rects
argument_list|,
name|x1
argument_list|,
name|y1
argument_list|,
name|x2
argument_list|,
name|y2
argument_list|)
expr_stmt|;
block|}
DECL|function|glRectiv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glRectiv
parameter_list|(
specifier|const
name|GLint
modifier|*
name|v1
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v2
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Rectiv
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|)
expr_stmt|;
block|}
DECL|function|glRecti
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glRecti
parameter_list|(
name|GLint
name|x1
parameter_list|,
name|GLint
name|y1
parameter_list|,
name|GLint
name|x2
parameter_list|,
name|GLint
name|y2
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Recti
argument_list|,
name|x1
argument_list|,
name|y1
argument_list|,
name|x2
argument_list|,
name|y2
argument_list|)
expr_stmt|;
block|}
DECL|function|glRectfv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glRectfv
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|v1
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v2
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Rectfv
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|)
expr_stmt|;
block|}
DECL|function|glRectf
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glRectf
parameter_list|(
name|GLfloat
name|x1
parameter_list|,
name|GLfloat
name|y1
parameter_list|,
name|GLfloat
name|x2
parameter_list|,
name|GLfloat
name|y2
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Rectf
argument_list|,
name|x1
argument_list|,
name|y1
argument_list|,
name|x2
argument_list|,
name|y2
argument_list|)
expr_stmt|;
block|}
DECL|function|glRectdv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glRectdv
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|v1
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v2
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Rectdv
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|)
expr_stmt|;
block|}
DECL|function|glRectd
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glRectd
parameter_list|(
name|GLdouble
name|x1
parameter_list|,
name|GLdouble
name|y1
parameter_list|,
name|GLdouble
name|x2
parameter_list|,
name|GLdouble
name|y2
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Rectd
argument_list|,
name|x1
argument_list|,
name|y1
argument_list|,
name|x2
argument_list|,
name|y2
argument_list|)
expr_stmt|;
block|}
DECL|function|glRasterPos4sv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glRasterPos4sv
parameter_list|(
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|RasterPos4sv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glRasterPos4s
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glRasterPos4s
parameter_list|(
name|GLshort
name|x
parameter_list|,
name|GLshort
name|y
parameter_list|,
name|GLshort
name|z
parameter_list|,
name|GLshort
name|w
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|RasterPos4s
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
expr_stmt|;
block|}
DECL|function|glRasterPos4iv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glRasterPos4iv
parameter_list|(
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|RasterPos4iv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glRasterPos4i
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glRasterPos4i
parameter_list|(
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLint
name|z
parameter_list|,
name|GLint
name|w
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|RasterPos4i
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
expr_stmt|;
block|}
DECL|function|glRasterPos4fv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glRasterPos4fv
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|RasterPos4fv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glRasterPos4f
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glRasterPos4f
parameter_list|(
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|,
name|GLfloat
name|w
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|RasterPos4f
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
expr_stmt|;
block|}
DECL|function|glRasterPos4dv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glRasterPos4dv
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|RasterPos4dv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glRasterPos4d
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glRasterPos4d
parameter_list|(
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|,
name|GLdouble
name|w
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|RasterPos4d
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
expr_stmt|;
block|}
DECL|function|glRasterPos3sv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glRasterPos3sv
parameter_list|(
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|RasterPos3sv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glRasterPos3s
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glRasterPos3s
parameter_list|(
name|GLshort
name|x
parameter_list|,
name|GLshort
name|y
parameter_list|,
name|GLshort
name|z
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|RasterPos3s
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
expr_stmt|;
block|}
DECL|function|glRasterPos3iv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glRasterPos3iv
parameter_list|(
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|RasterPos3iv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glRasterPos3i
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glRasterPos3i
parameter_list|(
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLint
name|z
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|RasterPos3i
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
expr_stmt|;
block|}
DECL|function|glRasterPos3fv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glRasterPos3fv
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|RasterPos3fv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glRasterPos3f
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glRasterPos3f
parameter_list|(
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|RasterPos3f
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
expr_stmt|;
block|}
DECL|function|glRasterPos3dv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glRasterPos3dv
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|RasterPos3dv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glRasterPos3d
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glRasterPos3d
parameter_list|(
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|RasterPos3d
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
expr_stmt|;
block|}
DECL|function|glRasterPos2sv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glRasterPos2sv
parameter_list|(
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|RasterPos2sv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glRasterPos2s
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glRasterPos2s
parameter_list|(
name|GLshort
name|x
parameter_list|,
name|GLshort
name|y
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|RasterPos2s
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
expr_stmt|;
block|}
DECL|function|glRasterPos2iv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glRasterPos2iv
parameter_list|(
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|RasterPos2iv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glRasterPos2i
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glRasterPos2i
parameter_list|(
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|RasterPos2i
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
expr_stmt|;
block|}
DECL|function|glRasterPos2fv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glRasterPos2fv
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|RasterPos2fv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glRasterPos2f
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glRasterPos2f
parameter_list|(
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|RasterPos2f
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
expr_stmt|;
block|}
DECL|function|glRasterPos2dv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glRasterPos2dv
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|RasterPos2dv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glRasterPos2d
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glRasterPos2d
parameter_list|(
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|RasterPos2d
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
expr_stmt|;
block|}
DECL|function|glNormal3sv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glNormal3sv
parameter_list|(
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Normal3sv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glNormal3s
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glNormal3s
parameter_list|(
name|GLshort
name|nx
parameter_list|,
name|GLshort
name|ny
parameter_list|,
name|GLshort
name|nz
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Normal3s
argument_list|,
name|nx
argument_list|,
name|ny
argument_list|,
name|nz
argument_list|)
expr_stmt|;
block|}
DECL|function|glNormal3iv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glNormal3iv
parameter_list|(
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Normal3iv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glNormal3i
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glNormal3i
parameter_list|(
name|GLint
name|nx
parameter_list|,
name|GLint
name|ny
parameter_list|,
name|GLint
name|nz
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Normal3i
argument_list|,
name|nx
argument_list|,
name|ny
argument_list|,
name|nz
argument_list|)
expr_stmt|;
block|}
DECL|function|glNormal3fv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glNormal3fv
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Normal3fv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glNormal3f
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glNormal3f
parameter_list|(
name|GLfloat
name|nx
parameter_list|,
name|GLfloat
name|ny
parameter_list|,
name|GLfloat
name|nz
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Normal3f
argument_list|,
name|nx
argument_list|,
name|ny
argument_list|,
name|nz
argument_list|)
expr_stmt|;
block|}
DECL|function|glNormal3dv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glNormal3dv
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Normal3dv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glNormal3d
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glNormal3d
parameter_list|(
name|GLdouble
name|nx
parameter_list|,
name|GLdouble
name|ny
parameter_list|,
name|GLdouble
name|nz
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Normal3d
argument_list|,
name|nx
argument_list|,
name|ny
argument_list|,
name|nz
argument_list|)
expr_stmt|;
block|}
DECL|function|glNormal3bv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glNormal3bv
parameter_list|(
specifier|const
name|GLbyte
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Normal3bv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glNormal3b
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glNormal3b
parameter_list|(
name|GLbyte
name|nx
parameter_list|,
name|GLbyte
name|ny
parameter_list|,
name|GLbyte
name|nz
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Normal3b
argument_list|,
name|nx
argument_list|,
name|ny
argument_list|,
name|nz
argument_list|)
expr_stmt|;
block|}
DECL|function|glIndexsv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glIndexsv
parameter_list|(
specifier|const
name|GLshort
modifier|*
name|c
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Indexsv
argument_list|,
name|c
argument_list|)
expr_stmt|;
block|}
DECL|function|glIndexs
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glIndexs
parameter_list|(
name|GLshort
name|c
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Indexs
argument_list|,
name|c
argument_list|)
expr_stmt|;
block|}
DECL|function|glIndexiv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glIndexiv
parameter_list|(
specifier|const
name|GLint
modifier|*
name|c
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Indexiv
argument_list|,
name|c
argument_list|)
expr_stmt|;
block|}
DECL|function|glIndexi
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glIndexi
parameter_list|(
name|GLint
name|c
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Indexi
argument_list|,
name|c
argument_list|)
expr_stmt|;
block|}
DECL|function|glIndexfv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glIndexfv
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|c
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Indexfv
argument_list|,
name|c
argument_list|)
expr_stmt|;
block|}
DECL|function|glIndexf
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glIndexf
parameter_list|(
name|GLfloat
name|c
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Indexf
argument_list|,
name|c
argument_list|)
expr_stmt|;
block|}
DECL|function|glIndexdv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glIndexdv
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|c
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Indexdv
argument_list|,
name|c
argument_list|)
expr_stmt|;
block|}
DECL|function|glIndexd
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glIndexd
parameter_list|(
name|GLdouble
name|c
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Indexd
argument_list|,
name|c
argument_list|)
expr_stmt|;
block|}
DECL|function|glEnd
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glEnd
parameter_list|()
block|{
name|GLCALLV
argument_list|(
name|End
argument_list|)
expr_stmt|;
block|}
DECL|function|glEdgeFlagv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glEdgeFlagv
parameter_list|(
specifier|const
name|GLboolean
modifier|*
name|flag
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|EdgeFlagv
argument_list|,
name|flag
argument_list|)
expr_stmt|;
block|}
DECL|function|glEdgeFlag
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glEdgeFlag
parameter_list|(
name|GLboolean
name|flag
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|EdgeFlag
argument_list|,
name|flag
argument_list|)
expr_stmt|;
block|}
DECL|function|glColor4usv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glColor4usv
parameter_list|(
specifier|const
name|GLushort
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Color4usv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glColor4us
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glColor4us
parameter_list|(
name|GLushort
name|red
parameter_list|,
name|GLushort
name|green
parameter_list|,
name|GLushort
name|blue
parameter_list|,
name|GLushort
name|alpha
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Color4us
argument_list|,
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|,
name|alpha
argument_list|)
expr_stmt|;
block|}
DECL|function|glColor4uiv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glColor4uiv
parameter_list|(
specifier|const
name|GLuint
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Color4uiv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glColor4ui
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glColor4ui
parameter_list|(
name|GLuint
name|red
parameter_list|,
name|GLuint
name|green
parameter_list|,
name|GLuint
name|blue
parameter_list|,
name|GLuint
name|alpha
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Color4ui
argument_list|,
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|,
name|alpha
argument_list|)
expr_stmt|;
block|}
DECL|function|glColor4ubv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glColor4ubv
parameter_list|(
specifier|const
name|GLubyte
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Color4ubv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glColor4ub
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glColor4ub
parameter_list|(
name|GLubyte
name|red
parameter_list|,
name|GLubyte
name|green
parameter_list|,
name|GLubyte
name|blue
parameter_list|,
name|GLubyte
name|alpha
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Color4ub
argument_list|,
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|,
name|alpha
argument_list|)
expr_stmt|;
block|}
DECL|function|glColor4sv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glColor4sv
parameter_list|(
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Color4sv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glColor4s
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glColor4s
parameter_list|(
name|GLshort
name|red
parameter_list|,
name|GLshort
name|green
parameter_list|,
name|GLshort
name|blue
parameter_list|,
name|GLshort
name|alpha
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Color4s
argument_list|,
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|,
name|alpha
argument_list|)
expr_stmt|;
block|}
DECL|function|glColor4iv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glColor4iv
parameter_list|(
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Color4iv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glColor4i
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glColor4i
parameter_list|(
name|GLint
name|red
parameter_list|,
name|GLint
name|green
parameter_list|,
name|GLint
name|blue
parameter_list|,
name|GLint
name|alpha
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Color4i
argument_list|,
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|,
name|alpha
argument_list|)
expr_stmt|;
block|}
DECL|function|glColor4fv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glColor4fv
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Color4fv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glColor4f
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glColor4f
parameter_list|(
name|GLfloat
name|red
parameter_list|,
name|GLfloat
name|green
parameter_list|,
name|GLfloat
name|blue
parameter_list|,
name|GLfloat
name|alpha
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Color4f
argument_list|,
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|,
name|alpha
argument_list|)
expr_stmt|;
block|}
DECL|function|glColor4dv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glColor4dv
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Color4dv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glColor4d
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glColor4d
parameter_list|(
name|GLdouble
name|red
parameter_list|,
name|GLdouble
name|green
parameter_list|,
name|GLdouble
name|blue
parameter_list|,
name|GLdouble
name|alpha
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Color4d
argument_list|,
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|,
name|alpha
argument_list|)
expr_stmt|;
block|}
DECL|function|glColor4bv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glColor4bv
parameter_list|(
specifier|const
name|GLbyte
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Color4bv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glColor4b
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glColor4b
parameter_list|(
name|GLbyte
name|red
parameter_list|,
name|GLbyte
name|green
parameter_list|,
name|GLbyte
name|blue
parameter_list|,
name|GLbyte
name|alpha
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Color4b
argument_list|,
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|,
name|alpha
argument_list|)
expr_stmt|;
block|}
DECL|function|glColor3usv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glColor3usv
parameter_list|(
specifier|const
name|GLushort
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Color3usv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glColor3us
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glColor3us
parameter_list|(
name|GLushort
name|red
parameter_list|,
name|GLushort
name|green
parameter_list|,
name|GLushort
name|blue
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Color3us
argument_list|,
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|)
expr_stmt|;
block|}
DECL|function|glColor3uiv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glColor3uiv
parameter_list|(
specifier|const
name|GLuint
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Color3uiv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glColor3ui
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glColor3ui
parameter_list|(
name|GLuint
name|red
parameter_list|,
name|GLuint
name|green
parameter_list|,
name|GLuint
name|blue
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Color3ui
argument_list|,
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|)
expr_stmt|;
block|}
DECL|function|glColor3ubv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glColor3ubv
parameter_list|(
specifier|const
name|GLubyte
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Color3ubv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glColor3ub
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glColor3ub
parameter_list|(
name|GLubyte
name|red
parameter_list|,
name|GLubyte
name|green
parameter_list|,
name|GLubyte
name|blue
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Color3ub
argument_list|,
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|)
expr_stmt|;
block|}
DECL|function|glColor3sv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glColor3sv
parameter_list|(
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Color3sv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glColor3s
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glColor3s
parameter_list|(
name|GLshort
name|red
parameter_list|,
name|GLshort
name|green
parameter_list|,
name|GLshort
name|blue
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Color3s
argument_list|,
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|)
expr_stmt|;
block|}
DECL|function|glColor3iv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glColor3iv
parameter_list|(
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Color3iv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glColor3i
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glColor3i
parameter_list|(
name|GLint
name|red
parameter_list|,
name|GLint
name|green
parameter_list|,
name|GLint
name|blue
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Color3i
argument_list|,
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|)
expr_stmt|;
block|}
DECL|function|glColor3fv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glColor3fv
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Color3fv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glColor3f
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glColor3f
parameter_list|(
name|GLfloat
name|red
parameter_list|,
name|GLfloat
name|green
parameter_list|,
name|GLfloat
name|blue
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Color3f
argument_list|,
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|)
expr_stmt|;
block|}
DECL|function|glColor3dv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glColor3dv
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Color3dv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glColor3d
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glColor3d
parameter_list|(
name|GLdouble
name|red
parameter_list|,
name|GLdouble
name|green
parameter_list|,
name|GLdouble
name|blue
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Color3d
argument_list|,
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|)
expr_stmt|;
block|}
DECL|function|glColor3bv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glColor3bv
parameter_list|(
specifier|const
name|GLbyte
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Color3bv
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glColor3b
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glColor3b
parameter_list|(
name|GLbyte
name|red
parameter_list|,
name|GLbyte
name|green
parameter_list|,
name|GLbyte
name|blue
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Color3b
argument_list|,
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|)
expr_stmt|;
block|}
DECL|function|glBitmap
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glBitmap
parameter_list|(
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLfloat
name|xorig
parameter_list|,
name|GLfloat
name|yorig
parameter_list|,
name|GLfloat
name|xmove
parameter_list|,
name|GLfloat
name|ymove
parameter_list|,
specifier|const
name|GLubyte
modifier|*
name|bitmap
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Bitmap
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|xorig
argument_list|,
name|yorig
argument_list|,
name|xmove
argument_list|,
name|ymove
argument_list|,
name|bitmap
argument_list|)
expr_stmt|;
block|}
DECL|function|glBegin
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glBegin
parameter_list|(
name|GLenum
name|mode
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Begin
argument_list|,
name|mode
argument_list|)
expr_stmt|;
block|}
DECL|function|glListBase
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glListBase
parameter_list|(
name|GLuint
name|base
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|ListBase
argument_list|,
name|base
argument_list|)
expr_stmt|;
block|}
DECL|function|glGenLists
name|Q_DECL_EXPORT
name|GLuint
name|APIENTRY
name|glGenLists
parameter_list|(
name|GLsizei
name|range
parameter_list|)
block|{
name|GLCALL
argument_list|(
name|GenLists
argument_list|,
name|range
argument_list|)
expr_stmt|;
block|}
DECL|function|glDeleteLists
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glDeleteLists
parameter_list|(
name|GLuint
name|list
parameter_list|,
name|GLsizei
name|range
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|DeleteLists
argument_list|,
name|list
argument_list|,
name|range
argument_list|)
expr_stmt|;
block|}
DECL|function|glCallLists
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glCallLists
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|lists
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|CallLists
argument_list|,
name|n
argument_list|,
name|type
argument_list|,
name|lists
argument_list|)
expr_stmt|;
block|}
DECL|function|glCallList
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glCallList
parameter_list|(
name|GLuint
name|list
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|CallList
argument_list|,
name|list
argument_list|)
expr_stmt|;
block|}
DECL|function|glEndList
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glEndList
parameter_list|()
block|{
name|GLCALLV
argument_list|(
name|EndList
argument_list|)
expr_stmt|;
block|}
DECL|function|glNewList
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glNewList
parameter_list|(
name|GLuint
name|list
parameter_list|,
name|GLenum
name|mode
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|NewList
argument_list|,
name|list
argument_list|,
name|mode
argument_list|)
expr_stmt|;
block|}
DECL|function|glIndexubv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glIndexubv
parameter_list|(
specifier|const
name|GLubyte
modifier|*
name|c
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Indexubv
argument_list|,
name|c
argument_list|)
expr_stmt|;
block|}
DECL|function|glIndexub
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glIndexub
parameter_list|(
name|GLubyte
name|c
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Indexub
argument_list|,
name|c
argument_list|)
expr_stmt|;
block|}
DECL|function|glIsTexture
name|Q_DECL_EXPORT
name|GLboolean
name|APIENTRY
name|glIsTexture
parameter_list|(
name|GLuint
name|texture
parameter_list|)
block|{
name|GLCALL
argument_list|(
name|IsTexture
argument_list|,
name|texture
argument_list|)
expr_stmt|;
block|}
DECL|function|glGenTextures
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glGenTextures
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|textures
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|GenTextures
argument_list|,
name|n
argument_list|,
name|textures
argument_list|)
expr_stmt|;
block|}
DECL|function|glDeleteTextures
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glDeleteTextures
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|textures
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|DeleteTextures
argument_list|,
name|n
argument_list|,
name|textures
argument_list|)
expr_stmt|;
block|}
DECL|function|glBindTexture
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glBindTexture
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|texture
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|BindTexture
argument_list|,
name|target
argument_list|,
name|texture
argument_list|)
expr_stmt|;
block|}
DECL|function|glTexSubImage2D
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glTexSubImage2D
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|TexSubImage2D
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
expr_stmt|;
block|}
DECL|function|glTexSubImage1D
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glTexSubImage1D
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|TexSubImage1D
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|width
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
expr_stmt|;
block|}
DECL|function|glCopyTexSubImage2D
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glCopyTexSubImage2D
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|CopyTexSubImage2D
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
expr_stmt|;
block|}
DECL|function|glCopyTexSubImage1D
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glCopyTexSubImage1D
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|CopyTexSubImage1D
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|)
expr_stmt|;
block|}
DECL|function|glCopyTexImage2D
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glCopyTexImage2D
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLint
name|border
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|CopyTexImage2D
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|border
argument_list|)
expr_stmt|;
block|}
DECL|function|glCopyTexImage1D
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glCopyTexImage1D
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLint
name|border
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|CopyTexImage1D
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|border
argument_list|)
expr_stmt|;
block|}
DECL|function|glPolygonOffset
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glPolygonOffset
parameter_list|(
name|GLfloat
name|factor
parameter_list|,
name|GLfloat
name|units
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|PolygonOffset
argument_list|,
name|factor
argument_list|,
name|units
argument_list|)
expr_stmt|;
block|}
DECL|function|glGetPointerv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glGetPointerv
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLvoid
modifier|*
modifier|*
name|params
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|GetPointerv
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
DECL|function|glDrawElements
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glDrawElements
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|indices
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|DrawElements
argument_list|,
name|mode
argument_list|,
name|count
argument_list|,
name|type
argument_list|,
name|indices
argument_list|)
expr_stmt|;
block|}
DECL|function|glDrawArrays
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glDrawArrays
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLint
name|first
parameter_list|,
name|GLsizei
name|count
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|DrawArrays
argument_list|,
name|mode
argument_list|,
name|first
argument_list|,
name|count
argument_list|)
expr_stmt|;
block|}
DECL|function|glPushClientAttrib
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glPushClientAttrib
parameter_list|(
name|GLbitfield
name|mask
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|PushClientAttrib
argument_list|,
name|mask
argument_list|)
expr_stmt|;
block|}
DECL|function|glPopClientAttrib
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glPopClientAttrib
parameter_list|()
block|{
name|GLCALLV
argument_list|(
name|PopClientAttrib
argument_list|)
expr_stmt|;
block|}
DECL|function|glPrioritizeTextures
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glPrioritizeTextures
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|textures
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|priorities
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|PrioritizeTextures
argument_list|,
name|n
argument_list|,
name|textures
argument_list|,
name|priorities
argument_list|)
expr_stmt|;
block|}
DECL|function|glAreTexturesResident
name|Q_DECL_EXPORT
name|GLboolean
name|APIENTRY
name|glAreTexturesResident
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|textures
parameter_list|,
name|GLboolean
modifier|*
name|residences
parameter_list|)
block|{
name|GLCALL
argument_list|(
name|AreTexturesResident
argument_list|,
name|n
argument_list|,
name|textures
argument_list|,
name|residences
argument_list|)
expr_stmt|;
block|}
DECL|function|glVertexPointer
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glVertexPointer
parameter_list|(
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|VertexPointer
argument_list|,
name|size
argument_list|,
name|type
argument_list|,
name|stride
argument_list|,
name|pointer
argument_list|)
expr_stmt|;
block|}
DECL|function|glTexCoordPointer
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glTexCoordPointer
parameter_list|(
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|TexCoordPointer
argument_list|,
name|size
argument_list|,
name|type
argument_list|,
name|stride
argument_list|,
name|pointer
argument_list|)
expr_stmt|;
block|}
DECL|function|glNormalPointer
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glNormalPointer
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|NormalPointer
argument_list|,
name|type
argument_list|,
name|stride
argument_list|,
name|pointer
argument_list|)
expr_stmt|;
block|}
DECL|function|glInterleavedArrays
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glInterleavedArrays
parameter_list|(
name|GLenum
name|format
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|InterleavedArrays
argument_list|,
name|format
argument_list|,
name|stride
argument_list|,
name|pointer
argument_list|)
expr_stmt|;
block|}
DECL|function|glIndexPointer
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glIndexPointer
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|IndexPointer
argument_list|,
name|type
argument_list|,
name|stride
argument_list|,
name|pointer
argument_list|)
expr_stmt|;
block|}
DECL|function|glEnableClientState
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glEnableClientState
parameter_list|(
name|GLenum
name|array
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|EnableClientState
argument_list|,
name|array
argument_list|)
expr_stmt|;
block|}
DECL|function|glEdgeFlagPointer
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glEdgeFlagPointer
parameter_list|(
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|EdgeFlagPointer
argument_list|,
name|stride
argument_list|,
name|pointer
argument_list|)
expr_stmt|;
block|}
DECL|function|glDisableClientState
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glDisableClientState
parameter_list|(
name|GLenum
name|array
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|DisableClientState
argument_list|,
name|array
argument_list|)
expr_stmt|;
block|}
DECL|function|glColorPointer
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glColorPointer
parameter_list|(
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|ColorPointer
argument_list|,
name|size
argument_list|,
name|type
argument_list|,
name|stride
argument_list|,
name|pointer
argument_list|)
expr_stmt|;
block|}
DECL|function|glArrayElement
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glArrayElement
parameter_list|(
name|GLint
name|i
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|ArrayElement
argument_list|,
name|i
argument_list|)
expr_stmt|;
block|}
comment|// OpenGL ES 2.0
DECL|function|glActiveTexture
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glActiveTexture
parameter_list|(
name|GLenum
name|texture
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|ActiveTexture
argument_list|,
name|texture
argument_list|)
expr_stmt|;
block|}
DECL|function|glAttachShader
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glAttachShader
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|shader
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|AttachShader
argument_list|,
name|program
argument_list|,
name|shader
argument_list|)
expr_stmt|;
block|}
DECL|function|glBindAttribLocation
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glBindAttribLocation
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|name
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|BindAttribLocation
argument_list|,
name|program
argument_list|,
name|index
argument_list|,
name|name
argument_list|)
expr_stmt|;
block|}
DECL|function|glBindBuffer
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glBindBuffer
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|buffer
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|BindBuffer
argument_list|,
name|target
argument_list|,
name|buffer
argument_list|)
expr_stmt|;
block|}
DECL|function|glBindFramebuffer
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glBindFramebuffer
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|framebuffer
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|BindFramebuffer
argument_list|,
name|target
argument_list|,
name|framebuffer
argument_list|)
expr_stmt|;
block|}
DECL|function|glBindRenderbuffer
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glBindRenderbuffer
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|renderbuffer
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|BindRenderbuffer
argument_list|,
name|target
argument_list|,
name|renderbuffer
argument_list|)
expr_stmt|;
block|}
DECL|function|glBlendColor
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glBlendColor
parameter_list|(
name|GLclampf
name|red
parameter_list|,
name|GLclampf
name|green
parameter_list|,
name|GLclampf
name|blue
parameter_list|,
name|GLclampf
name|alpha
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|BlendColor
argument_list|,
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|,
name|alpha
argument_list|)
expr_stmt|;
block|}
DECL|function|glBlendEquation
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glBlendEquation
parameter_list|(
name|GLenum
name|mode
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|BlendEquation
argument_list|,
name|mode
argument_list|)
expr_stmt|;
block|}
DECL|function|glBlendEquationSeparate
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glBlendEquationSeparate
parameter_list|(
name|GLenum
name|modeRGB
parameter_list|,
name|GLenum
name|modeAlpha
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|BlendEquationSeparate
argument_list|,
name|modeRGB
argument_list|,
name|modeAlpha
argument_list|)
expr_stmt|;
block|}
DECL|function|glBlendFuncSeparate
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glBlendFuncSeparate
parameter_list|(
name|GLenum
name|srcRGB
parameter_list|,
name|GLenum
name|dstRGB
parameter_list|,
name|GLenum
name|srcAlpha
parameter_list|,
name|GLenum
name|dstAlpha
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|BlendFuncSeparate
argument_list|,
name|srcRGB
argument_list|,
name|dstRGB
argument_list|,
name|srcAlpha
argument_list|,
name|dstAlpha
argument_list|)
expr_stmt|;
block|}
DECL|function|glBufferData
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glBufferData
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizeiptr
name|size
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|data
parameter_list|,
name|GLenum
name|usage
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|BufferData
argument_list|,
name|target
argument_list|,
name|size
argument_list|,
name|data
argument_list|,
name|usage
argument_list|)
expr_stmt|;
block|}
DECL|function|glBufferSubData
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glBufferSubData
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLintptr
name|offset
parameter_list|,
name|GLsizeiptr
name|size
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|data
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|BufferSubData
argument_list|,
name|target
argument_list|,
name|offset
argument_list|,
name|size
argument_list|,
name|data
argument_list|)
expr_stmt|;
block|}
DECL|function|glCheckFramebufferStatus
name|Q_DECL_EXPORT
name|GLenum
name|APIENTRY
name|glCheckFramebufferStatus
parameter_list|(
name|GLenum
name|target
parameter_list|)
block|{
name|GLCALL
argument_list|(
name|CheckFramebufferStatus
argument_list|,
name|target
argument_list|)
expr_stmt|;
block|}
DECL|function|glClearDepthf
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glClearDepthf
parameter_list|(
name|GLclampf
name|depth
parameter_list|)
block|{
name|glClearDepth
argument_list|(
name|depth
argument_list|)
expr_stmt|;
block|}
DECL|function|glCompileShader
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glCompileShader
parameter_list|(
name|GLuint
name|shader
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|CompileShader
argument_list|,
name|shader
argument_list|)
expr_stmt|;
block|}
DECL|function|glCompressedTexImage2D
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glCompressedTexImage2D
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|data
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|CompressedTexImage2D
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|border
argument_list|,
name|imageSize
argument_list|,
name|data
argument_list|)
expr_stmt|;
block|}
DECL|function|glCompressedTexSubImage2D
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glCompressedTexSubImage2D
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|data
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|CompressedTexSubImage2D
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|format
argument_list|,
name|imageSize
argument_list|,
name|data
argument_list|)
expr_stmt|;
block|}
DECL|function|glCreateProgram
name|Q_DECL_EXPORT
name|GLuint
name|APIENTRY
name|glCreateProgram
parameter_list|(
name|void
parameter_list|)
block|{
name|GLCALL
argument_list|(
name|CreateProgram
argument_list|)
expr_stmt|;
block|}
DECL|function|glCreateShader
name|Q_DECL_EXPORT
name|GLuint
name|glCreateShader
parameter_list|(
name|GLenum
name|type
parameter_list|)
block|{
name|GLCALL
argument_list|(
name|CreateShader
argument_list|,
name|type
argument_list|)
expr_stmt|;
block|}
DECL|function|glDeleteBuffers
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glDeleteBuffers
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|buffers
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|DeleteBuffers
argument_list|,
name|n
argument_list|,
name|buffers
argument_list|)
expr_stmt|;
block|}
DECL|function|glDeleteFramebuffers
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glDeleteFramebuffers
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|framebuffers
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|DeleteFramebuffers
argument_list|,
name|n
argument_list|,
name|framebuffers
argument_list|)
expr_stmt|;
block|}
DECL|function|glDeleteProgram
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glDeleteProgram
parameter_list|(
name|GLuint
name|program
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|DeleteProgram
argument_list|,
name|program
argument_list|)
expr_stmt|;
block|}
DECL|function|glDeleteRenderbuffers
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glDeleteRenderbuffers
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|renderbuffers
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|DeleteRenderbuffers
argument_list|,
name|n
argument_list|,
name|renderbuffers
argument_list|)
expr_stmt|;
block|}
DECL|function|glDeleteShader
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glDeleteShader
parameter_list|(
name|GLuint
name|shader
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|DeleteShader
argument_list|,
name|shader
argument_list|)
expr_stmt|;
block|}
DECL|function|glDepthRangef
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glDepthRangef
parameter_list|(
name|GLclampf
name|zNear
parameter_list|,
name|GLclampf
name|zFar
parameter_list|)
block|{
name|glDepthRange
argument_list|(
name|zNear
argument_list|,
name|zFar
argument_list|)
expr_stmt|;
block|}
DECL|function|glDetachShader
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glDetachShader
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|shader
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|DetachShader
argument_list|,
name|program
argument_list|,
name|shader
argument_list|)
expr_stmt|;
block|}
DECL|function|glDisableVertexAttribArray
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glDisableVertexAttribArray
parameter_list|(
name|GLuint
name|index
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|DisableVertexAttribArray
argument_list|,
name|index
argument_list|)
expr_stmt|;
block|}
DECL|function|glEnableVertexAttribArray
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glEnableVertexAttribArray
parameter_list|(
name|GLuint
name|index
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|EnableVertexAttribArray
argument_list|,
name|index
argument_list|)
expr_stmt|;
block|}
DECL|function|glFramebufferRenderbuffer
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glFramebufferRenderbuffer
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|renderbuffertarget
parameter_list|,
name|GLuint
name|renderbuffer
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|FramebufferRenderbuffer
argument_list|,
name|target
argument_list|,
name|attachment
argument_list|,
name|renderbuffertarget
argument_list|,
name|renderbuffer
argument_list|)
expr_stmt|;
block|}
DECL|function|glFramebufferTexture2D
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glFramebufferTexture2D
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|textarget
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|FramebufferTexture2D
argument_list|,
name|target
argument_list|,
name|attachment
argument_list|,
name|textarget
argument_list|,
name|texture
argument_list|,
name|level
argument_list|)
expr_stmt|;
block|}
DECL|function|glGenBuffers
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glGenBuffers
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|buffers
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|GenBuffers
argument_list|,
name|n
argument_list|,
name|buffers
argument_list|)
expr_stmt|;
block|}
DECL|function|glGenerateMipmap
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glGenerateMipmap
parameter_list|(
name|GLenum
name|target
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|GenerateMipmap
argument_list|,
name|target
argument_list|)
expr_stmt|;
block|}
DECL|function|glGenFramebuffers
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glGenFramebuffers
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|framebuffers
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|GenFramebuffers
argument_list|,
name|n
argument_list|,
name|framebuffers
argument_list|)
expr_stmt|;
block|}
DECL|function|glGenRenderbuffers
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glGenRenderbuffers
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|renderbuffers
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|GenRenderbuffers
argument_list|,
name|n
argument_list|,
name|renderbuffers
argument_list|)
expr_stmt|;
block|}
DECL|function|glGetActiveAttrib
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glGetActiveAttrib
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|bufsize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLint
modifier|*
name|size
parameter_list|,
name|GLenum
modifier|*
name|type
parameter_list|,
name|GLchar
modifier|*
name|name
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|GetActiveAttrib
argument_list|,
name|program
argument_list|,
name|index
argument_list|,
name|bufsize
argument_list|,
name|length
argument_list|,
name|size
argument_list|,
name|type
argument_list|,
name|name
argument_list|)
expr_stmt|;
block|}
DECL|function|glGetActiveUniform
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glGetActiveUniform
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|bufsize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLint
modifier|*
name|size
parameter_list|,
name|GLenum
modifier|*
name|type
parameter_list|,
name|GLchar
modifier|*
name|name
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|GetActiveUniform
argument_list|,
name|program
argument_list|,
name|index
argument_list|,
name|bufsize
argument_list|,
name|length
argument_list|,
name|size
argument_list|,
name|type
argument_list|,
name|name
argument_list|)
expr_stmt|;
block|}
DECL|function|glGetAttachedShaders
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glGetAttachedShaders
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLsizei
name|maxcount
parameter_list|,
name|GLsizei
modifier|*
name|count
parameter_list|,
name|GLuint
modifier|*
name|shaders
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|GetAttachedShaders
argument_list|,
name|program
argument_list|,
name|maxcount
argument_list|,
name|count
argument_list|,
name|shaders
argument_list|)
expr_stmt|;
block|}
DECL|function|glGetAttribLocation
name|Q_DECL_EXPORT
name|int
name|APIENTRY
name|glGetAttribLocation
parameter_list|(
name|GLuint
name|program
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|name
parameter_list|)
block|{
name|GLCALL
argument_list|(
name|GetAttribLocation
argument_list|,
name|program
argument_list|,
name|name
argument_list|)
expr_stmt|;
block|}
DECL|function|glGetBufferParameteriv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glGetBufferParameteriv
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|GetBufferParameteriv
argument_list|,
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
DECL|function|glGetFramebufferAttachmentParameteriv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glGetFramebufferAttachmentParameteriv
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|GetFramebufferAttachmentParameteriv
argument_list|,
name|target
argument_list|,
name|attachment
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
DECL|function|glGetProgramiv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glGetProgramiv
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|GetProgramiv
argument_list|,
name|program
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
DECL|function|glGetProgramInfoLog
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glGetProgramInfoLog
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLsizei
name|bufsize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|infolog
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|GetProgramInfoLog
argument_list|,
name|program
argument_list|,
name|bufsize
argument_list|,
name|length
argument_list|,
name|infolog
argument_list|)
expr_stmt|;
block|}
DECL|function|glGetRenderbufferParameteriv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glGetRenderbufferParameteriv
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|GetRenderbufferParameteriv
argument_list|,
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
DECL|function|glGetShaderiv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glGetShaderiv
parameter_list|(
name|GLuint
name|shader
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|GetShaderiv
argument_list|,
name|shader
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
DECL|function|glGetShaderInfoLog
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glGetShaderInfoLog
parameter_list|(
name|GLuint
name|shader
parameter_list|,
name|GLsizei
name|bufsize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|infolog
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|GetShaderInfoLog
argument_list|,
name|shader
argument_list|,
name|bufsize
argument_list|,
name|length
argument_list|,
name|infolog
argument_list|)
expr_stmt|;
block|}
DECL|function|glGetShaderPrecisionFormat
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glGetShaderPrecisionFormat
parameter_list|(
name|GLenum
name|shadertype
parameter_list|,
name|GLenum
name|precisiontype
parameter_list|,
name|GLint
modifier|*
name|range
parameter_list|,
name|GLint
modifier|*
name|precision
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|GetShaderPrecisionFormat
argument_list|,
name|shadertype
argument_list|,
name|precisiontype
argument_list|,
name|range
argument_list|,
name|precision
argument_list|)
expr_stmt|;
block|}
DECL|function|glGetShaderSource
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glGetShaderSource
parameter_list|(
name|GLuint
name|shader
parameter_list|,
name|GLsizei
name|bufsize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|source
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|GetShaderSource
argument_list|,
name|shader
argument_list|,
name|bufsize
argument_list|,
name|length
argument_list|,
name|source
argument_list|)
expr_stmt|;
block|}
DECL|function|glGetUniformfv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glGetUniformfv
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|GetUniformfv
argument_list|,
name|program
argument_list|,
name|location
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
DECL|function|glGetUniformiv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glGetUniformiv
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|GetUniformiv
argument_list|,
name|program
argument_list|,
name|location
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
DECL|function|glGetUniformLocation
name|Q_DECL_EXPORT
name|int
name|APIENTRY
name|glGetUniformLocation
parameter_list|(
name|GLuint
name|program
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|name
parameter_list|)
block|{
name|GLCALL
argument_list|(
name|GetUniformLocation
argument_list|,
name|program
argument_list|,
name|name
argument_list|)
expr_stmt|;
block|}
DECL|function|glGetVertexAttribfv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glGetVertexAttribfv
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|GetVertexAttribfv
argument_list|,
name|index
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
DECL|function|glGetVertexAttribiv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glGetVertexAttribiv
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|GetVertexAttribiv
argument_list|,
name|index
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
DECL|function|glGetVertexAttribPointerv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glGetVertexAttribPointerv
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLvoid
modifier|*
modifier|*
name|pointer
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|GetVertexAttribPointerv
argument_list|,
name|index
argument_list|,
name|pname
argument_list|,
name|pointer
argument_list|)
expr_stmt|;
block|}
DECL|function|glIsBuffer
name|Q_DECL_EXPORT
name|GLboolean
name|APIENTRY
name|glIsBuffer
parameter_list|(
name|GLuint
name|buffer
parameter_list|)
block|{
name|GLCALL
argument_list|(
name|IsBuffer
argument_list|,
name|buffer
argument_list|)
expr_stmt|;
block|}
DECL|function|glIsFramebuffer
name|Q_DECL_EXPORT
name|GLboolean
name|APIENTRY
name|glIsFramebuffer
parameter_list|(
name|GLuint
name|framebuffer
parameter_list|)
block|{
name|GLCALL
argument_list|(
name|IsFramebuffer
argument_list|,
name|framebuffer
argument_list|)
expr_stmt|;
block|}
DECL|function|glIsProgram
name|Q_DECL_EXPORT
name|GLboolean
name|APIENTRY
name|glIsProgram
parameter_list|(
name|GLuint
name|program
parameter_list|)
block|{
name|GLCALL
argument_list|(
name|IsProgram
argument_list|,
name|program
argument_list|)
expr_stmt|;
block|}
DECL|function|glIsRenderbuffer
name|Q_DECL_EXPORT
name|GLboolean
name|APIENTRY
name|glIsRenderbuffer
parameter_list|(
name|GLuint
name|renderbuffer
parameter_list|)
block|{
name|GLCALL
argument_list|(
name|IsRenderbuffer
argument_list|,
name|renderbuffer
argument_list|)
expr_stmt|;
block|}
DECL|function|glIsShader
name|Q_DECL_EXPORT
name|GLboolean
name|APIENTRY
name|glIsShader
parameter_list|(
name|GLuint
name|shader
parameter_list|)
block|{
name|GLCALL
argument_list|(
name|IsShader
argument_list|,
name|shader
argument_list|)
expr_stmt|;
block|}
DECL|function|glLinkProgram
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glLinkProgram
parameter_list|(
name|GLuint
name|program
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|LinkProgram
argument_list|,
name|program
argument_list|)
expr_stmt|;
block|}
DECL|function|glReleaseShaderCompiler
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glReleaseShaderCompiler
parameter_list|(
name|void
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|ReleaseShaderCompiler
argument_list|,)
expr_stmt|;
block|}
DECL|function|glRenderbufferStorage
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glRenderbufferStorage
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|RenderbufferStorage
argument_list|,
name|target
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
expr_stmt|;
block|}
DECL|function|glSampleCoverage
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glSampleCoverage
parameter_list|(
name|GLclampf
name|value
parameter_list|,
name|GLboolean
name|invert
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|SampleCoverage
argument_list|,
name|value
argument_list|,
name|invert
argument_list|)
expr_stmt|;
block|}
DECL|function|glShaderBinary
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glShaderBinary
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|shaders
parameter_list|,
name|GLenum
name|binaryformat
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|binary
parameter_list|,
name|GLsizei
name|length
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|ShaderBinary
argument_list|,
name|n
argument_list|,
name|shaders
argument_list|,
name|binaryformat
argument_list|,
name|binary
argument_list|,
name|length
argument_list|)
expr_stmt|;
block|}
DECL|function|glShaderSource
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glShaderSource
parameter_list|(
name|GLuint
name|shader
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLchar
modifier|*
modifier|*
name|string
parameter_list|,
specifier|const
name|GLint
modifier|*
name|length
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|ShaderSource
argument_list|,
name|shader
argument_list|,
name|count
argument_list|,
name|string
argument_list|,
name|length
argument_list|)
expr_stmt|;
block|}
DECL|function|glStencilFuncSeparate
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glStencilFuncSeparate
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|func
parameter_list|,
name|GLint
name|ref
parameter_list|,
name|GLuint
name|mask
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|StencilFuncSeparate
argument_list|,
name|face
argument_list|,
name|func
argument_list|,
name|ref
argument_list|,
name|mask
argument_list|)
expr_stmt|;
block|}
DECL|function|glStencilMaskSeparate
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glStencilMaskSeparate
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLuint
name|mask
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|StencilMaskSeparate
argument_list|,
name|face
argument_list|,
name|mask
argument_list|)
expr_stmt|;
block|}
DECL|function|glStencilOpSeparate
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glStencilOpSeparate
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|fail
parameter_list|,
name|GLenum
name|zfail
parameter_list|,
name|GLenum
name|zpass
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|StencilOpSeparate
argument_list|,
name|face
argument_list|,
name|fail
argument_list|,
name|zfail
argument_list|,
name|zpass
argument_list|)
expr_stmt|;
block|}
DECL|function|glUniform1f
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glUniform1f
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLfloat
name|x
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Uniform1f
argument_list|,
name|location
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
DECL|function|glUniform1fv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glUniform1fv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Uniform1fv
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glUniform1i
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glUniform1i
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLint
name|x
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Uniform1i
argument_list|,
name|location
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
DECL|function|glUniform1iv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glUniform1iv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Uniform1iv
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glUniform2f
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glUniform2f
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Uniform2f
argument_list|,
name|location
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
expr_stmt|;
block|}
DECL|function|glUniform2fv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glUniform2fv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Uniform2fv
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glUniform2i
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glUniform2i
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Uniform2i
argument_list|,
name|location
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
expr_stmt|;
block|}
DECL|function|glUniform2iv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glUniform2iv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Uniform2iv
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glUniform3f
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glUniform3f
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Uniform3f
argument_list|,
name|location
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
expr_stmt|;
block|}
DECL|function|glUniform3fv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glUniform3fv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Uniform3fv
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glUniform3i
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glUniform3i
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLint
name|z
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Uniform3i
argument_list|,
name|location
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
expr_stmt|;
block|}
DECL|function|glUniform3iv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glUniform3iv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Uniform3iv
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glUniform4f
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glUniform4f
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|,
name|GLfloat
name|w
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Uniform4f
argument_list|,
name|location
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
expr_stmt|;
block|}
DECL|function|glUniform4fv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glUniform4fv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Uniform4fv
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glUniform4i
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glUniform4i
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLint
name|z
parameter_list|,
name|GLint
name|w
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Uniform4i
argument_list|,
name|location
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
expr_stmt|;
block|}
DECL|function|glUniform4iv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glUniform4iv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|Uniform4iv
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|glUniformMatrix2fv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glUniformMatrix2fv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|UniformMatrix2fv
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
DECL|function|glUniformMatrix3fv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glUniformMatrix3fv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|UniformMatrix3fv
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
DECL|function|glUniformMatrix4fv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glUniformMatrix4fv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|UniformMatrix4fv
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
DECL|function|glUseProgram
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glUseProgram
parameter_list|(
name|GLuint
name|program
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|UseProgram
argument_list|,
name|program
argument_list|)
expr_stmt|;
block|}
DECL|function|glValidateProgram
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glValidateProgram
parameter_list|(
name|GLuint
name|program
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|ValidateProgram
argument_list|,
name|program
argument_list|)
expr_stmt|;
block|}
DECL|function|glVertexAttrib1f
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glVertexAttrib1f
parameter_list|(
name|GLuint
name|indx
parameter_list|,
name|GLfloat
name|x
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|VertexAttrib1f
argument_list|,
name|indx
argument_list|,
name|x
argument_list|)
expr_stmt|;
block|}
DECL|function|glVertexAttrib1fv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glVertexAttrib1fv
parameter_list|(
name|GLuint
name|indx
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|values
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|VertexAttrib1fv
argument_list|,
name|indx
argument_list|,
name|values
argument_list|)
expr_stmt|;
block|}
DECL|function|glVertexAttrib2f
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glVertexAttrib2f
parameter_list|(
name|GLuint
name|indx
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|VertexAttrib2f
argument_list|,
name|indx
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
expr_stmt|;
block|}
DECL|function|glVertexAttrib2fv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glVertexAttrib2fv
parameter_list|(
name|GLuint
name|indx
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|values
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|VertexAttrib2fv
argument_list|,
name|indx
argument_list|,
name|values
argument_list|)
expr_stmt|;
block|}
DECL|function|glVertexAttrib3f
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glVertexAttrib3f
parameter_list|(
name|GLuint
name|indx
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|VertexAttrib3f
argument_list|,
name|indx
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
expr_stmt|;
block|}
DECL|function|glVertexAttrib3fv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glVertexAttrib3fv
parameter_list|(
name|GLuint
name|indx
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|values
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|VertexAttrib3fv
argument_list|,
name|indx
argument_list|,
name|values
argument_list|)
expr_stmt|;
block|}
DECL|function|glVertexAttrib4f
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glVertexAttrib4f
parameter_list|(
name|GLuint
name|indx
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|,
name|GLfloat
name|w
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|VertexAttrib4f
argument_list|,
name|indx
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
expr_stmt|;
block|}
DECL|function|glVertexAttrib4fv
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glVertexAttrib4fv
parameter_list|(
name|GLuint
name|indx
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|values
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|VertexAttrib4fv
argument_list|,
name|indx
argument_list|,
name|values
argument_list|)
expr_stmt|;
block|}
DECL|function|glVertexAttribPointer
name|Q_DECL_EXPORT
name|void
name|APIENTRY
name|glVertexAttribPointer
parameter_list|(
name|GLuint
name|indx
parameter_list|,
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLboolean
name|normalized
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|ptr
parameter_list|)
block|{
name|GLCALLV
argument_list|(
name|VertexAttribPointer
argument_list|,
name|indx
argument_list|,
name|size
argument_list|,
name|type
argument_list|,
name|normalized
argument_list|,
name|stride
argument_list|,
name|ptr
argument_list|)
expr_stmt|;
block|}
comment|// EGL
DECL|function|eglGetProcAddress
name|Q_DECL_EXPORT
name|__eglMustCastToProperFunctionPointerType
name|EGLAPIENTRY
name|eglGetProcAddress
parameter_list|(
specifier|const
name|char
modifier|*
name|procname
parameter_list|)
block|{
comment|// This is a bit more complicated since the GLES2 functions (that are not in OpenGL 1)
comment|// must be made queriable in order to allow classes like QOpenGLFunctions to operate
comment|// on the same code path for desktop GL and proxied ES.
typedef|typedef
name|__eglMustCastToProperFunctionPointerType
name|FuncType
typedef|;
name|FuncType
name|f
init|=
literal|0
decl_stmt|;
name|f
operator|=
name|qgl_choose
argument_list|()
operator|->
name|EGL_GetProcAddress
argument_list|(
name|procname
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|f
condition|)
block|{
specifier|static
struct|struct
name|Tab
block|{
specifier|const
name|char
modifier|*
name|name
decl_stmt|;
name|FuncType
name|func
decl_stmt|;
block|}
name|tab
index|[]
init|=
block|{
block|{
literal|"glActiveTexture"
block|,
operator|(
name|FuncType
operator|)
name|glActiveTexture
block|}
block|,
block|{
literal|"glAttachShader"
block|,
operator|(
name|FuncType
operator|)
name|glAttachShader
block|}
block|,
block|{
literal|"glBindAttribLocation"
block|,
operator|(
name|FuncType
operator|)
name|glBindAttribLocation
block|}
block|,
block|{
literal|"glBindBuffer"
block|,
operator|(
name|FuncType
operator|)
name|glBindBuffer
block|}
block|,
block|{
literal|"glBindFramebuffer"
block|,
operator|(
name|FuncType
operator|)
name|glBindFramebuffer
block|}
block|,
block|{
literal|"glBindRenderbuffer"
block|,
operator|(
name|FuncType
operator|)
name|glBindRenderbuffer
block|}
block|,
block|{
literal|"glBlendColor"
block|,
operator|(
name|FuncType
operator|)
name|glBlendColor
block|}
block|,
block|{
literal|"glBlendEquation"
block|,
operator|(
name|FuncType
operator|)
name|glBlendEquation
block|}
block|,
block|{
literal|"glBlendEquationSeparate"
block|,
operator|(
name|FuncType
operator|)
name|glBlendEquationSeparate
block|}
block|,
block|{
literal|"glBlendFuncSeparate"
block|,
operator|(
name|FuncType
operator|)
name|glBlendFuncSeparate
block|}
block|,
block|{
literal|"glBufferData"
block|,
operator|(
name|FuncType
operator|)
name|glBufferData
block|}
block|,
block|{
literal|"glBufferSubData"
block|,
operator|(
name|FuncType
operator|)
name|glBufferSubData
block|}
block|,
block|{
literal|"glCheckFramebufferStatus"
block|,
operator|(
name|FuncType
operator|)
name|glCheckFramebufferStatus
block|}
block|,
block|{
literal|"glCompileShader"
block|,
operator|(
name|FuncType
operator|)
name|glCompileShader
block|}
block|,
block|{
literal|"glCompressedTexImage2D"
block|,
operator|(
name|FuncType
operator|)
name|glCompressedTexImage2D
block|}
block|,
block|{
literal|"glCompressedTexSubImage2D"
block|,
operator|(
name|FuncType
operator|)
name|glCompressedTexSubImage2D
block|}
block|,
block|{
literal|"glCreateProgram"
block|,
operator|(
name|FuncType
operator|)
name|glCreateProgram
block|}
block|,
block|{
literal|"glCreateShader"
block|,
operator|(
name|FuncType
operator|)
name|glCreateShader
block|}
block|,
block|{
literal|"glDeleteBuffers"
block|,
operator|(
name|FuncType
operator|)
name|glDeleteBuffers
block|}
block|,
block|{
literal|"glDeleteFramebuffers"
block|,
operator|(
name|FuncType
operator|)
name|glDeleteFramebuffers
block|}
block|,
block|{
literal|"glDeleteProgram"
block|,
operator|(
name|FuncType
operator|)
name|glDeleteProgram
block|}
block|,
block|{
literal|"glDeleteRenderbuffers"
block|,
operator|(
name|FuncType
operator|)
name|glDeleteRenderbuffers
block|}
block|,
block|{
literal|"glDeleteShader"
block|,
operator|(
name|FuncType
operator|)
name|glDeleteShader
block|}
block|,
block|{
literal|"glDetachShader"
block|,
operator|(
name|FuncType
operator|)
name|glDetachShader
block|}
block|,
block|{
literal|"glDisableVertexAttribArray"
block|,
operator|(
name|FuncType
operator|)
name|glDisableVertexAttribArray
block|}
block|,
block|{
literal|"glEnableVertexAttribArray"
block|,
operator|(
name|FuncType
operator|)
name|glEnableVertexAttribArray
block|}
block|,
block|{
literal|"glFramebufferRenderbuffer"
block|,
operator|(
name|FuncType
operator|)
name|glFramebufferRenderbuffer
block|}
block|,
block|{
literal|"glFramebufferTexture2D"
block|,
operator|(
name|FuncType
operator|)
name|glFramebufferTexture2D
block|}
block|,
block|{
literal|"glGenBuffers"
block|,
operator|(
name|FuncType
operator|)
name|glGenBuffers
block|}
block|,
block|{
literal|"glGenerateMipmap"
block|,
operator|(
name|FuncType
operator|)
name|glGenerateMipmap
block|}
block|,
block|{
literal|"glGenFramebuffers"
block|,
operator|(
name|FuncType
operator|)
name|glGenFramebuffers
block|}
block|,
block|{
literal|"glGenRenderbuffers"
block|,
operator|(
name|FuncType
operator|)
name|glGenRenderbuffers
block|}
block|,
block|{
literal|"glGetActiveAttrib"
block|,
operator|(
name|FuncType
operator|)
name|glGetActiveAttrib
block|}
block|,
block|{
literal|"glGetActiveUniform"
block|,
operator|(
name|FuncType
operator|)
name|glGetActiveUniform
block|}
block|,
block|{
literal|"glGetAttachedShaders"
block|,
operator|(
name|FuncType
operator|)
name|glGetAttachedShaders
block|}
block|,
block|{
literal|"glGetAttribLocation"
block|,
operator|(
name|FuncType
operator|)
name|glGetAttribLocation
block|}
block|,
block|{
literal|"glGetBufferParameteriv"
block|,
operator|(
name|FuncType
operator|)
name|glGetBufferParameteriv
block|}
block|,
block|{
literal|"glGetFramebufferAttachmentParameteriv"
block|,
operator|(
name|FuncType
operator|)
name|glGetFramebufferAttachmentParameteriv
block|}
block|,
block|{
literal|"glGetProgramiv"
block|,
operator|(
name|FuncType
operator|)
name|glGetProgramiv
block|}
block|,
block|{
literal|"glGetProgramInfoLog"
block|,
operator|(
name|FuncType
operator|)
name|glGetProgramInfoLog
block|}
block|,
block|{
literal|"glGetRenderbufferParameteriv"
block|,
operator|(
name|FuncType
operator|)
name|glGetRenderbufferParameteriv
block|}
block|,
block|{
literal|"glGetShaderiv"
block|,
operator|(
name|FuncType
operator|)
name|glGetShaderiv
block|}
block|,
block|{
literal|"glGetShaderInfoLog"
block|,
operator|(
name|FuncType
operator|)
name|glGetShaderInfoLog
block|}
block|,
block|{
literal|"glGetShaderPrecisionFormat"
block|,
operator|(
name|FuncType
operator|)
name|glGetShaderPrecisionFormat
block|}
block|,
block|{
literal|"glGetShaderSource"
block|,
operator|(
name|FuncType
operator|)
name|glGetShaderSource
block|}
block|,
block|{
literal|"glGetUniformfv"
block|,
operator|(
name|FuncType
operator|)
name|glGetUniformfv
block|}
block|,
block|{
literal|"glGetUniformiv"
block|,
operator|(
name|FuncType
operator|)
name|glGetUniformiv
block|}
block|,
block|{
literal|"glGetUniformLocation"
block|,
operator|(
name|FuncType
operator|)
name|glGetUniformLocation
block|}
block|,
block|{
literal|"glGetVertexAttribfv"
block|,
operator|(
name|FuncType
operator|)
name|glGetVertexAttribfv
block|}
block|,
block|{
literal|"glGetVertexAttribiv"
block|,
operator|(
name|FuncType
operator|)
name|glGetVertexAttribiv
block|}
block|,
block|{
literal|"glGetVertexAttribPointerv"
block|,
operator|(
name|FuncType
operator|)
name|glGetVertexAttribPointerv
block|}
block|,
block|{
literal|"glIsBuffer"
block|,
operator|(
name|FuncType
operator|)
name|glIsBuffer
block|}
block|,
block|{
literal|"glIsFramebuffer"
block|,
operator|(
name|FuncType
operator|)
name|glIsFramebuffer
block|}
block|,
block|{
literal|"glIsProgram"
block|,
operator|(
name|FuncType
operator|)
name|glIsProgram
block|}
block|,
block|{
literal|"glIsRenderbuffer"
block|,
operator|(
name|FuncType
operator|)
name|glIsRenderbuffer
block|}
block|,
block|{
literal|"glIsShader"
block|,
operator|(
name|FuncType
operator|)
name|glIsShader
block|}
block|,
block|{
literal|"glLinkProgram"
block|,
operator|(
name|FuncType
operator|)
name|glLinkProgram
block|}
block|,
block|{
literal|"glReleaseShaderCompiler"
block|,
operator|(
name|FuncType
operator|)
name|glReleaseShaderCompiler
block|}
block|,
block|{
literal|"glRenderbufferStorage"
block|,
operator|(
name|FuncType
operator|)
name|glRenderbufferStorage
block|}
block|,
block|{
literal|"glSampleCoverage"
block|,
operator|(
name|FuncType
operator|)
name|glSampleCoverage
block|}
block|,
block|{
literal|"glShaderBinary"
block|,
operator|(
name|FuncType
operator|)
name|glShaderBinary
block|}
block|,
block|{
literal|"glShaderSource"
block|,
operator|(
name|FuncType
operator|)
name|glShaderSource
block|}
block|,
block|{
literal|"glStencilFuncSeparate"
block|,
operator|(
name|FuncType
operator|)
name|glStencilFuncSeparate
block|}
block|,
block|{
literal|"glStencilMaskSeparate"
block|,
operator|(
name|FuncType
operator|)
name|glStencilMaskSeparate
block|}
block|,
block|{
literal|"glStencilOpSeparate"
block|,
operator|(
name|FuncType
operator|)
name|glStencilOpSeparate
block|}
block|,
block|{
literal|"glUniform1f"
block|,
operator|(
name|FuncType
operator|)
name|glUniform1f
block|}
block|,
block|{
literal|"glUniform1fv"
block|,
operator|(
name|FuncType
operator|)
name|glUniform1fv
block|}
block|,
block|{
literal|"glUniform1i"
block|,
operator|(
name|FuncType
operator|)
name|glUniform1i
block|}
block|,
block|{
literal|"glUniform1iv"
block|,
operator|(
name|FuncType
operator|)
name|glUniform1iv
block|}
block|,
block|{
literal|"glUniform2f"
block|,
operator|(
name|FuncType
operator|)
name|glUniform2f
block|}
block|,
block|{
literal|"glUniform2fv"
block|,
operator|(
name|FuncType
operator|)
name|glUniform2fv
block|}
block|,
block|{
literal|"glUniform2i"
block|,
operator|(
name|FuncType
operator|)
name|glUniform2i
block|}
block|,
block|{
literal|"glUniform2iv"
block|,
operator|(
name|FuncType
operator|)
name|glUniform2iv
block|}
block|,
block|{
literal|"glUniform3f"
block|,
operator|(
name|FuncType
operator|)
name|glUniform3f
block|}
block|,
block|{
literal|"glUniform3fv"
block|,
operator|(
name|FuncType
operator|)
name|glUniform3fv
block|}
block|,
block|{
literal|"glUniform3i"
block|,
operator|(
name|FuncType
operator|)
name|glUniform3i
block|}
block|,
block|{
literal|"glUniform3iv"
block|,
operator|(
name|FuncType
operator|)
name|glUniform3iv
block|}
block|,
block|{
literal|"glUniform4f"
block|,
operator|(
name|FuncType
operator|)
name|glUniform4f
block|}
block|,
block|{
literal|"glUniform4fv"
block|,
operator|(
name|FuncType
operator|)
name|glUniform4fv
block|}
block|,
block|{
literal|"glUniform4i"
block|,
operator|(
name|FuncType
operator|)
name|glUniform4i
block|}
block|,
block|{
literal|"glUniform4iv"
block|,
operator|(
name|FuncType
operator|)
name|glUniform4iv
block|}
block|,
block|{
literal|"glUniformMatrix2fv"
block|,
operator|(
name|FuncType
operator|)
name|glUniformMatrix2fv
block|}
block|,
block|{
literal|"glUniformMatrix3fv"
block|,
operator|(
name|FuncType
operator|)
name|glUniformMatrix3fv
block|}
block|,
block|{
literal|"glUniformMatrix4fv"
block|,
operator|(
name|FuncType
operator|)
name|glUniformMatrix4fv
block|}
block|,
block|{
literal|"glUseProgram"
block|,
operator|(
name|FuncType
operator|)
name|glUseProgram
block|}
block|,
block|{
literal|"glValidateProgram"
block|,
operator|(
name|FuncType
operator|)
name|glValidateProgram
block|}
block|,
block|{
literal|"glVertexAttrib1f"
block|,
operator|(
name|FuncType
operator|)
name|glVertexAttrib1f
block|}
block|,
block|{
literal|"glVertexAttrib1fv"
block|,
operator|(
name|FuncType
operator|)
name|glVertexAttrib1fv
block|}
block|,
block|{
literal|"glVertexAttrib2f"
block|,
operator|(
name|FuncType
operator|)
name|glVertexAttrib2f
block|}
block|,
block|{
literal|"glVertexAttrib2fv"
block|,
operator|(
name|FuncType
operator|)
name|glVertexAttrib2fv
block|}
block|,
block|{
literal|"glVertexAttrib3f"
block|,
operator|(
name|FuncType
operator|)
name|glVertexAttrib3f
block|}
block|,
block|{
literal|"glVertexAttrib3fv"
block|,
operator|(
name|FuncType
operator|)
name|glVertexAttrib3fv
block|}
block|,
block|{
literal|"glVertexAttrib4f"
block|,
operator|(
name|FuncType
operator|)
name|glVertexAttrib4f
block|}
block|,
block|{
literal|"glVertexAttrib4fv"
block|,
operator|(
name|FuncType
operator|)
name|glVertexAttrib4fv
block|}
block|,
block|{
literal|"glVertexAttribPointer"
block|,
operator|(
name|FuncType
operator|)
name|glVertexAttribPointer
block|}
block|}
struct|;
for|for
control|(
name|size_t
name|i
init|=
literal|0
init|;
name|i
operator|<
sizeof|sizeof
argument_list|(
name|tab
argument_list|)
operator|/
sizeof|sizeof
argument_list|(
name|Tab
argument_list|)
condition|;
operator|++
name|i
control|)
block|{
name|uint
name|len
init|=
name|qstrlen
argument_list|(
name|tab
index|[
name|i
index|]
operator|.
name|name
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|qstrncmp
argument_list|(
name|tab
index|[
name|i
index|]
operator|.
name|name
argument_list|,
name|procname
argument_list|,
name|len
argument_list|)
operator|&&
name|procname
index|[
name|len
index|]
operator|==
literal|'\0'
condition|)
block|{
name|f
operator|=
name|tab
index|[
name|i
index|]
operator|.
name|func
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
operator|!
name|f
condition|)
name|qCDebug
argument_list|(
name|qglLc
argument_list|,
literal|"eglGetProcAddress failed for %s"
argument_list|,
name|procname
argument_list|)
expr_stmt|;
block|}
return|return
name|f
return|;
block|}
block|}
end_extern
begin_comment
comment|// extern "C"
end_comment
begin_comment
comment|// For QOpenGLFunctions
end_comment
begin_function
DECL|function|qgl_proxyLibraryType
name|int
name|qgl_proxyLibraryType
parameter_list|(
name|void
parameter_list|)
block|{
return|return
name|qgl_choose
argument_list|()
operator|->
name|libraryType
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|qgl_glHandle
name|HMODULE
name|qgl_glHandle
parameter_list|(
name|void
parameter_list|)
block|{
return|return
name|qgl_choose
argument_list|()
operator|->
name|libraryHandle
argument_list|()
return|;
block|}
end_function
begin_constructor
DECL|function|QAbstractWindowsOpenGL
name|QAbstractWindowsOpenGL
operator|::
name|QAbstractWindowsOpenGL
parameter_list|()
member_init_list|:
name|CopyContext
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|CreateContext
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|CreateLayerContext
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|DeleteContext
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GetCurrentContext
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GetCurrentDC
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GetProcAddress
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|MakeCurrent
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|ShareLists
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|UseFontBitmapsW
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|UseFontOutlinesW
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|DescribeLayerPlane
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|SetLayerPaletteEntries
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GetLayerPaletteEntries
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|RealizeLayerPalette
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|SwapLayerBuffers
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|SwapMultipleBuffers
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|EGL_GetError
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|EGL_GetDisplay
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|EGL_Initialize
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|EGL_Terminate
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|EGL_QueryString
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|EGL_GetConfigs
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|EGL_ChooseConfig
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|EGL_GetConfigAttrib
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|EGL_CreateWindowSurface
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|EGL_CreatePbufferSurface
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|EGL_CreatePixmapSurface
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|EGL_DestroySurface
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|EGL_QuerySurface
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|EGL_BindAPI
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|EGL_QueryAPI
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|EGL_WaitClient
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|EGL_ReleaseThread
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|EGL_CreatePbufferFromClientBuffer
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|EGL_SurfaceAttrib
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|EGL_BindTexImage
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|EGL_ReleaseTexImage
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|EGL_SwapInterval
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|EGL_CreateContext
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|EGL_DestroyContext
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|EGL_MakeCurrent
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|EGL_GetCurrentContext
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|EGL_GetCurrentSurface
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|EGL_GetCurrentDisplay
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|EGL_QueryContext
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|EGL_WaitGL
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|EGL_WaitNative
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|EGL_SwapBuffers
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|EGL_CopyBuffers
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|EGL_GetProcAddress
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Viewport
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|DepthRange
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|IsEnabled
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GetTexLevelParameteriv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GetTexLevelParameterfv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GetTexParameteriv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GetTexParameterfv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GetTexImage
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GetString
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GetIntegerv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GetFloatv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GetError
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GetDoublev
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GetBooleanv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|ReadPixels
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|ReadBuffer
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|PixelStorei
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|PixelStoref
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|DepthFunc
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|StencilOp
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|StencilFunc
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|LogicOp
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|BlendFunc
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Flush
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Finish
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Enable
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Disable
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|DepthMask
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|ColorMask
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|StencilMask
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|ClearDepth
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|ClearStencil
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|ClearColor
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Clear
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|DrawBuffer
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|TexImage2D
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|TexImage1D
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|TexParameteriv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|TexParameteri
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|TexParameterfv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|TexParameterf
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Scissor
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|PolygonMode
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|PointSize
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|LineWidth
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Hint
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|FrontFace
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|CullFace
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Translatef
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Translated
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Scalef
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Scaled
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Rotatef
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Rotated
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|PushMatrix
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|PopMatrix
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Ortho
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|MultMatrixd
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|MultMatrixf
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|MatrixMode
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|LoadMatrixd
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|LoadMatrixf
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|LoadIdentity
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Frustum
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|IsList
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GetTexGeniv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GetTexGenfv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GetTexGendv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GetTexEnviv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GetTexEnvfv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GetPolygonStipple
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GetPixelMapusv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GetPixelMapuiv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GetPixelMapfv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GetMaterialiv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GetMaterialfv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GetMapiv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GetMapfv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GetMapdv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GetLightiv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GetLightfv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GetClipPlane
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|DrawPixels
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|CopyPixels
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|PixelMapusv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|PixelMapuiv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|PixelMapfv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|PixelTransferi
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|PixelTransferf
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|PixelZoom
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|AlphaFunc
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|EvalPoint2
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|EvalMesh2
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|EvalPoint1
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|EvalMesh1
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|EvalCoord2fv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|EvalCoord2f
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|EvalCoord2dv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|EvalCoord2d
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|EvalCoord1fv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|EvalCoord1f
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|EvalCoord1dv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|EvalCoord1d
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|MapGrid2f
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|MapGrid2d
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|MapGrid1f
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|MapGrid1d
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Map2f
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Map2d
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Map1f
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Map1d
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|PushAttrib
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|PopAttrib
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Accum
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|IndexMask
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|ClearIndex
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|ClearAccum
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|PushName
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|PopName
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|PassThrough
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|LoadName
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|InitNames
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|RenderMode
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|SelectBuffer
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|FeedbackBuffer
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|TexGeniv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|TexGeni
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|TexGenfv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|TexGenf
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|TexGendv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|TexGend
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|TexEnviv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|TexEnvi
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|TexEnvfv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|TexEnvf
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|ShadeModel
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|PolygonStipple
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Materialiv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Materiali
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Materialfv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Materialf
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|LineStipple
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|LightModeliv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|LightModeli
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|LightModelfv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|LightModelf
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Lightiv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Lighti
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Lightfv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Lightf
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Fogiv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Fogi
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Fogfv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Fogf
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|ColorMaterial
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|ClipPlane
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Vertex4sv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Vertex4s
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Vertex4iv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Vertex4i
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Vertex4fv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Vertex4f
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Vertex4dv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Vertex4d
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Vertex3sv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Vertex3s
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Vertex3iv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Vertex3i
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Vertex3fv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Vertex3f
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Vertex3dv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Vertex3d
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Vertex2sv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Vertex2s
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Vertex2iv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Vertex2i
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Vertex2fv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Vertex2f
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Vertex2dv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Vertex2d
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|TexCoord4sv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|TexCoord4s
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|TexCoord4iv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|TexCoord4i
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|TexCoord4fv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|TexCoord4f
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|TexCoord4dv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|TexCoord4d
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|TexCoord3sv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|TexCoord3s
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|TexCoord3iv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|TexCoord3i
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|TexCoord3fv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|TexCoord3f
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|TexCoord3dv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|TexCoord3d
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|TexCoord2sv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|TexCoord2s
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|TexCoord2iv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|TexCoord2i
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|TexCoord2fv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|TexCoord2f
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|TexCoord2dv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|TexCoord2d
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|TexCoord1sv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|TexCoord1s
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|TexCoord1iv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|TexCoord1i
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|TexCoord1fv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|TexCoord1f
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|TexCoord1dv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|TexCoord1d
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Rectsv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Rects
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Rectiv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Recti
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Rectfv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Rectf
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Rectdv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Rectd
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|RasterPos4sv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|RasterPos4s
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|RasterPos4iv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|RasterPos4i
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|RasterPos4fv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|RasterPos4f
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|RasterPos4dv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|RasterPos4d
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|RasterPos3sv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|RasterPos3s
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|RasterPos3iv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|RasterPos3i
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|RasterPos3fv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|RasterPos3f
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|RasterPos3dv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|RasterPos3d
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|RasterPos2sv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|RasterPos2s
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|RasterPos2iv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|RasterPos2i
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|RasterPos2fv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|RasterPos2f
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|RasterPos2dv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|RasterPos2d
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Normal3sv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Normal3s
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Normal3iv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Normal3i
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Normal3fv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Normal3f
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Normal3dv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Normal3d
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Normal3bv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Normal3b
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Indexsv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Indexs
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Indexiv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Indexi
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Indexfv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Indexf
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Indexdv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Indexd
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|End
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|EdgeFlagv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|EdgeFlag
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Color4usv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Color4us
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Color4uiv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Color4ui
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Color4ubv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Color4ub
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Color4sv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Color4s
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Color4iv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Color4i
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Color4fv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Color4f
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Color4dv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Color4d
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Color4bv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Color4b
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Color3usv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Color3us
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Color3uiv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Color3ui
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Color3ubv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Color3ub
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Color3sv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Color3s
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Color3iv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Color3i
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Color3fv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Color3f
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Color3dv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Color3d
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Color3bv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Color3b
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Bitmap
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Begin
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|ListBase
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GenLists
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|DeleteLists
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|CallLists
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|CallList
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|EndList
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|NewList
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Indexubv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Indexub
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|IsTexture
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GenTextures
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|DeleteTextures
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|BindTexture
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|TexSubImage2D
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|TexSubImage1D
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|CopyTexSubImage2D
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|CopyTexSubImage1D
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|CopyTexImage2D
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|CopyTexImage1D
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|PolygonOffset
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GetPointerv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|DrawElements
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|DrawArrays
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|PushClientAttrib
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|PopClientAttrib
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|PrioritizeTextures
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|AreTexturesResident
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|VertexPointer
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|TexCoordPointer
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|NormalPointer
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|InterleavedArrays
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|IndexPointer
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|EnableClientState
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|EdgeFlagPointer
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|DisableClientState
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|ColorPointer
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|ArrayElement
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|ActiveTexture
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|AttachShader
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|BindAttribLocation
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|BindBuffer
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|BindFramebuffer
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|BindRenderbuffer
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|BlendColor
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|BlendEquation
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|BlendEquationSeparate
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|BlendFuncSeparate
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|BufferData
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|BufferSubData
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|CheckFramebufferStatus
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|ClearDepthf
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|CompileShader
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|CompressedTexImage2D
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|CompressedTexSubImage2D
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|CreateProgram
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|CreateShader
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|DeleteBuffers
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|DeleteFramebuffers
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|DeleteProgram
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|DeleteRenderbuffers
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|DeleteShader
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|DepthRangef
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|DetachShader
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|DisableVertexAttribArray
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|EnableVertexAttribArray
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|FramebufferRenderbuffer
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|FramebufferTexture2D
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GenBuffers
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GenerateMipmap
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GenFramebuffers
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GenRenderbuffers
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GetActiveAttrib
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GetActiveUniform
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GetAttachedShaders
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GetAttribLocation
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GetBufferParameteriv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GetFramebufferAttachmentParameteriv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GetProgramiv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GetProgramInfoLog
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GetRenderbufferParameteriv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GetShaderiv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GetShaderInfoLog
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GetShaderPrecisionFormat
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GetShaderSource
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GetUniformfv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GetUniformiv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GetUniformLocation
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GetVertexAttribfv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GetVertexAttribiv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|GetVertexAttribPointerv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|IsBuffer
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|IsFramebuffer
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|IsProgram
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|IsRenderbuffer
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|IsShader
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|LinkProgram
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|ReleaseShaderCompiler
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|RenderbufferStorage
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|SampleCoverage
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|ShaderBinary
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|ShaderSource
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|StencilFuncSeparate
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|StencilMaskSeparate
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|StencilOpSeparate
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Uniform1f
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Uniform1fv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Uniform1i
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Uniform1iv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Uniform2f
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Uniform2fv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Uniform2i
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Uniform2iv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Uniform3f
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Uniform3fv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Uniform3i
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Uniform3iv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Uniform4f
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Uniform4fv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Uniform4i
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|Uniform4iv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|UniformMatrix2fv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|UniformMatrix3fv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|UniformMatrix4fv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|UseProgram
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|ValidateProgram
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|VertexAttrib1f
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|VertexAttrib1fv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|VertexAttrib2f
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|VertexAttrib2fv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|VertexAttrib3f
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|VertexAttrib3fv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|VertexAttrib4f
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|VertexAttrib4fv
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|VertexAttribPointer
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|m_lib
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|m_libraryType
argument_list|(
name|DesktopGL
argument_list|)
member_init_list|,
name|m_loaded
argument_list|(
literal|false
argument_list|)
block|{ }
end_constructor
end_unit
