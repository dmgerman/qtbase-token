begin_unit
begin_comment
comment|/*  * Copyright (C) 1998-2004  David Turner and Werner Lemberg  * Copyright (C) 2004,2007  Red Hat, Inc.  *  * This is part of HarfBuzz, an OpenType Layout engine library.  *  * Permission is hereby granted, without written agreement and without  * license or royalty fees, to use, copy, modify, and distribute this  * software and its documentation for any purpose, provided that the  * above copyright notice and the following two paragraphs appear in  * all copies of this software.  *  * IN NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE TO ANY PARTY FOR  * DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES  * ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN  * IF THE COPYRIGHT HOLDER HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH  * DAMAGE.  *  * THE COPYRIGHT HOLDER SPECIFICALLY DISCLAIMS ANY WARRANTIES, INCLUDING,  * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND  * FITNESS FOR A PARTICULAR PURPOSE.  THE SOFTWARE PROVIDED HEREUNDER IS  * ON AN "AS IS" BASIS, AND THE COPYRIGHT HOLDER HAS NO OBLIGATION TO  * PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.  *  * Red Hat Author(s): Owen Taylor, Behdad Esfahbod  */
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|HARFBUZZ_BUFFER_H
end_ifndef
begin_define
DECL|macro|HARFBUZZ_BUFFER_H
define|#
directive|define
name|HARFBUZZ_BUFFER_H
end_define
begin_include
include|#
directive|include
file|"harfbuzz-global.h"
end_include
begin_macro
name|HB_BEGIN_HEADER
end_macro
begin_typedef
DECL|struct|HB_GlyphItemRec_
typedef|typedef
struct|struct
name|HB_GlyphItemRec_
block|{
DECL|member|gindex
name|HB_UInt
name|gindex
decl_stmt|;
DECL|member|properties
name|HB_UInt
name|properties
decl_stmt|;
DECL|member|cluster
name|HB_UInt
name|cluster
decl_stmt|;
DECL|member|component
name|HB_UShort
name|component
decl_stmt|;
DECL|member|ligID
name|HB_UShort
name|ligID
decl_stmt|;
DECL|member|gproperties
name|HB_UShort
name|gproperties
decl_stmt|;
block|}
DECL|typedef|HB_GlyphItemRec
DECL|typedef|HB_GlyphItem
name|HB_GlyphItemRec
operator|,
typedef|*
name|HB_GlyphItem
typedef|;
end_typedef
begin_typedef
DECL|struct|HB_PositionRec_
typedef|typedef
struct|struct
name|HB_PositionRec_
block|{
DECL|member|x_pos
name|HB_Fixed
name|x_pos
decl_stmt|;
DECL|member|y_pos
name|HB_Fixed
name|y_pos
decl_stmt|;
DECL|member|x_advance
name|HB_Fixed
name|x_advance
decl_stmt|;
DECL|member|y_advance
name|HB_Fixed
name|y_advance
decl_stmt|;
DECL|member|back
name|HB_UShort
name|back
decl_stmt|;
comment|/* number of glyphs to go back 				 for drawing current glyph   */
DECL|member|cursive_chain
name|HB_Short
name|cursive_chain
decl_stmt|;
comment|/* character to which this connects, 				 may be positive or negative; used 				 only internally                     */
DECL|member|new_advance
name|HB_Bool
name|new_advance
decl_stmt|;
comment|/* if set, the advance width values are 				 absolute, i.e., they won't be 				 added to the original glyph's value 				 but rather replace them.            */
block|}
DECL|typedef|HB_PositionRec
DECL|typedef|HB_Position
name|HB_PositionRec
operator|,
typedef|*
name|HB_Position
typedef|;
end_typedef
begin_typedef
DECL|struct|HB_BufferRec_
typedef|typedef
struct|struct
name|HB_BufferRec_
block|{
DECL|member|allocated
name|HB_UInt
name|allocated
decl_stmt|;
DECL|member|in_length
name|HB_UInt
name|in_length
decl_stmt|;
DECL|member|out_length
name|HB_UInt
name|out_length
decl_stmt|;
DECL|member|in_pos
name|HB_UInt
name|in_pos
decl_stmt|;
DECL|member|out_pos
name|HB_UInt
name|out_pos
decl_stmt|;
DECL|member|in_string
name|HB_GlyphItem
name|in_string
decl_stmt|;
DECL|member|out_string
name|HB_GlyphItem
name|out_string
decl_stmt|;
DECL|member|alt_string
name|HB_GlyphItem
name|alt_string
decl_stmt|;
DECL|member|positions
name|HB_Position
name|positions
decl_stmt|;
DECL|member|max_ligID
name|HB_UShort
name|max_ligID
decl_stmt|;
DECL|member|separate_out
name|HB_Bool
name|separate_out
decl_stmt|;
block|}
DECL|typedef|HB_BufferRec
DECL|typedef|HB_Buffer
name|HB_BufferRec
operator|,
typedef|*
name|HB_Buffer
typedef|;
end_typedef
begin_function_decl
name|HB_Error
name|hb_buffer_new
parameter_list|(
name|HB_Buffer
modifier|*
name|buffer
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|void
name|hb_buffer_free
parameter_list|(
name|HB_Buffer
name|buffer
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|void
name|hb_buffer_clear
parameter_list|(
name|HB_Buffer
name|buffer
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|HB_Error
name|hb_buffer_add_glyph
parameter_list|(
name|HB_Buffer
name|buffer
parameter_list|,
name|HB_UInt
name|glyph_index
parameter_list|,
name|HB_UInt
name|properties
parameter_list|,
name|HB_UInt
name|cluster
parameter_list|)
function_decl|;
end_function_decl
begin_macro
name|HB_END_HEADER
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/* HARFBUZZ_BUFFER_H */
end_comment
end_unit
