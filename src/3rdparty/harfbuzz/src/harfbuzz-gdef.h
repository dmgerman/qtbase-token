begin_unit
begin_comment
comment|/*  * Copyright (C) 1998-2004  David Turner and Werner Lemberg  * Copyright (C) 2006  Behdad Esfahbod  *  * This is part of HarfBuzz, an OpenType Layout engine library.  *  * Permission is hereby granted, without written agreement and without  * license or royalty fees, to use, copy, modify, and distribute this  * software and its documentation for any purpose, provided that the  * above copyright notice and the following two paragraphs appear in  * all copies of this software.  *  * IN NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE TO ANY PARTY FOR  * DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES  * ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN  * IF THE COPYRIGHT HOLDER HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH  * DAMAGE.  *  * THE COPYRIGHT HOLDER SPECIFICALLY DISCLAIMS ANY WARRANTIES, INCLUDING,  * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND  * FITNESS FOR A PARTICULAR PURPOSE.  THE SOFTWARE PROVIDED HEREUNDER IS  * ON AN "AS IS" BASIS, AND THE COPYRIGHT HOLDER HAS NO OBLIGATION TO  * PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.  */
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|HARFBUZZ_GDEF_H
end_ifndef
begin_define
DECL|macro|HARFBUZZ_GDEF_H
define|#
directive|define
name|HARFBUZZ_GDEF_H
end_define
begin_include
include|#
directive|include
file|"harfbuzz-open.h"
end_include
begin_include
include|#
directive|include
file|"harfbuzz-stream.h"
end_include
begin_macro
name|HB_BEGIN_HEADER
end_macro
begin_comment
comment|/* GDEF glyph properties.  Note that HB_GDEF_COMPONENT has no corresponding  * flag in the LookupFlag field.     */
end_comment
begin_define
DECL|macro|HB_GDEF_BASE_GLYPH
define|#
directive|define
name|HB_GDEF_BASE_GLYPH
value|0x0002
end_define
begin_define
DECL|macro|HB_GDEF_LIGATURE
define|#
directive|define
name|HB_GDEF_LIGATURE
value|0x0004
end_define
begin_define
DECL|macro|HB_GDEF_MARK
define|#
directive|define
name|HB_GDEF_MARK
value|0x0008
end_define
begin_define
DECL|macro|HB_GDEF_COMPONENT
define|#
directive|define
name|HB_GDEF_COMPONENT
value|0x0010
end_define
begin_typedef
DECL|typedef|HB_AttachPoint
typedef|typedef
name|struct
name|HB_AttachPoint_
name|HB_AttachPoint
typedef|;
end_typedef
begin_struct
DECL|struct|HB_AttachList_
struct|struct
name|HB_AttachList_
block|{
DECL|member|AttachPoint
name|HB_AttachPoint
modifier|*
name|AttachPoint
decl_stmt|;
comment|/* array of AttachPoint tables */
DECL|member|Coverage
name|HB_Coverage
name|Coverage
decl_stmt|;
comment|/* Coverage table              */
DECL|member|GlyphCount
name|HB_UShort
name|GlyphCount
decl_stmt|;
comment|/* number of glyphs with 					 attachments                 */
DECL|member|loaded
name|HB_Bool
name|loaded
decl_stmt|;
block|}
struct|;
end_struct
begin_typedef
DECL|typedef|HB_AttachList
typedef|typedef
name|struct
name|HB_AttachList_
name|HB_AttachList
typedef|;
end_typedef
begin_typedef
DECL|typedef|HB_LigGlyph
typedef|typedef
name|struct
name|HB_LigGlyph_
name|HB_LigGlyph
typedef|;
end_typedef
begin_struct
DECL|struct|HB_LigCaretList_
struct|struct
name|HB_LigCaretList_
block|{
DECL|member|LigGlyph
name|HB_LigGlyph
modifier|*
name|LigGlyph
decl_stmt|;
comment|/* array of LigGlyph tables  */
DECL|member|Coverage
name|HB_Coverage
name|Coverage
decl_stmt|;
comment|/* Coverage table            */
DECL|member|LigGlyphCount
name|HB_UShort
name|LigGlyphCount
decl_stmt|;
comment|/* number of ligature glyphs */
DECL|member|loaded
name|HB_Bool
name|loaded
decl_stmt|;
block|}
struct|;
end_struct
begin_typedef
DECL|typedef|HB_LigCaretList
typedef|typedef
name|struct
name|HB_LigCaretList_
name|HB_LigCaretList
typedef|;
end_typedef
begin_comment
comment|/* The `NewGlyphClasses' field is not defined in the TTO specification.    We use it for fonts with a constructed `GlyphClassDef' structure    (i.e., which don't have a GDEF table) to collect glyph classes    assigned during the lookup process.  The number of arrays in this    pointer array is GlyphClassDef->cd.cd2.ClassRangeCount+1; the nth    array then contains the glyph class values of the glyphs not covered    by the ClassRangeRecords structures with index n-1 and n.  We store    glyph class values for four glyphs in a single array element.     `LastGlyph' is identical to the number of glyphs minus one in the    font; we need it only if `NewGlyphClasses' is not NULL (to have an    upper bound for the last array).     Note that we first store the file offset to the `MarkAttachClassDef'    field (which has been introduced in OpenType 1.2) -- since the    `Version' field value hasn't been increased to indicate that we have    one more field for some obscure reason, we must parse the GSUB table    to find out whether class values refer to this table.  Only then we    can finally load the MarkAttachClassDef structure if necessary.      */
end_comment
begin_struct
DECL|struct|HB_GDEFHeader_
struct|struct
name|HB_GDEFHeader_
block|{
DECL|member|NewGlyphClasses
name|HB_UShort
modifier|*
modifier|*
name|NewGlyphClasses
decl_stmt|;
DECL|member|offset
name|HB_UInt
name|offset
decl_stmt|;
DECL|member|MarkAttachClassDef_offset
name|HB_UInt
name|MarkAttachClassDef_offset
decl_stmt|;
DECL|member|Version
name|HB_16Dot16
name|Version
decl_stmt|;
DECL|member|GlyphClassDef
name|HB_ClassDefinition
name|GlyphClassDef
decl_stmt|;
DECL|member|AttachList
name|HB_AttachList
name|AttachList
decl_stmt|;
DECL|member|LigCaretList
name|HB_LigCaretList
name|LigCaretList
decl_stmt|;
DECL|member|MarkAttachClassDef
name|HB_ClassDefinition
name|MarkAttachClassDef
decl_stmt|;
comment|/* new in OT 1.2 */
DECL|member|LastGlyph
name|HB_UShort
name|LastGlyph
decl_stmt|;
block|}
struct|;
end_struct
begin_typedef
DECL|typedef|HB_GDEFHeader
typedef|typedef
name|struct
name|HB_GDEFHeader_
name|HB_GDEFHeader
typedef|;
end_typedef
begin_typedef
DECL|typedef|HB_GDEF
typedef|typedef
name|struct
name|HB_GDEFHeader_
modifier|*
name|HB_GDEF
typedef|;
end_typedef
begin_function_decl
name|HB_Error
name|HB_New_GDEF_Table
parameter_list|(
name|HB_GDEFHeader
modifier|*
modifier|*
name|retptr
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|HB_Error
name|HB_Load_GDEF_Table
parameter_list|(
name|HB_Stream
name|stream
parameter_list|,
name|HB_GDEFHeader
modifier|*
modifier|*
name|gdef
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|HB_Error
name|HB_Done_GDEF_Table
parameter_list|(
name|HB_GDEFHeader
modifier|*
name|gdef
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|HB_Error
name|HB_GDEF_Get_Glyph_Property
parameter_list|(
name|HB_GDEFHeader
modifier|*
name|gdef
parameter_list|,
name|HB_UShort
name|glyphID
parameter_list|,
name|HB_UShort
modifier|*
name|property
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|HB_Error
name|HB_GDEF_Build_ClassDefinition
parameter_list|(
name|HB_GDEFHeader
modifier|*
name|gdef
parameter_list|,
name|HB_UShort
name|num_glyphs
parameter_list|,
name|HB_UShort
name|glyph_count
parameter_list|,
name|HB_UShort
modifier|*
name|glyph_array
parameter_list|,
name|HB_UShort
modifier|*
name|class_array
parameter_list|)
function_decl|;
end_function_decl
begin_macro
name|HB_END_HEADER
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/* HARFBUZZ_GDEF_H */
end_comment
end_unit
