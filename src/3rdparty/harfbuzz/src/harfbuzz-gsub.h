begin_unit
begin_comment
comment|/*  * Copyright (C) 1998-2004  David Turner and Werner Lemberg  * Copyright (C) 2006  Behdad Esfahbod  *  * This is part of HarfBuzz, an OpenType Layout engine library.  *  * Permission is hereby granted, without written agreement and without  * license or royalty fees, to use, copy, modify, and distribute this  * software and its documentation for any purpose, provided that the  * above copyright notice and the following two paragraphs appear in  * all copies of this software.  *  * IN NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE TO ANY PARTY FOR  * DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES  * ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN  * IF THE COPYRIGHT HOLDER HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH  * DAMAGE.  *  * THE COPYRIGHT HOLDER SPECIFICALLY DISCLAIMS ANY WARRANTIES, INCLUDING,  * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND  * FITNESS FOR A PARTICULAR PURPOSE.  THE SOFTWARE PROVIDED HEREUNDER IS  * ON AN "AS IS" BASIS, AND THE COPYRIGHT HOLDER HAS NO OBLIGATION TO  * PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.  */
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|HARFBUZZ_GSUB_H
end_ifndef
begin_define
DECL|macro|HARFBUZZ_GSUB_H
define|#
directive|define
name|HARFBUZZ_GSUB_H
end_define
begin_include
include|#
directive|include
file|"harfbuzz-gdef.h"
end_include
begin_include
include|#
directive|include
file|"harfbuzz-buffer.h"
end_include
begin_macro
name|HB_BEGIN_HEADER
end_macro
begin_comment
comment|/* Lookup types for glyph substitution */
end_comment
begin_define
DECL|macro|HB_GSUB_LOOKUP_SINGLE
define|#
directive|define
name|HB_GSUB_LOOKUP_SINGLE
value|1
end_define
begin_define
DECL|macro|HB_GSUB_LOOKUP_MULTIPLE
define|#
directive|define
name|HB_GSUB_LOOKUP_MULTIPLE
value|2
end_define
begin_define
DECL|macro|HB_GSUB_LOOKUP_ALTERNATE
define|#
directive|define
name|HB_GSUB_LOOKUP_ALTERNATE
value|3
end_define
begin_define
DECL|macro|HB_GSUB_LOOKUP_LIGATURE
define|#
directive|define
name|HB_GSUB_LOOKUP_LIGATURE
value|4
end_define
begin_define
DECL|macro|HB_GSUB_LOOKUP_CONTEXT
define|#
directive|define
name|HB_GSUB_LOOKUP_CONTEXT
value|5
end_define
begin_define
DECL|macro|HB_GSUB_LOOKUP_CHAIN
define|#
directive|define
name|HB_GSUB_LOOKUP_CHAIN
value|6
end_define
begin_define
DECL|macro|HB_GSUB_LOOKUP_EXTENSION
define|#
directive|define
name|HB_GSUB_LOOKUP_EXTENSION
value|7
end_define
begin_define
DECL|macro|HB_GSUB_LOOKUP_REVERSE_CHAIN
define|#
directive|define
name|HB_GSUB_LOOKUP_REVERSE_CHAIN
value|8
end_define
begin_comment
comment|/* A pointer to a function which selects the alternate glyph.  `pos' is    the position of the glyph with index `glyphID', `num_alternates'    gives the number of alternates in the `alternates' array.  `data'    points to the user-defined structure specified during a call to    HB_GSUB_Register_Alternate_Function().  The function must return an    index into the `alternates' array.                                   */
end_comment
begin_typedef
DECL|typedef|HB_AltFunction
typedef|typedef
name|HB_UShort
function_decl|(
modifier|*
name|HB_AltFunction
function_decl|)
parameter_list|(
name|HB_UInt
name|pos
parameter_list|,
name|HB_UShort
name|glyphID
parameter_list|,
name|HB_UShort
name|num_alternates
parameter_list|,
name|HB_UShort
modifier|*
name|alternates
parameter_list|,
name|void
modifier|*
name|data
parameter_list|)
function_decl|;
end_typedef
begin_struct
DECL|struct|HB_GSUBHeader_
struct|struct
name|HB_GSUBHeader_
block|{
DECL|member|gdef
name|HB_GDEFHeader
modifier|*
name|gdef
decl_stmt|;
comment|/* the next two fields are used for an alternate substitution callback      function to select the proper alternate glyph.                      */
DECL|member|data
name|void
modifier|*
name|data
decl_stmt|;
DECL|member|altfunc
name|HB_AltFunction
name|altfunc
decl_stmt|;
DECL|member|offset
name|HB_UInt
name|offset
decl_stmt|;
DECL|member|Version
name|HB_16Dot16
name|Version
decl_stmt|;
DECL|member|ScriptList
name|HB_ScriptList
name|ScriptList
decl_stmt|;
DECL|member|FeatureList
name|HB_FeatureList
name|FeatureList
decl_stmt|;
DECL|member|LookupList
name|HB_LookupList
name|LookupList
decl_stmt|;
block|}
struct|;
end_struct
begin_typedef
DECL|typedef|HB_GSUBHeader
typedef|typedef
name|struct
name|HB_GSUBHeader_
name|HB_GSUBHeader
typedef|;
end_typedef
begin_typedef
DECL|typedef|HB_GSUB
typedef|typedef
name|HB_GSUBHeader
modifier|*
name|HB_GSUB
typedef|;
end_typedef
begin_function_decl
name|HB_Error
name|HB_Load_GSUB_Table
parameter_list|(
name|HB_Stream
name|stream
parameter_list|,
name|HB_GSUBHeader
modifier|*
modifier|*
name|gsub
parameter_list|,
name|HB_GDEFHeader
modifier|*
name|gdef
parameter_list|,
name|HB_Stream
name|gdefStream
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|HB_Error
name|HB_Done_GSUB_Table
parameter_list|(
name|HB_GSUBHeader
modifier|*
name|gsub
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|HB_Error
name|HB_GSUB_Select_Script
parameter_list|(
name|HB_GSUBHeader
modifier|*
name|gsub
parameter_list|,
name|HB_UInt
name|script_tag
parameter_list|,
name|HB_UShort
modifier|*
name|script_index
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|HB_Error
name|HB_GSUB_Select_Language
parameter_list|(
name|HB_GSUBHeader
modifier|*
name|gsub
parameter_list|,
name|HB_UInt
name|language_tag
parameter_list|,
name|HB_UShort
name|script_index
parameter_list|,
name|HB_UShort
modifier|*
name|language_index
parameter_list|,
name|HB_UShort
modifier|*
name|req_feature_index
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|HB_Error
name|HB_GSUB_Select_Feature
parameter_list|(
name|HB_GSUBHeader
modifier|*
name|gsub
parameter_list|,
name|HB_UInt
name|feature_tag
parameter_list|,
name|HB_UShort
name|script_index
parameter_list|,
name|HB_UShort
name|language_index
parameter_list|,
name|HB_UShort
modifier|*
name|feature_index
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|HB_Error
name|HB_GSUB_Query_Scripts
parameter_list|(
name|HB_GSUBHeader
modifier|*
name|gsub
parameter_list|,
name|HB_UInt
modifier|*
modifier|*
name|script_tag_list
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|HB_Error
name|HB_GSUB_Query_Languages
parameter_list|(
name|HB_GSUBHeader
modifier|*
name|gsub
parameter_list|,
name|HB_UShort
name|script_index
parameter_list|,
name|HB_UInt
modifier|*
modifier|*
name|language_tag_list
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|HB_Error
name|HB_GSUB_Query_Features
parameter_list|(
name|HB_GSUBHeader
modifier|*
name|gsub
parameter_list|,
name|HB_UShort
name|script_index
parameter_list|,
name|HB_UShort
name|language_index
parameter_list|,
name|HB_UInt
modifier|*
modifier|*
name|feature_tag_list
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|HB_Error
name|HB_GSUB_Add_Feature
parameter_list|(
name|HB_GSUBHeader
modifier|*
name|gsub
parameter_list|,
name|HB_UShort
name|feature_index
parameter_list|,
name|HB_UInt
name|property
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|HB_Error
name|HB_GSUB_Clear_Features
parameter_list|(
name|HB_GSUBHeader
modifier|*
name|gsub
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|HB_Error
name|HB_GSUB_Register_Alternate_Function
parameter_list|(
name|HB_GSUBHeader
modifier|*
name|gsub
parameter_list|,
name|HB_AltFunction
name|altfunc
parameter_list|,
name|void
modifier|*
name|data
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|HB_Error
name|HB_GSUB_Apply_String
parameter_list|(
name|HB_GSUBHeader
modifier|*
name|gsub
parameter_list|,
name|HB_Buffer
name|buffer
parameter_list|)
function_decl|;
end_function_decl
begin_macro
name|HB_END_HEADER
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/* HARFBUZZ_GSUB_H */
end_comment
end_unit
