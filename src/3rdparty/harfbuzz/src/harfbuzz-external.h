begin_unit
begin_comment
comment|/*  * Copyright (C) 2008 Nokia Corporation and/or its subsidiary(-ies)  *  * This is part of HarfBuzz, an OpenType Layout engine library.  *  * Permission is hereby granted, without written agreement and without  * license or royalty fees, to use, copy, modify, and distribute this  * software and its documentation for any purpose, provided that the  * above copyright notice and the following two paragraphs appear in  * all copies of this software.  *  * IN NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE TO ANY PARTY FOR  * DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES  * ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN  * IF THE COPYRIGHT HOLDER HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH  * DAMAGE.  *  * THE COPYRIGHT HOLDER SPECIFICALLY DISCLAIMS ANY WARRANTIES, INCLUDING,  * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND  * FITNESS FOR A PARTICULAR PURPOSE.  THE SOFTWARE PROVIDED HEREUNDER IS  * ON AN "AS IS" BASIS, AND THE COPYRIGHT HOLDER HAS NO OBLIGATION TO  * PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.  */
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|HARFBUZZ_EXTERNAL_H
end_ifndef
begin_define
DECL|macro|HARFBUZZ_EXTERNAL_H
define|#
directive|define
name|HARFBUZZ_EXTERNAL_H
end_define
begin_include
include|#
directive|include
file|"harfbuzz-global.h"
end_include
begin_macro
name|HB_BEGIN_HEADER
end_macro
begin_comment
comment|/* This header contains some methods that are not part of    Harfbuzz itself, but referenced by it.    They need to be provided by the application/library */
end_comment
begin_comment
comment|/*  see http://www.unicode.org/reports/tr14/tr14-19.html  we don't use the XX, AI and CB properties and map them to AL instead.  as we don't support any EBDIC based OS'es, NL is ignored and mapped to AL as well. */
end_comment
begin_typedef
typedef|typedef
enum|enum
block|{
DECL|enumerator|HB_LineBreak_OP
DECL|enumerator|HB_LineBreak_CL
DECL|enumerator|HB_LineBreak_QU
DECL|enumerator|HB_LineBreak_GL
DECL|enumerator|HB_LineBreak_NS
name|HB_LineBreak_OP
block|,
name|HB_LineBreak_CL
block|,
name|HB_LineBreak_QU
block|,
name|HB_LineBreak_GL
block|,
name|HB_LineBreak_NS
block|,
DECL|enumerator|HB_LineBreak_EX
DECL|enumerator|HB_LineBreak_SY
DECL|enumerator|HB_LineBreak_IS
DECL|enumerator|HB_LineBreak_PR
DECL|enumerator|HB_LineBreak_PO
name|HB_LineBreak_EX
block|,
name|HB_LineBreak_SY
block|,
name|HB_LineBreak_IS
block|,
name|HB_LineBreak_PR
block|,
name|HB_LineBreak_PO
block|,
DECL|enumerator|HB_LineBreak_NU
DECL|enumerator|HB_LineBreak_AL
DECL|enumerator|HB_LineBreak_ID
DECL|enumerator|HB_LineBreak_IN
DECL|enumerator|HB_LineBreak_HY
name|HB_LineBreak_NU
block|,
name|HB_LineBreak_AL
block|,
name|HB_LineBreak_ID
block|,
name|HB_LineBreak_IN
block|,
name|HB_LineBreak_HY
block|,
DECL|enumerator|HB_LineBreak_BA
DECL|enumerator|HB_LineBreak_BB
DECL|enumerator|HB_LineBreak_B2
DECL|enumerator|HB_LineBreak_ZW
DECL|enumerator|HB_LineBreak_CM
name|HB_LineBreak_BA
block|,
name|HB_LineBreak_BB
block|,
name|HB_LineBreak_B2
block|,
name|HB_LineBreak_ZW
block|,
name|HB_LineBreak_CM
block|,
DECL|enumerator|HB_LineBreak_WJ
DECL|enumerator|HB_LineBreak_H2
DECL|enumerator|HB_LineBreak_H3
DECL|enumerator|HB_LineBreak_JL
DECL|enumerator|HB_LineBreak_JV
name|HB_LineBreak_WJ
block|,
name|HB_LineBreak_H2
block|,
name|HB_LineBreak_H3
block|,
name|HB_LineBreak_JL
block|,
name|HB_LineBreak_JV
block|,
DECL|enumerator|HB_LineBreak_JT
DECL|enumerator|HB_LineBreak_SA
DECL|enumerator|HB_LineBreak_SG
name|HB_LineBreak_JT
block|,
name|HB_LineBreak_SA
block|,
name|HB_LineBreak_SG
block|,
DECL|enumerator|HB_LineBreak_SP
DECL|enumerator|HB_LineBreak_CR
DECL|enumerator|HB_LineBreak_LF
DECL|enumerator|HB_LineBreak_BK
name|HB_LineBreak_SP
block|,
name|HB_LineBreak_CR
block|,
name|HB_LineBreak_LF
block|,
name|HB_LineBreak_BK
block|}
DECL|typedef|HB_LineBreakClass
name|HB_LineBreakClass
typedef|;
end_typedef
begin_typedef
typedef|typedef
enum|enum
block|{
DECL|enumerator|HB_Mark_NonSpacing
name|HB_Mark_NonSpacing
block|,
comment|/*   Mn */
DECL|enumerator|HB_Mark_SpacingCombining
name|HB_Mark_SpacingCombining
block|,
comment|/*   Mc */
DECL|enumerator|HB_Mark_Enclosing
name|HB_Mark_Enclosing
block|,
comment|/*   Me */
DECL|enumerator|HB_Number_DecimalDigit
name|HB_Number_DecimalDigit
block|,
comment|/*   Nd */
DECL|enumerator|HB_Number_Letter
name|HB_Number_Letter
block|,
comment|/*   Nl */
DECL|enumerator|HB_Number_Other
name|HB_Number_Other
block|,
comment|/*   No */
DECL|enumerator|HB_Separator_Space
name|HB_Separator_Space
block|,
comment|/*   Zs */
DECL|enumerator|HB_Separator_Line
name|HB_Separator_Line
block|,
comment|/*   Zl */
DECL|enumerator|HB_Separator_Paragraph
name|HB_Separator_Paragraph
block|,
comment|/*   Zp */
DECL|enumerator|HB_Other_Control
name|HB_Other_Control
block|,
comment|/*   Cc */
DECL|enumerator|HB_Other_Format
name|HB_Other_Format
block|,
comment|/*   Cf */
DECL|enumerator|HB_Other_Surrogate
name|HB_Other_Surrogate
block|,
comment|/*   Cs */
DECL|enumerator|HB_Other_PrivateUse
name|HB_Other_PrivateUse
block|,
comment|/*   Co */
DECL|enumerator|HB_Other_NotAssigned
name|HB_Other_NotAssigned
block|,
comment|/*   Cn */
DECL|enumerator|HB_Letter_Uppercase
name|HB_Letter_Uppercase
block|,
comment|/*   Lu */
DECL|enumerator|HB_Letter_Lowercase
name|HB_Letter_Lowercase
block|,
comment|/*   Ll */
DECL|enumerator|HB_Letter_Titlecase
name|HB_Letter_Titlecase
block|,
comment|/*   Lt */
DECL|enumerator|HB_Letter_Modifier
name|HB_Letter_Modifier
block|,
comment|/*   Lm */
DECL|enumerator|HB_Letter_Other
name|HB_Letter_Other
block|,
comment|/*   Lo */
DECL|enumerator|HB_Punctuation_Connector
name|HB_Punctuation_Connector
block|,
comment|/*   Pc */
DECL|enumerator|HB_Punctuation_Dash
name|HB_Punctuation_Dash
block|,
comment|/*   Pd */
DECL|enumerator|HB_Punctuation_Open
name|HB_Punctuation_Open
block|,
comment|/*   Ps */
DECL|enumerator|HB_Punctuation_Close
name|HB_Punctuation_Close
block|,
comment|/*   Pe */
DECL|enumerator|HB_Punctuation_InitialQuote
name|HB_Punctuation_InitialQuote
block|,
comment|/*   Pi */
DECL|enumerator|HB_Punctuation_FinalQuote
name|HB_Punctuation_FinalQuote
block|,
comment|/*   Pf */
DECL|enumerator|HB_Punctuation_Other
name|HB_Punctuation_Other
block|,
comment|/*   Po */
DECL|enumerator|HB_Symbol_Math
name|HB_Symbol_Math
block|,
comment|/*   Sm */
DECL|enumerator|HB_Symbol_Currency
name|HB_Symbol_Currency
block|,
comment|/*   Sc */
DECL|enumerator|HB_Symbol_Modifier
name|HB_Symbol_Modifier
block|,
comment|/*   Sk */
DECL|enumerator|HB_Symbol_Other
name|HB_Symbol_Other
comment|/*   So */
block|}
DECL|typedef|HB_CharCategory
name|HB_CharCategory
typedef|;
end_typedef
begin_typedef
typedef|typedef
enum|enum
block|{
DECL|enumerator|HB_Grapheme_Other
name|HB_Grapheme_Other
block|,
DECL|enumerator|HB_Grapheme_CR
name|HB_Grapheme_CR
block|,
DECL|enumerator|HB_Grapheme_LF
name|HB_Grapheme_LF
block|,
DECL|enumerator|HB_Grapheme_Control
name|HB_Grapheme_Control
block|,
DECL|enumerator|HB_Grapheme_Extend
name|HB_Grapheme_Extend
block|,
DECL|enumerator|HB_Grapheme_L
name|HB_Grapheme_L
block|,
DECL|enumerator|HB_Grapheme_V
name|HB_Grapheme_V
block|,
DECL|enumerator|HB_Grapheme_T
name|HB_Grapheme_T
block|,
DECL|enumerator|HB_Grapheme_LV
name|HB_Grapheme_LV
block|,
DECL|enumerator|HB_Grapheme_LVT
name|HB_Grapheme_LVT
block|}
DECL|typedef|HB_GraphemeClass
name|HB_GraphemeClass
typedef|;
end_typedef
begin_typedef
typedef|typedef
enum|enum
block|{
DECL|enumerator|HB_Word_Other
name|HB_Word_Other
block|,
DECL|enumerator|HB_Word_Format
name|HB_Word_Format
block|,
DECL|enumerator|HB_Word_Katakana
name|HB_Word_Katakana
block|,
DECL|enumerator|HB_Word_ALetter
name|HB_Word_ALetter
block|,
DECL|enumerator|HB_Word_MidLetter
name|HB_Word_MidLetter
block|,
DECL|enumerator|HB_Word_MidNum
name|HB_Word_MidNum
block|,
DECL|enumerator|HB_Word_Numeric
name|HB_Word_Numeric
block|,
DECL|enumerator|HB_Word_ExtendNumLet
name|HB_Word_ExtendNumLet
block|}
DECL|typedef|HB_WordClass
name|HB_WordClass
typedef|;
end_typedef
begin_typedef
typedef|typedef
enum|enum
block|{
DECL|enumerator|HB_Sentence_Other
name|HB_Sentence_Other
block|,
DECL|enumerator|HB_Sentence_Sep
name|HB_Sentence_Sep
block|,
DECL|enumerator|HB_Sentence_Format
name|HB_Sentence_Format
block|,
DECL|enumerator|HB_Sentence_Sp
name|HB_Sentence_Sp
block|,
DECL|enumerator|HB_Sentence_Lower
name|HB_Sentence_Lower
block|,
DECL|enumerator|HB_Sentence_Upper
name|HB_Sentence_Upper
block|,
DECL|enumerator|HB_Sentence_OLetter
name|HB_Sentence_OLetter
block|,
DECL|enumerator|HB_Sentence_Numeric
name|HB_Sentence_Numeric
block|,
DECL|enumerator|HB_Sentence_ATerm
name|HB_Sentence_ATerm
block|,
DECL|enumerator|HB_Sentence_STerm
name|HB_Sentence_STerm
block|,
DECL|enumerator|HB_Sentence_Close
name|HB_Sentence_Close
block|}
DECL|typedef|HB_SentenceClass
name|HB_SentenceClass
typedef|;
end_typedef
begin_function_decl
name|HB_GraphemeClass
name|HB_GetGraphemeClass
parameter_list|(
name|HB_UChar32
name|ch
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|HB_WordClass
name|HB_GetWordClass
parameter_list|(
name|HB_UChar32
name|ch
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|HB_SentenceClass
name|HB_GetSentenceClass
parameter_list|(
name|HB_UChar32
name|ch
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|HB_LineBreakClass
name|HB_GetLineBreakClass
parameter_list|(
name|HB_UChar32
name|ch
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|void
name|HB_GetGraphemeAndLineBreakClass
parameter_list|(
name|HB_UChar32
name|ch
parameter_list|,
name|HB_GraphemeClass
modifier|*
name|grapheme
parameter_list|,
name|HB_LineBreakClass
modifier|*
name|lineBreak
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|void
name|HB_GetUnicodeCharProperties
parameter_list|(
name|HB_UChar32
name|ch
parameter_list|,
name|HB_CharCategory
modifier|*
name|category
parameter_list|,
name|int
modifier|*
name|combiningClass
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|HB_CharCategory
name|HB_GetUnicodeCharCategory
parameter_list|(
name|HB_UChar32
name|ch
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|int
name|HB_GetUnicodeCharCombiningClass
parameter_list|(
name|HB_UChar32
name|ch
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|HB_UChar16
name|HB_GetMirroredChar
parameter_list|(
name|HB_UChar16
name|ch
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|void
modifier|*
name|HB_Library_Resolve
parameter_list|(
specifier|const
name|char
modifier|*
name|library
parameter_list|,
name|int
name|version
parameter_list|,
specifier|const
name|char
modifier|*
name|symbol
parameter_list|)
function_decl|;
end_function_decl
begin_macro
name|HB_END_HEADER
end_macro
begin_endif
endif|#
directive|endif
end_endif
end_unit
