begin_unit
begin_comment
comment|/*  * Copyright (C) 1998-2004  David Turner and Werner Lemberg  * Copyright (C) 2004,2007  Red Hat, Inc.  *  * This is part of HarfBuzz, an OpenType Layout engine library.  *  * Permission is hereby granted, without written agreement and without  * license or royalty fees, to use, copy, modify, and distribute this  * software and its documentation for any purpose, provided that the  * above copyright notice and the following two paragraphs appear in  * all copies of this software.  *  * IN NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE TO ANY PARTY FOR  * DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES  * ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN  * IF THE COPYRIGHT HOLDER HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH  * DAMAGE.  *  * THE COPYRIGHT HOLDER SPECIFICALLY DISCLAIMS ANY WARRANTIES, INCLUDING,  * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND  * FITNESS FOR A PARTICULAR PURPOSE.  THE SOFTWARE PROVIDED HEREUNDER IS  * ON AN "AS IS" BASIS, AND THE COPYRIGHT HOLDER HAS NO OBLIGATION TO  * PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.  *  * Red Hat Author(s): Owen Taylor, Behdad Esfahbod  */
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|HARFBUZZ_BUFFER_PRIVATE_H
end_ifndef
begin_define
DECL|macro|HARFBUZZ_BUFFER_PRIVATE_H
define|#
directive|define
name|HARFBUZZ_BUFFER_PRIVATE_H
end_define
begin_include
include|#
directive|include
file|"harfbuzz-impl.h"
end_include
begin_include
include|#
directive|include
file|"harfbuzz-buffer.h"
end_include
begin_function_decl
name|HB_BEGIN_HEADER
DECL|macro|HB_GLYPH_PROPERTIES_UNKNOWN
define|#
directive|define
name|HB_GLYPH_PROPERTIES_UNKNOWN
value|0xFFFF
name|HB_INTERNAL
name|void
name|_hb_buffer_swap
parameter_list|(
name|HB_Buffer
name|buffer
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|HB_INTERNAL
name|void
name|_hb_buffer_clear_output
parameter_list|(
name|HB_Buffer
name|buffer
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|HB_INTERNAL
name|HB_Error
name|_hb_buffer_clear_positions
parameter_list|(
name|HB_Buffer
name|buffer
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|HB_INTERNAL
name|HB_Error
name|_hb_buffer_add_output_glyphs
parameter_list|(
name|HB_Buffer
name|buffer
parameter_list|,
name|HB_UShort
name|num_in
parameter_list|,
name|HB_UShort
name|num_out
parameter_list|,
name|HB_UShort
modifier|*
name|glyph_data
parameter_list|,
name|HB_UShort
name|component
parameter_list|,
name|HB_UShort
name|ligID
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|HB_INTERNAL
name|HB_Error
name|_hb_buffer_add_output_glyph
parameter_list|(
name|HB_Buffer
name|buffer
parameter_list|,
name|HB_UInt
name|glyph_index
parameter_list|,
name|HB_UShort
name|component
parameter_list|,
name|HB_UShort
name|ligID
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|HB_INTERNAL
name|HB_Error
name|_hb_buffer_copy_output_glyph
parameter_list|(
name|HB_Buffer
name|buffer
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|HB_INTERNAL
name|HB_Error
name|_hb_buffer_replace_output_glyph
parameter_list|(
name|HB_Buffer
name|buffer
parameter_list|,
name|HB_UInt
name|glyph_index
parameter_list|,
name|HB_Bool
name|inplace
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|HB_INTERNAL
name|HB_UShort
name|_hb_buffer_allocate_ligid
parameter_list|(
name|HB_Buffer
name|buffer
parameter_list|)
function_decl|;
end_function_decl
begin_comment
comment|/* convenience macros */
end_comment
begin_define
DECL|macro|IN_GLYPH
define|#
directive|define
name|IN_GLYPH
parameter_list|(
name|pos
parameter_list|)
value|(buffer->in_string[(pos)].gindex)
end_define
begin_define
DECL|macro|IN_ITEM
define|#
directive|define
name|IN_ITEM
parameter_list|(
name|pos
parameter_list|)
value|(&buffer->in_string[(pos)])
end_define
begin_define
DECL|macro|IN_CURGLYPH
define|#
directive|define
name|IN_CURGLYPH
parameter_list|()
value|(buffer->in_string[buffer->in_pos].gindex)
end_define
begin_define
DECL|macro|IN_CURITEM
define|#
directive|define
name|IN_CURITEM
parameter_list|()
value|(&buffer->in_string[buffer->in_pos])
end_define
begin_define
DECL|macro|IN_PROPERTIES
define|#
directive|define
name|IN_PROPERTIES
parameter_list|(
name|pos
parameter_list|)
value|(buffer->in_string[(pos)].properties)
end_define
begin_define
DECL|macro|IN_LIGID
define|#
directive|define
name|IN_LIGID
parameter_list|(
name|pos
parameter_list|)
value|(buffer->in_string[(pos)].ligID)
end_define
begin_define
DECL|macro|IN_COMPONENT
define|#
directive|define
name|IN_COMPONENT
parameter_list|(
name|pos
parameter_list|)
value|(buffer->in_string[(pos)].component)
end_define
begin_define
DECL|macro|POSITION
define|#
directive|define
name|POSITION
parameter_list|(
name|pos
parameter_list|)
value|(&buffer->positions[(pos)])
end_define
begin_define
DECL|macro|OUT_GLYPH
define|#
directive|define
name|OUT_GLYPH
parameter_list|(
name|pos
parameter_list|)
value|(buffer->out_string[(pos)].gindex)
end_define
begin_define
DECL|macro|OUT_ITEM
define|#
directive|define
name|OUT_ITEM
parameter_list|(
name|pos
parameter_list|)
value|(&buffer->out_string[(pos)])
end_define
begin_define
DECL|macro|CHECK_Property
define|#
directive|define
name|CHECK_Property
parameter_list|(
name|gdef
parameter_list|,
name|index
parameter_list|,
name|flags
parameter_list|,
name|property
parameter_list|)
define|\
value|( ( error = _HB_GDEF_Check_Property( (gdef), (index), (flags),		\                                       (property) ) ) != HB_Err_Ok )
end_define
begin_define
DECL|macro|ADD_String
define|#
directive|define
name|ADD_String
parameter_list|(
name|buffer
parameter_list|,
name|num_in
parameter_list|,
name|num_out
parameter_list|,
name|glyph_data
parameter_list|,
name|component
parameter_list|,
name|ligID
parameter_list|)
define|\
value|( ( error = _hb_buffer_add_output_glyphs( (buffer),                            \ 						    (num_in), (num_out),                \                                                     (glyph_data), (component), (ligID)  \                                                   ) ) != HB_Err_Ok )
end_define
begin_define
DECL|macro|ADD_Glyph
define|#
directive|define
name|ADD_Glyph
parameter_list|(
name|buffer
parameter_list|,
name|glyph_index
parameter_list|,
name|component
parameter_list|,
name|ligID
parameter_list|)
define|\
value|( ( error = _hb_buffer_add_output_glyph( (buffer),                             \                                                     (glyph_index), (component), (ligID) \                                                   ) ) != HB_Err_Ok )
end_define
begin_define
DECL|macro|REPLACE_Glyph
define|#
directive|define
name|REPLACE_Glyph
parameter_list|(
name|buffer
parameter_list|,
name|glyph_index
parameter_list|,
name|nesting_level
parameter_list|)
define|\
value|( ( error = _hb_buffer_replace_output_glyph( (buffer), (glyph_index),		\ 						      (nesting_level) == 1 ) ) != HB_Err_Ok )
end_define
begin_define
DECL|macro|COPY_Glyph
define|#
directive|define
name|COPY_Glyph
parameter_list|(
name|buffer
parameter_list|)
define|\
value|( (error = _hb_buffer_copy_output_glyph ( buffer ) ) != HB_Err_Ok )
end_define
begin_macro
name|HB_END_HEADER
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/* HARFBUZZ_BUFFER_PRIVATE_H */
end_comment
end_unit
