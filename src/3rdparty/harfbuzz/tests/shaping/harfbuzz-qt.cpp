begin_unit
begin_comment
comment|/*  * Copyright (C) 2012 Digia Plc and/or its subsidiary(-ies)  *  * This is part of HarfBuzz, an OpenType Layout engine library.  *  * Permission is hereby granted, without written agreement and without  * license or royalty fees, to use, copy, modify, and distribute this  * software and its documentation for any purpose, provided that the  * above copyright notice and the following two paragraphs appear in  * all copies of this software.  *  * IN NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE TO ANY PARTY FOR  * DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES  * ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN  * IF THE COPYRIGHT HOLDER HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH  * DAMAGE.  *  * THE COPYRIGHT HOLDER SPECIFICALLY DISCLAIMS ANY WARRANTIES, INCLUDING,  * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND  * FITNESS FOR A PARTICULAR PURPOSE.  THE SOFTWARE PROVIDED HEREUNDER IS  * ON AN "AS IS" BASIS, AND THE COPYRIGHT HOLDER HAS NO OBLIGATION TO  * PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.  */
end_comment
begin_include
include|#
directive|include
file|<harfbuzz-external.h>
end_include
begin_include
include|#
directive|include
file|<QChar>
end_include
begin_include
include|#
directive|include
file|<QLibrary>
end_include
begin_extern
extern|extern
literal|"C"
block|{
DECL|function|HB_GetUnicodeCharProperties
name|void
name|HB_GetUnicodeCharProperties
parameter_list|(
name|HB_UChar32
name|ch
parameter_list|,
name|HB_CharCategory
modifier|*
name|category
parameter_list|,
name|int
modifier|*
name|combiningClass
parameter_list|)
block|{
operator|*
name|category
operator|=
operator|(
name|HB_CharCategory
operator|)
name|QChar
operator|::
name|category
argument_list|(
name|ch
argument_list|)
expr_stmt|;
operator|*
name|combiningClass
operator|=
name|QChar
operator|::
name|combiningClass
argument_list|(
name|ch
argument_list|)
expr_stmt|;
block|}
DECL|function|HB_GetUnicodeCharCategory
name|HB_CharCategory
name|HB_GetUnicodeCharCategory
parameter_list|(
name|HB_UChar32
name|ch
parameter_list|)
block|{
return|return
operator|(
name|HB_CharCategory
operator|)
name|QChar
operator|::
name|category
argument_list|(
name|ch
argument_list|)
return|;
block|}
DECL|function|HB_GetUnicodeCharCombiningClass
name|int
name|HB_GetUnicodeCharCombiningClass
parameter_list|(
name|HB_UChar32
name|ch
parameter_list|)
block|{
return|return
name|QChar
operator|::
name|combiningClass
argument_list|(
name|ch
argument_list|)
return|;
block|}
DECL|function|HB_GetMirroredChar
name|HB_UChar16
name|HB_GetMirroredChar
parameter_list|(
name|HB_UChar16
name|ch
parameter_list|)
block|{
return|return
name|QChar
operator|::
name|mirroredChar
argument_list|(
name|ch
argument_list|)
return|;
block|}
DECL|function|HB_Library_Resolve
name|void
argument_list|(
argument|*HB_Library_Resolve(const char *library, int version, const char *symbol)
argument_list|)
operator|(
operator|)
block|{
return|return
name|QLibrary
operator|::
name|resolve
argument_list|(
name|library
argument_list|,
name|version
argument_list|,
name|symbol
argument_list|)
return|;
block|}
block|}
end_extern
end_unit
