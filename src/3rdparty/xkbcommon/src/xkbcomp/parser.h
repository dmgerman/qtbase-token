begin_unit
begin_comment
comment|/* A Bison parser, made by GNU Bison 2.5.  */
end_comment
begin_comment
comment|/* Bison interface for Yacc-like parsers in C           Copyright (C) 1984, 1989-1990, 2000-2011 Free Software Foundation, Inc.        This program is free software: you can redistribute it and/or modify    it under the terms of the GNU General Public License as published by    the Free Software Foundation, either version 3 of the License, or    (at your option) any later version.        This program is distributed in the hope that it will be useful,    but WITHOUT ANY WARRANTY; without even the implied warranty of    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the    GNU General Public License for more details.        You should have received a copy of the GNU General Public License    along with this program.  If not, see<http://www.gnu.org/licenses/>.  */
end_comment
begin_comment
comment|/* As a special exception, you may create a larger work that contains    part or all of the Bison parser skeleton and distribute that work    under terms of your choice, so long as that work isn't itself a    parser generator using the skeleton or a modified version thereof    as a parser skeleton.  Alternatively, if you modify or redistribute    the parser skeleton itself, you may (at your option) remove this    special exception, which will cause the skeleton and the resulting    Bison output files to be licensed under the GNU General Public    License without this special exception.        This special exception was added by the Free Software Foundation in    version 2.2 of Bison.  */
end_comment
begin_comment
comment|/* Tokens.  */
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|YYTOKENTYPE
end_ifndef
begin_define
DECL|macro|YYTOKENTYPE
define|#
directive|define
name|YYTOKENTYPE
end_define
begin_comment
comment|/* Put the tokens into the symbol table, so that GDB and other debuggers       know about them.  */
end_comment
begin_enum
DECL|enum|yytokentype
enum|enum
name|yytokentype
block|{
DECL|enumerator|END_OF_FILE
name|END_OF_FILE
init|=
literal|0
block|,
DECL|enumerator|ERROR_TOK
name|ERROR_TOK
init|=
literal|255
block|,
DECL|enumerator|XKB_KEYMAP
name|XKB_KEYMAP
init|=
literal|1
block|,
DECL|enumerator|XKB_KEYCODES
name|XKB_KEYCODES
init|=
literal|2
block|,
DECL|enumerator|XKB_TYPES
name|XKB_TYPES
init|=
literal|3
block|,
DECL|enumerator|XKB_SYMBOLS
name|XKB_SYMBOLS
init|=
literal|4
block|,
DECL|enumerator|XKB_COMPATMAP
name|XKB_COMPATMAP
init|=
literal|5
block|,
DECL|enumerator|XKB_GEOMETRY
name|XKB_GEOMETRY
init|=
literal|6
block|,
DECL|enumerator|XKB_SEMANTICS
name|XKB_SEMANTICS
init|=
literal|7
block|,
DECL|enumerator|XKB_LAYOUT
name|XKB_LAYOUT
init|=
literal|8
block|,
DECL|enumerator|INCLUDE
name|INCLUDE
init|=
literal|10
block|,
DECL|enumerator|OVERRIDE
name|OVERRIDE
init|=
literal|11
block|,
DECL|enumerator|AUGMENT
name|AUGMENT
init|=
literal|12
block|,
DECL|enumerator|REPLACE
name|REPLACE
init|=
literal|13
block|,
DECL|enumerator|ALTERNATE
name|ALTERNATE
init|=
literal|14
block|,
DECL|enumerator|VIRTUAL_MODS
name|VIRTUAL_MODS
init|=
literal|20
block|,
DECL|enumerator|TYPE
name|TYPE
init|=
literal|21
block|,
DECL|enumerator|INTERPRET
name|INTERPRET
init|=
literal|22
block|,
DECL|enumerator|ACTION_TOK
name|ACTION_TOK
init|=
literal|23
block|,
DECL|enumerator|KEY
name|KEY
init|=
literal|24
block|,
DECL|enumerator|ALIAS
name|ALIAS
init|=
literal|25
block|,
DECL|enumerator|GROUP
name|GROUP
init|=
literal|26
block|,
DECL|enumerator|MODIFIER_MAP
name|MODIFIER_MAP
init|=
literal|27
block|,
DECL|enumerator|INDICATOR
name|INDICATOR
init|=
literal|28
block|,
DECL|enumerator|SHAPE
name|SHAPE
init|=
literal|29
block|,
DECL|enumerator|KEYS
name|KEYS
init|=
literal|30
block|,
DECL|enumerator|ROW
name|ROW
init|=
literal|31
block|,
DECL|enumerator|SECTION
name|SECTION
init|=
literal|32
block|,
DECL|enumerator|OVERLAY
name|OVERLAY
init|=
literal|33
block|,
DECL|enumerator|TEXT
name|TEXT
init|=
literal|34
block|,
DECL|enumerator|OUTLINE
name|OUTLINE
init|=
literal|35
block|,
DECL|enumerator|SOLID
name|SOLID
init|=
literal|36
block|,
DECL|enumerator|LOGO
name|LOGO
init|=
literal|37
block|,
DECL|enumerator|VIRTUAL
name|VIRTUAL
init|=
literal|38
block|,
DECL|enumerator|EQUALS
name|EQUALS
init|=
literal|40
block|,
DECL|enumerator|PLUS
name|PLUS
init|=
literal|41
block|,
DECL|enumerator|MINUS
name|MINUS
init|=
literal|42
block|,
DECL|enumerator|DIVIDE
name|DIVIDE
init|=
literal|43
block|,
DECL|enumerator|TIMES
name|TIMES
init|=
literal|44
block|,
DECL|enumerator|OBRACE
name|OBRACE
init|=
literal|45
block|,
DECL|enumerator|CBRACE
name|CBRACE
init|=
literal|46
block|,
DECL|enumerator|OPAREN
name|OPAREN
init|=
literal|47
block|,
DECL|enumerator|CPAREN
name|CPAREN
init|=
literal|48
block|,
DECL|enumerator|OBRACKET
name|OBRACKET
init|=
literal|49
block|,
DECL|enumerator|CBRACKET
name|CBRACKET
init|=
literal|50
block|,
DECL|enumerator|DOT
name|DOT
init|=
literal|51
block|,
DECL|enumerator|COMMA
name|COMMA
init|=
literal|52
block|,
DECL|enumerator|SEMI
name|SEMI
init|=
literal|53
block|,
DECL|enumerator|EXCLAM
name|EXCLAM
init|=
literal|54
block|,
DECL|enumerator|INVERT
name|INVERT
init|=
literal|55
block|,
DECL|enumerator|STRING
name|STRING
init|=
literal|60
block|,
DECL|enumerator|INTEGER
name|INTEGER
init|=
literal|61
block|,
DECL|enumerator|FLOAT
name|FLOAT
init|=
literal|62
block|,
DECL|enumerator|IDENT
name|IDENT
init|=
literal|63
block|,
DECL|enumerator|KEYNAME
name|KEYNAME
init|=
literal|64
block|,
DECL|enumerator|PARTIAL
name|PARTIAL
init|=
literal|70
block|,
DECL|enumerator|DEFAULT
name|DEFAULT
init|=
literal|71
block|,
DECL|enumerator|HIDDEN
name|HIDDEN
init|=
literal|72
block|,
DECL|enumerator|ALPHANUMERIC_KEYS
name|ALPHANUMERIC_KEYS
init|=
literal|73
block|,
DECL|enumerator|MODIFIER_KEYS
name|MODIFIER_KEYS
init|=
literal|74
block|,
DECL|enumerator|KEYPAD_KEYS
name|KEYPAD_KEYS
init|=
literal|75
block|,
DECL|enumerator|FUNCTION_KEYS
name|FUNCTION_KEYS
init|=
literal|76
block|,
DECL|enumerator|ALTERNATE_GROUP
name|ALTERNATE_GROUP
init|=
literal|77
block|}
enum|;
end_enum
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/* Tokens.  */
end_comment
begin_define
DECL|macro|END_OF_FILE
define|#
directive|define
name|END_OF_FILE
value|0
end_define
begin_define
DECL|macro|ERROR_TOK
define|#
directive|define
name|ERROR_TOK
value|255
end_define
begin_define
DECL|macro|XKB_KEYMAP
define|#
directive|define
name|XKB_KEYMAP
value|1
end_define
begin_define
DECL|macro|XKB_KEYCODES
define|#
directive|define
name|XKB_KEYCODES
value|2
end_define
begin_define
DECL|macro|XKB_TYPES
define|#
directive|define
name|XKB_TYPES
value|3
end_define
begin_define
DECL|macro|XKB_SYMBOLS
define|#
directive|define
name|XKB_SYMBOLS
value|4
end_define
begin_define
DECL|macro|XKB_COMPATMAP
define|#
directive|define
name|XKB_COMPATMAP
value|5
end_define
begin_define
DECL|macro|XKB_GEOMETRY
define|#
directive|define
name|XKB_GEOMETRY
value|6
end_define
begin_define
DECL|macro|XKB_SEMANTICS
define|#
directive|define
name|XKB_SEMANTICS
value|7
end_define
begin_define
DECL|macro|XKB_LAYOUT
define|#
directive|define
name|XKB_LAYOUT
value|8
end_define
begin_define
DECL|macro|INCLUDE
define|#
directive|define
name|INCLUDE
value|10
end_define
begin_define
DECL|macro|OVERRIDE
define|#
directive|define
name|OVERRIDE
value|11
end_define
begin_define
DECL|macro|AUGMENT
define|#
directive|define
name|AUGMENT
value|12
end_define
begin_define
DECL|macro|REPLACE
define|#
directive|define
name|REPLACE
value|13
end_define
begin_define
DECL|macro|ALTERNATE
define|#
directive|define
name|ALTERNATE
value|14
end_define
begin_define
DECL|macro|VIRTUAL_MODS
define|#
directive|define
name|VIRTUAL_MODS
value|20
end_define
begin_define
DECL|macro|TYPE
define|#
directive|define
name|TYPE
value|21
end_define
begin_define
DECL|macro|INTERPRET
define|#
directive|define
name|INTERPRET
value|22
end_define
begin_define
DECL|macro|ACTION_TOK
define|#
directive|define
name|ACTION_TOK
value|23
end_define
begin_define
DECL|macro|KEY
define|#
directive|define
name|KEY
value|24
end_define
begin_define
DECL|macro|ALIAS
define|#
directive|define
name|ALIAS
value|25
end_define
begin_define
DECL|macro|GROUP
define|#
directive|define
name|GROUP
value|26
end_define
begin_define
DECL|macro|MODIFIER_MAP
define|#
directive|define
name|MODIFIER_MAP
value|27
end_define
begin_define
DECL|macro|INDICATOR
define|#
directive|define
name|INDICATOR
value|28
end_define
begin_define
DECL|macro|SHAPE
define|#
directive|define
name|SHAPE
value|29
end_define
begin_define
DECL|macro|KEYS
define|#
directive|define
name|KEYS
value|30
end_define
begin_define
DECL|macro|ROW
define|#
directive|define
name|ROW
value|31
end_define
begin_define
DECL|macro|SECTION
define|#
directive|define
name|SECTION
value|32
end_define
begin_define
DECL|macro|OVERLAY
define|#
directive|define
name|OVERLAY
value|33
end_define
begin_define
DECL|macro|TEXT
define|#
directive|define
name|TEXT
value|34
end_define
begin_define
DECL|macro|OUTLINE
define|#
directive|define
name|OUTLINE
value|35
end_define
begin_define
DECL|macro|SOLID
define|#
directive|define
name|SOLID
value|36
end_define
begin_define
DECL|macro|LOGO
define|#
directive|define
name|LOGO
value|37
end_define
begin_define
DECL|macro|VIRTUAL
define|#
directive|define
name|VIRTUAL
value|38
end_define
begin_define
DECL|macro|EQUALS
define|#
directive|define
name|EQUALS
value|40
end_define
begin_define
DECL|macro|PLUS
define|#
directive|define
name|PLUS
value|41
end_define
begin_define
DECL|macro|MINUS
define|#
directive|define
name|MINUS
value|42
end_define
begin_define
DECL|macro|DIVIDE
define|#
directive|define
name|DIVIDE
value|43
end_define
begin_define
DECL|macro|TIMES
define|#
directive|define
name|TIMES
value|44
end_define
begin_define
DECL|macro|OBRACE
define|#
directive|define
name|OBRACE
value|45
end_define
begin_define
DECL|macro|CBRACE
define|#
directive|define
name|CBRACE
value|46
end_define
begin_define
DECL|macro|OPAREN
define|#
directive|define
name|OPAREN
value|47
end_define
begin_define
DECL|macro|CPAREN
define|#
directive|define
name|CPAREN
value|48
end_define
begin_define
DECL|macro|OBRACKET
define|#
directive|define
name|OBRACKET
value|49
end_define
begin_define
DECL|macro|CBRACKET
define|#
directive|define
name|CBRACKET
value|50
end_define
begin_define
DECL|macro|DOT
define|#
directive|define
name|DOT
value|51
end_define
begin_define
DECL|macro|COMMA
define|#
directive|define
name|COMMA
value|52
end_define
begin_define
DECL|macro|SEMI
define|#
directive|define
name|SEMI
value|53
end_define
begin_define
DECL|macro|EXCLAM
define|#
directive|define
name|EXCLAM
value|54
end_define
begin_define
DECL|macro|INVERT
define|#
directive|define
name|INVERT
value|55
end_define
begin_define
DECL|macro|STRING
define|#
directive|define
name|STRING
value|60
end_define
begin_define
DECL|macro|INTEGER
define|#
directive|define
name|INTEGER
value|61
end_define
begin_define
DECL|macro|FLOAT
define|#
directive|define
name|FLOAT
value|62
end_define
begin_define
DECL|macro|IDENT
define|#
directive|define
name|IDENT
value|63
end_define
begin_define
DECL|macro|KEYNAME
define|#
directive|define
name|KEYNAME
value|64
end_define
begin_define
DECL|macro|PARTIAL
define|#
directive|define
name|PARTIAL
value|70
end_define
begin_define
DECL|macro|DEFAULT
define|#
directive|define
name|DEFAULT
value|71
end_define
begin_define
DECL|macro|HIDDEN
define|#
directive|define
name|HIDDEN
value|72
end_define
begin_define
DECL|macro|ALPHANUMERIC_KEYS
define|#
directive|define
name|ALPHANUMERIC_KEYS
value|73
end_define
begin_define
DECL|macro|MODIFIER_KEYS
define|#
directive|define
name|MODIFIER_KEYS
value|74
end_define
begin_define
DECL|macro|KEYPAD_KEYS
define|#
directive|define
name|KEYPAD_KEYS
value|75
end_define
begin_define
DECL|macro|FUNCTION_KEYS
define|#
directive|define
name|FUNCTION_KEYS
value|76
end_define
begin_define
DECL|macro|ALTERNATE_GROUP
define|#
directive|define
name|ALTERNATE_GROUP
value|77
end_define
begin_if
if|#
directive|if
operator|!
name|defined
name|YYSTYPE
operator|&&
operator|!
name|defined
name|YYSTYPE_IS_DECLARED
end_if
begin_typedef
DECL|union|YYSTYPE
typedef|typedef
union|union
name|YYSTYPE
block|{
comment|/* Line 2068 of yacc.c  */
line|#
directive|line
number|167
file|"parser.y"
DECL|member|ival
name|int
name|ival
decl_stmt|;
DECL|member|num
name|int64_t
name|num
decl_stmt|;
DECL|member|file_type
name|enum
name|xkb_file_type
name|file_type
decl_stmt|;
DECL|member|str
name|char
modifier|*
name|str
decl_stmt|;
DECL|member|sval
name|xkb_atom_t
name|sval
decl_stmt|;
DECL|member|merge
name|enum
name|merge_mode
name|merge
decl_stmt|;
DECL|member|mapFlags
name|enum
name|xkb_map_flags
name|mapFlags
decl_stmt|;
DECL|member|keysym
name|xkb_keysym_t
name|keysym
decl_stmt|;
DECL|member|any
name|ParseCommon
modifier|*
name|any
decl_stmt|;
DECL|member|expr
name|ExprDef
modifier|*
name|expr
decl_stmt|;
DECL|member|var
name|VarDef
modifier|*
name|var
decl_stmt|;
DECL|member|vmod
name|VModDef
modifier|*
name|vmod
decl_stmt|;
DECL|member|interp
name|InterpDef
modifier|*
name|interp
decl_stmt|;
DECL|member|keyType
name|KeyTypeDef
modifier|*
name|keyType
decl_stmt|;
DECL|member|syms
name|SymbolsDef
modifier|*
name|syms
decl_stmt|;
DECL|member|modMask
name|ModMapDef
modifier|*
name|modMask
decl_stmt|;
DECL|member|groupCompat
name|GroupCompatDef
modifier|*
name|groupCompat
decl_stmt|;
DECL|member|ledMap
name|LedMapDef
modifier|*
name|ledMap
decl_stmt|;
DECL|member|ledName
name|LedNameDef
modifier|*
name|ledName
decl_stmt|;
DECL|member|keyCode
name|KeycodeDef
modifier|*
name|keyCode
decl_stmt|;
DECL|member|keyAlias
name|KeyAliasDef
modifier|*
name|keyAlias
decl_stmt|;
DECL|member|geom
name|void
modifier|*
name|geom
decl_stmt|;
DECL|member|file
name|XkbFile
modifier|*
name|file
decl_stmt|;
comment|/* Line 2068 of yacc.c  */
line|#
directive|line
number|208
file|"src/xkbcomp/parser.h"
block|}
DECL|typedef|YYSTYPE
name|YYSTYPE
typedef|;
end_typedef
begin_define
DECL|macro|YYSTYPE_IS_TRIVIAL
define|#
directive|define
name|YYSTYPE_IS_TRIVIAL
value|1
end_define
begin_define
DECL|macro|yystype
define|#
directive|define
name|yystype
value|YYSTYPE
end_define
begin_comment
DECL|macro|yystype
comment|/* obsolescent; will be withdrawn */
end_comment
begin_define
DECL|macro|YYSTYPE_IS_DECLARED
define|#
directive|define
name|YYSTYPE_IS_DECLARED
value|1
end_define
begin_endif
endif|#
directive|endif
end_endif
end_unit
