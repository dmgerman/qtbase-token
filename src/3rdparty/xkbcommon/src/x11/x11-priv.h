begin_unit
begin_comment
comment|/*  * Copyright Â© 2013 Ran Benita  *  * Permission is hereby granted, free of charge, to any person obtaining a  * copy of this software and associated documentation files (the "Software"),  * to deal in the Software without restriction, including without limitation  * the rights to use, copy, modify, merge, publish, distribute, sublicense,  * and/or sell copies of the Software, and to permit persons to whom the  * Software is furnished to do so, subject to the following conditions:  *  * The above copyright notice and this permission notice (including the next  * paragraph) shall be included in all copies or substantial portions of the  * Software.  *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL  * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER  * DEALINGS IN THE SOFTWARE.  */
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|_XKBCOMMON_X11_PRIV_H
end_ifndef
begin_define
DECL|macro|_XKBCOMMON_X11_PRIV_H
define|#
directive|define
name|_XKBCOMMON_X11_PRIV_H
end_define
begin_include
include|#
directive|include
file|<xcb/xkb.h>
end_include
begin_include
include|#
directive|include
file|"keymap.h"
end_include
begin_include
include|#
directive|include
file|"xkbcommon/xkbcommon-x11.h"
end_include
begin_comment
comment|/* Get a strdup'd name of an X atom. */
end_comment
begin_function_decl
name|bool
name|get_atom_name
parameter_list|(
name|xcb_connection_t
modifier|*
name|conn
parameter_list|,
name|xcb_atom_t
name|atom
parameter_list|,
name|char
modifier|*
modifier|*
name|out
parameter_list|)
function_decl|;
end_function_decl
begin_comment
comment|/*  * Make a xkb_atom_t's from X atoms (prefer to send as many as possible  * at once, to avoid many roundtrips).  *  * TODO: We can make this more flexible, such that @to doesn't have to  *       be sequential. Then we can convert most adopt_atom() calls to  *       adopt_atoms().  *       Atom caching would also likely be useful for avoiding quite a  *       few requests.  */
end_comment
begin_function_decl
name|bool
name|adopt_atoms
parameter_list|(
name|struct
name|xkb_context
modifier|*
name|ctx
parameter_list|,
name|xcb_connection_t
modifier|*
name|conn
parameter_list|,
specifier|const
name|xcb_atom_t
modifier|*
name|from
parameter_list|,
name|xkb_atom_t
modifier|*
name|to
parameter_list|,
name|size_t
name|count
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|bool
name|adopt_atom
parameter_list|(
name|struct
name|xkb_context
modifier|*
name|ctx
parameter_list|,
name|xcb_connection_t
modifier|*
name|conn
parameter_list|,
name|xcb_atom_t
name|atom
parameter_list|,
name|xkb_atom_t
modifier|*
name|out
parameter_list|)
function_decl|;
end_function_decl
begin_endif
endif|#
directive|endif
end_endif
end_unit
