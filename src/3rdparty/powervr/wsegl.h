begin_unit
begin_comment
comment|/******************************************************************************  Name         : wsegl.h  Copyright    :	Copyright (c) Imagination Technologies Limited. 				This specification is protected by copyright laws and contains 				material proprietary to Imagination Technologies Limited. 				You may use and distribute this specification free of charge for implementing 				the functionality therein, without altering or removing any trademark, copyright, 				or other notice from the specification.  Platform     : ANSI *****************************************************************************/
end_comment
begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|__WSEGL_H__
argument_list|)
end_if
begin_define
DECL|macro|__WSEGL_H__
define|#
directive|define
name|__WSEGL_H__
end_define
begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef
begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
comment|/* // WSEGL Platform-specific definitions */
DECL|macro|WSEGL_EXPORT
define|#
directive|define
name|WSEGL_EXPORT
DECL|macro|WSEGL_IMPORT
define|#
directive|define
name|WSEGL_IMPORT
comment|/* // WSEGL API Version Number */
DECL|macro|WSEGL_VERSION
define|#
directive|define
name|WSEGL_VERSION
value|1
DECL|macro|WSEGL_DEFAULT_DISPLAY
define|#
directive|define
name|WSEGL_DEFAULT_DISPLAY
value|0
DECL|macro|WSEGL_DEFAULT_NATIVE_ENGINE
define|#
directive|define
name|WSEGL_DEFAULT_NATIVE_ENGINE
value|0
DECL|macro|WSEGL_FALSE
define|#
directive|define
name|WSEGL_FALSE
value|0
DECL|macro|WSEGL_TRUE
define|#
directive|define
name|WSEGL_TRUE
value|1
DECL|macro|WSEGL_NULL
define|#
directive|define
name|WSEGL_NULL
value|0
DECL|macro|WSEGL_UNREFERENCED_PARAMETER
define|#
directive|define
name|WSEGL_UNREFERENCED_PARAMETER
parameter_list|(
name|param
parameter_list|)
value|(param) = (param)
comment|/* // WSEGL handles */
DECL|typedef|WSEGLDisplayHandle
typedef|typedef
name|void
modifier|*
name|WSEGLDisplayHandle
typedef|;
DECL|typedef|WSEGLDrawableHandle
typedef|typedef
name|void
modifier|*
name|WSEGLDrawableHandle
typedef|;
comment|/* // Display capability type */
DECL|enum|WSEGLCapsType_TAG
typedef|typedef
enum|enum
name|WSEGLCapsType_TAG
block|{
DECL|enumerator|WSEGL_NO_CAPS
name|WSEGL_NO_CAPS
init|=
literal|0
block|,
DECL|enumerator|WSEGL_CAP_MIN_SWAP_INTERVAL
name|WSEGL_CAP_MIN_SWAP_INTERVAL
init|=
literal|1
block|,
comment|/* System default value = 1 */
DECL|enumerator|WSEGL_CAP_MAX_SWAP_INTERVAL
name|WSEGL_CAP_MAX_SWAP_INTERVAL
init|=
literal|2
block|,
comment|/* System default value = 1 */
DECL|enumerator|WSEGL_CAP_WINDOWS_USE_HW_SYNC
name|WSEGL_CAP_WINDOWS_USE_HW_SYNC
init|=
literal|3
block|,
comment|/* System default value = 0 (FALSE) */
DECL|enumerator|WSEGL_CAP_PIXMAPS_USE_HW_SYNC
name|WSEGL_CAP_PIXMAPS_USE_HW_SYNC
init|=
literal|4
block|,
comment|/* System default value = 0 (FALSE) */
block|}
DECL|typedef|WSEGLCapsType
name|WSEGLCapsType
typedef|;
comment|/* // Display capability */
DECL|struct|WSEGLCaps_TAG
typedef|typedef
struct|struct
name|WSEGLCaps_TAG
block|{
DECL|member|eCapsType
name|WSEGLCapsType
name|eCapsType
decl_stmt|;
DECL|member|ui32CapsValue
name|unsigned
name|long
name|ui32CapsValue
decl_stmt|;
block|}
DECL|typedef|WSEGLCaps
name|WSEGLCaps
typedef|;
comment|/* // Drawable type */
DECL|macro|WSEGL_NO_DRAWABLE
define|#
directive|define
name|WSEGL_NO_DRAWABLE
value|0x0
DECL|macro|WSEGL_DRAWABLE_WINDOW
define|#
directive|define
name|WSEGL_DRAWABLE_WINDOW
value|0x1
DECL|macro|WSEGL_DRAWABLE_PIXMAP
define|#
directive|define
name|WSEGL_DRAWABLE_PIXMAP
value|0x2
comment|/* // Pixel format of display/drawable */
DECL|enum|WSEGLPixelFormat_TAG
typedef|typedef
enum|enum
name|WSEGLPixelFormat_TAG
block|{
DECL|enumerator|WSEGL_PIXELFORMAT_565
name|WSEGL_PIXELFORMAT_565
init|=
literal|0
block|,
DECL|enumerator|WSEGL_PIXELFORMAT_4444
name|WSEGL_PIXELFORMAT_4444
init|=
literal|1
block|,
DECL|enumerator|WSEGL_PIXELFORMAT_8888
name|WSEGL_PIXELFORMAT_8888
init|=
literal|2
block|,
DECL|enumerator|WSEGL_PIXELFORMAT_1555
name|WSEGL_PIXELFORMAT_1555
init|=
literal|3
block|}
DECL|typedef|WSEGLPixelFormat
name|WSEGLPixelFormat
typedef|;
comment|/* // Transparent of display/drawable */
DECL|enum|WSEGLTransparentType_TAG
typedef|typedef
enum|enum
name|WSEGLTransparentType_TAG
block|{
DECL|enumerator|WSEGL_OPAQUE
name|WSEGL_OPAQUE
init|=
literal|0
block|,
DECL|enumerator|WSEGL_COLOR_KEY
name|WSEGL_COLOR_KEY
init|=
literal|1
block|,  }
DECL|typedef|WSEGLTransparentType
name|WSEGLTransparentType
typedef|;
comment|/* // Display/drawable configuration */
DECL|struct|WSEGLConfig_TAG
typedef|typedef
struct|struct
name|WSEGLConfig_TAG
block|{
comment|/* 	// Type of drawables this configuration applies to - 	// OR'd values of drawable types.  	*/
DECL|member|ui32DrawableType
name|unsigned
name|long
name|ui32DrawableType
decl_stmt|;
comment|/* Pixel format */
DECL|member|ePixelFormat
name|WSEGLPixelFormat
name|ePixelFormat
decl_stmt|;
comment|/* Native Renderable  - set to WSEGL_TRUE if native renderable */
DECL|member|ulNativeRenderable
name|unsigned
name|long
name|ulNativeRenderable
decl_stmt|;
comment|/* FrameBuffer Level Parameter */
DECL|member|ulFrameBufferLevel
name|unsigned
name|long
name|ulFrameBufferLevel
decl_stmt|;
comment|/* Native Visual ID */
DECL|member|ulNativeVisualID
name|unsigned
name|long
name|ulNativeVisualID
decl_stmt|;
comment|/* Native Visual */
DECL|member|hNativeVisual
name|void
modifier|*
name|hNativeVisual
decl_stmt|;
comment|/* Transparent Type */
DECL|member|eTransparentType
name|WSEGLTransparentType
name|eTransparentType
decl_stmt|;
comment|/* Transparent Color - only used if transparent type is COLOR_KEY */
DECL|member|ulTransparentColor
name|unsigned
name|long
name|ulTransparentColor
decl_stmt|;
comment|/* packed as 0x00RRGGBB */
block|}
DECL|typedef|WSEGLConfig
name|WSEGLConfig
typedef|;
comment|/* // WSEGL errors */
DECL|enum|WSEGLError_TAG
typedef|typedef
enum|enum
name|WSEGLError_TAG
block|{
DECL|enumerator|WSEGL_SUCCESS
name|WSEGL_SUCCESS
init|=
literal|0
block|,
DECL|enumerator|WSEGL_CANNOT_INITIALISE
name|WSEGL_CANNOT_INITIALISE
init|=
literal|1
block|,
DECL|enumerator|WSEGL_BAD_NATIVE_DISPLAY
name|WSEGL_BAD_NATIVE_DISPLAY
init|=
literal|2
block|,
DECL|enumerator|WSEGL_BAD_NATIVE_WINDOW
name|WSEGL_BAD_NATIVE_WINDOW
init|=
literal|3
block|,
DECL|enumerator|WSEGL_BAD_NATIVE_PIXMAP
name|WSEGL_BAD_NATIVE_PIXMAP
init|=
literal|4
block|,
DECL|enumerator|WSEGL_BAD_NATIVE_ENGINE
name|WSEGL_BAD_NATIVE_ENGINE
init|=
literal|5
block|,
DECL|enumerator|WSEGL_BAD_DRAWABLE
name|WSEGL_BAD_DRAWABLE
init|=
literal|6
block|,
DECL|enumerator|WSEGL_BAD_CONFIG
name|WSEGL_BAD_CONFIG
init|=
literal|7
block|,
DECL|enumerator|WSEGL_OUT_OF_MEMORY
name|WSEGL_OUT_OF_MEMORY
init|=
literal|8
block|}
DECL|typedef|WSEGLError
name|WSEGLError
typedef|;
comment|/* // Drawable orientation (in degrees anti-clockwise) */
DECL|enum|WSEGLRotationAngle_TAG
typedef|typedef
enum|enum
name|WSEGLRotationAngle_TAG
block|{
DECL|enumerator|WSEGL_ROTATE_0
name|WSEGL_ROTATE_0
init|=
literal|0
block|,
DECL|enumerator|WSEGL_ROTATE_90
name|WSEGL_ROTATE_90
init|=
literal|1
block|,
DECL|enumerator|WSEGL_ROTATE_180
name|WSEGL_ROTATE_180
init|=
literal|2
block|,
DECL|enumerator|WSEGL_ROTATE_270
name|WSEGL_ROTATE_270
init|=
literal|3
block|}
DECL|typedef|WSEGLRotationAngle
name|WSEGLRotationAngle
typedef|;
comment|/* // Drawable information required by OpenGL-ES driver */
DECL|struct|WSEGLDrawableParams_TAG
typedef|typedef
struct|struct
name|WSEGLDrawableParams_TAG
block|{
comment|/* Width in pixels of the drawable */
DECL|member|ui32Width
name|unsigned
name|long
name|ui32Width
decl_stmt|;
comment|/* Height in pixels of the drawable */
DECL|member|ui32Height
name|unsigned
name|long
name|ui32Height
decl_stmt|;
comment|/* Stride in pixels of the drawable */
DECL|member|ui32Stride
name|unsigned
name|long
name|ui32Stride
decl_stmt|;
comment|/* Pixel format of the drawable */
DECL|member|ePixelFormat
name|WSEGLPixelFormat
name|ePixelFormat
decl_stmt|;
comment|/* User space cpu virtual address of the drawable */
DECL|member|pvLinearAddress
name|void
modifier|*
name|pvLinearAddress
decl_stmt|;
comment|/* HW address of the drawable */
DECL|member|ui32HWAddress
name|unsigned
name|long
name|ui32HWAddress
decl_stmt|;
comment|/* Private data for the drawable */
DECL|member|hPrivateData
name|void
modifier|*
name|hPrivateData
decl_stmt|;
block|}
DECL|typedef|WSEGLDrawableParams
name|WSEGLDrawableParams
typedef|;
comment|/* // Table of function pointers that is returned by WSEGL_GetFunctionTablePointer() // // The first entry in the table is the version number of the wsegl.h header file that // the module has been written against, and should therefore be set to WSEGL_VERSION */
DECL|struct|WSEGL_FunctionTable_TAG
typedef|typedef
struct|struct
name|WSEGL_FunctionTable_TAG
block|{
DECL|member|ui32WSEGLVersion
name|unsigned
name|long
name|ui32WSEGLVersion
decl_stmt|;
DECL|member|pfnWSEGL_IsDisplayValid
name|WSEGLError
function_decl|(
modifier|*
name|pfnWSEGL_IsDisplayValid
function_decl|)
parameter_list|(
name|NativeDisplayType
parameter_list|)
function_decl|;
DECL|member|pfnWSEGL_InitialiseDisplay
name|WSEGLError
function_decl|(
modifier|*
name|pfnWSEGL_InitialiseDisplay
function_decl|)
parameter_list|(
name|NativeDisplayType
parameter_list|,
name|WSEGLDisplayHandle
modifier|*
parameter_list|,
specifier|const
name|WSEGLCaps
modifier|*
modifier|*
parameter_list|,
name|WSEGLConfig
modifier|*
modifier|*
parameter_list|)
function_decl|;
DECL|member|pfnWSEGL_CloseDisplay
name|WSEGLError
function_decl|(
modifier|*
name|pfnWSEGL_CloseDisplay
function_decl|)
parameter_list|(
name|WSEGLDisplayHandle
parameter_list|)
function_decl|;
DECL|member|pfnWSEGL_CreateWindowDrawable
name|WSEGLError
function_decl|(
modifier|*
name|pfnWSEGL_CreateWindowDrawable
function_decl|)
parameter_list|(
name|WSEGLDisplayHandle
parameter_list|,
name|WSEGLConfig
modifier|*
parameter_list|,
name|WSEGLDrawableHandle
modifier|*
parameter_list|,
name|NativeWindowType
parameter_list|,
name|WSEGLRotationAngle
modifier|*
parameter_list|)
function_decl|;
DECL|member|pfnWSEGL_CreatePixmapDrawable
name|WSEGLError
function_decl|(
modifier|*
name|pfnWSEGL_CreatePixmapDrawable
function_decl|)
parameter_list|(
name|WSEGLDisplayHandle
parameter_list|,
name|WSEGLConfig
modifier|*
parameter_list|,
name|WSEGLDrawableHandle
modifier|*
parameter_list|,
name|NativePixmapType
parameter_list|,
name|WSEGLRotationAngle
modifier|*
parameter_list|)
function_decl|;
DECL|member|pfnWSEGL_DeleteDrawable
name|WSEGLError
function_decl|(
modifier|*
name|pfnWSEGL_DeleteDrawable
function_decl|)
parameter_list|(
name|WSEGLDrawableHandle
parameter_list|)
function_decl|;
DECL|member|pfnWSEGL_SwapDrawable
name|WSEGLError
function_decl|(
modifier|*
name|pfnWSEGL_SwapDrawable
function_decl|)
parameter_list|(
name|WSEGLDrawableHandle
parameter_list|,
name|unsigned
name|long
parameter_list|)
function_decl|;
DECL|member|pfnWSEGL_SwapControlInterval
name|WSEGLError
function_decl|(
modifier|*
name|pfnWSEGL_SwapControlInterval
function_decl|)
parameter_list|(
name|WSEGLDrawableHandle
parameter_list|,
name|unsigned
name|long
parameter_list|)
function_decl|;
DECL|member|pfnWSEGL_WaitNative
name|WSEGLError
function_decl|(
modifier|*
name|pfnWSEGL_WaitNative
function_decl|)
parameter_list|(
name|WSEGLDrawableHandle
parameter_list|,
name|unsigned
name|long
parameter_list|)
function_decl|;
DECL|member|pfnWSEGL_CopyFromDrawable
name|WSEGLError
function_decl|(
modifier|*
name|pfnWSEGL_CopyFromDrawable
function_decl|)
parameter_list|(
name|WSEGLDrawableHandle
parameter_list|,
name|NativePixmapType
parameter_list|)
function_decl|;
DECL|member|pfnWSEGL_CopyFromPBuffer
name|WSEGLError
function_decl|(
modifier|*
name|pfnWSEGL_CopyFromPBuffer
function_decl|)
parameter_list|(
name|void
modifier|*
parameter_list|,
name|unsigned
name|long
parameter_list|,
name|unsigned
name|long
parameter_list|,
name|unsigned
name|long
parameter_list|,
name|WSEGLPixelFormat
parameter_list|,
name|NativePixmapType
parameter_list|)
function_decl|;
DECL|member|pfnWSEGL_GetDrawableParameters
name|WSEGLError
function_decl|(
modifier|*
name|pfnWSEGL_GetDrawableParameters
function_decl|)
parameter_list|(
name|WSEGLDrawableHandle
parameter_list|,
name|WSEGLDrawableParams
modifier|*
parameter_list|,
name|WSEGLDrawableParams
modifier|*
parameter_list|)
function_decl|;
block|}
DECL|typedef|WSEGL_FunctionTable
name|WSEGL_FunctionTable
typedef|;
name|WSEGL_IMPORT
specifier|const
name|WSEGL_FunctionTable
modifier|*
name|WSEGL_GetFunctionTablePointer
parameter_list|(
name|void
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern
begin_endif
endif|#
directive|endif
end_endif
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/* __WSEGL_H__ */
end_comment
begin_comment
comment|/******************************************************************************  End of file (wsegl.h) ******************************************************************************/
end_comment
end_unit
