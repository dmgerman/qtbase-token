begin_unit
begin_comment
comment|/* ************************************************************************** */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* * COPYRIGHT NOTICE:                                                      * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* * Copyright (c) 2000-2007 Gerard Juyn                                    * */
end_comment
begin_comment
comment|/* * [You may insert additional notices after this sentence if you modify   * */
end_comment
begin_comment
comment|/* *  this source]                                                          * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* * For the purposes of this copyright and license, "Contributing Authors" * */
end_comment
begin_comment
comment|/* * is defined as the following set of individuals:                        * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* *    Gerard Juyn                 - gjuyn :at: users.sourceforge.net      * */
end_comment
begin_comment
comment|/* *    Glenn Randers-Pehrson       - glennrp :at: users.sourceforge.net    * */
end_comment
begin_comment
comment|/* *    Raphael Assenat             - raph :at: raphnet.net                 * */
end_comment
begin_comment
comment|/* *    John Stiles                 -                                       * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* * The MNG Library is supplied "AS IS".  The Contributing Authors         * */
end_comment
begin_comment
comment|/* * disclaim all warranties, expressed or implied, including, without      * */
end_comment
begin_comment
comment|/* * limitation, the warranties of merchantability and of fitness for any   * */
end_comment
begin_comment
comment|/* * purpose.  The Contributing Authors assume no liability for direct,     * */
end_comment
begin_comment
comment|/* * indirect, incidental, special, exemplary, or consequential damages,    * */
end_comment
begin_comment
comment|/* * which may result from the use of the MNG Library, even if advised of   * */
end_comment
begin_comment
comment|/* * the possibility of such damage.                                        * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* * Permission is hereby granted to use, copy, modify, and distribute this * */
end_comment
begin_comment
comment|/* * source code, or portions hereof, for any purpose, without fee, subject * */
end_comment
begin_comment
comment|/* * to the following restrictions:                                         * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* * 1. The origin of this source code must not be misrepresented;          * */
end_comment
begin_comment
comment|/* *    you must not claim that you wrote the original software.            * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* * 2. Altered versions must be plainly marked as such and must not be     * */
end_comment
begin_comment
comment|/* *    misrepresented as being the original source.                        * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* * 3. This Copyright notice may not be removed or altered from any source * */
end_comment
begin_comment
comment|/* *    or altered source distribution.                                     * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* * The Contributing Authors specifically permit, without fee, and         * */
end_comment
begin_comment
comment|/* * encourage the use of this source code as a component to supporting     * */
end_comment
begin_comment
comment|/* * the MNG and JNG file format in commercial products.  If you use this   * */
end_comment
begin_comment
comment|/* * source code in a product, acknowledgment would be highly appreciated.  * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* ************************************************************************** */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* * Parts of this software have been adapted from the libpng package.      * */
end_comment
begin_comment
comment|/* * Although this library supports all features from the PNG specification * */
end_comment
begin_comment
comment|/* * (as MNG descends from it) it does not require the libpng package.      * */
end_comment
begin_comment
comment|/* * It does require the zlib library and optionally the IJG jpeg library,  * */
end_comment
begin_comment
comment|/* * and/or the "little-cms" library by Marti Maria (depending on the       * */
end_comment
begin_comment
comment|/* * inclusion of support for JNG and Full-Color-Management respectively.   * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* * This library's function is primarily to read and display MNG           * */
end_comment
begin_comment
comment|/* * animations. It is not meant as a full-featured image-editing           * */
end_comment
begin_comment
comment|/* * component! It does however offer creation and editing functionality    * */
end_comment
begin_comment
comment|/* * at the chunk level.                                                    * */
end_comment
begin_comment
comment|/* * (future modifications may include some more support for creation       * */
end_comment
begin_comment
comment|/* *  and or editing)                                                       * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* ************************************************************************** */
end_comment
begin_comment
comment|/* ************************************************************************** */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* * Version numbering                                                      * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* * X.Y.Z : X = release (0 = initial build)                                * */
end_comment
begin_comment
comment|/* *         Y = major version (uneven = test; even = production)           * */
end_comment
begin_comment
comment|/* *         Z = minor version (bugfixes; 2 is older than 10)               * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* * production versions only appear when a test-version is extensively     * */
end_comment
begin_comment
comment|/* * tested and found stable or for intermediate bug-fixes (recognized by   * */
end_comment
begin_comment
comment|/* * a change in the Z number)                                              * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* * x.1.x      = test version                                              * */
end_comment
begin_comment
comment|/* * x.2.x      = production version                                        * */
end_comment
begin_comment
comment|/* * x.3.x      = test version                                              * */
end_comment
begin_comment
comment|/* * x.4.x      = production version                                        * */
end_comment
begin_comment
comment|/* *  etc.                                                                  * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* ************************************************************************** */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* * Identifier naming conventions throughout this library                  * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* * iXxxx      = an integer                                                * */
end_comment
begin_comment
comment|/* * dXxxx      = a float                                                   * */
end_comment
begin_comment
comment|/* * pXxxx      = a pointer                                                 * */
end_comment
begin_comment
comment|/* * bXxxx      = a boolean                                                 * */
end_comment
begin_comment
comment|/* * eXxxx      = an enumeration                                            * */
end_comment
begin_comment
comment|/* * hXxxx      = a handle                                                  * */
end_comment
begin_comment
comment|/* * zXxxx      = a zero-terminated string (pchar)                          * */
end_comment
begin_comment
comment|/* * fXxxx      = a pointer to a function (callback)                        * */
end_comment
begin_comment
comment|/* * aXxxx      = an array                                                  * */
end_comment
begin_comment
comment|/* * sXxxx      = a structure                                               * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* * Macros& defines are in all uppercase.                                 * */
end_comment
begin_comment
comment|/* * Functions& typedefs in all lowercase.                                 * */
end_comment
begin_comment
comment|/* * Exported stuff is prefixed with MNG_ or mng_ respectively.             * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* * (I may have missed a couple; don't hesitate to let me know!)           * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* ************************************************************************** */
end_comment
begin_comment
comment|/* ************************************************************************** */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* * project   : libmng                                                     * */
end_comment
begin_comment
comment|/* * file      : libmng.h                  copyright (c) 2000-2007 G.Juyn   * */
end_comment
begin_comment
comment|/* * version   : 1.0.10                                                     * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* * purpose   : main application interface                                 * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* * author    : G.Juyn                                                     * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* * comment   : The main application interface. An application should not  * */
end_comment
begin_comment
comment|/* *             need access to any of the other modules!                   * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* * changes   : 0.5.1 - 05/06/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - changed chunk iteration function                         * */
end_comment
begin_comment
comment|/* *             0.5.1 - 05/08/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - added chunk access functions                             * */
end_comment
begin_comment
comment|/* *             - added version control constants& functions              * */
end_comment
begin_comment
comment|/* *             - changed strict-ANSI stuff                                * */
end_comment
begin_comment
comment|/* *             0.5.1 - 05/11/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - added set_outputprofile2& set_srgbprofile2              * */
end_comment
begin_comment
comment|/* *             - added empty-chunk put-routines                           * */
end_comment
begin_comment
comment|/* *             0.5.1 - 05/12/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - added version_dll& VERSION_DLL (for consistency)        * */
end_comment
begin_comment
comment|/* *             - added version control explanatory text& samples         * */
end_comment
begin_comment
comment|/* *             0.5.1 - 05/15/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - added getimgdata& putimgdata functions                  * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* *             0.5.2 - 05/16/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - changed the version parameters (obviously)               * */
end_comment
begin_comment
comment|/* *             0.5.2 - 05/18/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - complimented constants for chunk-property values         * */
end_comment
begin_comment
comment|/* *             0.5.2 - 05/23/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - fixed MNG_UINT_pHYg value                                * */
end_comment
begin_comment
comment|/* *             0.5.2 - 05/24/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - added support for get/set default zlib/IJG parms         * */
end_comment
begin_comment
comment|/* *             0.5.2 - 06/02/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - added MNG_BIGENDIAN_SUPPORT (contributed by Tim Rowley)  * */
end_comment
begin_comment
comment|/* *             - separated configuration-options into "mng_conf.h"        * */
end_comment
begin_comment
comment|/* *             - added RGB8_A8 canvasstyle                                * */
end_comment
begin_comment
comment|/* *             - added getalphaline callback for RGB8_A8 canvasstyle      * */
end_comment
begin_comment
comment|/* *             0.5.2 - 06/06/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - moved errorcodes from "mng_error.h"                      * */
end_comment
begin_comment
comment|/* *             - added mng_read_resume function to support                * */
end_comment
begin_comment
comment|/* *               read-suspension                                          * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* *             0.5.3 - 06/16/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - changed the version parameters (obviously)               * */
end_comment
begin_comment
comment|/* *             0.5.3 - 06/21/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - added get/set for speedtype to facilitate testing        * */
end_comment
begin_comment
comment|/* *             - added get for imagelevel during processtext callback     * */
end_comment
begin_comment
comment|/* *             0.5.3 - 06/24/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - fixed inclusion of IJG read/write code                   * */
end_comment
begin_comment
comment|/* *             0.5.3 - 06/26/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - changed userdata variable to mng_ptr                     * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* *             0.9.0 - 06/30/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - changed refresh parameters to 'x,y,width,height'         * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* *             0.9.1 - 07/06/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - added MNG_NEEDTIMERWAIT errorcode                        * */
end_comment
begin_comment
comment|/* *             - changed comments to indicate modified behavior for       * */
end_comment
begin_comment
comment|/* *               timer& suspension breaks                                * */
end_comment
begin_comment
comment|/* *             0.9.1 - 07/08/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - added get routines for internal display variables        * */
end_comment
begin_comment
comment|/* *             - added get/set routines for suspensionmode variable       * */
end_comment
begin_comment
comment|/* *             0.9.1 - 07/15/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - added callbacks for SAVE/SEEK processing                 * */
end_comment
begin_comment
comment|/* *             - added get/set routines for sectionbreak variable         * */
end_comment
begin_comment
comment|/* *             - added NEEDSECTIONWAIT errorcode                          * */
end_comment
begin_comment
comment|/* *             0.9.1 - 07/19/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - added function to set frame-/layer-count& playtime      * */
end_comment
begin_comment
comment|/* *             - added errorcode for updatemngheader if not a MNG         * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* *             0.9.2 - 07/31/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - fixed problem with trace-functions improperly wrapped    * */
end_comment
begin_comment
comment|/* *             - added status_xxxx functions                              * */
end_comment
begin_comment
comment|/* *             0.9.2 - 08/05/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - changed file-prefixes                                    * */
end_comment
begin_comment
comment|/* *             - added function to set simplicity field                   * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* *             0.9.3 - 08/09/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - added check for simplicity-bits in MHDR                  * */
end_comment
begin_comment
comment|/* *             0.9.3 - 08/12/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - added workaround for faulty PhotoShop iCCP chunk         * */
end_comment
begin_comment
comment|/* *             0.9.3 - 08/26/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - added MAGN chunk                                         * */
end_comment
begin_comment
comment|/* *             0.9.3 - 09/07/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - added support for new filter_types                       * */
end_comment
begin_comment
comment|/* *             0.9.3 - 10/10/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - added support for alpha-depth prediction                 * */
end_comment
begin_comment
comment|/* *             0.9.3 - 10/11/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - fixed processing of unknown critical chunks              * */
end_comment
begin_comment
comment|/* *             - removed test-MaGN                                        * */
end_comment
begin_comment
comment|/* *             - added PNG/MNG spec version indicators                    * */
end_comment
begin_comment
comment|/* *             - added support for nEED                                   * */
end_comment
begin_comment
comment|/* *             0.9.3 - 10/16/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - added functions to retrieve PNG/JNG specific header-info * */
end_comment
begin_comment
comment|/* *             - added JDAA chunk                                         * */
end_comment
begin_comment
comment|/* *             0.9.3 - 10/17/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - added callback to process non-critical unknown chunks    * */
end_comment
begin_comment
comment|/* *             0.9.3 - 10/20/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - added errocode for delayed delta-processing              * */
end_comment
begin_comment
comment|/* *             - added get/set for bKGD preference setting                * */
end_comment
begin_comment
comment|/* *             0.9.3 - 10/21/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - added get function for interlace/progressive display     * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* *             0.9.4 - 01/18/2001 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - added errorcode for MAGN methods                         * */
end_comment
begin_comment
comment|/* *             - removed test filter-methods 1& 65                       * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* *             1.0.0 - 02/05/2001 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - version numbers (obviously)                              * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* *             1.0.1 - 02/08/2001 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - added MEND processing callback                           * */
end_comment
begin_comment
comment|/* *             1.0.1 - 04/21/2001 - G.Juyn (code by G.Kelly)              * */
end_comment
begin_comment
comment|/* *             - added BGRA8 canvas with premultiplied alpha              * */
end_comment
begin_comment
comment|/* *             1.0.1 - 05/02/2001 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - added "default" sRGB generation (Thanks Marti!)          * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* *             1.0.2 - 06/23/2001 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - added optimization option for MNG-video playback         * */
end_comment
begin_comment
comment|/* *             - added processterm callback                               * */
end_comment
begin_comment
comment|/* *             1.0.2 - 06/25/2001 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - added late binding errorcode (not used internally)       * */
end_comment
begin_comment
comment|/* *             - added option to turn off progressive refresh             * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* *             1.0.3 - 08/06/2001 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - added get function for last processed BACK chunk         * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* *             1.0.5 - 07/04/2002 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - added errorcode for extreme chunk-sizes                  * */
end_comment
begin_comment
comment|/* *             1.0.5 - 08/07/2002 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - added test-option for PNG filter method 193 (=no filter) * */
end_comment
begin_comment
comment|/* *             1.0.5 - 08/15/2002 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - completed PROM support                                   * */
end_comment
begin_comment
comment|/* *             - completed delta-image support                            * */
end_comment
begin_comment
comment|/* *             1.0.5 - 08/19/2002 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - added HLAPI function to copy chunks                      * */
end_comment
begin_comment
comment|/* *             1.0.5 - 09/14/2002 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - added event handling for dynamic MNG                     * */
end_comment
begin_comment
comment|/* *             - added 'supports' call to check function availability     * */
end_comment
begin_comment
comment|/* *             1.0.5 - 09/15/2002 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - fixed LOOP iteration=0 special case                      * */
end_comment
begin_comment
comment|/* *             1.0.5 - 09/20/2002 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - added support for PAST                                   * */
end_comment
begin_comment
comment|/* *             1.0.5 - 09/22/2002 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - added bgrx8 canvas (filler byte)                         * */
end_comment
begin_comment
comment|/* *             1.0.5 - 10/07/2002 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - added check for TERM placement during create/write       * */
end_comment
begin_comment
comment|/* *             - added beta version function& constant                   * */
end_comment
begin_comment
comment|/* *             1.0.5 - 11/07/2002 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - added support to get totals after mng_read()             * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* *             1.0.6 - 07/07/2003 - G. Randers-Pehrson                    * */
end_comment
begin_comment
comment|/* *             - added support for reducing the footprint of libmng       * */
end_comment
begin_comment
comment|/* *               by macros that optionally skip unused chunks, remove     * */
end_comment
begin_comment
comment|/* *               16-bit sample support, remove Delta support, and         * */
end_comment
begin_comment
comment|/* *               remove JNG support, to accomodate Mozilla/Firebird.      * */
end_comment
begin_comment
comment|/* *             1.0.6 - 07/14/2003 - G. Randers-Pehrson                    * */
end_comment
begin_comment
comment|/* *             - further optional removal of unused functions             * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* *             1.0.7 - 11/27/2003 - R.A                                   * */
end_comment
begin_comment
comment|/* *             - added CANVAS_RGB565 and CANVAS_BGR565                    * */
end_comment
begin_comment
comment|/* *             1.0.7 - 12/06/2003 - R.A                                   * */
end_comment
begin_comment
comment|/* *             - added CANVAS_RGBA565 and CANVAS_BGRA565                  * */
end_comment
begin_comment
comment|/* *             1.0.7 - 01/25/2004 - J.S                                   * */
end_comment
begin_comment
comment|/* *             - added premultiplied alpha canvas' for RGBA, ARGB, ABGR   * */
end_comment
begin_comment
comment|/* *             1.0.7 - 03/07/2004 - G. Randers-Pehrson                    * */
end_comment
begin_comment
comment|/* *             - put gamma, cms-related declarations inside #ifdef        * */
end_comment
begin_comment
comment|/* *             1.0.7 - 03/10/2004 - G.R-P                                 * */
end_comment
begin_comment
comment|/* *             - added conditionals around openstream/closestream         * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* *             1.0.8 - 04/02/2004 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - added CRC existence& checking flags                     * */
end_comment
begin_comment
comment|/* *             1.0.8 - 04/12/2004 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - added data-push mechanisms for specialized decoders      * */
end_comment
begin_comment
comment|/* *             1.0.8 - 06/05/2004 - G.R-P                                 * */
end_comment
begin_comment
comment|/* *             - define MNG_INCLUDE_ZLIB when MNG_USE_ZLIB_CRC is defined * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* *             1.0.9 - 10/03/2004 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - added function to retrieve current FRAM delay            * */
end_comment
begin_comment
comment|/* *             1.0.9 - 10/14/2004 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - added bgr565_a8 canvas-style (thanks to J. Elvander)     * */
end_comment
begin_comment
comment|/* *             1.0.9 - 10/17/2004 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - fixed PPLT getchunk/putchunk routines                    * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* *             1.0.10 - 03/07/2006 - (thanks to W. Manthey)               * */
end_comment
begin_comment
comment|/* *             - added CANVAS_RGB555 and CANVAS_BGR555                    * */
end_comment
begin_comment
comment|/* *             1.0.10 - 04/08/2007 - G.Juyn                               * */
end_comment
begin_comment
comment|/* *             - added support for mPNG proposal                          * */
end_comment
begin_comment
comment|/* *             1.0.10 - 04/12/2007 - G.Juyn                               * */
end_comment
begin_comment
comment|/* *             - added support for ANG proposal                           * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* ************************************************************************** */
end_comment
begin_if
if|#
directive|if
name|defined
argument_list|(
name|__BORLANDC__
argument_list|)
operator|&&
name|defined
argument_list|(
name|MNG_STRICT_ANSI
argument_list|)
end_if
begin_pragma
pragma|#
directive|pragma
name|option
name|-
name|A
end_pragma
begin_comment
comment|/* force ANSI-C */
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|_libmng_h_
end_ifndef
begin_define
DECL|macro|_libmng_h_
define|#
directive|define
name|_libmng_h_
end_define
begin_comment
comment|/* ************************************************************************** */
end_comment
begin_include
include|#
directive|include
file|"libmng_conf.h"
end_include
begin_comment
comment|/* user-specific configuration options */
end_comment
begin_comment
comment|/* ************************************************************************** */
end_comment
begin_define
DECL|macro|MNG_CHECK_BAD_ICCP
define|#
directive|define
name|MNG_CHECK_BAD_ICCP
end_define
begin_comment
DECL|macro|MNG_CHECK_BAD_ICCP
comment|/* let's catch that sucker !!! */
end_comment
begin_ifdef
ifdef|#
directive|ifdef
name|MNG_SUPPORT_READ
end_ifdef
begin_comment
comment|/* dependencies based on user-configuration */
end_comment
begin_define
DECL|macro|MNG_INCLUDE_READ_PROCS
define|#
directive|define
name|MNG_INCLUDE_READ_PROCS
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_ifdef
ifdef|#
directive|ifdef
name|MNG_SUPPORT_WRITE
end_ifdef
begin_define
DECL|macro|MNG_INCLUDE_WRITE_PROCS
define|#
directive|define
name|MNG_INCLUDE_WRITE_PROCS
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_ifdef
ifdef|#
directive|ifdef
name|MNG_USE_ZLIB_CRC
end_ifdef
begin_define
DECL|macro|MNG_INCLUDE_ZLIB
define|#
directive|define
name|MNG_INCLUDE_ZLIB
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_ifdef
ifdef|#
directive|ifdef
name|MNG_SUPPORT_DISPLAY
end_ifdef
begin_define
DECL|macro|MNG_INCLUDE_FILTERS
define|#
directive|define
name|MNG_INCLUDE_FILTERS
end_define
begin_define
DECL|macro|MNG_INCLUDE_INTERLACE
define|#
directive|define
name|MNG_INCLUDE_INTERLACE
end_define
begin_define
DECL|macro|MNG_INCLUDE_OBJECTS
define|#
directive|define
name|MNG_INCLUDE_OBJECTS
end_define
begin_define
DECL|macro|MNG_INCLUDE_DISPLAY_PROCS
define|#
directive|define
name|MNG_INCLUDE_DISPLAY_PROCS
end_define
begin_define
DECL|macro|MNG_INCLUDE_TIMING_PROCS
define|#
directive|define
name|MNG_INCLUDE_TIMING_PROCS
end_define
begin_define
DECL|macro|MNG_INCLUDE_ZLIB
define|#
directive|define
name|MNG_INCLUDE_ZLIB
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_ifdef
ifdef|#
directive|ifdef
name|MNG_STORE_CHUNKS
end_ifdef
begin_define
DECL|macro|MNG_INCLUDE_ZLIB
define|#
directive|define
name|MNG_INCLUDE_ZLIB
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_ifdef
ifdef|#
directive|ifdef
name|MNG_SUPPORT_IJG6B
end_ifdef
begin_define
DECL|macro|MNG_INCLUDE_JNG
define|#
directive|define
name|MNG_INCLUDE_JNG
end_define
begin_define
DECL|macro|MNG_INCLUDE_IJG6B
define|#
directive|define
name|MNG_INCLUDE_IJG6B
end_define
begin_define
DECL|macro|MNG_USE_SETJMP
define|#
directive|define
name|MNG_USE_SETJMP
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_ifdef
ifdef|#
directive|ifdef
name|MNG_INCLUDE_JNG
end_ifdef
begin_if
if|#
directive|if
name|defined
argument_list|(
name|MNG_SUPPORT_DISPLAY
argument_list|)
operator|||
name|defined
argument_list|(
name|MNG_ACCESS_CHUNKS
argument_list|)
end_if
begin_define
DECL|macro|MNG_INCLUDE_JNG_READ
define|#
directive|define
name|MNG_INCLUDE_JNG_READ
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_if
if|#
directive|if
name|defined
argument_list|(
name|MNG_SUPPORT_WRITE
argument_list|)
operator|||
name|defined
argument_list|(
name|MNG_ACCESS_CHUNKS
argument_list|)
end_if
begin_define
DECL|macro|MNG_INCLUDE_JNG_WRITE
define|#
directive|define
name|MNG_INCLUDE_JNG_WRITE
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_endif
endif|#
directive|endif
end_endif
begin_ifdef
ifdef|#
directive|ifdef
name|MNG_FULL_CMS
end_ifdef
begin_define
DECL|macro|MNG_INCLUDE_LCMS
define|#
directive|define
name|MNG_INCLUDE_LCMS
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_ifdef
ifdef|#
directive|ifdef
name|MNG_AUTO_DITHER
end_ifdef
begin_define
DECL|macro|MNG_INCLUDE_DITHERING
define|#
directive|define
name|MNG_INCLUDE_DITHERING
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_ifdef
ifdef|#
directive|ifdef
name|MNG_SUPPORT_TRACE
end_ifdef
begin_define
DECL|macro|MNG_INCLUDE_TRACE_PROCS
define|#
directive|define
name|MNG_INCLUDE_TRACE_PROCS
end_define
begin_ifdef
ifdef|#
directive|ifdef
name|MNG_TRACE_TELLTALE
end_ifdef
begin_define
DECL|macro|MNG_INCLUDE_TRACE_STRINGS
define|#
directive|define
name|MNG_INCLUDE_TRACE_STRINGS
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_endif
endif|#
directive|endif
end_endif
begin_ifdef
ifdef|#
directive|ifdef
name|MNG_ERROR_TELLTALE
end_ifdef
begin_define
DECL|macro|MNG_INCLUDE_ERROR_STRINGS
define|#
directive|define
name|MNG_INCLUDE_ERROR_STRINGS
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_ifdef
ifdef|#
directive|ifdef
name|MNG_OPTIMIZE_CHUNKINITFREE
end_ifdef
begin_ifndef
ifndef|#
directive|ifndef
name|MNG_OPTIMIZE_CHUNKACCESS
end_ifndef
begin_define
DECL|macro|MNG_OPTIMIZE_CHUNKACCESS
define|#
directive|define
name|MNG_OPTIMIZE_CHUNKACCESS
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_else
else|#
directive|else
end_else
begin_ifdef
ifdef|#
directive|ifdef
name|MNG_OPTIMIZE_CHUNKACCESS
end_ifdef
begin_undef
DECL|macro|MNG_OPTIMIZE_CHUNKACCESS
undef|#
directive|undef
name|MNG_OPTIMIZE_CHUNKACCESS
end_undef
begin_endif
endif|#
directive|endif
end_endif
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/* ************************************************************************** */
end_comment
begin_include
include|#
directive|include
file|"libmng_types.h"
end_include
begin_comment
comment|/* platform-specific definitions                                           and other assorted stuff */
end_comment
begin_comment
comment|/* ************************************************************************** */
end_comment
begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef
begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
comment|/* ************************************************************************** */
comment|/* *                                                                        * */
comment|/* *  Versioning control                                                    * */
comment|/* *                                                                        * */
comment|/* *  version_so and version_dll will NOT reflect version_major;            * */
comment|/* *  these will only change for binary incompatible changes (which will    * */
comment|/* *  hopefully never occur)                                                * */
comment|/* *  note: they will be set to 1 on the first public release !!!           * */
comment|/* *                                                                        * */
comment|/* *  first public release:                                                 * */
comment|/* *  #define MNG_VERSION_TEXT    "1.0.0"                                   * */
comment|/* *  #define MNG_VERSION_SO      1       eg. libmng.so.1                   * */
comment|/* *  #define MNG_VERSION_DLL     1       eg. libmng.dll                    * */
comment|/* *  #define MNG_VERSION_MAJOR   1                                         * */
comment|/* *  #define MNG_VERSION_MINOR   0                                         * */
comment|/* *  #define MNG_VERSION_RELEASE 0                                         * */
comment|/* *                                                                        * */
comment|/* *  bug fix& cosmetics :                                                 * */
comment|/* *  #define MNG_VERSION_TEXT    "1.0.1"                                   * */
comment|/* *  #define MNG_VERSION_SO      1       eg. libmng.so.1                   * */
comment|/* *  #define MNG_VERSION_DLL     1       eg. libmng.dll                    * */
comment|/* *  #define MNG_VERSION_MAJOR   1                                         * */
comment|/* *  #define MNG_VERSION_MINOR   0                                         * */
comment|/* *  #define MNG_VERSION_RELEASE 1                                         * */
comment|/* *                                                                        * */
comment|/* *  feature change :                                                      * */
comment|/* *  #define MNG_VERSION_TEXT    "1.2.0"                                   * */
comment|/* *  #define MNG_VERSION_SO      1       eg. libmng.so.1                   * */
comment|/* *  #define MNG_VERSION_DLL     1       eg. libmng.dll                    * */
comment|/* *  #define MNG_VERSION_MAJOR   1                                         * */
comment|/* *  #define MNG_VERSION_MINOR   2                                         * */
comment|/* *  #define MNG_VERSION_RELEASE 0                                         * */
comment|/* *                                                                        * */
comment|/* *  major rewrite (still binary compatible) :                             * */
comment|/* *  #define MNG_VERSION_TEXT    "2.0.0"                                   * */
comment|/* *  #define MNG_VERSION_SO      1       eg. libmng.so.1                   * */
comment|/* *  #define MNG_VERSION_DLL     1       eg. libmng.dll                    * */
comment|/* *  #define MNG_VERSION_MAJOR   2                                         * */
comment|/* *  #define MNG_VERSION_MINOR   0                                         * */
comment|/* *  #define MNG_VERSION_RELEASE 0                                         * */
comment|/* *                                                                        * */
comment|/* *  binary incompatible change:                                           * */
comment|/* *  #define MNG_VERSION_TEXT    "13.0.0"                                  * */
comment|/* *  #define MNG_VERSION_SO      2       eg. libmng.so.2                   * */
comment|/* *  #define MNG_VERSION_DLL     2       eg. libmng2.dll                   * */
comment|/* *  #define MNG_VERSION_MAJOR   13                                        * */
comment|/* *  #define MNG_VERSION_MINOR   0                                         * */
comment|/* *  #define MNG_VERSION_RELEASE 0                                         * */
comment|/* *                                                                        * */
comment|/* *  note that version_so& version_dll will always remain equal so it     * */
comment|/* *  doesn't matter which one is called to do version-checking; they are   * */
comment|/* *  just provided for their target platform                               * */
comment|/* *                                                                        * */
comment|/* ************************************************************************** */
DECL|macro|MNG_VERSION_TEXT
define|#
directive|define
name|MNG_VERSION_TEXT
value|"1.0.10"
DECL|macro|MNG_VERSION_SO
define|#
directive|define
name|MNG_VERSION_SO
value|1
comment|/* eg. libmng.so.1  */
DECL|macro|MNG_VERSION_DLL
define|#
directive|define
name|MNG_VERSION_DLL
value|1
comment|/* but: libmng.dll (!) */
DECL|macro|MNG_VERSION_MAJOR
define|#
directive|define
name|MNG_VERSION_MAJOR
value|1
DECL|macro|MNG_VERSION_MINOR
define|#
directive|define
name|MNG_VERSION_MINOR
value|0
DECL|macro|MNG_VERSION_RELEASE
define|#
directive|define
name|MNG_VERSION_RELEASE
value|10
DECL|macro|MNG_VERSION_BETA
define|#
directive|define
name|MNG_VERSION_BETA
value|MNG_FALSE
name|MNG_EXT
name|mng_pchar
name|MNG_DECL
name|mng_version_text
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_uint8
name|MNG_DECL
name|mng_version_so
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_uint8
name|MNG_DECL
name|mng_version_dll
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_uint8
name|MNG_DECL
name|mng_version_major
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_uint8
name|MNG_DECL
name|mng_version_minor
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_uint8
name|MNG_DECL
name|mng_version_release
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_bool
name|MNG_DECL
name|mng_version_beta
parameter_list|(
name|void
parameter_list|)
function_decl|;
comment|/* use the following call to check wether the version of libmng your app    is using supports the given function; this is useful in apps that dynamically    load the library to make sure a certain function will work; the result will    be MNG_TRUE if the given function is implemented in this version of the library;    Major/Minor/Version indicate the version the function became available;    (if these fields are zero the function is not yet implemented!) */
ifdef|#
directive|ifdef
name|MNG_SUPPORT_FUNCQUERY
name|MNG_EXT
name|mng_bool
name|MNG_DECL
name|mng_supports_func
parameter_list|(
name|mng_pchar
name|zFunction
parameter_list|,
name|mng_uint8
modifier|*
name|iMajor
parameter_list|,
name|mng_uint8
modifier|*
name|iMinor
parameter_list|,
name|mng_uint8
modifier|*
name|iRelease
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* ************************************************************************** */
comment|/* *                                                                        * */
comment|/* *  MNG/PNG specification level conformance                               * */
comment|/* *                                                                        * */
comment|/* ************************************************************************** */
DECL|macro|MNG_PNG_VERSION
define|#
directive|define
name|MNG_PNG_VERSION
value|"1.2"
DECL|macro|MNG_PNG_VERSION_MAJ
define|#
directive|define
name|MNG_PNG_VERSION_MAJ
value|1
DECL|macro|MNG_PNG_VERSION_MIN
define|#
directive|define
name|MNG_PNG_VERSION_MIN
value|2
DECL|macro|MNG_MNG_VERSION
define|#
directive|define
name|MNG_MNG_VERSION
value|"1.1"
DECL|macro|MNG_MNG_VERSION_MAJ
define|#
directive|define
name|MNG_MNG_VERSION_MAJ
value|1
DECL|macro|MNG_MNG_VERSION_MIN
define|#
directive|define
name|MNG_MNG_VERSION_MIN
value|1
DECL|macro|MNG_MNG_DRAFT
define|#
directive|define
name|MNG_MNG_DRAFT
value|99
comment|/* deprecated;                                           only used for nEED "MNG DRAFT nn" */
comment|/* ************************************************************************** */
comment|/* *                                                                        * */
comment|/* *  High-level application functions                                      * */
comment|/* *                                                                        * */
comment|/* ************************************************************************** */
comment|/* library initialization function */
comment|/* must be the first called before anything can be done at all */
comment|/* initializes internal datastructure(s) */
name|MNG_EXT
name|mng_handle
name|MNG_DECL
name|mng_initialize
parameter_list|(
name|mng_ptr
name|pUserdata
parameter_list|,
name|mng_memalloc
name|fMemalloc
parameter_list|,
name|mng_memfree
name|fMemfree
parameter_list|,
name|mng_traceproc
name|fTraceproc
parameter_list|)
function_decl|;
comment|/* library reset function */
comment|/* can be used to re-initialize the library, so another image can be    processed. there's absolutely no harm in calling it, even when it's not    really necessary */
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_reset
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
comment|/* library cleanup function */
comment|/* must be the last called to clean up internal datastructure(s) */
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_cleanup
parameter_list|(
name|mng_handle
modifier|*
name|hHandle
parameter_list|)
function_decl|;
comment|/* high-level read functions */
comment|/* use mng_read if you simply want to read a Network Graphic */
comment|/* mng_read_resume is used in I/O-read-suspension scenarios, where the    "readdata" callback may return FALSE& length=0 indicating its buffer is    depleted or too short to supply the required bytes, and the buffer needs    to be refilled; libmng will return the errorcode MNG_NEEDMOREDATA telling    the app to refill its read-buffer after which it must call mng_read_resume    (or mng_display_resume if it also displaying the image simultaneously) */
ifdef|#
directive|ifdef
name|MNG_SUPPORT_READ
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_read
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_read_resume
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* high-level "data push" functions */
comment|/* these functions can be used in situations where data is streaming into the    application and needs to be buffered by libmng before it is actually    requested by libmng itself. the pushing complements the normal reading    mechanism, but applications can decide to always return "0 bytes read" to    make libmng go into suspension mode with the returncode MNG_NEEDMOREDATA */
comment|/* mng_read_pushdata can be used to push blobs of data of arbitrary size;    mng_read_pushsig and mng_read_pushchunk can be used if the application    has already done some low-level decoding (eg. at the chunk level) */
comment|/* the data being pushed into libmng with mng_read_pushdata *must* contain    the regular 4-byte chunklength, but *must not* contain it with    mng_read_pushchunk!!! */
comment|/* mng_read_pushsig is used to prevent libmng from trying to parse the regular    PNG/JNG/MNG signature bytes; the application must have done this itself    and *must* indicate the proper type in the function call or things will    go amiss!!    also you *must* call this first, so pretty much right after mng_initialize    and certainly before any call to mng_read or mng_readdisplay !!!! */
comment|/* IMPORTANT!!! data can only be safely pushed when libmng is in a    "wait" state; eg. during MNG_NEEDTIMERWAIT, MNG_NEEDSECTIONWAIT or    MNG_NEEDMOREDATA !!! this just means you can't have one thread displaying    and another thread pushing data !!! */
comment|/* if bOwnership = MNG_TRUE, libmng will retain the supplied pointer and    *will* expect the buffer to remain available until libmng is finished    with it; what happens then depends on whether or not you have set the    releasedata() callback; if this is set than the supplied buffer will    be returned through this callback and your application can take care of    cleaning it up, otherwise libmng will use its internal freeing mechanism    (which, depending on compile-options, will be the standard C free() call,    or the memfree() callback */
comment|/* if bOwnership = MNG_FALSE, libmng will just copy the data into its own    buffers and dispose of it in the normal way */
ifdef|#
directive|ifdef
name|MNG_SUPPORT_READ
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_read_pushdata
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_ptr
name|pData
parameter_list|,
name|mng_size_t
name|iLength
parameter_list|,
name|mng_bool
name|bTakeownership
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_read_pushsig
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_imgtype
name|eSigtype
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_read_pushchunk
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_ptr
name|pChunk
parameter_list|,
name|mng_size_t
name|iLength
parameter_list|,
name|mng_bool
name|bTakeownership
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* high-level write& create functions */
comment|/* use this if you want to write a previously read Network Graphic or    if you want to create a new graphic and write it */
comment|/* to write a previously read graphic you must have defined MNG_STORE_CHUNKS */
comment|/* to create a new graphic you'll also need access to the chunks    (eg. #define MNG_ACCESS_CHUNKS !) */
ifdef|#
directive|ifdef
name|MNG_SUPPORT_WRITE
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_write
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_create
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* high-level display functions */
comment|/* use these to display a previously read or created graphic or    to read& display a graphic simultaneously */
comment|/* mng_display_resume should be called after a timer-interval    expires that was set through the settimer-callback, after a    read suspension-break, or, to resume an animation after a call    to mng_display_freeze/mng_display_reset */
comment|/* mng_display_freeze thru mng_display_gotime can be used to influence    the display of an image, BUT ONLY if it has been completely read! */
ifdef|#
directive|ifdef
name|MNG_SUPPORT_DISPLAY
ifdef|#
directive|ifdef
name|MNG_SUPPORT_READ
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_readdisplay
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
endif|#
directive|endif
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_display
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_display_resume
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_display_freeze
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_display_reset
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
ifndef|#
directive|ifndef
name|MNG_NO_DISPLAY_GO_SUPPORTED
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_display_goframe
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iFramenr
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_display_golayer
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iLayernr
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_display_gotime
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iPlaytime
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* MNG_SUPPORT_DISPLAY */
comment|/* event processing function */
comment|/* this needs to be called by the app when dynamic MNG is enabled and    a specific event occurs in the user-interface */
if|#
directive|if
name|defined
argument_list|(
name|MNG_SUPPORT_DISPLAY
argument_list|)
operator|&&
name|defined
argument_list|(
name|MNG_SUPPORT_DYNAMICMNG
argument_list|)
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_trapevent
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint8
name|iEventtype
parameter_list|,
name|mng_int32
name|iX
parameter_list|,
name|mng_int32
name|iY
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* error reporting function */
comment|/* use this if you need more detailed info on the last error */
comment|/* iExtra1& iExtra2 may contain errorcodes from zlib, jpeg, etc... */
comment|/* zErrortext will only be filled if you #define MNG_ERROR_TELLTALE */
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getlasterror
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_int8
modifier|*
name|iSeverity
parameter_list|,
name|mng_chunkid
modifier|*
name|iChunkname
parameter_list|,
name|mng_uint32
modifier|*
name|iChunkseq
parameter_list|,
name|mng_int32
modifier|*
name|iExtra1
parameter_list|,
name|mng_int32
modifier|*
name|iExtra2
parameter_list|,
name|mng_pchar
modifier|*
name|zErrortext
parameter_list|)
function_decl|;
comment|/* ************************************************************************** */
comment|/* *                                                                        * */
comment|/* *  Callback set functions                                                * */
comment|/* *                                                                        * */
comment|/* ************************************************************************** */
comment|/* memory callbacks */
comment|/* called to allocate and release internal datastructures */
ifndef|#
directive|ifndef
name|MNG_INTERNAL_MEMMNGMT
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_setcb_memalloc
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_memalloc
name|fProc
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_setcb_memfree
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_memfree
name|fProc
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* MNG_INTERNAL_MEMMNGMT */
comment|/* open-& close-stream callbacks */
comment|/* called to open& close streams for input or output */
if|#
directive|if
name|defined
argument_list|(
name|MNG_SUPPORT_READ
argument_list|)
operator|||
name|defined
argument_list|(
name|MNG_SUPPORT_WRITE
argument_list|)
ifndef|#
directive|ifndef
name|MNG_NO_OPEN_CLOSE_STREAM
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_setcb_openstream
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_openstream
name|fProc
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_setcb_closestream
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_closestream
name|fProc
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* read callback */
comment|/* called to get data from the inputstream */
ifdef|#
directive|ifdef
name|MNG_SUPPORT_READ
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_setcb_readdata
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_readdata
name|fProc
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* write callback */
comment|/* called to put data into the outputstream */
ifdef|#
directive|ifdef
name|MNG_SUPPORT_WRITE
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_setcb_writedata
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_writedata
name|fProc
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* error callback */
comment|/* called when an error occurs */
comment|/* the application can determine if the error is recoverable,    and may inform the library by setting specific returncodes */
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_setcb_errorproc
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_errorproc
name|fProc
parameter_list|)
function_decl|;
comment|/* trace callback */
comment|/* called to show the currently executing function */
ifdef|#
directive|ifdef
name|MNG_SUPPORT_TRACE
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_setcb_traceproc
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_traceproc
name|fProc
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* callbacks for read processing */
comment|/* processheader is called when all header information has been gathered    from the inputstream */
comment|/* processtext is called for every tEXt, zTXt and iTXt chunk in the    inputstream (iType=0 for tEXt, 1 for zTXt and 2 for iTXt);    you can call get_imagelevel to check at what nesting-level the chunk is    encountered (eg. tEXt inside an embedded image inside a MNG -> level == 2;                 in most other case -> level == 1) */
comment|/* processsave& processseek are called for SAVE/SEEK chunks */
comment|/* processneed is called for the nEED chunk; you should specify a callback    for this as the default behavior will be to abort processing, unless    the requirement is one of:    - a supported chunk    - the text "draft nn" where nn is a numeric value    - the text "MNG-1.0" or "MNG-1.1"    - the text "CACHEOFF" */
comment|/* processmend is called at the very end of the animation-stream;    note that this may not be the end of the animation though! */
comment|/* processterm is called when a TERM chunk is encountered; there can be only    1 in the stream (or none) */
comment|/* processunknown is called after reading each non-critical unknown chunk */
ifdef|#
directive|ifdef
name|MNG_SUPPORT_READ
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_setcb_processheader
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_processheader
name|fProc
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_setcb_processtext
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_processtext
name|fProc
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_setcb_processsave
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_processsave
name|fProc
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_setcb_processseek
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_processseek
name|fProc
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_setcb_processneed
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_processneed
name|fProc
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_setcb_processmend
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_processmend
name|fProc
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_setcb_processterm
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_processterm
name|fProc
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_setcb_processunknown
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_processunknown
name|fProc
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* callbacks for display processing */
comment|/* getcanvasline is called to get an access-pointer to a line on the    drawing-canvas */
comment|/* getbkgdline is called to get an access-pointer to a line from the    background-canvas */
comment|/* refresh is called to inform the GUI to redraw the current canvas onto    its output device (eg. in Win32 this would mean sending an    invalidate message for the specified region */
comment|/* NOTE that the update-region is specified as x,y,width,height; eg. the    invalidate message for Windows requires left,top,right,bottom parameters    where the bottom-right is exclusive of the region!!    to get these correctly is as simple as:    left   = x;    top    = y;    right  = x + width;    bottom = y + height;    if your implementation requires inclusive points, simply subtract 1 from    both the right& bottom values calculated above.    */
ifdef|#
directive|ifdef
name|MNG_SUPPORT_DISPLAY
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_setcb_getcanvasline
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_getcanvasline
name|fProc
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_setcb_getbkgdline
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_getbkgdline
name|fProc
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_setcb_getalphaline
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_getalphaline
name|fProc
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_setcb_refresh
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_refresh
name|fProc
parameter_list|)
function_decl|;
comment|/* timing callbacks */
comment|/* gettickcount is called to get the system tickcount (milliseconds);    this is used to determine the remaining interval between frames */
comment|/* settimer is called to inform the application that it should set a timer;    when the timer is triggered the app must call mng_display_resume */
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_setcb_gettickcount
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_gettickcount
name|fProc
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_setcb_settimer
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_settimer
name|fProc
parameter_list|)
function_decl|;
comment|/* color management callbacks */
comment|/* called to transmit color management information to the application */
comment|/* these are only used when you #define MNG_APP_CMS */
ifdef|#
directive|ifdef
name|MNG_APP_CMS
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_setcb_processgamma
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_processgamma
name|fProc
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_setcb_processchroma
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_processchroma
name|fProc
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_setcb_processsrgb
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_processsrgb
name|fProc
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_setcb_processiccp
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_processiccp
name|fProc
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_setcb_processarow
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_processarow
name|fProc
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* MNG_APP_CMS */
endif|#
directive|endif
comment|/* MNG_SUPPORT_DISPLAY */
comment|/* release push data callback */
comment|/* used when the app pushes data into libmng (as opposed to libmng pulling it)    and relinquishes ownership of the pushed data-buffer, but *does* want to    release (free) the buffer itself once libmng has finished processing it */
ifdef|#
directive|ifdef
name|MNG_SUPPORT_READ
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_setcb_releasedata
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_releasedata
name|fProc
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* ************************************************************************** */
comment|/* *                                                                        * */
comment|/* *  Callback get functions                                                * */
comment|/* *                                                                        * */
comment|/* ************************************************************************** */
comment|/* see _setcb_ */
ifndef|#
directive|ifndef
name|MNG_INTERNAL_MEMMNGMT
name|MNG_EXT
name|mng_memalloc
name|MNG_DECL
name|mng_getcb_memalloc
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_memfree
name|MNG_DECL
name|mng_getcb_memfree
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* see _setcb_ */
ifdef|#
directive|ifdef
name|MNG_SUPPORT_READ
name|MNG_EXT
name|mng_releasedata
name|MNG_DECL
name|mng_getcb_releasedata
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* see _setcb_ */
if|#
directive|if
name|defined
argument_list|(
name|MNG_SUPPORT_READ
argument_list|)
operator|||
name|defined
argument_list|(
name|MNG_WRITE_SUPPORT
argument_list|)
ifndef|#
directive|ifndef
name|MNG_NO_OPEN_CLOSE_STREAM
name|MNG_EXT
name|mng_openstream
name|MNG_DECL
name|mng_getcb_openstream
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_closestream
name|MNG_DECL
name|mng_getcb_closestream
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* see _setcb_ */
ifdef|#
directive|ifdef
name|MNG_SUPPORT_READ
name|MNG_EXT
name|mng_readdata
name|MNG_DECL
name|mng_getcb_readdata
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* see _setcb_ */
ifdef|#
directive|ifdef
name|MNG_SUPPORT_WRITE
name|MNG_EXT
name|mng_writedata
name|MNG_DECL
name|mng_getcb_writedata
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* see _setcb_ */
name|MNG_EXT
name|mng_errorproc
name|MNG_DECL
name|mng_getcb_errorproc
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
comment|/* see _setcb_ */
ifdef|#
directive|ifdef
name|MNG_SUPPORT_TRACE
name|MNG_EXT
name|mng_traceproc
name|MNG_DECL
name|mng_getcb_traceproc
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* see _setcb_ */
ifdef|#
directive|ifdef
name|MNG_SUPPORT_READ
name|MNG_EXT
name|mng_processheader
name|MNG_DECL
name|mng_getcb_processheader
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_processtext
name|MNG_DECL
name|mng_getcb_processtext
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_processsave
name|MNG_DECL
name|mng_getcb_processsave
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_processseek
name|MNG_DECL
name|mng_getcb_processseek
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_processneed
name|MNG_DECL
name|mng_getcb_processneed
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_processunknown
name|MNG_DECL
name|mng_getcb_processunknown
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_processterm
name|MNG_DECL
name|mng_getcb_processterm
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* see _setcb_ */
ifdef|#
directive|ifdef
name|MNG_SUPPORT_DISPLAY
name|MNG_EXT
name|mng_getcanvasline
name|MNG_DECL
name|mng_getcb_getcanvasline
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_getbkgdline
name|MNG_DECL
name|mng_getcb_getbkgdline
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_getalphaline
name|MNG_DECL
name|mng_getcb_getalphaline
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_refresh
name|MNG_DECL
name|mng_getcb_refresh
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
comment|/* see _setcb_ */
name|MNG_EXT
name|mng_gettickcount
name|MNG_DECL
name|mng_getcb_gettickcount
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_settimer
name|MNG_DECL
name|mng_getcb_settimer
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
comment|/* see _setcb_ */
ifdef|#
directive|ifdef
name|MNG_APP_CMS
name|MNG_EXT
name|mng_processgamma
name|MNG_DECL
name|mng_getcb_processgamma
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_processchroma
name|MNG_DECL
name|mng_getcb_processchroma
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_processsrgb
name|MNG_DECL
name|mng_getcb_processsrgb
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_processiccp
name|MNG_DECL
name|mng_getcb_processiccp
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_processarow
name|MNG_DECL
name|mng_getcb_processarow
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* MNG_APP_CMS */
endif|#
directive|endif
comment|/* MNG_SUPPORT_DISPLAY */
comment|/* ************************************************************************** */
comment|/* *                                                                        * */
comment|/* *  Property set functions                                                * */
comment|/* *                                                                        * */
comment|/* ************************************************************************** */
comment|/* Application data pointer */
comment|/* provided for application use; not used by the library */
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_set_userdata
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_ptr
name|pUserdata
parameter_list|)
function_decl|;
comment|/* The style of the drawing-& background-canvas */
comment|/* only used for displaying images */
comment|/* both are initially set to 24-bit RGB (eg. 8-bit per channel) */
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_set_canvasstyle
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iStyle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_set_bkgdstyle
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iStyle
parameter_list|)
function_decl|;
comment|/* The default background color */
comment|/* only used if the getbkgdline callback is not defined */
comment|/* for initially painting the canvas and restoring (part of) the background */
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_set_bgcolor
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint16
name|iRed
parameter_list|,
name|mng_uint16
name|iGreen
parameter_list|,
name|mng_uint16
name|iBlue
parameter_list|)
function_decl|;
comment|/* Indicates preferred use of the bKGD chunk for PNG images */
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_set_usebkgd
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_bool
name|bUseBKGD
parameter_list|)
function_decl|;
comment|/* Indicates storage of read chunks */
comment|/* only useful if you #define mng_store_chunks */
comment|/* can be used to dynamically change storage management */
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_set_storechunks
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_bool
name|bStorechunks
parameter_list|)
function_decl|;
comment|/* Indicates breaks requested when processing SAVE/SEEK */
comment|/* set this to let the app handle section breaks; the library will return    MNG_NEEDSECTIONWAIT return-codes for each SEEK chunk */
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_set_sectionbreaks
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_bool
name|bSectionbreaks
parameter_list|)
function_decl|;
comment|/* Indicates storage of playback info (ON by default!) */
comment|/* can be used to turn off caching of playback info; this is useful to    specifically optimize MNG-video playback; note that if caching is turned off    LOOP chunks will be flagged as errors! TERM chunks will be ignored and only    passed to the processterm() callback if it is defined by the app; also, this    feature can only be used with mng_readdisplay(); mng_read(),    mng_display_reset() and mng_display_goxxxx() will return an error;    once this option is turned off it can't be turned on for the same stream!!! */
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_set_cacheplayback
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_bool
name|bCacheplayback
parameter_list|)
function_decl|;
comment|/* Indicates automatic progressive refreshes for large images (ON by default!) */
comment|/* turn this off if you do not want intermittent painting while a large image    is being read. useful if the input-stream comes from a fast medium, such    as a local harddisk */
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_set_doprogressive
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_bool
name|bDoProgressive
parameter_list|)
function_decl|;
comment|/* Indicates existence and required checking of the CRC in input streams,    and generation in output streams */
comment|/* !!!! Use this ONLY if you know what you are doing !!!! */
comment|/* The value is a combination of the following flags:    0x0000001 = CRC is present in the input stream    0x0000002 = CRC must be generated in the output stream    0x0000010 = CRC should be checked for ancillary chunks    0x0000020 = a faulty CRC for ancillary chunks generates a warning only    0x0000040 = a faulty CRC for ancillary chunks generates an error    0x0000100 = CRC should be checked for critical chunks    0x0000200 = a faulty CRC for critical chunks generates a warning only    0x0000400 = a faulty CRC for critical chunks generates an error     The default is 0x00000533 = CRC present in input streams; should be checked;                                warning for ancillary chunks; error for critical                                chunks; generate CRC for output streams     Note that some combinations are meaningless; eg. if the CRC is not present    it won't do any good to turn the checking flags on; if a checking flag    is off, it doesn't do any good to ask for generation of warnings or errors.    Also libmng will generate either an error or a warning, not both,    so if you specify both the default will be to generate an error!    The only useful combinations for input are 331, 551, 351, 531, 0, 301, 501    and optionally 031 and 051, but only checking ancillary chunks and not    critical chunks is generally not a very good idea!!!    If you've also writing these values should be combined with 0x02 if    CRC's are required in the output stream    */
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_set_crcmode
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iCrcmode
parameter_list|)
function_decl|;
comment|/* Color-management necessaries */
comment|/*     *************************************************************************                  !!!!!!!! THIS NEXT BIT IS IMPORTANT !!!!!!!!!     *************************************************************************      If you have defined MNG_FULL_CMS (and are using lcms), you will have to     think hard about the following routines.      lcms requires 2 profiles to work off the differences in the input-image     and the output-device. The ICC profile for the input-image will be     embedded within it to reflect its color-characteristics, but the output     profile depends on the output-device, which is something only *YOU* know     about. sRGB (standard RGB) is common for x86 compatible environments     (eg. Windows, Linux and some others)      If you are compiling for a sRGB compliant system you probably won't have     to do anything special. (unless you want to of course)      If you are compiling for a non-sRGB compliant system     (eg. SGI, Mac, Next, others...)     you *MUST* define a proper ICC profile for the generic output-device     associated with that platform.      In either event, you may also want to offer an option to your users to     set the profile manually, or, if you know how, set it from a     system-defined default.      TO RECAP: for sRGB systems (Windows, Linux) no action required!               for non-sRGB systems (SGI, Mac, Next) ACTION REQUIRED!      Please visit http://www.srgb.com, http://www.color.org and     http://www.littlecms.com for more info.      *************************************************************************                  !!!!!!!! THE BIT ABOVE IS IMPORTANT !!!!!!!!!     ************************************************************************* */
comment|/* mng_set_srgb tells libmng if it's running on a sRGB compliant system or not    the default is already set to MNG_TRUE */
comment|/* mng_set_outputprofile, mng_set_outputprofile2, mng_set_outputsrgb    are used to set the default profile describing the output-device    by default it is already initialized with an sRGB profile */
comment|/* mng_set_srgbprofile, mng_set_srgbprofile2, mng_set_srgbimplicit    are used to set the default profile describing a standard sRGB device    this is used when the input-image is tagged only as being sRGB, but the    output-device is defined as not being sRGB compliant    by default it is already initialized with a standard sRGB profile */
if|#
directive|if
name|defined
argument_list|(
name|MNG_SUPPORT_DISPLAY
argument_list|)
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_set_srgb
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_bool
name|bIssRGB
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_set_outputprofile
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_pchar
name|zFilename
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_set_outputprofile2
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iProfilesize
parameter_list|,
name|mng_ptr
name|pProfile
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_set_outputsrgb
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_set_srgbprofile
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_pchar
name|zFilename
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_set_srgbprofile2
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iProfilesize
parameter_list|,
name|mng_ptr
name|pProfile
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_set_srgbimplicit
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
endif|#
directive|endif
if|#
directive|if
name|defined
argument_list|(
name|MNG_FULL_CMS
argument_list|)
operator|||
name|defined
argument_list|(
name|MNG_GAMMA_ONLY
argument_list|)
operator|||
name|defined
argument_list|(
name|MNG_APP_CMS
argument_list|)
comment|/* Gamma settings */
comment|/* ... blabla (explain gamma processing a little; eg. formula& stuff) ... */
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_set_viewgamma
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_float
name|dGamma
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_set_displaygamma
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_float
name|dGamma
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_set_dfltimggamma
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_float
name|dGamma
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_set_viewgammaint
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iGamma
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_set_displaygammaint
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iGamma
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_set_dfltimggammaint
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iGamma
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|MNG_SKIP_MAXCANVAS
comment|/* Ultimate clipping size */
comment|/* used to limit extreme graphics from overloading the system */
comment|/* if a graphic exceeds these limits a warning is issued, which can    be ignored by the app (using the errorproc callback). in that case    the library will use these settings to clip the input graphic, and    the app's canvas must account for this */
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_set_maxcanvaswidth
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iMaxwidth
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_set_maxcanvasheight
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iMaxheight
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_set_maxcanvassize
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iMaxwidth
parameter_list|,
name|mng_uint32
name|iMaxheight
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* ZLIB default compression parameters */
comment|/* these are used when writing out chunks */
comment|/* they are also used when compressing PNG image-data or JNG alpha-data;    in this case you can set them just before calling mng_putimgdata_ihdr */
comment|/* set to your liking; usually the defaults will suffice though! */
comment|/* check the documentation for ZLIB for details on these parameters */
ifdef|#
directive|ifdef
name|MNG_INCLUDE_ZLIB
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_set_zlib_level
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_int32
name|iZlevel
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_set_zlib_method
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_int32
name|iZmethod
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_set_zlib_windowbits
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_int32
name|iZwindowbits
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_set_zlib_memlevel
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_int32
name|iZmemlevel
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_set_zlib_strategy
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_int32
name|iZstrategy
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_set_zlib_maxidat
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iMaxIDAT
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* MNG_INCLUDE_ZLIB */
comment|/* JNG default compression parameters (based on IJG code) */
comment|/* these are used when compressing JNG image-data; so you can set them    just before calling mng_putimgdata_jhdr */
comment|/* set to your liking; usually the defaults will suffice though! */
comment|/* check the documentation for IJGSRC6B for details on these parameters */
ifdef|#
directive|ifdef
name|MNG_INCLUDE_JNG
ifdef|#
directive|ifdef
name|MNG_INCLUDE_IJG6B
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_set_jpeg_dctmethod
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mngjpeg_dctmethod
name|eJPEGdctmethod
parameter_list|)
function_decl|;
endif|#
directive|endif
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_set_jpeg_quality
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_int32
name|iJPEGquality
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_set_jpeg_smoothing
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_int32
name|iJPEGsmoothing
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_set_jpeg_progressive
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_bool
name|bJPEGprogressive
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_set_jpeg_optimized
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_bool
name|bJPEGoptimized
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_set_jpeg_maxjdat
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iMaxJDAT
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* MNG_INCLUDE_JNG */
comment|/* Suspension-mode setting */
comment|/* use this to activate the internal suspension-buffer to improve    read-suspension processing */
comment|/* TODO: write-suspension ??? */
if|#
directive|if
name|defined
argument_list|(
name|MNG_SUPPORT_READ
argument_list|)
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_set_suspensionmode
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_bool
name|bSuspensionmode
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* Speed setting */
comment|/* use this to influence the display-speed of animations */
if|#
directive|if
name|defined
argument_list|(
name|MNG_SUPPORT_DISPLAY
argument_list|)
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_set_speed
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_speedtype
name|iSpeed
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* ************************************************************************** */
comment|/* *                                                                        * */
comment|/* *  Property get functions                                                * */
comment|/* *                                                                        * */
comment|/* ************************************************************************** */
comment|/* see _set_ */
name|MNG_EXT
name|mng_ptr
name|MNG_DECL
name|mng_get_userdata
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
comment|/* Network Graphic header details */
comment|/* these get filled once the graphics header is processed,    so they are available in the processheader callback; before that    they are zeroed out and imagetype is set to it_unknown */
comment|/* this might be a good point for the app to initialize the drawing-canvas! */
comment|/* note that some fields are only set for the first(!) header-chunk:    MNG/MHDR (imagetype = mng_it_mng) - ticks thru simplicity    PNG/IHDR (imagetype = mng_it_png) - bitdepth thru interlace    JNG/JHDR (imagetype = mng_it_jng) - bitdepth thru compression&                                        interlace thru alphainterlace */
name|MNG_EXT
name|mng_imgtype
name|MNG_DECL
name|mng_get_sigtype
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_imgtype
name|MNG_DECL
name|mng_get_imagetype
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_uint32
name|MNG_DECL
name|mng_get_imagewidth
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_uint32
name|MNG_DECL
name|mng_get_imageheight
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_uint32
name|MNG_DECL
name|mng_get_ticks
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_uint32
name|MNG_DECL
name|mng_get_framecount
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_uint32
name|MNG_DECL
name|mng_get_layercount
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_uint32
name|MNG_DECL
name|mng_get_playtime
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_uint32
name|MNG_DECL
name|mng_get_simplicity
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_uint8
name|MNG_DECL
name|mng_get_bitdepth
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_uint8
name|MNG_DECL
name|mng_get_colortype
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_uint8
name|MNG_DECL
name|mng_get_compression
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_uint8
name|MNG_DECL
name|mng_get_filter
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_uint8
name|MNG_DECL
name|mng_get_interlace
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_uint8
name|MNG_DECL
name|mng_get_alphabitdepth
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_uint8
name|MNG_DECL
name|mng_get_alphacompression
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_uint8
name|MNG_DECL
name|mng_get_alphafilter
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_uint8
name|MNG_DECL
name|mng_get_alphainterlace
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
comment|/* indicates the predicted alpha-depth required to properly display the image */
comment|/* gets set once the graphics header is processed and is available in the    processheader callback for any type of input-image (PNG, JNG or MNG) */
comment|/* possible values are 0,1,2,4,8,16    0  = no transparency required    1  = on/off transparency required (alpha-values are 0 or 2^bit_depth-1)    2+ = semi-transparency required (values will be scaled to the bitdepth of the                                     canvasstyle supplied by the application) */
name|MNG_EXT
name|mng_uint8
name|MNG_DECL
name|mng_get_alphadepth
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
comment|/* defines whether a refresh() callback is called for an interlace pass (PNG)    or progressive scan (JNG) */
comment|/* returns the interlace pass number for PNG or a fabricated pass number for JNG;    returns 0 in all other cases */
comment|/* only useful if the image_type = mng_it_png or mng_it_jng and if the image    is actually interlaced (PNG) or progressive (JNG) */
ifdef|#
directive|ifdef
name|MNG_SUPPORT_DISPLAY
name|MNG_EXT
name|mng_uint8
name|MNG_DECL
name|mng_get_refreshpass
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* see _set_ */
name|MNG_EXT
name|mng_uint32
name|MNG_DECL
name|mng_get_canvasstyle
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_uint32
name|MNG_DECL
name|mng_get_bkgdstyle
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
comment|/* see _set_ */
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_get_bgcolor
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint16
modifier|*
name|iRed
parameter_list|,
name|mng_uint16
modifier|*
name|iGreen
parameter_list|,
name|mng_uint16
modifier|*
name|iBlue
parameter_list|)
function_decl|;
comment|/* see _set_ */
name|MNG_EXT
name|mng_bool
name|MNG_DECL
name|mng_get_usebkgd
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
comment|/* see _set_ */
name|MNG_EXT
name|mng_bool
name|MNG_DECL
name|mng_get_storechunks
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
comment|/* see _set_ */
name|MNG_EXT
name|mng_bool
name|MNG_DECL
name|mng_get_sectionbreaks
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
comment|/* see _set_ */
name|MNG_EXT
name|mng_bool
name|MNG_DECL
name|mng_get_cacheplayback
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
comment|/* see _set_ */
name|MNG_EXT
name|mng_bool
name|MNG_DECL
name|mng_get_doprogressive
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
comment|/* see _set_ */
name|MNG_EXT
name|mng_uint32
name|MNG_DECL
name|mng_get_crcmode
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
comment|/* see _set_ */
if|#
directive|if
name|defined
argument_list|(
name|MNG_SUPPORT_DISPLAY
argument_list|)
operator|&&
name|defined
argument_list|(
name|MNG_FULL_CMS
argument_list|)
name|MNG_EXT
name|mng_bool
name|MNG_DECL
name|mng_get_srgb
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* see _set_ */
name|MNG_EXT
name|mng_float
name|MNG_DECL
name|mng_get_viewgamma
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_float
name|MNG_DECL
name|mng_get_displaygamma
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_float
name|MNG_DECL
name|mng_get_dfltimggamma
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_uint32
name|MNG_DECL
name|mng_get_viewgammaint
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_uint32
name|MNG_DECL
name|mng_get_displaygammaint
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_uint32
name|MNG_DECL
name|mng_get_dfltimggammaint
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
ifndef|#
directive|ifndef
name|MNG_SKIP_MAXCANVAS
comment|/* see _set_ */
name|MNG_EXT
name|mng_uint32
name|MNG_DECL
name|mng_get_maxcanvaswidth
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_uint32
name|MNG_DECL
name|mng_get_maxcanvasheight
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* see _set_ */
ifdef|#
directive|ifdef
name|MNG_INCLUDE_ZLIB
name|MNG_EXT
name|mng_int32
name|MNG_DECL
name|mng_get_zlib_level
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_int32
name|MNG_DECL
name|mng_get_zlib_method
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_int32
name|MNG_DECL
name|mng_get_zlib_windowbits
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_int32
name|MNG_DECL
name|mng_get_zlib_memlevel
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_int32
name|MNG_DECL
name|mng_get_zlib_strategy
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_uint32
name|MNG_DECL
name|mng_get_zlib_maxidat
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* MNG_INCLUDE_ZLIB */
comment|/* see _set_ */
ifdef|#
directive|ifdef
name|MNG_INCLUDE_JNG
ifdef|#
directive|ifdef
name|MNG_INCLUDE_IJG6B
name|MNG_EXT
name|mngjpeg_dctmethod
name|MNG_DECL
name|mng_get_jpeg_dctmethod
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
endif|#
directive|endif
name|MNG_EXT
name|mng_int32
name|MNG_DECL
name|mng_get_jpeg_quality
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_int32
name|MNG_DECL
name|mng_get_jpeg_smoothing
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_bool
name|MNG_DECL
name|mng_get_jpeg_progressive
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_bool
name|MNG_DECL
name|mng_get_jpeg_optimized
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_uint32
name|MNG_DECL
name|mng_get_jpeg_maxjdat
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* MNG_INCLUDE_JNG */
comment|/* see _set_  */
if|#
directive|if
name|defined
argument_list|(
name|MNG_SUPPORT_READ
argument_list|)
name|MNG_EXT
name|mng_bool
name|MNG_DECL
name|mng_get_suspensionmode
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* see _set_  */
if|#
directive|if
name|defined
argument_list|(
name|MNG_SUPPORT_DISPLAY
argument_list|)
name|MNG_EXT
name|mng_speedtype
name|MNG_DECL
name|mng_get_speed
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* Image-level */
comment|/* this can be used inside the processtext callback to determine the level of    text of the image being processed; the value 1 is returned for top-level    texts, and the value 2 for a text inside an embedded image inside a MNG */
name|MNG_EXT
name|mng_uint32
name|MNG_DECL
name|mng_get_imagelevel
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
comment|/* BACK info */
comment|/* can be used to retrieve the color& mandatory values for the last processed    BACK chunk of a MNG (will fail for other image-types);    if no BACK chunk was processed yet, it will return all zeroes */
ifdef|#
directive|ifdef
name|MNG_SUPPORT_DISPLAY
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_get_lastbackchunk
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint16
modifier|*
name|iRed
parameter_list|,
name|mng_uint16
modifier|*
name|iGreen
parameter_list|,
name|mng_uint16
modifier|*
name|iBlue
parameter_list|,
name|mng_uint8
modifier|*
name|iMandatory
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* SEEK info */
comment|/* can be used to retrieve the segmentname of the last processed SEEK chunk;    if no SEEK chunk was processed or its segmentname was empty, the function    will return an empty string; the provided buffer must be at least 80 bytes!! */
ifdef|#
directive|ifdef
name|MNG_SUPPORT_DISPLAY
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_get_lastseekname
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_pchar
name|zSegmentname
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* FRAM info */
comment|/* can be used to retrieve the current FRAM delay; this may be useful when    retrieving a stream of frames with their corresponding delays by "fake"    reading and displaying the file */
ifdef|#
directive|ifdef
name|MNG_SUPPORT_DISPLAY
name|MNG_EXT
name|mng_uint32
name|MNG_DECL
name|mng_get_currframdelay
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* Display status variables */
comment|/* these get filled& updated during display processing */
comment|/* starttime is the tickcount at the start of displaying the animation */
comment|/* runtime is the actual number of millisecs since the start of the animation */
comment|/* currentframe, currentlayer& currentplaytime indicate the current    frame/layer/playtime(msecs) in the animation (these keep increasing;    even after the animation loops back to the TERM chunk) */
comment|/* totalframes, totallayers& totalplaytime are filled after a complete run    of an animation (eg. at MEND); they are also valid after just reading the MNG */
ifdef|#
directive|ifdef
name|MNG_SUPPORT_DISPLAY
name|MNG_EXT
name|mng_uint32
name|MNG_DECL
name|mng_get_starttime
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_uint32
name|MNG_DECL
name|mng_get_runtime
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
ifndef|#
directive|ifndef
name|MNG_NO_CURRENT_INFO
name|MNG_EXT
name|mng_uint32
name|MNG_DECL
name|mng_get_currentframe
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_uint32
name|MNG_DECL
name|mng_get_currentlayer
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_uint32
name|MNG_DECL
name|mng_get_currentplaytime
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_uint32
name|MNG_DECL
name|mng_get_totalframes
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_uint32
name|MNG_DECL
name|mng_get_totallayers
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_uint32
name|MNG_DECL
name|mng_get_totalplaytime
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* Status variables */
comment|/* these indicate the internal state of the library */
comment|/* most indicate exactly what you would expect -    status_error:        true if the last function call returned an errorcode    status_reading:      true if the library is (still) reading an image    status_suspendbreak: true if the library has suspended for "I/O"    status_creating:     true if the library is in the middle of creating an image    status_writing:      true if the library is in the middle of writing an image    status_displaying:   true if the library is displaying an image    status_running:      true if display processing is active (eg. not frozen or reset)    status_timerbreak:   true if the library has suspended for a "timer-break"    status_dynamic:      true if the library encountered an evNT chunk in the MNG    status_runningevent: true if the library is processing an external event */
comment|/* eg. mng_readdisplay() will turn the reading, displaying and running status on;    when EOF is reached the reading status will be turned off */
name|MNG_EXT
name|mng_bool
name|MNG_DECL
name|mng_status_error
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|MNG_SUPPORT_READ
name|MNG_EXT
name|mng_bool
name|MNG_DECL
name|mng_status_reading
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_bool
name|MNG_DECL
name|mng_status_suspendbreak
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
endif|#
directive|endif
ifdef|#
directive|ifdef
name|MNG_SUPPORT_WRITE
name|MNG_EXT
name|mng_bool
name|MNG_DECL
name|mng_status_creating
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_bool
name|MNG_DECL
name|mng_status_writing
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
endif|#
directive|endif
ifdef|#
directive|ifdef
name|MNG_SUPPORT_DISPLAY
name|MNG_EXT
name|mng_bool
name|MNG_DECL
name|mng_status_displaying
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_bool
name|MNG_DECL
name|mng_status_running
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_bool
name|MNG_DECL
name|mng_status_timerbreak
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
endif|#
directive|endif
ifdef|#
directive|ifdef
name|MNG_SUPPORT_DYNAMICMNG
name|MNG_EXT
name|mng_bool
name|MNG_DECL
name|mng_status_dynamic
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_bool
name|MNG_DECL
name|mng_status_runningevent
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* ************************************************************************** */
comment|/* *                                                                        * */
comment|/* *  Chunk access functions                                                * */
comment|/* *                                                                        * */
comment|/* ************************************************************************** */
ifdef|#
directive|ifdef
name|MNG_ACCESS_CHUNKS
comment|/* ************************************************************************** */
comment|/* use this to iterate the stored chunks */
comment|/* requires MNG_ACCESS_CHUNKS& MNG_STORE_CHUNKS */
comment|/* starts from the supplied chunk-index-nr; the first chunk has index 0!! */
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_iterate_chunks
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iChunkseq
parameter_list|,
name|mng_iteratechunk
name|fProc
parameter_list|)
function_decl|;
comment|/* use the next function inside your 'iteratechunk' callback to copy    the given chunk to a new mng you are creating */
comment|/* the 'out' handle should be in 'create' status! */
ifdef|#
directive|ifdef
name|MNG_SUPPORT_WRITE
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_copy_chunk
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_handle
name|hHandleOut
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* ************************************************************************** */
comment|/* use these to get chunk data from within the callback in iterate_chunks */
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_ihdr
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_uint32
modifier|*
name|iWidth
parameter_list|,
name|mng_uint32
modifier|*
name|iHeight
parameter_list|,
name|mng_uint8
modifier|*
name|iBitdepth
parameter_list|,
name|mng_uint8
modifier|*
name|iColortype
parameter_list|,
name|mng_uint8
modifier|*
name|iCompression
parameter_list|,
name|mng_uint8
modifier|*
name|iFilter
parameter_list|,
name|mng_uint8
modifier|*
name|iInterlace
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_plte
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_uint32
modifier|*
name|iCount
parameter_list|,
name|mng_palette8
modifier|*
name|aPalette
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_idat
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_uint32
modifier|*
name|iRawlen
parameter_list|,
name|mng_ptr
modifier|*
name|pRawdata
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_trns
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_bool
modifier|*
name|bEmpty
parameter_list|,
name|mng_bool
modifier|*
name|bGlobal
parameter_list|,
name|mng_uint8
modifier|*
name|iType
parameter_list|,
name|mng_uint32
modifier|*
name|iCount
parameter_list|,
name|mng_uint8arr
modifier|*
name|aAlphas
parameter_list|,
name|mng_uint16
modifier|*
name|iGray
parameter_list|,
name|mng_uint16
modifier|*
name|iRed
parameter_list|,
name|mng_uint16
modifier|*
name|iGreen
parameter_list|,
name|mng_uint16
modifier|*
name|iBlue
parameter_list|,
name|mng_uint32
modifier|*
name|iRawlen
parameter_list|,
name|mng_uint8arr
modifier|*
name|aRawdata
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_gama
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_bool
modifier|*
name|bEmpty
parameter_list|,
name|mng_uint32
modifier|*
name|iGamma
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_chrm
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_bool
modifier|*
name|bEmpty
parameter_list|,
name|mng_uint32
modifier|*
name|iWhitepointx
parameter_list|,
name|mng_uint32
modifier|*
name|iWhitepointy
parameter_list|,
name|mng_uint32
modifier|*
name|iRedx
parameter_list|,
name|mng_uint32
modifier|*
name|iRedy
parameter_list|,
name|mng_uint32
modifier|*
name|iGreenx
parameter_list|,
name|mng_uint32
modifier|*
name|iGreeny
parameter_list|,
name|mng_uint32
modifier|*
name|iBluex
parameter_list|,
name|mng_uint32
modifier|*
name|iBluey
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_srgb
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_bool
modifier|*
name|bEmpty
parameter_list|,
name|mng_uint8
modifier|*
name|iRenderingintent
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_iccp
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_bool
modifier|*
name|bEmpty
parameter_list|,
name|mng_uint32
modifier|*
name|iNamesize
parameter_list|,
name|mng_pchar
modifier|*
name|zName
parameter_list|,
name|mng_uint8
modifier|*
name|iCompression
parameter_list|,
name|mng_uint32
modifier|*
name|iProfilesize
parameter_list|,
name|mng_ptr
modifier|*
name|pProfile
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_text
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_uint32
modifier|*
name|iKeywordsize
parameter_list|,
name|mng_pchar
modifier|*
name|zKeyword
parameter_list|,
name|mng_uint32
modifier|*
name|iTextsize
parameter_list|,
name|mng_pchar
modifier|*
name|zText
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_ztxt
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_uint32
modifier|*
name|iKeywordsize
parameter_list|,
name|mng_pchar
modifier|*
name|zKeyword
parameter_list|,
name|mng_uint8
modifier|*
name|iCompression
parameter_list|,
name|mng_uint32
modifier|*
name|iTextsize
parameter_list|,
name|mng_pchar
modifier|*
name|zText
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_itxt
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_uint32
modifier|*
name|iKeywordsize
parameter_list|,
name|mng_pchar
modifier|*
name|zKeyword
parameter_list|,
name|mng_uint8
modifier|*
name|iCompressionflag
parameter_list|,
name|mng_uint8
modifier|*
name|iCompressionmethod
parameter_list|,
name|mng_uint32
modifier|*
name|iLanguagesize
parameter_list|,
name|mng_pchar
modifier|*
name|zLanguage
parameter_list|,
name|mng_uint32
modifier|*
name|iTranslationsize
parameter_list|,
name|mng_pchar
modifier|*
name|zTranslation
parameter_list|,
name|mng_uint32
modifier|*
name|iTextsize
parameter_list|,
name|mng_pchar
modifier|*
name|zText
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_bkgd
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_bool
modifier|*
name|bEmpty
parameter_list|,
name|mng_uint8
modifier|*
name|iType
parameter_list|,
name|mng_uint8
modifier|*
name|iIndex
parameter_list|,
name|mng_uint16
modifier|*
name|iGray
parameter_list|,
name|mng_uint16
modifier|*
name|iRed
parameter_list|,
name|mng_uint16
modifier|*
name|iGreen
parameter_list|,
name|mng_uint16
modifier|*
name|iBlue
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_phys
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_bool
modifier|*
name|bEmpty
parameter_list|,
name|mng_uint32
modifier|*
name|iSizex
parameter_list|,
name|mng_uint32
modifier|*
name|iSizey
parameter_list|,
name|mng_uint8
modifier|*
name|iUnit
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_sbit
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_bool
modifier|*
name|bEmpty
parameter_list|,
name|mng_uint8
modifier|*
name|iType
parameter_list|,
name|mng_uint8arr4
modifier|*
name|aBits
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_splt
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_bool
modifier|*
name|bEmpty
parameter_list|,
name|mng_uint32
modifier|*
name|iNamesize
parameter_list|,
name|mng_pchar
modifier|*
name|zName
parameter_list|,
name|mng_uint8
modifier|*
name|iSampledepth
parameter_list|,
name|mng_uint32
modifier|*
name|iEntrycount
parameter_list|,
name|mng_ptr
modifier|*
name|pEntries
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_hist
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_uint32
modifier|*
name|iEntrycount
parameter_list|,
name|mng_uint16arr
modifier|*
name|aEntries
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_time
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_uint16
modifier|*
name|iYear
parameter_list|,
name|mng_uint8
modifier|*
name|iMonth
parameter_list|,
name|mng_uint8
modifier|*
name|iDay
parameter_list|,
name|mng_uint8
modifier|*
name|iHour
parameter_list|,
name|mng_uint8
modifier|*
name|iMinute
parameter_list|,
name|mng_uint8
modifier|*
name|iSecond
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_mhdr
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_uint32
modifier|*
name|iWidth
parameter_list|,
name|mng_uint32
modifier|*
name|iHeight
parameter_list|,
name|mng_uint32
modifier|*
name|iTicks
parameter_list|,
name|mng_uint32
modifier|*
name|iLayercount
parameter_list|,
name|mng_uint32
modifier|*
name|iFramecount
parameter_list|,
name|mng_uint32
modifier|*
name|iPlaytime
parameter_list|,
name|mng_uint32
modifier|*
name|iSimplicity
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_loop
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_uint8
modifier|*
name|iLevel
parameter_list|,
name|mng_uint32
modifier|*
name|iRepeat
parameter_list|,
name|mng_uint8
modifier|*
name|iTermination
parameter_list|,
name|mng_uint32
modifier|*
name|iItermin
parameter_list|,
name|mng_uint32
modifier|*
name|iItermax
parameter_list|,
name|mng_uint32
modifier|*
name|iCount
parameter_list|,
name|mng_uint32p
modifier|*
name|pSignals
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_endl
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_uint8
modifier|*
name|iLevel
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_defi
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_uint16
modifier|*
name|iObjectid
parameter_list|,
name|mng_uint8
modifier|*
name|iDonotshow
parameter_list|,
name|mng_uint8
modifier|*
name|iConcrete
parameter_list|,
name|mng_bool
modifier|*
name|bHasloca
parameter_list|,
name|mng_int32
modifier|*
name|iXlocation
parameter_list|,
name|mng_int32
modifier|*
name|iYlocation
parameter_list|,
name|mng_bool
modifier|*
name|bHasclip
parameter_list|,
name|mng_int32
modifier|*
name|iLeftcb
parameter_list|,
name|mng_int32
modifier|*
name|iRightcb
parameter_list|,
name|mng_int32
modifier|*
name|iTopcb
parameter_list|,
name|mng_int32
modifier|*
name|iBottomcb
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_basi
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_uint32
modifier|*
name|iWidth
parameter_list|,
name|mng_uint32
modifier|*
name|iHeight
parameter_list|,
name|mng_uint8
modifier|*
name|iBitdepth
parameter_list|,
name|mng_uint8
modifier|*
name|iColortype
parameter_list|,
name|mng_uint8
modifier|*
name|iCompression
parameter_list|,
name|mng_uint8
modifier|*
name|iFilter
parameter_list|,
name|mng_uint8
modifier|*
name|iInterlace
parameter_list|,
name|mng_uint16
modifier|*
name|iRed
parameter_list|,
name|mng_uint16
modifier|*
name|iGreen
parameter_list|,
name|mng_uint16
modifier|*
name|iBlue
parameter_list|,
name|mng_uint16
modifier|*
name|iAlpha
parameter_list|,
name|mng_uint8
modifier|*
name|iViewable
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_clon
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_uint16
modifier|*
name|iSourceid
parameter_list|,
name|mng_uint16
modifier|*
name|iCloneid
parameter_list|,
name|mng_uint8
modifier|*
name|iClonetype
parameter_list|,
name|mng_uint8
modifier|*
name|iDonotshow
parameter_list|,
name|mng_uint8
modifier|*
name|iConcrete
parameter_list|,
name|mng_bool
modifier|*
name|bHasloca
parameter_list|,
name|mng_uint8
modifier|*
name|iLocationtype
parameter_list|,
name|mng_int32
modifier|*
name|iLocationx
parameter_list|,
name|mng_int32
modifier|*
name|iLocationy
parameter_list|)
function_decl|;
ifndef|#
directive|ifndef
name|MNG_SKIPCHUNK_PAST
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_past
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_uint16
modifier|*
name|iDestid
parameter_list|,
name|mng_uint8
modifier|*
name|iTargettype
parameter_list|,
name|mng_int32
modifier|*
name|iTargetx
parameter_list|,
name|mng_int32
modifier|*
name|iTargety
parameter_list|,
name|mng_uint32
modifier|*
name|iCount
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_past_src
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_uint32
name|iEntry
parameter_list|,
name|mng_uint16
modifier|*
name|iSourceid
parameter_list|,
name|mng_uint8
modifier|*
name|iComposition
parameter_list|,
name|mng_uint8
modifier|*
name|iOrientation
parameter_list|,
name|mng_uint8
modifier|*
name|iOffsettype
parameter_list|,
name|mng_int32
modifier|*
name|iOffsetx
parameter_list|,
name|mng_int32
modifier|*
name|iOffsety
parameter_list|,
name|mng_uint8
modifier|*
name|iBoundarytype
parameter_list|,
name|mng_int32
modifier|*
name|iBoundaryl
parameter_list|,
name|mng_int32
modifier|*
name|iBoundaryr
parameter_list|,
name|mng_int32
modifier|*
name|iBoundaryt
parameter_list|,
name|mng_int32
modifier|*
name|iBoundaryb
parameter_list|)
function_decl|;
endif|#
directive|endif
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_disc
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_uint32
modifier|*
name|iCount
parameter_list|,
name|mng_uint16p
modifier|*
name|pObjectids
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_back
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_uint16
modifier|*
name|iRed
parameter_list|,
name|mng_uint16
modifier|*
name|iGreen
parameter_list|,
name|mng_uint16
modifier|*
name|iBlue
parameter_list|,
name|mng_uint8
modifier|*
name|iMandatory
parameter_list|,
name|mng_uint16
modifier|*
name|iImageid
parameter_list|,
name|mng_uint8
modifier|*
name|iTile
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_fram
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_bool
modifier|*
name|bEmpty
parameter_list|,
name|mng_uint8
modifier|*
name|iMode
parameter_list|,
name|mng_uint32
modifier|*
name|iNamesize
parameter_list|,
name|mng_pchar
modifier|*
name|zName
parameter_list|,
name|mng_uint8
modifier|*
name|iChangedelay
parameter_list|,
name|mng_uint8
modifier|*
name|iChangetimeout
parameter_list|,
name|mng_uint8
modifier|*
name|iChangeclipping
parameter_list|,
name|mng_uint8
modifier|*
name|iChangesyncid
parameter_list|,
name|mng_uint32
modifier|*
name|iDelay
parameter_list|,
name|mng_uint32
modifier|*
name|iTimeout
parameter_list|,
name|mng_uint8
modifier|*
name|iBoundarytype
parameter_list|,
name|mng_int32
modifier|*
name|iBoundaryl
parameter_list|,
name|mng_int32
modifier|*
name|iBoundaryr
parameter_list|,
name|mng_int32
modifier|*
name|iBoundaryt
parameter_list|,
name|mng_int32
modifier|*
name|iBoundaryb
parameter_list|,
name|mng_uint32
modifier|*
name|iCount
parameter_list|,
name|mng_uint32p
modifier|*
name|pSyncids
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_move
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_uint16
modifier|*
name|iFirstid
parameter_list|,
name|mng_uint16
modifier|*
name|iLastid
parameter_list|,
name|mng_uint8
modifier|*
name|iMovetype
parameter_list|,
name|mng_int32
modifier|*
name|iMovex
parameter_list|,
name|mng_int32
modifier|*
name|iMovey
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_clip
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_uint16
modifier|*
name|iFirstid
parameter_list|,
name|mng_uint16
modifier|*
name|iLastid
parameter_list|,
name|mng_uint8
modifier|*
name|iCliptype
parameter_list|,
name|mng_int32
modifier|*
name|iClipl
parameter_list|,
name|mng_int32
modifier|*
name|iClipr
parameter_list|,
name|mng_int32
modifier|*
name|iClipt
parameter_list|,
name|mng_int32
modifier|*
name|iClipb
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_show
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_bool
modifier|*
name|bEmpty
parameter_list|,
name|mng_uint16
modifier|*
name|iFirstid
parameter_list|,
name|mng_uint16
modifier|*
name|iLastid
parameter_list|,
name|mng_uint8
modifier|*
name|iMode
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_term
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_uint8
modifier|*
name|iTermaction
parameter_list|,
name|mng_uint8
modifier|*
name|iIteraction
parameter_list|,
name|mng_uint32
modifier|*
name|iDelay
parameter_list|,
name|mng_uint32
modifier|*
name|iItermax
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_save
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_bool
modifier|*
name|bEmpty
parameter_list|,
name|mng_uint8
modifier|*
name|iOffsettype
parameter_list|,
name|mng_uint32
modifier|*
name|iCount
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_save_entry
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_uint32
name|iEntry
parameter_list|,
name|mng_uint8
modifier|*
name|iEntrytype
parameter_list|,
name|mng_uint32arr2
modifier|*
name|iOffset
parameter_list|,
name|mng_uint32arr2
modifier|*
name|iStarttime
parameter_list|,
name|mng_uint32
modifier|*
name|iLayernr
parameter_list|,
name|mng_uint32
modifier|*
name|iFramenr
parameter_list|,
name|mng_uint32
modifier|*
name|iNamesize
parameter_list|,
name|mng_pchar
modifier|*
name|zName
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_seek
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_uint32
modifier|*
name|iNamesize
parameter_list|,
name|mng_pchar
modifier|*
name|zName
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_expi
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_uint16
modifier|*
name|iSnapshotid
parameter_list|,
name|mng_uint32
modifier|*
name|iNamesize
parameter_list|,
name|mng_pchar
modifier|*
name|zName
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_fpri
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_uint8
modifier|*
name|iDeltatype
parameter_list|,
name|mng_uint8
modifier|*
name|iPriority
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_need
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_uint32
modifier|*
name|iKeywordssize
parameter_list|,
name|mng_pchar
modifier|*
name|zKeywords
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_phyg
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_bool
modifier|*
name|bEmpty
parameter_list|,
name|mng_uint32
modifier|*
name|iSizex
parameter_list|,
name|mng_uint32
modifier|*
name|iSizey
parameter_list|,
name|mng_uint8
modifier|*
name|iUnit
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_jhdr
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_uint32
modifier|*
name|iWidth
parameter_list|,
name|mng_uint32
modifier|*
name|iHeight
parameter_list|,
name|mng_uint8
modifier|*
name|iColortype
parameter_list|,
name|mng_uint8
modifier|*
name|iImagesampledepth
parameter_list|,
name|mng_uint8
modifier|*
name|iImagecompression
parameter_list|,
name|mng_uint8
modifier|*
name|iImageinterlace
parameter_list|,
name|mng_uint8
modifier|*
name|iAlphasampledepth
parameter_list|,
name|mng_uint8
modifier|*
name|iAlphacompression
parameter_list|,
name|mng_uint8
modifier|*
name|iAlphafilter
parameter_list|,
name|mng_uint8
modifier|*
name|iAlphainterlace
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_jdat
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_uint32
modifier|*
name|iRawlen
parameter_list|,
name|mng_ptr
modifier|*
name|pRawdata
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_jdaa
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_uint32
modifier|*
name|iRawlen
parameter_list|,
name|mng_ptr
modifier|*
name|pRawdata
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_dhdr
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_uint16
modifier|*
name|iObjectid
parameter_list|,
name|mng_uint8
modifier|*
name|iImagetype
parameter_list|,
name|mng_uint8
modifier|*
name|iDeltatype
parameter_list|,
name|mng_uint32
modifier|*
name|iBlockwidth
parameter_list|,
name|mng_uint32
modifier|*
name|iBlockheight
parameter_list|,
name|mng_uint32
modifier|*
name|iBlockx
parameter_list|,
name|mng_uint32
modifier|*
name|iBlocky
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_prom
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_uint8
modifier|*
name|iColortype
parameter_list|,
name|mng_uint8
modifier|*
name|iSampledepth
parameter_list|,
name|mng_uint8
modifier|*
name|iFilltype
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_pplt
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_uint8
modifier|*
name|iDeltatype
parameter_list|,
name|mng_uint32
modifier|*
name|iCount
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_pplt_entry
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_uint32
name|iEntry
parameter_list|,
name|mng_uint16
modifier|*
name|iRed
parameter_list|,
name|mng_uint16
modifier|*
name|iGreen
parameter_list|,
name|mng_uint16
modifier|*
name|iBlue
parameter_list|,
name|mng_uint16
modifier|*
name|iAlpha
parameter_list|,
name|mng_bool
modifier|*
name|bUsed
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_drop
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_uint32
modifier|*
name|iCount
parameter_list|,
name|mng_chunkidp
modifier|*
name|pChunknames
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_dbyk
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_chunkid
modifier|*
name|iChunkname
parameter_list|,
name|mng_uint8
modifier|*
name|iPolarity
parameter_list|,
name|mng_uint32
modifier|*
name|iKeywordssize
parameter_list|,
name|mng_pchar
modifier|*
name|zKeywords
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_ordr
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_uint32
modifier|*
name|iCount
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_ordr_entry
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_uint32
name|iEntry
parameter_list|,
name|mng_chunkid
modifier|*
name|iChunkname
parameter_list|,
name|mng_uint8
modifier|*
name|iOrdertype
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_magn
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_uint16
modifier|*
name|iFirstid
parameter_list|,
name|mng_uint16
modifier|*
name|iLastid
parameter_list|,
name|mng_uint16
modifier|*
name|iMethodX
parameter_list|,
name|mng_uint16
modifier|*
name|iMX
parameter_list|,
name|mng_uint16
modifier|*
name|iMY
parameter_list|,
name|mng_uint16
modifier|*
name|iML
parameter_list|,
name|mng_uint16
modifier|*
name|iMR
parameter_list|,
name|mng_uint16
modifier|*
name|iMT
parameter_list|,
name|mng_uint16
modifier|*
name|iMB
parameter_list|,
name|mng_uint16
modifier|*
name|iMethodY
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|MNG_INCLUDE_MPNG_PROPOSAL
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_mpng
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_uint32
modifier|*
name|iFramewidth
parameter_list|,
name|mng_uint32
modifier|*
name|iFrameheight
parameter_list|,
name|mng_uint16
modifier|*
name|iNumplays
parameter_list|,
name|mng_uint16
modifier|*
name|iTickspersec
parameter_list|,
name|mng_uint8
modifier|*
name|iCompressionmethod
parameter_list|,
name|mng_uint32
modifier|*
name|iCount
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_mpng_frame
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_uint32
name|iEntry
parameter_list|,
name|mng_uint32
modifier|*
name|iX
parameter_list|,
name|mng_uint32
modifier|*
name|iY
parameter_list|,
name|mng_uint32
modifier|*
name|iWidth
parameter_list|,
name|mng_uint32
modifier|*
name|iHeight
parameter_list|,
name|mng_int32
modifier|*
name|iXoffset
parameter_list|,
name|mng_int32
modifier|*
name|iYoffset
parameter_list|,
name|mng_uint16
modifier|*
name|iTicks
parameter_list|)
function_decl|;
endif|#
directive|endif
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_evnt
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_uint32
modifier|*
name|iCount
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_evnt_entry
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_uint32
name|iEntry
parameter_list|,
name|mng_uint8
modifier|*
name|iEventtype
parameter_list|,
name|mng_uint8
modifier|*
name|iMasktype
parameter_list|,
name|mng_int32
modifier|*
name|iLeft
parameter_list|,
name|mng_int32
modifier|*
name|iRight
parameter_list|,
name|mng_int32
modifier|*
name|iTop
parameter_list|,
name|mng_int32
modifier|*
name|iBottom
parameter_list|,
name|mng_uint16
modifier|*
name|iObjectid
parameter_list|,
name|mng_uint8
modifier|*
name|iIndex
parameter_list|,
name|mng_uint32
modifier|*
name|iSegmentnamesize
parameter_list|,
name|mng_pchar
modifier|*
name|zSegmentname
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getchunk_unknown
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_chunkid
modifier|*
name|iChunkname
parameter_list|,
name|mng_uint32
modifier|*
name|iRawlen
parameter_list|,
name|mng_ptr
modifier|*
name|pRawdata
parameter_list|)
function_decl|;
comment|/* ************************************************************************** */
ifdef|#
directive|ifdef
name|MNG_INCLUDE_WRITE_PROCS
comment|/* use these to create new chunks at the end of the chunk-list */
comment|/* requires at least MNG_ACCESS_CHUNKS (MNG_SUPPORT_WRITE may be nice too) */
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_ihdr
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iWidth
parameter_list|,
name|mng_uint32
name|iHeight
parameter_list|,
name|mng_uint8
name|iBitdepth
parameter_list|,
name|mng_uint8
name|iColortype
parameter_list|,
name|mng_uint8
name|iCompression
parameter_list|,
name|mng_uint8
name|iFilter
parameter_list|,
name|mng_uint8
name|iInterlace
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_plte
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iCount
parameter_list|,
name|mng_palette8
name|aPalette
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_idat
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iRawlen
parameter_list|,
name|mng_ptr
name|pRawdata
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_iend
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_trns
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_bool
name|bEmpty
parameter_list|,
name|mng_bool
name|bGlobal
parameter_list|,
name|mng_uint8
name|iType
parameter_list|,
name|mng_uint32
name|iCount
parameter_list|,
name|mng_uint8arr
name|aAlphas
parameter_list|,
name|mng_uint16
name|iGray
parameter_list|,
name|mng_uint16
name|iRed
parameter_list|,
name|mng_uint16
name|iGreen
parameter_list|,
name|mng_uint16
name|iBlue
parameter_list|,
name|mng_uint32
name|iRawlen
parameter_list|,
name|mng_uint8arr
name|aRawdata
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_gama
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_bool
name|bEmpty
parameter_list|,
name|mng_uint32
name|iGamma
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_chrm
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_bool
name|bEmpty
parameter_list|,
name|mng_uint32
name|iWhitepointx
parameter_list|,
name|mng_uint32
name|iWhitepointy
parameter_list|,
name|mng_uint32
name|iRedx
parameter_list|,
name|mng_uint32
name|iRedy
parameter_list|,
name|mng_uint32
name|iGreenx
parameter_list|,
name|mng_uint32
name|iGreeny
parameter_list|,
name|mng_uint32
name|iBluex
parameter_list|,
name|mng_uint32
name|iBluey
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_srgb
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_bool
name|bEmpty
parameter_list|,
name|mng_uint8
name|iRenderingintent
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_iccp
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_bool
name|bEmpty
parameter_list|,
name|mng_uint32
name|iNamesize
parameter_list|,
name|mng_pchar
name|zName
parameter_list|,
name|mng_uint8
name|iCompression
parameter_list|,
name|mng_uint32
name|iProfilesize
parameter_list|,
name|mng_ptr
name|pProfile
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_text
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iKeywordsize
parameter_list|,
name|mng_pchar
name|zKeyword
parameter_list|,
name|mng_uint32
name|iTextsize
parameter_list|,
name|mng_pchar
name|zText
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_ztxt
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iKeywordsize
parameter_list|,
name|mng_pchar
name|zKeyword
parameter_list|,
name|mng_uint8
name|iCompression
parameter_list|,
name|mng_uint32
name|iTextsize
parameter_list|,
name|mng_pchar
name|zText
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_itxt
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iKeywordsize
parameter_list|,
name|mng_pchar
name|zKeyword
parameter_list|,
name|mng_uint8
name|iCompressionflag
parameter_list|,
name|mng_uint8
name|iCompressionmethod
parameter_list|,
name|mng_uint32
name|iLanguagesize
parameter_list|,
name|mng_pchar
name|zLanguage
parameter_list|,
name|mng_uint32
name|iTranslationsize
parameter_list|,
name|mng_pchar
name|zTranslation
parameter_list|,
name|mng_uint32
name|iTextsize
parameter_list|,
name|mng_pchar
name|zText
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_bkgd
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_bool
name|bEmpty
parameter_list|,
name|mng_uint8
name|iType
parameter_list|,
name|mng_uint8
name|iIndex
parameter_list|,
name|mng_uint16
name|iGray
parameter_list|,
name|mng_uint16
name|iRed
parameter_list|,
name|mng_uint16
name|iGreen
parameter_list|,
name|mng_uint16
name|iBlue
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_phys
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_bool
name|bEmpty
parameter_list|,
name|mng_uint32
name|iSizex
parameter_list|,
name|mng_uint32
name|iSizey
parameter_list|,
name|mng_uint8
name|iUnit
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_sbit
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_bool
name|bEmpty
parameter_list|,
name|mng_uint8
name|iType
parameter_list|,
name|mng_uint8arr4
name|aBits
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_splt
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_bool
name|bEmpty
parameter_list|,
name|mng_uint32
name|iNamesize
parameter_list|,
name|mng_pchar
name|zName
parameter_list|,
name|mng_uint8
name|iSampledepth
parameter_list|,
name|mng_uint32
name|iEntrycount
parameter_list|,
name|mng_ptr
name|pEntries
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_hist
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iEntrycount
parameter_list|,
name|mng_uint16arr
name|aEntries
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_time
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint16
name|iYear
parameter_list|,
name|mng_uint8
name|iMonth
parameter_list|,
name|mng_uint8
name|iDay
parameter_list|,
name|mng_uint8
name|iHour
parameter_list|,
name|mng_uint8
name|iMinute
parameter_list|,
name|mng_uint8
name|iSecond
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_mhdr
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iWidth
parameter_list|,
name|mng_uint32
name|iHeight
parameter_list|,
name|mng_uint32
name|iTicks
parameter_list|,
name|mng_uint32
name|iLayercount
parameter_list|,
name|mng_uint32
name|iFramecount
parameter_list|,
name|mng_uint32
name|iPlaytime
parameter_list|,
name|mng_uint32
name|iSimplicity
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_mend
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_loop
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint8
name|iLevel
parameter_list|,
name|mng_uint32
name|iRepeat
parameter_list|,
name|mng_uint8
name|iTermination
parameter_list|,
name|mng_uint32
name|iItermin
parameter_list|,
name|mng_uint32
name|iItermax
parameter_list|,
name|mng_uint32
name|iCount
parameter_list|,
name|mng_uint32p
name|pSignals
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_endl
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint8
name|iLevel
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_defi
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint16
name|iObjectid
parameter_list|,
name|mng_uint8
name|iDonotshow
parameter_list|,
name|mng_uint8
name|iConcrete
parameter_list|,
name|mng_bool
name|bHasloca
parameter_list|,
name|mng_int32
name|iXlocation
parameter_list|,
name|mng_int32
name|iYlocation
parameter_list|,
name|mng_bool
name|bHasclip
parameter_list|,
name|mng_int32
name|iLeftcb
parameter_list|,
name|mng_int32
name|iRightcb
parameter_list|,
name|mng_int32
name|iTopcb
parameter_list|,
name|mng_int32
name|iBottomcb
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_basi
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iWidth
parameter_list|,
name|mng_uint32
name|iHeight
parameter_list|,
name|mng_uint8
name|iBitdepth
parameter_list|,
name|mng_uint8
name|iColortype
parameter_list|,
name|mng_uint8
name|iCompression
parameter_list|,
name|mng_uint8
name|iFilter
parameter_list|,
name|mng_uint8
name|iInterlace
parameter_list|,
name|mng_uint16
name|iRed
parameter_list|,
name|mng_uint16
name|iGreen
parameter_list|,
name|mng_uint16
name|iBlue
parameter_list|,
name|mng_uint16
name|iAlpha
parameter_list|,
name|mng_uint8
name|iViewable
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_clon
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint16
name|iSourceid
parameter_list|,
name|mng_uint16
name|iCloneid
parameter_list|,
name|mng_uint8
name|iClonetype
parameter_list|,
name|mng_uint8
name|iDonotshow
parameter_list|,
name|mng_uint8
name|iConcrete
parameter_list|,
name|mng_bool
name|bHasloca
parameter_list|,
name|mng_uint8
name|iLocationtype
parameter_list|,
name|mng_int32
name|iLocationx
parameter_list|,
name|mng_int32
name|iLocationy
parameter_list|)
function_decl|;
ifndef|#
directive|ifndef
name|MNG_SKIPCHUNK_PAST
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_past
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint16
name|iDestid
parameter_list|,
name|mng_uint8
name|iTargettype
parameter_list|,
name|mng_int32
name|iTargetx
parameter_list|,
name|mng_int32
name|iTargety
parameter_list|,
name|mng_uint32
name|iCount
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_past_src
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iEntry
parameter_list|,
name|mng_uint16
name|iSourceid
parameter_list|,
name|mng_uint8
name|iComposition
parameter_list|,
name|mng_uint8
name|iOrientation
parameter_list|,
name|mng_uint8
name|iOffsettype
parameter_list|,
name|mng_int32
name|iOffsetx
parameter_list|,
name|mng_int32
name|iOffsety
parameter_list|,
name|mng_uint8
name|iBoundarytype
parameter_list|,
name|mng_int32
name|iBoundaryl
parameter_list|,
name|mng_int32
name|iBoundaryr
parameter_list|,
name|mng_int32
name|iBoundaryt
parameter_list|,
name|mng_int32
name|iBoundaryb
parameter_list|)
function_decl|;
endif|#
directive|endif
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_disc
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iCount
parameter_list|,
name|mng_uint16p
name|pObjectids
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_back
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint16
name|iRed
parameter_list|,
name|mng_uint16
name|iGreen
parameter_list|,
name|mng_uint16
name|iBlue
parameter_list|,
name|mng_uint8
name|iMandatory
parameter_list|,
name|mng_uint16
name|iImageid
parameter_list|,
name|mng_uint8
name|iTile
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_fram
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_bool
name|bEmpty
parameter_list|,
name|mng_uint8
name|iMode
parameter_list|,
name|mng_uint32
name|iNamesize
parameter_list|,
name|mng_pchar
name|zName
parameter_list|,
name|mng_uint8
name|iChangedelay
parameter_list|,
name|mng_uint8
name|iChangetimeout
parameter_list|,
name|mng_uint8
name|iChangeclipping
parameter_list|,
name|mng_uint8
name|iChangesyncid
parameter_list|,
name|mng_uint32
name|iDelay
parameter_list|,
name|mng_uint32
name|iTimeout
parameter_list|,
name|mng_uint8
name|iBoundarytype
parameter_list|,
name|mng_int32
name|iBoundaryl
parameter_list|,
name|mng_int32
name|iBoundaryr
parameter_list|,
name|mng_int32
name|iBoundaryt
parameter_list|,
name|mng_int32
name|iBoundaryb
parameter_list|,
name|mng_uint32
name|iCount
parameter_list|,
name|mng_uint32p
name|pSyncids
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_move
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint16
name|iFirstid
parameter_list|,
name|mng_uint16
name|iLastid
parameter_list|,
name|mng_uint8
name|iMovetype
parameter_list|,
name|mng_int32
name|iMovex
parameter_list|,
name|mng_int32
name|iMovey
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_clip
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint16
name|iFirstid
parameter_list|,
name|mng_uint16
name|iLastid
parameter_list|,
name|mng_uint8
name|iCliptype
parameter_list|,
name|mng_int32
name|iClipl
parameter_list|,
name|mng_int32
name|iClipr
parameter_list|,
name|mng_int32
name|iClipt
parameter_list|,
name|mng_int32
name|iClipb
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_show
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_bool
name|bEmpty
parameter_list|,
name|mng_uint16
name|iFirstid
parameter_list|,
name|mng_uint16
name|iLastid
parameter_list|,
name|mng_uint8
name|iMode
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_term
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint8
name|iTermaction
parameter_list|,
name|mng_uint8
name|iIteraction
parameter_list|,
name|mng_uint32
name|iDelay
parameter_list|,
name|mng_uint32
name|iItermax
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_save
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_bool
name|bEmpty
parameter_list|,
name|mng_uint8
name|iOffsettype
parameter_list|,
name|mng_uint32
name|iCount
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_save_entry
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iEntry
parameter_list|,
name|mng_uint8
name|iEntrytype
parameter_list|,
name|mng_uint32arr2
name|iOffset
parameter_list|,
name|mng_uint32arr2
name|iStarttime
parameter_list|,
name|mng_uint32
name|iLayernr
parameter_list|,
name|mng_uint32
name|iFramenr
parameter_list|,
name|mng_uint32
name|iNamesize
parameter_list|,
name|mng_pchar
name|zName
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_seek
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iNamesize
parameter_list|,
name|mng_pchar
name|zName
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_expi
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint16
name|iSnapshotid
parameter_list|,
name|mng_uint32
name|iNamesize
parameter_list|,
name|mng_pchar
name|zName
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_fpri
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint8
name|iDeltatype
parameter_list|,
name|mng_uint8
name|iPriority
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_need
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iKeywordssize
parameter_list|,
name|mng_pchar
name|zKeywords
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_phyg
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_bool
name|bEmpty
parameter_list|,
name|mng_uint32
name|iSizex
parameter_list|,
name|mng_uint32
name|iSizey
parameter_list|,
name|mng_uint8
name|iUnit
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_jhdr
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iWidth
parameter_list|,
name|mng_uint32
name|iHeight
parameter_list|,
name|mng_uint8
name|iColortype
parameter_list|,
name|mng_uint8
name|iImagesampledepth
parameter_list|,
name|mng_uint8
name|iImagecompression
parameter_list|,
name|mng_uint8
name|iImageinterlace
parameter_list|,
name|mng_uint8
name|iAlphasampledepth
parameter_list|,
name|mng_uint8
name|iAlphacompression
parameter_list|,
name|mng_uint8
name|iAlphafilter
parameter_list|,
name|mng_uint8
name|iAlphainterlace
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_jdat
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iRawlen
parameter_list|,
name|mng_ptr
name|pRawdata
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_jdaa
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iRawlen
parameter_list|,
name|mng_ptr
name|pRawdata
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_jsep
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_dhdr
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint16
name|iObjectid
parameter_list|,
name|mng_uint8
name|iImagetype
parameter_list|,
name|mng_uint8
name|iDeltatype
parameter_list|,
name|mng_uint32
name|iBlockwidth
parameter_list|,
name|mng_uint32
name|iBlockheight
parameter_list|,
name|mng_uint32
name|iBlockx
parameter_list|,
name|mng_uint32
name|iBlocky
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_prom
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint8
name|iColortype
parameter_list|,
name|mng_uint8
name|iSampledepth
parameter_list|,
name|mng_uint8
name|iFilltype
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_ipng
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_pplt
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint8
name|iDeltatype
parameter_list|,
name|mng_uint32
name|iCount
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_pplt_entry
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iEntry
parameter_list|,
name|mng_uint16
name|iRed
parameter_list|,
name|mng_uint16
name|iGreen
parameter_list|,
name|mng_uint16
name|iBlue
parameter_list|,
name|mng_uint16
name|iAlpha
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_jpng
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_drop
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iCount
parameter_list|,
name|mng_chunkidp
name|pChunknames
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_dbyk
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_chunkid
name|iChunkname
parameter_list|,
name|mng_uint8
name|iPolarity
parameter_list|,
name|mng_uint32
name|iKeywordssize
parameter_list|,
name|mng_pchar
name|zKeywords
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_ordr
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iCount
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_ordr_entry
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iEntry
parameter_list|,
name|mng_chunkid
name|iChunkname
parameter_list|,
name|mng_uint8
name|iOrdertype
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_magn
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint16
name|iFirstid
parameter_list|,
name|mng_uint16
name|iLastid
parameter_list|,
name|mng_uint16
name|iMethodX
parameter_list|,
name|mng_uint16
name|iMX
parameter_list|,
name|mng_uint16
name|iMY
parameter_list|,
name|mng_uint16
name|iML
parameter_list|,
name|mng_uint16
name|iMR
parameter_list|,
name|mng_uint16
name|iMT
parameter_list|,
name|mng_uint16
name|iMB
parameter_list|,
name|mng_uint16
name|iMethodY
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|MNG_INCLUDE_MPNG_PROPOSAL
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_mpng
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iFramewidth
parameter_list|,
name|mng_uint32
name|iFrameheight
parameter_list|,
name|mng_uint16
name|iNumplays
parameter_list|,
name|mng_uint16
name|iTickspersec
parameter_list|,
name|mng_uint8
name|iCompressionmethod
parameter_list|,
name|mng_uint32
name|iCount
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_mpng_frame
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iEntry
parameter_list|,
name|mng_uint32
name|iX
parameter_list|,
name|mng_uint32
name|iY
parameter_list|,
name|mng_uint32
name|iWidth
parameter_list|,
name|mng_uint32
name|iHeight
parameter_list|,
name|mng_int32
name|iXoffset
parameter_list|,
name|mng_int32
name|iYoffset
parameter_list|,
name|mng_uint16
name|iTicks
parameter_list|)
function_decl|;
endif|#
directive|endif
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_evnt
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iCount
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_evnt_entry
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iEntry
parameter_list|,
name|mng_uint8
name|iEventtype
parameter_list|,
name|mng_uint8
name|iMasktype
parameter_list|,
name|mng_int32
name|iLeft
parameter_list|,
name|mng_int32
name|iRight
parameter_list|,
name|mng_int32
name|iTop
parameter_list|,
name|mng_int32
name|iBottom
parameter_list|,
name|mng_uint16
name|iObjectid
parameter_list|,
name|mng_uint8
name|iIndex
parameter_list|,
name|mng_uint32
name|iSegmentnamesize
parameter_list|,
name|mng_pchar
name|zSegmentname
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putchunk_unknown
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_chunkid
name|iChunkname
parameter_list|,
name|mng_uint32
name|iRawlen
parameter_list|,
name|mng_ptr
name|pRawdata
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* MNG_INCLUDE_WRITE_PROCS */
comment|/* ************************************************************************** */
comment|/* use these functions to access the actual image-data in stored chunks,    as opposed to the IDAT/JDAT data */
comment|/* to get accurate pixel-data the canvasstyle should seriously reflect the    bitdepth/colortype combination of the preceding IHDR/JHDR/BASI/DHDR;    all input can be converted to rgb(a)8 (rgb(a)16 for 16-bit images), but    there are only limited conversions back (see below for putimgdata)  */
comment|/* call this function if you want to extract the nth image from the list;    the first image is designated seqnr 0! */
comment|/* this function finds the IHDR/JHDR/BASI/DHDR with the appropriate seqnr,    starting from the beginning of the chunk-list; this may tend to get a little    slow for animations with a large number of chunks for images near the end */
comment|/* supplying a seqnr past the last image in the animation will return with    an errorcode */
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getimgdata_seq
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iSeqnr
parameter_list|,
name|mng_uint32
name|iCanvasstyle
parameter_list|,
name|mng_getcanvasline
name|fGetcanvasline
parameter_list|)
function_decl|;
comment|/* both the following functions will search forward to find the first IDAT/JDAT,    and then traverse back to find the start of the image (IHDR,JHDR,DHDR,BASI);    note that this is very fast compared to decoding the IDAT/JDAT, so there's    not really a need for optimization; either can be called from the    iterate_chunks callback when a IHDR/JHDR is encountered; for BASI/DHDR there    may not be real image-data so it's wisest to keep iterating till the IEND,    and then call either of these functions if necessary (remember the correct seqnr!) */
comment|/* call this function if you want to extract the image starting at or after the nth    position in the chunk-list; this number is returned in the iterate_chunks callback */
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getimgdata_chunkseq
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iSeqnr
parameter_list|,
name|mng_uint32
name|iCanvasstyle
parameter_list|,
name|mng_getcanvasline
name|fGetcanvasline
parameter_list|)
function_decl|;
comment|/* call this function if you want to extract the image starting at or after the    indicated chunk; the handle of a chunk is returned in the iterate_chunks callback */
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_getimgdata_chunk
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_uint32
name|iCanvasstyle
parameter_list|,
name|mng_getcanvasline
name|fGetcanvasline
parameter_list|)
function_decl|;
comment|/* ************************************************************************** */
ifdef|#
directive|ifdef
name|MNG_INCLUDE_WRITE_PROCS
comment|/* use the following functions to add image-data to the list of stored chunks */
comment|/* note that this only adds the IDAT or JDAT chunks and no others; you must call    one of these functions after you 'put' the initial chunks of the image and    before you 'put' the closing chunks */
comment|/* the canvasstyle should seriously reflect the bitdepth/colortype combination;    eg. bitdepth=16 would expect a 16-bit canvasstyle,    colortype=g or ga would expect a gray or gray+alpha style respectively    and so on, and so forth ...    (nb. the number of conversions will be extremely limited for the moment!) */
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putimgdata_ihdr
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iWidth
parameter_list|,
name|mng_uint32
name|iHeight
parameter_list|,
name|mng_uint8
name|iColortype
parameter_list|,
name|mng_uint8
name|iBitdepth
parameter_list|,
name|mng_uint8
name|iCompression
parameter_list|,
name|mng_uint8
name|iFilter
parameter_list|,
name|mng_uint8
name|iInterlace
parameter_list|,
name|mng_uint32
name|iCanvasstyle
parameter_list|,
name|mng_getcanvasline
name|fGetcanvasline
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_putimgdata_jhdr
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iWidth
parameter_list|,
name|mng_uint32
name|iHeight
parameter_list|,
name|mng_uint8
name|iColortype
parameter_list|,
name|mng_uint8
name|iBitdepth
parameter_list|,
name|mng_uint8
name|iCompression
parameter_list|,
name|mng_uint8
name|iInterlace
parameter_list|,
name|mng_uint8
name|iAlphaBitdepth
parameter_list|,
name|mng_uint8
name|iAlphaCompression
parameter_list|,
name|mng_uint8
name|iAlphaFilter
parameter_list|,
name|mng_uint8
name|iAlphaInterlace
parameter_list|,
name|mng_uint32
name|iCanvasstyle
parameter_list|,
name|mng_getcanvasline
name|fGetcanvasline
parameter_list|)
function_decl|;
comment|/* ************************************************************************** */
comment|/* use the following functions to set the framecount/layercount/playtime or    simplicity of an animation you are creating; this may be useful if these    variables are calculated during the creation-process */
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_updatemngheader
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iFramecount
parameter_list|,
name|mng_uint32
name|iLayercount
parameter_list|,
name|mng_uint32
name|iPlaytime
parameter_list|)
function_decl|;
name|MNG_EXT
name|mng_retcode
name|MNG_DECL
name|mng_updatemngsimplicity
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iSimplicity
parameter_list|)
function_decl|;
comment|/* ************************************************************************** */
endif|#
directive|endif
comment|/* MNG_INCLUDE_WRITE_PROCS */
endif|#
directive|endif
comment|/* MNG_ACCESS_CHUNKS */
comment|/* ************************************************************************** */
comment|/* *                                                                        * */
comment|/* * Error-code structure                                                   * */
comment|/* *                                                                        * */
comment|/* * 0b0000 00xx xxxx xxxx - basic errors; severity 9 (environment)         * */
comment|/* * 0b0000 01xx xxxx xxxx - chunk errors; severity 9 (image induced)       * */
comment|/* * 0b0000 10xx xxxx xxxx - severity 5 errors (application induced)        * */
comment|/* * 0b0001 00xx xxxx xxxx - severity 2 warnings (recoverable)              * */
comment|/* * 0b0010 00xx xxxx xxxx - severity 1 warnings (recoverable)              * */
comment|/* *                                                                        * */
comment|/* ************************************************************************** */
DECL|macro|MNG_NOERROR
define|#
directive|define
name|MNG_NOERROR
value|(mng_retcode)0
comment|/* er.. indicates all's well   */
DECL|macro|MNG_OUTOFMEMORY
define|#
directive|define
name|MNG_OUTOFMEMORY
value|(mng_retcode)1
comment|/* oops, buy some megabytes!   */
DECL|macro|MNG_INVALIDHANDLE
define|#
directive|define
name|MNG_INVALIDHANDLE
value|(mng_retcode)2
comment|/* call mng_initialize first   */
DECL|macro|MNG_NOCALLBACK
define|#
directive|define
name|MNG_NOCALLBACK
value|(mng_retcode)3
comment|/* set the callbacks please    */
DECL|macro|MNG_UNEXPECTEDEOF
define|#
directive|define
name|MNG_UNEXPECTEDEOF
value|(mng_retcode)4
comment|/* what'd ya do with the data? */
DECL|macro|MNG_ZLIBERROR
define|#
directive|define
name|MNG_ZLIBERROR
value|(mng_retcode)5
comment|/* zlib burped                 */
DECL|macro|MNG_JPEGERROR
define|#
directive|define
name|MNG_JPEGERROR
value|(mng_retcode)6
comment|/* jpglib complained           */
DECL|macro|MNG_LCMSERROR
define|#
directive|define
name|MNG_LCMSERROR
value|(mng_retcode)7
comment|/* little cms stressed out     */
DECL|macro|MNG_NOOUTPUTPROFILE
define|#
directive|define
name|MNG_NOOUTPUTPROFILE
value|(mng_retcode)8
comment|/* no output-profile defined   */
DECL|macro|MNG_NOSRGBPROFILE
define|#
directive|define
name|MNG_NOSRGBPROFILE
value|(mng_retcode)9
comment|/* no sRGB-profile defined     */
DECL|macro|MNG_BUFOVERFLOW
define|#
directive|define
name|MNG_BUFOVERFLOW
value|(mng_retcode)10
comment|/* zlib output-buffer overflow */
DECL|macro|MNG_FUNCTIONINVALID
define|#
directive|define
name|MNG_FUNCTIONINVALID
value|(mng_retcode)11
comment|/* ay, totally inappropriate   */
DECL|macro|MNG_OUTPUTERROR
define|#
directive|define
name|MNG_OUTPUTERROR
value|(mng_retcode)12
comment|/* disk full ?                 */
DECL|macro|MNG_JPEGBUFTOOSMALL
define|#
directive|define
name|MNG_JPEGBUFTOOSMALL
value|(mng_retcode)13
comment|/* can't handle buffer overflow*/
DECL|macro|MNG_NEEDMOREDATA
define|#
directive|define
name|MNG_NEEDMOREDATA
value|(mng_retcode)14
comment|/* I'm hungry, give me more    */
DECL|macro|MNG_NEEDTIMERWAIT
define|#
directive|define
name|MNG_NEEDTIMERWAIT
value|(mng_retcode)15
comment|/* Sleep a while then wake me  */
DECL|macro|MNG_NEEDSECTIONWAIT
define|#
directive|define
name|MNG_NEEDSECTIONWAIT
value|(mng_retcode)16
comment|/* just processed a SEEK       */
DECL|macro|MNG_LOOPWITHCACHEOFF
define|#
directive|define
name|MNG_LOOPWITHCACHEOFF
value|(mng_retcode)17
comment|/* LOOP when playback info off */
DECL|macro|MNG_DLLNOTLOADED
define|#
directive|define
name|MNG_DLLNOTLOADED
value|(mng_retcode)99
comment|/* late binding failed         */
DECL|macro|MNG_APPIOERROR
define|#
directive|define
name|MNG_APPIOERROR
value|(mng_retcode)901
comment|/* application I/O error       */
DECL|macro|MNG_APPTIMERERROR
define|#
directive|define
name|MNG_APPTIMERERROR
value|(mng_retcode)902
comment|/* application timing error    */
DECL|macro|MNG_APPCMSERROR
define|#
directive|define
name|MNG_APPCMSERROR
value|(mng_retcode)903
comment|/* application CMS error       */
DECL|macro|MNG_APPMISCERROR
define|#
directive|define
name|MNG_APPMISCERROR
value|(mng_retcode)904
comment|/* application other error     */
DECL|macro|MNG_APPTRACEABORT
define|#
directive|define
name|MNG_APPTRACEABORT
value|(mng_retcode)905
comment|/* application aborts on trace */
DECL|macro|MNG_INTERNALERROR
define|#
directive|define
name|MNG_INTERNALERROR
value|(mng_retcode)999
comment|/* internal inconsistancy      */
DECL|macro|MNG_INVALIDSIG
define|#
directive|define
name|MNG_INVALIDSIG
value|(mng_retcode)1025
comment|/* invalid graphics file       */
DECL|macro|MNG_INVALIDCRC
define|#
directive|define
name|MNG_INVALIDCRC
value|(mng_retcode)1027
comment|/* crc check failed            */
DECL|macro|MNG_INVALIDLENGTH
define|#
directive|define
name|MNG_INVALIDLENGTH
value|(mng_retcode)1028
comment|/* chunklength mystifies me    */
DECL|macro|MNG_SEQUENCEERROR
define|#
directive|define
name|MNG_SEQUENCEERROR
value|(mng_retcode)1029
comment|/* invalid chunk sequence      */
DECL|macro|MNG_CHUNKNOTALLOWED
define|#
directive|define
name|MNG_CHUNKNOTALLOWED
value|(mng_retcode)1030
comment|/* completely out-of-place     */
DECL|macro|MNG_MULTIPLEERROR
define|#
directive|define
name|MNG_MULTIPLEERROR
value|(mng_retcode)1031
comment|/* only one occurence allowed  */
DECL|macro|MNG_PLTEMISSING
define|#
directive|define
name|MNG_PLTEMISSING
value|(mng_retcode)1032
comment|/* indexed-color requires PLTE */
DECL|macro|MNG_IDATMISSING
define|#
directive|define
name|MNG_IDATMISSING
value|(mng_retcode)1033
comment|/* IHDR-block requires IDAT    */
DECL|macro|MNG_CANNOTBEEMPTY
define|#
directive|define
name|MNG_CANNOTBEEMPTY
value|(mng_retcode)1034
comment|/* must contain some data      */
DECL|macro|MNG_GLOBALLENGTHERR
define|#
directive|define
name|MNG_GLOBALLENGTHERR
value|(mng_retcode)1035
comment|/* global data incorrect       */
DECL|macro|MNG_INVALIDBITDEPTH
define|#
directive|define
name|MNG_INVALIDBITDEPTH
value|(mng_retcode)1036
comment|/* bitdepth out-of-range       */
DECL|macro|MNG_INVALIDCOLORTYPE
define|#
directive|define
name|MNG_INVALIDCOLORTYPE
value|(mng_retcode)1037
comment|/* colortype out-of-range      */
DECL|macro|MNG_INVALIDCOMPRESS
define|#
directive|define
name|MNG_INVALIDCOMPRESS
value|(mng_retcode)1038
comment|/* compression method invalid  */
DECL|macro|MNG_INVALIDFILTER
define|#
directive|define
name|MNG_INVALIDFILTER
value|(mng_retcode)1039
comment|/* filter method invalid       */
DECL|macro|MNG_INVALIDINTERLACE
define|#
directive|define
name|MNG_INVALIDINTERLACE
value|(mng_retcode)1040
comment|/* interlace method invalid    */
DECL|macro|MNG_NOTENOUGHIDAT
define|#
directive|define
name|MNG_NOTENOUGHIDAT
value|(mng_retcode)1041
comment|/* ran out of compressed data  */
DECL|macro|MNG_PLTEINDEXERROR
define|#
directive|define
name|MNG_PLTEINDEXERROR
value|(mng_retcode)1042
comment|/* palette-index out-of-range  */
DECL|macro|MNG_NULLNOTFOUND
define|#
directive|define
name|MNG_NULLNOTFOUND
value|(mng_retcode)1043
comment|/* couldn't find null-separator*/
DECL|macro|MNG_KEYWORDNULL
define|#
directive|define
name|MNG_KEYWORDNULL
value|(mng_retcode)1044
comment|/* keyword cannot be empty     */
DECL|macro|MNG_OBJECTUNKNOWN
define|#
directive|define
name|MNG_OBJECTUNKNOWN
value|(mng_retcode)1045
comment|/* the object can't be found   */
DECL|macro|MNG_OBJECTEXISTS
define|#
directive|define
name|MNG_OBJECTEXISTS
value|(mng_retcode)1046
comment|/* the object already exists   */
DECL|macro|MNG_TOOMUCHIDAT
define|#
directive|define
name|MNG_TOOMUCHIDAT
value|(mng_retcode)1047
comment|/* got too much compressed data*/
DECL|macro|MNG_INVSAMPLEDEPTH
define|#
directive|define
name|MNG_INVSAMPLEDEPTH
value|(mng_retcode)1048
comment|/* sampledepth out-of-range    */
DECL|macro|MNG_INVOFFSETSIZE
define|#
directive|define
name|MNG_INVOFFSETSIZE
value|(mng_retcode)1049
comment|/* invalid offset-size         */
DECL|macro|MNG_INVENTRYTYPE
define|#
directive|define
name|MNG_INVENTRYTYPE
value|(mng_retcode)1050
comment|/* invalid entry-type          */
DECL|macro|MNG_ENDWITHNULL
define|#
directive|define
name|MNG_ENDWITHNULL
value|(mng_retcode)1051
comment|/* may not end with NULL       */
DECL|macro|MNG_INVIMAGETYPE
define|#
directive|define
name|MNG_INVIMAGETYPE
value|(mng_retcode)1052
comment|/* invalid image_type          */
DECL|macro|MNG_INVDELTATYPE
define|#
directive|define
name|MNG_INVDELTATYPE
value|(mng_retcode)1053
comment|/* invalid delta_type          */
DECL|macro|MNG_INVALIDINDEX
define|#
directive|define
name|MNG_INVALIDINDEX
value|(mng_retcode)1054
comment|/* index-value invalid         */
DECL|macro|MNG_TOOMUCHJDAT
define|#
directive|define
name|MNG_TOOMUCHJDAT
value|(mng_retcode)1055
comment|/* got too much compressed data*/
DECL|macro|MNG_JPEGPARMSERR
define|#
directive|define
name|MNG_JPEGPARMSERR
value|(mng_retcode)1056
comment|/* JHDR/JPEG parms do not match*/
DECL|macro|MNG_INVFILLMETHOD
define|#
directive|define
name|MNG_INVFILLMETHOD
value|(mng_retcode)1057
comment|/* invalid fill_method         */
DECL|macro|MNG_OBJNOTCONCRETE
define|#
directive|define
name|MNG_OBJNOTCONCRETE
value|(mng_retcode)1058
comment|/* object must be concrete     */
DECL|macro|MNG_TARGETNOALPHA
define|#
directive|define
name|MNG_TARGETNOALPHA
value|(mng_retcode)1059
comment|/* object has no alpha-channel */
DECL|macro|MNG_MNGTOOCOMPLEX
define|#
directive|define
name|MNG_MNGTOOCOMPLEX
value|(mng_retcode)1060
comment|/* can't handle complexity     */
DECL|macro|MNG_UNKNOWNCRITICAL
define|#
directive|define
name|MNG_UNKNOWNCRITICAL
value|(mng_retcode)1061
comment|/* unknown critical chunk found*/
DECL|macro|MNG_UNSUPPORTEDNEED
define|#
directive|define
name|MNG_UNSUPPORTEDNEED
value|(mng_retcode)1062
comment|/* nEED requirement unsupported*/
DECL|macro|MNG_INVALIDDELTA
define|#
directive|define
name|MNG_INVALIDDELTA
value|(mng_retcode)1063
comment|/* Delta operation illegal     */
DECL|macro|MNG_INVALIDMETHOD
define|#
directive|define
name|MNG_INVALIDMETHOD
value|(mng_retcode)1064
comment|/* invalid MAGN method         */
DECL|macro|MNG_IMPROBABLELENGTH
define|#
directive|define
name|MNG_IMPROBABLELENGTH
value|(mng_retcode)1065
comment|/* impropable chunk length     */
DECL|macro|MNG_INVALIDBLOCK
define|#
directive|define
name|MNG_INVALIDBLOCK
value|(mng_retcode)1066
comment|/* invalid delta block         */
DECL|macro|MNG_INVALIDEVENT
define|#
directive|define
name|MNG_INVALIDEVENT
value|(mng_retcode)1067
comment|/* invalid event_type          */
DECL|macro|MNG_INVALIDMASK
define|#
directive|define
name|MNG_INVALIDMASK
value|(mng_retcode)1068
comment|/* invalid mask_type           */
DECL|macro|MNG_NOMATCHINGLOOP
define|#
directive|define
name|MNG_NOMATCHINGLOOP
value|(mng_retcode)1069
comment|/* ENDL without matching LOOP  */
DECL|macro|MNG_SEEKNOTFOUND
define|#
directive|define
name|MNG_SEEKNOTFOUND
value|(mng_retcode)1070
comment|/* EvNT points to unknown SEEK */
DECL|macro|MNG_OBJNOTABSTRACT
define|#
directive|define
name|MNG_OBJNOTABSTRACT
value|(mng_retcode)1071
comment|/* object must be abstract     */
DECL|macro|MNG_TERMSEQERROR
define|#
directive|define
name|MNG_TERMSEQERROR
value|(mng_retcode)1072
comment|/* TERM in wrong place         */
DECL|macro|MNG_INVALIDFIELDVAL
define|#
directive|define
name|MNG_INVALIDFIELDVAL
value|(mng_retcode)1073
comment|/* invalid fieldvalue (generic)*/
DECL|macro|MNG_INVALIDWIDTH
define|#
directive|define
name|MNG_INVALIDWIDTH
value|(mng_retcode)1074
comment|/* invalid frame/image width   */
DECL|macro|MNG_INVALIDHEIGHT
define|#
directive|define
name|MNG_INVALIDHEIGHT
value|(mng_retcode)1075
comment|/* invalid frame/image height  */
DECL|macro|MNG_INVALIDCNVSTYLE
define|#
directive|define
name|MNG_INVALIDCNVSTYLE
value|(mng_retcode)2049
comment|/* can't make anything of this */
DECL|macro|MNG_WRONGCHUNK
define|#
directive|define
name|MNG_WRONGCHUNK
value|(mng_retcode)2050
comment|/* accessing the wrong chunk   */
DECL|macro|MNG_INVALIDENTRYIX
define|#
directive|define
name|MNG_INVALIDENTRYIX
value|(mng_retcode)2051
comment|/* accessing the wrong entry   */
DECL|macro|MNG_NOHEADER
define|#
directive|define
name|MNG_NOHEADER
value|(mng_retcode)2052
comment|/* must have had header first  */
DECL|macro|MNG_NOCORRCHUNK
define|#
directive|define
name|MNG_NOCORRCHUNK
value|(mng_retcode)2053
comment|/* can't find parent chunk     */
DECL|macro|MNG_NOMHDR
define|#
directive|define
name|MNG_NOMHDR
value|(mng_retcode)2054
comment|/* no MNG header available     */
DECL|macro|MNG_IMAGETOOLARGE
define|#
directive|define
name|MNG_IMAGETOOLARGE
value|(mng_retcode)4097
comment|/* input-image way too big     */
DECL|macro|MNG_NOTANANIMATION
define|#
directive|define
name|MNG_NOTANANIMATION
value|(mng_retcode)4098
comment|/* file not a MNG              */
DECL|macro|MNG_FRAMENRTOOHIGH
define|#
directive|define
name|MNG_FRAMENRTOOHIGH
value|(mng_retcode)4099
comment|/* frame-nr out-of-range       */
DECL|macro|MNG_LAYERNRTOOHIGH
define|#
directive|define
name|MNG_LAYERNRTOOHIGH
value|(mng_retcode)4100
comment|/* layer-nr out-of-range       */
DECL|macro|MNG_PLAYTIMETOOHIGH
define|#
directive|define
name|MNG_PLAYTIMETOOHIGH
value|(mng_retcode)4101
comment|/* playtime out-of-range       */
DECL|macro|MNG_FNNOTIMPLEMENTED
define|#
directive|define
name|MNG_FNNOTIMPLEMENTED
value|(mng_retcode)4102
comment|/* function not yet available  */
DECL|macro|MNG_IMAGEFROZEN
define|#
directive|define
name|MNG_IMAGEFROZEN
value|(mng_retcode)8193
comment|/* stopped displaying          */
DECL|macro|MNG_LCMS_NOHANDLE
define|#
directive|define
name|MNG_LCMS_NOHANDLE
value|1
comment|/* LCMS returned NULL handle   */
DECL|macro|MNG_LCMS_NOMEM
define|#
directive|define
name|MNG_LCMS_NOMEM
value|2
comment|/* LCMS returned NULL gammatab */
DECL|macro|MNG_LCMS_NOTRANS
define|#
directive|define
name|MNG_LCMS_NOTRANS
value|3
comment|/* LCMS returned NULL transform*/
comment|/* ************************************************************************** */
comment|/* *                                                                        * */
comment|/* *  Canvas styles                                                         * */
comment|/* *                                                                        * */
comment|/* *  Note that the intentions are pretty darn good, but that the focus     * */
comment|/* *  is currently on 8-bit color support                                   * */
comment|/* *                                                                        * */
comment|/* *  The RGB8_A8 style is defined for apps that require a separate         * */
comment|/* *  canvas for the color-planes and the alpha-plane (eg. mozilla)         * */
comment|/* *  This requires for the app to supply the "getalphaline" callback!!!    * */
comment|/* *                                                                        * */
comment|/* ************************************************************************** */
DECL|macro|MNG_CANVAS_RGB8
define|#
directive|define
name|MNG_CANVAS_RGB8
value|0x00000000L
DECL|macro|MNG_CANVAS_RGBA8
define|#
directive|define
name|MNG_CANVAS_RGBA8
value|0x00001000L
DECL|macro|MNG_CANVAS_RGBA8_PM
define|#
directive|define
name|MNG_CANVAS_RGBA8_PM
value|0x00009000L
DECL|macro|MNG_CANVAS_ARGB8
define|#
directive|define
name|MNG_CANVAS_ARGB8
value|0x00003000L
DECL|macro|MNG_CANVAS_ARGB8_PM
define|#
directive|define
name|MNG_CANVAS_ARGB8_PM
value|0x0000B000L
DECL|macro|MNG_CANVAS_RGB8_A8
define|#
directive|define
name|MNG_CANVAS_RGB8_A8
value|0x00005000L
DECL|macro|MNG_CANVAS_BGR8
define|#
directive|define
name|MNG_CANVAS_BGR8
value|0x00000001L
DECL|macro|MNG_CANVAS_BGRX8
define|#
directive|define
name|MNG_CANVAS_BGRX8
value|0x00010001L
DECL|macro|MNG_CANVAS_BGRA8
define|#
directive|define
name|MNG_CANVAS_BGRA8
value|0x00001001L
DECL|macro|MNG_CANVAS_BGRA8PM
define|#
directive|define
name|MNG_CANVAS_BGRA8PM
value|0x00009001L
comment|/* backward compatibility */
DECL|macro|MNG_CANVAS_BGRA8_PM
define|#
directive|define
name|MNG_CANVAS_BGRA8_PM
value|0x00009001L
DECL|macro|MNG_CANVAS_ABGR8
define|#
directive|define
name|MNG_CANVAS_ABGR8
value|0x00003001L
DECL|macro|MNG_CANVAS_ABGR8_PM
define|#
directive|define
name|MNG_CANVAS_ABGR8_PM
value|0x0000B001L
DECL|macro|MNG_CANVAS_RGB16
define|#
directive|define
name|MNG_CANVAS_RGB16
value|0x00000100L
comment|/* not supported yet */
DECL|macro|MNG_CANVAS_RGBA16
define|#
directive|define
name|MNG_CANVAS_RGBA16
value|0x00001100L
comment|/* not supported yet */
DECL|macro|MNG_CANVAS_ARGB16
define|#
directive|define
name|MNG_CANVAS_ARGB16
value|0x00003100L
comment|/* not supported yet */
DECL|macro|MNG_CANVAS_BGR16
define|#
directive|define
name|MNG_CANVAS_BGR16
value|0x00000101L
comment|/* not supported yet */
DECL|macro|MNG_CANVAS_BGRA16
define|#
directive|define
name|MNG_CANVAS_BGRA16
value|0x00001101L
comment|/* not supported yet */
DECL|macro|MNG_CANVAS_ABGR16
define|#
directive|define
name|MNG_CANVAS_ABGR16
value|0x00003101L
comment|/* not supported yet */
DECL|macro|MNG_CANVAS_GRAY8
define|#
directive|define
name|MNG_CANVAS_GRAY8
value|0x00000002L
comment|/* not supported yet */
DECL|macro|MNG_CANVAS_GRAY16
define|#
directive|define
name|MNG_CANVAS_GRAY16
value|0x00000102L
comment|/* not supported yet */
DECL|macro|MNG_CANVAS_GRAYA8
define|#
directive|define
name|MNG_CANVAS_GRAYA8
value|0x00001002L
comment|/* not supported yet */
DECL|macro|MNG_CANVAS_GRAYA16
define|#
directive|define
name|MNG_CANVAS_GRAYA16
value|0x00001102L
comment|/* not supported yet */
DECL|macro|MNG_CANVAS_AGRAY8
define|#
directive|define
name|MNG_CANVAS_AGRAY8
value|0x00003002L
comment|/* not supported yet */
DECL|macro|MNG_CANVAS_AGRAY16
define|#
directive|define
name|MNG_CANVAS_AGRAY16
value|0x00003102L
comment|/* not supported yet */
DECL|macro|MNG_CANVAS_DX15
define|#
directive|define
name|MNG_CANVAS_DX15
value|0x00000003L
comment|/* not supported yet */
DECL|macro|MNG_CANVAS_DX16
define|#
directive|define
name|MNG_CANVAS_DX16
value|0x00000004L
comment|/* not supported yet */
DECL|macro|MNG_CANVAS_RGB565
define|#
directive|define
name|MNG_CANVAS_RGB565
value|0x00000005L
DECL|macro|MNG_CANVAS_RGBA565
define|#
directive|define
name|MNG_CANVAS_RGBA565
value|0x00001005L
DECL|macro|MNG_CANVAS_BGR565
define|#
directive|define
name|MNG_CANVAS_BGR565
value|0x00000006L
DECL|macro|MNG_CANVAS_BGRA565
define|#
directive|define
name|MNG_CANVAS_BGRA565
value|0x00001006L
DECL|macro|MNG_CANVAS_BGR565_A8
define|#
directive|define
name|MNG_CANVAS_BGR565_A8
value|0x00004006L
DECL|macro|MNG_CANVAS_RGB555
define|#
directive|define
name|MNG_CANVAS_RGB555
value|0x00000007L
DECL|macro|MNG_CANVAS_BGR555
define|#
directive|define
name|MNG_CANVAS_BGR555
value|0x00000008L
DECL|macro|MNG_CANVAS_PIXELTYPE
define|#
directive|define
name|MNG_CANVAS_PIXELTYPE
parameter_list|(
name|C
parameter_list|)
value|(C& 0x000000FFL)
DECL|macro|MNG_CANVAS_BITDEPTH
define|#
directive|define
name|MNG_CANVAS_BITDEPTH
parameter_list|(
name|C
parameter_list|)
value|(C& 0x00000100L)
DECL|macro|MNG_CANVAS_HASALPHA
define|#
directive|define
name|MNG_CANVAS_HASALPHA
parameter_list|(
name|C
parameter_list|)
value|(C& 0x00001000L)
DECL|macro|MNG_CANVAS_ALPHAFIRST
define|#
directive|define
name|MNG_CANVAS_ALPHAFIRST
parameter_list|(
name|C
parameter_list|)
value|(C& 0x00002000L)
DECL|macro|MNG_CANVAS_ALPHASEPD
define|#
directive|define
name|MNG_CANVAS_ALPHASEPD
parameter_list|(
name|C
parameter_list|)
value|(C& 0x00004000L)
DECL|macro|MNG_CANVAS_ALPHAPM
define|#
directive|define
name|MNG_CANVAS_ALPHAPM
parameter_list|(
name|C
parameter_list|)
value|(C& 0x00008000L)
DECL|macro|MNG_CANVAS_HASFILLER
define|#
directive|define
name|MNG_CANVAS_HASFILLER
parameter_list|(
name|C
parameter_list|)
value|(C& 0x00010000L)
DECL|macro|MNG_CANVAS_RGB
define|#
directive|define
name|MNG_CANVAS_RGB
parameter_list|(
name|C
parameter_list|)
value|(MNG_CANVAS_PIXELTYPE (C) == 0)
DECL|macro|MNG_CANVAS_BGR
define|#
directive|define
name|MNG_CANVAS_BGR
parameter_list|(
name|C
parameter_list|)
value|(MNG_CANVAS_PIXELTYPE (C) == 1)
DECL|macro|MNG_CANVAS_GRAY
define|#
directive|define
name|MNG_CANVAS_GRAY
parameter_list|(
name|C
parameter_list|)
value|(MNG_CANVAS_PIXELTYPE (C) == 2)
DECL|macro|MNG_CANVAS_DIRECTX15
define|#
directive|define
name|MNG_CANVAS_DIRECTX15
parameter_list|(
name|C
parameter_list|)
value|(MNG_CANVAS_PIXELTYPE (C) == 3)
DECL|macro|MNG_CANVAS_DIRECTX16
define|#
directive|define
name|MNG_CANVAS_DIRECTX16
parameter_list|(
name|C
parameter_list|)
value|(MNG_CANVAS_PIXELTYPE (C) == 4)
DECL|macro|MNG_CANVAS_RGB_565
define|#
directive|define
name|MNG_CANVAS_RGB_565
parameter_list|(
name|C
parameter_list|)
value|(MNG_CANVAS_PIXELTYPE (C) == 5)
DECL|macro|MNG_CANVAS_BGR_565
define|#
directive|define
name|MNG_CANVAS_BGR_565
parameter_list|(
name|C
parameter_list|)
value|(MNG_CANVAS_PIXELTYPE (C) == 6)
DECL|macro|MNG_CANVAS_8BIT
define|#
directive|define
name|MNG_CANVAS_8BIT
parameter_list|(
name|C
parameter_list|)
value|(!MNG_CANVAS_BITDEPTH (C))
DECL|macro|MNG_CANVAS_16BIT
define|#
directive|define
name|MNG_CANVAS_16BIT
parameter_list|(
name|C
parameter_list|)
value|(MNG_CANVAS_BITDEPTH (C))
DECL|macro|MNG_CANVAS_PIXELFIRST
define|#
directive|define
name|MNG_CANVAS_PIXELFIRST
parameter_list|(
name|C
parameter_list|)
value|(!MNG_CANVAS_ALPHAFIRST (C))
comment|/* ************************************************************************** */
comment|/* *                                                                        * */
comment|/* *  Chunk names (idea adapted from libpng 1.1.0 - png.h)                  * */
comment|/* *                                                                        * */
comment|/* ************************************************************************** */
DECL|macro|MNG_UINT_HUH
define|#
directive|define
name|MNG_UINT_HUH
value|0x40404040L
DECL|macro|MNG_UINT_BACK
define|#
directive|define
name|MNG_UINT_BACK
value|0x4241434bL
DECL|macro|MNG_UINT_BASI
define|#
directive|define
name|MNG_UINT_BASI
value|0x42415349L
DECL|macro|MNG_UINT_CLIP
define|#
directive|define
name|MNG_UINT_CLIP
value|0x434c4950L
DECL|macro|MNG_UINT_CLON
define|#
directive|define
name|MNG_UINT_CLON
value|0x434c4f4eL
DECL|macro|MNG_UINT_DBYK
define|#
directive|define
name|MNG_UINT_DBYK
value|0x4442594bL
DECL|macro|MNG_UINT_DEFI
define|#
directive|define
name|MNG_UINT_DEFI
value|0x44454649L
DECL|macro|MNG_UINT_DHDR
define|#
directive|define
name|MNG_UINT_DHDR
value|0x44484452L
DECL|macro|MNG_UINT_DISC
define|#
directive|define
name|MNG_UINT_DISC
value|0x44495343L
DECL|macro|MNG_UINT_DROP
define|#
directive|define
name|MNG_UINT_DROP
value|0x44524f50L
DECL|macro|MNG_UINT_ENDL
define|#
directive|define
name|MNG_UINT_ENDL
value|0x454e444cL
DECL|macro|MNG_UINT_FRAM
define|#
directive|define
name|MNG_UINT_FRAM
value|0x4652414dL
DECL|macro|MNG_UINT_IDAT
define|#
directive|define
name|MNG_UINT_IDAT
value|0x49444154L
DECL|macro|MNG_UINT_IEND
define|#
directive|define
name|MNG_UINT_IEND
value|0x49454e44L
DECL|macro|MNG_UINT_IHDR
define|#
directive|define
name|MNG_UINT_IHDR
value|0x49484452L
DECL|macro|MNG_UINT_IJNG
define|#
directive|define
name|MNG_UINT_IJNG
value|0x494a4e47L
DECL|macro|MNG_UINT_IPNG
define|#
directive|define
name|MNG_UINT_IPNG
value|0x49504e47L
DECL|macro|MNG_UINT_JDAA
define|#
directive|define
name|MNG_UINT_JDAA
value|0x4a444141L
DECL|macro|MNG_UINT_JDAT
define|#
directive|define
name|MNG_UINT_JDAT
value|0x4a444154L
DECL|macro|MNG_UINT_JHDR
define|#
directive|define
name|MNG_UINT_JHDR
value|0x4a484452L
DECL|macro|MNG_UINT_JSEP
define|#
directive|define
name|MNG_UINT_JSEP
value|0x4a534550L
DECL|macro|MNG_UINT_JdAA
define|#
directive|define
name|MNG_UINT_JdAA
value|0x4a644141L
DECL|macro|MNG_UINT_LOOP
define|#
directive|define
name|MNG_UINT_LOOP
value|0x4c4f4f50L
DECL|macro|MNG_UINT_MAGN
define|#
directive|define
name|MNG_UINT_MAGN
value|0x4d41474eL
DECL|macro|MNG_UINT_MEND
define|#
directive|define
name|MNG_UINT_MEND
value|0x4d454e44L
DECL|macro|MNG_UINT_MHDR
define|#
directive|define
name|MNG_UINT_MHDR
value|0x4d484452L
DECL|macro|MNG_UINT_MOVE
define|#
directive|define
name|MNG_UINT_MOVE
value|0x4d4f5645L
DECL|macro|MNG_UINT_ORDR
define|#
directive|define
name|MNG_UINT_ORDR
value|0x4f524452L
DECL|macro|MNG_UINT_PAST
define|#
directive|define
name|MNG_UINT_PAST
value|0x50415354L
DECL|macro|MNG_UINT_PLTE
define|#
directive|define
name|MNG_UINT_PLTE
value|0x504c5445L
DECL|macro|MNG_UINT_PPLT
define|#
directive|define
name|MNG_UINT_PPLT
value|0x50504c54L
DECL|macro|MNG_UINT_PROM
define|#
directive|define
name|MNG_UINT_PROM
value|0x50524f4dL
DECL|macro|MNG_UINT_SAVE
define|#
directive|define
name|MNG_UINT_SAVE
value|0x53415645L
DECL|macro|MNG_UINT_SEEK
define|#
directive|define
name|MNG_UINT_SEEK
value|0x5345454bL
DECL|macro|MNG_UINT_SHOW
define|#
directive|define
name|MNG_UINT_SHOW
value|0x53484f57L
DECL|macro|MNG_UINT_TERM
define|#
directive|define
name|MNG_UINT_TERM
value|0x5445524dL
DECL|macro|MNG_UINT_adAT
define|#
directive|define
name|MNG_UINT_adAT
value|0x61644154L
DECL|macro|MNG_UINT_ahDR
define|#
directive|define
name|MNG_UINT_ahDR
value|0x61684452L
DECL|macro|MNG_UINT_bKGD
define|#
directive|define
name|MNG_UINT_bKGD
value|0x624b4744L
DECL|macro|MNG_UINT_cHRM
define|#
directive|define
name|MNG_UINT_cHRM
value|0x6348524dL
DECL|macro|MNG_UINT_eXPI
define|#
directive|define
name|MNG_UINT_eXPI
value|0x65585049L
DECL|macro|MNG_UINT_evNT
define|#
directive|define
name|MNG_UINT_evNT
value|0x65764e54L
DECL|macro|MNG_UINT_fPRI
define|#
directive|define
name|MNG_UINT_fPRI
value|0x66505249L
DECL|macro|MNG_UINT_gAMA
define|#
directive|define
name|MNG_UINT_gAMA
value|0x67414d41L
DECL|macro|MNG_UINT_hIST
define|#
directive|define
name|MNG_UINT_hIST
value|0x68495354L
DECL|macro|MNG_UINT_iCCP
define|#
directive|define
name|MNG_UINT_iCCP
value|0x69434350L
DECL|macro|MNG_UINT_iTXt
define|#
directive|define
name|MNG_UINT_iTXt
value|0x69545874L
DECL|macro|MNG_UINT_mpNG
define|#
directive|define
name|MNG_UINT_mpNG
value|0x6d704e47L
DECL|macro|MNG_UINT_nEED
define|#
directive|define
name|MNG_UINT_nEED
value|0x6e454544L
DECL|macro|MNG_UINT_oFFs
define|#
directive|define
name|MNG_UINT_oFFs
value|0x6f464673L
DECL|macro|MNG_UINT_pCAL
define|#
directive|define
name|MNG_UINT_pCAL
value|0x7043414cL
DECL|macro|MNG_UINT_pHYg
define|#
directive|define
name|MNG_UINT_pHYg
value|0x70444167L
DECL|macro|MNG_UINT_pHYs
define|#
directive|define
name|MNG_UINT_pHYs
value|0x70485973L
DECL|macro|MNG_UINT_sBIT
define|#
directive|define
name|MNG_UINT_sBIT
value|0x73424954L
DECL|macro|MNG_UINT_sCAL
define|#
directive|define
name|MNG_UINT_sCAL
value|0x7343414cL
DECL|macro|MNG_UINT_sPLT
define|#
directive|define
name|MNG_UINT_sPLT
value|0x73504c54L
DECL|macro|MNG_UINT_sRGB
define|#
directive|define
name|MNG_UINT_sRGB
value|0x73524742L
DECL|macro|MNG_UINT_tEXt
define|#
directive|define
name|MNG_UINT_tEXt
value|0x74455874L
DECL|macro|MNG_UINT_tIME
define|#
directive|define
name|MNG_UINT_tIME
value|0x74494d45L
DECL|macro|MNG_UINT_tRNS
define|#
directive|define
name|MNG_UINT_tRNS
value|0x74524e53L
DECL|macro|MNG_UINT_zTXt
define|#
directive|define
name|MNG_UINT_zTXt
value|0x7a545874L
comment|/* ************************************************************************** */
comment|/* *                                                                        * */
comment|/* *  Chunk property values                                                 * */
comment|/* *                                                                        * */
comment|/* ************************************************************************** */
DECL|macro|MNG_BITDEPTH_1
define|#
directive|define
name|MNG_BITDEPTH_1
value|1
comment|/* IHDR, BASI, JHDR, PROM */
DECL|macro|MNG_BITDEPTH_2
define|#
directive|define
name|MNG_BITDEPTH_2
value|2
DECL|macro|MNG_BITDEPTH_4
define|#
directive|define
name|MNG_BITDEPTH_4
value|4
DECL|macro|MNG_BITDEPTH_8
define|#
directive|define
name|MNG_BITDEPTH_8
value|8
comment|/* sPLT */
DECL|macro|MNG_BITDEPTH_16
define|#
directive|define
name|MNG_BITDEPTH_16
value|16
DECL|macro|MNG_COLORTYPE_GRAY
define|#
directive|define
name|MNG_COLORTYPE_GRAY
value|0
comment|/* IHDR, BASI, PROM */
DECL|macro|MNG_COLORTYPE_RGB
define|#
directive|define
name|MNG_COLORTYPE_RGB
value|2
DECL|macro|MNG_COLORTYPE_INDEXED
define|#
directive|define
name|MNG_COLORTYPE_INDEXED
value|3
DECL|macro|MNG_COLORTYPE_GRAYA
define|#
directive|define
name|MNG_COLORTYPE_GRAYA
value|4
DECL|macro|MNG_COLORTYPE_RGBA
define|#
directive|define
name|MNG_COLORTYPE_RGBA
value|6
DECL|macro|MNG_COMPRESSION_DEFLATE
define|#
directive|define
name|MNG_COMPRESSION_DEFLATE
value|0
comment|/* IHDR, zTXt, iTXt, iCCP,                                                     BASI, JHDR */
DECL|macro|MNG_FILTER_ADAPTIVE
define|#
directive|define
name|MNG_FILTER_ADAPTIVE
value|0
comment|/* IHDR, BASI, JHDR */
comment|/* #define MNG_FILTER_NO_ADAPTIVE           1 #define MNG_FILTER_NO_DIFFERING          0 #define MNG_FILTER_DIFFERING             0x40 #define MNG_FILTER_MASK                  (MNG_FILTER_NO_ADAPTIVE | MNG_FILTER_DIFFERING) */
ifdef|#
directive|ifdef
name|FILTER192
DECL|macro|MNG_FILTER_DIFFERING
define|#
directive|define
name|MNG_FILTER_DIFFERING
value|0xC0
endif|#
directive|endif
ifdef|#
directive|ifdef
name|FILTER193
DECL|macro|MNG_FILTER_NOFILTER
define|#
directive|define
name|MNG_FILTER_NOFILTER
value|0xC1
endif|#
directive|endif
DECL|macro|MNG_INTERLACE_NONE
define|#
directive|define
name|MNG_INTERLACE_NONE
value|0
comment|/* IHDR, BASI, JHDR */
DECL|macro|MNG_INTERLACE_ADAM7
define|#
directive|define
name|MNG_INTERLACE_ADAM7
value|1
DECL|macro|MNG_FILTER_NONE
define|#
directive|define
name|MNG_FILTER_NONE
value|0
comment|/* IDAT */
DECL|macro|MNG_FILTER_SUB
define|#
directive|define
name|MNG_FILTER_SUB
value|1
DECL|macro|MNG_FILTER_UP
define|#
directive|define
name|MNG_FILTER_UP
value|2
DECL|macro|MNG_FILTER_AVERAGE
define|#
directive|define
name|MNG_FILTER_AVERAGE
value|3
DECL|macro|MNG_FILTER_PAETH
define|#
directive|define
name|MNG_FILTER_PAETH
value|4
DECL|macro|MNG_INTENT_PERCEPTUAL
define|#
directive|define
name|MNG_INTENT_PERCEPTUAL
value|0
comment|/* sRGB */
DECL|macro|MNG_INTENT_RELATIVECOLORIMETRIC
define|#
directive|define
name|MNG_INTENT_RELATIVECOLORIMETRIC
value|1
DECL|macro|MNG_INTENT_SATURATION
define|#
directive|define
name|MNG_INTENT_SATURATION
value|2
DECL|macro|MNG_INTENT_ABSOLUTECOLORIMETRIC
define|#
directive|define
name|MNG_INTENT_ABSOLUTECOLORIMETRIC
value|3
comment|/* tEXt, zTXt, iTXt */
DECL|macro|MNG_TEXT_TITLE
define|#
directive|define
name|MNG_TEXT_TITLE
value|"Title"
DECL|macro|MNG_TEXT_AUTHOR
define|#
directive|define
name|MNG_TEXT_AUTHOR
value|"Author"
DECL|macro|MNG_TEXT_DESCRIPTION
define|#
directive|define
name|MNG_TEXT_DESCRIPTION
value|"Description"
DECL|macro|MNG_TEXT_COPYRIGHT
define|#
directive|define
name|MNG_TEXT_COPYRIGHT
value|"Copyright"
DECL|macro|MNG_TEXT_CREATIONTIME
define|#
directive|define
name|MNG_TEXT_CREATIONTIME
value|"Creation Time"
DECL|macro|MNG_TEXT_SOFTWARE
define|#
directive|define
name|MNG_TEXT_SOFTWARE
value|"Software"
DECL|macro|MNG_TEXT_DISCLAIMER
define|#
directive|define
name|MNG_TEXT_DISCLAIMER
value|"Disclaimer"
DECL|macro|MNG_TEXT_WARNING
define|#
directive|define
name|MNG_TEXT_WARNING
value|"Warning"
DECL|macro|MNG_TEXT_SOURCE
define|#
directive|define
name|MNG_TEXT_SOURCE
value|"Source"
DECL|macro|MNG_TEXT_COMMENT
define|#
directive|define
name|MNG_TEXT_COMMENT
value|"Comment"
DECL|macro|MNG_FLAG_UNCOMPRESSED
define|#
directive|define
name|MNG_FLAG_UNCOMPRESSED
value|0
comment|/* iTXt */
DECL|macro|MNG_FLAG_COMPRESSED
define|#
directive|define
name|MNG_FLAG_COMPRESSED
value|1
DECL|macro|MNG_UNIT_UNKNOWN
define|#
directive|define
name|MNG_UNIT_UNKNOWN
value|0
comment|/* pHYs, pHYg */
DECL|macro|MNG_UNIT_METER
define|#
directive|define
name|MNG_UNIT_METER
value|1
comment|/* MHDR */
DECL|macro|MNG_SIMPLICITY_VALID
define|#
directive|define
name|MNG_SIMPLICITY_VALID
value|0x00000001
DECL|macro|MNG_SIMPLICITY_SIMPLEFEATURES
define|#
directive|define
name|MNG_SIMPLICITY_SIMPLEFEATURES
value|0x00000002
DECL|macro|MNG_SIMPLICITY_COMPLEXFEATURES
define|#
directive|define
name|MNG_SIMPLICITY_COMPLEXFEATURES
value|0x00000004
DECL|macro|MNG_SIMPLICITY_TRANSPARENCY
define|#
directive|define
name|MNG_SIMPLICITY_TRANSPARENCY
value|0x00000008
DECL|macro|MNG_SIMPLICITY_JNG
define|#
directive|define
name|MNG_SIMPLICITY_JNG
value|0x00000010
DECL|macro|MNG_SIMPLICITY_DELTAPNG
define|#
directive|define
name|MNG_SIMPLICITY_DELTAPNG
value|0x00000020
DECL|macro|MNG_TERMINATION_DECODER_NC
define|#
directive|define
name|MNG_TERMINATION_DECODER_NC
value|0
comment|/* LOOP */
DECL|macro|MNG_TERMINATION_USER_NC
define|#
directive|define
name|MNG_TERMINATION_USER_NC
value|1
DECL|macro|MNG_TERMINATION_EXTERNAL_NC
define|#
directive|define
name|MNG_TERMINATION_EXTERNAL_NC
value|2
DECL|macro|MNG_TERMINATION_DETERMINISTIC_NC
define|#
directive|define
name|MNG_TERMINATION_DETERMINISTIC_NC
value|3
DECL|macro|MNG_TERMINATION_DECODER_C
define|#
directive|define
name|MNG_TERMINATION_DECODER_C
value|4
DECL|macro|MNG_TERMINATION_USER_C
define|#
directive|define
name|MNG_TERMINATION_USER_C
value|5
DECL|macro|MNG_TERMINATION_EXTERNAL_C
define|#
directive|define
name|MNG_TERMINATION_EXTERNAL_C
value|6
DECL|macro|MNG_TERMINATION_DETERMINISTIC_C
define|#
directive|define
name|MNG_TERMINATION_DETERMINISTIC_C
value|7
DECL|macro|MNG_DONOTSHOW_VISIBLE
define|#
directive|define
name|MNG_DONOTSHOW_VISIBLE
value|0
comment|/* DEFI */
DECL|macro|MNG_DONOTSHOW_NOTVISIBLE
define|#
directive|define
name|MNG_DONOTSHOW_NOTVISIBLE
value|1
DECL|macro|MNG_ABSTRACT
define|#
directive|define
name|MNG_ABSTRACT
value|0
comment|/* DEFI */
DECL|macro|MNG_CONCRETE
define|#
directive|define
name|MNG_CONCRETE
value|1
DECL|macro|MNG_NOTVIEWABLE
define|#
directive|define
name|MNG_NOTVIEWABLE
value|0
comment|/* BASI */
DECL|macro|MNG_VIEWABLE
define|#
directive|define
name|MNG_VIEWABLE
value|1
DECL|macro|MNG_FULL_CLONE
define|#
directive|define
name|MNG_FULL_CLONE
value|0
comment|/* CLON */
DECL|macro|MNG_PARTIAL_CLONE
define|#
directive|define
name|MNG_PARTIAL_CLONE
value|1
DECL|macro|MNG_RENUMBER
define|#
directive|define
name|MNG_RENUMBER
value|2
DECL|macro|MNG_CONCRETE_ASPARENT
define|#
directive|define
name|MNG_CONCRETE_ASPARENT
value|0
comment|/* CLON */
DECL|macro|MNG_CONCRETE_MAKEABSTRACT
define|#
directive|define
name|MNG_CONCRETE_MAKEABSTRACT
value|1
DECL|macro|MNG_LOCATION_ABSOLUTE
define|#
directive|define
name|MNG_LOCATION_ABSOLUTE
value|0
comment|/* CLON, MOVE */
DECL|macro|MNG_LOCATION_RELATIVE
define|#
directive|define
name|MNG_LOCATION_RELATIVE
value|1
ifndef|#
directive|ifndef
name|MNG_SKIPCHUNK_PAST
DECL|macro|MNG_TARGET_ABSOLUTE
define|#
directive|define
name|MNG_TARGET_ABSOLUTE
value|0
comment|/* PAST */
DECL|macro|MNG_TARGET_RELATIVE_SAMEPAST
define|#
directive|define
name|MNG_TARGET_RELATIVE_SAMEPAST
value|1
DECL|macro|MNG_TARGET_RELATIVE_PREVPAST
define|#
directive|define
name|MNG_TARGET_RELATIVE_PREVPAST
value|2
DECL|macro|MNG_COMPOSITE_OVER
define|#
directive|define
name|MNG_COMPOSITE_OVER
value|0
comment|/* PAST */
DECL|macro|MNG_COMPOSITE_REPLACE
define|#
directive|define
name|MNG_COMPOSITE_REPLACE
value|1
DECL|macro|MNG_COMPOSITE_UNDER
define|#
directive|define
name|MNG_COMPOSITE_UNDER
value|2
DECL|macro|MNG_ORIENTATION_SAME
define|#
directive|define
name|MNG_ORIENTATION_SAME
value|0
comment|/* PAST */
DECL|macro|MNG_ORIENTATION_180DEG
define|#
directive|define
name|MNG_ORIENTATION_180DEG
value|2
DECL|macro|MNG_ORIENTATION_FLIPHORZ
define|#
directive|define
name|MNG_ORIENTATION_FLIPHORZ
value|4
DECL|macro|MNG_ORIENTATION_FLIPVERT
define|#
directive|define
name|MNG_ORIENTATION_FLIPVERT
value|6
DECL|macro|MNG_ORIENTATION_TILED
define|#
directive|define
name|MNG_ORIENTATION_TILED
value|8
DECL|macro|MNG_OFFSET_ABSOLUTE
define|#
directive|define
name|MNG_OFFSET_ABSOLUTE
value|0
comment|/* PAST */
DECL|macro|MNG_OFFSET_RELATIVE
define|#
directive|define
name|MNG_OFFSET_RELATIVE
value|1
endif|#
directive|endif
DECL|macro|MNG_BOUNDARY_ABSOLUTE
define|#
directive|define
name|MNG_BOUNDARY_ABSOLUTE
value|0
comment|/* PAST, FRAM */
DECL|macro|MNG_BOUNDARY_RELATIVE
define|#
directive|define
name|MNG_BOUNDARY_RELATIVE
value|1
DECL|macro|MNG_BACKGROUNDCOLOR_MANDATORY
define|#
directive|define
name|MNG_BACKGROUNDCOLOR_MANDATORY
value|0x01
comment|/* BACK */
DECL|macro|MNG_BACKGROUNDIMAGE_MANDATORY
define|#
directive|define
name|MNG_BACKGROUNDIMAGE_MANDATORY
value|0x02
comment|/* BACK */
DECL|macro|MNG_BACKGROUNDIMAGE_NOTILE
define|#
directive|define
name|MNG_BACKGROUNDIMAGE_NOTILE
value|0
comment|/* BACK */
DECL|macro|MNG_BACKGROUNDIMAGE_TILE
define|#
directive|define
name|MNG_BACKGROUNDIMAGE_TILE
value|1
DECL|macro|MNG_FRAMINGMODE_NOCHANGE
define|#
directive|define
name|MNG_FRAMINGMODE_NOCHANGE
value|0
comment|/* FRAM */
DECL|macro|MNG_FRAMINGMODE_1
define|#
directive|define
name|MNG_FRAMINGMODE_1
value|1
DECL|macro|MNG_FRAMINGMODE_2
define|#
directive|define
name|MNG_FRAMINGMODE_2
value|2
DECL|macro|MNG_FRAMINGMODE_3
define|#
directive|define
name|MNG_FRAMINGMODE_3
value|3
DECL|macro|MNG_FRAMINGMODE_4
define|#
directive|define
name|MNG_FRAMINGMODE_4
value|4
DECL|macro|MNG_CHANGEDELAY_NO
define|#
directive|define
name|MNG_CHANGEDELAY_NO
value|0
comment|/* FRAM */
DECL|macro|MNG_CHANGEDELAY_NEXTSUBFRAME
define|#
directive|define
name|MNG_CHANGEDELAY_NEXTSUBFRAME
value|1
DECL|macro|MNG_CHANGEDELAY_DEFAULT
define|#
directive|define
name|MNG_CHANGEDELAY_DEFAULT
value|2
DECL|macro|MNG_CHANGETIMOUT_NO
define|#
directive|define
name|MNG_CHANGETIMOUT_NO
value|0
comment|/* FRAM */
DECL|macro|MNG_CHANGETIMOUT_DETERMINISTIC_1
define|#
directive|define
name|MNG_CHANGETIMOUT_DETERMINISTIC_1
value|1
DECL|macro|MNG_CHANGETIMOUT_DETERMINISTIC_2
define|#
directive|define
name|MNG_CHANGETIMOUT_DETERMINISTIC_2
value|2
DECL|macro|MNG_CHANGETIMOUT_DECODER_1
define|#
directive|define
name|MNG_CHANGETIMOUT_DECODER_1
value|3
DECL|macro|MNG_CHANGETIMOUT_DECODER_2
define|#
directive|define
name|MNG_CHANGETIMOUT_DECODER_2
value|4
DECL|macro|MNG_CHANGETIMOUT_USER_1
define|#
directive|define
name|MNG_CHANGETIMOUT_USER_1
value|5
DECL|macro|MNG_CHANGETIMOUT_USER_2
define|#
directive|define
name|MNG_CHANGETIMOUT_USER_2
value|6
DECL|macro|MNG_CHANGETIMOUT_EXTERNAL_1
define|#
directive|define
name|MNG_CHANGETIMOUT_EXTERNAL_1
value|7
DECL|macro|MNG_CHANGETIMOUT_EXTERNAL_2
define|#
directive|define
name|MNG_CHANGETIMOUT_EXTERNAL_2
value|8
DECL|macro|MNG_CHANGECLIPPING_NO
define|#
directive|define
name|MNG_CHANGECLIPPING_NO
value|0
comment|/* FRAM */
DECL|macro|MNG_CHANGECLIPPING_NEXTSUBFRAME
define|#
directive|define
name|MNG_CHANGECLIPPING_NEXTSUBFRAME
value|1
DECL|macro|MNG_CHANGECLIPPING_DEFAULT
define|#
directive|define
name|MNG_CHANGECLIPPING_DEFAULT
value|2
DECL|macro|MNG_CHANGESYNCID_NO
define|#
directive|define
name|MNG_CHANGESYNCID_NO
value|0
comment|/* FRAM */
DECL|macro|MNG_CHANGESYNCID_NEXTSUBFRAME
define|#
directive|define
name|MNG_CHANGESYNCID_NEXTSUBFRAME
value|1
DECL|macro|MNG_CHANGESYNCID_DEFAULT
define|#
directive|define
name|MNG_CHANGESYNCID_DEFAULT
value|2
DECL|macro|MNG_CLIPPING_ABSOLUTE
define|#
directive|define
name|MNG_CLIPPING_ABSOLUTE
value|0
comment|/* CLIP */
DECL|macro|MNG_CLIPPING_RELATIVE
define|#
directive|define
name|MNG_CLIPPING_RELATIVE
value|1
DECL|macro|MNG_SHOWMODE_0
define|#
directive|define
name|MNG_SHOWMODE_0
value|0
comment|/* SHOW */
DECL|macro|MNG_SHOWMODE_1
define|#
directive|define
name|MNG_SHOWMODE_1
value|1
DECL|macro|MNG_SHOWMODE_2
define|#
directive|define
name|MNG_SHOWMODE_2
value|2
DECL|macro|MNG_SHOWMODE_3
define|#
directive|define
name|MNG_SHOWMODE_3
value|3
DECL|macro|MNG_SHOWMODE_4
define|#
directive|define
name|MNG_SHOWMODE_4
value|4
DECL|macro|MNG_SHOWMODE_5
define|#
directive|define
name|MNG_SHOWMODE_5
value|5
DECL|macro|MNG_SHOWMODE_6
define|#
directive|define
name|MNG_SHOWMODE_6
value|6
DECL|macro|MNG_SHOWMODE_7
define|#
directive|define
name|MNG_SHOWMODE_7
value|7
DECL|macro|MNG_TERMACTION_LASTFRAME
define|#
directive|define
name|MNG_TERMACTION_LASTFRAME
value|0
comment|/* TERM */
DECL|macro|MNG_TERMACTION_CLEAR
define|#
directive|define
name|MNG_TERMACTION_CLEAR
value|1
DECL|macro|MNG_TERMACTION_FIRSTFRAME
define|#
directive|define
name|MNG_TERMACTION_FIRSTFRAME
value|2
DECL|macro|MNG_TERMACTION_REPEAT
define|#
directive|define
name|MNG_TERMACTION_REPEAT
value|3
DECL|macro|MNG_ITERACTION_LASTFRAME
define|#
directive|define
name|MNG_ITERACTION_LASTFRAME
value|0
comment|/* TERM */
DECL|macro|MNG_ITERACTION_CLEAR
define|#
directive|define
name|MNG_ITERACTION_CLEAR
value|1
DECL|macro|MNG_ITERACTION_FIRSTFRAME
define|#
directive|define
name|MNG_ITERACTION_FIRSTFRAME
value|2
DECL|macro|MNG_SAVEOFFSET_4BYTE
define|#
directive|define
name|MNG_SAVEOFFSET_4BYTE
value|4
comment|/* SAVE */
DECL|macro|MNG_SAVEOFFSET_8BYTE
define|#
directive|define
name|MNG_SAVEOFFSET_8BYTE
value|8
DECL|macro|MNG_SAVEENTRY_SEGMENTFULL
define|#
directive|define
name|MNG_SAVEENTRY_SEGMENTFULL
value|0
comment|/* SAVE */
DECL|macro|MNG_SAVEENTRY_SEGMENT
define|#
directive|define
name|MNG_SAVEENTRY_SEGMENT
value|1
DECL|macro|MNG_SAVEENTRY_SUBFRAME
define|#
directive|define
name|MNG_SAVEENTRY_SUBFRAME
value|2
DECL|macro|MNG_SAVEENTRY_EXPORTEDIMAGE
define|#
directive|define
name|MNG_SAVEENTRY_EXPORTEDIMAGE
value|3
DECL|macro|MNG_PRIORITY_ABSOLUTE
define|#
directive|define
name|MNG_PRIORITY_ABSOLUTE
value|0
comment|/* fPRI */
DECL|macro|MNG_PRIORITY_RELATIVE
define|#
directive|define
name|MNG_PRIORITY_RELATIVE
value|1
ifdef|#
directive|ifdef
name|MNG_INCLUDE_JNG
DECL|macro|MNG_COLORTYPE_JPEGGRAY
define|#
directive|define
name|MNG_COLORTYPE_JPEGGRAY
value|8
comment|/* JHDR */
DECL|macro|MNG_COLORTYPE_JPEGCOLOR
define|#
directive|define
name|MNG_COLORTYPE_JPEGCOLOR
value|10
DECL|macro|MNG_COLORTYPE_JPEGGRAYA
define|#
directive|define
name|MNG_COLORTYPE_JPEGGRAYA
value|12
DECL|macro|MNG_COLORTYPE_JPEGCOLORA
define|#
directive|define
name|MNG_COLORTYPE_JPEGCOLORA
value|14
DECL|macro|MNG_BITDEPTH_JPEG8
define|#
directive|define
name|MNG_BITDEPTH_JPEG8
value|8
comment|/* JHDR */
DECL|macro|MNG_BITDEPTH_JPEG12
define|#
directive|define
name|MNG_BITDEPTH_JPEG12
value|12
DECL|macro|MNG_BITDEPTH_JPEG8AND12
define|#
directive|define
name|MNG_BITDEPTH_JPEG8AND12
value|20
DECL|macro|MNG_COMPRESSION_BASELINEJPEG
define|#
directive|define
name|MNG_COMPRESSION_BASELINEJPEG
value|8
comment|/* JHDR */
DECL|macro|MNG_INTERLACE_SEQUENTIAL
define|#
directive|define
name|MNG_INTERLACE_SEQUENTIAL
value|0
comment|/* JHDR */
DECL|macro|MNG_INTERLACE_PROGRESSIVE
define|#
directive|define
name|MNG_INTERLACE_PROGRESSIVE
value|8
endif|#
directive|endif
comment|/* MNG_INCLUDE_JNG */
DECL|macro|MNG_IMAGETYPE_UNKNOWN
define|#
directive|define
name|MNG_IMAGETYPE_UNKNOWN
value|0
comment|/* DHDR */
DECL|macro|MNG_IMAGETYPE_PNG
define|#
directive|define
name|MNG_IMAGETYPE_PNG
value|1
DECL|macro|MNG_IMAGETYPE_JNG
define|#
directive|define
name|MNG_IMAGETYPE_JNG
value|2
DECL|macro|MNG_DELTATYPE_REPLACE
define|#
directive|define
name|MNG_DELTATYPE_REPLACE
value|0
comment|/* DHDR */
DECL|macro|MNG_DELTATYPE_BLOCKPIXELADD
define|#
directive|define
name|MNG_DELTATYPE_BLOCKPIXELADD
value|1
DECL|macro|MNG_DELTATYPE_BLOCKALPHAADD
define|#
directive|define
name|MNG_DELTATYPE_BLOCKALPHAADD
value|2
DECL|macro|MNG_DELTATYPE_BLOCKCOLORADD
define|#
directive|define
name|MNG_DELTATYPE_BLOCKCOLORADD
value|3
DECL|macro|MNG_DELTATYPE_BLOCKPIXELREPLACE
define|#
directive|define
name|MNG_DELTATYPE_BLOCKPIXELREPLACE
value|4
DECL|macro|MNG_DELTATYPE_BLOCKALPHAREPLACE
define|#
directive|define
name|MNG_DELTATYPE_BLOCKALPHAREPLACE
value|5
DECL|macro|MNG_DELTATYPE_BLOCKCOLORREPLACE
define|#
directive|define
name|MNG_DELTATYPE_BLOCKCOLORREPLACE
value|6
DECL|macro|MNG_DELTATYPE_NOCHANGE
define|#
directive|define
name|MNG_DELTATYPE_NOCHANGE
value|7
DECL|macro|MNG_FILLMETHOD_LEFTBITREPLICATE
define|#
directive|define
name|MNG_FILLMETHOD_LEFTBITREPLICATE
value|0
comment|/* PROM */
DECL|macro|MNG_FILLMETHOD_ZEROFILL
define|#
directive|define
name|MNG_FILLMETHOD_ZEROFILL
value|1
DECL|macro|MNG_DELTATYPE_REPLACERGB
define|#
directive|define
name|MNG_DELTATYPE_REPLACERGB
value|0
comment|/* PPLT */
DECL|macro|MNG_DELTATYPE_DELTARGB
define|#
directive|define
name|MNG_DELTATYPE_DELTARGB
value|1
DECL|macro|MNG_DELTATYPE_REPLACEALPHA
define|#
directive|define
name|MNG_DELTATYPE_REPLACEALPHA
value|2
DECL|macro|MNG_DELTATYPE_DELTAALPHA
define|#
directive|define
name|MNG_DELTATYPE_DELTAALPHA
value|3
DECL|macro|MNG_DELTATYPE_REPLACERGBA
define|#
directive|define
name|MNG_DELTATYPE_REPLACERGBA
value|4
DECL|macro|MNG_DELTATYPE_DELTARGBA
define|#
directive|define
name|MNG_DELTATYPE_DELTARGBA
value|5
DECL|macro|MNG_POLARITY_ONLY
define|#
directive|define
name|MNG_POLARITY_ONLY
value|0
comment|/* DBYK */
DECL|macro|MNG_POLARITY_ALLBUT
define|#
directive|define
name|MNG_POLARITY_ALLBUT
value|1
DECL|macro|MNG_EVENT_NONE
define|#
directive|define
name|MNG_EVENT_NONE
value|0
comment|/* evNT */
DECL|macro|MNG_EVENT_MOUSEENTER
define|#
directive|define
name|MNG_EVENT_MOUSEENTER
value|1
DECL|macro|MNG_EVENT_MOUSEMOVE
define|#
directive|define
name|MNG_EVENT_MOUSEMOVE
value|2
DECL|macro|MNG_EVENT_MOUSEEXIT
define|#
directive|define
name|MNG_EVENT_MOUSEEXIT
value|3
DECL|macro|MNG_EVENT_MOUSEDOWN
define|#
directive|define
name|MNG_EVENT_MOUSEDOWN
value|4
DECL|macro|MNG_EVENT_MOUSEUP
define|#
directive|define
name|MNG_EVENT_MOUSEUP
value|5
DECL|macro|MNG_MASK_NONE
define|#
directive|define
name|MNG_MASK_NONE
value|0
comment|/* evNT */
DECL|macro|MNG_MASK_BOX
define|#
directive|define
name|MNG_MASK_BOX
value|1
DECL|macro|MNG_MASK_OBJECT
define|#
directive|define
name|MNG_MASK_OBJECT
value|2
DECL|macro|MNG_MASK_OBJECTIX
define|#
directive|define
name|MNG_MASK_OBJECTIX
value|3
DECL|macro|MNG_MASK_BOXOBJECT
define|#
directive|define
name|MNG_MASK_BOXOBJECT
value|4
DECL|macro|MNG_MASK_BOXOBJECTIX
define|#
directive|define
name|MNG_MASK_BOXOBJECTIX
value|5
comment|/* ************************************************************************** */
comment|/* *                                                                        * */
comment|/* *  Processtext callback types                                            * */
comment|/* *                                                                        * */
comment|/* ************************************************************************** */
DECL|macro|MNG_TYPE_TEXT
define|#
directive|define
name|MNG_TYPE_TEXT
value|0
DECL|macro|MNG_TYPE_ZTXT
define|#
directive|define
name|MNG_TYPE_ZTXT
value|1
DECL|macro|MNG_TYPE_ITXT
define|#
directive|define
name|MNG_TYPE_ITXT
value|2
comment|/* ************************************************************************** */
comment|/* *                                                                        * */
comment|/* *  CRC processing masks                                                  * */
comment|/* *                                                                        * */
comment|/* ************************************************************************** */
DECL|macro|MNG_CRC_INPUT
define|#
directive|define
name|MNG_CRC_INPUT
value|0x0000000f
DECL|macro|MNG_CRC_INPUT_NONE
define|#
directive|define
name|MNG_CRC_INPUT_NONE
value|0x00000000
DECL|macro|MNG_CRC_INPUT_PRESENT
define|#
directive|define
name|MNG_CRC_INPUT_PRESENT
value|0x00000001
DECL|macro|MNG_CRC_OUTPUT
define|#
directive|define
name|MNG_CRC_OUTPUT
value|0x000000f0
DECL|macro|MNG_CRC_OUTPUT_NONE
define|#
directive|define
name|MNG_CRC_OUTPUT_NONE
value|0x00000000
DECL|macro|MNG_CRC_OUTPUT_GENERATE
define|#
directive|define
name|MNG_CRC_OUTPUT_GENERATE
value|0x00000020
DECL|macro|MNG_CRC_OUTPUT_DUMMY
define|#
directive|define
name|MNG_CRC_OUTPUT_DUMMY
value|0x00000040
DECL|macro|MNG_CRC_ANCILLARY
define|#
directive|define
name|MNG_CRC_ANCILLARY
value|0x00000f00
DECL|macro|MNG_CRC_ANCILLARY_IGNORE
define|#
directive|define
name|MNG_CRC_ANCILLARY_IGNORE
value|0x00000000
DECL|macro|MNG_CRC_ANCILLARY_DISCARD
define|#
directive|define
name|MNG_CRC_ANCILLARY_DISCARD
value|0x00000100
DECL|macro|MNG_CRC_ANCILLARY_WARNING
define|#
directive|define
name|MNG_CRC_ANCILLARY_WARNING
value|0x00000200
DECL|macro|MNG_CRC_ANCILLARY_ERROR
define|#
directive|define
name|MNG_CRC_ANCILLARY_ERROR
value|0x00000300
DECL|macro|MNG_CRC_CRITICAL
define|#
directive|define
name|MNG_CRC_CRITICAL
value|0x0000f000
DECL|macro|MNG_CRC_CRITICAL_IGNORE
define|#
directive|define
name|MNG_CRC_CRITICAL_IGNORE
value|0x00000000
DECL|macro|MNG_CRC_CRITICAL_WARNING
define|#
directive|define
name|MNG_CRC_CRITICAL_WARNING
value|0x00002000
DECL|macro|MNG_CRC_CRITICAL_ERROR
define|#
directive|define
name|MNG_CRC_CRITICAL_ERROR
value|0x00003000
DECL|macro|MNG_CRC_DEFAULT
define|#
directive|define
name|MNG_CRC_DEFAULT
value|0x00002121
comment|/* ************************************************************************** */
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern
begin_endif
endif|#
directive|endif
end_endif
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/* _libmng_h_ */
end_comment
begin_comment
comment|/* ************************************************************************** */
end_comment
begin_comment
comment|/* * end of file                                                            * */
end_comment
begin_comment
comment|/* ************************************************************************** */
end_comment
end_unit
