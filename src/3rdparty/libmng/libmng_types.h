begin_unit
begin_comment
comment|/* ************************************************************************** */
end_comment
begin_comment
comment|/* *             For conditions of distribution and use,                    * */
end_comment
begin_comment
comment|/* *                see copyright notice in libmng.h                        * */
end_comment
begin_comment
comment|/* ************************************************************************** */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* * project   : libmng                                                     * */
end_comment
begin_comment
comment|/* * file      : libmng_types.h            copyright (c) 2000-2007 G.Juyn   * */
end_comment
begin_comment
comment|/* * version   : 1.0.10                                                     * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* * purpose   : type specifications                                        * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* * author    : G.Juyn                                                     * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* * comment   : Specification of the types used by the library             * */
end_comment
begin_comment
comment|/* *             Creates platform-independant structure                     * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* * changes   : 0.5.1 - 05/06/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - added iteratechunk callback definition                   * */
end_comment
begin_comment
comment|/* *             0.5.1 - 05/08/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - improved definitions for DLL support                     * */
end_comment
begin_comment
comment|/* *             - added 8-bit palette definition                           * */
end_comment
begin_comment
comment|/* *             - added general array definitions                          * */
end_comment
begin_comment
comment|/* *             - added MNG_NULL definition                                * */
end_comment
begin_comment
comment|/* *             - changed strict-ANSI stuff                                * */
end_comment
begin_comment
comment|/* *             0.5.1 - 05/11/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - changed most callback prototypes to allow the app        * */
end_comment
begin_comment
comment|/* *               to report errors during callback processing              * */
end_comment
begin_comment
comment|/* *             0.5.1 - 05/16/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - moved standard header includes into this file            * */
end_comment
begin_comment
comment|/* *               (stdlib/mem for mem-mngmt& math for fp gamma-calc)      * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* *             0.5.2 - 05/18/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - B003 - fixed problem with<mem.h> being proprietary      * */
end_comment
begin_comment
comment|/* *               to Borland platform                                      * */
end_comment
begin_comment
comment|/* *             - added helper definitions for JNG (IJG-based)             * */
end_comment
begin_comment
comment|/* *             - fixed support for IJGSRC6B                               * */
end_comment
begin_comment
comment|/* *             0.5.2 - 05/24/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - added default IJG compression parameters and such        * */
end_comment
begin_comment
comment|/* *             0.5.2 - 05/31/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - fixed inclusion for memcpy (contributed by Tim Rowley)   * */
end_comment
begin_comment
comment|/* *             - added mng_int32p (contributed by Tim Rowley)             * */
end_comment
begin_comment
comment|/* *             0.5.2 - 06/02/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - removed SWAP_ENDIAN reference (contributed by Tim Rowley)* */
end_comment
begin_comment
comment|/* *             - added getalphaline callback for RGB8_A8 canvasstyle      * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* *             0.5.3 - 06/21/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - added speedtype to facilitate testing                    * */
end_comment
begin_comment
comment|/* *             0.5.3 - 06/27/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - added typedef for mng_size_t                             * */
end_comment
begin_comment
comment|/* *             - changed size parameter for memory callbacks to           * */
end_comment
begin_comment
comment|/* *               mng_size_t                                               * */
end_comment
begin_comment
comment|/* *             0.5.3 - 06/28/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - changed definition of 32-bit ints (64-bit platforms)     * */
end_comment
begin_comment
comment|/* *             - changed definition of mng_handle (64-bit platforms)      * */
end_comment
begin_comment
comment|/* *             0.5.3 - 06/29/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - changed definition of mng_handle (again)                 * */
end_comment
begin_comment
comment|/* *             - swapped refresh parameters                               * */
end_comment
begin_comment
comment|/* *             - added inclusion of stdlib.h for abs()                    * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* *             0.9.0 - 06/30/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - changed refresh parameters to 'x,y,width,height'         * */
end_comment
begin_comment
comment|/* *             0.9.1 - 07/10/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - added suspendbuffer constants                            * */
end_comment
begin_comment
comment|/* *             0.9.1 - 07/15/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - added callbacks for SAVE/SEEK processing                 * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* *             0.9.2 - 08/05/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - changed file-prefixes                                    * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* *             0.9.3 - 08/07/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - B111300 - fixup for improved portability                 * */
end_comment
begin_comment
comment|/* *             0.9.3 - 08/12/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - added workaround for faulty PhotoShop iCCP chunk         * */
end_comment
begin_comment
comment|/* *             0.9.3 - 09/11/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - added export of zlib functions from windows dll          * */
end_comment
begin_comment
comment|/* *             - fixed inclusion parameters once again to make those      * */
end_comment
begin_comment
comment|/* *               external libs work together                              * */
end_comment
begin_comment
comment|/* *             - re-fixed fixed inclusion parameters                      * */
end_comment
begin_comment
comment|/* *               (these freeking libraries make me mad)                   * */
end_comment
begin_comment
comment|/* *             0.9.3 - 10/11/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - added support for nEED                                   * */
end_comment
begin_comment
comment|/* *             0.9.3 - 10/17/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - added callback to process non-critical unknown chunks    * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* *             0.9.4 - 11/20/2000 - R.Giles                               * */
end_comment
begin_comment
comment|/* *             - fixed inclusion of lcms header for non-windows platforms * */
end_comment
begin_comment
comment|/* *             0.9.4 - 12/12/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - changed callback convention for MSVC (Thanks Chad)       * */
end_comment
begin_comment
comment|/* *             0.9.4 - 12/16/2000 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - fixed mixup of data-& function-pointers (thanks Dimitri)* */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* *             1.0.1 - 02/08/2001 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - added MEND processing callback                           * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* *             1.0.2 - 06/23/2001 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - added processterm callback                               * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* *             1.0.3 - 08/06/2001 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - changed inclusion of lcms.h for Linux platforms          * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* *             1.0.5 - 08/19/2002 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - B597134 - libmng pollutes the linker namespace           * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* *             1.0.6 - 04/11/2003 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - B719420 - fixed several MNG_APP_CMS problems             * */
end_comment
begin_comment
comment|/* *             1.0.6 - 06/15/2003 - R.Giles                               * */
end_comment
begin_comment
comment|/* *             - lcms.h inclusion is generally no longer prefixed         * */
end_comment
begin_comment
comment|/* *             1.0.6 - 07/07/2003 - G. R-P.                               * */
end_comment
begin_comment
comment|/* *             - added png_imgtypes enumeration                           * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* *             1.0.7 - 03/10/2004 - G.R-P                                 * */
end_comment
begin_comment
comment|/* *             - added conditionals around openstream/closestream         * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* *             1.0.8 - 04/11/2004 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - added data-push mechanisms for specialized decoders      * */
end_comment
begin_comment
comment|/* *             1.0.8 - 08/01/2004 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - added support for 3+byte pixelsize for JPEG's            * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* *             1.0.9 - 12/05/2004 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - inclusion of zlib/lcms/ijgsrc6b with<> instead of ""    * */
end_comment
begin_comment
comment|/* *             1.0.9 - 12/06/2004 - G.Juyn                                * */
end_comment
begin_comment
comment|/* *             - added conditional MNG_OPTIMIZE_CHUNKREADER               * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* *             1.0.10 - 04/08/2007 - G.Juyn                               * */
end_comment
begin_comment
comment|/* *             - added support for mPNG proposal                          * */
end_comment
begin_comment
comment|/* *             1.0.10 - 04/12/2007 - G.Juyn                               * */
end_comment
begin_comment
comment|/* *             - added support for ANG proposal                           * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* ************************************************************************** */
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|_libmng_types_h_
end_ifndef
begin_define
DECL|macro|_libmng_types_h_
define|#
directive|define
name|_libmng_types_h_
end_define
begin_comment
comment|/* ************************************************************************** */
end_comment
begin_ifdef
ifdef|#
directive|ifdef
name|__BORLANDC__
end_ifdef
begin_pragma
pragma|#
directive|pragma
name|option
name|-
name|AT
end_pragma
begin_comment
comment|/* turn off strict ANSI-C for the moment */
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|WIN32
end_ifndef
begin_if
if|#
directive|if
name|defined
argument_list|(
name|_WIN32
argument_list|)
operator|||
name|defined
argument_list|(
name|__WIN32__
argument_list|)
operator|||
name|defined
argument_list|(
name|_Windows
argument_list|)
operator|||
name|defined
argument_list|(
name|_WINDOWS
argument_list|)
end_if
begin_define
DECL|macro|WIN32
define|#
directive|define
name|WIN32
end_define
begin_comment
DECL|macro|WIN32
comment|/* gather them into a single define */
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/* ************************************************************************** */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* * Here's where the external& standard libs are embedded                 * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* * (it can be a bit of a pain in the lower-back to get them to work       * */
end_comment
begin_comment
comment|/* *  together)                                                             * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* ************************************************************************** */
end_comment
begin_ifdef
ifdef|#
directive|ifdef
name|WIN32
end_ifdef
begin_comment
comment|/* only include needed stuff */
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|WIN32_LEAN_AND_MEAN
end_ifndef
begin_define
DECL|macro|WIN32_LEAN_AND_MEAN
define|#
directive|define
name|WIN32_LEAN_AND_MEAN
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_endif
endif|#
directive|endif
end_endif
begin_ifdef
ifdef|#
directive|ifdef
name|MNG_USE_DLL
end_ifdef
begin_ifdef
ifdef|#
directive|ifdef
name|MNG_SKIP_ZLIB
end_ifdef
begin_undef
DECL|macro|MNG_INCLUDE_ZLIB
undef|#
directive|undef
name|MNG_INCLUDE_ZLIB
end_undef
begin_endif
endif|#
directive|endif
end_endif
begin_ifdef
ifdef|#
directive|ifdef
name|MNG_SKIP_LCMS
end_ifdef
begin_undef
DECL|macro|MNG_INCLUDE_LCMS
undef|#
directive|undef
name|MNG_INCLUDE_LCMS
end_undef
begin_endif
endif|#
directive|endif
end_endif
begin_ifdef
ifdef|#
directive|ifdef
name|MNG_SKIP_IJG6B
end_ifdef
begin_undef
DECL|macro|MNG_INCLUDE_IJG6B
undef|#
directive|undef
name|MNG_INCLUDE_IJG6B
end_undef
begin_endif
endif|#
directive|endif
end_endif
begin_endif
endif|#
directive|endif
end_endif
begin_ifdef
ifdef|#
directive|ifdef
name|MNG_INCLUDE_ZLIB
end_ifdef
begin_comment
comment|/* zlib by Mark Adler& Jean-loup Gailly */
end_comment
begin_include
include|#
directive|include
file|<zlib.h>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_ifdef
ifdef|#
directive|ifdef
name|MNG_INCLUDE_LCMS
end_ifdef
begin_comment
comment|/* little cms by Marti Maria Saguer */
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|ZLIB_DLL
end_ifndef
begin_undef
DECL|macro|FAR
undef|#
directive|undef
name|FAR
end_undef
begin_endif
endif|#
directive|endif
end_endif
begin_include
include|#
directive|include
file|<lcms.h>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/* MNG_INCLUDE_LCMS */
end_comment
begin_ifdef
ifdef|#
directive|ifdef
name|MNG_INCLUDE_IJG6B
end_ifdef
begin_comment
comment|/* IJG's jpgsrc6b */
end_comment
begin_include
include|#
directive|include
file|<stdio.h>
end_include
begin_ifdef
ifdef|#
directive|ifdef
name|MNG_USE_SETJMP
end_ifdef
begin_include
include|#
directive|include
file|<setjmp.h>
end_include
begin_comment
comment|/* needed for error-recovery (blergh) */
end_comment
begin_else
else|#
directive|else
end_else
begin_ifdef
ifdef|#
directive|ifdef
name|WIN32
end_ifdef
begin_define
DECL|macro|USE_WINDOWS_MESSAGEBOX
define|#
directive|define
name|USE_WINDOWS_MESSAGEBOX
end_define
begin_comment
DECL|macro|USE_WINDOWS_MESSAGEBOX
comment|/* display a messagebox under Windoze */
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/* MNG_USE_SETJMP */
end_comment
begin_ifdef
ifdef|#
directive|ifdef
name|FAR
end_ifdef
begin_undef
DECL|macro|FAR
undef|#
directive|undef
name|FAR
end_undef
begin_comment
DECL|macro|FAR
comment|/* possibly defined by zlib or lcms */
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_define
DECL|macro|JPEG_INTERNAL_OPTIONS
define|#
directive|define
name|JPEG_INTERNAL_OPTIONS
end_define
begin_comment
DECL|macro|JPEG_INTERNAL_OPTIONS
comment|/* for RGB_PIXELSIZE */
end_comment
begin_include
include|#
directive|include
file|<jpeglib.h>
end_include
begin_comment
comment|/* all that for JPEG support  :-) */
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/* MNG_INCLUDE_IJG6B */
end_comment
begin_if
if|#
directive|if
name|defined
argument_list|(
name|MNG_INTERNAL_MEMMNGMT
argument_list|)
operator|||
name|defined
argument_list|(
name|MNG_INCLUDE_FILTERS
argument_list|)
end_if
begin_include
include|#
directive|include
file|<stdlib.h>
end_include
begin_comment
comment|/* "calloc"& "free"& "abs" */
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_include
include|#
directive|include
file|<limits.h>
end_include
begin_comment
comment|/* get proper integer widths */
end_comment
begin_ifdef
ifdef|#
directive|ifdef
name|WIN32
end_ifdef
begin_if
if|#
directive|if
name|defined
name|__BORLANDC__
end_if
begin_include
include|#
directive|include
file|<mem.h>
end_include
begin_comment
comment|/* defines "memcpy" for BCB */
end_comment
begin_else
else|#
directive|else
end_else
begin_include
include|#
directive|include
file|<memory.h>
end_include
begin_comment
comment|/* defines "memcpy" for other win32 platforms */
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_include
include|#
directive|include
file|<string.h>
end_include
begin_comment
comment|/* "strncmp" + "strcmp" */
end_comment
begin_else
else|#
directive|else
end_else
begin_comment
comment|/* WIN32 */
end_comment
begin_ifdef
ifdef|#
directive|ifdef
name|BSD
end_ifdef
begin_include
include|#
directive|include
file|<strings.h>
end_include
begin_comment
comment|/* defines "memcpy", etc for BSD (?) */
end_comment
begin_else
else|#
directive|else
end_else
begin_include
include|#
directive|include
file|<string.h>
end_include
begin_comment
comment|/* defines "memcpy", etc for all others (???) */
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/* WIN32 */
end_comment
begin_if
if|#
directive|if
name|defined
argument_list|(
name|MNG_FULL_CMS
argument_list|)
operator|||
name|defined
argument_list|(
name|MNG_GAMMA_ONLY
argument_list|)
operator|||
name|defined
argument_list|(
name|MNG_APP_CMS
argument_list|)
end_if
begin_include
include|#
directive|include
file|<math.h>
end_include
begin_comment
comment|/* fp gamma-calculation */
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/* ************************************************************************** */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* * Platform-dependant stuff                                               * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* ************************************************************************** */
end_comment
begin_comment
comment|/* TODO: this may require some elaboration for other platforms;    only works with BCB for now */
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|MNG_DLL
end_ifndef
begin_if
if|#
directive|if
name|defined
argument_list|(
name|MNG_BUILD_DLL
argument_list|)
operator|||
name|defined
argument_list|(
name|MNG_USE_DLL
argument_list|)
end_if
begin_define
DECL|macro|MNG_DLL
define|#
directive|define
name|MNG_DLL
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_endif
endif|#
directive|endif
end_endif
begin_define
DECL|macro|MNG_LOCAL
define|#
directive|define
name|MNG_LOCAL
value|static
end_define
begin_if
if|#
directive|if
name|defined
argument_list|(
name|MNG_DLL
argument_list|)
operator|&&
name|defined
argument_list|(
name|WIN32
argument_list|)
end_if
begin_comment
comment|/* setup DLL calling conventions */
end_comment
begin_define
DECL|macro|MNG_DECL
define|#
directive|define
name|MNG_DECL
value|__stdcall
end_define
begin_if
if|#
directive|if
name|defined
argument_list|(
name|MNG_BUILD_DLL
argument_list|)
end_if
begin_define
DECL|macro|MNG_EXT
define|#
directive|define
name|MNG_EXT
value|__declspec(dllexport)
end_define
begin_elif
elif|#
directive|elif
name|defined
argument_list|(
name|MNG_USE_DLL
argument_list|)
end_elif
begin_define
DECL|macro|MNG_EXT
define|#
directive|define
name|MNG_EXT
value|__declspec(dllimport)
end_define
begin_else
else|#
directive|else
end_else
begin_define
DECL|macro|MNG_EXT
define|#
directive|define
name|MNG_EXT
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_ifdef
ifdef|#
directive|ifdef
name|MNG_STRICT_ANSI
end_ifdef
begin_undef
DECL|macro|MNG_STRICT_ANSI
undef|#
directive|undef
name|MNG_STRICT_ANSI
end_undef
begin_comment
DECL|macro|MNG_STRICT_ANSI
comment|/* can't do strict-ANSI with this DLL-stuff */
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_else
else|#
directive|else
end_else
begin_define
DECL|macro|MNG_DECL
define|#
directive|define
name|MNG_DECL
end_define
begin_comment
DECL|macro|MNG_DECL
comment|/* dummies for non-DLL */
end_comment
begin_define
DECL|macro|MNG_EXT
define|#
directive|define
name|MNG_EXT
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/* MNG_DLL&& WIN32 */
end_comment
begin_if
if|#
directive|if
name|defined
argument_list|(
name|__BORLANDC__
argument_list|)
operator|&&
name|defined
argument_list|(
name|MNG_STRICT_ANSI
argument_list|)
end_if
begin_pragma
pragma|#
directive|pragma
name|option
name|-
name|A
end_pragma
begin_comment
comment|/* now force ANSI-C from here on */
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/* ************************************************************************** */
end_comment
begin_if
if|#
directive|if
name|USHRT_MAX
operator|==
literal|0xffffffffU
end_if
begin_comment
comment|/* get the proper 32-bit width !!! */
end_comment
begin_typedef
DECL|typedef|mng_uint32
typedef|typedef
name|unsigned
name|short
name|mng_uint32
typedef|;
end_typedef
begin_typedef
DECL|typedef|mng_int32
typedef|typedef
name|signed
name|short
name|mng_int32
typedef|;
end_typedef
begin_elif
elif|#
directive|elif
name|UINT_MAX
operator|==
literal|0xffffffffU
end_elif
begin_typedef
DECL|typedef|mng_uint32
typedef|typedef
name|unsigned
name|int
name|mng_uint32
typedef|;
end_typedef
begin_typedef
DECL|typedef|mng_int32
typedef|typedef
name|signed
name|int
name|mng_int32
typedef|;
end_typedef
begin_elif
elif|#
directive|elif
name|ULONG_MAX
operator|==
literal|0xffffffffU
end_elif
begin_typedef
DECL|typedef|mng_uint32
typedef|typedef
name|unsigned
name|long
name|mng_uint32
typedef|;
end_typedef
begin_typedef
DECL|typedef|mng_int32
typedef|typedef
name|signed
name|long
name|mng_int32
typedef|;
end_typedef
begin_else
else|#
directive|else
end_else
begin_error
error|#
directive|error
literal|"Sorry, I can't find any 32-bit integers on this platform."
end_error
begin_endif
endif|#
directive|endif
end_endif
begin_typedef
DECL|typedef|mng_int16
typedef|typedef
name|signed
name|short
name|mng_int16
typedef|;
end_typedef
begin_comment
DECL|typedef|mng_int16
comment|/* other basic integers */
end_comment
begin_typedef
DECL|typedef|mng_uint16
typedef|typedef
name|unsigned
name|short
name|mng_uint16
typedef|;
end_typedef
begin_typedef
DECL|typedef|mng_int8
typedef|typedef
name|signed
name|char
name|mng_int8
typedef|;
end_typedef
begin_typedef
DECL|typedef|mng_uint8
typedef|typedef
name|unsigned
name|char
name|mng_uint8
typedef|;
end_typedef
begin_typedef
DECL|typedef|mng_float
typedef|typedef
name|double
name|mng_float
typedef|;
end_typedef
begin_comment
DECL|typedef|mng_float
comment|/* basic float */
end_comment
begin_typedef
DECL|typedef|mng_size_t
typedef|typedef
name|size_t
name|mng_size_t
typedef|;
end_typedef
begin_comment
DECL|typedef|mng_size_t
comment|/* size field for memory allocation */
end_comment
begin_typedef
DECL|typedef|mng_pchar
typedef|typedef
name|char
modifier|*
name|mng_pchar
typedef|;
end_typedef
begin_comment
DECL|typedef|mng_pchar
comment|/* string */
end_comment
begin_typedef
DECL|typedef|mng_ptr
typedef|typedef
name|void
modifier|*
name|mng_ptr
typedef|;
end_typedef
begin_comment
DECL|typedef|mng_ptr
comment|/* generic pointer */
end_comment
begin_typedef
DECL|typedef|mng_fptr
typedef|typedef
name|void
function_decl|(
modifier|*
name|mng_fptr
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_typedef
begin_comment
DECL|typedef|mng_fptr
comment|/* generic function pointer */
end_comment
begin_comment
comment|/* ************************************************************************** */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* * Platform-independant from here                                         * */
end_comment
begin_comment
comment|/* *                                                                        * */
end_comment
begin_comment
comment|/* ************************************************************************** */
end_comment
begin_typedef
DECL|typedef|mng_uint32p
typedef|typedef
name|mng_uint32
modifier|*
name|mng_uint32p
typedef|;
end_typedef
begin_comment
DECL|typedef|mng_uint32p
comment|/* pointer to unsigned longs */
end_comment
begin_typedef
DECL|typedef|mng_int32p
typedef|typedef
name|mng_int32
modifier|*
name|mng_int32p
typedef|;
end_typedef
begin_comment
DECL|typedef|mng_int32p
comment|/* pointer to longs */
end_comment
begin_typedef
DECL|typedef|mng_uint16p
typedef|typedef
name|mng_uint16
modifier|*
name|mng_uint16p
typedef|;
end_typedef
begin_comment
DECL|typedef|mng_uint16p
comment|/* pointer to unsigned words */
end_comment
begin_typedef
DECL|typedef|mng_uint8p
typedef|typedef
name|mng_uint8
modifier|*
name|mng_uint8p
typedef|;
end_typedef
begin_comment
DECL|typedef|mng_uint8p
comment|/* pointer to unsigned bytes */
end_comment
begin_typedef
DECL|typedef|mng_bool
typedef|typedef
name|mng_int8
name|mng_bool
typedef|;
end_typedef
begin_comment
DECL|typedef|mng_bool
comment|/* booleans */
end_comment
begin_struct_decl
struct_decl|struct
name|mng_data_struct
struct_decl|;
end_struct_decl
begin_typedef
DECL|typedef|mng_handle
typedef|typedef
name|struct
name|mng_data_struct
modifier|*
name|mng_handle
typedef|;
end_typedef
begin_comment
DECL|typedef|mng_handle
comment|/* generic handle */
end_comment
begin_typedef
DECL|typedef|mng_retcode
typedef|typedef
name|mng_int32
name|mng_retcode
typedef|;
end_typedef
begin_comment
DECL|typedef|mng_retcode
comment|/* generic return code */
end_comment
begin_typedef
DECL|typedef|mng_chunkid
typedef|typedef
name|mng_int32
name|mng_chunkid
typedef|;
end_typedef
begin_comment
DECL|typedef|mng_chunkid
comment|/* 4-byte chunkname identifier */
end_comment
begin_typedef
DECL|typedef|mng_chunkp
typedef|typedef
name|mng_ptr
name|mng_chunkp
typedef|;
end_typedef
begin_comment
DECL|typedef|mng_chunkp
comment|/* pointer to a chunk-structure */
end_comment
begin_typedef
DECL|typedef|mng_objectp
typedef|typedef
name|mng_ptr
name|mng_objectp
typedef|;
end_typedef
begin_comment
DECL|typedef|mng_objectp
comment|/* pointer to an object-structure */
end_comment
begin_typedef
DECL|typedef|mng_chunkidp
typedef|typedef
name|mng_chunkid
modifier|*
name|mng_chunkidp
typedef|;
end_typedef
begin_comment
DECL|typedef|mng_chunkidp
comment|/* pointer to chunkid */
end_comment
begin_typedef
typedef|typedef
struct|struct
block|{
comment|/* 8-bit palette element */
DECL|member|iRed
name|mng_uint8
name|iRed
decl_stmt|;
DECL|member|iGreen
name|mng_uint8
name|iGreen
decl_stmt|;
DECL|member|iBlue
name|mng_uint8
name|iBlue
decl_stmt|;
block|}
DECL|typedef|mng_palette8e
name|mng_palette8e
typedef|;
end_typedef
begin_typedef
DECL|typedef|mng_palette8
typedef|typedef
name|mng_palette8e
name|mng_palette8
index|[
literal|256
index|]
typedef|;
end_typedef
begin_comment
DECL|typedef|mng_palette8
comment|/* 8-bit palette */
end_comment
begin_typedef
DECL|typedef|mng_palette8ep
typedef|typedef
name|mng_palette8e
modifier|*
name|mng_palette8ep
typedef|;
end_typedef
begin_typedef
DECL|typedef|mng_uint8arr
typedef|typedef
name|mng_uint8
name|mng_uint8arr
index|[
literal|256
index|]
typedef|;
end_typedef
begin_comment
DECL|typedef|mng_uint8arr
comment|/* generic arrays */
end_comment
begin_typedef
DECL|typedef|mng_uint8arr4
typedef|typedef
name|mng_uint8
name|mng_uint8arr4
index|[
literal|4
index|]
typedef|;
end_typedef
begin_typedef
DECL|typedef|mng_uint16arr
typedef|typedef
name|mng_uint16
name|mng_uint16arr
index|[
literal|256
index|]
typedef|;
end_typedef
begin_typedef
DECL|typedef|mng_uint32arr2
typedef|typedef
name|mng_uint32
name|mng_uint32arr2
index|[
literal|2
index|]
typedef|;
end_typedef
begin_comment
comment|/* ************************************************************************** */
end_comment
begin_define
DECL|macro|MNG_FALSE
define|#
directive|define
name|MNG_FALSE
value|0
end_define
begin_define
DECL|macro|MNG_TRUE
define|#
directive|define
name|MNG_TRUE
value|1
end_define
begin_define
DECL|macro|MNG_NULL
define|#
directive|define
name|MNG_NULL
value|0
end_define
begin_define
DECL|macro|MNG_SUSPENDBUFFERSIZE
define|#
directive|define
name|MNG_SUSPENDBUFFERSIZE
value|32768
end_define
begin_define
DECL|macro|MNG_SUSPENDREQUESTSIZE
define|#
directive|define
name|MNG_SUSPENDREQUESTSIZE
value|1024
end_define
begin_comment
comment|/* ************************************************************************** */
end_comment
begin_ifdef
ifdef|#
directive|ifdef
name|MNG_INCLUDE_ZLIB
end_ifdef
begin_comment
comment|/* size of temporary zlib buffer for deflate processing */
end_comment
begin_define
DECL|macro|MNG_ZLIB_MAXBUF
define|#
directive|define
name|MNG_ZLIB_MAXBUF
value|8192
end_define
begin_comment
comment|/* default zlib compression parameters for deflateinit2 */
end_comment
begin_define
DECL|macro|MNG_ZLIB_LEVEL
define|#
directive|define
name|MNG_ZLIB_LEVEL
value|9
end_define
begin_comment
DECL|macro|MNG_ZLIB_LEVEL
comment|/* level */
end_comment
begin_define
DECL|macro|MNG_ZLIB_METHOD
define|#
directive|define
name|MNG_ZLIB_METHOD
value|Z_DEFLATED
end_define
begin_comment
DECL|macro|MNG_ZLIB_METHOD
comment|/* method */
end_comment
begin_define
DECL|macro|MNG_ZLIB_WINDOWBITS
define|#
directive|define
name|MNG_ZLIB_WINDOWBITS
value|15
end_define
begin_comment
DECL|macro|MNG_ZLIB_WINDOWBITS
comment|/* window size */
end_comment
begin_define
DECL|macro|MNG_ZLIB_MEMLEVEL
define|#
directive|define
name|MNG_ZLIB_MEMLEVEL
value|9
end_define
begin_comment
DECL|macro|MNG_ZLIB_MEMLEVEL
comment|/* memory level */
end_comment
begin_define
DECL|macro|MNG_ZLIB_STRATEGY
define|#
directive|define
name|MNG_ZLIB_STRATEGY
value|Z_DEFAULT_STRATEGY
end_define
begin_comment
DECL|macro|MNG_ZLIB_STRATEGY
comment|/* strategy */
end_comment
begin_define
DECL|macro|MNG_MAX_IDAT_SIZE
define|#
directive|define
name|MNG_MAX_IDAT_SIZE
value|4096
end_define
begin_comment
DECL|macro|MNG_MAX_IDAT_SIZE
comment|/* maximum size of IDAT data */
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/* MNG_INCLUDE_ZLIB */
end_comment
begin_comment
comment|/* ************************************************************************** */
end_comment
begin_ifdef
ifdef|#
directive|ifdef
name|MNG_INCLUDE_JNG
end_ifdef
begin_ifdef
ifdef|#
directive|ifdef
name|MNG_INCLUDE_IJG6B
end_ifdef
begin_comment
comment|/* IJG helper defs */
end_comment
begin_typedef
DECL|typedef|mngjpeg_comp
typedef|typedef
name|struct
name|jpeg_compress_struct
name|mngjpeg_comp
typedef|;
end_typedef
begin_typedef
DECL|typedef|mngjpeg_decomp
typedef|typedef
name|struct
name|jpeg_decompress_struct
name|mngjpeg_decomp
typedef|;
end_typedef
begin_typedef
DECL|typedef|mngjpeg_error
typedef|typedef
name|struct
name|jpeg_error_mgr
name|mngjpeg_error
typedef|;
end_typedef
begin_typedef
DECL|typedef|mngjpeg_source
typedef|typedef
name|struct
name|jpeg_source_mgr
name|mngjpeg_source
typedef|;
end_typedef
begin_typedef
DECL|typedef|mngjpeg_compp
typedef|typedef
name|mngjpeg_comp
modifier|*
name|mngjpeg_compp
typedef|;
end_typedef
begin_typedef
DECL|typedef|mngjpeg_decompp
typedef|typedef
name|mngjpeg_decomp
modifier|*
name|mngjpeg_decompp
typedef|;
end_typedef
begin_typedef
DECL|typedef|mngjpeg_errorp
typedef|typedef
name|mngjpeg_error
modifier|*
name|mngjpeg_errorp
typedef|;
end_typedef
begin_typedef
DECL|typedef|mngjpeg_sourcep
typedef|typedef
name|mngjpeg_source
modifier|*
name|mngjpeg_sourcep
typedef|;
end_typedef
begin_typedef
DECL|typedef|mngjpeg_dctmethod
typedef|typedef
name|J_DCT_METHOD
name|mngjpeg_dctmethod
typedef|;
end_typedef
begin_comment
comment|/* default IJG parameters for compression */
end_comment
begin_define
DECL|macro|MNG_JPEG_DCT
define|#
directive|define
name|MNG_JPEG_DCT
value|JDCT_DEFAULT
end_define
begin_comment
DECL|macro|MNG_JPEG_DCT
comment|/* DCT algorithm (JDCT_ISLOW) */
end_comment
begin_define
DECL|macro|MNG_JPEG_QUALITY
define|#
directive|define
name|MNG_JPEG_QUALITY
value|100
end_define
begin_comment
DECL|macro|MNG_JPEG_QUALITY
comment|/* quality 0..100; 100=best */
end_comment
begin_define
DECL|macro|MNG_JPEG_SMOOTHING
define|#
directive|define
name|MNG_JPEG_SMOOTHING
value|0
end_define
begin_comment
DECL|macro|MNG_JPEG_SMOOTHING
comment|/* default no smoothing */
end_comment
begin_define
DECL|macro|MNG_JPEG_PROGRESSIVE
define|#
directive|define
name|MNG_JPEG_PROGRESSIVE
value|MNG_FALSE
end_define
begin_comment
DECL|macro|MNG_JPEG_PROGRESSIVE
comment|/* default is just baseline */
end_comment
begin_define
DECL|macro|MNG_JPEG_OPTIMIZED
define|#
directive|define
name|MNG_JPEG_OPTIMIZED
value|MNG_FALSE
end_define
begin_comment
DECL|macro|MNG_JPEG_OPTIMIZED
comment|/* default is not optimized */
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/* MNG_INCLUDE_IJG6B */
end_comment
begin_define
DECL|macro|MNG_JPEG_MAXBUF
define|#
directive|define
name|MNG_JPEG_MAXBUF
value|65500
end_define
begin_comment
DECL|macro|MNG_JPEG_MAXBUF
comment|/* max size of temp JPEG buffer */
end_comment
begin_define
DECL|macro|MNG_MAX_JDAT_SIZE
define|#
directive|define
name|MNG_MAX_JDAT_SIZE
value|4096
end_define
begin_comment
DECL|macro|MNG_MAX_JDAT_SIZE
comment|/* maximum size of JDAT data */
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/* MNG_INCLUDE_JNG */
end_comment
begin_comment
comment|/* ************************************************************************** */
end_comment
begin_ifdef
ifdef|#
directive|ifdef
name|MNG_INCLUDE_LCMS
end_ifdef
begin_typedef
DECL|typedef|mng_cmsprof
typedef|typedef
name|cmsHPROFILE
name|mng_cmsprof
typedef|;
end_typedef
begin_comment
DECL|typedef|mng_cmsprof
comment|/* little CMS helper defs */
end_comment
begin_typedef
DECL|typedef|mng_cmstrans
typedef|typedef
name|cmsHTRANSFORM
name|mng_cmstrans
typedef|;
end_typedef
begin_typedef
DECL|typedef|mng_CIExyY
typedef|typedef
name|cmsCIExyY
name|mng_CIExyY
typedef|;
end_typedef
begin_typedef
DECL|typedef|mng_CIExyYTRIPLE
typedef|typedef
name|cmsCIExyYTRIPLE
name|mng_CIExyYTRIPLE
typedef|;
end_typedef
begin_typedef
DECL|typedef|mng_gammatabp
typedef|typedef
name|LPGAMMATABLE
name|mng_gammatabp
typedef|;
end_typedef
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/* MNG_INCLUDE_LCMS */
end_comment
begin_comment
comment|/* ************************************************************************** */
end_comment
begin_comment
comment|/* enumeration of known graphics types */
end_comment
begin_enum
DECL|enum|mng_imgtypes
DECL|enumerator|mng_it_unknown
DECL|enumerator|mng_it_png
DECL|enumerator|mng_it_mng
DECL|enumerator|mng_it_jng
enum|enum
name|mng_imgtypes
block|{
name|mng_it_unknown
block|,
name|mng_it_png
block|,
name|mng_it_mng
block|,
name|mng_it_jng
ifdef|#
directive|ifdef
name|MNG_INCLUDE_MPNG_PROPOSAL
block|,
DECL|enumerator|mng_it_mpng
name|mng_it_mpng
endif|#
directive|endif
ifdef|#
directive|ifdef
name|MNG_INCLUDE_ANG_PROPOSAL
block|,
DECL|enumerator|mng_it_ang
name|mng_it_ang
endif|#
directive|endif
block|}
enum|;
end_enum
begin_typedef
DECL|typedef|mng_imgtype
typedef|typedef
name|enum
name|mng_imgtypes
name|mng_imgtype
typedef|;
end_typedef
begin_comment
comment|/* enumeration of animation speed-types */
end_comment
begin_enum
DECL|enum|mng_speedtypes
DECL|enumerator|mng_st_normal
DECL|enumerator|mng_st_fast
DECL|enumerator|mng_st_slow
DECL|enumerator|mng_st_slowest
enum|enum
name|mng_speedtypes
block|{
name|mng_st_normal
block|,
name|mng_st_fast
block|,
name|mng_st_slow
block|,
name|mng_st_slowest
block|}
enum|;
end_enum
begin_typedef
DECL|typedef|mng_speedtype
typedef|typedef
name|enum
name|mng_speedtypes
name|mng_speedtype
typedef|;
end_typedef
begin_ifdef
ifdef|#
directive|ifdef
name|MNG_OPTIMIZE_CHUNKREADER
end_ifdef
begin_comment
comment|/* enumeration object-creation indicators */
end_comment
begin_enum
DECL|enum|mng_createobjtypes
DECL|enumerator|mng_create_none
DECL|enumerator|mng_create_always
DECL|enumerator|mng_create_ifglobal
enum|enum
name|mng_createobjtypes
block|{
name|mng_create_none
block|,
name|mng_create_always
block|,
name|mng_create_ifglobal
block|}
enum|;
end_enum
begin_typedef
DECL|typedef|mng_createobjtype
typedef|typedef
name|enum
name|mng_createobjtypes
name|mng_createobjtype
typedef|;
end_typedef
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/* ************************************************************************** */
end_comment
begin_comment
comment|/* enumeration of PNG image types */
end_comment
begin_ifdef
ifdef|#
directive|ifdef
name|MNG_OPTIMIZE_FOOTPRINT_INIT
end_ifdef
begin_enum
DECL|enum|png_imgtypes
enum|enum
name|png_imgtypes
block|{
DECL|enumerator|png_g1
name|png_g1
block|,
DECL|enumerator|png_g2
name|png_g2
block|,
DECL|enumerator|png_g4
name|png_g4
block|,
DECL|enumerator|png_g8
name|png_g8
block|,
DECL|enumerator|png_rgb8
name|png_rgb8
block|,
DECL|enumerator|png_idx1
name|png_idx1
block|,
DECL|enumerator|png_idx2
name|png_idx2
block|,
DECL|enumerator|png_idx4
name|png_idx4
block|,
DECL|enumerator|png_idx8
name|png_idx8
block|,
DECL|enumerator|png_ga8
name|png_ga8
block|,
DECL|enumerator|png_rgba8
name|png_rgba8
block|,
ifdef|#
directive|ifdef
name|MNG_INCLUDE_JNG
DECL|enumerator|png_jpeg_a1
name|png_jpeg_a1
block|,
DECL|enumerator|png_jpeg_a2
name|png_jpeg_a2
block|,
DECL|enumerator|png_jpeg_a4
name|png_jpeg_a4
block|,
DECL|enumerator|png_jpeg_a8
name|png_jpeg_a8
block|,
endif|#
directive|endif
ifndef|#
directive|ifndef
name|MNG_NO_16BIT_SUPPORT
DECL|enumerator|png_g16
name|png_g16
block|,
DECL|enumerator|png_ga16
name|png_ga16
block|,
DECL|enumerator|png_rgb16
name|png_rgb16
block|,
DECL|enumerator|png_rgba16
name|png_rgba16
block|,
ifdef|#
directive|ifdef
name|MNG_INCLUDE_JNG
DECL|enumerator|png_jpeg_a16
name|png_jpeg_a16
block|,
endif|#
directive|endif
endif|#
directive|endif
DECL|enumerator|png_none
name|png_none
block|}
enum|;
end_enum
begin_typedef
DECL|typedef|png_imgtype
typedef|typedef
name|enum
name|png_imgtypes
name|png_imgtype
typedef|;
end_typedef
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/* ************************************************************************** */
end_comment
begin_comment
comment|/* memory management callbacks */
end_comment
begin_typedef
DECL|typedef|mng_memalloc
typedef|typedef
name|mng_ptr
function_decl|(
name|MNG_DECL
modifier|*
name|mng_memalloc
function_decl|)
parameter_list|(
name|mng_size_t
name|iLen
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|mng_memfree
typedef|typedef
name|void
function_decl|(
name|MNG_DECL
modifier|*
name|mng_memfree
function_decl|)
parameter_list|(
name|mng_ptr
name|iPtr
parameter_list|,
name|mng_size_t
name|iLen
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|mng_releasedata
typedef|typedef
name|void
function_decl|(
name|MNG_DECL
modifier|*
name|mng_releasedata
function_decl|)
parameter_list|(
name|mng_ptr
name|pUserdata
parameter_list|,
name|mng_ptr
name|pData
parameter_list|,
name|mng_size_t
name|iLength
parameter_list|)
function_decl|;
end_typedef
begin_comment
comment|/* I/O management callbacks */
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|MNG_NO_OPEN_CLOSE_STREAM
end_ifndef
begin_typedef
DECL|typedef|mng_openstream
typedef|typedef
name|mng_bool
function_decl|(
name|MNG_DECL
modifier|*
name|mng_openstream
function_decl|)
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|mng_closestream
typedef|typedef
name|mng_bool
function_decl|(
name|MNG_DECL
modifier|*
name|mng_closestream
function_decl|)
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
end_typedef
begin_endif
endif|#
directive|endif
end_endif
begin_typedef
DECL|typedef|mng_readdata
typedef|typedef
name|mng_bool
function_decl|(
name|MNG_DECL
modifier|*
name|mng_readdata
function_decl|)
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_ptr
name|pBuf
parameter_list|,
name|mng_uint32
name|iBuflen
parameter_list|,
name|mng_uint32p
name|pRead
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|mng_writedata
typedef|typedef
name|mng_bool
function_decl|(
name|MNG_DECL
modifier|*
name|mng_writedata
function_decl|)
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_ptr
name|pBuf
parameter_list|,
name|mng_uint32
name|iBuflen
parameter_list|,
name|mng_uint32p
name|pWritten
parameter_list|)
function_decl|;
end_typedef
begin_comment
comment|/* error& trace processing callbacks */
end_comment
begin_typedef
DECL|typedef|mng_errorproc
typedef|typedef
name|mng_bool
function_decl|(
name|MNG_DECL
modifier|*
name|mng_errorproc
function_decl|)
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_int32
name|iErrorcode
parameter_list|,
name|mng_int8
name|iSeverity
parameter_list|,
name|mng_chunkid
name|iChunkname
parameter_list|,
name|mng_uint32
name|iChunkseq
parameter_list|,
name|mng_int32
name|iExtra1
parameter_list|,
name|mng_int32
name|iExtra2
parameter_list|,
name|mng_pchar
name|zErrortext
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|mng_traceproc
typedef|typedef
name|mng_bool
function_decl|(
name|MNG_DECL
modifier|*
name|mng_traceproc
function_decl|)
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_int32
name|iFuncnr
parameter_list|,
name|mng_int32
name|iFuncseq
parameter_list|,
name|mng_pchar
name|zFuncname
parameter_list|)
function_decl|;
end_typedef
begin_comment
comment|/* read processing callbacks */
end_comment
begin_typedef
DECL|typedef|mng_processheader
typedef|typedef
name|mng_bool
function_decl|(
name|MNG_DECL
modifier|*
name|mng_processheader
function_decl|)
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iWidth
parameter_list|,
name|mng_uint32
name|iHeight
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|mng_processtext
typedef|typedef
name|mng_bool
function_decl|(
name|MNG_DECL
modifier|*
name|mng_processtext
function_decl|)
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint8
name|iType
parameter_list|,
name|mng_pchar
name|zKeyword
parameter_list|,
name|mng_pchar
name|zText
parameter_list|,
name|mng_pchar
name|zLanguage
parameter_list|,
name|mng_pchar
name|zTranslation
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|mng_processsave
typedef|typedef
name|mng_bool
function_decl|(
name|MNG_DECL
modifier|*
name|mng_processsave
function_decl|)
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|mng_processseek
typedef|typedef
name|mng_bool
function_decl|(
name|MNG_DECL
modifier|*
name|mng_processseek
function_decl|)
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_pchar
name|zName
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|mng_processneed
typedef|typedef
name|mng_bool
function_decl|(
name|MNG_DECL
modifier|*
name|mng_processneed
function_decl|)
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_pchar
name|zKeyword
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|mng_processmend
typedef|typedef
name|mng_bool
function_decl|(
name|MNG_DECL
modifier|*
name|mng_processmend
function_decl|)
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iIterationsdone
parameter_list|,
name|mng_uint32
name|iIterationsleft
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|mng_processunknown
typedef|typedef
name|mng_bool
function_decl|(
name|MNG_DECL
modifier|*
name|mng_processunknown
function_decl|)
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_chunkid
name|iChunkid
parameter_list|,
name|mng_uint32
name|iRawlen
parameter_list|,
name|mng_ptr
name|pRawdata
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|mng_processterm
typedef|typedef
name|mng_bool
function_decl|(
name|MNG_DECL
modifier|*
name|mng_processterm
function_decl|)
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint8
name|iTermaction
parameter_list|,
name|mng_uint8
name|iIteraction
parameter_list|,
name|mng_uint32
name|iDelay
parameter_list|,
name|mng_uint32
name|iItermax
parameter_list|)
function_decl|;
end_typedef
begin_comment
comment|/* display processing callbacks */
end_comment
begin_typedef
DECL|typedef|mng_getcanvasline
typedef|typedef
name|mng_ptr
function_decl|(
name|MNG_DECL
modifier|*
name|mng_getcanvasline
function_decl|)
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iLinenr
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|mng_getbkgdline
typedef|typedef
name|mng_ptr
function_decl|(
name|MNG_DECL
modifier|*
name|mng_getbkgdline
function_decl|)
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iLinenr
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|mng_getalphaline
typedef|typedef
name|mng_ptr
function_decl|(
name|MNG_DECL
modifier|*
name|mng_getalphaline
function_decl|)
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iLinenr
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|mng_refresh
typedef|typedef
name|mng_bool
function_decl|(
name|MNG_DECL
modifier|*
name|mng_refresh
function_decl|)
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iX
parameter_list|,
name|mng_uint32
name|iY
parameter_list|,
name|mng_uint32
name|iWidth
parameter_list|,
name|mng_uint32
name|iHeight
parameter_list|)
function_decl|;
end_typedef
begin_comment
comment|/* timer management callbacks */
end_comment
begin_typedef
DECL|typedef|mng_gettickcount
typedef|typedef
name|mng_uint32
function_decl|(
name|MNG_DECL
modifier|*
name|mng_gettickcount
function_decl|)
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|mng_settimer
typedef|typedef
name|mng_bool
function_decl|(
name|MNG_DECL
modifier|*
name|mng_settimer
function_decl|)
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iMsecs
parameter_list|)
function_decl|;
end_typedef
begin_comment
comment|/* color management callbacks */
end_comment
begin_typedef
DECL|typedef|mng_processgamma
typedef|typedef
name|mng_bool
function_decl|(
name|MNG_DECL
modifier|*
name|mng_processgamma
function_decl|)
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iGamma
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|mng_processchroma
typedef|typedef
name|mng_bool
function_decl|(
name|MNG_DECL
modifier|*
name|mng_processchroma
function_decl|)
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iWhitepointx
parameter_list|,
name|mng_uint32
name|iWhitepointy
parameter_list|,
name|mng_uint32
name|iRedx
parameter_list|,
name|mng_uint32
name|iRedy
parameter_list|,
name|mng_uint32
name|iGreenx
parameter_list|,
name|mng_uint32
name|iGreeny
parameter_list|,
name|mng_uint32
name|iBluex
parameter_list|,
name|mng_uint32
name|iBluey
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|mng_processsrgb
typedef|typedef
name|mng_bool
function_decl|(
name|MNG_DECL
modifier|*
name|mng_processsrgb
function_decl|)
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint8
name|iRenderingintent
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|mng_processiccp
typedef|typedef
name|mng_bool
function_decl|(
name|MNG_DECL
modifier|*
name|mng_processiccp
function_decl|)
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iProfilesize
parameter_list|,
name|mng_ptr
name|pProfile
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|mng_processarow
typedef|typedef
name|mng_bool
function_decl|(
name|MNG_DECL
modifier|*
name|mng_processarow
function_decl|)
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_uint32
name|iRowsamples
parameter_list|,
name|mng_bool
name|bIsRGBA16
parameter_list|,
name|mng_ptr
name|pRow
parameter_list|)
function_decl|;
end_typedef
begin_comment
comment|/* chunk access callback(s) */
end_comment
begin_typedef
DECL|typedef|mng_iteratechunk
typedef|typedef
name|mng_bool
function_decl|(
name|MNG_DECL
modifier|*
name|mng_iteratechunk
function_decl|)
parameter_list|(
name|mng_handle
name|hHandle
parameter_list|,
name|mng_handle
name|hChunk
parameter_list|,
name|mng_chunkid
name|iChunkid
parameter_list|,
name|mng_uint32
name|iChunkseq
parameter_list|)
function_decl|;
end_typedef
begin_comment
comment|/* ************************************************************************** */
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/* _libmng_types_h_ */
end_comment
begin_comment
comment|/* ************************************************************************** */
end_comment
begin_comment
comment|/* * end of file                                                            * */
end_comment
begin_comment
comment|/* ************************************************************************** */
end_comment
end_unit
