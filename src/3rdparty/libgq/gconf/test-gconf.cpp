begin_unit
begin_include
include|#
directive|include
file|"test-gconf.h"
end_include
begin_define
DECL|macro|MYLOGLEVEL
define|#
directive|define
name|MYLOGLEVEL
value|2
end_define
begin_function
DECL|function|myMessageOutput
name|void
name|myMessageOutput
parameter_list|(
name|QtMsgType
name|type
parameter_list|,
specifier|const
name|char
modifier|*
name|msg
parameter_list|)
block|{
switch|switch
condition|(
name|type
condition|)
block|{
case|case
name|QtDebugMsg
case|:
if|if
condition|(
name|MYLOGLEVEL
operator|<=
literal|0
condition|)
name|fprintf
argument_list|(
name|stderr
argument_list|,
literal|"Debug: %s\n"
argument_list|,
name|msg
argument_list|)
expr_stmt|;
break|break;
case|case
name|QtWarningMsg
case|:
if|if
condition|(
name|MYLOGLEVEL
operator|<=
literal|1
condition|)
name|fprintf
argument_list|(
name|stderr
argument_list|,
literal|"Warning: %s\n"
argument_list|,
name|msg
argument_list|)
expr_stmt|;
break|break;
case|case
name|QtCriticalMsg
case|:
if|if
condition|(
name|MYLOGLEVEL
operator|<=
literal|2
condition|)
name|fprintf
argument_list|(
name|stderr
argument_list|,
literal|"Critical: %s\n"
argument_list|,
name|msg
argument_list|)
expr_stmt|;
break|break;
case|case
name|QtFatalMsg
case|:
if|if
condition|(
name|MYLOGLEVEL
operator|<=
literal|3
condition|)
name|fprintf
argument_list|(
name|stderr
argument_list|,
literal|"Fatal: %s\n"
argument_list|,
name|msg
argument_list|)
expr_stmt|;
name|abort
argument_list|()
expr_stmt|;
block|}
block|}
end_function
begin_comment
comment|//
end_comment
begin_comment
comment|// Definition of testcases: Normal tests
end_comment
begin_comment
comment|//
end_comment
begin_function
DECL|function|timeout
name|void
name|GConfItemTests
operator|::
name|timeout
parameter_list|()
block|{
name|timed_out
operator|=
literal|true
expr_stmt|;
name|timer
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
end_function
begin_comment
comment|// Before all tests
end_comment
begin_function
DECL|function|initTestCase
name|void
name|GConfItemTests
operator|::
name|initTestCase
parameter_list|()
block|{
name|connect
argument_list|(
operator|&
name|timer
argument_list|,
name|SIGNAL
argument_list|(
name|timeout
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|timeout
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|// After all tests
end_comment
begin_function
DECL|function|cleanupTestCase
name|void
name|GConfItemTests
operator|::
name|cleanupTestCase
parameter_list|()
block|{ }
end_function
begin_comment
comment|// Before each test
end_comment
begin_function
DECL|function|init
name|void
name|GConfItemTests
operator|::
name|init
parameter_list|()
block|{
name|boolItem
operator|=
operator|new
name|GConfItem
argument_list|(
literal|"/Test/Bool"
argument_list|)
expr_stmt|;
name|intItem
operator|=
operator|new
name|GConfItem
argument_list|(
literal|"/Test/Int"
argument_list|)
expr_stmt|;
name|stringItem
operator|=
operator|new
name|GConfItem
argument_list|(
literal|"/Test/String"
argument_list|)
expr_stmt|;
name|doubleItem
operator|=
operator|new
name|GConfItem
argument_list|(
literal|"/Test/Double"
argument_list|)
expr_stmt|;
name|stringListItem
operator|=
operator|new
name|GConfItem
argument_list|(
literal|"/Test/StringList"
argument_list|)
expr_stmt|;
name|intListItem
operator|=
operator|new
name|GConfItem
argument_list|(
literal|"/Test/IntList"
argument_list|)
expr_stmt|;
name|doubleListItem
operator|=
operator|new
name|GConfItem
argument_list|(
literal|"/Test/DoubleList"
argument_list|)
expr_stmt|;
name|boolListItem
operator|=
operator|new
name|GConfItem
argument_list|(
literal|"/Test/BoolList"
argument_list|)
expr_stmt|;
name|unsetBeforeItem
operator|=
operator|new
name|GConfItem
argument_list|(
literal|"/Test/UnsetBefore"
argument_list|)
expr_stmt|;
name|unsetAfterItem
operator|=
operator|new
name|GConfItem
argument_list|(
literal|"/Test/UnsetAfter"
argument_list|)
expr_stmt|;
name|signalSpy
operator|=
operator|new
name|SignalListener
argument_list|()
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|boolItem
argument_list|,
name|SIGNAL
argument_list|(
name|valueChanged
argument_list|()
argument_list|)
argument_list|,
name|signalSpy
argument_list|,
name|SLOT
argument_list|(
name|valueChanged
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|intItem
argument_list|,
name|SIGNAL
argument_list|(
name|valueChanged
argument_list|()
argument_list|)
argument_list|,
name|signalSpy
argument_list|,
name|SLOT
argument_list|(
name|valueChanged
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|stringItem
argument_list|,
name|SIGNAL
argument_list|(
name|valueChanged
argument_list|()
argument_list|)
argument_list|,
name|signalSpy
argument_list|,
name|SLOT
argument_list|(
name|valueChanged
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|doubleItem
argument_list|,
name|SIGNAL
argument_list|(
name|valueChanged
argument_list|()
argument_list|)
argument_list|,
name|signalSpy
argument_list|,
name|SLOT
argument_list|(
name|valueChanged
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|stringListItem
argument_list|,
name|SIGNAL
argument_list|(
name|valueChanged
argument_list|()
argument_list|)
argument_list|,
name|signalSpy
argument_list|,
name|SLOT
argument_list|(
name|valueChanged
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|intListItem
argument_list|,
name|SIGNAL
argument_list|(
name|valueChanged
argument_list|()
argument_list|)
argument_list|,
name|signalSpy
argument_list|,
name|SLOT
argument_list|(
name|valueChanged
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|doubleListItem
argument_list|,
name|SIGNAL
argument_list|(
name|valueChanged
argument_list|()
argument_list|)
argument_list|,
name|signalSpy
argument_list|,
name|SLOT
argument_list|(
name|valueChanged
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|boolListItem
argument_list|,
name|SIGNAL
argument_list|(
name|valueChanged
argument_list|()
argument_list|)
argument_list|,
name|signalSpy
argument_list|,
name|SLOT
argument_list|(
name|valueChanged
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|// After each test
end_comment
begin_function
DECL|function|cleanup
name|void
name|GConfItemTests
operator|::
name|cleanup
parameter_list|()
block|{
name|QObject
operator|::
name|disconnect
argument_list|(
name|boolItem
argument_list|,
name|SIGNAL
argument_list|(
name|valueChanged
argument_list|()
argument_list|)
argument_list|,
name|signalSpy
argument_list|,
name|SLOT
argument_list|(
name|valueChanged
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|disconnect
argument_list|(
name|intItem
argument_list|,
name|SIGNAL
argument_list|(
name|valueChanged
argument_list|()
argument_list|)
argument_list|,
name|signalSpy
argument_list|,
name|SLOT
argument_list|(
name|valueChanged
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|disconnect
argument_list|(
name|stringItem
argument_list|,
name|SIGNAL
argument_list|(
name|valueChanged
argument_list|()
argument_list|)
argument_list|,
name|signalSpy
argument_list|,
name|SLOT
argument_list|(
name|valueChanged
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|disconnect
argument_list|(
name|doubleItem
argument_list|,
name|SIGNAL
argument_list|(
name|valueChanged
argument_list|()
argument_list|)
argument_list|,
name|signalSpy
argument_list|,
name|SLOT
argument_list|(
name|valueChanged
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|disconnect
argument_list|(
name|stringListItem
argument_list|,
name|SIGNAL
argument_list|(
name|valueChanged
argument_list|()
argument_list|)
argument_list|,
name|signalSpy
argument_list|,
name|SLOT
argument_list|(
name|valueChanged
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|disconnect
argument_list|(
name|intListItem
argument_list|,
name|SIGNAL
argument_list|(
name|valueChanged
argument_list|()
argument_list|)
argument_list|,
name|signalSpy
argument_list|,
name|SLOT
argument_list|(
name|valueChanged
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|disconnect
argument_list|(
name|doubleListItem
argument_list|,
name|SIGNAL
argument_list|(
name|valueChanged
argument_list|()
argument_list|)
argument_list|,
name|signalSpy
argument_list|,
name|SLOT
argument_list|(
name|valueChanged
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|disconnect
argument_list|(
name|boolListItem
argument_list|,
name|SIGNAL
argument_list|(
name|valueChanged
argument_list|()
argument_list|)
argument_list|,
name|signalSpy
argument_list|,
name|SLOT
argument_list|(
name|valueChanged
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
operator|delete
name|signalSpy
expr_stmt|;
operator|delete
name|boolItem
expr_stmt|;
operator|delete
name|intItem
expr_stmt|;
operator|delete
name|stringItem
expr_stmt|;
operator|delete
name|doubleItem
expr_stmt|;
operator|delete
name|stringListItem
expr_stmt|;
operator|delete
name|intListItem
expr_stmt|;
operator|delete
name|doubleListItem
expr_stmt|;
operator|delete
name|boolListItem
expr_stmt|;
operator|delete
name|unsetBeforeItem
expr_stmt|;
operator|delete
name|unsetAfterItem
expr_stmt|;
name|timer
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|path
name|void
name|GConfItemTests
operator|::
name|path
parameter_list|()
block|{
name|QCOMPARE
argument_list|(
name|boolItem
operator|->
name|key
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"/Test/Bool"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|intItem
operator|->
name|key
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"/Test/Int"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|stringItem
operator|->
name|key
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"/Test/String"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doubleItem
operator|->
name|key
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"/Test/Double"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|stringListItem
operator|->
name|key
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"/Test/StringList"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|intListItem
operator|->
name|key
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"/Test/IntList"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doubleListItem
operator|->
name|key
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"/Test/DoubleList"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|boolListItem
operator|->
name|key
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"/Test/BoolList"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|unsetBeforeItem
operator|->
name|key
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"/Test/UnsetBefore"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|unsetAfterItem
operator|->
name|key
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"/Test/UnsetAfter"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|external_values
name|void
name|GConfItemTests
operator|::
name|external_values
parameter_list|()
block|{
comment|// These values are set before this program starts.
name|QCOMPARE
argument_list|(
name|boolItem
operator|->
name|value
argument_list|()
operator|.
name|toBool
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|intItem
operator|->
name|value
argument_list|()
operator|.
name|toInt
argument_list|()
argument_list|,
literal|123
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|stringItem
operator|->
name|value
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Hello GConf"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doubleItem
operator|->
name|value
argument_list|()
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|3.5
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|stringListItem
operator|->
name|value
argument_list|()
operator|.
name|toStringList
argument_list|()
argument_list|,
name|QStringList
argument_list|()
operator|<<
literal|"Hello"
operator|<<
literal|"GConf"
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"ÃÃÃ"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|intListItem
operator|->
name|value
argument_list|()
operator|.
name|toList
argument_list|()
argument_list|,
name|QList
argument_list|<
name|QVariant
argument_list|>
argument_list|()
operator|<<
literal|1
operator|<<
literal|2
operator|<<
literal|3
operator|<<
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doubleListItem
operator|->
name|value
argument_list|()
operator|.
name|toList
argument_list|()
argument_list|,
name|QList
argument_list|<
name|QVariant
argument_list|>
argument_list|()
operator|<<
literal|3.5
operator|<<
literal|3.5
operator|<<
literal|3.5
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|boolListItem
operator|->
name|value
argument_list|()
operator|.
name|toList
argument_list|()
argument_list|,
name|QList
argument_list|<
name|QVariant
argument_list|>
argument_list|()
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|unsetBeforeItem
operator|->
name|value
argument_list|()
operator|.
name|isValid
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|unsetAfterItem
operator|->
name|value
argument_list|()
operator|.
name|isValid
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|set_bool
name|void
name|GConfItemTests
operator|::
name|set_bool
parameter_list|()
block|{
name|signalSpy
operator|->
name|numberOfCalls
operator|=
literal|0
expr_stmt|;
name|boolItem
operator|->
name|set
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|boolItem
operator|->
name|value
argument_list|()
operator|.
name|toBool
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|boolItem
operator|->
name|set
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|boolItem
operator|->
name|value
argument_list|()
operator|.
name|toBool
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|signalSpy
operator|->
name|numberOfCalls
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|set_int
name|void
name|GConfItemTests
operator|::
name|set_int
parameter_list|()
block|{
name|signalSpy
operator|->
name|numberOfCalls
operator|=
literal|0
expr_stmt|;
name|intItem
operator|->
name|set
argument_list|(
literal|12
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|intItem
operator|->
name|value
argument_list|()
operator|.
name|toInt
argument_list|()
argument_list|,
literal|12
argument_list|)
expr_stmt|;
name|intItem
operator|->
name|set
argument_list|(
operator|-
literal|5
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|intItem
operator|->
name|value
argument_list|()
operator|.
name|toInt
argument_list|()
argument_list|,
operator|-
literal|5
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|signalSpy
operator|->
name|numberOfCalls
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|set_string
name|void
name|GConfItemTests
operator|::
name|set_string
parameter_list|()
block|{
name|signalSpy
operator|->
name|numberOfCalls
operator|=
literal|0
expr_stmt|;
name|stringItem
operator|->
name|set
argument_list|(
literal|"Hi"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|stringItem
operator|->
name|value
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Hi"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|signalSpy
operator|->
name|numberOfCalls
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|set_unicode_string
name|void
name|GConfItemTests
operator|::
name|set_unicode_string
parameter_list|()
block|{
name|signalSpy
operator|->
name|numberOfCalls
operator|=
literal|0
expr_stmt|;
name|stringItem
operator|->
name|set
argument_list|(
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"HÃ¶Ã¤Ã¼"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|stringItem
operator|->
name|value
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"HÃ¶Ã¤Ã¼"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|signalSpy
operator|->
name|numberOfCalls
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|set_double
name|void
name|GConfItemTests
operator|::
name|set_double
parameter_list|()
block|{
name|signalSpy
operator|->
name|numberOfCalls
operator|=
literal|0
expr_stmt|;
name|doubleItem
operator|->
name|set
argument_list|(
literal|1.2345
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doubleItem
operator|->
name|value
argument_list|()
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|1.2345
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|signalSpy
operator|->
name|numberOfCalls
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|set_string_list
name|void
name|GConfItemTests
operator|::
name|set_string_list
parameter_list|()
block|{
name|signalSpy
operator|->
name|numberOfCalls
operator|=
literal|0
expr_stmt|;
name|stringListItem
operator|->
name|set
argument_list|(
name|QStringList
argument_list|()
operator|<<
literal|"one"
operator|<<
literal|"two"
operator|<<
literal|"three"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|stringListItem
operator|->
name|value
argument_list|()
operator|.
name|toStringList
argument_list|()
argument_list|,
name|QStringList
argument_list|()
operator|<<
literal|"one"
operator|<<
literal|"two"
operator|<<
literal|"three"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|signalSpy
operator|->
name|numberOfCalls
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|set_int_list
name|void
name|GConfItemTests
operator|::
name|set_int_list
parameter_list|()
block|{
name|signalSpy
operator|->
name|numberOfCalls
operator|=
literal|0
expr_stmt|;
name|intListItem
operator|->
name|set
argument_list|(
name|QList
argument_list|<
name|QVariant
argument_list|>
argument_list|()
operator|<<
literal|10
operator|<<
literal|11
operator|<<
literal|12
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|intListItem
operator|->
name|value
argument_list|()
operator|.
name|toList
argument_list|()
argument_list|,
name|QList
argument_list|<
name|QVariant
argument_list|>
argument_list|()
operator|<<
literal|10
operator|<<
literal|11
operator|<<
literal|12
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|signalSpy
operator|->
name|numberOfCalls
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|set_double_list
name|void
name|GConfItemTests
operator|::
name|set_double_list
parameter_list|()
block|{
name|signalSpy
operator|->
name|numberOfCalls
operator|=
literal|0
expr_stmt|;
name|doubleListItem
operator|->
name|set
argument_list|(
name|QList
argument_list|<
name|QVariant
argument_list|>
argument_list|()
operator|<<
literal|1.1
operator|<<
literal|2.2
operator|<<
literal|3.3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doubleListItem
operator|->
name|value
argument_list|()
operator|.
name|toList
argument_list|()
argument_list|,
name|QList
argument_list|<
name|QVariant
argument_list|>
argument_list|()
operator|<<
literal|1.1
operator|<<
literal|2.2
operator|<<
literal|3.3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|signalSpy
operator|->
name|numberOfCalls
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|set_bool_list
name|void
name|GConfItemTests
operator|::
name|set_bool_list
parameter_list|()
block|{
name|signalSpy
operator|->
name|numberOfCalls
operator|=
literal|0
expr_stmt|;
name|boolListItem
operator|->
name|set
argument_list|(
name|QList
argument_list|<
name|QVariant
argument_list|>
argument_list|()
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|boolListItem
operator|->
name|value
argument_list|()
operator|.
name|toList
argument_list|()
argument_list|,
name|QList
argument_list|<
name|QVariant
argument_list|>
argument_list|()
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|signalSpy
operator|->
name|numberOfCalls
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|unset
name|void
name|GConfItemTests
operator|::
name|unset
parameter_list|()
block|{
name|signalSpy
operator|->
name|numberOfCalls
operator|=
literal|0
expr_stmt|;
name|boolItem
operator|->
name|unset
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|boolItem
operator|->
name|value
argument_list|()
operator|.
name|isValid
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|signalSpy
operator|->
name|numberOfCalls
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|list_dirs
name|void
name|GConfItemTests
operator|::
name|list_dirs
parameter_list|()
block|{
name|GConfItem
name|test
argument_list|(
literal|"/Test"
argument_list|)
decl_stmt|;
name|QStringList
name|dirs
init|=
name|test
operator|.
name|listDirs
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|dirs
operator|.
name|contains
argument_list|(
literal|"/Test/Bool"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|dirs
operator|.
name|contains
argument_list|(
literal|"/Test/Int"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|dirs
operator|.
name|contains
argument_list|(
literal|"/Test/String"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|dirs
operator|.
name|contains
argument_list|(
literal|"/Test/Double"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|dirs
operator|.
name|contains
argument_list|(
literal|"/Test/StringList"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|dirs
operator|.
name|contains
argument_list|(
literal|"/Test/IntList"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|dirs
operator|.
name|contains
argument_list|(
literal|"/Test/DoubleList"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|dirs
operator|.
name|contains
argument_list|(
literal|"/Test/BoolList"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|dirs
operator|.
name|contains
argument_list|(
literal|"/Test/UnsetBefore"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|dirs
operator|.
name|contains
argument_list|(
literal|"/Test/UnsetAfter"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dirs
operator|.
name|contains
argument_list|(
literal|"/Test/Dir"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|list_entries
name|void
name|GConfItemTests
operator|::
name|list_entries
parameter_list|()
block|{
name|GConfItem
name|test
argument_list|(
literal|"/Test"
argument_list|)
decl_stmt|;
name|QStringList
name|entries
init|=
name|test
operator|.
name|listEntries
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|entries
operator|.
name|contains
argument_list|(
literal|"/Test/Bool"
argument_list|)
argument_list|)
expr_stmt|;
comment|// has been unset above
name|QVERIFY
argument_list|(
name|entries
operator|.
name|contains
argument_list|(
literal|"/Test/Int"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|entries
operator|.
name|contains
argument_list|(
literal|"/Test/String"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|entries
operator|.
name|contains
argument_list|(
literal|"/Test/Double"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|entries
operator|.
name|contains
argument_list|(
literal|"/Test/StringList"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|entries
operator|.
name|contains
argument_list|(
literal|"/Test/IntList"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|entries
operator|.
name|contains
argument_list|(
literal|"/Test/DoubleList"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|entries
operator|.
name|contains
argument_list|(
literal|"/Test/BoolList"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|entries
operator|.
name|contains
argument_list|(
literal|"/Test/UnsetBefore"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|entries
operator|.
name|contains
argument_list|(
literal|"/Test/UnsetAfter"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|entries
operator|.
name|contains
argument_list|(
literal|"/Test/Dir"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|get_default
name|void
name|GConfItemTests
operator|::
name|get_default
parameter_list|()
block|{
name|intItem
operator|->
name|unset
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|intItem
operator|->
name|value
argument_list|(
literal|123
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|123
argument_list|)
expr_stmt|;
name|intItem
operator|->
name|set
argument_list|(
literal|234
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|intItem
operator|->
name|value
argument_list|(
literal|123
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|234
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|propagate
name|void
name|GConfItemTests
operator|::
name|propagate
parameter_list|()
block|{
name|GConfItem
name|secondIntItem
argument_list|(
literal|"/Test/Int"
argument_list|)
decl_stmt|;
name|secondIntItem
operator|.
name|set
argument_list|(
literal|3000
argument_list|)
expr_stmt|;
name|QVERIFY_TIMEOUT
argument_list|(
literal|2000
argument_list|,
name|intItem
operator|->
name|value
argument_list|()
operator|==
name|secondIntItem
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|signalSpy
operator|->
name|numberOfCalls
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|set_external
name|void
name|GConfItemTests
operator|::
name|set_external
parameter_list|()
block|{
comment|// This must be the last test case.  The values that are set here
comment|// are checked after this program exits.
name|boolItem
operator|->
name|set
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|intItem
operator|->
name|set
argument_list|(
literal|54321
argument_list|)
expr_stmt|;
name|stringItem
operator|->
name|set
argument_list|(
literal|"Good bye GConf"
argument_list|)
expr_stmt|;
name|doubleItem
operator|->
name|set
argument_list|(
operator|-
literal|2.5
argument_list|)
expr_stmt|;
name|stringListItem
operator|->
name|set
argument_list|(
name|QStringList
argument_list|()
operator|<<
literal|"Good"
operator|<<
literal|"bye"
operator|<<
literal|"GConf"
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"Ã¤Ã¶Ã¼"
argument_list|)
argument_list|)
expr_stmt|;
name|intListItem
operator|->
name|set
argument_list|(
name|QList
argument_list|<
name|QVariant
argument_list|>
argument_list|()
operator|<<
literal|5
operator|<<
literal|4
operator|<<
literal|3
operator|<<
literal|2
operator|<<
literal|1
argument_list|)
expr_stmt|;
name|doubleListItem
operator|->
name|set
argument_list|(
name|QList
argument_list|<
name|QVariant
argument_list|>
argument_list|()
operator|<<
operator|-
literal|2.5
operator|<<
operator|-
literal|2.5
argument_list|)
expr_stmt|;
name|boolListItem
operator|->
name|set
argument_list|(
name|QList
argument_list|<
name|QVariant
argument_list|>
argument_list|()
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|true
argument_list|)
expr_stmt|;
name|unsetAfterItem
operator|->
name|set
argument_list|(
name|QVariant
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_expr_stmt
DECL|variable|GConfItemTests
name|QTEST_MAIN
argument_list|(
name|GConfItemTests
argument_list|)
expr_stmt|;
end_expr_stmt
end_unit
