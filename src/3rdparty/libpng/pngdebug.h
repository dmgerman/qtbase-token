begin_unit
begin_comment
comment|/* pngdebug.h - Debugging macros for libpng, also used in pngtest.c  *  * Copyright (c) 1998-2011 Glenn Randers-Pehrson  * (Version 0.96 Copyright (c) 1996, 1997 Andreas Dilger)  * (Version 0.88 Copyright (c) 1995, 1996 Guy Eric Schalnat, Group 42, Inc.)  *  * Last changed in libpng 1.5.0 [January 6, 2011]  *  * This code is released under the libpng license.  * For conditions of distribution and use, see the disclaimer  * and license in png.h  */
end_comment
begin_comment
comment|/* Define PNG_DEBUG at compile time for debugging information.  Higher  * numbers for PNG_DEBUG mean more debugging information.  This has  * only been added since version 0.95 so it is not implemented throughout  * libpng yet, but more support will be added as needed.  *  * png_debug[1-2]?(level, message ,arg{0-2})  *   Expands to a statement (either a simple expression or a compound  *   do..while(0) statement) that outputs a message with parameter  *   substitution if PNG_DEBUG is defined to 2 or more.  If PNG_DEBUG  *   is undefined, 0 or 1 every png_debug expands to a simple expression  *   (actually ((void)0)).  *  *   level: level of detail of message, starting at 0.  A level 'n'  *          message is preceded by 'n' tab characters (not implemented  *          on Microsoft compilers unless PNG_DEBUG_FILE is also  *          defined, to allow debug DLL compilation with no standard IO).  *   message: a printf(3) style text string.  A trailing '\n' is added  *            to the message.  *   arg: 0 to 2 arguments for printf(3) style substitution in message.  */
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|PNGDEBUG_H
end_ifndef
begin_define
DECL|macro|PNGDEBUG_H
define|#
directive|define
name|PNGDEBUG_H
end_define
begin_comment
comment|/* These settings control the formatting of messages in png.c and pngerror.c */
end_comment
begin_comment
comment|/* Moved to pngdebug.h at 1.5.0 */
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|PNG_LITERAL_SHARP
end_ifndef
begin_define
DECL|macro|PNG_LITERAL_SHARP
define|#
directive|define
name|PNG_LITERAL_SHARP
value|0x23
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|PNG_LITERAL_LEFT_SQUARE_BRACKET
end_ifndef
begin_define
DECL|macro|PNG_LITERAL_LEFT_SQUARE_BRACKET
define|#
directive|define
name|PNG_LITERAL_LEFT_SQUARE_BRACKET
value|0x5b
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|PNG_LITERAL_RIGHT_SQUARE_BRACKET
end_ifndef
begin_define
DECL|macro|PNG_LITERAL_RIGHT_SQUARE_BRACKET
define|#
directive|define
name|PNG_LITERAL_RIGHT_SQUARE_BRACKET
value|0x5d
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|PNG_STRING_NEWLINE
end_ifndef
begin_define
DECL|macro|PNG_STRING_NEWLINE
define|#
directive|define
name|PNG_STRING_NEWLINE
value|"\n"
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_ifdef
ifdef|#
directive|ifdef
name|PNG_DEBUG
end_ifdef
begin_if
if|#
directive|if
operator|(
name|PNG_DEBUG
operator|>
literal|0
operator|)
end_if
begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|PNG_DEBUG_FILE
argument_list|)
operator|&&
name|defined
argument_list|(
name|_MSC_VER
argument_list|)
end_if
begin_include
include|#
directive|include
file|<crtdbg.h>
end_include
begin_if
if|#
directive|if
operator|(
name|PNG_DEBUG
operator|>
literal|1
operator|)
end_if
begin_ifndef
ifndef|#
directive|ifndef
name|_DEBUG
end_ifndef
begin_define
DECL|macro|_DEBUG
define|#
directive|define
name|_DEBUG
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|png_debug
end_ifndef
begin_define
DECL|macro|png_debug
define|#
directive|define
name|png_debug
parameter_list|(
name|l
parameter_list|,
name|m
parameter_list|)
value|_RPT0(_CRT_WARN,m PNG_STRING_NEWLINE)
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|png_debug1
end_ifndef
begin_define
DECL|macro|png_debug1
define|#
directive|define
name|png_debug1
parameter_list|(
name|l
parameter_list|,
name|m
parameter_list|,
name|p1
parameter_list|)
value|_RPT1(_CRT_WARN,m PNG_STRING_NEWLINE,p1)
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|png_debug2
end_ifndef
begin_define
DECL|macro|png_debug2
define|#
directive|define
name|png_debug2
parameter_list|(
name|l
parameter_list|,
name|m
parameter_list|,
name|p1
parameter_list|,
name|p2
parameter_list|)
define|\
value|_RPT2(_CRT_WARN,m PNG_STRING_NEWLINE,p1,p2)
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_endif
endif|#
directive|endif
end_endif
begin_else
else|#
directive|else
end_else
begin_comment
comment|/* PNG_DEBUG_FILE || !_MSC_VER */
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|PNG_STDIO_SUPPORTED
end_ifndef
begin_include
include|#
directive|include
file|<stdio.h>
end_include
begin_comment
comment|/* not included yet */
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|PNG_DEBUG_FILE
end_ifndef
begin_define
DECL|macro|PNG_DEBUG_FILE
define|#
directive|define
name|PNG_DEBUG_FILE
value|stderr
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/* PNG_DEBUG_FILE */
end_comment
begin_if
if|#
directive|if
operator|(
name|PNG_DEBUG
operator|>
literal|1
operator|)
end_if
begin_comment
comment|/* Note: ["%s"m PNG_STRING_NEWLINE] probably does not work on  * non-ISO compilers  */
end_comment
begin_ifdef
ifdef|#
directive|ifdef
name|__STDC__
end_ifdef
begin_ifndef
ifndef|#
directive|ifndef
name|png_debug
end_ifndef
begin_define
DECL|macro|png_debug
define|#
directive|define
name|png_debug
parameter_list|(
name|l
parameter_list|,
name|m
parameter_list|)
define|\
value|do { \        int num_tabs=l; \        fprintf(PNG_DEBUG_FILE,"%s" m PNG_STRING_NEWLINE,(num_tabs==1 ? "\t" : \          (num_tabs==2 ? "\t\t":(num_tabs>2 ? "\t\t\t":"")))); \        } while (0)
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|png_debug1
end_ifndef
begin_define
DECL|macro|png_debug1
define|#
directive|define
name|png_debug1
parameter_list|(
name|l
parameter_list|,
name|m
parameter_list|,
name|p1
parameter_list|)
define|\
value|do { \        int num_tabs=l; \        fprintf(PNG_DEBUG_FILE,"%s" m PNG_STRING_NEWLINE,(num_tabs==1 ? "\t" : \          (num_tabs==2 ? "\t\t":(num_tabs>2 ? "\t\t\t":""))),p1); \        } while (0)
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|png_debug2
end_ifndef
begin_define
DECL|macro|png_debug2
define|#
directive|define
name|png_debug2
parameter_list|(
name|l
parameter_list|,
name|m
parameter_list|,
name|p1
parameter_list|,
name|p2
parameter_list|)
define|\
value|do { \        int num_tabs=l; \        fprintf(PNG_DEBUG_FILE,"%s" m PNG_STRING_NEWLINE,(num_tabs==1 ? "\t" : \          (num_tabs==2 ? "\t\t":(num_tabs>2 ? "\t\t\t":""))),p1,p2); \        } while (0)
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_else
else|#
directive|else
end_else
begin_comment
comment|/* __STDC __ */
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|png_debug
end_ifndef
begin_define
DECL|macro|png_debug
define|#
directive|define
name|png_debug
parameter_list|(
name|l
parameter_list|,
name|m
parameter_list|)
define|\
value|do { \        int num_tabs=l; \        char format[256]; \        snprintf(format,256,"%s%s%s",(num_tabs==1 ? "\t" : \          (num_tabs==2 ? "\t\t":(num_tabs>2 ? "\t\t\t":""))), \          m,PNG_STRING_NEWLINE); \        fprintf(PNG_DEBUG_FILE,format); \        } while (0)
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|png_debug1
end_ifndef
begin_define
DECL|macro|png_debug1
define|#
directive|define
name|png_debug1
parameter_list|(
name|l
parameter_list|,
name|m
parameter_list|,
name|p1
parameter_list|)
define|\
value|do { \        int num_tabs=l; \        char format[256]; \        snprintf(format,256,"%s%s%s",(num_tabs==1 ? "\t" : \          (num_tabs==2 ? "\t\t":(num_tabs>2 ? "\t\t\t":""))), \          m,PNG_STRING_NEWLINE); \        fprintf(PNG_DEBUG_FILE,format,p1); \        } while (0)
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|png_debug2
end_ifndef
begin_define
DECL|macro|png_debug2
define|#
directive|define
name|png_debug2
parameter_list|(
name|l
parameter_list|,
name|m
parameter_list|,
name|p1
parameter_list|,
name|p2
parameter_list|)
define|\
value|do { \        int num_tabs=l; \        char format[256]; \        snprintf(format,256,"%s%s%s",(num_tabs==1 ? "\t" : \          (num_tabs==2 ? "\t\t":(num_tabs>2 ? "\t\t\t":""))), \          m,PNG_STRING_NEWLINE); \        fprintf(PNG_DEBUG_FILE,format,p1,p2); \        } while (0)
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/* __STDC __ */
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/* (PNG_DEBUG> 1) */
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/* _MSC_VER */
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/* (PNG_DEBUG> 0) */
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/* PNG_DEBUG */
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|png_debug
end_ifndef
begin_define
DECL|macro|png_debug
define|#
directive|define
name|png_debug
parameter_list|(
name|l
parameter_list|,
name|m
parameter_list|)
value|((void)0)
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|png_debug1
end_ifndef
begin_define
DECL|macro|png_debug1
define|#
directive|define
name|png_debug1
parameter_list|(
name|l
parameter_list|,
name|m
parameter_list|,
name|p1
parameter_list|)
value|((void)0)
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|png_debug2
end_ifndef
begin_define
DECL|macro|png_debug2
define|#
directive|define
name|png_debug2
parameter_list|(
name|l
parameter_list|,
name|m
parameter_list|,
name|p1
parameter_list|,
name|p2
parameter_list|)
value|((void)0)
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/* PNGDEBUG_H */
end_comment
end_unit
