begin_unit
begin_comment
comment|/*  * Copyright Â© 2009  Red Hat, Inc.  *  *  This is part of HarfBuzz, a text shaping library.  *  * Permission is hereby granted, without written agreement and without  * license or royalty fees, to use, copy, modify, and distribute this  * software and its documentation for any purpose, provided that the  * above copyright notice and the following two paragraphs appear in  * all copies of this software.  *  * IN NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE TO ANY PARTY FOR  * DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES  * ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN  * IF THE COPYRIGHT HOLDER HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH  * DAMAGE.  *  * THE COPYRIGHT HOLDER SPECIFICALLY DISCLAIMS ANY WARRANTIES, INCLUDING,  * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND  * FITNESS FOR A PARTICULAR PURPOSE.  THE SOFTWARE PROVIDED HEREUNDER IS  * ON AN "AS IS" BASIS, AND THE COPYRIGHT HOLDER HAS NO OBLIGATION TO  * PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.  *  * Red Hat Author(s): Behdad Esfahbod  */
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|HB_H_IN
end_ifndef
begin_error
error|#
directive|error
literal|"Include<hb.h> instead."
end_error
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|HB_FACE_H
end_ifndef
begin_define
DECL|macro|HB_FACE_H
define|#
directive|define
name|HB_FACE_H
end_define
begin_include
include|#
directive|include
file|"hb-common.h"
end_include
begin_include
include|#
directive|include
file|"hb-blob.h"
end_include
begin_macro
name|HB_BEGIN_DECLS
end_macro
begin_comment
comment|/*  * hb_face_t  */
end_comment
begin_typedef
DECL|typedef|hb_face_t
typedef|typedef
name|struct
name|hb_face_t
name|hb_face_t
typedef|;
end_typedef
begin_function_decl
name|hb_face_t
modifier|*
name|hb_face_create
parameter_list|(
name|hb_blob_t
modifier|*
name|blob
parameter_list|,
name|unsigned
name|int
name|index
parameter_list|)
function_decl|;
end_function_decl
begin_typedef
DECL|typedef|hb_reference_table_func_t
typedef|typedef
name|hb_blob_t
modifier|*
function_decl|(
modifier|*
name|hb_reference_table_func_t
function_decl|)
parameter_list|(
name|hb_face_t
modifier|*
name|face
parameter_list|,
name|hb_tag_t
name|tag
parameter_list|,
name|void
modifier|*
name|user_data
parameter_list|)
function_decl|;
end_typedef
begin_comment
comment|/* calls destroy() when not needing user_data anymore */
end_comment
begin_function_decl
name|hb_face_t
modifier|*
name|hb_face_create_for_tables
parameter_list|(
name|hb_reference_table_func_t
name|reference_table_func
parameter_list|,
name|void
modifier|*
name|user_data
parameter_list|,
name|hb_destroy_func_t
name|destroy
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|hb_face_t
modifier|*
name|hb_face_get_empty
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|hb_face_t
modifier|*
name|hb_face_reference
parameter_list|(
name|hb_face_t
modifier|*
name|face
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|void
name|hb_face_destroy
parameter_list|(
name|hb_face_t
modifier|*
name|face
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|hb_bool_t
name|hb_face_set_user_data
parameter_list|(
name|hb_face_t
modifier|*
name|face
parameter_list|,
name|hb_user_data_key_t
modifier|*
name|key
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|hb_destroy_func_t
name|destroy
parameter_list|,
name|hb_bool_t
name|replace
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|void
modifier|*
name|hb_face_get_user_data
parameter_list|(
name|hb_face_t
modifier|*
name|face
parameter_list|,
name|hb_user_data_key_t
modifier|*
name|key
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|void
name|hb_face_make_immutable
parameter_list|(
name|hb_face_t
modifier|*
name|face
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|hb_bool_t
name|hb_face_is_immutable
parameter_list|(
name|hb_face_t
modifier|*
name|face
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|hb_blob_t
modifier|*
name|hb_face_reference_table
parameter_list|(
name|hb_face_t
modifier|*
name|face
parameter_list|,
name|hb_tag_t
name|tag
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|hb_blob_t
modifier|*
name|hb_face_reference_blob
parameter_list|(
name|hb_face_t
modifier|*
name|face
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|void
name|hb_face_set_index
parameter_list|(
name|hb_face_t
modifier|*
name|face
parameter_list|,
name|unsigned
name|int
name|index
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|unsigned
name|int
name|hb_face_get_index
parameter_list|(
name|hb_face_t
modifier|*
name|face
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|void
name|hb_face_set_upem
parameter_list|(
name|hb_face_t
modifier|*
name|face
parameter_list|,
name|unsigned
name|int
name|upem
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|unsigned
name|int
name|hb_face_get_upem
parameter_list|(
name|hb_face_t
modifier|*
name|face
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|void
name|hb_face_set_glyph_count
parameter_list|(
name|hb_face_t
modifier|*
name|face
parameter_list|,
name|unsigned
name|int
name|glyph_count
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|unsigned
name|int
name|hb_face_get_glyph_count
parameter_list|(
name|hb_face_t
modifier|*
name|face
parameter_list|)
function_decl|;
end_function_decl
begin_macro
name|HB_END_DECLS
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/* HB_FACE_H */
end_comment
end_unit
