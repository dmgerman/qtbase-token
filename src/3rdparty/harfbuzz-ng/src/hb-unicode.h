begin_unit
begin_comment
comment|/*  * Copyright Â© 2009  Red Hat, Inc.  * Copyright Â© 2011  Codethink Limited  * Copyright Â© 2011,2012  Google, Inc.  *  *  This is part of HarfBuzz, a text shaping library.  *  * Permission is hereby granted, without written agreement and without  * license or royalty fees, to use, copy, modify, and distribute this  * software and its documentation for any purpose, provided that the  * above copyright notice and the following two paragraphs appear in  * all copies of this software.  *  * IN NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE TO ANY PARTY FOR  * DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES  * ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN  * IF THE COPYRIGHT HOLDER HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH  * DAMAGE.  *  * THE COPYRIGHT HOLDER SPECIFICALLY DISCLAIMS ANY WARRANTIES, INCLUDING,  * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND  * FITNESS FOR A PARTICULAR PURPOSE.  THE SOFTWARE PROVIDED HEREUNDER IS  * ON AN "AS IS" BASIS, AND THE COPYRIGHT HOLDER HAS NO OBLIGATION TO  * PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.  *  * Red Hat Author(s): Behdad Esfahbod  * Codethink Author(s): Ryan Lortie  * Google Author(s): Behdad Esfahbod  */
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|HB_H_IN
end_ifndef
begin_error
error|#
directive|error
literal|"Include<hb.h> instead."
end_error
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|HB_UNICODE_H
end_ifndef
begin_define
DECL|macro|HB_UNICODE_H
define|#
directive|define
name|HB_UNICODE_H
end_define
begin_include
include|#
directive|include
file|"hb-common.h"
end_include
begin_macro
name|HB_BEGIN_DECLS
end_macro
begin_comment
comment|/* hb_unicode_general_category_t */
end_comment
begin_comment
comment|/* Unicode Character Database property: General_Category (gc) */
end_comment
begin_typedef
typedef|typedef
enum|enum
block|{
DECL|enumerator|HB_UNICODE_GENERAL_CATEGORY_CONTROL
name|HB_UNICODE_GENERAL_CATEGORY_CONTROL
block|,
comment|/* Cc */
DECL|enumerator|HB_UNICODE_GENERAL_CATEGORY_FORMAT
name|HB_UNICODE_GENERAL_CATEGORY_FORMAT
block|,
comment|/* Cf */
DECL|enumerator|HB_UNICODE_GENERAL_CATEGORY_UNASSIGNED
name|HB_UNICODE_GENERAL_CATEGORY_UNASSIGNED
block|,
comment|/* Cn */
DECL|enumerator|HB_UNICODE_GENERAL_CATEGORY_PRIVATE_USE
name|HB_UNICODE_GENERAL_CATEGORY_PRIVATE_USE
block|,
comment|/* Co */
DECL|enumerator|HB_UNICODE_GENERAL_CATEGORY_SURROGATE
name|HB_UNICODE_GENERAL_CATEGORY_SURROGATE
block|,
comment|/* Cs */
DECL|enumerator|HB_UNICODE_GENERAL_CATEGORY_LOWERCASE_LETTER
name|HB_UNICODE_GENERAL_CATEGORY_LOWERCASE_LETTER
block|,
comment|/* Ll */
DECL|enumerator|HB_UNICODE_GENERAL_CATEGORY_MODIFIER_LETTER
name|HB_UNICODE_GENERAL_CATEGORY_MODIFIER_LETTER
block|,
comment|/* Lm */
DECL|enumerator|HB_UNICODE_GENERAL_CATEGORY_OTHER_LETTER
name|HB_UNICODE_GENERAL_CATEGORY_OTHER_LETTER
block|,
comment|/* Lo */
DECL|enumerator|HB_UNICODE_GENERAL_CATEGORY_TITLECASE_LETTER
name|HB_UNICODE_GENERAL_CATEGORY_TITLECASE_LETTER
block|,
comment|/* Lt */
DECL|enumerator|HB_UNICODE_GENERAL_CATEGORY_UPPERCASE_LETTER
name|HB_UNICODE_GENERAL_CATEGORY_UPPERCASE_LETTER
block|,
comment|/* Lu */
DECL|enumerator|HB_UNICODE_GENERAL_CATEGORY_SPACING_MARK
name|HB_UNICODE_GENERAL_CATEGORY_SPACING_MARK
block|,
comment|/* Mc */
DECL|enumerator|HB_UNICODE_GENERAL_CATEGORY_ENCLOSING_MARK
name|HB_UNICODE_GENERAL_CATEGORY_ENCLOSING_MARK
block|,
comment|/* Me */
DECL|enumerator|HB_UNICODE_GENERAL_CATEGORY_NON_SPACING_MARK
name|HB_UNICODE_GENERAL_CATEGORY_NON_SPACING_MARK
block|,
comment|/* Mn */
DECL|enumerator|HB_UNICODE_GENERAL_CATEGORY_DECIMAL_NUMBER
name|HB_UNICODE_GENERAL_CATEGORY_DECIMAL_NUMBER
block|,
comment|/* Nd */
DECL|enumerator|HB_UNICODE_GENERAL_CATEGORY_LETTER_NUMBER
name|HB_UNICODE_GENERAL_CATEGORY_LETTER_NUMBER
block|,
comment|/* Nl */
DECL|enumerator|HB_UNICODE_GENERAL_CATEGORY_OTHER_NUMBER
name|HB_UNICODE_GENERAL_CATEGORY_OTHER_NUMBER
block|,
comment|/* No */
DECL|enumerator|HB_UNICODE_GENERAL_CATEGORY_CONNECT_PUNCTUATION
name|HB_UNICODE_GENERAL_CATEGORY_CONNECT_PUNCTUATION
block|,
comment|/* Pc */
DECL|enumerator|HB_UNICODE_GENERAL_CATEGORY_DASH_PUNCTUATION
name|HB_UNICODE_GENERAL_CATEGORY_DASH_PUNCTUATION
block|,
comment|/* Pd */
DECL|enumerator|HB_UNICODE_GENERAL_CATEGORY_CLOSE_PUNCTUATION
name|HB_UNICODE_GENERAL_CATEGORY_CLOSE_PUNCTUATION
block|,
comment|/* Pe */
DECL|enumerator|HB_UNICODE_GENERAL_CATEGORY_FINAL_PUNCTUATION
name|HB_UNICODE_GENERAL_CATEGORY_FINAL_PUNCTUATION
block|,
comment|/* Pf */
DECL|enumerator|HB_UNICODE_GENERAL_CATEGORY_INITIAL_PUNCTUATION
name|HB_UNICODE_GENERAL_CATEGORY_INITIAL_PUNCTUATION
block|,
comment|/* Pi */
DECL|enumerator|HB_UNICODE_GENERAL_CATEGORY_OTHER_PUNCTUATION
name|HB_UNICODE_GENERAL_CATEGORY_OTHER_PUNCTUATION
block|,
comment|/* Po */
DECL|enumerator|HB_UNICODE_GENERAL_CATEGORY_OPEN_PUNCTUATION
name|HB_UNICODE_GENERAL_CATEGORY_OPEN_PUNCTUATION
block|,
comment|/* Ps */
DECL|enumerator|HB_UNICODE_GENERAL_CATEGORY_CURRENCY_SYMBOL
name|HB_UNICODE_GENERAL_CATEGORY_CURRENCY_SYMBOL
block|,
comment|/* Sc */
DECL|enumerator|HB_UNICODE_GENERAL_CATEGORY_MODIFIER_SYMBOL
name|HB_UNICODE_GENERAL_CATEGORY_MODIFIER_SYMBOL
block|,
comment|/* Sk */
DECL|enumerator|HB_UNICODE_GENERAL_CATEGORY_MATH_SYMBOL
name|HB_UNICODE_GENERAL_CATEGORY_MATH_SYMBOL
block|,
comment|/* Sm */
DECL|enumerator|HB_UNICODE_GENERAL_CATEGORY_OTHER_SYMBOL
name|HB_UNICODE_GENERAL_CATEGORY_OTHER_SYMBOL
block|,
comment|/* So */
DECL|enumerator|HB_UNICODE_GENERAL_CATEGORY_LINE_SEPARATOR
name|HB_UNICODE_GENERAL_CATEGORY_LINE_SEPARATOR
block|,
comment|/* Zl */
DECL|enumerator|HB_UNICODE_GENERAL_CATEGORY_PARAGRAPH_SEPARATOR
name|HB_UNICODE_GENERAL_CATEGORY_PARAGRAPH_SEPARATOR
block|,
comment|/* Zp */
DECL|enumerator|HB_UNICODE_GENERAL_CATEGORY_SPACE_SEPARATOR
name|HB_UNICODE_GENERAL_CATEGORY_SPACE_SEPARATOR
comment|/* Zs */
block|}
DECL|typedef|hb_unicode_general_category_t
name|hb_unicode_general_category_t
typedef|;
end_typedef
begin_comment
comment|/* hb_unicode_combining_class_t */
end_comment
begin_comment
comment|/* Note: newer versions of Unicode may add new values.  Clients should be ready to handle  * any value in the 0..254 range being returned from hb_unicode_combining_class().  */
end_comment
begin_comment
comment|/* Unicode Character Database property: Canonical_Combining_Class (ccc) */
end_comment
begin_typedef
typedef|typedef
enum|enum
block|{
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_NOT_REORDERED
name|HB_UNICODE_COMBINING_CLASS_NOT_REORDERED
init|=
literal|0
block|,
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_OVERLAY
name|HB_UNICODE_COMBINING_CLASS_OVERLAY
init|=
literal|1
block|,
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_NUKTA
name|HB_UNICODE_COMBINING_CLASS_NUKTA
init|=
literal|7
block|,
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_KANA_VOICING
name|HB_UNICODE_COMBINING_CLASS_KANA_VOICING
init|=
literal|8
block|,
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_VIRAMA
name|HB_UNICODE_COMBINING_CLASS_VIRAMA
init|=
literal|9
block|,
comment|/* Hebrew */
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_CCC10
name|HB_UNICODE_COMBINING_CLASS_CCC10
init|=
literal|10
block|,
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_CCC11
name|HB_UNICODE_COMBINING_CLASS_CCC11
init|=
literal|11
block|,
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_CCC12
name|HB_UNICODE_COMBINING_CLASS_CCC12
init|=
literal|12
block|,
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_CCC13
name|HB_UNICODE_COMBINING_CLASS_CCC13
init|=
literal|13
block|,
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_CCC14
name|HB_UNICODE_COMBINING_CLASS_CCC14
init|=
literal|14
block|,
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_CCC15
name|HB_UNICODE_COMBINING_CLASS_CCC15
init|=
literal|15
block|,
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_CCC16
name|HB_UNICODE_COMBINING_CLASS_CCC16
init|=
literal|16
block|,
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_CCC17
name|HB_UNICODE_COMBINING_CLASS_CCC17
init|=
literal|17
block|,
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_CCC18
name|HB_UNICODE_COMBINING_CLASS_CCC18
init|=
literal|18
block|,
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_CCC19
name|HB_UNICODE_COMBINING_CLASS_CCC19
init|=
literal|19
block|,
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_CCC20
name|HB_UNICODE_COMBINING_CLASS_CCC20
init|=
literal|20
block|,
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_CCC21
name|HB_UNICODE_COMBINING_CLASS_CCC21
init|=
literal|21
block|,
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_CCC22
name|HB_UNICODE_COMBINING_CLASS_CCC22
init|=
literal|22
block|,
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_CCC23
name|HB_UNICODE_COMBINING_CLASS_CCC23
init|=
literal|23
block|,
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_CCC24
name|HB_UNICODE_COMBINING_CLASS_CCC24
init|=
literal|24
block|,
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_CCC25
name|HB_UNICODE_COMBINING_CLASS_CCC25
init|=
literal|25
block|,
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_CCC26
name|HB_UNICODE_COMBINING_CLASS_CCC26
init|=
literal|26
block|,
comment|/* Arabic */
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_CCC27
name|HB_UNICODE_COMBINING_CLASS_CCC27
init|=
literal|27
block|,
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_CCC28
name|HB_UNICODE_COMBINING_CLASS_CCC28
init|=
literal|28
block|,
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_CCC29
name|HB_UNICODE_COMBINING_CLASS_CCC29
init|=
literal|29
block|,
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_CCC30
name|HB_UNICODE_COMBINING_CLASS_CCC30
init|=
literal|30
block|,
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_CCC31
name|HB_UNICODE_COMBINING_CLASS_CCC31
init|=
literal|31
block|,
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_CCC32
name|HB_UNICODE_COMBINING_CLASS_CCC32
init|=
literal|32
block|,
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_CCC33
name|HB_UNICODE_COMBINING_CLASS_CCC33
init|=
literal|33
block|,
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_CCC34
name|HB_UNICODE_COMBINING_CLASS_CCC34
init|=
literal|34
block|,
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_CCC35
name|HB_UNICODE_COMBINING_CLASS_CCC35
init|=
literal|35
block|,
comment|/* Syriac */
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_CCC36
name|HB_UNICODE_COMBINING_CLASS_CCC36
init|=
literal|36
block|,
comment|/* Telugu */
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_CCC84
name|HB_UNICODE_COMBINING_CLASS_CCC84
init|=
literal|84
block|,
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_CCC91
name|HB_UNICODE_COMBINING_CLASS_CCC91
init|=
literal|91
block|,
comment|/* Thai */
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_CCC103
name|HB_UNICODE_COMBINING_CLASS_CCC103
init|=
literal|103
block|,
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_CCC107
name|HB_UNICODE_COMBINING_CLASS_CCC107
init|=
literal|107
block|,
comment|/* Lao */
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_CCC118
name|HB_UNICODE_COMBINING_CLASS_CCC118
init|=
literal|118
block|,
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_CCC122
name|HB_UNICODE_COMBINING_CLASS_CCC122
init|=
literal|122
block|,
comment|/* Tibetan */
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_CCC129
name|HB_UNICODE_COMBINING_CLASS_CCC129
init|=
literal|129
block|,
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_CCC130
name|HB_UNICODE_COMBINING_CLASS_CCC130
init|=
literal|130
block|,
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_CCC133
name|HB_UNICODE_COMBINING_CLASS_CCC133
init|=
literal|132
block|,
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_ATTACHED_BELOW_LEFT
name|HB_UNICODE_COMBINING_CLASS_ATTACHED_BELOW_LEFT
init|=
literal|200
block|,
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_ATTACHED_BELOW
name|HB_UNICODE_COMBINING_CLASS_ATTACHED_BELOW
init|=
literal|202
block|,
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_ATTACHED_ABOVE
name|HB_UNICODE_COMBINING_CLASS_ATTACHED_ABOVE
init|=
literal|214
block|,
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_ATTACHED_ABOVE_RIGHT
name|HB_UNICODE_COMBINING_CLASS_ATTACHED_ABOVE_RIGHT
init|=
literal|216
block|,
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_BELOW_LEFT
name|HB_UNICODE_COMBINING_CLASS_BELOW_LEFT
init|=
literal|218
block|,
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_BELOW
name|HB_UNICODE_COMBINING_CLASS_BELOW
init|=
literal|220
block|,
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_BELOW_RIGHT
name|HB_UNICODE_COMBINING_CLASS_BELOW_RIGHT
init|=
literal|222
block|,
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_LEFT
name|HB_UNICODE_COMBINING_CLASS_LEFT
init|=
literal|224
block|,
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_RIGHT
name|HB_UNICODE_COMBINING_CLASS_RIGHT
init|=
literal|226
block|,
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_ABOVE_LEFT
name|HB_UNICODE_COMBINING_CLASS_ABOVE_LEFT
init|=
literal|228
block|,
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_ABOVE
name|HB_UNICODE_COMBINING_CLASS_ABOVE
init|=
literal|230
block|,
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_ABOVE_RIGHT
name|HB_UNICODE_COMBINING_CLASS_ABOVE_RIGHT
init|=
literal|232
block|,
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_DOUBLE_BELOW
name|HB_UNICODE_COMBINING_CLASS_DOUBLE_BELOW
init|=
literal|233
block|,
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_DOUBLE_ABOVE
name|HB_UNICODE_COMBINING_CLASS_DOUBLE_ABOVE
init|=
literal|234
block|,
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_IOTA_SUBSCRIPT
name|HB_UNICODE_COMBINING_CLASS_IOTA_SUBSCRIPT
init|=
literal|240
block|,
DECL|enumerator|HB_UNICODE_COMBINING_CLASS_INVALID
name|HB_UNICODE_COMBINING_CLASS_INVALID
init|=
literal|255
block|}
DECL|typedef|hb_unicode_combining_class_t
name|hb_unicode_combining_class_t
typedef|;
end_typedef
begin_comment
comment|/*  * hb_unicode_funcs_t  */
end_comment
begin_typedef
DECL|typedef|hb_unicode_funcs_t
typedef|typedef
name|struct
name|hb_unicode_funcs_t
name|hb_unicode_funcs_t
typedef|;
end_typedef
begin_comment
comment|/*  * just give me the best implementation you've got there.  */
end_comment
begin_function_decl
name|hb_unicode_funcs_t
modifier|*
name|hb_unicode_funcs_get_default
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|hb_unicode_funcs_t
modifier|*
name|hb_unicode_funcs_create
parameter_list|(
name|hb_unicode_funcs_t
modifier|*
name|parent
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|hb_unicode_funcs_t
modifier|*
name|hb_unicode_funcs_get_empty
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|hb_unicode_funcs_t
modifier|*
name|hb_unicode_funcs_reference
parameter_list|(
name|hb_unicode_funcs_t
modifier|*
name|ufuncs
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|void
name|hb_unicode_funcs_destroy
parameter_list|(
name|hb_unicode_funcs_t
modifier|*
name|ufuncs
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|hb_bool_t
name|hb_unicode_funcs_set_user_data
parameter_list|(
name|hb_unicode_funcs_t
modifier|*
name|ufuncs
parameter_list|,
name|hb_user_data_key_t
modifier|*
name|key
parameter_list|,
name|void
modifier|*
name|data
parameter_list|,
name|hb_destroy_func_t
name|destroy
parameter_list|,
name|hb_bool_t
name|replace
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|void
modifier|*
name|hb_unicode_funcs_get_user_data
parameter_list|(
name|hb_unicode_funcs_t
modifier|*
name|ufuncs
parameter_list|,
name|hb_user_data_key_t
modifier|*
name|key
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|void
name|hb_unicode_funcs_make_immutable
parameter_list|(
name|hb_unicode_funcs_t
modifier|*
name|ufuncs
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|hb_bool_t
name|hb_unicode_funcs_is_immutable
parameter_list|(
name|hb_unicode_funcs_t
modifier|*
name|ufuncs
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|hb_unicode_funcs_t
modifier|*
name|hb_unicode_funcs_get_parent
parameter_list|(
name|hb_unicode_funcs_t
modifier|*
name|ufuncs
parameter_list|)
function_decl|;
end_function_decl
begin_comment
comment|/*  * funcs  */
end_comment
begin_comment
comment|/* typedefs */
end_comment
begin_typedef
DECL|typedef|hb_unicode_combining_class_func_t
typedef|typedef
name|hb_unicode_combining_class_t
function_decl|(
modifier|*
name|hb_unicode_combining_class_func_t
function_decl|)
parameter_list|(
name|hb_unicode_funcs_t
modifier|*
name|ufuncs
parameter_list|,
name|hb_codepoint_t
name|unicode
parameter_list|,
name|void
modifier|*
name|user_data
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|hb_unicode_eastasian_width_func_t
typedef|typedef
name|unsigned
name|int
function_decl|(
modifier|*
name|hb_unicode_eastasian_width_func_t
function_decl|)
parameter_list|(
name|hb_unicode_funcs_t
modifier|*
name|ufuncs
parameter_list|,
name|hb_codepoint_t
name|unicode
parameter_list|,
name|void
modifier|*
name|user_data
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|hb_unicode_general_category_func_t
typedef|typedef
name|hb_unicode_general_category_t
function_decl|(
modifier|*
name|hb_unicode_general_category_func_t
function_decl|)
parameter_list|(
name|hb_unicode_funcs_t
modifier|*
name|ufuncs
parameter_list|,
name|hb_codepoint_t
name|unicode
parameter_list|,
name|void
modifier|*
name|user_data
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|hb_unicode_mirroring_func_t
typedef|typedef
name|hb_codepoint_t
function_decl|(
modifier|*
name|hb_unicode_mirroring_func_t
function_decl|)
parameter_list|(
name|hb_unicode_funcs_t
modifier|*
name|ufuncs
parameter_list|,
name|hb_codepoint_t
name|unicode
parameter_list|,
name|void
modifier|*
name|user_data
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|hb_unicode_script_func_t
typedef|typedef
name|hb_script_t
function_decl|(
modifier|*
name|hb_unicode_script_func_t
function_decl|)
parameter_list|(
name|hb_unicode_funcs_t
modifier|*
name|ufuncs
parameter_list|,
name|hb_codepoint_t
name|unicode
parameter_list|,
name|void
modifier|*
name|user_data
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|hb_unicode_compose_func_t
typedef|typedef
name|hb_bool_t
function_decl|(
modifier|*
name|hb_unicode_compose_func_t
function_decl|)
parameter_list|(
name|hb_unicode_funcs_t
modifier|*
name|ufuncs
parameter_list|,
name|hb_codepoint_t
name|a
parameter_list|,
name|hb_codepoint_t
name|b
parameter_list|,
name|hb_codepoint_t
modifier|*
name|ab
parameter_list|,
name|void
modifier|*
name|user_data
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|hb_unicode_decompose_func_t
typedef|typedef
name|hb_bool_t
function_decl|(
modifier|*
name|hb_unicode_decompose_func_t
function_decl|)
parameter_list|(
name|hb_unicode_funcs_t
modifier|*
name|ufuncs
parameter_list|,
name|hb_codepoint_t
name|ab
parameter_list|,
name|hb_codepoint_t
modifier|*
name|a
parameter_list|,
name|hb_codepoint_t
modifier|*
name|b
parameter_list|,
name|void
modifier|*
name|user_data
parameter_list|)
function_decl|;
end_typedef
begin_comment
comment|/**  * hb_unicode_decompose_compatibility_func_t:  * @ufuncs: a Unicode function structure  * @u: codepoint to decompose  * @decomposed: address of codepoint array (of length %HB_UNICODE_MAX_DECOMPOSITION_LEN) to write decomposition into  * @user_data: user data pointer as passed to hb_unicode_funcs_set_decompose_compatibility_func()  *  * Fully decompose @u to its Unicode compatibility decomposition. The codepoints of the decomposition will be written to @decomposed.  * The complete length of the decomposition will be returned.  *  * If @u has no compatibility decomposition, zero should be returned.  *  * The Unicode standard guarantees that a buffer of length %HB_UNICODE_MAX_DECOMPOSITION_LEN codepoints will always be sufficient for any  * compatibility decomposition plus an terminating value of 0.  Consequently, @decompose must be allocated by the caller to be at least this length.  Implementations  * of this function type must ensure that they do not write past the provided array.  *  * Return value: number of codepoints in the full compatibility decomposition of @u, or 0 if no decomposition available.  */
end_comment
begin_typedef
DECL|typedef|hb_unicode_decompose_compatibility_func_t
typedef|typedef
name|unsigned
name|int
function_decl|(
modifier|*
name|hb_unicode_decompose_compatibility_func_t
function_decl|)
parameter_list|(
name|hb_unicode_funcs_t
modifier|*
name|ufuncs
parameter_list|,
name|hb_codepoint_t
name|u
parameter_list|,
name|hb_codepoint_t
modifier|*
name|decomposed
parameter_list|,
name|void
modifier|*
name|user_data
parameter_list|)
function_decl|;
end_typedef
begin_comment
comment|/* See Unicode 6.1 for details on the maximum decomposition length. */
end_comment
begin_define
DECL|macro|HB_UNICODE_MAX_DECOMPOSITION_LEN
define|#
directive|define
name|HB_UNICODE_MAX_DECOMPOSITION_LEN
value|(18+1)
end_define
begin_comment
DECL|macro|HB_UNICODE_MAX_DECOMPOSITION_LEN
comment|/* codepoints */
end_comment
begin_comment
comment|/* setters */
end_comment
begin_comment
comment|/**  * hb_unicode_funcs_set_combining_class_func:  * @ufuncs: a Unicode function structure  * @func: (closure user_data) (destroy destroy) (scope notified):  * @user_data:  * @destroy:  *  *   *  * Since: 0.9.2  **/
end_comment
begin_function_decl
name|void
name|hb_unicode_funcs_set_combining_class_func
parameter_list|(
name|hb_unicode_funcs_t
modifier|*
name|ufuncs
parameter_list|,
name|hb_unicode_combining_class_func_t
name|func
parameter_list|,
name|void
modifier|*
name|user_data
parameter_list|,
name|hb_destroy_func_t
name|destroy
parameter_list|)
function_decl|;
end_function_decl
begin_comment
comment|/**  * hb_unicode_funcs_set_eastasian_width_func:  * @ufuncs: a Unicode function structure  * @func: (closure user_data) (destroy destroy) (scope notified):  * @user_data:  * @destroy:  *  *   *  * Since: 0.9.2  **/
end_comment
begin_function_decl
name|void
name|hb_unicode_funcs_set_eastasian_width_func
parameter_list|(
name|hb_unicode_funcs_t
modifier|*
name|ufuncs
parameter_list|,
name|hb_unicode_eastasian_width_func_t
name|func
parameter_list|,
name|void
modifier|*
name|user_data
parameter_list|,
name|hb_destroy_func_t
name|destroy
parameter_list|)
function_decl|;
end_function_decl
begin_comment
comment|/**  * hb_unicode_funcs_set_general_category_func:  * @ufuncs: a Unicode function structure  * @func: (closure user_data) (destroy destroy) (scope notified):  * @user_data:  * @destroy:  *  *   *  * Since: 0.9.2  **/
end_comment
begin_function_decl
name|void
name|hb_unicode_funcs_set_general_category_func
parameter_list|(
name|hb_unicode_funcs_t
modifier|*
name|ufuncs
parameter_list|,
name|hb_unicode_general_category_func_t
name|func
parameter_list|,
name|void
modifier|*
name|user_data
parameter_list|,
name|hb_destroy_func_t
name|destroy
parameter_list|)
function_decl|;
end_function_decl
begin_comment
comment|/**  * hb_unicode_funcs_set_mirroring_func:  * @ufuncs: a Unicode function structure  * @func: (closure user_data) (destroy destroy) (scope notified):  * @user_data:  * @destroy:  *  *   *  * Since: 0.9.2  **/
end_comment
begin_function_decl
name|void
name|hb_unicode_funcs_set_mirroring_func
parameter_list|(
name|hb_unicode_funcs_t
modifier|*
name|ufuncs
parameter_list|,
name|hb_unicode_mirroring_func_t
name|func
parameter_list|,
name|void
modifier|*
name|user_data
parameter_list|,
name|hb_destroy_func_t
name|destroy
parameter_list|)
function_decl|;
end_function_decl
begin_comment
comment|/**  * hb_unicode_funcs_set_script_func:  * @ufuncs: a Unicode function structure  * @func: (closure user_data) (destroy destroy) (scope notified):  * @user_data:  * @destroy:  *  *   *  * Since: 0.9.2  **/
end_comment
begin_function_decl
name|void
name|hb_unicode_funcs_set_script_func
parameter_list|(
name|hb_unicode_funcs_t
modifier|*
name|ufuncs
parameter_list|,
name|hb_unicode_script_func_t
name|func
parameter_list|,
name|void
modifier|*
name|user_data
parameter_list|,
name|hb_destroy_func_t
name|destroy
parameter_list|)
function_decl|;
end_function_decl
begin_comment
comment|/**  * hb_unicode_funcs_set_compose_func:  * @ufuncs: a Unicode function structure  * @func: (closure user_data) (destroy destroy) (scope notified):  * @user_data:  * @destroy:  *  *   *  * Since: 0.9.2  **/
end_comment
begin_function_decl
name|void
name|hb_unicode_funcs_set_compose_func
parameter_list|(
name|hb_unicode_funcs_t
modifier|*
name|ufuncs
parameter_list|,
name|hb_unicode_compose_func_t
name|func
parameter_list|,
name|void
modifier|*
name|user_data
parameter_list|,
name|hb_destroy_func_t
name|destroy
parameter_list|)
function_decl|;
end_function_decl
begin_comment
comment|/**  * hb_unicode_funcs_set_decompose_func:  * @ufuncs: a Unicode function structure  * @func: (closure user_data) (destroy destroy) (scope notified):  * @user_data:  * @destroy:  *  *   *  * Since: 0.9.2  **/
end_comment
begin_function_decl
name|void
name|hb_unicode_funcs_set_decompose_func
parameter_list|(
name|hb_unicode_funcs_t
modifier|*
name|ufuncs
parameter_list|,
name|hb_unicode_decompose_func_t
name|func
parameter_list|,
name|void
modifier|*
name|user_data
parameter_list|,
name|hb_destroy_func_t
name|destroy
parameter_list|)
function_decl|;
end_function_decl
begin_comment
comment|/**  * hb_unicode_funcs_set_decompose_compatibility_func:  * @ufuncs: a Unicode function structure  * @func: (closure user_data) (destroy destroy) (scope notified):  * @user_data:  * @destroy:  *  *   *  * Since: 0.9.2  **/
end_comment
begin_function_decl
name|void
name|hb_unicode_funcs_set_decompose_compatibility_func
parameter_list|(
name|hb_unicode_funcs_t
modifier|*
name|ufuncs
parameter_list|,
name|hb_unicode_decompose_compatibility_func_t
name|func
parameter_list|,
name|void
modifier|*
name|user_data
parameter_list|,
name|hb_destroy_func_t
name|destroy
parameter_list|)
function_decl|;
end_function_decl
begin_comment
comment|/* accessors */
end_comment
begin_comment
comment|/**  * Since: 0.9.2  **/
end_comment
begin_function_decl
name|hb_unicode_combining_class_t
name|hb_unicode_combining_class
parameter_list|(
name|hb_unicode_funcs_t
modifier|*
name|ufuncs
parameter_list|,
name|hb_codepoint_t
name|unicode
parameter_list|)
function_decl|;
end_function_decl
begin_comment
comment|/**  * Since: 0.9.2  **/
end_comment
begin_function_decl
name|unsigned
name|int
name|hb_unicode_eastasian_width
parameter_list|(
name|hb_unicode_funcs_t
modifier|*
name|ufuncs
parameter_list|,
name|hb_codepoint_t
name|unicode
parameter_list|)
function_decl|;
end_function_decl
begin_comment
comment|/**  * Since: 0.9.2  **/
end_comment
begin_function_decl
name|hb_unicode_general_category_t
name|hb_unicode_general_category
parameter_list|(
name|hb_unicode_funcs_t
modifier|*
name|ufuncs
parameter_list|,
name|hb_codepoint_t
name|unicode
parameter_list|)
function_decl|;
end_function_decl
begin_comment
comment|/**  * Since: 0.9.2  **/
end_comment
begin_function_decl
name|hb_codepoint_t
name|hb_unicode_mirroring
parameter_list|(
name|hb_unicode_funcs_t
modifier|*
name|ufuncs
parameter_list|,
name|hb_codepoint_t
name|unicode
parameter_list|)
function_decl|;
end_function_decl
begin_comment
comment|/**  * Since: 0.9.2  **/
end_comment
begin_function_decl
name|hb_script_t
name|hb_unicode_script
parameter_list|(
name|hb_unicode_funcs_t
modifier|*
name|ufuncs
parameter_list|,
name|hb_codepoint_t
name|unicode
parameter_list|)
function_decl|;
end_function_decl
begin_comment
comment|/**  * Since: 0.9.2  **/
end_comment
begin_function_decl
name|hb_bool_t
name|hb_unicode_compose
parameter_list|(
name|hb_unicode_funcs_t
modifier|*
name|ufuncs
parameter_list|,
name|hb_codepoint_t
name|a
parameter_list|,
name|hb_codepoint_t
name|b
parameter_list|,
name|hb_codepoint_t
modifier|*
name|ab
parameter_list|)
function_decl|;
end_function_decl
begin_comment
comment|/**  * Since: 0.9.2  **/
end_comment
begin_function_decl
name|hb_bool_t
name|hb_unicode_decompose
parameter_list|(
name|hb_unicode_funcs_t
modifier|*
name|ufuncs
parameter_list|,
name|hb_codepoint_t
name|ab
parameter_list|,
name|hb_codepoint_t
modifier|*
name|a
parameter_list|,
name|hb_codepoint_t
modifier|*
name|b
parameter_list|)
function_decl|;
end_function_decl
begin_comment
comment|/**  * Since: 0.9.2  **/
end_comment
begin_function_decl
name|unsigned
name|int
name|hb_unicode_decompose_compatibility
parameter_list|(
name|hb_unicode_funcs_t
modifier|*
name|ufuncs
parameter_list|,
name|hb_codepoint_t
name|u
parameter_list|,
name|hb_codepoint_t
modifier|*
name|decomposed
parameter_list|)
function_decl|;
end_function_decl
begin_macro
name|HB_END_DECLS
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/* HB_UNICODE_H */
end_comment
end_unit
