begin_unit
begin_comment
comment|/*  * jdct.h  *  * Copyright (C) 1994-1996, Thomas G. Lane.  * This file is part of the Independent JPEG Group's software.  * For conditions of distribution and use, see the accompanying README file.  *  * This include file contains common declarations for the forward and  * inverse DCT modules.  These declarations are private to the DCT managers  * (jcdctmgr.c, jddctmgr.c) and the individual DCT algorithms.  * The individual DCT algorithms are kept in separate files to ease   * machine-dependent tuning (e.g., assembly coding).  */
end_comment
begin_comment
comment|/*  * A forward DCT routine is given a pointer to an input sample array and  * a pointer to a work area of type DCTELEM[]; the DCT is to be performed  * in-place in that buffer.  Type DCTELEM is int for 8-bit samples, INT32  * for 12-bit samples.  (NOTE: Floating-point DCT implementations use an  * array of type FAST_FLOAT, instead.)  * The input data is to be fetched from the sample array starting at a  * specified column.  (Any row offset needed will be applied to the array  * pointer before it is passed to the FDCT code.)  * Note that the number of samples fetched by the FDCT routine is  * DCT_h_scaled_size * DCT_v_scaled_size.  * The DCT outputs are returned scaled up by a factor of 8; they therefore  * have a range of +-8K for 8-bit data, +-128K for 12-bit data.  This  * convention improves accuracy in integer implementations and saves some  * work in floating-point ones.  * Quantization of the output coefficients is done by jcdctmgr.c.  */
end_comment
begin_if
if|#
directive|if
name|BITS_IN_JSAMPLE
operator|==
literal|8
end_if
begin_typedef
DECL|typedef|DCTELEM
typedef|typedef
name|int
name|DCTELEM
typedef|;
end_typedef
begin_comment
DECL|typedef|DCTELEM
comment|/* 16 or 32 bits is fine */
end_comment
begin_else
else|#
directive|else
end_else
begin_typedef
DECL|typedef|DCTELEM
typedef|typedef
name|INT32
name|DCTELEM
typedef|;
end_typedef
begin_comment
DECL|typedef|DCTELEM
comment|/* must have 32 bits */
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_typedef
DECL|typedef|JMETHOD
typedef|typedef
name|JMETHOD
argument_list|(
name|void
argument_list|,
name|forward_DCT_method_ptr
argument_list|,
operator|(
name|DCTELEM
operator|*
name|data
operator|,
name|JSAMPARRAY
name|sample_data
operator|,
name|JDIMENSION
name|start_col
operator|)
argument_list|)
expr_stmt|;
end_typedef
begin_typedef
DECL|typedef|JMETHOD
typedef|typedef
name|JMETHOD
argument_list|(
name|void
argument_list|,
name|float_DCT_method_ptr
argument_list|,
operator|(
name|FAST_FLOAT
operator|*
name|data
operator|,
name|JSAMPARRAY
name|sample_data
operator|,
name|JDIMENSION
name|start_col
operator|)
argument_list|)
expr_stmt|;
end_typedef
begin_comment
comment|/*  * An inverse DCT routine is given a pointer to the input JBLOCK and a pointer  * to an output sample array.  The routine must dequantize the input data as  * well as perform the IDCT; for dequantization, it uses the multiplier table  * pointed to by compptr->dct_table.  The output data is to be placed into the  * sample array starting at a specified column.  (Any row offset needed will  * be applied to the array pointer before it is passed to the IDCT code.)  * Note that the number of samples emitted by the IDCT routine is  * DCT_h_scaled_size * DCT_v_scaled_size.  */
end_comment
begin_comment
comment|/* typedef inverse_DCT_method_ptr is declared in jpegint.h */
end_comment
begin_comment
comment|/*  * Each IDCT routine has its own ideas about the best dct_table element type.  */
end_comment
begin_typedef
DECL|typedef|ISLOW_MULT_TYPE
typedef|typedef
name|MULTIPLIER
name|ISLOW_MULT_TYPE
typedef|;
end_typedef
begin_comment
DECL|typedef|ISLOW_MULT_TYPE
comment|/* short or int, whichever is faster */
end_comment
begin_if
if|#
directive|if
name|BITS_IN_JSAMPLE
operator|==
literal|8
end_if
begin_typedef
DECL|typedef|IFAST_MULT_TYPE
typedef|typedef
name|MULTIPLIER
name|IFAST_MULT_TYPE
typedef|;
end_typedef
begin_comment
DECL|typedef|IFAST_MULT_TYPE
comment|/* 16 bits is OK, use short if faster */
end_comment
begin_define
DECL|macro|IFAST_SCALE_BITS
define|#
directive|define
name|IFAST_SCALE_BITS
value|2
end_define
begin_comment
DECL|macro|IFAST_SCALE_BITS
comment|/* fractional bits in scale factors */
end_comment
begin_else
else|#
directive|else
end_else
begin_typedef
DECL|typedef|IFAST_MULT_TYPE
typedef|typedef
name|INT32
name|IFAST_MULT_TYPE
typedef|;
end_typedef
begin_comment
DECL|typedef|IFAST_MULT_TYPE
comment|/* need 32 bits for scaled quantizers */
end_comment
begin_define
DECL|macro|IFAST_SCALE_BITS
define|#
directive|define
name|IFAST_SCALE_BITS
value|13
end_define
begin_comment
DECL|macro|IFAST_SCALE_BITS
comment|/* fractional bits in scale factors */
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_typedef
DECL|typedef|FLOAT_MULT_TYPE
typedef|typedef
name|FAST_FLOAT
name|FLOAT_MULT_TYPE
typedef|;
end_typedef
begin_comment
DECL|typedef|FLOAT_MULT_TYPE
comment|/* preferred floating type */
end_comment
begin_comment
comment|/*  * Each IDCT routine is responsible for range-limiting its results and  * converting them to unsigned form (0..MAXJSAMPLE).  The raw outputs could  * be quite far out of range if the input data is corrupt, so a bulletproof  * range-limiting step is required.  We use a mask-and-table-lookup method  * to do the combined operations quickly.  See the comments with  * prepare_range_limit_table (in jdmaster.c) for more info.  */
end_comment
begin_define
DECL|macro|IDCT_range_limit
define|#
directive|define
name|IDCT_range_limit
parameter_list|(
name|cinfo
parameter_list|)
value|((cinfo)->sample_range_limit + CENTERJSAMPLE)
end_define
begin_define
DECL|macro|RANGE_MASK
define|#
directive|define
name|RANGE_MASK
value|(MAXJSAMPLE * 4 + 3)
end_define
begin_comment
DECL|macro|RANGE_MASK
comment|/* 2 bits wider than legal samples */
end_comment
begin_comment
comment|/* Short forms of external names for systems with brain-damaged linkers. */
end_comment
begin_ifdef
ifdef|#
directive|ifdef
name|NEED_SHORT_EXTERNAL_NAMES
end_ifdef
begin_define
DECL|macro|jpeg_fdct_islow
define|#
directive|define
name|jpeg_fdct_islow
value|jFDislow
end_define
begin_define
DECL|macro|jpeg_fdct_ifast
define|#
directive|define
name|jpeg_fdct_ifast
value|jFDifast
end_define
begin_define
DECL|macro|jpeg_fdct_float
define|#
directive|define
name|jpeg_fdct_float
value|jFDfloat
end_define
begin_define
DECL|macro|jpeg_fdct_7x7
define|#
directive|define
name|jpeg_fdct_7x7
value|jFD7x7
end_define
begin_define
DECL|macro|jpeg_fdct_6x6
define|#
directive|define
name|jpeg_fdct_6x6
value|jFD6x6
end_define
begin_define
DECL|macro|jpeg_fdct_5x5
define|#
directive|define
name|jpeg_fdct_5x5
value|jFD5x5
end_define
begin_define
DECL|macro|jpeg_fdct_4x4
define|#
directive|define
name|jpeg_fdct_4x4
value|jFD4x4
end_define
begin_define
DECL|macro|jpeg_fdct_3x3
define|#
directive|define
name|jpeg_fdct_3x3
value|jFD3x3
end_define
begin_define
DECL|macro|jpeg_fdct_2x2
define|#
directive|define
name|jpeg_fdct_2x2
value|jFD2x2
end_define
begin_define
DECL|macro|jpeg_fdct_1x1
define|#
directive|define
name|jpeg_fdct_1x1
value|jFD1x1
end_define
begin_define
DECL|macro|jpeg_fdct_9x9
define|#
directive|define
name|jpeg_fdct_9x9
value|jFD9x9
end_define
begin_define
DECL|macro|jpeg_fdct_10x10
define|#
directive|define
name|jpeg_fdct_10x10
value|jFD10x10
end_define
begin_define
DECL|macro|jpeg_fdct_11x11
define|#
directive|define
name|jpeg_fdct_11x11
value|jFD11x11
end_define
begin_define
DECL|macro|jpeg_fdct_12x12
define|#
directive|define
name|jpeg_fdct_12x12
value|jFD12x12
end_define
begin_define
DECL|macro|jpeg_fdct_13x13
define|#
directive|define
name|jpeg_fdct_13x13
value|jFD13x13
end_define
begin_define
DECL|macro|jpeg_fdct_14x14
define|#
directive|define
name|jpeg_fdct_14x14
value|jFD14x14
end_define
begin_define
DECL|macro|jpeg_fdct_15x15
define|#
directive|define
name|jpeg_fdct_15x15
value|jFD15x15
end_define
begin_define
DECL|macro|jpeg_fdct_16x16
define|#
directive|define
name|jpeg_fdct_16x16
value|jFD16x16
end_define
begin_define
DECL|macro|jpeg_fdct_16x8
define|#
directive|define
name|jpeg_fdct_16x8
value|jFD16x8
end_define
begin_define
DECL|macro|jpeg_fdct_14x7
define|#
directive|define
name|jpeg_fdct_14x7
value|jFD14x7
end_define
begin_define
DECL|macro|jpeg_fdct_12x6
define|#
directive|define
name|jpeg_fdct_12x6
value|jFD12x6
end_define
begin_define
DECL|macro|jpeg_fdct_10x5
define|#
directive|define
name|jpeg_fdct_10x5
value|jFD10x5
end_define
begin_define
DECL|macro|jpeg_fdct_8x4
define|#
directive|define
name|jpeg_fdct_8x4
value|jFD8x4
end_define
begin_define
DECL|macro|jpeg_fdct_6x3
define|#
directive|define
name|jpeg_fdct_6x3
value|jFD6x3
end_define
begin_define
DECL|macro|jpeg_fdct_4x2
define|#
directive|define
name|jpeg_fdct_4x2
value|jFD4x2
end_define
begin_define
DECL|macro|jpeg_fdct_2x1
define|#
directive|define
name|jpeg_fdct_2x1
value|jFD2x1
end_define
begin_define
DECL|macro|jpeg_fdct_8x16
define|#
directive|define
name|jpeg_fdct_8x16
value|jFD8x16
end_define
begin_define
DECL|macro|jpeg_fdct_7x14
define|#
directive|define
name|jpeg_fdct_7x14
value|jFD7x14
end_define
begin_define
DECL|macro|jpeg_fdct_6x12
define|#
directive|define
name|jpeg_fdct_6x12
value|jFD6x12
end_define
begin_define
DECL|macro|jpeg_fdct_5x10
define|#
directive|define
name|jpeg_fdct_5x10
value|jFD5x10
end_define
begin_define
DECL|macro|jpeg_fdct_4x8
define|#
directive|define
name|jpeg_fdct_4x8
value|jFD4x8
end_define
begin_define
DECL|macro|jpeg_fdct_3x6
define|#
directive|define
name|jpeg_fdct_3x6
value|jFD3x6
end_define
begin_define
DECL|macro|jpeg_fdct_2x4
define|#
directive|define
name|jpeg_fdct_2x4
value|jFD2x4
end_define
begin_define
DECL|macro|jpeg_fdct_1x2
define|#
directive|define
name|jpeg_fdct_1x2
value|jFD1x2
end_define
begin_define
DECL|macro|jpeg_idct_islow
define|#
directive|define
name|jpeg_idct_islow
value|jRDislow
end_define
begin_define
DECL|macro|jpeg_idct_ifast
define|#
directive|define
name|jpeg_idct_ifast
value|jRDifast
end_define
begin_define
DECL|macro|jpeg_idct_float
define|#
directive|define
name|jpeg_idct_float
value|jRDfloat
end_define
begin_define
DECL|macro|jpeg_idct_7x7
define|#
directive|define
name|jpeg_idct_7x7
value|jRD7x7
end_define
begin_define
DECL|macro|jpeg_idct_6x6
define|#
directive|define
name|jpeg_idct_6x6
value|jRD6x6
end_define
begin_define
DECL|macro|jpeg_idct_5x5
define|#
directive|define
name|jpeg_idct_5x5
value|jRD5x5
end_define
begin_define
DECL|macro|jpeg_idct_4x4
define|#
directive|define
name|jpeg_idct_4x4
value|jRD4x4
end_define
begin_define
DECL|macro|jpeg_idct_3x3
define|#
directive|define
name|jpeg_idct_3x3
value|jRD3x3
end_define
begin_define
DECL|macro|jpeg_idct_2x2
define|#
directive|define
name|jpeg_idct_2x2
value|jRD2x2
end_define
begin_define
DECL|macro|jpeg_idct_1x1
define|#
directive|define
name|jpeg_idct_1x1
value|jRD1x1
end_define
begin_define
DECL|macro|jpeg_idct_9x9
define|#
directive|define
name|jpeg_idct_9x9
value|jRD9x9
end_define
begin_define
DECL|macro|jpeg_idct_10x10
define|#
directive|define
name|jpeg_idct_10x10
value|jRD10x10
end_define
begin_define
DECL|macro|jpeg_idct_11x11
define|#
directive|define
name|jpeg_idct_11x11
value|jRD11x11
end_define
begin_define
DECL|macro|jpeg_idct_12x12
define|#
directive|define
name|jpeg_idct_12x12
value|jRD12x12
end_define
begin_define
DECL|macro|jpeg_idct_13x13
define|#
directive|define
name|jpeg_idct_13x13
value|jRD13x13
end_define
begin_define
DECL|macro|jpeg_idct_14x14
define|#
directive|define
name|jpeg_idct_14x14
value|jRD14x14
end_define
begin_define
DECL|macro|jpeg_idct_15x15
define|#
directive|define
name|jpeg_idct_15x15
value|jRD15x15
end_define
begin_define
DECL|macro|jpeg_idct_16x16
define|#
directive|define
name|jpeg_idct_16x16
value|jRD16x16
end_define
begin_define
DECL|macro|jpeg_idct_16x8
define|#
directive|define
name|jpeg_idct_16x8
value|jRD16x8
end_define
begin_define
DECL|macro|jpeg_idct_14x7
define|#
directive|define
name|jpeg_idct_14x7
value|jRD14x7
end_define
begin_define
DECL|macro|jpeg_idct_12x6
define|#
directive|define
name|jpeg_idct_12x6
value|jRD12x6
end_define
begin_define
DECL|macro|jpeg_idct_10x5
define|#
directive|define
name|jpeg_idct_10x5
value|jRD10x5
end_define
begin_define
DECL|macro|jpeg_idct_8x4
define|#
directive|define
name|jpeg_idct_8x4
value|jRD8x4
end_define
begin_define
DECL|macro|jpeg_idct_6x3
define|#
directive|define
name|jpeg_idct_6x3
value|jRD6x3
end_define
begin_define
DECL|macro|jpeg_idct_4x2
define|#
directive|define
name|jpeg_idct_4x2
value|jRD4x2
end_define
begin_define
DECL|macro|jpeg_idct_2x1
define|#
directive|define
name|jpeg_idct_2x1
value|jRD2x1
end_define
begin_define
DECL|macro|jpeg_idct_8x16
define|#
directive|define
name|jpeg_idct_8x16
value|jRD8x16
end_define
begin_define
DECL|macro|jpeg_idct_7x14
define|#
directive|define
name|jpeg_idct_7x14
value|jRD7x14
end_define
begin_define
DECL|macro|jpeg_idct_6x12
define|#
directive|define
name|jpeg_idct_6x12
value|jRD6x12
end_define
begin_define
DECL|macro|jpeg_idct_5x10
define|#
directive|define
name|jpeg_idct_5x10
value|jRD5x10
end_define
begin_define
DECL|macro|jpeg_idct_4x8
define|#
directive|define
name|jpeg_idct_4x8
value|jRD4x8
end_define
begin_define
DECL|macro|jpeg_idct_3x6
define|#
directive|define
name|jpeg_idct_3x6
value|jRD3x8
end_define
begin_define
DECL|macro|jpeg_idct_2x4
define|#
directive|define
name|jpeg_idct_2x4
value|jRD2x4
end_define
begin_define
DECL|macro|jpeg_idct_1x2
define|#
directive|define
name|jpeg_idct_1x2
value|jRD1x2
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/* NEED_SHORT_EXTERNAL_NAMES */
end_comment
begin_comment
comment|/* Extern declarations for the forward and inverse DCT routines. */
end_comment
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_fdct_islow
name|JPP
argument_list|(
operator|(
name|DCTELEM
operator|*
name|data
operator|,
name|JSAMPARRAY
name|sample_data
operator|,
name|JDIMENSION
name|start_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_fdct_ifast
name|JPP
argument_list|(
operator|(
name|DCTELEM
operator|*
name|data
operator|,
name|JSAMPARRAY
name|sample_data
operator|,
name|JDIMENSION
name|start_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_fdct_float
name|JPP
argument_list|(
operator|(
name|FAST_FLOAT
operator|*
name|data
operator|,
name|JSAMPARRAY
name|sample_data
operator|,
name|JDIMENSION
name|start_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_fdct_7x7
name|JPP
argument_list|(
operator|(
name|DCTELEM
operator|*
name|data
operator|,
name|JSAMPARRAY
name|sample_data
operator|,
name|JDIMENSION
name|start_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_fdct_6x6
name|JPP
argument_list|(
operator|(
name|DCTELEM
operator|*
name|data
operator|,
name|JSAMPARRAY
name|sample_data
operator|,
name|JDIMENSION
name|start_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_fdct_5x5
name|JPP
argument_list|(
operator|(
name|DCTELEM
operator|*
name|data
operator|,
name|JSAMPARRAY
name|sample_data
operator|,
name|JDIMENSION
name|start_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_fdct_4x4
name|JPP
argument_list|(
operator|(
name|DCTELEM
operator|*
name|data
operator|,
name|JSAMPARRAY
name|sample_data
operator|,
name|JDIMENSION
name|start_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_fdct_3x3
name|JPP
argument_list|(
operator|(
name|DCTELEM
operator|*
name|data
operator|,
name|JSAMPARRAY
name|sample_data
operator|,
name|JDIMENSION
name|start_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_fdct_2x2
name|JPP
argument_list|(
operator|(
name|DCTELEM
operator|*
name|data
operator|,
name|JSAMPARRAY
name|sample_data
operator|,
name|JDIMENSION
name|start_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_fdct_1x1
name|JPP
argument_list|(
operator|(
name|DCTELEM
operator|*
name|data
operator|,
name|JSAMPARRAY
name|sample_data
operator|,
name|JDIMENSION
name|start_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_fdct_9x9
name|JPP
argument_list|(
operator|(
name|DCTELEM
operator|*
name|data
operator|,
name|JSAMPARRAY
name|sample_data
operator|,
name|JDIMENSION
name|start_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_fdct_10x10
name|JPP
argument_list|(
operator|(
name|DCTELEM
operator|*
name|data
operator|,
name|JSAMPARRAY
name|sample_data
operator|,
name|JDIMENSION
name|start_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_fdct_11x11
name|JPP
argument_list|(
operator|(
name|DCTELEM
operator|*
name|data
operator|,
name|JSAMPARRAY
name|sample_data
operator|,
name|JDIMENSION
name|start_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_fdct_12x12
name|JPP
argument_list|(
operator|(
name|DCTELEM
operator|*
name|data
operator|,
name|JSAMPARRAY
name|sample_data
operator|,
name|JDIMENSION
name|start_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_fdct_13x13
name|JPP
argument_list|(
operator|(
name|DCTELEM
operator|*
name|data
operator|,
name|JSAMPARRAY
name|sample_data
operator|,
name|JDIMENSION
name|start_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_fdct_14x14
name|JPP
argument_list|(
operator|(
name|DCTELEM
operator|*
name|data
operator|,
name|JSAMPARRAY
name|sample_data
operator|,
name|JDIMENSION
name|start_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_fdct_15x15
name|JPP
argument_list|(
operator|(
name|DCTELEM
operator|*
name|data
operator|,
name|JSAMPARRAY
name|sample_data
operator|,
name|JDIMENSION
name|start_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_fdct_16x16
name|JPP
argument_list|(
operator|(
name|DCTELEM
operator|*
name|data
operator|,
name|JSAMPARRAY
name|sample_data
operator|,
name|JDIMENSION
name|start_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_fdct_16x8
name|JPP
argument_list|(
operator|(
name|DCTELEM
operator|*
name|data
operator|,
name|JSAMPARRAY
name|sample_data
operator|,
name|JDIMENSION
name|start_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_fdct_14x7
name|JPP
argument_list|(
operator|(
name|DCTELEM
operator|*
name|data
operator|,
name|JSAMPARRAY
name|sample_data
operator|,
name|JDIMENSION
name|start_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_fdct_12x6
name|JPP
argument_list|(
operator|(
name|DCTELEM
operator|*
name|data
operator|,
name|JSAMPARRAY
name|sample_data
operator|,
name|JDIMENSION
name|start_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_fdct_10x5
name|JPP
argument_list|(
operator|(
name|DCTELEM
operator|*
name|data
operator|,
name|JSAMPARRAY
name|sample_data
operator|,
name|JDIMENSION
name|start_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_fdct_8x4
name|JPP
argument_list|(
operator|(
name|DCTELEM
operator|*
name|data
operator|,
name|JSAMPARRAY
name|sample_data
operator|,
name|JDIMENSION
name|start_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_fdct_6x3
name|JPP
argument_list|(
operator|(
name|DCTELEM
operator|*
name|data
operator|,
name|JSAMPARRAY
name|sample_data
operator|,
name|JDIMENSION
name|start_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_fdct_4x2
name|JPP
argument_list|(
operator|(
name|DCTELEM
operator|*
name|data
operator|,
name|JSAMPARRAY
name|sample_data
operator|,
name|JDIMENSION
name|start_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_fdct_2x1
name|JPP
argument_list|(
operator|(
name|DCTELEM
operator|*
name|data
operator|,
name|JSAMPARRAY
name|sample_data
operator|,
name|JDIMENSION
name|start_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_fdct_8x16
name|JPP
argument_list|(
operator|(
name|DCTELEM
operator|*
name|data
operator|,
name|JSAMPARRAY
name|sample_data
operator|,
name|JDIMENSION
name|start_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_fdct_7x14
name|JPP
argument_list|(
operator|(
name|DCTELEM
operator|*
name|data
operator|,
name|JSAMPARRAY
name|sample_data
operator|,
name|JDIMENSION
name|start_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_fdct_6x12
name|JPP
argument_list|(
operator|(
name|DCTELEM
operator|*
name|data
operator|,
name|JSAMPARRAY
name|sample_data
operator|,
name|JDIMENSION
name|start_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_fdct_5x10
name|JPP
argument_list|(
operator|(
name|DCTELEM
operator|*
name|data
operator|,
name|JSAMPARRAY
name|sample_data
operator|,
name|JDIMENSION
name|start_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_fdct_4x8
name|JPP
argument_list|(
operator|(
name|DCTELEM
operator|*
name|data
operator|,
name|JSAMPARRAY
name|sample_data
operator|,
name|JDIMENSION
name|start_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_fdct_3x6
name|JPP
argument_list|(
operator|(
name|DCTELEM
operator|*
name|data
operator|,
name|JSAMPARRAY
name|sample_data
operator|,
name|JDIMENSION
name|start_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_fdct_2x4
name|JPP
argument_list|(
operator|(
name|DCTELEM
operator|*
name|data
operator|,
name|JSAMPARRAY
name|sample_data
operator|,
name|JDIMENSION
name|start_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_fdct_1x2
name|JPP
argument_list|(
operator|(
name|DCTELEM
operator|*
name|data
operator|,
name|JSAMPARRAY
name|sample_data
operator|,
name|JDIMENSION
name|start_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_idct_islow
name|JPP
argument_list|(
operator|(
name|j_decompress_ptr
name|cinfo
operator|,
name|jpeg_component_info
operator|*
name|compptr
operator|,
name|JCOEFPTR
name|coef_block
operator|,
name|JSAMPARRAY
name|output_buf
operator|,
name|JDIMENSION
name|output_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_idct_ifast
name|JPP
argument_list|(
operator|(
name|j_decompress_ptr
name|cinfo
operator|,
name|jpeg_component_info
operator|*
name|compptr
operator|,
name|JCOEFPTR
name|coef_block
operator|,
name|JSAMPARRAY
name|output_buf
operator|,
name|JDIMENSION
name|output_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_idct_float
name|JPP
argument_list|(
operator|(
name|j_decompress_ptr
name|cinfo
operator|,
name|jpeg_component_info
operator|*
name|compptr
operator|,
name|JCOEFPTR
name|coef_block
operator|,
name|JSAMPARRAY
name|output_buf
operator|,
name|JDIMENSION
name|output_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_idct_7x7
name|JPP
argument_list|(
operator|(
name|j_decompress_ptr
name|cinfo
operator|,
name|jpeg_component_info
operator|*
name|compptr
operator|,
name|JCOEFPTR
name|coef_block
operator|,
name|JSAMPARRAY
name|output_buf
operator|,
name|JDIMENSION
name|output_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_idct_6x6
name|JPP
argument_list|(
operator|(
name|j_decompress_ptr
name|cinfo
operator|,
name|jpeg_component_info
operator|*
name|compptr
operator|,
name|JCOEFPTR
name|coef_block
operator|,
name|JSAMPARRAY
name|output_buf
operator|,
name|JDIMENSION
name|output_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_idct_5x5
name|JPP
argument_list|(
operator|(
name|j_decompress_ptr
name|cinfo
operator|,
name|jpeg_component_info
operator|*
name|compptr
operator|,
name|JCOEFPTR
name|coef_block
operator|,
name|JSAMPARRAY
name|output_buf
operator|,
name|JDIMENSION
name|output_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_idct_4x4
name|JPP
argument_list|(
operator|(
name|j_decompress_ptr
name|cinfo
operator|,
name|jpeg_component_info
operator|*
name|compptr
operator|,
name|JCOEFPTR
name|coef_block
operator|,
name|JSAMPARRAY
name|output_buf
operator|,
name|JDIMENSION
name|output_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_idct_3x3
name|JPP
argument_list|(
operator|(
name|j_decompress_ptr
name|cinfo
operator|,
name|jpeg_component_info
operator|*
name|compptr
operator|,
name|JCOEFPTR
name|coef_block
operator|,
name|JSAMPARRAY
name|output_buf
operator|,
name|JDIMENSION
name|output_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_idct_2x2
name|JPP
argument_list|(
operator|(
name|j_decompress_ptr
name|cinfo
operator|,
name|jpeg_component_info
operator|*
name|compptr
operator|,
name|JCOEFPTR
name|coef_block
operator|,
name|JSAMPARRAY
name|output_buf
operator|,
name|JDIMENSION
name|output_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_idct_1x1
name|JPP
argument_list|(
operator|(
name|j_decompress_ptr
name|cinfo
operator|,
name|jpeg_component_info
operator|*
name|compptr
operator|,
name|JCOEFPTR
name|coef_block
operator|,
name|JSAMPARRAY
name|output_buf
operator|,
name|JDIMENSION
name|output_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_idct_9x9
name|JPP
argument_list|(
operator|(
name|j_decompress_ptr
name|cinfo
operator|,
name|jpeg_component_info
operator|*
name|compptr
operator|,
name|JCOEFPTR
name|coef_block
operator|,
name|JSAMPARRAY
name|output_buf
operator|,
name|JDIMENSION
name|output_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_idct_10x10
name|JPP
argument_list|(
operator|(
name|j_decompress_ptr
name|cinfo
operator|,
name|jpeg_component_info
operator|*
name|compptr
operator|,
name|JCOEFPTR
name|coef_block
operator|,
name|JSAMPARRAY
name|output_buf
operator|,
name|JDIMENSION
name|output_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_idct_11x11
name|JPP
argument_list|(
operator|(
name|j_decompress_ptr
name|cinfo
operator|,
name|jpeg_component_info
operator|*
name|compptr
operator|,
name|JCOEFPTR
name|coef_block
operator|,
name|JSAMPARRAY
name|output_buf
operator|,
name|JDIMENSION
name|output_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_idct_12x12
name|JPP
argument_list|(
operator|(
name|j_decompress_ptr
name|cinfo
operator|,
name|jpeg_component_info
operator|*
name|compptr
operator|,
name|JCOEFPTR
name|coef_block
operator|,
name|JSAMPARRAY
name|output_buf
operator|,
name|JDIMENSION
name|output_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_idct_13x13
name|JPP
argument_list|(
operator|(
name|j_decompress_ptr
name|cinfo
operator|,
name|jpeg_component_info
operator|*
name|compptr
operator|,
name|JCOEFPTR
name|coef_block
operator|,
name|JSAMPARRAY
name|output_buf
operator|,
name|JDIMENSION
name|output_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_idct_14x14
name|JPP
argument_list|(
operator|(
name|j_decompress_ptr
name|cinfo
operator|,
name|jpeg_component_info
operator|*
name|compptr
operator|,
name|JCOEFPTR
name|coef_block
operator|,
name|JSAMPARRAY
name|output_buf
operator|,
name|JDIMENSION
name|output_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_idct_15x15
name|JPP
argument_list|(
operator|(
name|j_decompress_ptr
name|cinfo
operator|,
name|jpeg_component_info
operator|*
name|compptr
operator|,
name|JCOEFPTR
name|coef_block
operator|,
name|JSAMPARRAY
name|output_buf
operator|,
name|JDIMENSION
name|output_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_idct_16x16
name|JPP
argument_list|(
operator|(
name|j_decompress_ptr
name|cinfo
operator|,
name|jpeg_component_info
operator|*
name|compptr
operator|,
name|JCOEFPTR
name|coef_block
operator|,
name|JSAMPARRAY
name|output_buf
operator|,
name|JDIMENSION
name|output_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_idct_16x8
name|JPP
argument_list|(
operator|(
name|j_decompress_ptr
name|cinfo
operator|,
name|jpeg_component_info
operator|*
name|compptr
operator|,
name|JCOEFPTR
name|coef_block
operator|,
name|JSAMPARRAY
name|output_buf
operator|,
name|JDIMENSION
name|output_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_idct_14x7
name|JPP
argument_list|(
operator|(
name|j_decompress_ptr
name|cinfo
operator|,
name|jpeg_component_info
operator|*
name|compptr
operator|,
name|JCOEFPTR
name|coef_block
operator|,
name|JSAMPARRAY
name|output_buf
operator|,
name|JDIMENSION
name|output_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_idct_12x6
name|JPP
argument_list|(
operator|(
name|j_decompress_ptr
name|cinfo
operator|,
name|jpeg_component_info
operator|*
name|compptr
operator|,
name|JCOEFPTR
name|coef_block
operator|,
name|JSAMPARRAY
name|output_buf
operator|,
name|JDIMENSION
name|output_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_idct_10x5
name|JPP
argument_list|(
operator|(
name|j_decompress_ptr
name|cinfo
operator|,
name|jpeg_component_info
operator|*
name|compptr
operator|,
name|JCOEFPTR
name|coef_block
operator|,
name|JSAMPARRAY
name|output_buf
operator|,
name|JDIMENSION
name|output_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_idct_8x4
name|JPP
argument_list|(
operator|(
name|j_decompress_ptr
name|cinfo
operator|,
name|jpeg_component_info
operator|*
name|compptr
operator|,
name|JCOEFPTR
name|coef_block
operator|,
name|JSAMPARRAY
name|output_buf
operator|,
name|JDIMENSION
name|output_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_idct_6x3
name|JPP
argument_list|(
operator|(
name|j_decompress_ptr
name|cinfo
operator|,
name|jpeg_component_info
operator|*
name|compptr
operator|,
name|JCOEFPTR
name|coef_block
operator|,
name|JSAMPARRAY
name|output_buf
operator|,
name|JDIMENSION
name|output_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_idct_4x2
name|JPP
argument_list|(
operator|(
name|j_decompress_ptr
name|cinfo
operator|,
name|jpeg_component_info
operator|*
name|compptr
operator|,
name|JCOEFPTR
name|coef_block
operator|,
name|JSAMPARRAY
name|output_buf
operator|,
name|JDIMENSION
name|output_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_idct_2x1
name|JPP
argument_list|(
operator|(
name|j_decompress_ptr
name|cinfo
operator|,
name|jpeg_component_info
operator|*
name|compptr
operator|,
name|JCOEFPTR
name|coef_block
operator|,
name|JSAMPARRAY
name|output_buf
operator|,
name|JDIMENSION
name|output_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_idct_8x16
name|JPP
argument_list|(
operator|(
name|j_decompress_ptr
name|cinfo
operator|,
name|jpeg_component_info
operator|*
name|compptr
operator|,
name|JCOEFPTR
name|coef_block
operator|,
name|JSAMPARRAY
name|output_buf
operator|,
name|JDIMENSION
name|output_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_idct_7x14
name|JPP
argument_list|(
operator|(
name|j_decompress_ptr
name|cinfo
operator|,
name|jpeg_component_info
operator|*
name|compptr
operator|,
name|JCOEFPTR
name|coef_block
operator|,
name|JSAMPARRAY
name|output_buf
operator|,
name|JDIMENSION
name|output_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_idct_6x12
name|JPP
argument_list|(
operator|(
name|j_decompress_ptr
name|cinfo
operator|,
name|jpeg_component_info
operator|*
name|compptr
operator|,
name|JCOEFPTR
name|coef_block
operator|,
name|JSAMPARRAY
name|output_buf
operator|,
name|JDIMENSION
name|output_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_idct_5x10
name|JPP
argument_list|(
operator|(
name|j_decompress_ptr
name|cinfo
operator|,
name|jpeg_component_info
operator|*
name|compptr
operator|,
name|JCOEFPTR
name|coef_block
operator|,
name|JSAMPARRAY
name|output_buf
operator|,
name|JDIMENSION
name|output_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_idct_4x8
name|JPP
argument_list|(
operator|(
name|j_decompress_ptr
name|cinfo
operator|,
name|jpeg_component_info
operator|*
name|compptr
operator|,
name|JCOEFPTR
name|coef_block
operator|,
name|JSAMPARRAY
name|output_buf
operator|,
name|JDIMENSION
name|output_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_idct_3x6
name|JPP
argument_list|(
operator|(
name|j_decompress_ptr
name|cinfo
operator|,
name|jpeg_component_info
operator|*
name|compptr
operator|,
name|JCOEFPTR
name|coef_block
operator|,
name|JSAMPARRAY
name|output_buf
operator|,
name|JDIMENSION
name|output_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_idct_2x4
name|JPP
argument_list|(
operator|(
name|j_decompress_ptr
name|cinfo
operator|,
name|jpeg_component_info
operator|*
name|compptr
operator|,
name|JCOEFPTR
name|coef_block
operator|,
name|JSAMPARRAY
name|output_buf
operator|,
name|JDIMENSION
name|output_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jpeg_idct_1x2
name|JPP
argument_list|(
operator|(
name|j_decompress_ptr
name|cinfo
operator|,
name|jpeg_component_info
operator|*
name|compptr
operator|,
name|JCOEFPTR
name|coef_block
operator|,
name|JSAMPARRAY
name|output_buf
operator|,
name|JDIMENSION
name|output_col
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_comment
comment|/*  * Macros for handling fixed-point arithmetic; these are used by many  * but not all of the DCT/IDCT modules.  *  * All values are expected to be of type INT32.  * Fractional constants are scaled left by CONST_BITS bits.  * CONST_BITS is defined within each module using these macros,  * and may differ from one module to the next.  */
end_comment
begin_define
DECL|macro|ONE
define|#
directive|define
name|ONE
value|((INT32) 1)
end_define
begin_define
DECL|macro|CONST_SCALE
define|#
directive|define
name|CONST_SCALE
value|(ONE<< CONST_BITS)
end_define
begin_comment
comment|/* Convert a positive real constant to an integer scaled by CONST_SCALE.  * Caution: some C compilers fail to reduce "FIX(constant)" at compile time,  * thus causing a lot of useless floating-point operations at run time.  */
end_comment
begin_define
DECL|macro|FIX
define|#
directive|define
name|FIX
parameter_list|(
name|x
parameter_list|)
value|((INT32) ((x) * CONST_SCALE + 0.5))
end_define
begin_comment
comment|/* Descale and correctly round an INT32 value that's scaled by N bits.  * We assume RIGHT_SHIFT rounds towards minus infinity, so adding  * the fudge factor is correct for either sign of X.  */
end_comment
begin_define
DECL|macro|DESCALE
define|#
directive|define
name|DESCALE
parameter_list|(
name|x
parameter_list|,
name|n
parameter_list|)
value|RIGHT_SHIFT((x) + (ONE<< ((n)-1)), n)
end_define
begin_comment
comment|/* Multiply an INT32 variable by an INT32 constant to yield an INT32 result.  * This macro is used only when the two inputs will actually be no more than  * 16 bits wide, so that a 16x16->32 bit multiply can be used instead of a  * full 32x32 multiply.  This provides a useful speedup on many machines.  * Unfortunately there is no way to specify a 16x16->32 multiply portably  * in C, but some C compilers will do the right thing if you provide the  * correct combination of casts.  */
end_comment
begin_ifdef
ifdef|#
directive|ifdef
name|SHORTxSHORT_32
end_ifdef
begin_comment
comment|/* may work if 'int' is 32 bits */
end_comment
begin_define
DECL|macro|MULTIPLY16C16
define|#
directive|define
name|MULTIPLY16C16
parameter_list|(
name|var
parameter_list|,
specifier|const
parameter_list|)
value|(((INT16) (var)) * ((INT16) (const)))
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_ifdef
ifdef|#
directive|ifdef
name|SHORTxLCONST_32
end_ifdef
begin_comment
comment|/* known to work with Microsoft C 6.0 */
end_comment
begin_define
DECL|macro|MULTIPLY16C16
define|#
directive|define
name|MULTIPLY16C16
parameter_list|(
name|var
parameter_list|,
specifier|const
parameter_list|)
value|(((INT16) (var)) * ((INT32) (const)))
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|MULTIPLY16C16
end_ifndef
begin_comment
comment|/* default definition */
end_comment
begin_define
DECL|macro|MULTIPLY16C16
define|#
directive|define
name|MULTIPLY16C16
parameter_list|(
name|var
parameter_list|,
specifier|const
parameter_list|)
value|((var) * (const))
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/* Same except both inputs are variables. */
end_comment
begin_ifdef
ifdef|#
directive|ifdef
name|SHORTxSHORT_32
end_ifdef
begin_comment
comment|/* may work if 'int' is 32 bits */
end_comment
begin_define
DECL|macro|MULTIPLY16V16
define|#
directive|define
name|MULTIPLY16V16
parameter_list|(
name|var1
parameter_list|,
name|var2
parameter_list|)
value|(((INT16) (var1)) * ((INT16) (var2)))
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|MULTIPLY16V16
end_ifndef
begin_comment
comment|/* default definition */
end_comment
begin_define
DECL|macro|MULTIPLY16V16
define|#
directive|define
name|MULTIPLY16V16
parameter_list|(
name|var1
parameter_list|,
name|var2
parameter_list|)
value|((var1) * (var2))
end_define
begin_endif
endif|#
directive|endif
end_endif
end_unit
