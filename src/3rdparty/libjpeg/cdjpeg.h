begin_unit
begin_comment
comment|/*  * cdjpeg.h  *  * Copyright (C) 1994-1997, Thomas G. Lane.  * This file is part of the Independent JPEG Group's software.  * For conditions of distribution and use, see the accompanying README file.  *  * This file contains common declarations for the sample applications  * cjpeg and djpeg.  It is NOT used by the core JPEG library.  */
end_comment
begin_define
DECL|macro|JPEG_CJPEG_DJPEG
define|#
directive|define
name|JPEG_CJPEG_DJPEG
end_define
begin_comment
DECL|macro|JPEG_CJPEG_DJPEG
comment|/* define proper options in jconfig.h */
end_comment
begin_define
DECL|macro|JPEG_INTERNAL_OPTIONS
define|#
directive|define
name|JPEG_INTERNAL_OPTIONS
end_define
begin_comment
DECL|macro|JPEG_INTERNAL_OPTIONS
comment|/* cjpeg.c,djpeg.c need to see xxx_SUPPORTED */
end_comment
begin_include
include|#
directive|include
file|"jinclude.h"
end_include
begin_include
include|#
directive|include
file|"jpeglib.h"
end_include
begin_include
include|#
directive|include
file|"jerror.h"
end_include
begin_comment
comment|/* get library error codes too */
end_comment
begin_include
include|#
directive|include
file|"cderror.h"
end_include
begin_comment
comment|/* get application-specific error codes */
end_comment
begin_comment
comment|/*  * Object interface for cjpeg's source file decoding modules  */
end_comment
begin_typedef
DECL|typedef|cjpeg_source_ptr
typedef|typedef
name|struct
name|cjpeg_source_struct
modifier|*
name|cjpeg_source_ptr
typedef|;
end_typedef
begin_struct
DECL|struct|cjpeg_source_struct
struct|struct
name|cjpeg_source_struct
block|{
name|JMETHOD
argument_list|(
name|void
argument_list|,
name|start_input
argument_list|,
operator|(
name|j_compress_ptr
name|cinfo
operator|,
name|cjpeg_source_ptr
name|sinfo
operator|)
argument_list|)
expr_stmt|;
name|JMETHOD
argument_list|(
name|JDIMENSION
argument_list|,
name|get_pixel_rows
argument_list|,
operator|(
name|j_compress_ptr
name|cinfo
operator|,
name|cjpeg_source_ptr
name|sinfo
operator|)
argument_list|)
expr_stmt|;
name|JMETHOD
argument_list|(
name|void
argument_list|,
name|finish_input
argument_list|,
operator|(
name|j_compress_ptr
name|cinfo
operator|,
name|cjpeg_source_ptr
name|sinfo
operator|)
argument_list|)
expr_stmt|;
DECL|member|input_file
name|FILE
modifier|*
name|input_file
decl_stmt|;
DECL|member|buffer
name|JSAMPARRAY
name|buffer
decl_stmt|;
DECL|member|buffer_height
name|JDIMENSION
name|buffer_height
decl_stmt|;
block|}
struct|;
end_struct
begin_comment
comment|/*  * Object interface for djpeg's output file encoding modules  */
end_comment
begin_typedef
DECL|typedef|djpeg_dest_ptr
typedef|typedef
name|struct
name|djpeg_dest_struct
modifier|*
name|djpeg_dest_ptr
typedef|;
end_typedef
begin_struct
DECL|struct|djpeg_dest_struct
struct|struct
name|djpeg_dest_struct
block|{
comment|/* start_output is called after jpeg_start_decompress finishes.    * The color map will be ready at this time, if one is needed.    */
name|JMETHOD
argument_list|(
name|void
argument_list|,
name|start_output
argument_list|,
operator|(
name|j_decompress_ptr
name|cinfo
operator|,
name|djpeg_dest_ptr
name|dinfo
operator|)
argument_list|)
expr_stmt|;
comment|/* Emit the specified number of pixel rows from the buffer. */
name|JMETHOD
argument_list|(
name|void
argument_list|,
name|put_pixel_rows
argument_list|,
operator|(
name|j_decompress_ptr
name|cinfo
operator|,
name|djpeg_dest_ptr
name|dinfo
operator|,
name|JDIMENSION
name|rows_supplied
operator|)
argument_list|)
expr_stmt|;
comment|/* Finish up at the end of the image. */
name|JMETHOD
argument_list|(
name|void
argument_list|,
name|finish_output
argument_list|,
operator|(
name|j_decompress_ptr
name|cinfo
operator|,
name|djpeg_dest_ptr
name|dinfo
operator|)
argument_list|)
expr_stmt|;
comment|/* Target file spec; filled in by djpeg.c after object is created. */
DECL|member|output_file
name|FILE
modifier|*
name|output_file
decl_stmt|;
comment|/* Output pixel-row buffer.  Created by module init or start_output.    * Width is cinfo->output_width * cinfo->output_components;    * height is buffer_height.    */
DECL|member|buffer
name|JSAMPARRAY
name|buffer
decl_stmt|;
DECL|member|buffer_height
name|JDIMENSION
name|buffer_height
decl_stmt|;
block|}
struct|;
end_struct
begin_comment
comment|/*  * cjpeg/djpeg may need to perform extra passes to convert to or from  * the source/destination file format.  The JPEG library does not know  * about these passes, but we'd like them to be counted by the progress  * monitor.  We use an expanded progress monitor object to hold the  * additional pass count.  */
end_comment
begin_struct
DECL|struct|cdjpeg_progress_mgr
struct|struct
name|cdjpeg_progress_mgr
block|{
DECL|member|pub
name|struct
name|jpeg_progress_mgr
name|pub
decl_stmt|;
comment|/* fields known to JPEG library */
DECL|member|completed_extra_passes
name|int
name|completed_extra_passes
decl_stmt|;
comment|/* extra passes completed */
DECL|member|total_extra_passes
name|int
name|total_extra_passes
decl_stmt|;
comment|/* total extra */
comment|/* last printed percentage stored here to avoid multiple printouts */
DECL|member|percent_done
name|int
name|percent_done
decl_stmt|;
block|}
struct|;
end_struct
begin_typedef
DECL|typedef|cd_progress_ptr
typedef|typedef
name|struct
name|cdjpeg_progress_mgr
modifier|*
name|cd_progress_ptr
typedef|;
end_typedef
begin_comment
comment|/* Short forms of external names for systems with brain-damaged linkers. */
end_comment
begin_ifdef
ifdef|#
directive|ifdef
name|NEED_SHORT_EXTERNAL_NAMES
end_ifdef
begin_define
DECL|macro|jinit_read_bmp
define|#
directive|define
name|jinit_read_bmp
value|jIRdBMP
end_define
begin_define
DECL|macro|jinit_write_bmp
define|#
directive|define
name|jinit_write_bmp
value|jIWrBMP
end_define
begin_define
DECL|macro|jinit_read_gif
define|#
directive|define
name|jinit_read_gif
value|jIRdGIF
end_define
begin_define
DECL|macro|jinit_write_gif
define|#
directive|define
name|jinit_write_gif
value|jIWrGIF
end_define
begin_define
DECL|macro|jinit_read_ppm
define|#
directive|define
name|jinit_read_ppm
value|jIRdPPM
end_define
begin_define
DECL|macro|jinit_write_ppm
define|#
directive|define
name|jinit_write_ppm
value|jIWrPPM
end_define
begin_define
DECL|macro|jinit_read_rle
define|#
directive|define
name|jinit_read_rle
value|jIRdRLE
end_define
begin_define
DECL|macro|jinit_write_rle
define|#
directive|define
name|jinit_write_rle
value|jIWrRLE
end_define
begin_define
DECL|macro|jinit_read_targa
define|#
directive|define
name|jinit_read_targa
value|jIRdTarga
end_define
begin_define
DECL|macro|jinit_write_targa
define|#
directive|define
name|jinit_write_targa
value|jIWrTarga
end_define
begin_define
DECL|macro|read_quant_tables
define|#
directive|define
name|read_quant_tables
value|RdQTables
end_define
begin_define
DECL|macro|read_scan_script
define|#
directive|define
name|read_scan_script
value|RdScnScript
end_define
begin_define
DECL|macro|set_quality_ratings
define|#
directive|define
name|set_quality_ratings
value|SetQRates
end_define
begin_define
DECL|macro|set_quant_slots
define|#
directive|define
name|set_quant_slots
value|SetQSlots
end_define
begin_define
DECL|macro|set_sample_factors
define|#
directive|define
name|set_sample_factors
value|SetSFacts
end_define
begin_define
DECL|macro|read_color_map
define|#
directive|define
name|read_color_map
value|RdCMap
end_define
begin_define
DECL|macro|enable_signal_catcher
define|#
directive|define
name|enable_signal_catcher
value|EnSigCatcher
end_define
begin_define
DECL|macro|start_progress_monitor
define|#
directive|define
name|start_progress_monitor
value|StProgMon
end_define
begin_define
DECL|macro|end_progress_monitor
define|#
directive|define
name|end_progress_monitor
value|EnProgMon
end_define
begin_define
DECL|macro|read_stdin
define|#
directive|define
name|read_stdin
value|RdStdin
end_define
begin_define
DECL|macro|write_stdout
define|#
directive|define
name|write_stdout
value|WrStdout
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/* NEED_SHORT_EXTERNAL_NAMES */
end_comment
begin_comment
comment|/* Module selection routines for I/O modules. */
end_comment
begin_macro
name|EXTERN
argument_list|(
argument|cjpeg_source_ptr
argument_list|)
end_macro
begin_decl_stmt
name|jinit_read_bmp
name|JPP
argument_list|(
operator|(
name|j_compress_ptr
name|cinfo
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
DECL|variable|jinit_write_bmp
name|EXTERN
argument_list|(
argument|djpeg_dest_ptr
argument_list|)
end_macro
begin_decl_stmt
DECL|variable|jinit_write_bmp
name|jinit_write_bmp
name|JPP
argument_list|(
operator|(
name|j_decompress_ptr
name|cinfo
operator|,
name|boolean
name|is_os2
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|cjpeg_source_ptr
argument_list|)
end_macro
begin_decl_stmt
name|jinit_read_gif
name|JPP
argument_list|(
operator|(
name|j_compress_ptr
name|cinfo
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
DECL|variable|jinit_write_gif
name|EXTERN
argument_list|(
argument|djpeg_dest_ptr
argument_list|)
end_macro
begin_decl_stmt
DECL|variable|jinit_write_gif
name|jinit_write_gif
name|JPP
argument_list|(
operator|(
name|j_decompress_ptr
name|cinfo
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|cjpeg_source_ptr
argument_list|)
end_macro
begin_decl_stmt
name|jinit_read_ppm
name|JPP
argument_list|(
operator|(
name|j_compress_ptr
name|cinfo
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
DECL|variable|jinit_write_ppm
name|EXTERN
argument_list|(
argument|djpeg_dest_ptr
argument_list|)
end_macro
begin_decl_stmt
DECL|variable|jinit_write_ppm
name|jinit_write_ppm
name|JPP
argument_list|(
operator|(
name|j_decompress_ptr
name|cinfo
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|cjpeg_source_ptr
argument_list|)
end_macro
begin_decl_stmt
name|jinit_read_rle
name|JPP
argument_list|(
operator|(
name|j_compress_ptr
name|cinfo
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
DECL|variable|jinit_write_rle
name|EXTERN
argument_list|(
argument|djpeg_dest_ptr
argument_list|)
end_macro
begin_decl_stmt
DECL|variable|jinit_write_rle
name|jinit_write_rle
name|JPP
argument_list|(
operator|(
name|j_decompress_ptr
name|cinfo
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|cjpeg_source_ptr
argument_list|)
end_macro
begin_decl_stmt
name|jinit_read_targa
name|JPP
argument_list|(
operator|(
name|j_compress_ptr
name|cinfo
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
DECL|variable|jinit_write_targa
name|EXTERN
argument_list|(
argument|djpeg_dest_ptr
argument_list|)
end_macro
begin_decl_stmt
DECL|variable|jinit_write_targa
name|jinit_write_targa
name|JPP
argument_list|(
operator|(
name|j_decompress_ptr
name|cinfo
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_comment
comment|/* cjpeg support routines (in rdswitch.c) */
end_comment
begin_macro
name|EXTERN
argument_list|(
argument|boolean
argument_list|)
end_macro
begin_decl_stmt
name|read_quant_tables
name|JPP
argument_list|(
operator|(
name|j_compress_ptr
name|cinfo
operator|,
name|char
operator|*
name|filename
operator|,
name|boolean
name|force_baseline
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
DECL|variable|read_scan_script
name|EXTERN
argument_list|(
argument|boolean
argument_list|)
end_macro
begin_decl_stmt
DECL|variable|read_scan_script
name|read_scan_script
name|JPP
argument_list|(
operator|(
name|j_compress_ptr
name|cinfo
operator|,
name|char
operator|*
name|filename
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|boolean
argument_list|)
end_macro
begin_decl_stmt
name|set_quality_ratings
name|JPP
argument_list|(
operator|(
name|j_compress_ptr
name|cinfo
operator|,
name|char
operator|*
name|arg
operator|,
name|boolean
name|force_baseline
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
DECL|variable|set_quant_slots
name|EXTERN
argument_list|(
argument|boolean
argument_list|)
end_macro
begin_decl_stmt
DECL|variable|set_quant_slots
name|set_quant_slots
name|JPP
argument_list|(
operator|(
name|j_compress_ptr
name|cinfo
operator|,
name|char
operator|*
name|arg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|boolean
argument_list|)
end_macro
begin_decl_stmt
name|set_sample_factors
name|JPP
argument_list|(
operator|(
name|j_compress_ptr
name|cinfo
operator|,
name|char
operator|*
name|arg
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_comment
comment|/* djpeg support routines (in rdcolmap.c) */
end_comment
begin_macro
DECL|variable|read_color_map
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
DECL|variable|read_color_map
name|read_color_map
name|JPP
argument_list|(
operator|(
name|j_decompress_ptr
name|cinfo
operator|,
name|FILE
operator|*
name|infile
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_comment
comment|/* common support routines (in cdjpeg.c) */
end_comment
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|enable_signal_catcher
name|JPP
argument_list|(
operator|(
name|j_common_ptr
name|cinfo
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|start_progress_monitor
name|JPP
argument_list|(
operator|(
name|j_common_ptr
name|cinfo
operator|,
name|cd_progress_ptr
name|progress
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|end_progress_monitor
name|JPP
argument_list|(
operator|(
name|j_common_ptr
name|cinfo
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|boolean
argument_list|)
end_macro
begin_decl_stmt
name|keymatch
name|JPP
argument_list|(
operator|(
name|char
operator|*
name|arg
operator|,
specifier|const
name|char
operator|*
name|keyword
operator|,
name|int
name|minchars
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
DECL|variable|read_stdin
name|EXTERN
argument_list|(
argument|FILE *
argument_list|)
end_macro
begin_decl_stmt
DECL|variable|read_stdin
name|read_stdin
name|JPP
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|FILE *
argument_list|)
end_macro
begin_decl_stmt
name|write_stdout
name|JPP
argument_list|(
operator|(
name|void
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_comment
comment|/* miscellaneous useful macros */
end_comment
begin_ifdef
ifdef|#
directive|ifdef
name|DONT_USE_B_MODE
end_ifdef
begin_comment
comment|/* define mode parameters for fopen() */
end_comment
begin_define
DECL|macro|READ_BINARY
define|#
directive|define
name|READ_BINARY
value|"r"
end_define
begin_define
DECL|macro|WRITE_BINARY
define|#
directive|define
name|WRITE_BINARY
value|"w"
end_define
begin_else
else|#
directive|else
end_else
begin_ifdef
ifdef|#
directive|ifdef
name|VMS
end_ifdef
begin_comment
comment|/* VMS is very nonstandard */
end_comment
begin_define
DECL|macro|READ_BINARY
define|#
directive|define
name|READ_BINARY
value|"rb", "ctx=stm"
end_define
begin_define
DECL|macro|WRITE_BINARY
define|#
directive|define
name|WRITE_BINARY
value|"wb", "ctx=stm"
end_define
begin_else
else|#
directive|else
end_else
begin_comment
comment|/* standard ANSI-compliant case */
end_comment
begin_define
DECL|macro|READ_BINARY
define|#
directive|define
name|READ_BINARY
value|"rb"
end_define
begin_define
DECL|macro|WRITE_BINARY
define|#
directive|define
name|WRITE_BINARY
value|"wb"
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|EXIT_FAILURE
end_ifndef
begin_comment
comment|/* define exit() codes if not provided */
end_comment
begin_define
DECL|macro|EXIT_FAILURE
define|#
directive|define
name|EXIT_FAILURE
value|1
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|EXIT_SUCCESS
end_ifndef
begin_ifdef
ifdef|#
directive|ifdef
name|VMS
end_ifdef
begin_define
DECL|macro|EXIT_SUCCESS
define|#
directive|define
name|EXIT_SUCCESS
value|1
end_define
begin_comment
DECL|macro|EXIT_SUCCESS
comment|/* VMS is very nonstandard */
end_comment
begin_else
else|#
directive|else
end_else
begin_define
DECL|macro|EXIT_SUCCESS
define|#
directive|define
name|EXIT_SUCCESS
value|0
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|EXIT_WARNING
end_ifndef
begin_ifdef
ifdef|#
directive|ifdef
name|VMS
end_ifdef
begin_define
DECL|macro|EXIT_WARNING
define|#
directive|define
name|EXIT_WARNING
value|1
end_define
begin_comment
DECL|macro|EXIT_WARNING
comment|/* VMS is very nonstandard */
end_comment
begin_else
else|#
directive|else
end_else
begin_define
DECL|macro|EXIT_WARNING
define|#
directive|define
name|EXIT_WARNING
value|2
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_endif
endif|#
directive|endif
end_endif
end_unit
