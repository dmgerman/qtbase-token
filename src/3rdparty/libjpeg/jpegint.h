begin_unit
begin_comment
comment|/*  * jpegint.h  *  * Copyright (C) 1991-1997, Thomas G. Lane.  * Modified 1997-2009 by Guido Vollbeding.  * This file is part of the Independent JPEG Group's software.  * For conditions of distribution and use, see the accompanying README file.  *  * This file provides common declarations for the various JPEG modules.  * These declarations are considered internal to the JPEG library; most  * applications using the library shouldn't need to include this file.  */
end_comment
begin_comment
comment|/* Declarations for both compression& decompression */
end_comment
begin_typedef
typedef|typedef
enum|enum
block|{
comment|/* Operating modes for buffer controllers */
DECL|enumerator|JBUF_PASS_THRU
name|JBUF_PASS_THRU
block|,
comment|/* Plain stripwise operation */
comment|/* Remaining modes require a full-image buffer to have been created */
DECL|enumerator|JBUF_SAVE_SOURCE
name|JBUF_SAVE_SOURCE
block|,
comment|/* Run source subobject only, save output */
DECL|enumerator|JBUF_CRANK_DEST
name|JBUF_CRANK_DEST
block|,
comment|/* Run dest subobject only, using saved data */
DECL|enumerator|JBUF_SAVE_AND_PASS
name|JBUF_SAVE_AND_PASS
comment|/* Run both subobjects, save output */
block|}
DECL|typedef|J_BUF_MODE
name|J_BUF_MODE
typedef|;
end_typedef
begin_comment
comment|/* Values of global_state field (jdapi.c has some dependencies on ordering!) */
end_comment
begin_define
DECL|macro|CSTATE_START
define|#
directive|define
name|CSTATE_START
value|100
end_define
begin_comment
DECL|macro|CSTATE_START
comment|/* after create_compress */
end_comment
begin_define
DECL|macro|CSTATE_SCANNING
define|#
directive|define
name|CSTATE_SCANNING
value|101
end_define
begin_comment
DECL|macro|CSTATE_SCANNING
comment|/* start_compress done, write_scanlines OK */
end_comment
begin_define
DECL|macro|CSTATE_RAW_OK
define|#
directive|define
name|CSTATE_RAW_OK
value|102
end_define
begin_comment
DECL|macro|CSTATE_RAW_OK
comment|/* start_compress done, write_raw_data OK */
end_comment
begin_define
DECL|macro|CSTATE_WRCOEFS
define|#
directive|define
name|CSTATE_WRCOEFS
value|103
end_define
begin_comment
DECL|macro|CSTATE_WRCOEFS
comment|/* jpeg_write_coefficients done */
end_comment
begin_define
DECL|macro|DSTATE_START
define|#
directive|define
name|DSTATE_START
value|200
end_define
begin_comment
DECL|macro|DSTATE_START
comment|/* after create_decompress */
end_comment
begin_define
DECL|macro|DSTATE_INHEADER
define|#
directive|define
name|DSTATE_INHEADER
value|201
end_define
begin_comment
DECL|macro|DSTATE_INHEADER
comment|/* reading header markers, no SOS yet */
end_comment
begin_define
DECL|macro|DSTATE_READY
define|#
directive|define
name|DSTATE_READY
value|202
end_define
begin_comment
DECL|macro|DSTATE_READY
comment|/* found SOS, ready for start_decompress */
end_comment
begin_define
DECL|macro|DSTATE_PRELOAD
define|#
directive|define
name|DSTATE_PRELOAD
value|203
end_define
begin_comment
DECL|macro|DSTATE_PRELOAD
comment|/* reading multiscan file in start_decompress*/
end_comment
begin_define
DECL|macro|DSTATE_PRESCAN
define|#
directive|define
name|DSTATE_PRESCAN
value|204
end_define
begin_comment
DECL|macro|DSTATE_PRESCAN
comment|/* performing dummy pass for 2-pass quant */
end_comment
begin_define
DECL|macro|DSTATE_SCANNING
define|#
directive|define
name|DSTATE_SCANNING
value|205
end_define
begin_comment
DECL|macro|DSTATE_SCANNING
comment|/* start_decompress done, read_scanlines OK */
end_comment
begin_define
DECL|macro|DSTATE_RAW_OK
define|#
directive|define
name|DSTATE_RAW_OK
value|206
end_define
begin_comment
DECL|macro|DSTATE_RAW_OK
comment|/* start_decompress done, read_raw_data OK */
end_comment
begin_define
DECL|macro|DSTATE_BUFIMAGE
define|#
directive|define
name|DSTATE_BUFIMAGE
value|207
end_define
begin_comment
DECL|macro|DSTATE_BUFIMAGE
comment|/* expecting jpeg_start_output */
end_comment
begin_define
DECL|macro|DSTATE_BUFPOST
define|#
directive|define
name|DSTATE_BUFPOST
value|208
end_define
begin_comment
DECL|macro|DSTATE_BUFPOST
comment|/* looking for SOS/EOI in jpeg_finish_output */
end_comment
begin_define
DECL|macro|DSTATE_RDCOEFS
define|#
directive|define
name|DSTATE_RDCOEFS
value|209
end_define
begin_comment
DECL|macro|DSTATE_RDCOEFS
comment|/* reading file in jpeg_read_coefficients */
end_comment
begin_define
DECL|macro|DSTATE_STOPPING
define|#
directive|define
name|DSTATE_STOPPING
value|210
end_define
begin_comment
DECL|macro|DSTATE_STOPPING
comment|/* looking for EOI in jpeg_finish_decompress */
end_comment
begin_comment
comment|/* Declarations for compression modules */
end_comment
begin_comment
comment|/* Master control module */
end_comment
begin_struct
DECL|struct|jpeg_comp_master
struct|struct
name|jpeg_comp_master
block|{
name|JMETHOD
argument_list|(
name|void
argument_list|,
name|prepare_for_pass
argument_list|,
operator|(
name|j_compress_ptr
name|cinfo
operator|)
argument_list|)
expr_stmt|;
name|JMETHOD
argument_list|(
name|void
argument_list|,
name|pass_startup
argument_list|,
operator|(
name|j_compress_ptr
name|cinfo
operator|)
argument_list|)
expr_stmt|;
name|JMETHOD
argument_list|(
name|void
argument_list|,
name|finish_pass
argument_list|,
operator|(
name|j_compress_ptr
name|cinfo
operator|)
argument_list|)
expr_stmt|;
comment|/* State variables made visible to other modules */
DECL|member|call_pass_startup
name|boolean
name|call_pass_startup
decl_stmt|;
comment|/* True if pass_startup must be called */
DECL|member|is_last_pass
name|boolean
name|is_last_pass
decl_stmt|;
comment|/* True during last pass */
block|}
struct|;
end_struct
begin_comment
comment|/* Main buffer control (downsampled-data buffer) */
end_comment
begin_struct
DECL|struct|jpeg_c_main_controller
struct|struct
name|jpeg_c_main_controller
block|{
name|JMETHOD
argument_list|(
name|void
argument_list|,
name|start_pass
argument_list|,
operator|(
name|j_compress_ptr
name|cinfo
operator|,
name|J_BUF_MODE
name|pass_mode
operator|)
argument_list|)
expr_stmt|;
name|JMETHOD
argument_list|(
name|void
argument_list|,
name|process_data
argument_list|,
operator|(
name|j_compress_ptr
name|cinfo
operator|,
name|JSAMPARRAY
name|input_buf
operator|,
name|JDIMENSION
operator|*
name|in_row_ctr
operator|,
name|JDIMENSION
name|in_rows_avail
operator|)
argument_list|)
expr_stmt|;
block|}
struct|;
end_struct
begin_comment
comment|/* Compression preprocessing (downsampling input buffer control) */
end_comment
begin_struct
DECL|struct|jpeg_c_prep_controller
struct|struct
name|jpeg_c_prep_controller
block|{
name|JMETHOD
argument_list|(
name|void
argument_list|,
name|start_pass
argument_list|,
operator|(
name|j_compress_ptr
name|cinfo
operator|,
name|J_BUF_MODE
name|pass_mode
operator|)
argument_list|)
expr_stmt|;
name|JMETHOD
argument_list|(
name|void
argument_list|,
name|pre_process_data
argument_list|,
operator|(
name|j_compress_ptr
name|cinfo
operator|,
name|JSAMPARRAY
name|input_buf
operator|,
name|JDIMENSION
operator|*
name|in_row_ctr
operator|,
name|JDIMENSION
name|in_rows_avail
operator|,
name|JSAMPIMAGE
name|output_buf
operator|,
name|JDIMENSION
operator|*
name|out_row_group_ctr
operator|,
name|JDIMENSION
name|out_row_groups_avail
operator|)
argument_list|)
expr_stmt|;
block|}
struct|;
end_struct
begin_comment
comment|/* Coefficient buffer control */
end_comment
begin_struct
DECL|struct|jpeg_c_coef_controller
struct|struct
name|jpeg_c_coef_controller
block|{
name|JMETHOD
argument_list|(
name|void
argument_list|,
name|start_pass
argument_list|,
operator|(
name|j_compress_ptr
name|cinfo
operator|,
name|J_BUF_MODE
name|pass_mode
operator|)
argument_list|)
expr_stmt|;
name|JMETHOD
argument_list|(
name|boolean
argument_list|,
name|compress_data
argument_list|,
operator|(
name|j_compress_ptr
name|cinfo
operator|,
name|JSAMPIMAGE
name|input_buf
operator|)
argument_list|)
expr_stmt|;
block|}
struct|;
end_struct
begin_comment
comment|/* Colorspace conversion */
end_comment
begin_struct
DECL|struct|jpeg_color_converter
struct|struct
name|jpeg_color_converter
block|{
name|JMETHOD
argument_list|(
name|void
argument_list|,
name|start_pass
argument_list|,
operator|(
name|j_compress_ptr
name|cinfo
operator|)
argument_list|)
expr_stmt|;
name|JMETHOD
argument_list|(
name|void
argument_list|,
name|color_convert
argument_list|,
operator|(
name|j_compress_ptr
name|cinfo
operator|,
name|JSAMPARRAY
name|input_buf
operator|,
name|JSAMPIMAGE
name|output_buf
operator|,
name|JDIMENSION
name|output_row
operator|,
name|int
name|num_rows
operator|)
argument_list|)
expr_stmt|;
block|}
struct|;
end_struct
begin_comment
comment|/* Downsampling */
end_comment
begin_struct
DECL|struct|jpeg_downsampler
struct|struct
name|jpeg_downsampler
block|{
name|JMETHOD
argument_list|(
name|void
argument_list|,
name|start_pass
argument_list|,
operator|(
name|j_compress_ptr
name|cinfo
operator|)
argument_list|)
expr_stmt|;
name|JMETHOD
argument_list|(
name|void
argument_list|,
name|downsample
argument_list|,
operator|(
name|j_compress_ptr
name|cinfo
operator|,
name|JSAMPIMAGE
name|input_buf
operator|,
name|JDIMENSION
name|in_row_index
operator|,
name|JSAMPIMAGE
name|output_buf
operator|,
name|JDIMENSION
name|out_row_group_index
operator|)
argument_list|)
expr_stmt|;
DECL|member|need_context_rows
name|boolean
name|need_context_rows
decl_stmt|;
comment|/* TRUE if need rows above& below */
block|}
struct|;
end_struct
begin_comment
comment|/* Forward DCT (also controls coefficient quantization) */
end_comment
begin_typedef
DECL|typedef|JMETHOD
typedef|typedef
name|JMETHOD
argument_list|(
name|void
argument_list|,
name|forward_DCT_ptr
argument_list|,
operator|(
name|j_compress_ptr
name|cinfo
operator|,
name|jpeg_component_info
operator|*
name|compptr
operator|,
name|JSAMPARRAY
name|sample_data
operator|,
name|JBLOCKROW
name|coef_blocks
operator|,
name|JDIMENSION
name|start_row
operator|,
name|JDIMENSION
name|start_col
operator|,
name|JDIMENSION
name|num_blocks
operator|)
argument_list|)
expr_stmt|;
end_typedef
begin_struct
DECL|struct|jpeg_forward_dct
struct|struct
name|jpeg_forward_dct
block|{
name|JMETHOD
argument_list|(
name|void
argument_list|,
name|start_pass
argument_list|,
operator|(
name|j_compress_ptr
name|cinfo
operator|)
argument_list|)
expr_stmt|;
comment|/* It is useful to allow each component to have a separate FDCT method. */
DECL|member|forward_DCT
name|forward_DCT_ptr
name|forward_DCT
index|[
name|MAX_COMPONENTS
index|]
decl_stmt|;
block|}
struct|;
end_struct
begin_comment
comment|/* Entropy encoding */
end_comment
begin_struct
DECL|struct|jpeg_entropy_encoder
struct|struct
name|jpeg_entropy_encoder
block|{
name|JMETHOD
argument_list|(
name|void
argument_list|,
name|start_pass
argument_list|,
operator|(
name|j_compress_ptr
name|cinfo
operator|,
name|boolean
name|gather_statistics
operator|)
argument_list|)
expr_stmt|;
name|JMETHOD
argument_list|(
name|boolean
argument_list|,
name|encode_mcu
argument_list|,
operator|(
name|j_compress_ptr
name|cinfo
operator|,
name|JBLOCKROW
operator|*
name|MCU_data
operator|)
argument_list|)
expr_stmt|;
name|JMETHOD
argument_list|(
name|void
argument_list|,
name|finish_pass
argument_list|,
operator|(
name|j_compress_ptr
name|cinfo
operator|)
argument_list|)
expr_stmt|;
block|}
struct|;
end_struct
begin_comment
comment|/* Marker writing */
end_comment
begin_struct
DECL|struct|jpeg_marker_writer
struct|struct
name|jpeg_marker_writer
block|{
name|JMETHOD
argument_list|(
name|void
argument_list|,
name|write_file_header
argument_list|,
operator|(
name|j_compress_ptr
name|cinfo
operator|)
argument_list|)
expr_stmt|;
name|JMETHOD
argument_list|(
name|void
argument_list|,
name|write_frame_header
argument_list|,
operator|(
name|j_compress_ptr
name|cinfo
operator|)
argument_list|)
expr_stmt|;
name|JMETHOD
argument_list|(
name|void
argument_list|,
name|write_scan_header
argument_list|,
operator|(
name|j_compress_ptr
name|cinfo
operator|)
argument_list|)
expr_stmt|;
name|JMETHOD
argument_list|(
name|void
argument_list|,
name|write_file_trailer
argument_list|,
operator|(
name|j_compress_ptr
name|cinfo
operator|)
argument_list|)
expr_stmt|;
name|JMETHOD
argument_list|(
name|void
argument_list|,
name|write_tables_only
argument_list|,
operator|(
name|j_compress_ptr
name|cinfo
operator|)
argument_list|)
expr_stmt|;
comment|/* These routines are exported to allow insertion of extra markers */
comment|/* Probably only COM and APPn markers should be written this way */
name|JMETHOD
argument_list|(
name|void
argument_list|,
name|write_marker_header
argument_list|,
operator|(
name|j_compress_ptr
name|cinfo
operator|,
name|int
name|marker
operator|,
name|unsigned
name|int
name|datalen
operator|)
argument_list|)
expr_stmt|;
name|JMETHOD
argument_list|(
name|void
argument_list|,
name|write_marker_byte
argument_list|,
operator|(
name|j_compress_ptr
name|cinfo
operator|,
name|int
name|val
operator|)
argument_list|)
expr_stmt|;
block|}
struct|;
end_struct
begin_comment
comment|/* Declarations for decompression modules */
end_comment
begin_comment
comment|/* Master control module */
end_comment
begin_struct
DECL|struct|jpeg_decomp_master
struct|struct
name|jpeg_decomp_master
block|{
name|JMETHOD
argument_list|(
name|void
argument_list|,
name|prepare_for_output_pass
argument_list|,
operator|(
name|j_decompress_ptr
name|cinfo
operator|)
argument_list|)
expr_stmt|;
name|JMETHOD
argument_list|(
name|void
argument_list|,
name|finish_output_pass
argument_list|,
operator|(
name|j_decompress_ptr
name|cinfo
operator|)
argument_list|)
expr_stmt|;
comment|/* State variables made visible to other modules */
DECL|member|is_dummy_pass
name|boolean
name|is_dummy_pass
decl_stmt|;
comment|/* True during 1st pass for 2-pass quant */
block|}
struct|;
end_struct
begin_comment
comment|/* Input control module */
end_comment
begin_struct
DECL|struct|jpeg_input_controller
struct|struct
name|jpeg_input_controller
block|{
name|JMETHOD
argument_list|(
name|int
argument_list|,
name|consume_input
argument_list|,
operator|(
name|j_decompress_ptr
name|cinfo
operator|)
argument_list|)
expr_stmt|;
name|JMETHOD
argument_list|(
name|void
argument_list|,
name|reset_input_controller
argument_list|,
operator|(
name|j_decompress_ptr
name|cinfo
operator|)
argument_list|)
expr_stmt|;
name|JMETHOD
argument_list|(
name|void
argument_list|,
name|start_input_pass
argument_list|,
operator|(
name|j_decompress_ptr
name|cinfo
operator|)
argument_list|)
expr_stmt|;
name|JMETHOD
argument_list|(
name|void
argument_list|,
name|finish_input_pass
argument_list|,
operator|(
name|j_decompress_ptr
name|cinfo
operator|)
argument_list|)
expr_stmt|;
comment|/* State variables made visible to other modules */
DECL|member|has_multiple_scans
name|boolean
name|has_multiple_scans
decl_stmt|;
comment|/* True if file has multiple scans */
DECL|member|eoi_reached
name|boolean
name|eoi_reached
decl_stmt|;
comment|/* True when EOI has been consumed */
block|}
struct|;
end_struct
begin_comment
comment|/* Main buffer control (downsampled-data buffer) */
end_comment
begin_struct
DECL|struct|jpeg_d_main_controller
struct|struct
name|jpeg_d_main_controller
block|{
name|JMETHOD
argument_list|(
name|void
argument_list|,
name|start_pass
argument_list|,
operator|(
name|j_decompress_ptr
name|cinfo
operator|,
name|J_BUF_MODE
name|pass_mode
operator|)
argument_list|)
expr_stmt|;
name|JMETHOD
argument_list|(
name|void
argument_list|,
name|process_data
argument_list|,
operator|(
name|j_decompress_ptr
name|cinfo
operator|,
name|JSAMPARRAY
name|output_buf
operator|,
name|JDIMENSION
operator|*
name|out_row_ctr
operator|,
name|JDIMENSION
name|out_rows_avail
operator|)
argument_list|)
expr_stmt|;
block|}
struct|;
end_struct
begin_comment
comment|/* Coefficient buffer control */
end_comment
begin_struct
DECL|struct|jpeg_d_coef_controller
struct|struct
name|jpeg_d_coef_controller
block|{
name|JMETHOD
argument_list|(
name|void
argument_list|,
name|start_input_pass
argument_list|,
operator|(
name|j_decompress_ptr
name|cinfo
operator|)
argument_list|)
expr_stmt|;
name|JMETHOD
argument_list|(
name|int
argument_list|,
name|consume_data
argument_list|,
operator|(
name|j_decompress_ptr
name|cinfo
operator|)
argument_list|)
expr_stmt|;
name|JMETHOD
argument_list|(
name|void
argument_list|,
name|start_output_pass
argument_list|,
operator|(
name|j_decompress_ptr
name|cinfo
operator|)
argument_list|)
expr_stmt|;
name|JMETHOD
argument_list|(
name|int
argument_list|,
name|decompress_data
argument_list|,
operator|(
name|j_decompress_ptr
name|cinfo
operator|,
name|JSAMPIMAGE
name|output_buf
operator|)
argument_list|)
expr_stmt|;
comment|/* Pointer to array of coefficient virtual arrays, or NULL if none */
DECL|member|coef_arrays
name|jvirt_barray_ptr
modifier|*
name|coef_arrays
decl_stmt|;
block|}
struct|;
end_struct
begin_comment
comment|/* Decompression postprocessing (color quantization buffer control) */
end_comment
begin_struct
DECL|struct|jpeg_d_post_controller
struct|struct
name|jpeg_d_post_controller
block|{
name|JMETHOD
argument_list|(
name|void
argument_list|,
name|start_pass
argument_list|,
operator|(
name|j_decompress_ptr
name|cinfo
operator|,
name|J_BUF_MODE
name|pass_mode
operator|)
argument_list|)
expr_stmt|;
name|JMETHOD
argument_list|(
name|void
argument_list|,
name|post_process_data
argument_list|,
operator|(
name|j_decompress_ptr
name|cinfo
operator|,
name|JSAMPIMAGE
name|input_buf
operator|,
name|JDIMENSION
operator|*
name|in_row_group_ctr
operator|,
name|JDIMENSION
name|in_row_groups_avail
operator|,
name|JSAMPARRAY
name|output_buf
operator|,
name|JDIMENSION
operator|*
name|out_row_ctr
operator|,
name|JDIMENSION
name|out_rows_avail
operator|)
argument_list|)
expr_stmt|;
block|}
struct|;
end_struct
begin_comment
comment|/* Marker reading& parsing */
end_comment
begin_struct
DECL|struct|jpeg_marker_reader
struct|struct
name|jpeg_marker_reader
block|{
name|JMETHOD
argument_list|(
name|void
argument_list|,
name|reset_marker_reader
argument_list|,
operator|(
name|j_decompress_ptr
name|cinfo
operator|)
argument_list|)
expr_stmt|;
comment|/* Read markers until SOS or EOI.    * Returns same codes as are defined for jpeg_consume_input:    * JPEG_SUSPENDED, JPEG_REACHED_SOS, or JPEG_REACHED_EOI.    */
name|JMETHOD
argument_list|(
name|int
argument_list|,
name|read_markers
argument_list|,
operator|(
name|j_decompress_ptr
name|cinfo
operator|)
argument_list|)
expr_stmt|;
comment|/* Read a restart marker --- exported for use by entropy decoder only */
DECL|member|read_restart_marker
name|jpeg_marker_parser_method
name|read_restart_marker
decl_stmt|;
comment|/* State of marker reader --- nominally internal, but applications    * supplying COM or APPn handlers might like to know the state.    */
DECL|member|saw_SOI
name|boolean
name|saw_SOI
decl_stmt|;
comment|/* found SOI? */
DECL|member|saw_SOF
name|boolean
name|saw_SOF
decl_stmt|;
comment|/* found SOF? */
DECL|member|next_restart_num
name|int
name|next_restart_num
decl_stmt|;
comment|/* next restart number expected (0-7) */
DECL|member|discarded_bytes
name|unsigned
name|int
name|discarded_bytes
decl_stmt|;
comment|/* # of bytes skipped looking for a marker */
block|}
struct|;
end_struct
begin_comment
comment|/* Entropy decoding */
end_comment
begin_struct
DECL|struct|jpeg_entropy_decoder
struct|struct
name|jpeg_entropy_decoder
block|{
name|JMETHOD
argument_list|(
name|void
argument_list|,
name|start_pass
argument_list|,
operator|(
name|j_decompress_ptr
name|cinfo
operator|)
argument_list|)
expr_stmt|;
name|JMETHOD
argument_list|(
name|boolean
argument_list|,
name|decode_mcu
argument_list|,
operator|(
name|j_decompress_ptr
name|cinfo
operator|,
name|JBLOCKROW
operator|*
name|MCU_data
operator|)
argument_list|)
expr_stmt|;
block|}
struct|;
end_struct
begin_comment
comment|/* Inverse DCT (also performs dequantization) */
end_comment
begin_typedef
DECL|typedef|JMETHOD
typedef|typedef
name|JMETHOD
argument_list|(
name|void
argument_list|,
name|inverse_DCT_method_ptr
argument_list|,
operator|(
name|j_decompress_ptr
name|cinfo
operator|,
name|jpeg_component_info
operator|*
name|compptr
operator|,
name|JCOEFPTR
name|coef_block
operator|,
name|JSAMPARRAY
name|output_buf
operator|,
name|JDIMENSION
name|output_col
operator|)
argument_list|)
expr_stmt|;
end_typedef
begin_struct
DECL|struct|jpeg_inverse_dct
struct|struct
name|jpeg_inverse_dct
block|{
name|JMETHOD
argument_list|(
name|void
argument_list|,
name|start_pass
argument_list|,
operator|(
name|j_decompress_ptr
name|cinfo
operator|)
argument_list|)
expr_stmt|;
comment|/* It is useful to allow each component to have a separate IDCT method. */
DECL|member|inverse_DCT
name|inverse_DCT_method_ptr
name|inverse_DCT
index|[
name|MAX_COMPONENTS
index|]
decl_stmt|;
block|}
struct|;
end_struct
begin_comment
comment|/* Upsampling (note that upsampler must also call color converter) */
end_comment
begin_struct
DECL|struct|jpeg_upsampler
struct|struct
name|jpeg_upsampler
block|{
name|JMETHOD
argument_list|(
name|void
argument_list|,
name|start_pass
argument_list|,
operator|(
name|j_decompress_ptr
name|cinfo
operator|)
argument_list|)
expr_stmt|;
name|JMETHOD
argument_list|(
name|void
argument_list|,
name|upsample
argument_list|,
operator|(
name|j_decompress_ptr
name|cinfo
operator|,
name|JSAMPIMAGE
name|input_buf
operator|,
name|JDIMENSION
operator|*
name|in_row_group_ctr
operator|,
name|JDIMENSION
name|in_row_groups_avail
operator|,
name|JSAMPARRAY
name|output_buf
operator|,
name|JDIMENSION
operator|*
name|out_row_ctr
operator|,
name|JDIMENSION
name|out_rows_avail
operator|)
argument_list|)
expr_stmt|;
DECL|member|need_context_rows
name|boolean
name|need_context_rows
decl_stmt|;
comment|/* TRUE if need rows above& below */
block|}
struct|;
end_struct
begin_comment
comment|/* Colorspace conversion */
end_comment
begin_struct
DECL|struct|jpeg_color_deconverter
struct|struct
name|jpeg_color_deconverter
block|{
name|JMETHOD
argument_list|(
name|void
argument_list|,
name|start_pass
argument_list|,
operator|(
name|j_decompress_ptr
name|cinfo
operator|)
argument_list|)
expr_stmt|;
name|JMETHOD
argument_list|(
name|void
argument_list|,
name|color_convert
argument_list|,
operator|(
name|j_decompress_ptr
name|cinfo
operator|,
name|JSAMPIMAGE
name|input_buf
operator|,
name|JDIMENSION
name|input_row
operator|,
name|JSAMPARRAY
name|output_buf
operator|,
name|int
name|num_rows
operator|)
argument_list|)
expr_stmt|;
block|}
struct|;
end_struct
begin_comment
comment|/* Color quantization or color precision reduction */
end_comment
begin_struct
DECL|struct|jpeg_color_quantizer
struct|struct
name|jpeg_color_quantizer
block|{
name|JMETHOD
argument_list|(
name|void
argument_list|,
name|start_pass
argument_list|,
operator|(
name|j_decompress_ptr
name|cinfo
operator|,
name|boolean
name|is_pre_scan
operator|)
argument_list|)
expr_stmt|;
name|JMETHOD
argument_list|(
name|void
argument_list|,
name|color_quantize
argument_list|,
operator|(
name|j_decompress_ptr
name|cinfo
operator|,
name|JSAMPARRAY
name|input_buf
operator|,
name|JSAMPARRAY
name|output_buf
operator|,
name|int
name|num_rows
operator|)
argument_list|)
expr_stmt|;
name|JMETHOD
argument_list|(
name|void
argument_list|,
name|finish_pass
argument_list|,
operator|(
name|j_decompress_ptr
name|cinfo
operator|)
argument_list|)
expr_stmt|;
name|JMETHOD
argument_list|(
name|void
argument_list|,
name|new_color_map
argument_list|,
operator|(
name|j_decompress_ptr
name|cinfo
operator|)
argument_list|)
expr_stmt|;
block|}
struct|;
end_struct
begin_comment
comment|/* Miscellaneous useful macros */
end_comment
begin_undef
DECL|macro|MAX
undef|#
directive|undef
name|MAX
end_undef
begin_define
DECL|macro|MAX
define|#
directive|define
name|MAX
parameter_list|(
name|a
parameter_list|,
name|b
parameter_list|)
value|((a)> (b) ? (a) : (b))
end_define
begin_undef
DECL|macro|MIN
undef|#
directive|undef
name|MIN
end_undef
begin_define
DECL|macro|MIN
define|#
directive|define
name|MIN
parameter_list|(
name|a
parameter_list|,
name|b
parameter_list|)
value|((a)< (b) ? (a) : (b))
end_define
begin_comment
comment|/* We assume that right shift corresponds to signed division by 2 with  * rounding towards minus infinity.  This is correct for typical "arithmetic  * shift" instructions that shift in copies of the sign bit.  But some  * C compilers implement>> with an unsigned shift.  For these machines you  * must define RIGHT_SHIFT_IS_UNSIGNED.  * RIGHT_SHIFT provides a proper signed right shift of an INT32 quantity.  * It is only applied with constant shift counts.  SHIFT_TEMPS must be  * included in the variables of any routine using RIGHT_SHIFT.  */
end_comment
begin_ifdef
ifdef|#
directive|ifdef
name|RIGHT_SHIFT_IS_UNSIGNED
end_ifdef
begin_define
DECL|macro|SHIFT_TEMPS
define|#
directive|define
name|SHIFT_TEMPS
value|INT32 shift_temp;
end_define
begin_define
DECL|macro|RIGHT_SHIFT
define|#
directive|define
name|RIGHT_SHIFT
parameter_list|(
name|x
parameter_list|,
name|shft
parameter_list|)
define|\
value|((shift_temp = (x))< 0 ? \ 	 (shift_temp>> (shft)) | ((~((INT32) 0))<< (32-(shft))) : \ 	 (shift_temp>> (shft)))
end_define
begin_else
else|#
directive|else
end_else
begin_define
DECL|macro|SHIFT_TEMPS
define|#
directive|define
name|SHIFT_TEMPS
end_define
begin_define
DECL|macro|RIGHT_SHIFT
define|#
directive|define
name|RIGHT_SHIFT
parameter_list|(
name|x
parameter_list|,
name|shft
parameter_list|)
value|((x)>> (shft))
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/* Short forms of external names for systems with brain-damaged linkers. */
end_comment
begin_ifdef
ifdef|#
directive|ifdef
name|NEED_SHORT_EXTERNAL_NAMES
end_ifdef
begin_define
DECL|macro|jinit_compress_master
define|#
directive|define
name|jinit_compress_master
value|jICompress
end_define
begin_define
DECL|macro|jinit_c_master_control
define|#
directive|define
name|jinit_c_master_control
value|jICMaster
end_define
begin_define
DECL|macro|jinit_c_main_controller
define|#
directive|define
name|jinit_c_main_controller
value|jICMainC
end_define
begin_define
DECL|macro|jinit_c_prep_controller
define|#
directive|define
name|jinit_c_prep_controller
value|jICPrepC
end_define
begin_define
DECL|macro|jinit_c_coef_controller
define|#
directive|define
name|jinit_c_coef_controller
value|jICCoefC
end_define
begin_define
DECL|macro|jinit_color_converter
define|#
directive|define
name|jinit_color_converter
value|jICColor
end_define
begin_define
DECL|macro|jinit_downsampler
define|#
directive|define
name|jinit_downsampler
value|jIDownsampler
end_define
begin_define
DECL|macro|jinit_forward_dct
define|#
directive|define
name|jinit_forward_dct
value|jIFDCT
end_define
begin_define
DECL|macro|jinit_huff_encoder
define|#
directive|define
name|jinit_huff_encoder
value|jIHEncoder
end_define
begin_define
DECL|macro|jinit_arith_encoder
define|#
directive|define
name|jinit_arith_encoder
value|jIAEncoder
end_define
begin_define
DECL|macro|jinit_marker_writer
define|#
directive|define
name|jinit_marker_writer
value|jIMWriter
end_define
begin_define
DECL|macro|jinit_master_decompress
define|#
directive|define
name|jinit_master_decompress
value|jIDMaster
end_define
begin_define
DECL|macro|jinit_d_main_controller
define|#
directive|define
name|jinit_d_main_controller
value|jIDMainC
end_define
begin_define
DECL|macro|jinit_d_coef_controller
define|#
directive|define
name|jinit_d_coef_controller
value|jIDCoefC
end_define
begin_define
DECL|macro|jinit_d_post_controller
define|#
directive|define
name|jinit_d_post_controller
value|jIDPostC
end_define
begin_define
DECL|macro|jinit_input_controller
define|#
directive|define
name|jinit_input_controller
value|jIInCtlr
end_define
begin_define
DECL|macro|jinit_marker_reader
define|#
directive|define
name|jinit_marker_reader
value|jIMReader
end_define
begin_define
DECL|macro|jinit_huff_decoder
define|#
directive|define
name|jinit_huff_decoder
value|jIHDecoder
end_define
begin_define
DECL|macro|jinit_arith_decoder
define|#
directive|define
name|jinit_arith_decoder
value|jIADecoder
end_define
begin_define
DECL|macro|jinit_inverse_dct
define|#
directive|define
name|jinit_inverse_dct
value|jIIDCT
end_define
begin_define
DECL|macro|jinit_upsampler
define|#
directive|define
name|jinit_upsampler
value|jIUpsampler
end_define
begin_define
DECL|macro|jinit_color_deconverter
define|#
directive|define
name|jinit_color_deconverter
value|jIDColor
end_define
begin_define
DECL|macro|jinit_1pass_quantizer
define|#
directive|define
name|jinit_1pass_quantizer
value|jI1Quant
end_define
begin_define
DECL|macro|jinit_2pass_quantizer
define|#
directive|define
name|jinit_2pass_quantizer
value|jI2Quant
end_define
begin_define
DECL|macro|jinit_merged_upsampler
define|#
directive|define
name|jinit_merged_upsampler
value|jIMUpsampler
end_define
begin_define
DECL|macro|jinit_memory_mgr
define|#
directive|define
name|jinit_memory_mgr
value|jIMemMgr
end_define
begin_define
DECL|macro|jdiv_round_up
define|#
directive|define
name|jdiv_round_up
value|jDivRound
end_define
begin_define
DECL|macro|jround_up
define|#
directive|define
name|jround_up
value|jRound
end_define
begin_define
DECL|macro|jcopy_sample_rows
define|#
directive|define
name|jcopy_sample_rows
value|jCopySamples
end_define
begin_define
DECL|macro|jcopy_block_row
define|#
directive|define
name|jcopy_block_row
value|jCopyBlocks
end_define
begin_define
DECL|macro|jzero_far
define|#
directive|define
name|jzero_far
value|jZeroFar
end_define
begin_define
DECL|macro|jpeg_zigzag_order
define|#
directive|define
name|jpeg_zigzag_order
value|jZIGTable
end_define
begin_define
DECL|macro|jpeg_natural_order
define|#
directive|define
name|jpeg_natural_order
value|jZAGTable
end_define
begin_define
DECL|macro|jpeg_natural_order7
define|#
directive|define
name|jpeg_natural_order7
value|jZAGTable7
end_define
begin_define
DECL|macro|jpeg_natural_order6
define|#
directive|define
name|jpeg_natural_order6
value|jZAGTable6
end_define
begin_define
DECL|macro|jpeg_natural_order5
define|#
directive|define
name|jpeg_natural_order5
value|jZAGTable5
end_define
begin_define
DECL|macro|jpeg_natural_order4
define|#
directive|define
name|jpeg_natural_order4
value|jZAGTable4
end_define
begin_define
DECL|macro|jpeg_natural_order3
define|#
directive|define
name|jpeg_natural_order3
value|jZAGTable3
end_define
begin_define
DECL|macro|jpeg_natural_order2
define|#
directive|define
name|jpeg_natural_order2
value|jZAGTable2
end_define
begin_define
DECL|macro|jpeg_aritab
define|#
directive|define
name|jpeg_aritab
value|jAriTab
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/* NEED_SHORT_EXTERNAL_NAMES */
end_comment
begin_comment
comment|/* Compression module initialization routines */
end_comment
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jinit_compress_master
name|JPP
argument_list|(
operator|(
name|j_compress_ptr
name|cinfo
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jinit_c_master_control
name|JPP
argument_list|(
operator|(
name|j_compress_ptr
name|cinfo
operator|,
name|boolean
name|transcode_only
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jinit_c_main_controller
name|JPP
argument_list|(
operator|(
name|j_compress_ptr
name|cinfo
operator|,
name|boolean
name|need_full_buffer
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jinit_c_prep_controller
name|JPP
argument_list|(
operator|(
name|j_compress_ptr
name|cinfo
operator|,
name|boolean
name|need_full_buffer
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jinit_c_coef_controller
name|JPP
argument_list|(
operator|(
name|j_compress_ptr
name|cinfo
operator|,
name|boolean
name|need_full_buffer
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jinit_color_converter
name|JPP
argument_list|(
operator|(
name|j_compress_ptr
name|cinfo
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jinit_downsampler
name|JPP
argument_list|(
operator|(
name|j_compress_ptr
name|cinfo
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jinit_forward_dct
name|JPP
argument_list|(
operator|(
name|j_compress_ptr
name|cinfo
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jinit_huff_encoder
name|JPP
argument_list|(
operator|(
name|j_compress_ptr
name|cinfo
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jinit_arith_encoder
name|JPP
argument_list|(
operator|(
name|j_compress_ptr
name|cinfo
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jinit_marker_writer
name|JPP
argument_list|(
operator|(
name|j_compress_ptr
name|cinfo
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_comment
comment|/* Decompression module initialization routines */
end_comment
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jinit_master_decompress
name|JPP
argument_list|(
operator|(
name|j_decompress_ptr
name|cinfo
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jinit_d_main_controller
name|JPP
argument_list|(
operator|(
name|j_decompress_ptr
name|cinfo
operator|,
name|boolean
name|need_full_buffer
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jinit_d_coef_controller
name|JPP
argument_list|(
operator|(
name|j_decompress_ptr
name|cinfo
operator|,
name|boolean
name|need_full_buffer
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jinit_d_post_controller
name|JPP
argument_list|(
operator|(
name|j_decompress_ptr
name|cinfo
operator|,
name|boolean
name|need_full_buffer
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jinit_input_controller
name|JPP
argument_list|(
operator|(
name|j_decompress_ptr
name|cinfo
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jinit_marker_reader
name|JPP
argument_list|(
operator|(
name|j_decompress_ptr
name|cinfo
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jinit_huff_decoder
name|JPP
argument_list|(
operator|(
name|j_decompress_ptr
name|cinfo
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jinit_arith_decoder
name|JPP
argument_list|(
operator|(
name|j_decompress_ptr
name|cinfo
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jinit_inverse_dct
name|JPP
argument_list|(
operator|(
name|j_decompress_ptr
name|cinfo
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jinit_upsampler
name|JPP
argument_list|(
operator|(
name|j_decompress_ptr
name|cinfo
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jinit_color_deconverter
name|JPP
argument_list|(
operator|(
name|j_decompress_ptr
name|cinfo
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jinit_1pass_quantizer
name|JPP
argument_list|(
operator|(
name|j_decompress_ptr
name|cinfo
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jinit_2pass_quantizer
name|JPP
argument_list|(
operator|(
name|j_decompress_ptr
name|cinfo
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jinit_merged_upsampler
name|JPP
argument_list|(
operator|(
name|j_decompress_ptr
name|cinfo
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_comment
comment|/* Memory manager initialization */
end_comment
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jinit_memory_mgr
name|JPP
argument_list|(
operator|(
name|j_common_ptr
name|cinfo
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_comment
comment|/* Utility routines in jutils.c */
end_comment
begin_macro
name|EXTERN
argument_list|(
argument|long
argument_list|)
end_macro
begin_decl_stmt
name|jdiv_round_up
name|JPP
argument_list|(
operator|(
name|long
name|a
operator|,
name|long
name|b
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|long
argument_list|)
end_macro
begin_decl_stmt
name|jround_up
name|JPP
argument_list|(
operator|(
name|long
name|a
operator|,
name|long
name|b
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jcopy_sample_rows
name|JPP
argument_list|(
operator|(
name|JSAMPARRAY
name|input_array
operator|,
name|int
name|source_row
operator|,
name|JSAMPARRAY
name|output_array
operator|,
name|int
name|dest_row
operator|,
name|int
name|num_rows
operator|,
name|JDIMENSION
name|num_cols
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jcopy_block_row
name|JPP
argument_list|(
operator|(
name|JBLOCKROW
name|input_row
operator|,
name|JBLOCKROW
name|output_row
operator|,
name|JDIMENSION
name|num_blocks
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|EXTERN
argument_list|(
argument|void
argument_list|)
end_macro
begin_decl_stmt
name|jzero_far
name|JPP
argument_list|(
operator|(
name|void
name|FAR
operator|*
name|target
operator|,
name|size_t
name|bytestozero
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_comment
comment|/* Constant tables in jutils.c */
end_comment
begin_if
if|#
directive|if
literal|0
end_if
begin_comment
comment|/* This table is not actually needed in v6a */
end_comment
begin_comment
unit|extern const int jpeg_zigzag_order[];
comment|/* natural coef order to zigzag order */
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_decl_stmt
specifier|extern
specifier|const
name|int
name|jpeg_natural_order
index|[]
decl_stmt|;
end_decl_stmt
begin_comment
comment|/* zigzag coef order to natural order */
end_comment
begin_decl_stmt
specifier|extern
specifier|const
name|int
name|jpeg_natural_order7
index|[]
decl_stmt|;
end_decl_stmt
begin_comment
comment|/* zz to natural order for 7x7 block */
end_comment
begin_decl_stmt
specifier|extern
specifier|const
name|int
name|jpeg_natural_order6
index|[]
decl_stmt|;
end_decl_stmt
begin_comment
comment|/* zz to natural order for 6x6 block */
end_comment
begin_decl_stmt
specifier|extern
specifier|const
name|int
name|jpeg_natural_order5
index|[]
decl_stmt|;
end_decl_stmt
begin_comment
comment|/* zz to natural order for 5x5 block */
end_comment
begin_decl_stmt
specifier|extern
specifier|const
name|int
name|jpeg_natural_order4
index|[]
decl_stmt|;
end_decl_stmt
begin_comment
comment|/* zz to natural order for 4x4 block */
end_comment
begin_decl_stmt
specifier|extern
specifier|const
name|int
name|jpeg_natural_order3
index|[]
decl_stmt|;
end_decl_stmt
begin_comment
comment|/* zz to natural order for 3x3 block */
end_comment
begin_decl_stmt
specifier|extern
specifier|const
name|int
name|jpeg_natural_order2
index|[]
decl_stmt|;
end_decl_stmt
begin_comment
comment|/* zz to natural order for 2x2 block */
end_comment
begin_comment
comment|/* Arithmetic coding probability estimation tables in jaricom.c */
end_comment
begin_decl_stmt
specifier|extern
specifier|const
name|INT32
name|jpeg_aritab
index|[]
decl_stmt|;
end_decl_stmt
begin_comment
comment|/* Suppress undefined-structure complaints if necessary. */
end_comment
begin_ifdef
ifdef|#
directive|ifdef
name|INCOMPLETE_TYPES_BROKEN
end_ifdef
begin_ifndef
ifndef|#
directive|ifndef
name|AM_MEMORY_MANAGER
end_ifndef
begin_comment
comment|/* only jmemmgr.c defines these */
end_comment
begin_struct
DECL|struct|jvirt_sarray_control
DECL|member|dummy
struct|struct
name|jvirt_sarray_control
block|{
name|long
name|dummy
decl_stmt|;
block|}
struct|;
end_struct
begin_struct
DECL|struct|jvirt_barray_control
DECL|member|dummy
struct|struct
name|jvirt_barray_control
block|{
name|long
name|dummy
decl_stmt|;
block|}
struct|;
end_struct
begin_endif
endif|#
directive|endif
end_endif
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/* INCOMPLETE_TYPES_BROKEN */
end_comment
end_unit
