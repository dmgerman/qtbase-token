begin_unit
begin_comment
comment|/***************************************************************************/
end_comment
begin_comment
comment|/*                                                                         */
end_comment
begin_comment
comment|/*  t1types.h                                                              */
end_comment
begin_comment
comment|/*                                                                         */
end_comment
begin_comment
comment|/*    Basic Type1/Type2 type definitions and interface (specification      */
end_comment
begin_comment
comment|/*    only).                                                               */
end_comment
begin_comment
comment|/*                                                                         */
end_comment
begin_comment
comment|/*  Copyright 1996-2004, 2006, 2008, 2009, 2011, 2013 by                   */
end_comment
begin_comment
comment|/*  David Turner, Robert Wilhelm, and Werner Lemberg.                      */
end_comment
begin_comment
comment|/*                                                                         */
end_comment
begin_comment
comment|/*  This file is part of the FreeType project, and may only be used,       */
end_comment
begin_comment
comment|/*  modified, and distributed under the terms of the FreeType project      */
end_comment
begin_comment
comment|/*  license, LICENSE.TXT.  By continuing to use, modify, or distribute     */
end_comment
begin_comment
comment|/*  this file you indicate that you have read the license and              */
end_comment
begin_comment
comment|/*  understand and accept it fully.                                        */
end_comment
begin_comment
comment|/*                                                                         */
end_comment
begin_comment
comment|/***************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|__T1TYPES_H__
end_ifndef
begin_define
DECL|macro|__T1TYPES_H__
define|#
directive|define
name|__T1TYPES_H__
end_define
begin_include
include|#
directive|include
file|<ft2build.h>
end_include
begin_include
include|#
directive|include
include|FT_TYPE1_TABLES_H
end_include
begin_include
include|#
directive|include
include|FT_INTERNAL_POSTSCRIPT_HINTS_H
end_include
begin_include
include|#
directive|include
include|FT_INTERNAL_SERVICE_H
end_include
begin_include
include|#
directive|include
include|FT_SERVICE_POSTSCRIPT_CMAPS_H
end_include
begin_macro
name|FT_BEGIN_HEADER
end_macro
begin_comment
comment|/*************************************************************************/
end_comment
begin_comment
comment|/*************************************************************************/
end_comment
begin_comment
comment|/*************************************************************************/
end_comment
begin_comment
comment|/***                                                                   ***/
end_comment
begin_comment
comment|/***                                                                   ***/
end_comment
begin_comment
comment|/***              REQUIRED TYPE1/TYPE2 TABLES DEFINITIONS              ***/
end_comment
begin_comment
comment|/***                                                                   ***/
end_comment
begin_comment
comment|/***                                                                   ***/
end_comment
begin_comment
comment|/*************************************************************************/
end_comment
begin_comment
comment|/*************************************************************************/
end_comment
begin_comment
comment|/*************************************************************************/
end_comment
begin_comment
comment|/*************************************************************************/
end_comment
begin_comment
comment|/*                                                                       */
end_comment
begin_comment
comment|/*<Struct>                                                              */
end_comment
begin_comment
comment|/*    T1_EncodingRec                                                     */
end_comment
begin_comment
comment|/*                                                                       */
end_comment
begin_comment
comment|/*<Description>                                                         */
end_comment
begin_comment
comment|/*    A structure modeling a custom encoding.                            */
end_comment
begin_comment
comment|/*                                                                       */
end_comment
begin_comment
comment|/*<Fields>                                                              */
end_comment
begin_comment
comment|/*    num_chars  :: The number of character codes in the encoding.       */
end_comment
begin_comment
comment|/*                  Usually 256.                                         */
end_comment
begin_comment
comment|/*                                                                       */
end_comment
begin_comment
comment|/*    code_first :: The lowest valid character code in the encoding.     */
end_comment
begin_comment
comment|/*                                                                       */
end_comment
begin_comment
comment|/*    code_last  :: The highest valid character code in the encoding     */
end_comment
begin_comment
comment|/*                  + 1. When equal to code_first there are no valid     */
end_comment
begin_comment
comment|/*                  character codes.                                     */
end_comment
begin_comment
comment|/*                                                                       */
end_comment
begin_comment
comment|/*    char_index :: An array of corresponding glyph indices.             */
end_comment
begin_comment
comment|/*                                                                       */
end_comment
begin_comment
comment|/*    char_name  :: An array of corresponding glyph names.               */
end_comment
begin_comment
comment|/*                                                                       */
end_comment
begin_typedef
DECL|struct|T1_EncodingRecRec_
typedef|typedef
struct|struct
name|T1_EncodingRecRec_
block|{
DECL|member|num_chars
name|FT_Int
name|num_chars
decl_stmt|;
DECL|member|code_first
name|FT_Int
name|code_first
decl_stmt|;
DECL|member|code_last
name|FT_Int
name|code_last
decl_stmt|;
DECL|member|char_index
name|FT_UShort
modifier|*
name|char_index
decl_stmt|;
DECL|member|char_name
name|FT_String
modifier|*
modifier|*
name|char_name
decl_stmt|;
block|}
DECL|typedef|T1_EncodingRec
DECL|typedef|T1_Encoding
name|T1_EncodingRec
operator|,
typedef|*
name|T1_Encoding
typedef|;
end_typedef
begin_comment
comment|/* used to hold extra data of PS_FontInfoRec that    * cannot be stored in the publicly defined structure.    *    * Note these can't be blended with multiple-masters.    */
end_comment
begin_typedef
DECL|struct|PS_FontExtraRec_
typedef|typedef
struct|struct
name|PS_FontExtraRec_
block|{
DECL|member|fs_type
name|FT_UShort
name|fs_type
decl_stmt|;
block|}
DECL|typedef|PS_FontExtraRec
name|PS_FontExtraRec
typedef|;
end_typedef
begin_typedef
DECL|struct|T1_FontRec_
typedef|typedef
struct|struct
name|T1_FontRec_
block|{
DECL|member|font_info
name|PS_FontInfoRec
name|font_info
decl_stmt|;
comment|/* font info dictionary   */
DECL|member|font_extra
name|PS_FontExtraRec
name|font_extra
decl_stmt|;
comment|/* font info extra fields */
DECL|member|private_dict
name|PS_PrivateRec
name|private_dict
decl_stmt|;
comment|/* private dictionary     */
DECL|member|font_name
name|FT_String
modifier|*
name|font_name
decl_stmt|;
comment|/* top-level dictionary   */
DECL|member|encoding_type
name|T1_EncodingType
name|encoding_type
decl_stmt|;
DECL|member|encoding
name|T1_EncodingRec
name|encoding
decl_stmt|;
DECL|member|subrs_block
name|FT_Byte
modifier|*
name|subrs_block
decl_stmt|;
DECL|member|charstrings_block
name|FT_Byte
modifier|*
name|charstrings_block
decl_stmt|;
DECL|member|glyph_names_block
name|FT_Byte
modifier|*
name|glyph_names_block
decl_stmt|;
DECL|member|num_subrs
name|FT_Int
name|num_subrs
decl_stmt|;
DECL|member|subrs
name|FT_Byte
modifier|*
modifier|*
name|subrs
decl_stmt|;
DECL|member|subrs_len
name|FT_PtrDist
modifier|*
name|subrs_len
decl_stmt|;
DECL|member|num_glyphs
name|FT_Int
name|num_glyphs
decl_stmt|;
DECL|member|glyph_names
name|FT_String
modifier|*
modifier|*
name|glyph_names
decl_stmt|;
comment|/* array of glyph names       */
DECL|member|charstrings
name|FT_Byte
modifier|*
modifier|*
name|charstrings
decl_stmt|;
comment|/* array of glyph charstrings */
DECL|member|charstrings_len
name|FT_PtrDist
modifier|*
name|charstrings_len
decl_stmt|;
DECL|member|paint_type
name|FT_Byte
name|paint_type
decl_stmt|;
DECL|member|font_type
name|FT_Byte
name|font_type
decl_stmt|;
DECL|member|font_matrix
name|FT_Matrix
name|font_matrix
decl_stmt|;
DECL|member|font_offset
name|FT_Vector
name|font_offset
decl_stmt|;
DECL|member|font_bbox
name|FT_BBox
name|font_bbox
decl_stmt|;
DECL|member|font_id
name|FT_Long
name|font_id
decl_stmt|;
DECL|member|stroke_width
name|FT_Fixed
name|stroke_width
decl_stmt|;
block|}
DECL|typedef|T1_FontRec
DECL|typedef|T1_Font
name|T1_FontRec
operator|,
typedef|*
name|T1_Font
typedef|;
end_typedef
begin_typedef
DECL|struct|CID_SubrsRec_
typedef|typedef
struct|struct
name|CID_SubrsRec_
block|{
DECL|member|num_subrs
name|FT_UInt
name|num_subrs
decl_stmt|;
DECL|member|code
name|FT_Byte
modifier|*
modifier|*
name|code
decl_stmt|;
block|}
DECL|typedef|CID_SubrsRec
DECL|typedef|CID_Subrs
name|CID_SubrsRec
operator|,
typedef|*
name|CID_Subrs
typedef|;
end_typedef
begin_comment
comment|/*************************************************************************/
end_comment
begin_comment
comment|/*************************************************************************/
end_comment
begin_comment
comment|/*************************************************************************/
end_comment
begin_comment
comment|/***                                                                   ***/
end_comment
begin_comment
comment|/***                                                                   ***/
end_comment
begin_comment
comment|/***                AFM FONT INFORMATION STRUCTURES                    ***/
end_comment
begin_comment
comment|/***                                                                   ***/
end_comment
begin_comment
comment|/***                                                                   ***/
end_comment
begin_comment
comment|/*************************************************************************/
end_comment
begin_comment
comment|/*************************************************************************/
end_comment
begin_comment
comment|/*************************************************************************/
end_comment
begin_typedef
DECL|struct|AFM_TrackKernRec_
typedef|typedef
struct|struct
name|AFM_TrackKernRec_
block|{
DECL|member|degree
name|FT_Int
name|degree
decl_stmt|;
DECL|member|min_ptsize
name|FT_Fixed
name|min_ptsize
decl_stmt|;
DECL|member|min_kern
name|FT_Fixed
name|min_kern
decl_stmt|;
DECL|member|max_ptsize
name|FT_Fixed
name|max_ptsize
decl_stmt|;
DECL|member|max_kern
name|FT_Fixed
name|max_kern
decl_stmt|;
block|}
DECL|typedef|AFM_TrackKernRec
DECL|typedef|AFM_TrackKern
name|AFM_TrackKernRec
operator|,
typedef|*
name|AFM_TrackKern
typedef|;
end_typedef
begin_typedef
DECL|struct|AFM_KernPairRec_
typedef|typedef
struct|struct
name|AFM_KernPairRec_
block|{
DECL|member|index1
name|FT_Int
name|index1
decl_stmt|;
DECL|member|index2
name|FT_Int
name|index2
decl_stmt|;
DECL|member|x
name|FT_Int
name|x
decl_stmt|;
DECL|member|y
name|FT_Int
name|y
decl_stmt|;
block|}
DECL|typedef|AFM_KernPairRec
DECL|typedef|AFM_KernPair
name|AFM_KernPairRec
operator|,
typedef|*
name|AFM_KernPair
typedef|;
end_typedef
begin_typedef
DECL|struct|AFM_FontInfoRec_
typedef|typedef
struct|struct
name|AFM_FontInfoRec_
block|{
DECL|member|IsCIDFont
name|FT_Bool
name|IsCIDFont
decl_stmt|;
DECL|member|FontBBox
name|FT_BBox
name|FontBBox
decl_stmt|;
DECL|member|Ascender
name|FT_Fixed
name|Ascender
decl_stmt|;
DECL|member|Descender
name|FT_Fixed
name|Descender
decl_stmt|;
DECL|member|TrackKerns
name|AFM_TrackKern
name|TrackKerns
decl_stmt|;
comment|/* free if non-NULL */
DECL|member|NumTrackKern
name|FT_Int
name|NumTrackKern
decl_stmt|;
DECL|member|KernPairs
name|AFM_KernPair
name|KernPairs
decl_stmt|;
comment|/* free if non-NULL */
DECL|member|NumKernPair
name|FT_Int
name|NumKernPair
decl_stmt|;
block|}
DECL|typedef|AFM_FontInfoRec
DECL|typedef|AFM_FontInfo
name|AFM_FontInfoRec
operator|,
typedef|*
name|AFM_FontInfo
typedef|;
end_typedef
begin_comment
comment|/*************************************************************************/
end_comment
begin_comment
comment|/*************************************************************************/
end_comment
begin_comment
comment|/*************************************************************************/
end_comment
begin_comment
comment|/***                                                                   ***/
end_comment
begin_comment
comment|/***                                                                   ***/
end_comment
begin_comment
comment|/***                ORIGINAL T1_FACE CLASS DEFINITION                  ***/
end_comment
begin_comment
comment|/***                                                                   ***/
end_comment
begin_comment
comment|/***                                                                   ***/
end_comment
begin_comment
comment|/*************************************************************************/
end_comment
begin_comment
comment|/*************************************************************************/
end_comment
begin_comment
comment|/*************************************************************************/
end_comment
begin_typedef
DECL|typedef|T1_Face
typedef|typedef
name|struct
name|T1_FaceRec_
modifier|*
name|T1_Face
typedef|;
end_typedef
begin_typedef
DECL|typedef|CID_Face
typedef|typedef
name|struct
name|CID_FaceRec_
modifier|*
name|CID_Face
typedef|;
end_typedef
begin_typedef
DECL|struct|T1_FaceRec_
typedef|typedef
struct|struct
name|T1_FaceRec_
block|{
DECL|member|root
name|FT_FaceRec
name|root
decl_stmt|;
DECL|member|type1
name|T1_FontRec
name|type1
decl_stmt|;
DECL|member|psnames
specifier|const
name|void
modifier|*
name|psnames
decl_stmt|;
DECL|member|psaux
specifier|const
name|void
modifier|*
name|psaux
decl_stmt|;
DECL|member|afm_data
specifier|const
name|void
modifier|*
name|afm_data
decl_stmt|;
DECL|member|charmaprecs
name|FT_CharMapRec
name|charmaprecs
index|[
literal|2
index|]
decl_stmt|;
DECL|member|charmaps
name|FT_CharMap
name|charmaps
index|[
literal|2
index|]
decl_stmt|;
comment|/* support for Multiple Masters fonts */
DECL|member|blend
name|PS_Blend
name|blend
decl_stmt|;
comment|/* undocumented, optional: indices of subroutines that express      */
comment|/* the NormalizeDesignVector and the ConvertDesignVector procedure, */
comment|/* respectively, as Type 2 charstrings; -1 if keywords not present  */
DECL|member|ndv_idx
name|FT_Int
name|ndv_idx
decl_stmt|;
DECL|member|cdv_idx
name|FT_Int
name|cdv_idx
decl_stmt|;
comment|/* undocumented, optional: has the same meaning as len_buildchar */
comment|/* for Type 2 fonts; manipulated by othersubrs 19, 24, and 25    */
DECL|member|len_buildchar
name|FT_UInt
name|len_buildchar
decl_stmt|;
DECL|member|buildchar
name|FT_Long
modifier|*
name|buildchar
decl_stmt|;
comment|/* since version 2.1 - interface to PostScript hinter */
DECL|member|pshinter
specifier|const
name|void
modifier|*
name|pshinter
decl_stmt|;
block|}
DECL|typedef|T1_FaceRec
name|T1_FaceRec
typedef|;
end_typedef
begin_typedef
DECL|struct|CID_FaceRec_
typedef|typedef
struct|struct
name|CID_FaceRec_
block|{
DECL|member|root
name|FT_FaceRec
name|root
decl_stmt|;
DECL|member|psnames
name|void
modifier|*
name|psnames
decl_stmt|;
DECL|member|psaux
name|void
modifier|*
name|psaux
decl_stmt|;
DECL|member|cid
name|CID_FaceInfoRec
name|cid
decl_stmt|;
DECL|member|font_extra
name|PS_FontExtraRec
name|font_extra
decl_stmt|;
if|#
directive|if
literal|0
block|void*            afm_data;
endif|#
directive|endif
DECL|member|subrs
name|CID_Subrs
name|subrs
decl_stmt|;
comment|/* since version 2.1 - interface to PostScript hinter */
DECL|member|pshinter
name|void
modifier|*
name|pshinter
decl_stmt|;
comment|/* since version 2.1.8, but was originally positioned after `afm_data' */
DECL|member|binary_data
name|FT_Byte
modifier|*
name|binary_data
decl_stmt|;
comment|/* used if hex data has been converted */
DECL|member|cid_stream
name|FT_Stream
name|cid_stream
decl_stmt|;
block|}
DECL|typedef|CID_FaceRec
name|CID_FaceRec
typedef|;
end_typedef
begin_macro
name|FT_END_HEADER
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/* __T1TYPES_H__ */
end_comment
begin_comment
comment|/* END */
end_comment
end_unit
