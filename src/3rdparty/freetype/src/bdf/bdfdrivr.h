begin_unit
begin_comment
comment|/*  bdfdrivr.h      FreeType font driver for bdf fonts    Copyright (C) 2001, 2002, 2003, 2004 by   Francesco Zappa Nardelli  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. */
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|__BDFDRIVR_H__
end_ifndef
begin_define
DECL|macro|__BDFDRIVR_H__
define|#
directive|define
name|__BDFDRIVR_H__
end_define
begin_include
include|#
directive|include
file|<ft2build.h>
end_include
begin_include
include|#
directive|include
include|FT_INTERNAL_DRIVER_H
end_include
begin_include
include|#
directive|include
file|"bdf.h"
end_include
begin_macro
name|FT_BEGIN_HEADER
end_macro
begin_ifdef
ifdef|#
directive|ifdef
name|FT_CONFIG_OPTION_PIC
end_ifdef
begin_error
error|#
directive|error
literal|"this module does not support PIC yet"
end_error
begin_endif
endif|#
directive|endif
end_endif
begin_typedef
DECL|struct|BDF_encoding_el_
typedef|typedef
struct|struct
name|BDF_encoding_el_
block|{
DECL|member|enc
name|FT_Long
name|enc
decl_stmt|;
DECL|member|glyph
name|FT_UShort
name|glyph
decl_stmt|;
block|}
DECL|typedef|BDF_encoding_el
name|BDF_encoding_el
typedef|;
end_typedef
begin_typedef
DECL|struct|BDF_FaceRec_
typedef|typedef
struct|struct
name|BDF_FaceRec_
block|{
DECL|member|root
name|FT_FaceRec
name|root
decl_stmt|;
DECL|member|charset_encoding
name|char
modifier|*
name|charset_encoding
decl_stmt|;
DECL|member|charset_registry
name|char
modifier|*
name|charset_registry
decl_stmt|;
DECL|member|bdffont
name|bdf_font_t
modifier|*
name|bdffont
decl_stmt|;
DECL|member|en_table
name|BDF_encoding_el
modifier|*
name|en_table
decl_stmt|;
DECL|member|charmap_handle
name|FT_CharMap
name|charmap_handle
decl_stmt|;
DECL|member|charmap
name|FT_CharMapRec
name|charmap
decl_stmt|;
comment|/* a single charmap per face */
DECL|member|default_glyph
name|FT_UInt
name|default_glyph
decl_stmt|;
block|}
DECL|typedef|BDF_FaceRec
DECL|typedef|BDF_Face
name|BDF_FaceRec
operator|,
typedef|*
name|BDF_Face
typedef|;
end_typedef
begin_macro
name|FT_EXPORT_VAR
argument_list|(
argument|const FT_Driver_ClassRec
argument_list|)
end_macro
begin_expr_stmt
name|bdf_driver_class
expr_stmt|;
end_expr_stmt
begin_macro
name|FT_END_HEADER
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/* __BDFDRIVR_H__ */
end_comment
begin_comment
comment|/* END */
end_comment
end_unit
