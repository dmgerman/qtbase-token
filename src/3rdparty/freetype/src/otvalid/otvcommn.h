begin_unit
begin_comment
comment|/***************************************************************************/
end_comment
begin_comment
comment|/*                                                                         */
end_comment
begin_comment
comment|/*  otvcommn.h                                                             */
end_comment
begin_comment
comment|/*                                                                         */
end_comment
begin_comment
comment|/*    OpenType common tables validation (specification).                   */
end_comment
begin_comment
comment|/*                                                                         */
end_comment
begin_comment
comment|/*  Copyright 2004-2015 by                                                 */
end_comment
begin_comment
comment|/*  David Turner, Robert Wilhelm, and Werner Lemberg.                      */
end_comment
begin_comment
comment|/*                                                                         */
end_comment
begin_comment
comment|/*  This file is part of the FreeType project, and may only be used,       */
end_comment
begin_comment
comment|/*  modified, and distributed under the terms of the FreeType project      */
end_comment
begin_comment
comment|/*  license, LICENSE.TXT.  By continuing to use, modify, or distribute     */
end_comment
begin_comment
comment|/*  this file you indicate that you have read the license and              */
end_comment
begin_comment
comment|/*  understand and accept it fully.                                        */
end_comment
begin_comment
comment|/*                                                                         */
end_comment
begin_comment
comment|/***************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|__OTVCOMMN_H__
end_ifndef
begin_define
DECL|macro|__OTVCOMMN_H__
define|#
directive|define
name|__OTVCOMMN_H__
end_define
begin_include
include|#
directive|include
file|<ft2build.h>
end_include
begin_include
include|#
directive|include
file|"otvalid.h"
end_include
begin_include
include|#
directive|include
include|FT_INTERNAL_DEBUG_H
end_include
begin_macro
name|FT_BEGIN_HEADER
end_macro
begin_comment
comment|/*************************************************************************/
end_comment
begin_comment
comment|/*************************************************************************/
end_comment
begin_comment
comment|/*****                                                               *****/
end_comment
begin_comment
comment|/*****                         VALIDATION                            *****/
end_comment
begin_comment
comment|/*****                                                               *****/
end_comment
begin_comment
comment|/*************************************************************************/
end_comment
begin_comment
comment|/*************************************************************************/
end_comment
begin_typedef
DECL|typedef|OTV_Validator
typedef|typedef
name|struct
name|OTV_ValidatorRec_
modifier|*
name|OTV_Validator
typedef|;
end_typedef
begin_typedef
DECL|typedef|OTV_Validate_Func
typedef|typedef
name|void
function_decl|(
modifier|*
name|OTV_Validate_Func
function_decl|)
parameter_list|(
name|FT_Bytes
name|table
parameter_list|,
name|OTV_Validator
name|otvalid
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|struct|OTV_ValidatorRec_
typedef|typedef
struct|struct
name|OTV_ValidatorRec_
block|{
DECL|member|root
name|FT_Validator
name|root
decl_stmt|;
DECL|member|type_count
name|FT_UInt
name|type_count
decl_stmt|;
DECL|member|type_funcs
name|OTV_Validate_Func
modifier|*
name|type_funcs
decl_stmt|;
DECL|member|lookup_count
name|FT_UInt
name|lookup_count
decl_stmt|;
DECL|member|glyph_count
name|FT_UInt
name|glyph_count
decl_stmt|;
DECL|member|nesting_level
name|FT_UInt
name|nesting_level
decl_stmt|;
DECL|member|func
name|OTV_Validate_Func
name|func
index|[
literal|3
index|]
decl_stmt|;
DECL|member|extra1
name|FT_UInt
name|extra1
decl_stmt|;
comment|/* for passing parameters */
DECL|member|extra2
name|FT_UInt
name|extra2
decl_stmt|;
DECL|member|extra3
name|FT_Bytes
name|extra3
decl_stmt|;
ifdef|#
directive|ifdef
name|FT_DEBUG_LEVEL_TRACE
DECL|member|debug_indent
name|FT_UInt
name|debug_indent
decl_stmt|;
DECL|member|debug_function_name
specifier|const
name|FT_String
modifier|*
name|debug_function_name
index|[
literal|3
index|]
decl_stmt|;
endif|#
directive|endif
block|}
DECL|typedef|OTV_ValidatorRec
name|OTV_ValidatorRec
typedef|;
end_typedef
begin_undef
DECL|macro|FT_INVALID_
undef|#
directive|undef
name|FT_INVALID_
end_undef
begin_define
DECL|macro|FT_INVALID_
define|#
directive|define
name|FT_INVALID_
parameter_list|(
name|_error
parameter_list|)
define|\
value|ft_validator_error( otvalid->root, FT_THROW( _error ) )
end_define
begin_define
DECL|macro|OTV_OPTIONAL_TABLE
define|#
directive|define
name|OTV_OPTIONAL_TABLE
parameter_list|(
name|_table
parameter_list|)
value|FT_UShort  _table;      \                                       FT_Bytes   _table ## _p
end_define
begin_define
DECL|macro|OTV_OPTIONAL_OFFSET
define|#
directive|define
name|OTV_OPTIONAL_OFFSET
parameter_list|(
name|_offset
parameter_list|)
define|\
value|FT_BEGIN_STMNT                         \             _offset ## _p = p;                   \             _offset       = FT_NEXT_USHORT( p ); \           FT_END_STMNT
end_define
begin_define
DECL|macro|OTV_LIMIT_CHECK
define|#
directive|define
name|OTV_LIMIT_CHECK
parameter_list|(
name|_count
parameter_list|)
define|\
value|FT_BEGIN_STMNT                             \             if ( p + (_count)> otvalid->root->limit ) \               FT_INVALID_TOO_SHORT;                  \           FT_END_STMNT
end_define
begin_define
DECL|macro|OTV_SIZE_CHECK
define|#
directive|define
name|OTV_SIZE_CHECK
parameter_list|(
name|_size
parameter_list|)
define|\
value|FT_BEGIN_STMNT                                            \             if ( _size> 0&& _size< table_size )                  \             {                                                       \               if ( otvalid->root->level == FT_VALIDATE_PARANOID )     \                 FT_INVALID_OFFSET;                                  \               else                                                  \               {                                                     \
comment|/* strip off `const' */
value|\                 FT_Byte*  pp = (FT_Byte*)_size ## _p;               \                                                                     \                                                                     \                 FT_TRACE3(( "\n"                                    \                             "Invalid offset to optional table `%s'" \                             " set to zero.\n"                       \                             "\n", #_size ));                        \                                                                     \
comment|/* always assume 16bit entities */
value|\                 _size = pp[0] = pp[1] = 0;                          \               }                                                     \             }                                                       \           FT_END_STMNT
end_define
begin_define
DECL|macro|OTV_NAME_
define|#
directive|define
name|OTV_NAME_
parameter_list|(
name|x
parameter_list|)
value|#x
end_define
begin_define
DECL|macro|OTV_NAME
define|#
directive|define
name|OTV_NAME
parameter_list|(
name|x
parameter_list|)
value|OTV_NAME_(x)
end_define
begin_define
DECL|macro|OTV_FUNC_
define|#
directive|define
name|OTV_FUNC_
parameter_list|(
name|x
parameter_list|)
value|x##Func
end_define
begin_define
DECL|macro|OTV_FUNC
define|#
directive|define
name|OTV_FUNC
parameter_list|(
name|x
parameter_list|)
value|OTV_FUNC_(x)
end_define
begin_ifdef
ifdef|#
directive|ifdef
name|FT_DEBUG_LEVEL_TRACE
end_ifdef
begin_define
DECL|macro|OTV_NEST1
define|#
directive|define
name|OTV_NEST1
parameter_list|(
name|x
parameter_list|)
define|\
value|FT_BEGIN_STMNT                                     \             otvalid->nesting_level          = 0;             \             otvalid->func[0]                = OTV_FUNC( x ); \             otvalid->debug_function_name[0] = OTV_NAME( x ); \           FT_END_STMNT
end_define
begin_define
DECL|macro|OTV_NEST2
define|#
directive|define
name|OTV_NEST2
parameter_list|(
name|x
parameter_list|,
name|y
parameter_list|)
define|\
value|FT_BEGIN_STMNT                                     \             otvalid->nesting_level          = 0;             \             otvalid->func[0]                = OTV_FUNC( x ); \             otvalid->func[1]                = OTV_FUNC( y ); \             otvalid->debug_function_name[0] = OTV_NAME( x ); \             otvalid->debug_function_name[1] = OTV_NAME( y ); \           FT_END_STMNT
end_define
begin_define
DECL|macro|OTV_NEST3
define|#
directive|define
name|OTV_NEST3
parameter_list|(
name|x
parameter_list|,
name|y
parameter_list|,
name|z
parameter_list|)
define|\
value|FT_BEGIN_STMNT                                     \             otvalid->nesting_level          = 0;             \             otvalid->func[0]                = OTV_FUNC( x ); \             otvalid->func[1]                = OTV_FUNC( y ); \             otvalid->func[2]                = OTV_FUNC( z ); \             otvalid->debug_function_name[0] = OTV_NAME( x ); \             otvalid->debug_function_name[1] = OTV_NAME( y ); \             otvalid->debug_function_name[2] = OTV_NAME( z ); \           FT_END_STMNT
end_define
begin_define
DECL|macro|OTV_INIT
define|#
directive|define
name|OTV_INIT
value|otvalid->debug_indent = 0
end_define
begin_define
DECL|macro|OTV_ENTER
define|#
directive|define
name|OTV_ENTER
define|\
value|FT_BEGIN_STMNT                                                       \             otvalid->debug_indent += 2;                                        \             FT_TRACE4(( "%*.s", otvalid->debug_indent, 0 ));                   \             FT_TRACE4(( "%s table\n",                                          \                         otvalid->debug_function_name[otvalid->nesting_level] )); \           FT_END_STMNT
end_define
begin_define
DECL|macro|OTV_NAME_ENTER
define|#
directive|define
name|OTV_NAME_ENTER
parameter_list|(
name|name
parameter_list|)
define|\
value|FT_BEGIN_STMNT                                     \             otvalid->debug_indent += 2;                      \             FT_TRACE4(( "%*.s", otvalid->debug_indent, 0 )); \             FT_TRACE4(( "%s table\n", name ));               \           FT_END_STMNT
end_define
begin_define
DECL|macro|OTV_EXIT
define|#
directive|define
name|OTV_EXIT
value|otvalid->debug_indent -= 2
end_define
begin_define
DECL|macro|OTV_TRACE
define|#
directive|define
name|OTV_TRACE
parameter_list|(
name|s
parameter_list|)
define|\
value|FT_BEGIN_STMNT                                     \             FT_TRACE4(( "%*.s", otvalid->debug_indent, 0 )); \             FT_TRACE4( s );                                  \           FT_END_STMNT
end_define
begin_else
else|#
directive|else
end_else
begin_comment
comment|/* !FT_DEBUG_LEVEL_TRACE */
end_comment
begin_define
DECL|macro|OTV_NEST1
define|#
directive|define
name|OTV_NEST1
parameter_list|(
name|x
parameter_list|)
define|\
value|FT_BEGIN_STMNT                            \             otvalid->nesting_level = 0;             \             otvalid->func[0]       = OTV_FUNC( x ); \           FT_END_STMNT
end_define
begin_define
DECL|macro|OTV_NEST2
define|#
directive|define
name|OTV_NEST2
parameter_list|(
name|x
parameter_list|,
name|y
parameter_list|)
define|\
value|FT_BEGIN_STMNT                            \             otvalid->nesting_level = 0;             \             otvalid->func[0]       = OTV_FUNC( x ); \             otvalid->func[1]       = OTV_FUNC( y ); \           FT_END_STMNT
end_define
begin_define
DECL|macro|OTV_NEST3
define|#
directive|define
name|OTV_NEST3
parameter_list|(
name|x
parameter_list|,
name|y
parameter_list|,
name|z
parameter_list|)
define|\
value|FT_BEGIN_STMNT                            \             otvalid->nesting_level = 0;             \             otvalid->func[0]       = OTV_FUNC( x ); \             otvalid->func[1]       = OTV_FUNC( y ); \             otvalid->func[2]       = OTV_FUNC( z ); \           FT_END_STMNT
end_define
begin_define
DECL|macro|OTV_INIT
define|#
directive|define
name|OTV_INIT
value|do { } while ( 0 )
end_define
begin_define
DECL|macro|OTV_ENTER
define|#
directive|define
name|OTV_ENTER
value|do { } while ( 0 )
end_define
begin_define
DECL|macro|OTV_NAME_ENTER
define|#
directive|define
name|OTV_NAME_ENTER
parameter_list|(
name|name
parameter_list|)
value|do { } while ( 0 )
end_define
begin_define
DECL|macro|OTV_EXIT
define|#
directive|define
name|OTV_EXIT
value|do { } while ( 0 )
end_define
begin_define
DECL|macro|OTV_TRACE
define|#
directive|define
name|OTV_TRACE
parameter_list|(
name|s
parameter_list|)
value|do { } while ( 0 )
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/* !FT_DEBUG_LEVEL_TRACE */
end_comment
begin_define
DECL|macro|OTV_RUN
define|#
directive|define
name|OTV_RUN
value|otvalid->func[0]
end_define
begin_comment
comment|/*************************************************************************/
end_comment
begin_comment
comment|/*************************************************************************/
end_comment
begin_comment
comment|/*****                                                               *****/
end_comment
begin_comment
comment|/*****                       COVERAGE TABLE                          *****/
end_comment
begin_comment
comment|/*****                                                               *****/
end_comment
begin_comment
comment|/*************************************************************************/
end_comment
begin_comment
comment|/*************************************************************************/
end_comment
begin_macro
name|FT_LOCAL
argument_list|(
argument|void
argument_list|)
end_macro
begin_macro
name|otv_Coverage_validate
argument_list|(
argument|FT_Bytes       table
argument_list|,
argument|OTV_Validator  otvalid
argument_list|,
argument|FT_Int         expected_count
argument_list|)
end_macro
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_comment
comment|/* return first covered glyph */
end_comment
begin_macro
name|FT_LOCAL
argument_list|(
argument|FT_UInt
argument_list|)
end_macro
begin_macro
name|otv_Coverage_get_first
argument_list|(
argument|FT_Bytes  table
argument_list|)
end_macro
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_comment
comment|/* return last covered glyph */
end_comment
begin_macro
name|FT_LOCAL
argument_list|(
argument|FT_UInt
argument_list|)
end_macro
begin_macro
DECL|variable|otv_Coverage_get_last
name|otv_Coverage_get_last
argument_list|(
argument|FT_Bytes  table
argument_list|)
end_macro
begin_empty_stmt
DECL|variable|otv_Coverage_get_last
empty_stmt|;
end_empty_stmt
begin_comment
comment|/* return number of covered glyphs */
end_comment
begin_macro
name|FT_LOCAL
argument_list|(
argument|FT_UInt
argument_list|)
end_macro
begin_macro
name|otv_Coverage_get_count
argument_list|(
argument|FT_Bytes  table
argument_list|)
end_macro
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_comment
comment|/*************************************************************************/
end_comment
begin_comment
comment|/*************************************************************************/
end_comment
begin_comment
comment|/*****                                                               *****/
end_comment
begin_comment
comment|/*****                  CLASS DEFINITION TABLE                       *****/
end_comment
begin_comment
comment|/*****                                                               *****/
end_comment
begin_comment
comment|/*************************************************************************/
end_comment
begin_comment
comment|/*************************************************************************/
end_comment
begin_macro
name|FT_LOCAL
argument_list|(
argument|void
argument_list|)
end_macro
begin_macro
DECL|variable|otv_ClassDef_validate
name|otv_ClassDef_validate
argument_list|(
argument|FT_Bytes       table
argument_list|,
argument|OTV_Validator  otvalid
argument_list|)
end_macro
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_comment
comment|/*************************************************************************/
end_comment
begin_comment
comment|/*************************************************************************/
end_comment
begin_comment
comment|/*****                                                               *****/
end_comment
begin_comment
comment|/*****                      DEVICE TABLE                             *****/
end_comment
begin_comment
comment|/*****                                                               *****/
end_comment
begin_comment
comment|/*************************************************************************/
end_comment
begin_comment
comment|/*************************************************************************/
end_comment
begin_macro
name|FT_LOCAL
argument_list|(
argument|void
argument_list|)
end_macro
begin_macro
name|otv_Device_validate
argument_list|(
argument|FT_Bytes       table
argument_list|,
argument|OTV_Validator  otvalid
argument_list|)
end_macro
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_comment
comment|/*************************************************************************/
end_comment
begin_comment
comment|/*************************************************************************/
end_comment
begin_comment
comment|/*****                                                               *****/
end_comment
begin_comment
comment|/*****                           LOOKUPS                             *****/
end_comment
begin_comment
comment|/*****                                                               *****/
end_comment
begin_comment
comment|/*************************************************************************/
end_comment
begin_comment
comment|/*************************************************************************/
end_comment
begin_macro
name|FT_LOCAL
argument_list|(
argument|void
argument_list|)
end_macro
begin_macro
name|otv_Lookup_validate
argument_list|(
argument|FT_Bytes       table
argument_list|,
argument|OTV_Validator  otvalid
argument_list|)
end_macro
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_macro
name|FT_LOCAL
argument_list|(
argument|void
argument_list|)
end_macro
begin_macro
name|otv_LookupList_validate
argument_list|(
argument|FT_Bytes       table
argument_list|,
argument|OTV_Validator  otvalid
argument_list|)
end_macro
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_comment
comment|/*************************************************************************/
end_comment
begin_comment
comment|/*************************************************************************/
end_comment
begin_comment
comment|/*****                                                               *****/
end_comment
begin_comment
comment|/*****                        FEATURES                               *****/
end_comment
begin_comment
comment|/*****                                                               *****/
end_comment
begin_comment
comment|/*************************************************************************/
end_comment
begin_comment
comment|/*************************************************************************/
end_comment
begin_macro
name|FT_LOCAL
argument_list|(
argument|void
argument_list|)
end_macro
begin_macro
name|otv_Feature_validate
argument_list|(
argument|FT_Bytes       table
argument_list|,
argument|OTV_Validator  otvalid
argument_list|)
end_macro
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_comment
comment|/* lookups must already be validated */
end_comment
begin_macro
name|FT_LOCAL
argument_list|(
argument|void
argument_list|)
end_macro
begin_macro
name|otv_FeatureList_validate
argument_list|(
argument|FT_Bytes       table
argument_list|,
argument|FT_Bytes       lookups
argument_list|,
argument|OTV_Validator  otvalid
argument_list|)
end_macro
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_comment
comment|/*************************************************************************/
end_comment
begin_comment
comment|/*************************************************************************/
end_comment
begin_comment
comment|/*****                                                               *****/
end_comment
begin_comment
comment|/*****                       LANGUAGE SYSTEM                         *****/
end_comment
begin_comment
comment|/*****                                                               *****/
end_comment
begin_comment
comment|/*************************************************************************/
end_comment
begin_comment
comment|/*************************************************************************/
end_comment
begin_macro
name|FT_LOCAL
argument_list|(
argument|void
argument_list|)
end_macro
begin_macro
name|otv_LangSys_validate
argument_list|(
argument|FT_Bytes       table
argument_list|,
argument|OTV_Validator  otvalid
argument_list|)
end_macro
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_comment
comment|/*************************************************************************/
end_comment
begin_comment
comment|/*************************************************************************/
end_comment
begin_comment
comment|/*****                                                               *****/
end_comment
begin_comment
comment|/*****                           SCRIPTS                             *****/
end_comment
begin_comment
comment|/*****                                                               *****/
end_comment
begin_comment
comment|/*************************************************************************/
end_comment
begin_comment
comment|/*************************************************************************/
end_comment
begin_macro
name|FT_LOCAL
argument_list|(
argument|void
argument_list|)
end_macro
begin_macro
name|otv_Script_validate
argument_list|(
argument|FT_Bytes       table
argument_list|,
argument|OTV_Validator  otvalid
argument_list|)
end_macro
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_comment
comment|/* features must already be validated */
end_comment
begin_macro
name|FT_LOCAL
argument_list|(
argument|void
argument_list|)
end_macro
begin_macro
name|otv_ScriptList_validate
argument_list|(
argument|FT_Bytes       table
argument_list|,
argument|FT_Bytes       features
argument_list|,
argument|OTV_Validator  otvalid
argument_list|)
end_macro
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_comment
comment|/*************************************************************************/
end_comment
begin_comment
comment|/*************************************************************************/
end_comment
begin_comment
comment|/*****                                                               *****/
end_comment
begin_comment
comment|/*****                      UTILITY FUNCTIONS                        *****/
end_comment
begin_comment
comment|/*****                                                               *****/
end_comment
begin_comment
comment|/*************************************************************************/
end_comment
begin_comment
comment|/*************************************************************************/
end_comment
begin_define
DECL|macro|ChainPosClassSetFunc
define|#
directive|define
name|ChainPosClassSetFunc
value|otv_x_Ox
end_define
begin_define
DECL|macro|ChainPosRuleSetFunc
define|#
directive|define
name|ChainPosRuleSetFunc
value|otv_x_Ox
end_define
begin_define
DECL|macro|ChainSubClassSetFunc
define|#
directive|define
name|ChainSubClassSetFunc
value|otv_x_Ox
end_define
begin_define
DECL|macro|ChainSubRuleSetFunc
define|#
directive|define
name|ChainSubRuleSetFunc
value|otv_x_Ox
end_define
begin_define
DECL|macro|JstfLangSysFunc
define|#
directive|define
name|JstfLangSysFunc
value|otv_x_Ox
end_define
begin_define
DECL|macro|JstfMaxFunc
define|#
directive|define
name|JstfMaxFunc
value|otv_x_Ox
end_define
begin_define
DECL|macro|LigGlyphFunc
define|#
directive|define
name|LigGlyphFunc
value|otv_x_Ox
end_define
begin_define
DECL|macro|LigatureArrayFunc
define|#
directive|define
name|LigatureArrayFunc
value|otv_x_Ox
end_define
begin_define
DECL|macro|LigatureSetFunc
define|#
directive|define
name|LigatureSetFunc
value|otv_x_Ox
end_define
begin_define
DECL|macro|PosClassSetFunc
define|#
directive|define
name|PosClassSetFunc
value|otv_x_Ox
end_define
begin_define
DECL|macro|PosRuleSetFunc
define|#
directive|define
name|PosRuleSetFunc
value|otv_x_Ox
end_define
begin_define
DECL|macro|SubClassSetFunc
define|#
directive|define
name|SubClassSetFunc
value|otv_x_Ox
end_define
begin_define
DECL|macro|SubRuleSetFunc
define|#
directive|define
name|SubRuleSetFunc
value|otv_x_Ox
end_define
begin_macro
name|FT_LOCAL
argument_list|(
argument|void
argument_list|)
end_macro
begin_macro
name|otv_x_Ox
argument_list|(
argument|FT_Bytes       table
argument_list|,
argument|OTV_Validator  otvalid
argument_list|)
end_macro
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_define
DECL|macro|AlternateSubstFormat1Func
define|#
directive|define
name|AlternateSubstFormat1Func
value|otv_u_C_x_Ox
end_define
begin_define
DECL|macro|ChainContextPosFormat1Func
define|#
directive|define
name|ChainContextPosFormat1Func
value|otv_u_C_x_Ox
end_define
begin_define
DECL|macro|ChainContextSubstFormat1Func
define|#
directive|define
name|ChainContextSubstFormat1Func
value|otv_u_C_x_Ox
end_define
begin_define
DECL|macro|ContextPosFormat1Func
define|#
directive|define
name|ContextPosFormat1Func
value|otv_u_C_x_Ox
end_define
begin_define
DECL|macro|ContextSubstFormat1Func
define|#
directive|define
name|ContextSubstFormat1Func
value|otv_u_C_x_Ox
end_define
begin_define
DECL|macro|LigatureSubstFormat1Func
define|#
directive|define
name|LigatureSubstFormat1Func
value|otv_u_C_x_Ox
end_define
begin_define
DECL|macro|MultipleSubstFormat1Func
define|#
directive|define
name|MultipleSubstFormat1Func
value|otv_u_C_x_Ox
end_define
begin_macro
name|FT_LOCAL
argument_list|(
argument|void
argument_list|)
end_macro
begin_macro
name|otv_u_C_x_Ox
argument_list|(
argument|FT_Bytes       table
argument_list|,
argument|OTV_Validator  otvalid
argument_list|)
end_macro
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_define
DECL|macro|AlternateSetFunc
define|#
directive|define
name|AlternateSetFunc
value|otv_x_ux
end_define
begin_define
DECL|macro|AttachPointFunc
define|#
directive|define
name|AttachPointFunc
value|otv_x_ux
end_define
begin_define
DECL|macro|ExtenderGlyphFunc
define|#
directive|define
name|ExtenderGlyphFunc
value|otv_x_ux
end_define
begin_define
DECL|macro|JstfGPOSModListFunc
define|#
directive|define
name|JstfGPOSModListFunc
value|otv_x_ux
end_define
begin_define
DECL|macro|JstfGSUBModListFunc
define|#
directive|define
name|JstfGSUBModListFunc
value|otv_x_ux
end_define
begin_define
DECL|macro|SequenceFunc
define|#
directive|define
name|SequenceFunc
value|otv_x_ux
end_define
begin_macro
name|FT_LOCAL
argument_list|(
argument|void
argument_list|)
end_macro
begin_macro
name|otv_x_ux
argument_list|(
argument|FT_Bytes       table
argument_list|,
argument|OTV_Validator  otvalid
argument_list|)
end_macro
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_define
DECL|macro|PosClassRuleFunc
define|#
directive|define
name|PosClassRuleFunc
value|otv_x_y_ux_sy
end_define
begin_define
DECL|macro|PosRuleFunc
define|#
directive|define
name|PosRuleFunc
value|otv_x_y_ux_sy
end_define
begin_define
DECL|macro|SubClassRuleFunc
define|#
directive|define
name|SubClassRuleFunc
value|otv_x_y_ux_sy
end_define
begin_define
DECL|macro|SubRuleFunc
define|#
directive|define
name|SubRuleFunc
value|otv_x_y_ux_sy
end_define
begin_macro
name|FT_LOCAL
argument_list|(
argument|void
argument_list|)
end_macro
begin_macro
name|otv_x_y_ux_sy
argument_list|(
argument|FT_Bytes       table
argument_list|,
argument|OTV_Validator  otvalid
argument_list|)
end_macro
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_define
DECL|macro|ChainPosClassRuleFunc
define|#
directive|define
name|ChainPosClassRuleFunc
value|otv_x_ux_y_uy_z_uz_p_sp
end_define
begin_define
DECL|macro|ChainPosRuleFunc
define|#
directive|define
name|ChainPosRuleFunc
value|otv_x_ux_y_uy_z_uz_p_sp
end_define
begin_define
DECL|macro|ChainSubClassRuleFunc
define|#
directive|define
name|ChainSubClassRuleFunc
value|otv_x_ux_y_uy_z_uz_p_sp
end_define
begin_define
DECL|macro|ChainSubRuleFunc
define|#
directive|define
name|ChainSubRuleFunc
value|otv_x_ux_y_uy_z_uz_p_sp
end_define
begin_macro
name|FT_LOCAL
argument_list|(
argument|void
argument_list|)
end_macro
begin_macro
name|otv_x_ux_y_uy_z_uz_p_sp
argument_list|(
argument|FT_Bytes       table
argument_list|,
argument|OTV_Validator  otvalid
argument_list|)
end_macro
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_define
DECL|macro|ContextPosFormat2Func
define|#
directive|define
name|ContextPosFormat2Func
value|otv_u_O_O_x_Onx
end_define
begin_define
DECL|macro|ContextSubstFormat2Func
define|#
directive|define
name|ContextSubstFormat2Func
value|otv_u_O_O_x_Onx
end_define
begin_macro
name|FT_LOCAL
argument_list|(
argument|void
argument_list|)
end_macro
begin_macro
name|otv_u_O_O_x_Onx
argument_list|(
argument|FT_Bytes       table
argument_list|,
argument|OTV_Validator  otvalid
argument_list|)
end_macro
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_define
DECL|macro|ContextPosFormat3Func
define|#
directive|define
name|ContextPosFormat3Func
value|otv_u_x_y_Ox_sy
end_define
begin_define
DECL|macro|ContextSubstFormat3Func
define|#
directive|define
name|ContextSubstFormat3Func
value|otv_u_x_y_Ox_sy
end_define
begin_macro
name|FT_LOCAL
argument_list|(
argument|void
argument_list|)
end_macro
begin_macro
name|otv_u_x_y_Ox_sy
argument_list|(
argument|FT_Bytes       table
argument_list|,
argument|OTV_Validator  otvalid
argument_list|)
end_macro
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_define
DECL|macro|ChainContextPosFormat2Func
define|#
directive|define
name|ChainContextPosFormat2Func
value|otv_u_O_O_O_O_x_Onx
end_define
begin_define
DECL|macro|ChainContextSubstFormat2Func
define|#
directive|define
name|ChainContextSubstFormat2Func
value|otv_u_O_O_O_O_x_Onx
end_define
begin_macro
name|FT_LOCAL
argument_list|(
argument|void
argument_list|)
end_macro
begin_macro
name|otv_u_O_O_O_O_x_Onx
argument_list|(
argument|FT_Bytes       table
argument_list|,
argument|OTV_Validator  otvalid
argument_list|)
end_macro
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_define
DECL|macro|ChainContextPosFormat3Func
define|#
directive|define
name|ChainContextPosFormat3Func
value|otv_u_x_Ox_y_Oy_z_Oz_p_sp
end_define
begin_define
DECL|macro|ChainContextSubstFormat3Func
define|#
directive|define
name|ChainContextSubstFormat3Func
value|otv_u_x_Ox_y_Oy_z_Oz_p_sp
end_define
begin_macro
name|FT_LOCAL
argument_list|(
argument|void
argument_list|)
end_macro
begin_macro
name|otv_u_x_Ox_y_Oy_z_Oz_p_sp
argument_list|(
argument|FT_Bytes       table
argument_list|,
argument|OTV_Validator  otvalid
argument_list|)
end_macro
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_macro
name|FT_LOCAL
argument_list|(
argument|FT_UInt
argument_list|)
end_macro
begin_macro
name|otv_GSUBGPOS_get_Lookup_count
argument_list|(
argument|FT_Bytes  table
argument_list|)
end_macro
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_macro
name|FT_LOCAL
argument_list|(
argument|FT_UInt
argument_list|)
end_macro
begin_macro
DECL|variable|otv_GSUBGPOS_have_MarkAttachmentType_flag
name|otv_GSUBGPOS_have_MarkAttachmentType_flag
argument_list|(
argument|FT_Bytes  table
argument_list|)
end_macro
begin_empty_stmt
DECL|variable|otv_GSUBGPOS_have_MarkAttachmentType_flag
empty_stmt|;
end_empty_stmt
begin_comment
comment|/* */
end_comment
begin_macro
name|FT_END_HEADER
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/* __OTVCOMMN_H__ */
end_comment
begin_comment
comment|/* END */
end_comment
end_unit
