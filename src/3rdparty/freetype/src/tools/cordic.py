begin_unit
comment|'# compute arctangent table for CORDIC computations in fttrigon.c'
nl|'\n'
name|'import'
name|'sys'
op|','
name|'math'
newline|'\n'
nl|'\n'
comment|"#units  = 64*65536.0   # don't change !!"
nl|'\n'
DECL|variable|units
name|'units'
op|'='
number|'256'
newline|'\n'
DECL|variable|scale
name|'scale'
op|'='
name|'units'
op|'/'
name|'math'
op|'.'
name|'pi'
newline|'\n'
DECL|variable|shrink
name|'shrink'
op|'='
number|'1.0'
newline|'\n'
DECL|variable|comma
name|'comma'
op|'='
string|'""'
newline|'\n'
nl|'\n'
DECL|function|calc_val
name|'def'
name|'calc_val'
op|'('
name|'x'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'global'
name|'units'
op|','
name|'shrink'
newline|'\n'
name|'angle'
op|'='
name|'math'
op|'.'
name|'atan'
op|'('
name|'x'
op|')'
newline|'\n'
name|'shrink'
op|'='
name|'shrink'
op|'*'
name|'math'
op|'.'
name|'cos'
op|'('
name|'angle'
op|')'
newline|'\n'
name|'return'
name|'angle'
op|'/'
name|'math'
op|'.'
name|'pi'
op|'*'
name|'units'
newline|'\n'
nl|'\n'
DECL|function|print_val
dedent|''
name|'def'
name|'print_val'
op|'('
name|'n'
op|','
name|'x'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'global'
name|'comma'
newline|'\n'
nl|'\n'
name|'lo'
op|'='
name|'int'
op|'('
name|'x'
op|')'
newline|'\n'
name|'hi'
op|'='
name|'lo'
op|'+'
number|'1'
newline|'\n'
name|'alo'
op|'='
name|'math'
op|'.'
name|'atan'
op|'('
name|'lo'
op|')'
newline|'\n'
name|'ahi'
op|'='
name|'math'
op|'.'
name|'atan'
op|'('
name|'hi'
op|')'
newline|'\n'
name|'ax'
op|'='
name|'math'
op|'.'
name|'atan'
op|'('
number|'2.0'
op|'**'
name|'n'
op|')'
newline|'\n'
nl|'\n'
name|'errlo'
op|'='
name|'abs'
op|'('
name|'alo'
op|'-'
name|'ax'
op|')'
newline|'\n'
name|'errhi'
op|'='
name|'abs'
op|'('
name|'ahi'
op|'-'
name|'ax'
op|')'
newline|'\n'
nl|'\n'
name|'if'
op|'('
name|'errlo'
op|'<'
name|'errhi'
op|')'
op|':'
newline|'\n'
indent|'      '
name|'hi'
op|'='
name|'lo'
newline|'\n'
nl|'\n'
dedent|''
name|'sys'
op|'.'
name|'stdout'
op|'.'
name|'write'
op|'('
name|'comma'
op|'+'
name|'repr'
op|'('
name|'int'
op|'('
name|'hi'
op|')'
op|')'
op|')'
newline|'\n'
name|'comma'
op|'='
string|'", "'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
name|'print'
string|'""'
newline|'\n'
name|'print'
string|'"table of arctan( 1/2^n ) for PI = "'
op|'+'
name|'repr'
op|'('
name|'units'
op|'/'
number|'65536.0'
op|')'
op|'+'
string|'" units"'
newline|'\n'
nl|'\n'
comment|'# compute range of "i"'
nl|'\n'
DECL|variable|r
name|'r'
op|'='
op|'['
op|'-'
number|'1'
op|']'
newline|'\n'
DECL|variable|r
name|'r'
op|'='
name|'r'
op|'+'
name|'range'
op|'('
number|'32'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'n'
name|'in'
name|'r'
op|':'
newline|'\n'
nl|'\n'
indent|'    '
name|'if'
name|'n'
op|'>='
number|'0'
op|':'
newline|'\n'
DECL|variable|x
indent|'        '
name|'x'
op|'='
number|'1.0'
op|'/'
op|'('
number|'2.0'
op|'**'
name|'n'
op|')'
comment|'# tangent value'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
DECL|variable|x
indent|'        '
name|'x'
op|'='
number|'2.0'
op|'**'
op|'('
op|'-'
name|'n'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|angle
dedent|''
name|'angle'
op|'='
name|'math'
op|'.'
name|'atan'
op|'('
name|'x'
op|')'
comment|'# arctangent'
newline|'\n'
DECL|variable|angle2
name|'angle2'
op|'='
name|'angle'
op|'*'
name|'scale'
comment|'# arctangent in FT_Angle units'
newline|'\n'
nl|'\n'
comment|'# determine which integer value for angle gives the best tangent'
nl|'\n'
DECL|variable|lo
name|'lo'
op|'='
name|'int'
op|'('
name|'angle2'
op|')'
newline|'\n'
DECL|variable|hi
name|'hi'
op|'='
name|'lo'
op|'+'
number|'1'
newline|'\n'
DECL|variable|tlo
name|'tlo'
op|'='
name|'math'
op|'.'
name|'tan'
op|'('
name|'lo'
op|'/'
name|'scale'
op|')'
newline|'\n'
DECL|variable|thi
name|'thi'
op|'='
name|'math'
op|'.'
name|'tan'
op|'('
name|'hi'
op|'/'
name|'scale'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|errlo
name|'errlo'
op|'='
name|'abs'
op|'('
name|'tlo'
op|'-'
name|'x'
op|')'
newline|'\n'
DECL|variable|errhi
name|'errhi'
op|'='
name|'abs'
op|'('
name|'thi'
op|'-'
name|'x'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|angle2
name|'angle2'
op|'='
name|'hi'
newline|'\n'
name|'if'
name|'errlo'
op|'<'
name|'errhi'
op|':'
newline|'\n'
DECL|variable|angle2
indent|'        '
name|'angle2'
op|'='
name|'lo'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'angle2'
op|'<='
number|'0'
op|':'
newline|'\n'
indent|'        '
name|'break'
newline|'\n'
nl|'\n'
dedent|''
name|'sys'
op|'.'
name|'stdout'
op|'.'
name|'write'
op|'('
name|'comma'
op|'+'
name|'repr'
op|'('
name|'int'
op|'('
name|'angle2'
op|')'
op|')'
op|')'
newline|'\n'
DECL|variable|comma
name|'comma'
op|'='
string|'", "'
newline|'\n'
nl|'\n'
DECL|variable|shrink
name|'shrink'
op|'='
name|'shrink'
op|'*'
name|'math'
op|'.'
name|'cos'
op|'('
name|'angle2'
op|'/'
name|'scale'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
name|'print'
newline|'\n'
name|'print'
string|'"shrink factor    = "'
op|'+'
name|'repr'
op|'('
name|'shrink'
op|')'
newline|'\n'
name|'print'
string|'"shrink factor 2  = "'
op|'+'
name|'repr'
op|'('
name|'shrink'
op|'*'
op|'('
number|'2.0'
op|'**'
number|'32'
op|')'
op|')'
newline|'\n'
name|'print'
string|'"expansion factor = "'
op|'+'
name|'repr'
op|'('
number|'1'
op|'/'
name|'shrink'
op|')'
newline|'\n'
name|'print'
string|'""'
newline|'\n'
nl|'\n'
endmarker|''
end_unit
