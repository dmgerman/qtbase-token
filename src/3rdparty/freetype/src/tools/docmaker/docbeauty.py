begin_unit
comment|'#!/usr/bin/env python'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#  DocBeauty (c) 2003, 2004, 2008 David Turner <david@freetype.org>'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# This program is used to beautify the documentation comments used'
nl|'\n'
comment|'# in the FreeType 2 public headers.'
nl|'\n'
comment|'#'
nl|'\n'
nl|'\n'
name|'from'
name|'sources'
name|'import'
op|'*'
newline|'\n'
name|'from'
name|'content'
name|'import'
op|'*'
newline|'\n'
name|'from'
name|'utils'
name|'import'
op|'*'
newline|'\n'
nl|'\n'
name|'import'
name|'utils'
newline|'\n'
nl|'\n'
name|'import'
name|'sys'
op|','
name|'os'
op|','
name|'time'
op|','
name|'string'
op|','
name|'getopt'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|content_processor
name|'content_processor'
op|'='
name|'ContentProcessor'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|beautify_block
name|'def'
name|'beautify_block'
op|'('
name|'block'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'block'
op|'.'
name|'content'
op|':'
newline|'\n'
indent|'        '
name|'content_processor'
op|'.'
name|'reset'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'markups'
op|'='
name|'content_processor'
op|'.'
name|'process_content'
op|'('
name|'block'
op|'.'
name|'content'
op|')'
newline|'\n'
name|'text'
op|'='
op|'['
op|']'
newline|'\n'
name|'first'
op|'='
number|'1'
newline|'\n'
nl|'\n'
name|'for'
name|'markup'
name|'in'
name|'markups'
op|':'
newline|'\n'
indent|'            '
name|'text'
op|'.'
name|'extend'
op|'('
name|'markup'
op|'.'
name|'beautify'
op|'('
name|'first'
op|')'
op|')'
newline|'\n'
name|'first'
op|'='
number|'0'
newline|'\n'
nl|'\n'
comment|'# now beautify the documentation "borders" themselves'
nl|'\n'
dedent|''
name|'lines'
op|'='
op|'['
string|'" /*************************************************************************"'
op|']'
newline|'\n'
name|'for'
name|'l'
name|'in'
name|'text'
op|':'
newline|'\n'
indent|'            '
name|'lines'
op|'.'
name|'append'
op|'('
string|'"  *"'
op|'+'
name|'l'
op|')'
newline|'\n'
dedent|''
name|'lines'
op|'.'
name|'append'
op|'('
string|'"  */"'
op|')'
newline|'\n'
nl|'\n'
name|'block'
op|'.'
name|'lines'
op|'='
name|'lines'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|usage
dedent|''
dedent|''
name|'def'
name|'usage'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'print'
string|'"\\nDocBeauty 0.1 Usage information\\n"'
newline|'\n'
name|'print'
string|'"  docbeauty [options] file1 [file2 ...]\\n"'
newline|'\n'
name|'print'
string|'"using the following options:\\n"'
newline|'\n'
name|'print'
string|'"  -h : print this page"'
newline|'\n'
name|'print'
string|'"  -b : backup original files with the \'orig\' extension"'
newline|'\n'
name|'print'
string|'""'
newline|'\n'
name|'print'
string|'"  --backup : same as -b"'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|main
dedent|''
name|'def'
name|'main'
op|'('
name|'argv'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""main program loop"""'
newline|'\n'
nl|'\n'
name|'global'
name|'output_dir'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'opts'
op|','
name|'args'
op|'='
name|'getopt'
op|'.'
name|'getopt'
op|'('
name|'sys'
op|'.'
name|'argv'
op|'['
number|'1'
op|':'
op|']'
op|','
string|'"hb"'
op|','
op|'['
string|'"help"'
op|','
string|'"backup"'
op|']'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'getopt'
op|'.'
name|'GetoptError'
op|':'
newline|'\n'
indent|'        '
name|'usage'
op|'('
op|')'
newline|'\n'
name|'sys'
op|'.'
name|'exit'
op|'('
number|'2'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'args'
op|'=='
op|'['
op|']'
op|':'
newline|'\n'
indent|'        '
name|'usage'
op|'('
op|')'
newline|'\n'
name|'sys'
op|'.'
name|'exit'
op|'('
number|'1'
op|')'
newline|'\n'
nl|'\n'
comment|'# process options'
nl|'\n'
comment|'#'
nl|'\n'
dedent|''
name|'output_dir'
op|'='
name|'None'
newline|'\n'
name|'do_backup'
op|'='
name|'None'
newline|'\n'
nl|'\n'
name|'for'
name|'opt'
name|'in'
name|'opts'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'opt'
op|'['
number|'0'
op|']'
name|'in'
op|'('
string|'"-h"'
op|','
string|'"--help"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'usage'
op|'('
op|')'
newline|'\n'
name|'sys'
op|'.'
name|'exit'
op|'('
number|'0'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'opt'
op|'['
number|'0'
op|']'
name|'in'
op|'('
string|'"-b"'
op|','
string|'"--backup"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'do_backup'
op|'='
number|'1'
newline|'\n'
nl|'\n'
comment|'# create context and processor'
nl|'\n'
dedent|''
dedent|''
name|'source_processor'
op|'='
name|'SourceProcessor'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# retrieve the list of files to process'
nl|'\n'
name|'file_list'
op|'='
name|'make_file_list'
op|'('
name|'args'
op|')'
newline|'\n'
name|'for'
name|'filename'
name|'in'
name|'file_list'
op|':'
newline|'\n'
indent|'        '
name|'source_processor'
op|'.'
name|'parse_file'
op|'('
name|'filename'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'block'
name|'in'
name|'source_processor'
op|'.'
name|'blocks'
op|':'
newline|'\n'
indent|'            '
name|'beautify_block'
op|'('
name|'block'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'new_name'
op|'='
name|'filename'
op|'+'
string|'".new"'
newline|'\n'
name|'ok'
op|'='
name|'None'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'file'
op|'='
name|'open'
op|'('
name|'new_name'
op|','
string|'"wt"'
op|')'
newline|'\n'
name|'for'
name|'block'
name|'in'
name|'source_processor'
op|'.'
name|'blocks'
op|':'
newline|'\n'
indent|'                '
name|'for'
name|'line'
name|'in'
name|'block'
op|'.'
name|'lines'
op|':'
newline|'\n'
indent|'                    '
name|'file'
op|'.'
name|'write'
op|'('
name|'line'
op|')'
newline|'\n'
name|'file'
op|'.'
name|'write'
op|'('
string|'"\\n"'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'file'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'            '
name|'ok'
op|'='
number|'0'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'# if called from the command line'
nl|'\n'
comment|'#'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'if'
name|'__name__'
op|'=='
string|"'__main__'"
op|':'
newline|'\n'
indent|'    '
name|'main'
op|'('
name|'sys'
op|'.'
name|'argv'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'# eof'
nl|'\n'
dedent|''
endmarker|''
end_unit
