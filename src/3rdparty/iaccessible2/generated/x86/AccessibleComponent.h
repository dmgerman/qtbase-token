begin_unit
begin_comment
comment|/* this ALWAYS GENERATED file contains the definitions for the interfaces */
end_comment
begin_comment
comment|/* File created by MIDL compiler version 7.00.0555 */
end_comment
begin_comment
comment|/* at Thu Mar 08 14:53:52 2012  */
end_comment
begin_comment
comment|/* Compiler settings for AccessibleComponent.idl:     Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 7.00.0555      protocol : dce , ms_ext, c_ext, robust     error checks: allocation ref bounds_check enum stub_data      VC __declspec() decoration level:           __declspec(uuid()), __declspec(selectany), __declspec(novtable)          DECLSPEC_UUID(), MIDL_INTERFACE() */
end_comment
begin_comment
comment|/* @@MIDL_FILE_HEADING(  ) */
end_comment
begin_pragma
pragma|#
directive|pragma
name|warning
name|(
name|disable
name|:
name|4049
name|)
end_pragma
begin_comment
comment|/* more than 64k source lines */
end_comment
begin_comment
comment|/* verify that the<rpcndr.h> version is high enough to compile this file*/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|__REQUIRED_RPCNDR_H_VERSION__
end_ifndef
begin_define
DECL|macro|__REQUIRED_RPCNDR_H_VERSION__
define|#
directive|define
name|__REQUIRED_RPCNDR_H_VERSION__
value|475
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_include
include|#
directive|include
file|"rpc.h"
end_include
begin_include
include|#
directive|include
file|"rpcndr.h"
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|__RPCNDR_H_VERSION__
end_ifndef
begin_error
error|#
directive|error
error|this stub requires an updated version of<rpcndr.h>
end_error
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// __RPCNDR_H_VERSION__
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|COM_NO_WINDOWS_H
end_ifndef
begin_include
include|#
directive|include
file|"windows.h"
end_include
begin_include
include|#
directive|include
file|"ole2.h"
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/*COM_NO_WINDOWS_H*/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|__AccessibleComponent_h__
end_ifndef
begin_define
DECL|macro|__AccessibleComponent_h__
define|#
directive|define
name|__AccessibleComponent_h__
end_define
begin_if
if|#
directive|if
name|defined
argument_list|(
name|_MSC_VER
argument_list|)
operator|&&
operator|(
name|_MSC_VER
operator|>=
literal|1020
operator|)
end_if
begin_pragma
pragma|#
directive|pragma
name|once
end_pragma
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/* Forward Declarations */
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|__IAccessibleComponent_FWD_DEFINED__
end_ifndef
begin_define
DECL|macro|__IAccessibleComponent_FWD_DEFINED__
define|#
directive|define
name|__IAccessibleComponent_FWD_DEFINED__
end_define
begin_typedef
DECL|typedef|IAccessibleComponent
typedef|typedef
name|interface
name|IAccessibleComponent
name|IAccessibleComponent
typedef|;
end_typedef
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/* __IAccessibleComponent_FWD_DEFINED__ */
end_comment
begin_comment
comment|/* header files for imported files */
end_comment
begin_include
include|#
directive|include
file|"objidl.h"
end_include
begin_include
include|#
directive|include
file|"oaidl.h"
end_include
begin_include
include|#
directive|include
file|"oleacc.h"
end_include
begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef
begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
comment|/* interface __MIDL_itf_AccessibleComponent_0000_0000 */
comment|/* [local] */
DECL|typedef|IA2Color
typedef|typedef
name|long
name|IA2Color
typedef|;
specifier|extern
name|RPC_IF_HANDLE
name|__MIDL_itf_AccessibleComponent_0000_0000_v0_0_c_ifspec
decl_stmt|;
specifier|extern
name|RPC_IF_HANDLE
name|__MIDL_itf_AccessibleComponent_0000_0000_v0_0_s_ifspec
decl_stmt|;
ifndef|#
directive|ifndef
name|__IAccessibleComponent_INTERFACE_DEFINED__
DECL|macro|__IAccessibleComponent_INTERFACE_DEFINED__
define|#
directive|define
name|__IAccessibleComponent_INTERFACE_DEFINED__
comment|/* interface IAccessibleComponent */
comment|/* [uuid][object] */
DECL|variable|IID_IAccessibleComponent
name|EXTERN_C
specifier|const
name|IID
name|IID_IAccessibleComponent
decl_stmt|;
if|#
directive|if
name|defined
argument_list|(
name|__cplusplus
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|CINTERFACE
argument_list|)
name|MIDL_INTERFACE
argument_list|(
literal|"1546D4B0-4C98-4bda-89AE-9A64748BDDE4"
argument_list|)
name|IAccessibleComponent
label|:
name|public
name|IUnknown
block|{
name|public
label|:
name|virtual
comment|/* [propget] */
name|HRESULT
name|STDMETHODCALLTYPE
name|get_locationInParent
parameter_list|(
comment|/* [out] */
name|long
modifier|*
name|x
parameter_list|,
comment|/* [retval][out] */
name|long
modifier|*
name|y
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
comment|/* [propget] */
name|HRESULT
name|STDMETHODCALLTYPE
name|get_foreground
parameter_list|(
comment|/* [retval][out] */
name|IA2Color
modifier|*
name|foreground
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
comment|/* [propget] */
name|HRESULT
name|STDMETHODCALLTYPE
name|get_background
parameter_list|(
comment|/* [retval][out] */
name|IA2Color
modifier|*
name|background
parameter_list|)
init|=
literal|0
function_decl|;
block|}
empty_stmt|;
else|#
directive|else
comment|/* C style interface */
DECL|struct|IAccessibleComponentVtbl
typedef|typedef
struct|struct
name|IAccessibleComponentVtbl
block|{
name|BEGIN_INTERFACE
DECL|member|QueryInterface
name|HRESULT
function_decl|(
name|STDMETHODCALLTYPE
modifier|*
name|QueryInterface
function_decl|)
parameter_list|(
name|IAccessibleComponent
modifier|*
name|This
parameter_list|,
comment|/* [in] */
name|REFIID
name|riid
parameter_list|,
comment|/* [annotation][iid_is][out] */
name|__RPC__deref_out
name|void
modifier|*
modifier|*
name|ppvObject
parameter_list|)
function_decl|;
DECL|member|AddRef
name|ULONG
function_decl|(
name|STDMETHODCALLTYPE
modifier|*
name|AddRef
function_decl|)
parameter_list|(
name|IAccessibleComponent
modifier|*
name|This
parameter_list|)
function_decl|;
DECL|member|Release
name|ULONG
function_decl|(
name|STDMETHODCALLTYPE
modifier|*
name|Release
function_decl|)
parameter_list|(
name|IAccessibleComponent
modifier|*
name|This
parameter_list|)
function_decl|;
DECL|member|get_locationInParent
comment|/* [propget] */
name|HRESULT
function_decl|(
name|STDMETHODCALLTYPE
modifier|*
name|get_locationInParent
function_decl|)
parameter_list|(
name|IAccessibleComponent
modifier|*
name|This
parameter_list|,
comment|/* [out] */
name|long
modifier|*
name|x
parameter_list|,
comment|/* [retval][out] */
name|long
modifier|*
name|y
parameter_list|)
function_decl|;
DECL|member|get_foreground
comment|/* [propget] */
name|HRESULT
function_decl|(
name|STDMETHODCALLTYPE
modifier|*
name|get_foreground
function_decl|)
parameter_list|(
name|IAccessibleComponent
modifier|*
name|This
parameter_list|,
comment|/* [retval][out] */
name|IA2Color
modifier|*
name|foreground
parameter_list|)
function_decl|;
DECL|member|get_background
comment|/* [propget] */
name|HRESULT
function_decl|(
name|STDMETHODCALLTYPE
modifier|*
name|get_background
function_decl|)
parameter_list|(
name|IAccessibleComponent
modifier|*
name|This
parameter_list|,
comment|/* [retval][out] */
name|IA2Color
modifier|*
name|background
parameter_list|)
function_decl|;
name|END_INTERFACE
block|}
DECL|typedef|IAccessibleComponentVtbl
name|IAccessibleComponentVtbl
typedef|;
name|interface
name|IAccessibleComponent
block|{
name|CONST_VTBL
name|struct
name|IAccessibleComponentVtbl
modifier|*
name|lpVtbl
decl_stmt|;
block|}
empty_stmt|;
ifdef|#
directive|ifdef
name|COBJMACROS
DECL|macro|IAccessibleComponent_QueryInterface
define|#
directive|define
name|IAccessibleComponent_QueryInterface
parameter_list|(
name|This
parameter_list|,
name|riid
parameter_list|,
name|ppvObject
parameter_list|)
define|\
value|( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
DECL|macro|IAccessibleComponent_AddRef
define|#
directive|define
name|IAccessibleComponent_AddRef
parameter_list|(
name|This
parameter_list|)
define|\
value|( (This)->lpVtbl -> AddRef(This) )
DECL|macro|IAccessibleComponent_Release
define|#
directive|define
name|IAccessibleComponent_Release
parameter_list|(
name|This
parameter_list|)
define|\
value|( (This)->lpVtbl -> Release(This) )
DECL|macro|IAccessibleComponent_get_locationInParent
define|#
directive|define
name|IAccessibleComponent_get_locationInParent
parameter_list|(
name|This
parameter_list|,
name|x
parameter_list|,
name|y
parameter_list|)
define|\
value|( (This)->lpVtbl -> get_locationInParent(This,x,y) )
DECL|macro|IAccessibleComponent_get_foreground
define|#
directive|define
name|IAccessibleComponent_get_foreground
parameter_list|(
name|This
parameter_list|,
name|foreground
parameter_list|)
define|\
value|( (This)->lpVtbl -> get_foreground(This,foreground) )
DECL|macro|IAccessibleComponent_get_background
define|#
directive|define
name|IAccessibleComponent_get_background
parameter_list|(
name|This
parameter_list|,
name|background
parameter_list|)
define|\
value|( (This)->lpVtbl -> get_background(This,background) )
endif|#
directive|endif
comment|/* COBJMACROS */
endif|#
directive|endif
comment|/* C style interface */
endif|#
directive|endif
comment|/* __IAccessibleComponent_INTERFACE_DEFINED__ */
comment|/* Additional Prototypes for ALL interfaces */
comment|/* end of Additional Prototypes */
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern
begin_endif
endif|#
directive|endif
end_endif
begin_endif
endif|#
directive|endif
end_endif
end_unit
