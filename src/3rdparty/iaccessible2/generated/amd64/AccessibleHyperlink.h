begin_unit
begin_comment
comment|/* this ALWAYS GENERATED file contains the definitions for the interfaces */
end_comment
begin_comment
comment|/* File created by MIDL compiler version 7.00.0555 */
end_comment
begin_comment
comment|/* at Thu Mar 08 14:53:57 2012  */
end_comment
begin_comment
comment|/* Compiler settings for AccessibleHyperlink.idl:     Oicf, W1, Zp8, env=Win64 (32b run), target_arch=AMD64 7.00.0555      protocol : dce , ms_ext, c_ext, robust     error checks: allocation ref bounds_check enum stub_data      VC __declspec() decoration level:           __declspec(uuid()), __declspec(selectany), __declspec(novtable)          DECLSPEC_UUID(), MIDL_INTERFACE() */
end_comment
begin_comment
comment|/* @@MIDL_FILE_HEADING(  ) */
end_comment
begin_pragma
pragma|#
directive|pragma
name|warning
name|(
name|disable
name|:
name|4049
name|)
end_pragma
begin_comment
comment|/* more than 64k source lines */
end_comment
begin_comment
comment|/* verify that the<rpcndr.h> version is high enough to compile this file*/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|__REQUIRED_RPCNDR_H_VERSION__
end_ifndef
begin_define
DECL|macro|__REQUIRED_RPCNDR_H_VERSION__
define|#
directive|define
name|__REQUIRED_RPCNDR_H_VERSION__
value|475
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_include
include|#
directive|include
file|"rpc.h"
end_include
begin_include
include|#
directive|include
file|"rpcndr.h"
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|__RPCNDR_H_VERSION__
end_ifndef
begin_error
error|#
directive|error
error|this stub requires an updated version of<rpcndr.h>
end_error
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// __RPCNDR_H_VERSION__
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|COM_NO_WINDOWS_H
end_ifndef
begin_include
include|#
directive|include
file|"windows.h"
end_include
begin_include
include|#
directive|include
file|"ole2.h"
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/*COM_NO_WINDOWS_H*/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|__AccessibleHyperlink_h__
end_ifndef
begin_define
DECL|macro|__AccessibleHyperlink_h__
define|#
directive|define
name|__AccessibleHyperlink_h__
end_define
begin_if
if|#
directive|if
name|defined
argument_list|(
name|_MSC_VER
argument_list|)
operator|&&
operator|(
name|_MSC_VER
operator|>=
literal|1020
operator|)
end_if
begin_pragma
pragma|#
directive|pragma
name|once
end_pragma
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/* Forward Declarations */
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|__IAccessibleHyperlink_FWD_DEFINED__
end_ifndef
begin_define
DECL|macro|__IAccessibleHyperlink_FWD_DEFINED__
define|#
directive|define
name|__IAccessibleHyperlink_FWD_DEFINED__
end_define
begin_typedef
DECL|typedef|IAccessibleHyperlink
typedef|typedef
name|interface
name|IAccessibleHyperlink
name|IAccessibleHyperlink
typedef|;
end_typedef
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/* __IAccessibleHyperlink_FWD_DEFINED__ */
end_comment
begin_comment
comment|/* header files for imported files */
end_comment
begin_include
include|#
directive|include
file|"objidl.h"
end_include
begin_include
include|#
directive|include
file|"oaidl.h"
end_include
begin_include
include|#
directive|include
file|"oleacc.h"
end_include
begin_include
include|#
directive|include
file|"AccessibleAction.h"
end_include
begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef
begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
ifndef|#
directive|ifndef
name|__IAccessibleHyperlink_INTERFACE_DEFINED__
DECL|macro|__IAccessibleHyperlink_INTERFACE_DEFINED__
define|#
directive|define
name|__IAccessibleHyperlink_INTERFACE_DEFINED__
comment|/* interface IAccessibleHyperlink */
comment|/* [uuid][object] */
DECL|variable|IID_IAccessibleHyperlink
name|EXTERN_C
specifier|const
name|IID
name|IID_IAccessibleHyperlink
decl_stmt|;
if|#
directive|if
name|defined
argument_list|(
name|__cplusplus
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|CINTERFACE
argument_list|)
name|MIDL_INTERFACE
argument_list|(
literal|"01C20F2B-3DD2-400f-949F-AD00BDAB1D41"
argument_list|)
name|IAccessibleHyperlink
label|:
name|public
name|IAccessibleAction
block|{
name|public
label|:
name|virtual
comment|/* [propget] */
name|HRESULT
name|STDMETHODCALLTYPE
name|get_anchor
parameter_list|(
comment|/* [in] */
name|long
name|index
parameter_list|,
comment|/* [retval][out] */
name|VARIANT
modifier|*
name|anchor
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
comment|/* [propget] */
name|HRESULT
name|STDMETHODCALLTYPE
name|get_anchorTarget
parameter_list|(
comment|/* [in] */
name|long
name|index
parameter_list|,
comment|/* [retval][out] */
name|VARIANT
modifier|*
name|anchorTarget
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
comment|/* [propget] */
name|HRESULT
name|STDMETHODCALLTYPE
name|get_startIndex
parameter_list|(
comment|/* [retval][out] */
name|long
modifier|*
name|index
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
comment|/* [propget] */
name|HRESULT
name|STDMETHODCALLTYPE
name|get_endIndex
parameter_list|(
comment|/* [retval][out] */
name|long
modifier|*
name|index
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
comment|/* [propget] */
name|HRESULT
name|STDMETHODCALLTYPE
name|get_valid
parameter_list|(
comment|/* [retval][out] */
name|boolean
modifier|*
name|valid
parameter_list|)
init|=
literal|0
function_decl|;
block|}
empty_stmt|;
else|#
directive|else
comment|/* C style interface */
DECL|struct|IAccessibleHyperlinkVtbl
typedef|typedef
struct|struct
name|IAccessibleHyperlinkVtbl
block|{
name|BEGIN_INTERFACE
DECL|member|QueryInterface
name|HRESULT
function_decl|(
name|STDMETHODCALLTYPE
modifier|*
name|QueryInterface
function_decl|)
parameter_list|(
name|IAccessibleHyperlink
modifier|*
name|This
parameter_list|,
comment|/* [in] */
name|REFIID
name|riid
parameter_list|,
comment|/* [annotation][iid_is][out] */
name|__RPC__deref_out
name|void
modifier|*
modifier|*
name|ppvObject
parameter_list|)
function_decl|;
DECL|member|AddRef
name|ULONG
function_decl|(
name|STDMETHODCALLTYPE
modifier|*
name|AddRef
function_decl|)
parameter_list|(
name|IAccessibleHyperlink
modifier|*
name|This
parameter_list|)
function_decl|;
DECL|member|Release
name|ULONG
function_decl|(
name|STDMETHODCALLTYPE
modifier|*
name|Release
function_decl|)
parameter_list|(
name|IAccessibleHyperlink
modifier|*
name|This
parameter_list|)
function_decl|;
DECL|member|nActions
name|HRESULT
function_decl|(
name|STDMETHODCALLTYPE
modifier|*
name|nActions
function_decl|)
parameter_list|(
name|IAccessibleHyperlink
modifier|*
name|This
parameter_list|,
comment|/* [retval][out] */
name|long
modifier|*
name|nActions
parameter_list|)
function_decl|;
DECL|member|doAction
name|HRESULT
function_decl|(
name|STDMETHODCALLTYPE
modifier|*
name|doAction
function_decl|)
parameter_list|(
name|IAccessibleHyperlink
modifier|*
name|This
parameter_list|,
comment|/* [in] */
name|long
name|actionIndex
parameter_list|)
function_decl|;
DECL|member|get_description
comment|/* [propget] */
name|HRESULT
function_decl|(
name|STDMETHODCALLTYPE
modifier|*
name|get_description
function_decl|)
parameter_list|(
name|IAccessibleHyperlink
modifier|*
name|This
parameter_list|,
comment|/* [in] */
name|long
name|actionIndex
parameter_list|,
comment|/* [retval][out] */
name|BSTR
modifier|*
name|description
parameter_list|)
function_decl|;
DECL|member|get_keyBinding
comment|/* [propget] */
name|HRESULT
function_decl|(
name|STDMETHODCALLTYPE
modifier|*
name|get_keyBinding
function_decl|)
parameter_list|(
name|IAccessibleHyperlink
modifier|*
name|This
parameter_list|,
comment|/* [in] */
name|long
name|actionIndex
parameter_list|,
comment|/* [in] */
name|long
name|nMaxBindings
parameter_list|,
comment|/* [length_is][length_is][size_is][size_is][out] */
name|BSTR
modifier|*
modifier|*
name|keyBindings
parameter_list|,
comment|/* [retval][out] */
name|long
modifier|*
name|nBindings
parameter_list|)
function_decl|;
DECL|member|get_name
comment|/* [propget] */
name|HRESULT
function_decl|(
name|STDMETHODCALLTYPE
modifier|*
name|get_name
function_decl|)
parameter_list|(
name|IAccessibleHyperlink
modifier|*
name|This
parameter_list|,
comment|/* [in] */
name|long
name|actionIndex
parameter_list|,
comment|/* [retval][out] */
name|BSTR
modifier|*
name|name
parameter_list|)
function_decl|;
DECL|member|get_localizedName
comment|/* [propget] */
name|HRESULT
function_decl|(
name|STDMETHODCALLTYPE
modifier|*
name|get_localizedName
function_decl|)
parameter_list|(
name|IAccessibleHyperlink
modifier|*
name|This
parameter_list|,
comment|/* [in] */
name|long
name|actionIndex
parameter_list|,
comment|/* [retval][out] */
name|BSTR
modifier|*
name|localizedName
parameter_list|)
function_decl|;
DECL|member|get_anchor
comment|/* [propget] */
name|HRESULT
function_decl|(
name|STDMETHODCALLTYPE
modifier|*
name|get_anchor
function_decl|)
parameter_list|(
name|IAccessibleHyperlink
modifier|*
name|This
parameter_list|,
comment|/* [in] */
name|long
name|index
parameter_list|,
comment|/* [retval][out] */
name|VARIANT
modifier|*
name|anchor
parameter_list|)
function_decl|;
DECL|member|get_anchorTarget
comment|/* [propget] */
name|HRESULT
function_decl|(
name|STDMETHODCALLTYPE
modifier|*
name|get_anchorTarget
function_decl|)
parameter_list|(
name|IAccessibleHyperlink
modifier|*
name|This
parameter_list|,
comment|/* [in] */
name|long
name|index
parameter_list|,
comment|/* [retval][out] */
name|VARIANT
modifier|*
name|anchorTarget
parameter_list|)
function_decl|;
DECL|member|get_startIndex
comment|/* [propget] */
name|HRESULT
function_decl|(
name|STDMETHODCALLTYPE
modifier|*
name|get_startIndex
function_decl|)
parameter_list|(
name|IAccessibleHyperlink
modifier|*
name|This
parameter_list|,
comment|/* [retval][out] */
name|long
modifier|*
name|index
parameter_list|)
function_decl|;
DECL|member|get_endIndex
comment|/* [propget] */
name|HRESULT
function_decl|(
name|STDMETHODCALLTYPE
modifier|*
name|get_endIndex
function_decl|)
parameter_list|(
name|IAccessibleHyperlink
modifier|*
name|This
parameter_list|,
comment|/* [retval][out] */
name|long
modifier|*
name|index
parameter_list|)
function_decl|;
DECL|member|get_valid
comment|/* [propget] */
name|HRESULT
function_decl|(
name|STDMETHODCALLTYPE
modifier|*
name|get_valid
function_decl|)
parameter_list|(
name|IAccessibleHyperlink
modifier|*
name|This
parameter_list|,
comment|/* [retval][out] */
name|boolean
modifier|*
name|valid
parameter_list|)
function_decl|;
name|END_INTERFACE
block|}
DECL|typedef|IAccessibleHyperlinkVtbl
name|IAccessibleHyperlinkVtbl
typedef|;
name|interface
name|IAccessibleHyperlink
block|{
name|CONST_VTBL
name|struct
name|IAccessibleHyperlinkVtbl
modifier|*
name|lpVtbl
decl_stmt|;
block|}
empty_stmt|;
ifdef|#
directive|ifdef
name|COBJMACROS
DECL|macro|IAccessibleHyperlink_QueryInterface
define|#
directive|define
name|IAccessibleHyperlink_QueryInterface
parameter_list|(
name|This
parameter_list|,
name|riid
parameter_list|,
name|ppvObject
parameter_list|)
define|\
value|( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
DECL|macro|IAccessibleHyperlink_AddRef
define|#
directive|define
name|IAccessibleHyperlink_AddRef
parameter_list|(
name|This
parameter_list|)
define|\
value|( (This)->lpVtbl -> AddRef(This) )
DECL|macro|IAccessibleHyperlink_Release
define|#
directive|define
name|IAccessibleHyperlink_Release
parameter_list|(
name|This
parameter_list|)
define|\
value|( (This)->lpVtbl -> Release(This) )
DECL|macro|IAccessibleHyperlink_nActions
define|#
directive|define
name|IAccessibleHyperlink_nActions
parameter_list|(
name|This
parameter_list|,
name|nActions
parameter_list|)
define|\
value|( (This)->lpVtbl -> nActions(This,nActions) )
DECL|macro|IAccessibleHyperlink_doAction
define|#
directive|define
name|IAccessibleHyperlink_doAction
parameter_list|(
name|This
parameter_list|,
name|actionIndex
parameter_list|)
define|\
value|( (This)->lpVtbl -> doAction(This,actionIndex) )
DECL|macro|IAccessibleHyperlink_get_description
define|#
directive|define
name|IAccessibleHyperlink_get_description
parameter_list|(
name|This
parameter_list|,
name|actionIndex
parameter_list|,
name|description
parameter_list|)
define|\
value|( (This)->lpVtbl -> get_description(This,actionIndex,description) )
DECL|macro|IAccessibleHyperlink_get_keyBinding
define|#
directive|define
name|IAccessibleHyperlink_get_keyBinding
parameter_list|(
name|This
parameter_list|,
name|actionIndex
parameter_list|,
name|nMaxBindings
parameter_list|,
name|keyBindings
parameter_list|,
name|nBindings
parameter_list|)
define|\
value|( (This)->lpVtbl -> get_keyBinding(This,actionIndex,nMaxBindings,keyBindings,nBindings) )
DECL|macro|IAccessibleHyperlink_get_name
define|#
directive|define
name|IAccessibleHyperlink_get_name
parameter_list|(
name|This
parameter_list|,
name|actionIndex
parameter_list|,
name|name
parameter_list|)
define|\
value|( (This)->lpVtbl -> get_name(This,actionIndex,name) )
DECL|macro|IAccessibleHyperlink_get_localizedName
define|#
directive|define
name|IAccessibleHyperlink_get_localizedName
parameter_list|(
name|This
parameter_list|,
name|actionIndex
parameter_list|,
name|localizedName
parameter_list|)
define|\
value|( (This)->lpVtbl -> get_localizedName(This,actionIndex,localizedName) )
DECL|macro|IAccessibleHyperlink_get_anchor
define|#
directive|define
name|IAccessibleHyperlink_get_anchor
parameter_list|(
name|This
parameter_list|,
name|index
parameter_list|,
name|anchor
parameter_list|)
define|\
value|( (This)->lpVtbl -> get_anchor(This,index,anchor) )
DECL|macro|IAccessibleHyperlink_get_anchorTarget
define|#
directive|define
name|IAccessibleHyperlink_get_anchorTarget
parameter_list|(
name|This
parameter_list|,
name|index
parameter_list|,
name|anchorTarget
parameter_list|)
define|\
value|( (This)->lpVtbl -> get_anchorTarget(This,index,anchorTarget) )
DECL|macro|IAccessibleHyperlink_get_startIndex
define|#
directive|define
name|IAccessibleHyperlink_get_startIndex
parameter_list|(
name|This
parameter_list|,
name|index
parameter_list|)
define|\
value|( (This)->lpVtbl -> get_startIndex(This,index) )
DECL|macro|IAccessibleHyperlink_get_endIndex
define|#
directive|define
name|IAccessibleHyperlink_get_endIndex
parameter_list|(
name|This
parameter_list|,
name|index
parameter_list|)
define|\
value|( (This)->lpVtbl -> get_endIndex(This,index) )
DECL|macro|IAccessibleHyperlink_get_valid
define|#
directive|define
name|IAccessibleHyperlink_get_valid
parameter_list|(
name|This
parameter_list|,
name|valid
parameter_list|)
define|\
value|( (This)->lpVtbl -> get_valid(This,valid) )
endif|#
directive|endif
comment|/* COBJMACROS */
endif|#
directive|endif
comment|/* C style interface */
endif|#
directive|endif
comment|/* __IAccessibleHyperlink_INTERFACE_DEFINED__ */
comment|/* Additional Prototypes for ALL interfaces */
name|unsigned
name|long
name|__RPC_USER
name|VARIANT_UserSize
parameter_list|(
name|unsigned
name|long
modifier|*
parameter_list|,
name|unsigned
name|long
parameter_list|,
name|VARIANT
modifier|*
parameter_list|)
function_decl|;
name|unsigned
name|char
modifier|*
name|__RPC_USER
name|VARIANT_UserMarshal
parameter_list|(
name|unsigned
name|long
modifier|*
parameter_list|,
name|unsigned
name|char
modifier|*
parameter_list|,
name|VARIANT
modifier|*
parameter_list|)
function_decl|;
name|unsigned
name|char
modifier|*
name|__RPC_USER
name|VARIANT_UserUnmarshal
parameter_list|(
name|unsigned
name|long
modifier|*
parameter_list|,
name|unsigned
name|char
modifier|*
parameter_list|,
name|VARIANT
modifier|*
parameter_list|)
function_decl|;
name|void
name|__RPC_USER
name|VARIANT_UserFree
parameter_list|(
name|unsigned
name|long
modifier|*
parameter_list|,
name|VARIANT
modifier|*
parameter_list|)
function_decl|;
comment|/* end of Additional Prototypes */
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern
begin_endif
endif|#
directive|endif
end_endif
begin_endif
endif|#
directive|endif
end_endif
end_unit
