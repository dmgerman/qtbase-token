begin_unit
begin_comment
comment|/*  * Copyright (C) 2012 Apple Inc. All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. Redistributions in binary form must reproduce the above copyright  *    notice, this list of conditions and the following disclaimer in the  *    documentation and/or other materials provided with the distribution.  *  * THIS SOFTWARE IS PROVIDED BY APPLE, INC. ``AS IS'' AND ANY  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR  * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE, INC. OR  * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,  * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,  * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR  * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY  * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  */
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|THIRD_PARTY_COMPILER_ARRAY_BOUNDS_CLAMPER_H_
end_ifndef
begin_define
DECL|macro|THIRD_PARTY_COMPILER_ARRAY_BOUNDS_CLAMPER_H_
define|#
directive|define
name|THIRD_PARTY_COMPILER_ARRAY_BOUNDS_CLAMPER_H_
end_define
begin_include
include|#
directive|include
file|"GLSLANG/ShaderLang.h"
end_include
begin_include
include|#
directive|include
file|"compiler/translator/InfoSink.h"
end_include
begin_include
include|#
directive|include
file|"compiler/translator/intermediate.h"
end_include
begin_decl_stmt
name|class
name|ArrayBoundsClamper
block|{
name|public
label|:
name|ArrayBoundsClamper
argument_list|()
expr_stmt|;
comment|// Must be set before compiling any shaders to ensure consistency
comment|// between the translated shaders and any necessary prequel.
name|void
name|SetClampingStrategy
parameter_list|(
name|ShArrayIndexClampingStrategy
name|clampingStrategy
parameter_list|)
function_decl|;
comment|// Marks nodes in the tree that index arrays indirectly as
comment|// requiring clamping.
name|void
name|MarkIndirectArrayBoundsForClamping
parameter_list|(
name|TIntermNode
modifier|*
name|root
parameter_list|)
function_decl|;
comment|// If necessary, output array clamp function source into the shader source.
name|void
name|OutputClampingFunctionDefinition
argument_list|(
name|TInfoSinkBase
operator|&
name|out
argument_list|)
decl|const
decl_stmt|;
name|void
name|Cleanup
parameter_list|()
block|{
name|mArrayBoundsClampDefinitionNeeded
operator|=
name|false
expr_stmt|;
block|}
name|private
label|:
name|bool
name|GetArrayBoundsClampDefinitionNeeded
argument_list|()
specifier|const
block|{
return|return
name|mArrayBoundsClampDefinitionNeeded
return|;
block|}
name|void
name|SetArrayBoundsClampDefinitionNeeded
parameter_list|()
block|{
name|mArrayBoundsClampDefinitionNeeded
operator|=
name|true
expr_stmt|;
block|}
name|ShArrayIndexClampingStrategy
name|mClampingStrategy
decl_stmt|;
name|bool
name|mArrayBoundsClampDefinitionNeeded
decl_stmt|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// THIRD_PARTY_COMPILER_ARRAY_BOUNDS_CLAMPER_H_
end_comment
end_unit
