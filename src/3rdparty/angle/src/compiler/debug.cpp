begin_unit
begin_comment
comment|//
end_comment
begin_comment
comment|// Copyright (c) 2002-2010 The ANGLE Project Authors. All rights reserved.
end_comment
begin_comment
comment|// Use of this source code is governed by a BSD-style license that can be
end_comment
begin_comment
comment|// found in the LICENSE file.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// debug.cpp: Debugging utilities.
end_comment
begin_include
include|#
directive|include
file|"compiler/debug.h"
end_include
begin_include
include|#
directive|include
file|<stdarg.h>
end_include
begin_include
include|#
directive|include
file|<stdio.h>
end_include
begin_include
include|#
directive|include
file|"compiler/InitializeParseContext.h"
end_include
begin_include
include|#
directive|include
file|"compiler/ParseHelper.h"
end_include
begin_decl_stmt
DECL|variable|kTraceBufferLen
specifier|static
specifier|const
name|int
name|kTraceBufferLen
init|=
literal|1024
decl_stmt|;
end_decl_stmt
begin_ifdef
ifdef|#
directive|ifdef
name|TRACE_ENABLED
end_ifdef
begin_extern
extern|extern
literal|"C"
block|{
DECL|function|Trace
name|void
name|Trace
parameter_list|(
specifier|const
name|char
modifier|*
name|format
parameter_list|,
modifier|...
parameter_list|)
block|{
if|if
condition|(
operator|!
name|format
condition|)
return|return;
name|TParseContext
modifier|*
name|parseContext
init|=
name|GetGlobalParseContext
argument_list|()
decl_stmt|;
if|if
condition|(
name|parseContext
condition|)
block|{
name|char
name|buf
index|[
name|kTraceBufferLen
index|]
decl_stmt|;
name|va_list
name|args
decl_stmt|;
name|va_start
argument_list|(
name|args
argument_list|,
name|format
argument_list|)
expr_stmt|;
name|vsnprintf
argument_list|(
name|buf
argument_list|,
name|kTraceBufferLen
argument_list|,
name|format
argument_list|,
name|args
argument_list|)
expr_stmt|;
name|va_end
argument_list|(
name|args
argument_list|)
expr_stmt|;
name|parseContext
operator|->
name|trace
argument_list|(
name|buf
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_extern
begin_comment
comment|// extern "C"
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// TRACE_ENABLED
end_comment
end_unit
