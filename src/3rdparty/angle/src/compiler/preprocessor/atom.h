begin_unit
begin_comment
comment|/****************************************************************************\ Copyright (c) 2002, NVIDIA Corporation.  NVIDIA Corporation("NVIDIA") supplies this software to you in consideration of your agreement to the following terms, and your use, installation, modification or redistribution of this NVIDIA software constitutes acceptance of these terms.  If you do not agree with these terms, please do not use, install, modify or redistribute this NVIDIA software.  In consideration of your agreement to abide by the following terms, and subject to these terms, NVIDIA grants you a personal, non-exclusive license, under NVIDIA's copyrights in this original NVIDIA software (the "NVIDIA Software"), to use, reproduce, modify and redistribute the NVIDIA Software, with or without modifications, in source and/or binary forms; provided that if you redistribute the NVIDIA Software, you must retain the copyright notice of NVIDIA, this notice and the following text and disclaimers in all such redistributions of the NVIDIA Software. Neither the name, trademarks, service marks nor logos of NVIDIA Corporation may be used to endorse or promote products derived from the NVIDIA Software without specific prior written permission from NVIDIA. Except as expressly stated in this notice, no other rights or licenses express or implied, are granted by NVIDIA herein, including but not limited to any patent rights that may be infringed by your derivative works or by other works in which the NVIDIA Software may be incorporated. No hardware is licensed hereunder.   THE NVIDIA SOFTWARE IS BEING PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION, WARRANTIES OR CONDITIONS OF TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR ITS USE AND OPERATION EITHER ALONE OR IN COMBINATION WITH OTHER PRODUCTS.  IN NO EVENT SHALL NVIDIA BE LIABLE FOR ANY SPECIAL, INDIRECT, INCIDENTAL, EXEMPLARY, CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, LOST PROFITS; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) OR ARISING IN ANY WAY OUT OF THE USE, REPRODUCTION, MODIFICATION AND/OR DISTRIBUTION OF THE NVIDIA SOFTWARE, HOWEVER CAUSED AND WHETHER UNDER THEORY OF CONTRACT, TORT (INCLUDING NEGLIGENCE), STRICT LIABILITY OR OTHERWISE, EVEN IF NVIDIA HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \****************************************************************************/
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// atom.h
end_comment
begin_comment
comment|//
end_comment
begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|__ATOM_H
argument_list|)
end_if
begin_define
DECL|macro|__ATOM_H
define|#
directive|define
name|__ATOM_H
value|1
end_define
begin_typedef
DECL|typedef|AtomTable
typedef|typedef
name|struct
name|AtomTable_Rec
name|AtomTable
typedef|;
end_typedef
begin_decl_stmt
specifier|extern
name|AtomTable
modifier|*
name|atable
decl_stmt|;
end_decl_stmt
begin_function_decl
name|int
name|InitAtomTable
parameter_list|(
name|AtomTable
modifier|*
name|atable
parameter_list|,
name|int
name|htsize
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|void
name|FreeAtomTable
parameter_list|(
name|AtomTable
modifier|*
name|atable
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|int
name|AddAtom
parameter_list|(
name|AtomTable
modifier|*
name|atable
parameter_list|,
specifier|const
name|char
modifier|*
name|s
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|void
name|PrintAtomTable
parameter_list|(
name|AtomTable
modifier|*
name|atable
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|int
name|LookUpAddString
parameter_list|(
name|AtomTable
modifier|*
name|atable
parameter_list|,
specifier|const
name|char
modifier|*
name|s
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
specifier|const
name|char
modifier|*
name|GetAtomString
parameter_list|(
name|AtomTable
modifier|*
name|atable
parameter_list|,
name|int
name|atom
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|int
name|GetReversedAtom
parameter_list|(
name|AtomTable
modifier|*
name|atable
parameter_list|,
name|int
name|atom
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|char
modifier|*
name|GetStringOfAtom
parameter_list|(
name|AtomTable
modifier|*
name|atable
parameter_list|,
name|int
name|atom
parameter_list|)
function_decl|;
end_function_decl
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// !defined(__ATOM_H)
end_comment
end_unit
