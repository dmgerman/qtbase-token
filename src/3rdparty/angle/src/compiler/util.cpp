begin_unit
begin_comment
comment|//
end_comment
begin_comment
comment|// Copyright (c) 2010 The ANGLE Project Authors. All rights reserved.
end_comment
begin_comment
comment|// Use of this source code is governed by a BSD-style license that can be
end_comment
begin_comment
comment|// found in the LICENSE file.
end_comment
begin_comment
comment|//
end_comment
begin_include
include|#
directive|include
file|"compiler/util.h"
end_include
begin_include
include|#
directive|include
file|<limits>
end_include
begin_include
include|#
directive|include
file|"compiler/preprocessor/numeric_lex.h"
end_include
begin_function
DECL|function|atof_clamp
name|bool
name|atof_clamp
parameter_list|(
specifier|const
name|char
modifier|*
name|str
parameter_list|,
name|float
modifier|*
name|value
parameter_list|)
block|{
name|bool
name|success
init|=
name|pp
operator|::
name|numeric_lex_float
argument_list|(
name|str
argument_list|,
name|value
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|success
condition|)
operator|*
name|value
operator|=
name|std
operator|::
name|numeric_limits
argument_list|<
name|float
argument_list|>
operator|::
name|max
argument_list|()
expr_stmt|;
return|return
name|success
return|;
block|}
end_function
begin_function
DECL|function|atoi_clamp
name|bool
name|atoi_clamp
parameter_list|(
specifier|const
name|char
modifier|*
name|str
parameter_list|,
name|int
modifier|*
name|value
parameter_list|)
block|{
name|bool
name|success
init|=
name|pp
operator|::
name|numeric_lex_int
argument_list|(
name|str
argument_list|,
name|value
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|success
condition|)
operator|*
name|value
operator|=
name|std
operator|::
name|numeric_limits
argument_list|<
name|int
argument_list|>
operator|::
name|max
argument_list|()
expr_stmt|;
return|return
name|success
return|;
block|}
end_function
end_unit
