begin_unit
begin_comment
comment|//
end_comment
begin_comment
comment|// Copyright (c) 2012 The ANGLE Project Authors. All rights reserved.
end_comment
begin_comment
comment|// Use of this source code is governed by a BSD-style license that can be
end_comment
begin_comment
comment|// found in the LICENSE file.
end_comment
begin_comment
comment|//
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|COMPILER_DIAGNOSTICS_H_
end_ifndef
begin_define
DECL|macro|COMPILER_DIAGNOSTICS_H_
define|#
directive|define
name|COMPILER_DIAGNOSTICS_H_
end_define
begin_include
include|#
directive|include
file|"compiler/preprocessor/DiagnosticsBase.h"
end_include
begin_decl_stmt
DECL|variable|TInfoSink
name|class
name|TInfoSink
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|TDiagnostics
range|:
name|public
name|pp
operator|::
name|Diagnostics
block|{
name|public
operator|:
name|TDiagnostics
argument_list|(
name|TInfoSink
operator|&
name|infoSink
argument_list|)
block|;
name|virtual
operator|~
name|TDiagnostics
argument_list|()
block|;
name|TInfoSink
operator|&
name|infoSink
argument_list|()
block|{
return|return
name|mInfoSink
return|;
block|}
name|int
name|numErrors
argument_list|()
specifier|const
block|{
return|return
name|mNumErrors
return|;
block|}
name|int
name|numWarnings
argument_list|()
specifier|const
block|{
return|return
name|mNumWarnings
return|;
block|}
name|void
name|writeInfo
argument_list|(
argument|Severity severity
argument_list|,
argument|const pp::SourceLocation& loc
argument_list|,
argument|const std::string& reason
argument_list|,
argument|const std::string& token
argument_list|,
argument|const std::string& extra
argument_list|)
block|;
name|void
name|writeDebug
argument_list|(
specifier|const
name|std
operator|::
name|string
operator|&
name|str
argument_list|)
block|;
name|protected
operator|:
name|virtual
name|void
name|print
argument_list|(
argument|ID id
argument_list|,
argument|const pp::SourceLocation& loc
argument_list|,
argument|const std::string& text
argument_list|)
block|;
name|private
operator|:
name|TInfoSink
operator|&
name|mInfoSink
block|;
name|int
name|mNumErrors
block|;
name|int
name|mNumWarnings
block|; }
decl_stmt|;
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// COMPILER_DIAGNOSTICS_H_
end_comment
end_unit
