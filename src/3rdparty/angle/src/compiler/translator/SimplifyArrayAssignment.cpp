begin_unit
begin_comment
comment|//
end_comment
begin_comment
comment|// Copyright (c) 2002-2015 The ANGLE Project Authors. All rights reserved.
end_comment
begin_comment
comment|// Use of this source code is governed by a BSD-style license that can be
end_comment
begin_comment
comment|// found in the LICENSE file.
end_comment
begin_comment
comment|//
end_comment
begin_include
include|#
directive|include
file|"compiler/translator/SimplifyArrayAssignment.h"
end_include
begin_function
DECL|function|visitBinary
name|bool
name|SimplifyArrayAssignment
operator|::
name|visitBinary
parameter_list|(
name|Visit
name|visit
parameter_list|,
name|TIntermBinary
modifier|*
name|node
parameter_list|)
block|{
switch|switch
condition|(
name|node
operator|->
name|getOp
argument_list|()
condition|)
block|{
case|case
name|EOpAssign
case|:
block|{
name|TIntermNode
modifier|*
name|parent
init|=
name|getParentNode
argument_list|()
decl_stmt|;
if|if
condition|(
name|node
operator|->
name|getLeft
argument_list|()
operator|->
name|isArray
argument_list|()
operator|&&
name|parent
operator|!=
literal|nullptr
condition|)
block|{
name|TIntermAggregate
modifier|*
name|parentAgg
init|=
name|parent
operator|->
name|getAsAggregate
argument_list|()
decl_stmt|;
if|if
condition|(
name|parentAgg
operator|!=
literal|nullptr
operator|&&
name|parentAgg
operator|->
name|getOp
argument_list|()
operator|==
name|EOpSequence
condition|)
block|{
comment|// This case is fine, the result of the assignment is not used.
break|break;
block|}
comment|// The result of the assignment needs to be stored into a temporary variable,
comment|// the assignment needs to be replaced with a reference to the temporary variable,
comment|// and the temporary variable needs to finally be assigned to the target variable.
comment|// This also needs to interact correctly with unfolding short circuiting operators.
name|UNIMPLEMENTED
argument_list|()
expr_stmt|;
block|}
block|}
break|break;
default|default:
break|break;
block|}
return|return
literal|true
return|;
block|}
end_function
end_unit
