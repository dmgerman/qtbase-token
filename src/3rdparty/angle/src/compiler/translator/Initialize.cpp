begin_unit
begin_comment
comment|//
end_comment
begin_comment
comment|// Copyright (c) 2002-2014 The ANGLE Project Authors. All rights reserved.
end_comment
begin_comment
comment|// Use of this source code is governed by a BSD-style license that can be
end_comment
begin_comment
comment|// found in the LICENSE file.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// Create symbols that declare built-in definitions, add built-ins that
end_comment
begin_comment
comment|// cannot be expressed in the files, and establish mappings between
end_comment
begin_comment
comment|// built-in functions and operators.
end_comment
begin_comment
comment|//
end_comment
begin_include
include|#
directive|include
file|"compiler/translator/Initialize.h"
end_include
begin_include
include|#
directive|include
file|"compiler/translator/IntermNode.h"
end_include
begin_include
include|#
directive|include
file|"angle_gl.h"
end_include
begin_function
DECL|function|InsertBuiltInFunctions
name|void
name|InsertBuiltInFunctions
parameter_list|(
name|sh
operator|::
name|GLenum
name|type
parameter_list|,
name|ShShaderSpec
name|spec
parameter_list|,
specifier|const
name|ShBuiltInResources
modifier|&
name|resources
parameter_list|,
name|TSymbolTable
modifier|&
name|symbolTable
parameter_list|)
block|{
name|TType
modifier|*
name|float1
init|=
operator|new
name|TType
argument_list|(
name|EbtFloat
argument_list|)
decl_stmt|;
name|TType
modifier|*
name|float2
init|=
operator|new
name|TType
argument_list|(
name|EbtFloat
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|TType
modifier|*
name|float3
init|=
operator|new
name|TType
argument_list|(
name|EbtFloat
argument_list|,
literal|3
argument_list|)
decl_stmt|;
name|TType
modifier|*
name|float4
init|=
operator|new
name|TType
argument_list|(
name|EbtFloat
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|TType
modifier|*
name|int1
init|=
operator|new
name|TType
argument_list|(
name|EbtInt
argument_list|)
decl_stmt|;
name|TType
modifier|*
name|int2
init|=
operator|new
name|TType
argument_list|(
name|EbtInt
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|TType
modifier|*
name|int3
init|=
operator|new
name|TType
argument_list|(
name|EbtInt
argument_list|,
literal|3
argument_list|)
decl_stmt|;
name|TType
modifier|*
name|uint1
init|=
operator|new
name|TType
argument_list|(
name|EbtUInt
argument_list|)
decl_stmt|;
name|TType
modifier|*
name|bool1
init|=
operator|new
name|TType
argument_list|(
name|EbtBool
argument_list|)
decl_stmt|;
name|TType
modifier|*
name|genType
init|=
operator|new
name|TType
argument_list|(
name|EbtGenType
argument_list|)
decl_stmt|;
name|TType
modifier|*
name|genIType
init|=
operator|new
name|TType
argument_list|(
name|EbtGenIType
argument_list|)
decl_stmt|;
name|TType
modifier|*
name|genUType
init|=
operator|new
name|TType
argument_list|(
name|EbtGenUType
argument_list|)
decl_stmt|;
name|TType
modifier|*
name|genBType
init|=
operator|new
name|TType
argument_list|(
name|EbtGenBType
argument_list|)
decl_stmt|;
comment|//
comment|// Angle and Trigonometric Functions.
comment|//
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpRadians
argument_list|,
name|genType
argument_list|,
literal|"radians"
argument_list|,
name|genType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpDegrees
argument_list|,
name|genType
argument_list|,
literal|"degrees"
argument_list|,
name|genType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpSin
argument_list|,
name|genType
argument_list|,
literal|"sin"
argument_list|,
name|genType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpCos
argument_list|,
name|genType
argument_list|,
literal|"cos"
argument_list|,
name|genType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpTan
argument_list|,
name|genType
argument_list|,
literal|"tan"
argument_list|,
name|genType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpAsin
argument_list|,
name|genType
argument_list|,
literal|"asin"
argument_list|,
name|genType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpAcos
argument_list|,
name|genType
argument_list|,
literal|"acos"
argument_list|,
name|genType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpAtan
argument_list|,
name|genType
argument_list|,
literal|"atan"
argument_list|,
name|genType
argument_list|,
name|genType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpAtan
argument_list|,
name|genType
argument_list|,
literal|"atan"
argument_list|,
name|genType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpSinh
argument_list|,
name|genType
argument_list|,
literal|"sinh"
argument_list|,
name|genType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpCosh
argument_list|,
name|genType
argument_list|,
literal|"cosh"
argument_list|,
name|genType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpTanh
argument_list|,
name|genType
argument_list|,
literal|"tanh"
argument_list|,
name|genType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpAsinh
argument_list|,
name|genType
argument_list|,
literal|"asinh"
argument_list|,
name|genType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpAcosh
argument_list|,
name|genType
argument_list|,
literal|"acosh"
argument_list|,
name|genType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpAtanh
argument_list|,
name|genType
argument_list|,
literal|"atanh"
argument_list|,
name|genType
argument_list|)
expr_stmt|;
comment|//
comment|// Exponential Functions.
comment|//
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpPow
argument_list|,
name|genType
argument_list|,
literal|"pow"
argument_list|,
name|genType
argument_list|,
name|genType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpExp
argument_list|,
name|genType
argument_list|,
literal|"exp"
argument_list|,
name|genType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpLog
argument_list|,
name|genType
argument_list|,
literal|"log"
argument_list|,
name|genType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpExp2
argument_list|,
name|genType
argument_list|,
literal|"exp2"
argument_list|,
name|genType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpLog2
argument_list|,
name|genType
argument_list|,
literal|"log2"
argument_list|,
name|genType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpSqrt
argument_list|,
name|genType
argument_list|,
literal|"sqrt"
argument_list|,
name|genType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpInverseSqrt
argument_list|,
name|genType
argument_list|,
literal|"inversesqrt"
argument_list|,
name|genType
argument_list|)
expr_stmt|;
comment|//
comment|// Common Functions.
comment|//
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpAbs
argument_list|,
name|genType
argument_list|,
literal|"abs"
argument_list|,
name|genType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpAbs
argument_list|,
name|genIType
argument_list|,
literal|"abs"
argument_list|,
name|genIType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpSign
argument_list|,
name|genType
argument_list|,
literal|"sign"
argument_list|,
name|genType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpSign
argument_list|,
name|genIType
argument_list|,
literal|"sign"
argument_list|,
name|genIType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpFloor
argument_list|,
name|genType
argument_list|,
literal|"floor"
argument_list|,
name|genType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpTrunc
argument_list|,
name|genType
argument_list|,
literal|"trunc"
argument_list|,
name|genType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpRound
argument_list|,
name|genType
argument_list|,
literal|"round"
argument_list|,
name|genType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpRoundEven
argument_list|,
name|genType
argument_list|,
literal|"roundEven"
argument_list|,
name|genType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpCeil
argument_list|,
name|genType
argument_list|,
literal|"ceil"
argument_list|,
name|genType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpFract
argument_list|,
name|genType
argument_list|,
literal|"fract"
argument_list|,
name|genType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpMod
argument_list|,
name|genType
argument_list|,
literal|"mod"
argument_list|,
name|genType
argument_list|,
name|float1
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpMod
argument_list|,
name|genType
argument_list|,
literal|"mod"
argument_list|,
name|genType
argument_list|,
name|genType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpMin
argument_list|,
name|genType
argument_list|,
literal|"min"
argument_list|,
name|genType
argument_list|,
name|float1
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpMin
argument_list|,
name|genType
argument_list|,
literal|"min"
argument_list|,
name|genType
argument_list|,
name|genType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpMin
argument_list|,
name|genIType
argument_list|,
literal|"min"
argument_list|,
name|genIType
argument_list|,
name|genIType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpMin
argument_list|,
name|genIType
argument_list|,
literal|"min"
argument_list|,
name|genIType
argument_list|,
name|int1
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpMin
argument_list|,
name|genUType
argument_list|,
literal|"min"
argument_list|,
name|genUType
argument_list|,
name|genUType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpMin
argument_list|,
name|genUType
argument_list|,
literal|"min"
argument_list|,
name|genUType
argument_list|,
name|uint1
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpMax
argument_list|,
name|genType
argument_list|,
literal|"max"
argument_list|,
name|genType
argument_list|,
name|float1
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpMax
argument_list|,
name|genType
argument_list|,
literal|"max"
argument_list|,
name|genType
argument_list|,
name|genType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpMax
argument_list|,
name|genIType
argument_list|,
literal|"max"
argument_list|,
name|genIType
argument_list|,
name|genIType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpMax
argument_list|,
name|genIType
argument_list|,
literal|"max"
argument_list|,
name|genIType
argument_list|,
name|int1
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpMax
argument_list|,
name|genUType
argument_list|,
literal|"max"
argument_list|,
name|genUType
argument_list|,
name|genUType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpMax
argument_list|,
name|genUType
argument_list|,
literal|"max"
argument_list|,
name|genUType
argument_list|,
name|uint1
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpClamp
argument_list|,
name|genType
argument_list|,
literal|"clamp"
argument_list|,
name|genType
argument_list|,
name|float1
argument_list|,
name|float1
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpClamp
argument_list|,
name|genType
argument_list|,
literal|"clamp"
argument_list|,
name|genType
argument_list|,
name|genType
argument_list|,
name|genType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpClamp
argument_list|,
name|genIType
argument_list|,
literal|"clamp"
argument_list|,
name|genIType
argument_list|,
name|int1
argument_list|,
name|int1
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpClamp
argument_list|,
name|genIType
argument_list|,
literal|"clamp"
argument_list|,
name|genIType
argument_list|,
name|genIType
argument_list|,
name|genIType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpClamp
argument_list|,
name|genUType
argument_list|,
literal|"clamp"
argument_list|,
name|genUType
argument_list|,
name|uint1
argument_list|,
name|uint1
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpClamp
argument_list|,
name|genUType
argument_list|,
literal|"clamp"
argument_list|,
name|genUType
argument_list|,
name|genUType
argument_list|,
name|genUType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpMix
argument_list|,
name|genType
argument_list|,
literal|"mix"
argument_list|,
name|genType
argument_list|,
name|genType
argument_list|,
name|float1
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpMix
argument_list|,
name|genType
argument_list|,
literal|"mix"
argument_list|,
name|genType
argument_list|,
name|genType
argument_list|,
name|genType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpStep
argument_list|,
name|genType
argument_list|,
literal|"step"
argument_list|,
name|genType
argument_list|,
name|genType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpStep
argument_list|,
name|genType
argument_list|,
literal|"step"
argument_list|,
name|float1
argument_list|,
name|genType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpSmoothStep
argument_list|,
name|genType
argument_list|,
literal|"smoothstep"
argument_list|,
name|genType
argument_list|,
name|genType
argument_list|,
name|genType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpSmoothStep
argument_list|,
name|genType
argument_list|,
literal|"smoothstep"
argument_list|,
name|float1
argument_list|,
name|float1
argument_list|,
name|genType
argument_list|)
expr_stmt|;
name|TType
modifier|*
name|outFloat1
init|=
operator|new
name|TType
argument_list|(
name|EbtFloat
argument_list|)
decl_stmt|;
name|TType
modifier|*
name|outFloat2
init|=
operator|new
name|TType
argument_list|(
name|EbtFloat
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|TType
modifier|*
name|outFloat3
init|=
operator|new
name|TType
argument_list|(
name|EbtFloat
argument_list|,
literal|3
argument_list|)
decl_stmt|;
name|TType
modifier|*
name|outFloat4
init|=
operator|new
name|TType
argument_list|(
name|EbtFloat
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|outFloat1
operator|->
name|setQualifier
argument_list|(
name|EvqOut
argument_list|)
expr_stmt|;
name|outFloat2
operator|->
name|setQualifier
argument_list|(
name|EvqOut
argument_list|)
expr_stmt|;
name|outFloat3
operator|->
name|setQualifier
argument_list|(
name|EvqOut
argument_list|)
expr_stmt|;
name|outFloat4
operator|->
name|setQualifier
argument_list|(
name|EvqOut
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpModf
argument_list|,
name|float1
argument_list|,
literal|"modf"
argument_list|,
name|float1
argument_list|,
name|outFloat1
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpModf
argument_list|,
name|float2
argument_list|,
literal|"modf"
argument_list|,
name|float2
argument_list|,
name|outFloat2
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpModf
argument_list|,
name|float3
argument_list|,
literal|"modf"
argument_list|,
name|float3
argument_list|,
name|outFloat3
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpModf
argument_list|,
name|float4
argument_list|,
literal|"modf"
argument_list|,
name|float4
argument_list|,
name|outFloat4
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpIsNan
argument_list|,
name|genBType
argument_list|,
literal|"isnan"
argument_list|,
name|genType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpIsInf
argument_list|,
name|genBType
argument_list|,
literal|"isinf"
argument_list|,
name|genType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpFloatBitsToInt
argument_list|,
name|genIType
argument_list|,
literal|"floatBitsToInt"
argument_list|,
name|genType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpFloatBitsToUint
argument_list|,
name|genUType
argument_list|,
literal|"floatBitsToUint"
argument_list|,
name|genType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpIntBitsToFloat
argument_list|,
name|genType
argument_list|,
literal|"intBitsToFloat"
argument_list|,
name|genIType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpUintBitsToFloat
argument_list|,
name|genType
argument_list|,
literal|"uintBitsToFloat"
argument_list|,
name|genUType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpPackSnorm2x16
argument_list|,
name|uint1
argument_list|,
literal|"packSnorm2x16"
argument_list|,
name|float2
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpPackUnorm2x16
argument_list|,
name|uint1
argument_list|,
literal|"packUnorm2x16"
argument_list|,
name|float2
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpPackHalf2x16
argument_list|,
name|uint1
argument_list|,
literal|"packHalf2x16"
argument_list|,
name|float2
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpUnpackSnorm2x16
argument_list|,
name|float2
argument_list|,
literal|"unpackSnorm2x16"
argument_list|,
name|uint1
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpUnpackUnorm2x16
argument_list|,
name|float2
argument_list|,
literal|"unpackUnorm2x16"
argument_list|,
name|uint1
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpUnpackHalf2x16
argument_list|,
name|float2
argument_list|,
literal|"unpackHalf2x16"
argument_list|,
name|uint1
argument_list|)
expr_stmt|;
comment|//
comment|// Geometric Functions.
comment|//
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpLength
argument_list|,
name|float1
argument_list|,
literal|"length"
argument_list|,
name|genType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpDistance
argument_list|,
name|float1
argument_list|,
literal|"distance"
argument_list|,
name|genType
argument_list|,
name|genType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpDot
argument_list|,
name|float1
argument_list|,
literal|"dot"
argument_list|,
name|genType
argument_list|,
name|genType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpCross
argument_list|,
name|float3
argument_list|,
literal|"cross"
argument_list|,
name|float3
argument_list|,
name|float3
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpNormalize
argument_list|,
name|genType
argument_list|,
literal|"normalize"
argument_list|,
name|genType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpFaceForward
argument_list|,
name|genType
argument_list|,
literal|"faceforward"
argument_list|,
name|genType
argument_list|,
name|genType
argument_list|,
name|genType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpReflect
argument_list|,
name|genType
argument_list|,
literal|"reflect"
argument_list|,
name|genType
argument_list|,
name|genType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpRefract
argument_list|,
name|genType
argument_list|,
literal|"refract"
argument_list|,
name|genType
argument_list|,
name|genType
argument_list|,
name|float1
argument_list|)
expr_stmt|;
name|TType
modifier|*
name|mat2
init|=
operator|new
name|TType
argument_list|(
name|EbtFloat
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|TType
modifier|*
name|mat3
init|=
operator|new
name|TType
argument_list|(
name|EbtFloat
argument_list|,
literal|3
argument_list|,
literal|3
argument_list|)
decl_stmt|;
name|TType
modifier|*
name|mat4
init|=
operator|new
name|TType
argument_list|(
name|EbtFloat
argument_list|,
literal|4
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|TType
modifier|*
name|mat2x3
init|=
operator|new
name|TType
argument_list|(
name|EbtFloat
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|)
decl_stmt|;
name|TType
modifier|*
name|mat3x2
init|=
operator|new
name|TType
argument_list|(
name|EbtFloat
argument_list|,
literal|3
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|TType
modifier|*
name|mat2x4
init|=
operator|new
name|TType
argument_list|(
name|EbtFloat
argument_list|,
literal|2
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|TType
modifier|*
name|mat4x2
init|=
operator|new
name|TType
argument_list|(
name|EbtFloat
argument_list|,
literal|4
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|TType
modifier|*
name|mat3x4
init|=
operator|new
name|TType
argument_list|(
name|EbtFloat
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|TType
modifier|*
name|mat4x3
init|=
operator|new
name|TType
argument_list|(
name|EbtFloat
argument_list|,
literal|4
argument_list|,
literal|3
argument_list|)
decl_stmt|;
comment|//
comment|// Matrix Functions.
comment|//
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpMul
argument_list|,
name|mat2
argument_list|,
literal|"matrixCompMult"
argument_list|,
name|mat2
argument_list|,
name|mat2
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpMul
argument_list|,
name|mat3
argument_list|,
literal|"matrixCompMult"
argument_list|,
name|mat3
argument_list|,
name|mat3
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpMul
argument_list|,
name|mat4
argument_list|,
literal|"matrixCompMult"
argument_list|,
name|mat4
argument_list|,
name|mat4
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpMul
argument_list|,
name|mat2x3
argument_list|,
literal|"matrixCompMult"
argument_list|,
name|mat2x3
argument_list|,
name|mat2x3
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpMul
argument_list|,
name|mat3x2
argument_list|,
literal|"matrixCompMult"
argument_list|,
name|mat3x2
argument_list|,
name|mat3x2
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpMul
argument_list|,
name|mat2x4
argument_list|,
literal|"matrixCompMult"
argument_list|,
name|mat2x4
argument_list|,
name|mat2x4
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpMul
argument_list|,
name|mat4x2
argument_list|,
literal|"matrixCompMult"
argument_list|,
name|mat4x2
argument_list|,
name|mat4x2
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpMul
argument_list|,
name|mat3x4
argument_list|,
literal|"matrixCompMult"
argument_list|,
name|mat3x4
argument_list|,
name|mat3x4
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpMul
argument_list|,
name|mat4x3
argument_list|,
literal|"matrixCompMult"
argument_list|,
name|mat4x3
argument_list|,
name|mat4x3
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpOuterProduct
argument_list|,
name|mat2
argument_list|,
literal|"outerProduct"
argument_list|,
name|float2
argument_list|,
name|float2
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpOuterProduct
argument_list|,
name|mat3
argument_list|,
literal|"outerProduct"
argument_list|,
name|float3
argument_list|,
name|float3
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpOuterProduct
argument_list|,
name|mat4
argument_list|,
literal|"outerProduct"
argument_list|,
name|float4
argument_list|,
name|float4
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpOuterProduct
argument_list|,
name|mat2x3
argument_list|,
literal|"outerProduct"
argument_list|,
name|float3
argument_list|,
name|float2
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpOuterProduct
argument_list|,
name|mat3x2
argument_list|,
literal|"outerProduct"
argument_list|,
name|float2
argument_list|,
name|float3
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpOuterProduct
argument_list|,
name|mat2x4
argument_list|,
literal|"outerProduct"
argument_list|,
name|float4
argument_list|,
name|float2
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpOuterProduct
argument_list|,
name|mat4x2
argument_list|,
literal|"outerProduct"
argument_list|,
name|float2
argument_list|,
name|float4
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpOuterProduct
argument_list|,
name|mat3x4
argument_list|,
literal|"outerProduct"
argument_list|,
name|float4
argument_list|,
name|float3
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpOuterProduct
argument_list|,
name|mat4x3
argument_list|,
literal|"outerProduct"
argument_list|,
name|float3
argument_list|,
name|float4
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpTranspose
argument_list|,
name|mat2
argument_list|,
literal|"transpose"
argument_list|,
name|mat2
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpTranspose
argument_list|,
name|mat3
argument_list|,
literal|"transpose"
argument_list|,
name|mat3
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpTranspose
argument_list|,
name|mat4
argument_list|,
literal|"transpose"
argument_list|,
name|mat4
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpTranspose
argument_list|,
name|mat2x3
argument_list|,
literal|"transpose"
argument_list|,
name|mat3x2
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpTranspose
argument_list|,
name|mat3x2
argument_list|,
literal|"transpose"
argument_list|,
name|mat2x3
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpTranspose
argument_list|,
name|mat2x4
argument_list|,
literal|"transpose"
argument_list|,
name|mat4x2
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpTranspose
argument_list|,
name|mat4x2
argument_list|,
literal|"transpose"
argument_list|,
name|mat2x4
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpTranspose
argument_list|,
name|mat3x4
argument_list|,
literal|"transpose"
argument_list|,
name|mat4x3
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpTranspose
argument_list|,
name|mat4x3
argument_list|,
literal|"transpose"
argument_list|,
name|mat3x4
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpDeterminant
argument_list|,
name|float1
argument_list|,
literal|"determinant"
argument_list|,
name|mat2
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpDeterminant
argument_list|,
name|float1
argument_list|,
literal|"determinant"
argument_list|,
name|mat3
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpDeterminant
argument_list|,
name|float1
argument_list|,
literal|"determinant"
argument_list|,
name|mat4
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpInverse
argument_list|,
name|mat2
argument_list|,
literal|"inverse"
argument_list|,
name|mat2
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpInverse
argument_list|,
name|mat3
argument_list|,
literal|"inverse"
argument_list|,
name|mat3
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpInverse
argument_list|,
name|mat4
argument_list|,
literal|"inverse"
argument_list|,
name|mat4
argument_list|)
expr_stmt|;
name|TType
modifier|*
name|vec
init|=
operator|new
name|TType
argument_list|(
name|EbtVec
argument_list|)
decl_stmt|;
name|TType
modifier|*
name|ivec
init|=
operator|new
name|TType
argument_list|(
name|EbtIVec
argument_list|)
decl_stmt|;
name|TType
modifier|*
name|uvec
init|=
operator|new
name|TType
argument_list|(
name|EbtUVec
argument_list|)
decl_stmt|;
name|TType
modifier|*
name|bvec
init|=
operator|new
name|TType
argument_list|(
name|EbtBVec
argument_list|)
decl_stmt|;
comment|//
comment|// Vector relational functions.
comment|//
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpLessThan
argument_list|,
name|bvec
argument_list|,
literal|"lessThan"
argument_list|,
name|vec
argument_list|,
name|vec
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpLessThan
argument_list|,
name|bvec
argument_list|,
literal|"lessThan"
argument_list|,
name|ivec
argument_list|,
name|ivec
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpLessThan
argument_list|,
name|bvec
argument_list|,
literal|"lessThan"
argument_list|,
name|uvec
argument_list|,
name|uvec
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpLessThanEqual
argument_list|,
name|bvec
argument_list|,
literal|"lessThanEqual"
argument_list|,
name|vec
argument_list|,
name|vec
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpLessThanEqual
argument_list|,
name|bvec
argument_list|,
literal|"lessThanEqual"
argument_list|,
name|ivec
argument_list|,
name|ivec
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpLessThanEqual
argument_list|,
name|bvec
argument_list|,
literal|"lessThanEqual"
argument_list|,
name|uvec
argument_list|,
name|uvec
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpGreaterThan
argument_list|,
name|bvec
argument_list|,
literal|"greaterThan"
argument_list|,
name|vec
argument_list|,
name|vec
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpGreaterThan
argument_list|,
name|bvec
argument_list|,
literal|"greaterThan"
argument_list|,
name|ivec
argument_list|,
name|ivec
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpGreaterThan
argument_list|,
name|bvec
argument_list|,
literal|"greaterThan"
argument_list|,
name|uvec
argument_list|,
name|uvec
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpGreaterThanEqual
argument_list|,
name|bvec
argument_list|,
literal|"greaterThanEqual"
argument_list|,
name|vec
argument_list|,
name|vec
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpGreaterThanEqual
argument_list|,
name|bvec
argument_list|,
literal|"greaterThanEqual"
argument_list|,
name|ivec
argument_list|,
name|ivec
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpGreaterThanEqual
argument_list|,
name|bvec
argument_list|,
literal|"greaterThanEqual"
argument_list|,
name|uvec
argument_list|,
name|uvec
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpVectorEqual
argument_list|,
name|bvec
argument_list|,
literal|"equal"
argument_list|,
name|vec
argument_list|,
name|vec
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpVectorEqual
argument_list|,
name|bvec
argument_list|,
literal|"equal"
argument_list|,
name|ivec
argument_list|,
name|ivec
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpVectorEqual
argument_list|,
name|bvec
argument_list|,
literal|"equal"
argument_list|,
name|uvec
argument_list|,
name|uvec
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpVectorEqual
argument_list|,
name|bvec
argument_list|,
literal|"equal"
argument_list|,
name|bvec
argument_list|,
name|bvec
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpVectorNotEqual
argument_list|,
name|bvec
argument_list|,
literal|"notEqual"
argument_list|,
name|vec
argument_list|,
name|vec
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpVectorNotEqual
argument_list|,
name|bvec
argument_list|,
literal|"notEqual"
argument_list|,
name|ivec
argument_list|,
name|ivec
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpVectorNotEqual
argument_list|,
name|bvec
argument_list|,
literal|"notEqual"
argument_list|,
name|uvec
argument_list|,
name|uvec
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpVectorNotEqual
argument_list|,
name|bvec
argument_list|,
literal|"notEqual"
argument_list|,
name|bvec
argument_list|,
name|bvec
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpAny
argument_list|,
name|bool1
argument_list|,
literal|"any"
argument_list|,
name|bvec
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpAll
argument_list|,
name|bool1
argument_list|,
literal|"all"
argument_list|,
name|bvec
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|EOpVectorLogicalNot
argument_list|,
name|bvec
argument_list|,
literal|"not"
argument_list|,
name|bvec
argument_list|)
expr_stmt|;
name|TType
modifier|*
name|sampler2D
init|=
operator|new
name|TType
argument_list|(
name|EbtSampler2D
argument_list|)
decl_stmt|;
name|TType
modifier|*
name|samplerCube
init|=
operator|new
name|TType
argument_list|(
name|EbtSamplerCube
argument_list|)
decl_stmt|;
comment|//
comment|// Texture Functions for GLSL ES 1.0
comment|//
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL1_BUILTINS
argument_list|,
name|float4
argument_list|,
literal|"texture2D"
argument_list|,
name|sampler2D
argument_list|,
name|float2
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL1_BUILTINS
argument_list|,
name|float4
argument_list|,
literal|"texture2DProj"
argument_list|,
name|sampler2D
argument_list|,
name|float3
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL1_BUILTINS
argument_list|,
name|float4
argument_list|,
literal|"texture2DProj"
argument_list|,
name|sampler2D
argument_list|,
name|float4
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL1_BUILTINS
argument_list|,
name|float4
argument_list|,
literal|"textureCube"
argument_list|,
name|samplerCube
argument_list|,
name|float3
argument_list|)
expr_stmt|;
if|if
condition|(
name|resources
operator|.
name|OES_EGL_image_external
condition|)
block|{
name|TType
modifier|*
name|samplerExternalOES
init|=
operator|new
name|TType
argument_list|(
name|EbtSamplerExternalOES
argument_list|)
decl_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL1_BUILTINS
argument_list|,
name|float4
argument_list|,
literal|"texture2D"
argument_list|,
name|samplerExternalOES
argument_list|,
name|float2
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL1_BUILTINS
argument_list|,
name|float4
argument_list|,
literal|"texture2DProj"
argument_list|,
name|samplerExternalOES
argument_list|,
name|float3
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL1_BUILTINS
argument_list|,
name|float4
argument_list|,
literal|"texture2DProj"
argument_list|,
name|samplerExternalOES
argument_list|,
name|float4
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|resources
operator|.
name|ARB_texture_rectangle
condition|)
block|{
name|TType
modifier|*
name|sampler2DRect
init|=
operator|new
name|TType
argument_list|(
name|EbtSampler2DRect
argument_list|)
decl_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL1_BUILTINS
argument_list|,
name|float4
argument_list|,
literal|"texture2DRect"
argument_list|,
name|sampler2DRect
argument_list|,
name|float2
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL1_BUILTINS
argument_list|,
name|float4
argument_list|,
literal|"texture2DRectProj"
argument_list|,
name|sampler2DRect
argument_list|,
name|float3
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL1_BUILTINS
argument_list|,
name|float4
argument_list|,
literal|"texture2DRectProj"
argument_list|,
name|sampler2DRect
argument_list|,
name|float4
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|resources
operator|.
name|EXT_shader_texture_lod
condition|)
block|{
comment|/* The *Grad* variants are new to both vertex and fragment shaders; the fragment          * shader specific pieces are added separately below.          */
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL1_BUILTINS
argument_list|,
literal|"GL_EXT_shader_texture_lod"
argument_list|,
name|float4
argument_list|,
literal|"texture2DGradEXT"
argument_list|,
name|sampler2D
argument_list|,
name|float2
argument_list|,
name|float2
argument_list|,
name|float2
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL1_BUILTINS
argument_list|,
literal|"GL_EXT_shader_texture_lod"
argument_list|,
name|float4
argument_list|,
literal|"texture2DProjGradEXT"
argument_list|,
name|sampler2D
argument_list|,
name|float3
argument_list|,
name|float2
argument_list|,
name|float2
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL1_BUILTINS
argument_list|,
literal|"GL_EXT_shader_texture_lod"
argument_list|,
name|float4
argument_list|,
literal|"texture2DProjGradEXT"
argument_list|,
name|sampler2D
argument_list|,
name|float4
argument_list|,
name|float2
argument_list|,
name|float2
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL1_BUILTINS
argument_list|,
literal|"GL_EXT_shader_texture_lod"
argument_list|,
name|float4
argument_list|,
literal|"textureCubeGradEXT"
argument_list|,
name|samplerCube
argument_list|,
name|float3
argument_list|,
name|float3
argument_list|,
name|float3
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|type
operator|==
name|GL_FRAGMENT_SHADER
condition|)
block|{
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL1_BUILTINS
argument_list|,
name|float4
argument_list|,
literal|"texture2D"
argument_list|,
name|sampler2D
argument_list|,
name|float2
argument_list|,
name|float1
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL1_BUILTINS
argument_list|,
name|float4
argument_list|,
literal|"texture2DProj"
argument_list|,
name|sampler2D
argument_list|,
name|float3
argument_list|,
name|float1
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL1_BUILTINS
argument_list|,
name|float4
argument_list|,
literal|"texture2DProj"
argument_list|,
name|sampler2D
argument_list|,
name|float4
argument_list|,
name|float1
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL1_BUILTINS
argument_list|,
name|float4
argument_list|,
literal|"textureCube"
argument_list|,
name|samplerCube
argument_list|,
name|float3
argument_list|,
name|float1
argument_list|)
expr_stmt|;
if|if
condition|(
name|resources
operator|.
name|OES_standard_derivatives
condition|)
block|{
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL1_BUILTINS
argument_list|,
name|EOpDFdx
argument_list|,
literal|"GL_OES_standard_derivatives"
argument_list|,
name|genType
argument_list|,
literal|"dFdx"
argument_list|,
name|genType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL1_BUILTINS
argument_list|,
name|EOpDFdy
argument_list|,
literal|"GL_OES_standard_derivatives"
argument_list|,
name|genType
argument_list|,
literal|"dFdy"
argument_list|,
name|genType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL1_BUILTINS
argument_list|,
name|EOpFwidth
argument_list|,
literal|"GL_OES_standard_derivatives"
argument_list|,
name|genType
argument_list|,
literal|"fwidth"
argument_list|,
name|genType
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|resources
operator|.
name|EXT_shader_texture_lod
condition|)
block|{
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL1_BUILTINS
argument_list|,
literal|"GL_EXT_shader_texture_lod"
argument_list|,
name|float4
argument_list|,
literal|"texture2DLodEXT"
argument_list|,
name|sampler2D
argument_list|,
name|float2
argument_list|,
name|float1
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL1_BUILTINS
argument_list|,
literal|"GL_EXT_shader_texture_lod"
argument_list|,
name|float4
argument_list|,
literal|"texture2DProjLodEXT"
argument_list|,
name|sampler2D
argument_list|,
name|float3
argument_list|,
name|float1
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL1_BUILTINS
argument_list|,
literal|"GL_EXT_shader_texture_lod"
argument_list|,
name|float4
argument_list|,
literal|"texture2DProjLodEXT"
argument_list|,
name|sampler2D
argument_list|,
name|float4
argument_list|,
name|float1
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL1_BUILTINS
argument_list|,
literal|"GL_EXT_shader_texture_lod"
argument_list|,
name|float4
argument_list|,
literal|"textureCubeLodEXT"
argument_list|,
name|samplerCube
argument_list|,
name|float3
argument_list|,
name|float1
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|type
operator|==
name|GL_VERTEX_SHADER
condition|)
block|{
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL1_BUILTINS
argument_list|,
name|float4
argument_list|,
literal|"texture2DLod"
argument_list|,
name|sampler2D
argument_list|,
name|float2
argument_list|,
name|float1
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL1_BUILTINS
argument_list|,
name|float4
argument_list|,
literal|"texture2DProjLod"
argument_list|,
name|sampler2D
argument_list|,
name|float3
argument_list|,
name|float1
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL1_BUILTINS
argument_list|,
name|float4
argument_list|,
literal|"texture2DProjLod"
argument_list|,
name|sampler2D
argument_list|,
name|float4
argument_list|,
name|float1
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL1_BUILTINS
argument_list|,
name|float4
argument_list|,
literal|"textureCubeLod"
argument_list|,
name|samplerCube
argument_list|,
name|float3
argument_list|,
name|float1
argument_list|)
expr_stmt|;
block|}
name|TType
modifier|*
name|gvec4
init|=
operator|new
name|TType
argument_list|(
name|EbtGVec4
argument_list|)
decl_stmt|;
name|TType
modifier|*
name|gsampler2D
init|=
operator|new
name|TType
argument_list|(
name|EbtGSampler2D
argument_list|)
decl_stmt|;
name|TType
modifier|*
name|gsamplerCube
init|=
operator|new
name|TType
argument_list|(
name|EbtGSamplerCube
argument_list|)
decl_stmt|;
name|TType
modifier|*
name|gsampler3D
init|=
operator|new
name|TType
argument_list|(
name|EbtGSampler3D
argument_list|)
decl_stmt|;
name|TType
modifier|*
name|gsampler2DArray
init|=
operator|new
name|TType
argument_list|(
name|EbtGSampler2DArray
argument_list|)
decl_stmt|;
comment|//
comment|// Texture Functions for GLSL ES 3.0
comment|//
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"texture"
argument_list|,
name|gsampler2D
argument_list|,
name|float2
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"texture"
argument_list|,
name|gsampler3D
argument_list|,
name|float3
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"texture"
argument_list|,
name|gsamplerCube
argument_list|,
name|float3
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"texture"
argument_list|,
name|gsampler2DArray
argument_list|,
name|float3
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"textureProj"
argument_list|,
name|gsampler2D
argument_list|,
name|float3
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"textureProj"
argument_list|,
name|gsampler2D
argument_list|,
name|float4
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"textureProj"
argument_list|,
name|gsampler3D
argument_list|,
name|float4
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"textureLod"
argument_list|,
name|gsampler2D
argument_list|,
name|float2
argument_list|,
name|float1
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"textureLod"
argument_list|,
name|gsampler3D
argument_list|,
name|float3
argument_list|,
name|float1
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"textureLod"
argument_list|,
name|gsamplerCube
argument_list|,
name|float3
argument_list|,
name|float1
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"textureLod"
argument_list|,
name|gsampler2DArray
argument_list|,
name|float3
argument_list|,
name|float1
argument_list|)
expr_stmt|;
if|if
condition|(
name|type
operator|==
name|GL_FRAGMENT_SHADER
condition|)
block|{
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"texture"
argument_list|,
name|gsampler2D
argument_list|,
name|float2
argument_list|,
name|float1
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"texture"
argument_list|,
name|gsampler3D
argument_list|,
name|float3
argument_list|,
name|float1
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"texture"
argument_list|,
name|gsamplerCube
argument_list|,
name|float3
argument_list|,
name|float1
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"texture"
argument_list|,
name|gsampler2DArray
argument_list|,
name|float3
argument_list|,
name|float1
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"textureProj"
argument_list|,
name|gsampler2D
argument_list|,
name|float3
argument_list|,
name|float1
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"textureProj"
argument_list|,
name|gsampler2D
argument_list|,
name|float4
argument_list|,
name|float1
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"textureProj"
argument_list|,
name|gsampler3D
argument_list|,
name|float4
argument_list|,
name|float1
argument_list|)
expr_stmt|;
block|}
name|TType
modifier|*
name|sampler2DShadow
init|=
operator|new
name|TType
argument_list|(
name|EbtSampler2DShadow
argument_list|)
decl_stmt|;
name|TType
modifier|*
name|samplerCubeShadow
init|=
operator|new
name|TType
argument_list|(
name|EbtSamplerCubeShadow
argument_list|)
decl_stmt|;
name|TType
modifier|*
name|sampler2DArrayShadow
init|=
operator|new
name|TType
argument_list|(
name|EbtSampler2DArrayShadow
argument_list|)
decl_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|float1
argument_list|,
literal|"texture"
argument_list|,
name|sampler2DShadow
argument_list|,
name|float3
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|float1
argument_list|,
literal|"texture"
argument_list|,
name|samplerCubeShadow
argument_list|,
name|float4
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|float1
argument_list|,
literal|"texture"
argument_list|,
name|sampler2DArrayShadow
argument_list|,
name|float4
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|float1
argument_list|,
literal|"textureProj"
argument_list|,
name|sampler2DShadow
argument_list|,
name|float4
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|float1
argument_list|,
literal|"textureLod"
argument_list|,
name|sampler2DShadow
argument_list|,
name|float3
argument_list|,
name|float1
argument_list|)
expr_stmt|;
if|if
condition|(
name|type
operator|==
name|GL_FRAGMENT_SHADER
condition|)
block|{
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|float1
argument_list|,
literal|"texture"
argument_list|,
name|sampler2DShadow
argument_list|,
name|float3
argument_list|,
name|float1
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|float1
argument_list|,
literal|"texture"
argument_list|,
name|samplerCubeShadow
argument_list|,
name|float4
argument_list|,
name|float1
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|float1
argument_list|,
literal|"textureProj"
argument_list|,
name|sampler2DShadow
argument_list|,
name|float4
argument_list|,
name|float1
argument_list|)
expr_stmt|;
block|}
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|int2
argument_list|,
literal|"textureSize"
argument_list|,
name|gsampler2D
argument_list|,
name|int1
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|int3
argument_list|,
literal|"textureSize"
argument_list|,
name|gsampler3D
argument_list|,
name|int1
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|int2
argument_list|,
literal|"textureSize"
argument_list|,
name|gsamplerCube
argument_list|,
name|int1
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|int3
argument_list|,
literal|"textureSize"
argument_list|,
name|gsampler2DArray
argument_list|,
name|int1
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|int2
argument_list|,
literal|"textureSize"
argument_list|,
name|sampler2DShadow
argument_list|,
name|int1
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|int2
argument_list|,
literal|"textureSize"
argument_list|,
name|samplerCubeShadow
argument_list|,
name|int1
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|int3
argument_list|,
literal|"textureSize"
argument_list|,
name|sampler2DArrayShadow
argument_list|,
name|int1
argument_list|)
expr_stmt|;
if|if
condition|(
name|type
operator|==
name|GL_FRAGMENT_SHADER
condition|)
block|{
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpDFdx
argument_list|,
name|genType
argument_list|,
literal|"dFdx"
argument_list|,
name|genType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpDFdy
argument_list|,
name|genType
argument_list|,
literal|"dFdy"
argument_list|,
name|genType
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|EOpFwidth
argument_list|,
name|genType
argument_list|,
literal|"fwidth"
argument_list|,
name|genType
argument_list|)
expr_stmt|;
block|}
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"textureOffset"
argument_list|,
name|gsampler2D
argument_list|,
name|float2
argument_list|,
name|int2
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"textureOffset"
argument_list|,
name|gsampler3D
argument_list|,
name|float3
argument_list|,
name|int3
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|float1
argument_list|,
literal|"textureOffset"
argument_list|,
name|sampler2DShadow
argument_list|,
name|float3
argument_list|,
name|int2
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"textureOffset"
argument_list|,
name|gsampler2DArray
argument_list|,
name|float3
argument_list|,
name|int2
argument_list|)
expr_stmt|;
if|if
condition|(
name|type
operator|==
name|GL_FRAGMENT_SHADER
condition|)
block|{
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"textureOffset"
argument_list|,
name|gsampler2D
argument_list|,
name|float2
argument_list|,
name|int2
argument_list|,
name|float1
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"textureOffset"
argument_list|,
name|gsampler3D
argument_list|,
name|float3
argument_list|,
name|int3
argument_list|,
name|float1
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|float1
argument_list|,
literal|"textureOffset"
argument_list|,
name|sampler2DShadow
argument_list|,
name|float3
argument_list|,
name|int2
argument_list|,
name|float1
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"textureOffset"
argument_list|,
name|gsampler2DArray
argument_list|,
name|float3
argument_list|,
name|int2
argument_list|,
name|float1
argument_list|)
expr_stmt|;
block|}
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"textureProjOffset"
argument_list|,
name|gsampler2D
argument_list|,
name|float3
argument_list|,
name|int2
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"textureProjOffset"
argument_list|,
name|gsampler2D
argument_list|,
name|float4
argument_list|,
name|int2
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"textureProjOffset"
argument_list|,
name|gsampler3D
argument_list|,
name|float4
argument_list|,
name|int3
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|float1
argument_list|,
literal|"textureProjOffset"
argument_list|,
name|sampler2DShadow
argument_list|,
name|float4
argument_list|,
name|int2
argument_list|)
expr_stmt|;
if|if
condition|(
name|type
operator|==
name|GL_FRAGMENT_SHADER
condition|)
block|{
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"textureProjOffset"
argument_list|,
name|gsampler2D
argument_list|,
name|float3
argument_list|,
name|int2
argument_list|,
name|float1
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"textureProjOffset"
argument_list|,
name|gsampler2D
argument_list|,
name|float4
argument_list|,
name|int2
argument_list|,
name|float1
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"textureProjOffset"
argument_list|,
name|gsampler3D
argument_list|,
name|float4
argument_list|,
name|int3
argument_list|,
name|float1
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|float1
argument_list|,
literal|"textureProjOffset"
argument_list|,
name|sampler2DShadow
argument_list|,
name|float4
argument_list|,
name|int2
argument_list|,
name|float1
argument_list|)
expr_stmt|;
block|}
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"textureLodOffset"
argument_list|,
name|gsampler2D
argument_list|,
name|float2
argument_list|,
name|float1
argument_list|,
name|int2
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"textureLodOffset"
argument_list|,
name|gsampler3D
argument_list|,
name|float3
argument_list|,
name|float1
argument_list|,
name|int3
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|float1
argument_list|,
literal|"textureLodOffset"
argument_list|,
name|sampler2DShadow
argument_list|,
name|float3
argument_list|,
name|float1
argument_list|,
name|int2
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"textureLodOffset"
argument_list|,
name|gsampler2DArray
argument_list|,
name|float3
argument_list|,
name|float1
argument_list|,
name|int2
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"textureProjLod"
argument_list|,
name|gsampler2D
argument_list|,
name|float3
argument_list|,
name|float1
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"textureProjLod"
argument_list|,
name|gsampler2D
argument_list|,
name|float4
argument_list|,
name|float1
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"textureProjLod"
argument_list|,
name|gsampler3D
argument_list|,
name|float4
argument_list|,
name|float1
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|float1
argument_list|,
literal|"textureProjLod"
argument_list|,
name|sampler2DShadow
argument_list|,
name|float4
argument_list|,
name|float1
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"textureProjLodOffset"
argument_list|,
name|gsampler2D
argument_list|,
name|float3
argument_list|,
name|float1
argument_list|,
name|int2
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"textureProjLodOffset"
argument_list|,
name|gsampler2D
argument_list|,
name|float4
argument_list|,
name|float1
argument_list|,
name|int2
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"textureProjLodOffset"
argument_list|,
name|gsampler3D
argument_list|,
name|float4
argument_list|,
name|float1
argument_list|,
name|int3
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|float1
argument_list|,
literal|"textureProjLodOffset"
argument_list|,
name|sampler2DShadow
argument_list|,
name|float4
argument_list|,
name|float1
argument_list|,
name|int2
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"texelFetch"
argument_list|,
name|gsampler2D
argument_list|,
name|int2
argument_list|,
name|int1
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"texelFetch"
argument_list|,
name|gsampler3D
argument_list|,
name|int3
argument_list|,
name|int1
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"texelFetch"
argument_list|,
name|gsampler2DArray
argument_list|,
name|int3
argument_list|,
name|int1
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"texelFetchOffset"
argument_list|,
name|gsampler2D
argument_list|,
name|int2
argument_list|,
name|int1
argument_list|,
name|int2
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"texelFetchOffset"
argument_list|,
name|gsampler3D
argument_list|,
name|int3
argument_list|,
name|int1
argument_list|,
name|int3
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"texelFetchOffset"
argument_list|,
name|gsampler2DArray
argument_list|,
name|int3
argument_list|,
name|int1
argument_list|,
name|int2
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"textureGrad"
argument_list|,
name|gsampler2D
argument_list|,
name|float2
argument_list|,
name|float2
argument_list|,
name|float2
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"textureGrad"
argument_list|,
name|gsampler3D
argument_list|,
name|float3
argument_list|,
name|float3
argument_list|,
name|float3
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"textureGrad"
argument_list|,
name|gsamplerCube
argument_list|,
name|float3
argument_list|,
name|float3
argument_list|,
name|float3
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|float1
argument_list|,
literal|"textureGrad"
argument_list|,
name|sampler2DShadow
argument_list|,
name|float3
argument_list|,
name|float2
argument_list|,
name|float2
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|float1
argument_list|,
literal|"textureGrad"
argument_list|,
name|samplerCubeShadow
argument_list|,
name|float4
argument_list|,
name|float3
argument_list|,
name|float3
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"textureGrad"
argument_list|,
name|gsampler2DArray
argument_list|,
name|float3
argument_list|,
name|float2
argument_list|,
name|float2
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|float1
argument_list|,
literal|"textureGrad"
argument_list|,
name|sampler2DArrayShadow
argument_list|,
name|float4
argument_list|,
name|float2
argument_list|,
name|float2
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"textureGradOffset"
argument_list|,
name|gsampler2D
argument_list|,
name|float2
argument_list|,
name|float2
argument_list|,
name|float2
argument_list|,
name|int2
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"textureGradOffset"
argument_list|,
name|gsampler3D
argument_list|,
name|float3
argument_list|,
name|float3
argument_list|,
name|float3
argument_list|,
name|int3
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|float1
argument_list|,
literal|"textureGradOffset"
argument_list|,
name|sampler2DShadow
argument_list|,
name|float3
argument_list|,
name|float2
argument_list|,
name|float2
argument_list|,
name|int2
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"textureGradOffset"
argument_list|,
name|gsampler2DArray
argument_list|,
name|float3
argument_list|,
name|float2
argument_list|,
name|float2
argument_list|,
name|int2
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|float1
argument_list|,
literal|"textureGradOffset"
argument_list|,
name|sampler2DArrayShadow
argument_list|,
name|float4
argument_list|,
name|float2
argument_list|,
name|float2
argument_list|,
name|int2
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"textureProjGrad"
argument_list|,
name|gsampler2D
argument_list|,
name|float3
argument_list|,
name|float2
argument_list|,
name|float2
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"textureProjGrad"
argument_list|,
name|gsampler2D
argument_list|,
name|float4
argument_list|,
name|float2
argument_list|,
name|float2
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"textureProjGrad"
argument_list|,
name|gsampler3D
argument_list|,
name|float4
argument_list|,
name|float3
argument_list|,
name|float3
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|float1
argument_list|,
literal|"textureProjGrad"
argument_list|,
name|sampler2DShadow
argument_list|,
name|float4
argument_list|,
name|float2
argument_list|,
name|float2
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"textureProjGradOffset"
argument_list|,
name|gsampler2D
argument_list|,
name|float3
argument_list|,
name|float2
argument_list|,
name|float2
argument_list|,
name|int2
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"textureProjGradOffset"
argument_list|,
name|gsampler2D
argument_list|,
name|float4
argument_list|,
name|float2
argument_list|,
name|float2
argument_list|,
name|int2
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|gvec4
argument_list|,
literal|"textureProjGradOffset"
argument_list|,
name|gsampler3D
argument_list|,
name|float4
argument_list|,
name|float3
argument_list|,
name|float3
argument_list|,
name|int3
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertBuiltIn
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
name|float1
argument_list|,
literal|"textureProjGradOffset"
argument_list|,
name|sampler2DShadow
argument_list|,
name|float4
argument_list|,
name|float2
argument_list|,
name|float2
argument_list|,
name|int2
argument_list|)
expr_stmt|;
comment|//
comment|// Depth range in window coordinates
comment|//
name|TFieldList
modifier|*
name|fields
init|=
name|NewPoolTFieldList
argument_list|()
decl_stmt|;
name|TSourceLoc
name|zeroSourceLoc
init|=
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
decl_stmt|;
name|TField
modifier|*
name|near
init|=
operator|new
name|TField
argument_list|(
operator|new
name|TType
argument_list|(
name|EbtFloat
argument_list|,
name|EbpHigh
argument_list|,
name|EvqGlobal
argument_list|,
literal|1
argument_list|)
argument_list|,
name|NewPoolTString
argument_list|(
literal|"near"
argument_list|)
argument_list|,
name|zeroSourceLoc
argument_list|)
decl_stmt|;
name|TField
modifier|*
name|far
init|=
operator|new
name|TField
argument_list|(
operator|new
name|TType
argument_list|(
name|EbtFloat
argument_list|,
name|EbpHigh
argument_list|,
name|EvqGlobal
argument_list|,
literal|1
argument_list|)
argument_list|,
name|NewPoolTString
argument_list|(
literal|"far"
argument_list|)
argument_list|,
name|zeroSourceLoc
argument_list|)
decl_stmt|;
name|TField
modifier|*
name|diff
init|=
operator|new
name|TField
argument_list|(
operator|new
name|TType
argument_list|(
name|EbtFloat
argument_list|,
name|EbpHigh
argument_list|,
name|EvqGlobal
argument_list|,
literal|1
argument_list|)
argument_list|,
name|NewPoolTString
argument_list|(
literal|"diff"
argument_list|)
argument_list|,
name|zeroSourceLoc
argument_list|)
decl_stmt|;
name|fields
operator|->
name|push_back
argument_list|(
name|near
argument_list|)
expr_stmt|;
name|fields
operator|->
name|push_back
argument_list|(
name|far
argument_list|)
expr_stmt|;
name|fields
operator|->
name|push_back
argument_list|(
name|diff
argument_list|)
expr_stmt|;
name|TStructure
modifier|*
name|depthRangeStruct
init|=
operator|new
name|TStructure
argument_list|(
name|NewPoolTString
argument_list|(
literal|"gl_DepthRangeParameters"
argument_list|)
argument_list|,
name|fields
argument_list|)
decl_stmt|;
name|TVariable
modifier|*
name|depthRangeParameters
init|=
operator|new
name|TVariable
argument_list|(
operator|&
name|depthRangeStruct
operator|->
name|name
argument_list|()
argument_list|,
name|depthRangeStruct
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|symbolTable
operator|.
name|insert
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|depthRangeParameters
argument_list|)
expr_stmt|;
name|TVariable
modifier|*
name|depthRange
init|=
operator|new
name|TVariable
argument_list|(
name|NewPoolTString
argument_list|(
literal|"gl_DepthRange"
argument_list|)
argument_list|,
name|TType
argument_list|(
name|depthRangeStruct
argument_list|)
argument_list|)
decl_stmt|;
name|depthRange
operator|->
name|setQualifier
argument_list|(
name|EvqUniform
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insert
argument_list|(
name|COMMON_BUILTINS
argument_list|,
name|depthRange
argument_list|)
expr_stmt|;
comment|//
comment|// Implementation dependent built-in constants.
comment|//
name|symbolTable
operator|.
name|insertConstInt
argument_list|(
name|COMMON_BUILTINS
argument_list|,
literal|"gl_MaxVertexAttribs"
argument_list|,
name|resources
operator|.
name|MaxVertexAttribs
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertConstInt
argument_list|(
name|COMMON_BUILTINS
argument_list|,
literal|"gl_MaxVertexUniformVectors"
argument_list|,
name|resources
operator|.
name|MaxVertexUniformVectors
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertConstInt
argument_list|(
name|COMMON_BUILTINS
argument_list|,
literal|"gl_MaxVertexTextureImageUnits"
argument_list|,
name|resources
operator|.
name|MaxVertexTextureImageUnits
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertConstInt
argument_list|(
name|COMMON_BUILTINS
argument_list|,
literal|"gl_MaxCombinedTextureImageUnits"
argument_list|,
name|resources
operator|.
name|MaxCombinedTextureImageUnits
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertConstInt
argument_list|(
name|COMMON_BUILTINS
argument_list|,
literal|"gl_MaxTextureImageUnits"
argument_list|,
name|resources
operator|.
name|MaxTextureImageUnits
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertConstInt
argument_list|(
name|COMMON_BUILTINS
argument_list|,
literal|"gl_MaxFragmentUniformVectors"
argument_list|,
name|resources
operator|.
name|MaxFragmentUniformVectors
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertConstInt
argument_list|(
name|ESSL1_BUILTINS
argument_list|,
literal|"gl_MaxVaryingVectors"
argument_list|,
name|resources
operator|.
name|MaxVaryingVectors
argument_list|)
expr_stmt|;
if|if
condition|(
name|spec
operator|!=
name|SH_CSS_SHADERS_SPEC
condition|)
block|{
name|symbolTable
operator|.
name|insertConstInt
argument_list|(
name|COMMON_BUILTINS
argument_list|,
literal|"gl_MaxDrawBuffers"
argument_list|,
name|resources
operator|.
name|MaxDrawBuffers
argument_list|)
expr_stmt|;
block|}
name|symbolTable
operator|.
name|insertConstInt
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
literal|"gl_MaxVertexOutputVectors"
argument_list|,
name|resources
operator|.
name|MaxVertexOutputVectors
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertConstInt
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
literal|"gl_MaxFragmentInputVectors"
argument_list|,
name|resources
operator|.
name|MaxFragmentInputVectors
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertConstInt
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
literal|"gl_MinProgramTexelOffset"
argument_list|,
name|resources
operator|.
name|MinProgramTexelOffset
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insertConstInt
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
literal|"gl_MaxProgramTexelOffset"
argument_list|,
name|resources
operator|.
name|MaxProgramTexelOffset
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|IdentifyBuiltIns
name|void
name|IdentifyBuiltIns
parameter_list|(
name|sh
operator|::
name|GLenum
name|type
parameter_list|,
name|ShShaderSpec
name|spec
parameter_list|,
specifier|const
name|ShBuiltInResources
modifier|&
name|resources
parameter_list|,
name|TSymbolTable
modifier|&
name|symbolTable
parameter_list|)
block|{
comment|//
comment|// Insert some special built-in variables that are not in
comment|// the built-in header files.
comment|//
switch|switch
condition|(
name|type
condition|)
block|{
case|case
name|GL_FRAGMENT_SHADER
case|:
name|symbolTable
operator|.
name|insert
argument_list|(
name|COMMON_BUILTINS
argument_list|,
operator|new
name|TVariable
argument_list|(
name|NewPoolTString
argument_list|(
literal|"gl_FragCoord"
argument_list|)
argument_list|,
name|TType
argument_list|(
name|EbtFloat
argument_list|,
name|EbpMedium
argument_list|,
name|EvqFragCoord
argument_list|,
literal|4
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insert
argument_list|(
name|COMMON_BUILTINS
argument_list|,
operator|new
name|TVariable
argument_list|(
name|NewPoolTString
argument_list|(
literal|"gl_FrontFacing"
argument_list|)
argument_list|,
name|TType
argument_list|(
name|EbtBool
argument_list|,
name|EbpUndefined
argument_list|,
name|EvqFrontFacing
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insert
argument_list|(
name|COMMON_BUILTINS
argument_list|,
operator|new
name|TVariable
argument_list|(
name|NewPoolTString
argument_list|(
literal|"gl_PointCoord"
argument_list|)
argument_list|,
name|TType
argument_list|(
name|EbtFloat
argument_list|,
name|EbpMedium
argument_list|,
name|EvqPointCoord
argument_list|,
literal|2
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|//
comment|// In CSS Shaders, gl_FragColor, gl_FragData, and gl_MaxDrawBuffers are not available.
comment|// Instead, css_MixColor and css_ColorMatrix are available.
comment|//
if|if
condition|(
name|spec
operator|!=
name|SH_CSS_SHADERS_SPEC
condition|)
block|{
name|symbolTable
operator|.
name|insert
argument_list|(
name|ESSL1_BUILTINS
argument_list|,
operator|new
name|TVariable
argument_list|(
name|NewPoolTString
argument_list|(
literal|"gl_FragColor"
argument_list|)
argument_list|,
name|TType
argument_list|(
name|EbtFloat
argument_list|,
name|EbpMedium
argument_list|,
name|EvqFragColor
argument_list|,
literal|4
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|TType
name|fragData
argument_list|(
name|EbtFloat
argument_list|,
name|EbpMedium
argument_list|,
name|EvqFragData
argument_list|,
literal|4
argument_list|,
literal|1
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|fragData
operator|.
name|setArraySize
argument_list|(
name|resources
operator|.
name|MaxDrawBuffers
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insert
argument_list|(
name|ESSL1_BUILTINS
argument_list|,
operator|new
name|TVariable
argument_list|(
name|NewPoolTString
argument_list|(
literal|"gl_FragData"
argument_list|)
argument_list|,
name|fragData
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|resources
operator|.
name|EXT_frag_depth
condition|)
block|{
name|symbolTable
operator|.
name|insert
argument_list|(
name|ESSL1_BUILTINS
argument_list|,
literal|"GL_EXT_frag_depth"
argument_list|,
operator|new
name|TVariable
argument_list|(
name|NewPoolTString
argument_list|(
literal|"gl_FragDepthEXT"
argument_list|)
argument_list|,
name|TType
argument_list|(
name|EbtFloat
argument_list|,
name|resources
operator|.
name|FragmentPrecisionHigh
condition|?
name|EbpHigh
else|:
name|EbpMedium
argument_list|,
name|EvqFragDepth
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|resources
operator|.
name|EXT_shader_framebuffer_fetch
operator|||
name|resources
operator|.
name|NV_shader_framebuffer_fetch
condition|)
block|{
name|TType
name|lastFragData
argument_list|(
name|EbtFloat
argument_list|,
name|EbpMedium
argument_list|,
name|EvqLastFragData
argument_list|,
literal|4
argument_list|,
literal|1
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|lastFragData
operator|.
name|setArraySize
argument_list|(
name|resources
operator|.
name|MaxDrawBuffers
argument_list|)
expr_stmt|;
if|if
condition|(
name|resources
operator|.
name|EXT_shader_framebuffer_fetch
condition|)
block|{
name|symbolTable
operator|.
name|insert
argument_list|(
name|ESSL1_BUILTINS
argument_list|,
literal|"GL_EXT_shader_framebuffer_fetch"
argument_list|,
operator|new
name|TVariable
argument_list|(
name|NewPoolTString
argument_list|(
literal|"gl_LastFragData"
argument_list|)
argument_list|,
name|lastFragData
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|resources
operator|.
name|NV_shader_framebuffer_fetch
condition|)
block|{
name|symbolTable
operator|.
name|insert
argument_list|(
name|ESSL1_BUILTINS
argument_list|,
literal|"GL_NV_shader_framebuffer_fetch"
argument_list|,
operator|new
name|TVariable
argument_list|(
name|NewPoolTString
argument_list|(
literal|"gl_LastFragColor"
argument_list|)
argument_list|,
name|TType
argument_list|(
name|EbtFloat
argument_list|,
name|EbpMedium
argument_list|,
name|EvqLastFragColor
argument_list|,
literal|4
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insert
argument_list|(
name|ESSL1_BUILTINS
argument_list|,
literal|"GL_NV_shader_framebuffer_fetch"
argument_list|,
operator|new
name|TVariable
argument_list|(
name|NewPoolTString
argument_list|(
literal|"gl_LastFragData"
argument_list|)
argument_list|,
name|lastFragData
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
elseif|else
if|if
condition|(
name|resources
operator|.
name|ARM_shader_framebuffer_fetch
condition|)
block|{
name|symbolTable
operator|.
name|insert
argument_list|(
name|ESSL1_BUILTINS
argument_list|,
literal|"GL_ARM_shader_framebuffer_fetch"
argument_list|,
operator|new
name|TVariable
argument_list|(
name|NewPoolTString
argument_list|(
literal|"gl_LastFragColorARM"
argument_list|)
argument_list|,
name|TType
argument_list|(
name|EbtFloat
argument_list|,
name|EbpMedium
argument_list|,
name|EvqLastFragColor
argument_list|,
literal|4
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|symbolTable
operator|.
name|insert
argument_list|(
name|ESSL1_BUILTINS
argument_list|,
operator|new
name|TVariable
argument_list|(
name|NewPoolTString
argument_list|(
literal|"css_MixColor"
argument_list|)
argument_list|,
name|TType
argument_list|(
name|EbtFloat
argument_list|,
name|EbpMedium
argument_list|,
name|EvqGlobal
argument_list|,
literal|4
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insert
argument_list|(
name|ESSL1_BUILTINS
argument_list|,
operator|new
name|TVariable
argument_list|(
name|NewPoolTString
argument_list|(
literal|"css_ColorMatrix"
argument_list|)
argument_list|,
name|TType
argument_list|(
name|EbtFloat
argument_list|,
name|EbpMedium
argument_list|,
name|EvqGlobal
argument_list|,
literal|4
argument_list|,
literal|4
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|GL_VERTEX_SHADER
case|:
name|symbolTable
operator|.
name|insert
argument_list|(
name|COMMON_BUILTINS
argument_list|,
operator|new
name|TVariable
argument_list|(
name|NewPoolTString
argument_list|(
literal|"gl_Position"
argument_list|)
argument_list|,
name|TType
argument_list|(
name|EbtFloat
argument_list|,
name|EbpHigh
argument_list|,
name|EvqPosition
argument_list|,
literal|4
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insert
argument_list|(
name|COMMON_BUILTINS
argument_list|,
operator|new
name|TVariable
argument_list|(
name|NewPoolTString
argument_list|(
literal|"gl_PointSize"
argument_list|)
argument_list|,
name|TType
argument_list|(
name|EbtFloat
argument_list|,
name|EbpMedium
argument_list|,
name|EvqPointSize
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|symbolTable
operator|.
name|insert
argument_list|(
name|ESSL3_BUILTINS
argument_list|,
operator|new
name|TVariable
argument_list|(
name|NewPoolTString
argument_list|(
literal|"gl_InstanceID"
argument_list|)
argument_list|,
name|TType
argument_list|(
name|EbtInt
argument_list|,
name|EbpHigh
argument_list|,
name|EvqInstanceID
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
break|break;
default|default:
name|assert
argument_list|(
literal|false
operator|&&
literal|"Language not supported"
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|InitExtensionBehavior
name|void
name|InitExtensionBehavior
parameter_list|(
specifier|const
name|ShBuiltInResources
modifier|&
name|resources
parameter_list|,
name|TExtensionBehavior
modifier|&
name|extBehavior
parameter_list|)
block|{
if|if
condition|(
name|resources
operator|.
name|OES_standard_derivatives
condition|)
name|extBehavior
index|[
literal|"GL_OES_standard_derivatives"
index|]
operator|=
name|EBhUndefined
expr_stmt|;
if|if
condition|(
name|resources
operator|.
name|OES_EGL_image_external
condition|)
name|extBehavior
index|[
literal|"GL_OES_EGL_image_external"
index|]
operator|=
name|EBhUndefined
expr_stmt|;
if|if
condition|(
name|resources
operator|.
name|ARB_texture_rectangle
condition|)
name|extBehavior
index|[
literal|"GL_ARB_texture_rectangle"
index|]
operator|=
name|EBhUndefined
expr_stmt|;
if|if
condition|(
name|resources
operator|.
name|EXT_draw_buffers
condition|)
name|extBehavior
index|[
literal|"GL_EXT_draw_buffers"
index|]
operator|=
name|EBhUndefined
expr_stmt|;
if|if
condition|(
name|resources
operator|.
name|EXT_frag_depth
condition|)
name|extBehavior
index|[
literal|"GL_EXT_frag_depth"
index|]
operator|=
name|EBhUndefined
expr_stmt|;
if|if
condition|(
name|resources
operator|.
name|EXT_shader_texture_lod
condition|)
name|extBehavior
index|[
literal|"GL_EXT_shader_texture_lod"
index|]
operator|=
name|EBhUndefined
expr_stmt|;
if|if
condition|(
name|resources
operator|.
name|EXT_shader_framebuffer_fetch
condition|)
name|extBehavior
index|[
literal|"GL_EXT_shader_framebuffer_fetch"
index|]
operator|=
name|EBhUndefined
expr_stmt|;
if|if
condition|(
name|resources
operator|.
name|NV_shader_framebuffer_fetch
condition|)
name|extBehavior
index|[
literal|"GL_NV_shader_framebuffer_fetch"
index|]
operator|=
name|EBhUndefined
expr_stmt|;
if|if
condition|(
name|resources
operator|.
name|ARM_shader_framebuffer_fetch
condition|)
name|extBehavior
index|[
literal|"GL_ARM_shader_framebuffer_fetch"
index|]
operator|=
name|EBhUndefined
expr_stmt|;
block|}
end_function
begin_function
DECL|function|ResetExtensionBehavior
name|void
name|ResetExtensionBehavior
parameter_list|(
name|TExtensionBehavior
modifier|&
name|extBehavior
parameter_list|)
block|{
for|for
control|(
name|auto
name|ext_iter
init|=
name|extBehavior
operator|.
name|begin
argument_list|()
init|;
name|ext_iter
operator|!=
name|extBehavior
operator|.
name|end
argument_list|()
condition|;
operator|++
name|ext_iter
control|)
block|{
name|ext_iter
operator|->
name|second
operator|=
name|EBhUndefined
expr_stmt|;
block|}
block|}
end_function
end_unit
