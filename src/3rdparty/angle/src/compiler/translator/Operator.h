begin_unit
begin_comment
comment|//
end_comment
begin_comment
comment|// Copyright (c) 2002-2015 The ANGLE Project Authors. All rights reserved.
end_comment
begin_comment
comment|// Use of this source code is governed by a BSD-style license that can be
end_comment
begin_comment
comment|// found in the LICENSE file.
end_comment
begin_comment
comment|//
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|COMPILER_TRANSLATOR_OPERATOR_H_
end_ifndef
begin_define
DECL|macro|COMPILER_TRANSLATOR_OPERATOR_H_
define|#
directive|define
name|COMPILER_TRANSLATOR_OPERATOR_H_
end_define
begin_comment
comment|//
end_comment
begin_comment
comment|// Operators used by the high-level (parse tree) representation.
end_comment
begin_comment
comment|//
end_comment
begin_enum
DECL|enum|TOperator
enum|enum
name|TOperator
block|{
DECL|enumerator|EOpNull
name|EOpNull
block|,
comment|// if in a node, should only mean a node is still being built
DECL|enumerator|EOpSequence
name|EOpSequence
block|,
comment|// denotes a list of statements, or parameters, etc.
DECL|enumerator|EOpFunctionCall
name|EOpFunctionCall
block|,
DECL|enumerator|EOpFunction
name|EOpFunction
block|,
comment|// For function definition
DECL|enumerator|EOpParameters
name|EOpParameters
block|,
comment|// an aggregate listing the parameters to a function
DECL|enumerator|EOpDeclaration
name|EOpDeclaration
block|,
DECL|enumerator|EOpInvariantDeclaration
name|EOpInvariantDeclaration
block|,
comment|// Specialized declarations for attributing invariance
DECL|enumerator|EOpPrototype
name|EOpPrototype
block|,
comment|//
comment|// Unary operators
comment|//
DECL|enumerator|EOpNegative
name|EOpNegative
block|,
DECL|enumerator|EOpPositive
name|EOpPositive
block|,
DECL|enumerator|EOpLogicalNot
name|EOpLogicalNot
block|,
DECL|enumerator|EOpVectorLogicalNot
name|EOpVectorLogicalNot
block|,
DECL|enumerator|EOpBitwiseNot
name|EOpBitwiseNot
block|,
DECL|enumerator|EOpPostIncrement
name|EOpPostIncrement
block|,
DECL|enumerator|EOpPostDecrement
name|EOpPostDecrement
block|,
DECL|enumerator|EOpPreIncrement
name|EOpPreIncrement
block|,
DECL|enumerator|EOpPreDecrement
name|EOpPreDecrement
block|,
comment|//
comment|// binary operations
comment|//
DECL|enumerator|EOpAdd
name|EOpAdd
block|,
DECL|enumerator|EOpSub
name|EOpSub
block|,
DECL|enumerator|EOpMul
name|EOpMul
block|,
DECL|enumerator|EOpDiv
name|EOpDiv
block|,
DECL|enumerator|EOpIMod
name|EOpIMod
block|,
DECL|enumerator|EOpEqual
name|EOpEqual
block|,
DECL|enumerator|EOpNotEqual
name|EOpNotEqual
block|,
DECL|enumerator|EOpVectorEqual
name|EOpVectorEqual
block|,
DECL|enumerator|EOpVectorNotEqual
name|EOpVectorNotEqual
block|,
DECL|enumerator|EOpLessThan
name|EOpLessThan
block|,
DECL|enumerator|EOpGreaterThan
name|EOpGreaterThan
block|,
DECL|enumerator|EOpLessThanEqual
name|EOpLessThanEqual
block|,
DECL|enumerator|EOpGreaterThanEqual
name|EOpGreaterThanEqual
block|,
DECL|enumerator|EOpComma
name|EOpComma
block|,
DECL|enumerator|EOpVectorTimesScalar
name|EOpVectorTimesScalar
block|,
DECL|enumerator|EOpVectorTimesMatrix
name|EOpVectorTimesMatrix
block|,
DECL|enumerator|EOpMatrixTimesVector
name|EOpMatrixTimesVector
block|,
DECL|enumerator|EOpMatrixTimesScalar
name|EOpMatrixTimesScalar
block|,
DECL|enumerator|EOpLogicalOr
name|EOpLogicalOr
block|,
DECL|enumerator|EOpLogicalXor
name|EOpLogicalXor
block|,
DECL|enumerator|EOpLogicalAnd
name|EOpLogicalAnd
block|,
DECL|enumerator|EOpBitShiftLeft
name|EOpBitShiftLeft
block|,
DECL|enumerator|EOpBitShiftRight
name|EOpBitShiftRight
block|,
DECL|enumerator|EOpBitwiseAnd
name|EOpBitwiseAnd
block|,
DECL|enumerator|EOpBitwiseXor
name|EOpBitwiseXor
block|,
DECL|enumerator|EOpBitwiseOr
name|EOpBitwiseOr
block|,
DECL|enumerator|EOpIndexDirect
name|EOpIndexDirect
block|,
DECL|enumerator|EOpIndexIndirect
name|EOpIndexIndirect
block|,
DECL|enumerator|EOpIndexDirectStruct
name|EOpIndexDirectStruct
block|,
DECL|enumerator|EOpIndexDirectInterfaceBlock
name|EOpIndexDirectInterfaceBlock
block|,
DECL|enumerator|EOpVectorSwizzle
name|EOpVectorSwizzle
block|,
comment|//
comment|// Built-in functions potentially mapped to operators
comment|//
DECL|enumerator|EOpRadians
name|EOpRadians
block|,
DECL|enumerator|EOpDegrees
name|EOpDegrees
block|,
DECL|enumerator|EOpSin
name|EOpSin
block|,
DECL|enumerator|EOpCos
name|EOpCos
block|,
DECL|enumerator|EOpTan
name|EOpTan
block|,
DECL|enumerator|EOpAsin
name|EOpAsin
block|,
DECL|enumerator|EOpAcos
name|EOpAcos
block|,
DECL|enumerator|EOpAtan
name|EOpAtan
block|,
DECL|enumerator|EOpSinh
name|EOpSinh
block|,
DECL|enumerator|EOpCosh
name|EOpCosh
block|,
DECL|enumerator|EOpTanh
name|EOpTanh
block|,
DECL|enumerator|EOpAsinh
name|EOpAsinh
block|,
DECL|enumerator|EOpAcosh
name|EOpAcosh
block|,
DECL|enumerator|EOpAtanh
name|EOpAtanh
block|,
DECL|enumerator|EOpPow
name|EOpPow
block|,
DECL|enumerator|EOpExp
name|EOpExp
block|,
DECL|enumerator|EOpLog
name|EOpLog
block|,
DECL|enumerator|EOpExp2
name|EOpExp2
block|,
DECL|enumerator|EOpLog2
name|EOpLog2
block|,
DECL|enumerator|EOpSqrt
name|EOpSqrt
block|,
DECL|enumerator|EOpInverseSqrt
name|EOpInverseSqrt
block|,
DECL|enumerator|EOpAbs
name|EOpAbs
block|,
DECL|enumerator|EOpSign
name|EOpSign
block|,
DECL|enumerator|EOpFloor
name|EOpFloor
block|,
DECL|enumerator|EOpTrunc
name|EOpTrunc
block|,
DECL|enumerator|EOpRound
name|EOpRound
block|,
DECL|enumerator|EOpRoundEven
name|EOpRoundEven
block|,
DECL|enumerator|EOpCeil
name|EOpCeil
block|,
DECL|enumerator|EOpFract
name|EOpFract
block|,
DECL|enumerator|EOpMod
name|EOpMod
block|,
DECL|enumerator|EOpModf
name|EOpModf
block|,
DECL|enumerator|EOpMin
name|EOpMin
block|,
DECL|enumerator|EOpMax
name|EOpMax
block|,
DECL|enumerator|EOpClamp
name|EOpClamp
block|,
DECL|enumerator|EOpMix
name|EOpMix
block|,
DECL|enumerator|EOpStep
name|EOpStep
block|,
DECL|enumerator|EOpSmoothStep
name|EOpSmoothStep
block|,
DECL|enumerator|EOpIsNan
name|EOpIsNan
block|,
DECL|enumerator|EOpIsInf
name|EOpIsInf
block|,
DECL|enumerator|EOpFloatBitsToInt
name|EOpFloatBitsToInt
block|,
DECL|enumerator|EOpFloatBitsToUint
name|EOpFloatBitsToUint
block|,
DECL|enumerator|EOpIntBitsToFloat
name|EOpIntBitsToFloat
block|,
DECL|enumerator|EOpUintBitsToFloat
name|EOpUintBitsToFloat
block|,
DECL|enumerator|EOpPackSnorm2x16
name|EOpPackSnorm2x16
block|,
DECL|enumerator|EOpPackUnorm2x16
name|EOpPackUnorm2x16
block|,
DECL|enumerator|EOpPackHalf2x16
name|EOpPackHalf2x16
block|,
DECL|enumerator|EOpUnpackSnorm2x16
name|EOpUnpackSnorm2x16
block|,
DECL|enumerator|EOpUnpackUnorm2x16
name|EOpUnpackUnorm2x16
block|,
DECL|enumerator|EOpUnpackHalf2x16
name|EOpUnpackHalf2x16
block|,
DECL|enumerator|EOpLength
name|EOpLength
block|,
DECL|enumerator|EOpDistance
name|EOpDistance
block|,
DECL|enumerator|EOpDot
name|EOpDot
block|,
DECL|enumerator|EOpCross
name|EOpCross
block|,
DECL|enumerator|EOpNormalize
name|EOpNormalize
block|,
DECL|enumerator|EOpFaceForward
name|EOpFaceForward
block|,
DECL|enumerator|EOpReflect
name|EOpReflect
block|,
DECL|enumerator|EOpRefract
name|EOpRefract
block|,
DECL|enumerator|EOpDFdx
name|EOpDFdx
block|,
comment|// Fragment only, OES_standard_derivatives extension
DECL|enumerator|EOpDFdy
name|EOpDFdy
block|,
comment|// Fragment only, OES_standard_derivatives extension
DECL|enumerator|EOpFwidth
name|EOpFwidth
block|,
comment|// Fragment only, OES_standard_derivatives extension
DECL|enumerator|EOpMatrixTimesMatrix
name|EOpMatrixTimesMatrix
block|,
DECL|enumerator|EOpOuterProduct
name|EOpOuterProduct
block|,
DECL|enumerator|EOpTranspose
name|EOpTranspose
block|,
DECL|enumerator|EOpDeterminant
name|EOpDeterminant
block|,
DECL|enumerator|EOpInverse
name|EOpInverse
block|,
DECL|enumerator|EOpAny
name|EOpAny
block|,
DECL|enumerator|EOpAll
name|EOpAll
block|,
comment|//
comment|// Branch
comment|//
DECL|enumerator|EOpKill
name|EOpKill
block|,
comment|// Fragment only
DECL|enumerator|EOpReturn
name|EOpReturn
block|,
DECL|enumerator|EOpBreak
name|EOpBreak
block|,
DECL|enumerator|EOpContinue
name|EOpContinue
block|,
comment|//
comment|// Constructors
comment|//
DECL|enumerator|EOpConstructInt
name|EOpConstructInt
block|,
DECL|enumerator|EOpConstructUInt
name|EOpConstructUInt
block|,
DECL|enumerator|EOpConstructBool
name|EOpConstructBool
block|,
DECL|enumerator|EOpConstructFloat
name|EOpConstructFloat
block|,
DECL|enumerator|EOpConstructVec2
name|EOpConstructVec2
block|,
DECL|enumerator|EOpConstructVec3
name|EOpConstructVec3
block|,
DECL|enumerator|EOpConstructVec4
name|EOpConstructVec4
block|,
DECL|enumerator|EOpConstructBVec2
name|EOpConstructBVec2
block|,
DECL|enumerator|EOpConstructBVec3
name|EOpConstructBVec3
block|,
DECL|enumerator|EOpConstructBVec4
name|EOpConstructBVec4
block|,
DECL|enumerator|EOpConstructIVec2
name|EOpConstructIVec2
block|,
DECL|enumerator|EOpConstructIVec3
name|EOpConstructIVec3
block|,
DECL|enumerator|EOpConstructIVec4
name|EOpConstructIVec4
block|,
DECL|enumerator|EOpConstructUVec2
name|EOpConstructUVec2
block|,
DECL|enumerator|EOpConstructUVec3
name|EOpConstructUVec3
block|,
DECL|enumerator|EOpConstructUVec4
name|EOpConstructUVec4
block|,
DECL|enumerator|EOpConstructMat2
name|EOpConstructMat2
block|,
DECL|enumerator|EOpConstructMat2x3
name|EOpConstructMat2x3
block|,
DECL|enumerator|EOpConstructMat2x4
name|EOpConstructMat2x4
block|,
DECL|enumerator|EOpConstructMat3x2
name|EOpConstructMat3x2
block|,
DECL|enumerator|EOpConstructMat3
name|EOpConstructMat3
block|,
DECL|enumerator|EOpConstructMat3x4
name|EOpConstructMat3x4
block|,
DECL|enumerator|EOpConstructMat4x2
name|EOpConstructMat4x2
block|,
DECL|enumerator|EOpConstructMat4x3
name|EOpConstructMat4x3
block|,
DECL|enumerator|EOpConstructMat4
name|EOpConstructMat4
block|,
DECL|enumerator|EOpConstructStruct
name|EOpConstructStruct
block|,
comment|//
comment|// moves
comment|//
DECL|enumerator|EOpAssign
name|EOpAssign
block|,
DECL|enumerator|EOpInitialize
name|EOpInitialize
block|,
DECL|enumerator|EOpAddAssign
name|EOpAddAssign
block|,
DECL|enumerator|EOpSubAssign
name|EOpSubAssign
block|,
DECL|enumerator|EOpMulAssign
name|EOpMulAssign
block|,
DECL|enumerator|EOpVectorTimesMatrixAssign
name|EOpVectorTimesMatrixAssign
block|,
DECL|enumerator|EOpVectorTimesScalarAssign
name|EOpVectorTimesScalarAssign
block|,
DECL|enumerator|EOpMatrixTimesScalarAssign
name|EOpMatrixTimesScalarAssign
block|,
DECL|enumerator|EOpMatrixTimesMatrixAssign
name|EOpMatrixTimesMatrixAssign
block|,
DECL|enumerator|EOpDivAssign
name|EOpDivAssign
block|,
DECL|enumerator|EOpIModAssign
name|EOpIModAssign
block|,
DECL|enumerator|EOpBitShiftLeftAssign
name|EOpBitShiftLeftAssign
block|,
DECL|enumerator|EOpBitShiftRightAssign
name|EOpBitShiftRightAssign
block|,
DECL|enumerator|EOpBitwiseAndAssign
name|EOpBitwiseAndAssign
block|,
DECL|enumerator|EOpBitwiseXorAssign
name|EOpBitwiseXorAssign
block|,
DECL|enumerator|EOpBitwiseOrAssign
name|EOpBitwiseOrAssign
block|}
enum|;
end_enum
begin_comment
comment|// Returns the string corresponding to the operator in GLSL
end_comment
begin_function_decl
specifier|const
name|char
modifier|*
name|GetOperatorString
parameter_list|(
name|TOperator
name|op
parameter_list|)
function_decl|;
end_function_decl
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// COMPILER_TRANSLATOR_OPERATOR_H_
end_comment
end_unit
