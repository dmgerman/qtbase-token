begin_unit
begin_comment
comment|//
end_comment
begin_comment
comment|// Copyright (c) 2012 The ANGLE Project Authors. All rights reserved.
end_comment
begin_comment
comment|// Use of this source code is governed by a BSD-style license that can be
end_comment
begin_comment
comment|// found in the LICENSE file.
end_comment
begin_comment
comment|//
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|COMPILER_TRANSLATOR_TIMING_RESTRICTFRAGMENTSHADERTIMING_H_
end_ifndef
begin_define
DECL|macro|COMPILER_TRANSLATOR_TIMING_RESTRICTFRAGMENTSHADERTIMING_H_
define|#
directive|define
name|COMPILER_TRANSLATOR_TIMING_RESTRICTFRAGMENTSHADERTIMING_H_
end_define
begin_include
include|#
directive|include
file|"compiler/translator/IntermNode.h"
end_include
begin_include
include|#
directive|include
file|"compiler/translator/depgraph/DependencyGraph.h"
end_include
begin_decl_stmt
DECL|variable|TInfoSinkBase
name|class
name|TInfoSinkBase
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|RestrictFragmentShaderTiming
range|:
name|TDependencyGraphTraverser
block|{
name|public
operator|:
name|RestrictFragmentShaderTiming
argument_list|(
name|TInfoSinkBase
operator|&
name|sink
argument_list|)
block|;
name|void
name|enforceRestrictions
argument_list|(
specifier|const
name|TDependencyGraph
operator|&
name|graph
argument_list|)
block|;
name|int
name|numErrors
argument_list|()
specifier|const
block|{
return|return
name|mNumErrors
return|;
block|}
name|void
name|visitArgument
argument_list|(
argument|TGraphArgument *parameter
argument_list|)
name|override
block|;
name|void
name|visitSelection
argument_list|(
argument|TGraphSelection *selection
argument_list|)
name|override
block|;
name|void
name|visitLoop
argument_list|(
argument|TGraphLoop *loop
argument_list|)
name|override
block|;
name|void
name|visitLogicalOp
argument_list|(
argument|TGraphLogicalOp *logicalOp
argument_list|)
name|override
block|;
name|private
operator|:
name|void
name|beginError
argument_list|(
specifier|const
name|TIntermNode
operator|*
name|node
argument_list|)
block|;
name|void
name|validateUserDefinedFunctionCallUsage
argument_list|(
specifier|const
name|TDependencyGraph
operator|&
name|graph
argument_list|)
block|;
name|bool
name|isSamplingOp
argument_list|(
argument|const TIntermAggregate *intermFunctionCall
argument_list|)
specifier|const
block|;
name|TInfoSinkBase
operator|&
name|mSink
block|;
name|int
name|mNumErrors
block|;
typedef|typedef
name|std
operator|::
name|set
operator|<
name|TString
operator|>
name|StringSet
expr_stmt|;
name|StringSet
name|mSamplingOps
decl_stmt|;
end_decl_stmt
begin_endif
unit|};
endif|#
directive|endif
end_endif
begin_comment
comment|// COMPILER_TRANSLATOR_TIMING_RESTRICTFRAGMENTSHADERTIMING_H_
end_comment
end_unit
