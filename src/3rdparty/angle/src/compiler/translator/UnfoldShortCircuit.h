begin_unit
begin_comment
comment|//
end_comment
begin_comment
comment|// Copyright (c) 2002-2012 The ANGLE Project Authors. All rights reserved.
end_comment
begin_comment
comment|// Use of this source code is governed by a BSD-style license that can be
end_comment
begin_comment
comment|// found in the LICENSE file.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// UnfoldShortCircuit is an AST traverser to output short-circuiting operators as if-else statements
end_comment
begin_comment
comment|//
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|COMPILER_UNFOLDSHORTCIRCUIT_H_
end_ifndef
begin_define
DECL|macro|COMPILER_UNFOLDSHORTCIRCUIT_H_
define|#
directive|define
name|COMPILER_UNFOLDSHORTCIRCUIT_H_
end_define
begin_include
include|#
directive|include
file|"compiler/translator/IntermNode.h"
end_include
begin_include
include|#
directive|include
file|"compiler/translator/ParseContext.h"
end_include
begin_decl_stmt
name|namespace
name|sh
block|{
name|class
name|OutputHLSL
decl_stmt|;
name|class
name|UnfoldShortCircuit
range|:
name|public
name|TIntermTraverser
block|{
name|public
operator|:
name|UnfoldShortCircuit
argument_list|(
name|TParseContext
operator|&
name|context
argument_list|,
name|OutputHLSL
operator|*
name|outputHLSL
argument_list|)
block|;
name|void
name|traverse
argument_list|(
name|TIntermNode
operator|*
name|node
argument_list|)
block|;
name|bool
name|visitBinary
argument_list|(
argument|Visit visit
argument_list|,
argument|TIntermBinary*
argument_list|)
block|;
name|bool
name|visitSelection
argument_list|(
argument|Visit visit
argument_list|,
argument|TIntermSelection *node
argument_list|)
block|;
name|bool
name|visitLoop
argument_list|(
argument|Visit visit
argument_list|,
argument|TIntermLoop *node
argument_list|)
block|;
name|int
name|getNextTemporaryIndex
argument_list|()
block|;
name|protected
operator|:
name|TParseContext
operator|&
name|mContext
block|;
name|OutputHLSL
operator|*
specifier|const
name|mOutputHLSL
block|;
name|int
name|mTemporaryIndex
block|; }
decl_stmt|;
block|}
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// COMPILER_UNFOLDSHORTCIRCUIT_H_
end_comment
end_unit
