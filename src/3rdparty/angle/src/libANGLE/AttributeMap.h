begin_unit
begin_comment
comment|//
end_comment
begin_comment
comment|// Copyright (c) 2014 The ANGLE Project Authors. All rights reserved.
end_comment
begin_comment
comment|// Use of this source code is governed by a BSD-style license that can be
end_comment
begin_comment
comment|// found in the LICENSE file.
end_comment
begin_comment
comment|//
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|LIBANGLE_ATTRIBUTEMAP_H_
end_ifndef
begin_define
DECL|macro|LIBANGLE_ATTRIBUTEMAP_H_
define|#
directive|define
name|LIBANGLE_ATTRIBUTEMAP_H_
end_define
begin_include
include|#
directive|include
file|<EGL/egl.h>
end_include
begin_include
include|#
directive|include
file|<map>
end_include
begin_decl_stmt
name|namespace
name|egl
block|{
name|class
name|AttributeMap
block|{
name|public
label|:
name|AttributeMap
argument_list|()
expr_stmt|;
name|explicit
name|AttributeMap
parameter_list|(
specifier|const
name|EGLint
modifier|*
name|attributes
parameter_list|)
function_decl|;
name|virtual
name|void
name|insert
parameter_list|(
name|EGLint
name|key
parameter_list|,
name|EGLint
name|value
parameter_list|)
function_decl|;
name|virtual
name|bool
name|contains
argument_list|(
name|EGLint
name|key
argument_list|)
decl|const
decl_stmt|;
name|virtual
name|EGLint
name|get
argument_list|(
name|EGLint
name|key
argument_list|,
name|EGLint
name|defaultValue
argument_list|)
decl|const
decl_stmt|;
typedef|typedef
name|std
operator|::
name|map
operator|<
name|EGLint
operator|,
name|EGLint
operator|>
operator|::
name|const_iterator
name|const_iterator
expr_stmt|;
name|const_iterator
name|begin
argument_list|()
specifier|const
expr_stmt|;
name|const_iterator
name|end
argument_list|()
specifier|const
expr_stmt|;
name|private
label|:
name|std
operator|::
name|map
operator|<
name|EGLint
operator|,
name|EGLint
operator|>
name|mAttributes
expr_stmt|;
block|}
empty_stmt|;
block|}
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// LIBANGLE_ATTRIBUTEMAP_H_
end_comment
end_unit
