begin_unit
begin_comment
comment|//
end_comment
begin_comment
comment|// Copyright (c) 2014 The ANGLE Project Authors. All rights reserved.
end_comment
begin_comment
comment|// Use of this source code is governed by a BSD-style license that can be
end_comment
begin_comment
comment|// found in the LICENSE file.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// Data.cpp: Container class for all GL relevant state, caps and objects
end_comment
begin_include
include|#
directive|include
file|"libANGLE/Data.h"
end_include
begin_include
include|#
directive|include
file|"libANGLE/ResourceManager.h"
end_include
begin_namespace
DECL|namespace|gl
namespace|namespace
name|gl
block|{
DECL|function|Data
name|Data
operator|::
name|Data
parameter_list|(
name|uintptr_t
name|contextIn
parameter_list|,
name|GLint
name|clientVersionIn
parameter_list|,
specifier|const
name|State
modifier|&
name|stateIn
parameter_list|,
specifier|const
name|Caps
modifier|&
name|capsIn
parameter_list|,
specifier|const
name|TextureCapsMap
modifier|&
name|textureCapsIn
parameter_list|,
specifier|const
name|Extensions
modifier|&
name|extensionsIn
parameter_list|,
specifier|const
name|ResourceManager
modifier|*
name|resourceManagerIn
parameter_list|,
specifier|const
name|Limitations
modifier|&
name|limitationsIn
parameter_list|)
member_init_list|:
name|context
argument_list|(
name|contextIn
argument_list|)
member_init_list|,
name|clientVersion
argument_list|(
name|clientVersionIn
argument_list|)
member_init_list|,
name|state
argument_list|(
operator|&
name|stateIn
argument_list|)
member_init_list|,
name|caps
argument_list|(
operator|&
name|capsIn
argument_list|)
member_init_list|,
name|textureCaps
argument_list|(
operator|&
name|textureCapsIn
argument_list|)
member_init_list|,
name|extensions
argument_list|(
operator|&
name|extensionsIn
argument_list|)
member_init_list|,
name|resourceManager
argument_list|(
name|resourceManagerIn
argument_list|)
member_init_list|,
name|limitations
argument_list|(
operator|&
name|limitationsIn
argument_list|)
block|{}
DECL|function|~Data
name|Data
operator|::
name|~
name|Data
parameter_list|()
block|{ }
DECL|function|ValidationContext
name|ValidationContext
operator|::
name|ValidationContext
parameter_list|(
name|GLint
name|clientVersion
parameter_list|,
specifier|const
name|State
modifier|&
name|state
parameter_list|,
specifier|const
name|Caps
modifier|&
name|caps
parameter_list|,
specifier|const
name|TextureCapsMap
modifier|&
name|textureCaps
parameter_list|,
specifier|const
name|Extensions
modifier|&
name|extensions
parameter_list|,
specifier|const
name|ResourceManager
modifier|*
name|resourceManager
parameter_list|,
specifier|const
name|Limitations
modifier|&
name|limitations
parameter_list|,
name|bool
name|skipValidation
parameter_list|)
member_init_list|:
name|mData
argument_list|(
cast|reinterpret_cast
argument_list|<
name|uintptr_t
argument_list|>
argument_list|(
name|this
argument_list|)
argument_list|,
name|clientVersion
argument_list|,
name|state
argument_list|,
name|caps
argument_list|,
name|textureCaps
argument_list|,
name|extensions
argument_list|,
name|resourceManager
argument_list|,
name|limitations
argument_list|)
member_init_list|,
name|mSkipValidation
argument_list|(
name|skipValidation
argument_list|)
block|{ }
block|}
end_namespace
begin_comment
comment|// namespace gl
end_comment
end_unit
