begin_unit
begin_comment
comment|//
end_comment
begin_comment
comment|// Copyright (c) 2015 The ANGLE Project Authors. All rights reserved.
end_comment
begin_comment
comment|// Use of this source code is governed by a BSD-style license that can be
end_comment
begin_comment
comment|// found in the LICENSE file.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// validationEGL.h: Validation functions for generic EGL entry point parameters
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|LIBANGLE_VALIDATIONEGL_H_
end_ifndef
begin_define
DECL|macro|LIBANGLE_VALIDATIONEGL_H_
define|#
directive|define
name|LIBANGLE_VALIDATIONEGL_H_
end_define
begin_include
include|#
directive|include
file|"libANGLE/Error.h"
end_include
begin_include
include|#
directive|include
file|<EGL/egl.h>
end_include
begin_decl_stmt
name|namespace
name|gl
block|{
name|class
name|Context
decl_stmt|;
block|}
end_decl_stmt
begin_decl_stmt
name|namespace
name|egl
block|{
name|class
name|AttributeMap
decl_stmt|;
struct_decl|struct
name|Config
struct_decl|;
name|class
name|Device
decl_stmt|;
name|class
name|Display
decl_stmt|;
name|class
name|Image
decl_stmt|;
name|class
name|Surface
decl_stmt|;
comment|// Object validation
name|Error
name|ValidateDisplay
parameter_list|(
specifier|const
name|Display
modifier|*
name|display
parameter_list|)
function_decl|;
name|Error
name|ValidateSurface
parameter_list|(
specifier|const
name|Display
modifier|*
name|display
parameter_list|,
name|Surface
modifier|*
name|surface
parameter_list|)
function_decl|;
name|Error
name|ValidateConfig
parameter_list|(
specifier|const
name|Display
modifier|*
name|display
parameter_list|,
specifier|const
name|Config
modifier|*
name|config
parameter_list|)
function_decl|;
name|Error
name|ValidateContext
argument_list|(
specifier|const
name|Display
operator|*
name|display
argument_list|,
name|gl
operator|::
name|Context
operator|*
name|context
argument_list|)
decl_stmt|;
name|Error
name|ValidateImage
parameter_list|(
specifier|const
name|Display
modifier|*
name|display
parameter_list|,
specifier|const
name|Image
modifier|*
name|image
parameter_list|)
function_decl|;
comment|// Entry point validation
name|Error
name|ValidateCreateContext
argument_list|(
name|Display
operator|*
name|display
argument_list|,
name|Config
operator|*
name|configuration
argument_list|,
name|gl
operator|::
name|Context
operator|*
name|shareContext
argument_list|,
specifier|const
name|AttributeMap
operator|&
name|attributes
argument_list|)
decl_stmt|;
name|Error
name|ValidateCreateWindowSurface
parameter_list|(
name|Display
modifier|*
name|display
parameter_list|,
name|Config
modifier|*
name|config
parameter_list|,
name|EGLNativeWindowType
name|window
parameter_list|,
specifier|const
name|AttributeMap
modifier|&
name|attributes
parameter_list|)
function_decl|;
name|Error
name|ValidateCreatePbufferSurface
parameter_list|(
name|Display
modifier|*
name|display
parameter_list|,
name|Config
modifier|*
name|config
parameter_list|,
specifier|const
name|AttributeMap
modifier|&
name|attributes
parameter_list|)
function_decl|;
name|Error
name|ValidateCreatePbufferFromClientBuffer
parameter_list|(
name|Display
modifier|*
name|display
parameter_list|,
name|EGLenum
name|buftype
parameter_list|,
name|EGLClientBuffer
name|buffer
parameter_list|,
name|Config
modifier|*
name|config
parameter_list|,
specifier|const
name|AttributeMap
modifier|&
name|attributes
parameter_list|)
function_decl|;
name|Error
name|ValidateCreateImageKHR
argument_list|(
specifier|const
name|Display
operator|*
name|display
argument_list|,
name|gl
operator|::
name|Context
operator|*
name|context
argument_list|,
name|EGLenum
name|target
argument_list|,
name|EGLClientBuffer
name|buffer
argument_list|,
specifier|const
name|AttributeMap
operator|&
name|attributes
argument_list|)
decl_stmt|;
name|Error
name|ValidateDestroyImageKHR
parameter_list|(
specifier|const
name|Display
modifier|*
name|display
parameter_list|,
specifier|const
name|Image
modifier|*
name|image
parameter_list|)
function_decl|;
name|Error
name|ValidateCreateDeviceANGLE
parameter_list|(
name|EGLint
name|device_type
parameter_list|,
name|void
modifier|*
name|native_device
parameter_list|,
specifier|const
name|EGLAttrib
modifier|*
name|attrib_list
parameter_list|)
function_decl|;
name|Error
name|ValidateReleaseDeviceANGLE
parameter_list|(
name|Device
modifier|*
name|device
parameter_list|)
function_decl|;
comment|// Other validation
name|Error
name|ValidateCompatibleConfigs
parameter_list|(
specifier|const
name|Display
modifier|*
name|display
parameter_list|,
specifier|const
name|Config
modifier|*
name|config1
parameter_list|,
specifier|const
name|Surface
modifier|*
name|surface
parameter_list|,
specifier|const
name|Config
modifier|*
name|config2
parameter_list|,
name|EGLint
name|surfaceType
parameter_list|)
function_decl|;
block|}
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// LIBANGLE_VALIDATIONEGL_H_
end_comment
end_unit
