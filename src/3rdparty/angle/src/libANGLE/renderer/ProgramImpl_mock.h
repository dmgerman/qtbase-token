begin_unit
begin_comment
comment|//
end_comment
begin_comment
comment|// Copyright 2015 The ANGLE Project Authors. All rights reserved.
end_comment
begin_comment
comment|// Use of this source code is governed by a BSD-style license that can be
end_comment
begin_comment
comment|// found in the LICENSE file.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// ProgramImpl_mock.h:
end_comment
begin_comment
comment|//   Defines a mock of the ProgramImpl class.
end_comment
begin_comment
comment|//
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|LIBANGLE_RENDERER_PROGRAMIMPLMOCK_H_
end_ifndef
begin_define
DECL|macro|LIBANGLE_RENDERER_PROGRAMIMPLMOCK_H_
define|#
directive|define
name|LIBANGLE_RENDERER_PROGRAMIMPLMOCK_H_
end_define
begin_include
include|#
directive|include
file|"gmock/gmock.h"
end_include
begin_include
include|#
directive|include
file|"libANGLE/renderer/ProgramImpl.h"
end_include
begin_decl_stmt
name|namespace
name|rx
block|{
name|class
name|MockProgramImpl
range|:
name|public
name|rx
operator|::
name|ProgramImpl
block|{
name|public
operator|:
name|MockProgramImpl
argument_list|()
operator|:
name|ProgramImpl
argument_list|(
argument|gl::Program::Data()
argument_list|)
block|{}
name|virtual
operator|~
name|MockProgramImpl
argument_list|()
block|{
name|destroy
argument_list|()
block|; }
name|MOCK_METHOD2
argument_list|(
name|load
argument_list|,
name|LinkResult
argument_list|(
name|gl
operator|::
name|InfoLog
operator|&
argument_list|,
name|gl
operator|::
name|BinaryInputStream
operator|*
argument_list|)
argument_list|)
block|;
name|MOCK_METHOD1
argument_list|(
name|save
argument_list|,
name|gl
operator|::
name|Error
argument_list|(
name|gl
operator|::
name|BinaryOutputStream
operator|*
argument_list|)
argument_list|)
block|;
name|MOCK_METHOD1
argument_list|(
name|setBinaryRetrievableHint
argument_list|,
name|void
argument_list|(
name|bool
argument_list|)
argument_list|)
block|;
name|MOCK_METHOD2
argument_list|(
name|link
argument_list|,
name|LinkResult
argument_list|(
specifier|const
name|gl
operator|::
name|Data
operator|&
argument_list|,
name|gl
operator|::
name|InfoLog
operator|&
argument_list|)
argument_list|)
block|;
name|MOCK_METHOD2
argument_list|(
name|validate
argument_list|,
name|GLboolean
argument_list|(
specifier|const
name|gl
operator|::
name|Caps
operator|&
argument_list|,
name|gl
operator|::
name|InfoLog
operator|*
argument_list|)
argument_list|)
block|;
name|MOCK_METHOD3
argument_list|(
name|setUniform1fv
argument_list|,
name|void
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
argument_list|)
block|;
name|MOCK_METHOD3
argument_list|(
name|setUniform2fv
argument_list|,
name|void
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
argument_list|)
block|;
name|MOCK_METHOD3
argument_list|(
name|setUniform3fv
argument_list|,
name|void
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
argument_list|)
block|;
name|MOCK_METHOD3
argument_list|(
name|setUniform4fv
argument_list|,
name|void
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
argument_list|)
block|;
name|MOCK_METHOD3
argument_list|(
name|setUniform1iv
argument_list|,
name|void
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
argument_list|)
block|;
name|MOCK_METHOD3
argument_list|(
name|setUniform2iv
argument_list|,
name|void
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
argument_list|)
block|;
name|MOCK_METHOD3
argument_list|(
name|setUniform3iv
argument_list|,
name|void
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
argument_list|)
block|;
name|MOCK_METHOD3
argument_list|(
name|setUniform4iv
argument_list|,
name|void
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
argument_list|)
block|;
name|MOCK_METHOD3
argument_list|(
name|setUniform1uiv
argument_list|,
name|void
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
argument_list|)
block|;
name|MOCK_METHOD3
argument_list|(
name|setUniform2uiv
argument_list|,
name|void
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
argument_list|)
block|;
name|MOCK_METHOD3
argument_list|(
name|setUniform3uiv
argument_list|,
name|void
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
argument_list|)
block|;
name|MOCK_METHOD3
argument_list|(
name|setUniform4uiv
argument_list|,
name|void
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
argument_list|)
block|;
name|MOCK_METHOD4
argument_list|(
name|setUniformMatrix2fv
argument_list|,
name|void
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
argument_list|)
block|;
name|MOCK_METHOD4
argument_list|(
name|setUniformMatrix3fv
argument_list|,
name|void
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
argument_list|)
block|;
name|MOCK_METHOD4
argument_list|(
name|setUniformMatrix4fv
argument_list|,
name|void
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
argument_list|)
block|;
name|MOCK_METHOD4
argument_list|(
name|setUniformMatrix2x3fv
argument_list|,
name|void
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
argument_list|)
block|;
name|MOCK_METHOD4
argument_list|(
name|setUniformMatrix3x2fv
argument_list|,
name|void
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
argument_list|)
block|;
name|MOCK_METHOD4
argument_list|(
name|setUniformMatrix2x4fv
argument_list|,
name|void
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
argument_list|)
block|;
name|MOCK_METHOD4
argument_list|(
name|setUniformMatrix4x2fv
argument_list|,
name|void
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
argument_list|)
block|;
name|MOCK_METHOD4
argument_list|(
name|setUniformMatrix3x4fv
argument_list|,
name|void
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
argument_list|)
block|;
name|MOCK_METHOD4
argument_list|(
name|setUniformMatrix4x3fv
argument_list|,
name|void
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
argument_list|)
block|;
name|MOCK_METHOD2
argument_list|(
name|setUniformBlockBinding
argument_list|,
name|void
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|)
argument_list|)
block|;
name|MOCK_CONST_METHOD2
argument_list|(
name|getUniformBlockSize
argument_list|,
name|bool
argument_list|(
specifier|const
name|std
operator|::
name|string
operator|&
argument_list|,
name|size_t
operator|*
argument_list|)
argument_list|)
block|;
name|MOCK_CONST_METHOD2
argument_list|(
name|getUniformBlockMemberInfo
argument_list|,
name|bool
argument_list|(
specifier|const
name|std
operator|::
name|string
operator|&
argument_list|,
name|sh
operator|::
name|BlockMemberInfo
operator|*
argument_list|)
argument_list|)
block|;
name|MOCK_METHOD0
argument_list|(
name|destroy
argument_list|,
name|void
argument_list|()
argument_list|)
block|; }
decl_stmt|;
specifier|inline
operator|::
name|testing
operator|::
name|NiceMock
operator|<
name|MockProgramImpl
operator|>
operator|*
name|MakeProgramMock
argument_list|()
block|{
operator|::
name|testing
operator|::
name|NiceMock
operator|<
name|MockProgramImpl
operator|>
operator|*
name|programImpl
operator|=
name|new
operator|::
name|testing
operator|::
name|NiceMock
operator|<
name|MockProgramImpl
operator|>
operator|(
operator|)
block|;
comment|// TODO(jmadill): add ON_CALLS for returning methods
comment|// We must mock the destructor since NiceMock doesn't work for destructors.
name|EXPECT_CALL
argument_list|(
operator|*
name|programImpl
argument_list|,
name|destroy
argument_list|()
argument_list|)
operator|.
name|Times
argument_list|(
literal|1
argument_list|)
operator|.
name|RetiresOnSaturation
argument_list|()
block|;
return|return
name|programImpl
return|;
block|}
block|}
end_decl_stmt
begin_comment
comment|// namespace rx
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// LIBANGLE_RENDERER_PROGRAMIMPLMOCK_H_
end_comment
end_unit
