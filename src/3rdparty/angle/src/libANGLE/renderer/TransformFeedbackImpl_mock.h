begin_unit
begin_comment
comment|//
end_comment
begin_comment
comment|// Copyright (c) 2015 The ANGLE Project Authors. All rights reserved.
end_comment
begin_comment
comment|// Use of this source code is governed by a BSD-style license that can be
end_comment
begin_comment
comment|// found in the LICENSE file.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// TransformFeedbackImpl_mock.h: Defines a mock of the TransformFeedbackImpl class.
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|LIBANGLE_RENDERER_TRANSFORMFEEDBACKIMPLMOCK_H_
end_ifndef
begin_define
DECL|macro|LIBANGLE_RENDERER_TRANSFORMFEEDBACKIMPLMOCK_H_
define|#
directive|define
name|LIBANGLE_RENDERER_TRANSFORMFEEDBACKIMPLMOCK_H_
end_define
begin_include
include|#
directive|include
file|"gmock/gmock.h"
end_include
begin_include
include|#
directive|include
file|"libANGLE/renderer/TransformFeedbackImpl.h"
end_include
begin_decl_stmt
name|namespace
name|rx
block|{
name|class
name|MockTransformFeedbackImpl
range|:
name|public
name|TransformFeedbackImpl
block|{
name|public
operator|:
operator|~
name|MockTransformFeedbackImpl
argument_list|()
block|{
name|destructor
argument_list|()
block|; }
name|MOCK_METHOD1
argument_list|(
name|begin
argument_list|,
name|void
argument_list|(
argument|GLenum primitiveMode
argument_list|)
argument_list|)
block|;
name|MOCK_METHOD0
argument_list|(
name|end
argument_list|,
name|void
argument_list|()
argument_list|)
block|;
name|MOCK_METHOD0
argument_list|(
name|pause
argument_list|,
name|void
argument_list|()
argument_list|)
block|;
name|MOCK_METHOD0
argument_list|(
name|resume
argument_list|,
name|void
argument_list|()
argument_list|)
block|;
name|MOCK_METHOD1
argument_list|(
name|bindGenericBuffer
argument_list|,
name|void
argument_list|(
specifier|const
name|BindingPointer
operator|<
name|gl
operator|::
name|Buffer
operator|>
operator|&
argument_list|)
argument_list|)
block|;
name|MOCK_METHOD2
argument_list|(
name|bindIndexedBuffer
argument_list|,
name|void
argument_list|(
name|size_t
argument_list|,
specifier|const
name|OffsetBindingPointer
operator|<
name|gl
operator|::
name|Buffer
operator|>
operator|&
argument_list|)
argument_list|)
block|;
name|MOCK_METHOD0
argument_list|(
name|destructor
argument_list|,
name|void
argument_list|()
argument_list|)
block|; }
decl_stmt|;
block|}
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// LIBANGLE_RENDERER_TRANSFORMFEEDBACKIMPLMOCK_H_
end_comment
end_unit
