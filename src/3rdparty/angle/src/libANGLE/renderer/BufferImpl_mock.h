begin_unit
begin_comment
comment|//
end_comment
begin_comment
comment|// Copyright 2015 The ANGLE Project Authors. All rights reserved.
end_comment
begin_comment
comment|// Use of this source code is governed by a BSD-style license that can be
end_comment
begin_comment
comment|// found in the LICENSE file.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// BufferImpl_mock.h: Defines a mock of the BufferImpl class.
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|LIBANGLE_RENDERER_BUFFERIMPLMOCK_H_
end_ifndef
begin_define
DECL|macro|LIBANGLE_RENDERER_BUFFERIMPLMOCK_H_
define|#
directive|define
name|LIBANGLE_RENDERER_BUFFERIMPLMOCK_H_
end_define
begin_include
include|#
directive|include
file|"gmock/gmock.h"
end_include
begin_include
include|#
directive|include
file|"libANGLE/renderer/BufferImpl.h"
end_include
begin_decl_stmt
name|namespace
name|rx
block|{
name|class
name|MockBufferImpl
range|:
name|public
name|BufferImpl
block|{
name|public
operator|:
operator|~
name|MockBufferImpl
argument_list|()
block|{
name|destructor
argument_list|()
block|; }
name|MOCK_METHOD3
argument_list|(
name|setData
argument_list|,
name|gl
operator|::
name|Error
argument_list|(
specifier|const
name|void
operator|*
argument_list|,
name|size_t
argument_list|,
name|GLenum
argument_list|)
argument_list|)
block|;
name|MOCK_METHOD3
argument_list|(
name|setSubData
argument_list|,
name|gl
operator|::
name|Error
argument_list|(
specifier|const
name|void
operator|*
argument_list|,
name|size_t
argument_list|,
name|size_t
argument_list|)
argument_list|)
block|;
name|MOCK_METHOD4
argument_list|(
name|copySubData
argument_list|,
name|gl
operator|::
name|Error
argument_list|(
name|BufferImpl
operator|*
argument_list|,
name|GLintptr
argument_list|,
name|GLintptr
argument_list|,
name|GLsizeiptr
argument_list|)
argument_list|)
block|;
name|MOCK_METHOD2
argument_list|(
name|map
argument_list|,
name|gl
operator|::
name|Error
argument_list|(
name|GLenum
argument_list|,
name|GLvoid
operator|*
operator|*
argument_list|)
argument_list|)
block|;
name|MOCK_METHOD4
argument_list|(
name|mapRange
argument_list|,
name|gl
operator|::
name|Error
argument_list|(
name|size_t
argument_list|,
name|size_t
argument_list|,
name|GLbitfield
argument_list|,
name|GLvoid
operator|*
operator|*
argument_list|)
argument_list|)
block|;
name|MOCK_METHOD1
argument_list|(
name|unmap
argument_list|,
name|gl
operator|::
name|Error
argument_list|(
name|GLboolean
operator|*
name|result
argument_list|)
argument_list|)
block|;
name|MOCK_METHOD5
argument_list|(
name|getIndexRange
argument_list|,
name|gl
operator|::
name|Error
argument_list|(
name|GLenum
argument_list|,
name|size_t
argument_list|,
name|size_t
argument_list|,
name|bool
argument_list|,
name|gl
operator|::
name|IndexRange
operator|*
argument_list|)
argument_list|)
block|;
name|MOCK_METHOD0
argument_list|(
name|destructor
argument_list|,
name|void
argument_list|()
argument_list|)
block|; }
decl_stmt|;
block|}
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// LIBANGLE_RENDERER_BUFFERIMPLMOCK_H_
end_comment
end_unit
