begin_unit
begin_comment
comment|// GENERATED FILE - DO NOT EDIT.
end_comment
begin_comment
comment|// Generated by gen_load_functions_table.py using data from load_functions_data.json
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// Copyright 2015 The ANGLE Project Authors. All rights reserved.
end_comment
begin_comment
comment|// Use of this source code is governed by a BSD-style license that can be
end_comment
begin_comment
comment|// found in the LICENSE file.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// load_functions_table:
end_comment
begin_comment
comment|//   Contains the GetLoadFunctionsMap for texture_format_util.h
end_comment
begin_comment
comment|//
end_comment
begin_include
include|#
directive|include
file|"libANGLE/renderer/d3d/d3d11/load_functions_table.h"
end_include
begin_include
include|#
directive|include
file|"libANGLE/renderer/d3d/d3d11/formatutils11.h"
end_include
begin_include
include|#
directive|include
file|"libANGLE/renderer/d3d/d3d11/texture_format_table.h"
end_include
begin_include
include|#
directive|include
file|"libANGLE/renderer/d3d/loadimage.h"
end_include
begin_include
include|#
directive|include
file|"libANGLE/renderer/d3d/loadimage_etc.h"
end_include
begin_namespace
DECL|namespace|rx
namespace|namespace
name|rx
block|{
DECL|namespace|d3d11
namespace|namespace
name|d3d11
block|{
namespace|namespace
block|{
comment|// ES3 image loading functions vary based on:
comment|//    - the GL internal format (supplied to glTex*Image*D)
comment|//    - the GL data type given (supplied to glTex*Image*D)
comment|//    - the target DXGI_FORMAT that the image will be loaded into (which is chosen based on the D3D
comment|//    device's capabilities)
comment|// This map type determines which loading function to use, based on these three parameters.
comment|// Source formats and types are taken from Tables 3.2 and 3.3 of the ES 3 spec.
DECL|function|UnimplementedLoadFunction
name|void
name|UnimplementedLoadFunction
parameter_list|(
name|size_t
name|width
parameter_list|,
name|size_t
name|height
parameter_list|,
name|size_t
name|depth
parameter_list|,
specifier|const
name|uint8_t
modifier|*
name|input
parameter_list|,
name|size_t
name|inputRowPitch
parameter_list|,
name|size_t
name|inputDepthPitch
parameter_list|,
name|uint8_t
modifier|*
name|output
parameter_list|,
name|size_t
name|outputRowPitch
parameter_list|,
name|size_t
name|outputDepthPitch
parameter_list|)
block|{
name|UNIMPLEMENTED
argument_list|()
expr_stmt|;
block|}
DECL|function|UnreachableLoadFunction
name|void
name|UnreachableLoadFunction
parameter_list|(
name|size_t
name|width
parameter_list|,
name|size_t
name|height
parameter_list|,
name|size_t
name|depth
parameter_list|,
specifier|const
name|uint8_t
modifier|*
name|input
parameter_list|,
name|size_t
name|inputRowPitch
parameter_list|,
name|size_t
name|inputDepthPitch
parameter_list|,
name|uint8_t
modifier|*
name|output
parameter_list|,
name|size_t
name|outputRowPitch
parameter_list|,
name|size_t
name|outputDepthPitch
parameter_list|)
block|{
name|UNREACHABLE
argument_list|()
expr_stmt|;
block|}
block|}
comment|// namespace
comment|// TODO we can replace these maps with more generated code
DECL|function|GetLoadFunctionsMap
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
modifier|&
name|GetLoadFunctionsMap
parameter_list|(
name|GLenum
name|internalFormat
parameter_list|,
name|DXGI_FORMAT
name|dxgiFormat
parameter_list|)
block|{
comment|// clang-format off
switch|switch
condition|(
name|internalFormat
condition|)
block|{
case|case
name|GL_ALPHA
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R16G16B16A16_FLOAT
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_HALF_FLOAT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadA16FToRGBA16F
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|loadMap
index|[
name|GL_HALF_FLOAT_OES
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadA16FToRGBA16F
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|UnreachableLoadFunction
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
case|case
name|DXGI_FORMAT_R32G32B32A32_FLOAT
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_FLOAT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadA32FToRGBA32F
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|UnreachableLoadFunction
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
case|case
name|DXGI_FORMAT_UNKNOWN
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|UnreachableLoadFunction
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|UnreachableLoadFunction
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
block|}
block|}
case|case
name|GL_ALPHA16F_EXT
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_UNKNOWN
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_HALF_FLOAT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadA16FToRGBA16F
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|loadMap
index|[
name|GL_HALF_FLOAT_OES
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadA16FToRGBA16F
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_HALF_FLOAT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadA16FToRGBA16F
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|loadMap
index|[
name|GL_HALF_FLOAT_OES
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadA16FToRGBA16F
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
block|}
block|}
case|case
name|GL_ALPHA32F_EXT
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_UNKNOWN
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_FLOAT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadA32FToRGBA32F
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_FLOAT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadA32FToRGBA32F
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
block|}
block|}
case|case
name|GL_ALPHA8_EXT
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_A8_UNORM
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative
argument_list|<
name|GLubyte
argument_list|,
literal|1
argument_list|>
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
case|case
name|DXGI_FORMAT_R8G8B8A8_UNORM
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadA8ToRGBA8
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_BGR5_A1_ANGLEX
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_UNKNOWN
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_SHORT_1_5_5_5_REV_EXT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadRGB5A1ToRGBA8
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative
argument_list|<
name|GLubyte
argument_list|,
literal|4
argument_list|>
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative
argument_list|<
name|GLubyte
argument_list|,
literal|4
argument_list|>
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_SHORT_1_5_5_5_REV_EXT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadRGB5A1ToRGBA8
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
block|}
block|}
case|case
name|GL_BGRA4_ANGLEX
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_UNKNOWN
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_SHORT_4_4_4_4_REV_EXT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadRGBA4ToRGBA8
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative
argument_list|<
name|GLubyte
argument_list|,
literal|4
argument_list|>
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative
argument_list|<
name|GLubyte
argument_list|,
literal|4
argument_list|>
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_SHORT_4_4_4_4_REV_EXT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadRGBA4ToRGBA8
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
block|}
block|}
case|case
name|GL_BGRA8_EXT
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_UNKNOWN
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative
argument_list|<
name|GLubyte
argument_list|,
literal|4
argument_list|>
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative
argument_list|<
name|GLubyte
argument_list|,
literal|4
argument_list|>
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
block|}
block|}
case|case
name|GL_BGRA_EXT
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_UNKNOWN
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|UnreachableLoadFunction
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|UnreachableLoadFunction
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
block|}
block|}
case|case
name|GL_COMPRESSED_R11_EAC
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R8_UNORM
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadEACR11ToR8
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_COMPRESSED_RG11_EAC
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R8G8_UNORM
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadEACRG11ToRG8
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_COMPRESSED_RGB8_ETC2
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R8G8B8A8_UNORM
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadETC2RGB8ToRGBA8
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R8G8B8A8_UNORM
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadETC2RGB8A1ToRGBA8
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_COMPRESSED_RGBA8_ETC2_EAC
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R8G8B8A8_UNORM
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadETC2RGBA8ToRGBA8
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_COMPRESSED_RGBA_S3TC_DXT1_EXT
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_UNKNOWN
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadCompressedToNative
argument_list|<
literal|4
argument_list|,
literal|4
argument_list|,
literal|8
argument_list|>
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadCompressedToNative
argument_list|<
literal|4
argument_list|,
literal|4
argument_list|,
literal|8
argument_list|>
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
block|}
block|}
case|case
name|GL_COMPRESSED_RGBA_S3TC_DXT3_ANGLE
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_UNKNOWN
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadCompressedToNative
argument_list|<
literal|4
argument_list|,
literal|4
argument_list|,
literal|16
argument_list|>
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadCompressedToNative
argument_list|<
literal|4
argument_list|,
literal|4
argument_list|,
literal|16
argument_list|>
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
block|}
block|}
case|case
name|GL_COMPRESSED_RGBA_S3TC_DXT5_ANGLE
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_UNKNOWN
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadCompressedToNative
argument_list|<
literal|4
argument_list|,
literal|4
argument_list|,
literal|16
argument_list|>
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadCompressedToNative
argument_list|<
literal|4
argument_list|,
literal|4
argument_list|,
literal|16
argument_list|>
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
block|}
block|}
case|case
name|GL_COMPRESSED_RGB_S3TC_DXT1_EXT
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_UNKNOWN
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadCompressedToNative
argument_list|<
literal|4
argument_list|,
literal|4
argument_list|,
literal|8
argument_list|>
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadCompressedToNative
argument_list|<
literal|4
argument_list|,
literal|4
argument_list|,
literal|8
argument_list|>
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
block|}
block|}
case|case
name|GL_COMPRESSED_SIGNED_R11_EAC
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R8_SNORM
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadEACR11SToR8
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_COMPRESSED_SIGNED_RG11_EAC
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R8G8_SNORM
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadEACRG11SToRG8
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R8G8B8A8_UNORM_SRGB
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadETC2SRGBA8ToSRGBA8
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_COMPRESSED_SRGB8_ETC2
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R8G8B8A8_UNORM_SRGB
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadETC2SRGB8ToRGBA8
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R8G8B8A8_UNORM_SRGB
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadETC2SRGB8A1ToRGBA8
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_DEPTH24_STENCIL8
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_D24_UNORM_S8_UINT
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_INT_24_8
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadR32ToR24G8
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
case|case
name|DXGI_FORMAT_R24G8_TYPELESS
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_INT_24_8
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadR32ToR24G8
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_DEPTH32F_STENCIL8
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R32G8X24_TYPELESS
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_FLOAT_32_UNSIGNED_INT_24_8_REV
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative
argument_list|<
name|GLuint
argument_list|,
literal|2
argument_list|>
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
case|case
name|DXGI_FORMAT_UNKNOWN
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_FLOAT_32_UNSIGNED_INT_24_8_REV
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|UnimplementedLoadFunction
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_FLOAT_32_UNSIGNED_INT_24_8_REV
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|UnimplementedLoadFunction
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
block|}
block|}
case|case
name|GL_DEPTH_COMPONENT16
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_D16_UNORM
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_SHORT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative
argument_list|<
name|GLushort
argument_list|,
literal|1
argument_list|>
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
case|case
name|DXGI_FORMAT_R16_TYPELESS
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_INT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadR32ToR16
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_SHORT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative
argument_list|<
name|GLushort
argument_list|,
literal|1
argument_list|>
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_DEPTH_COMPONENT24
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_D24_UNORM_S8_UINT
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_INT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadR32ToR24G8
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
case|case
name|DXGI_FORMAT_R24G8_TYPELESS
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_INT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadR32ToR24G8
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_DEPTH_COMPONENT32F
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R32_TYPELESS
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_FLOAT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative
argument_list|<
name|GLfloat
argument_list|,
literal|1
argument_list|>
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
case|case
name|DXGI_FORMAT_UNKNOWN
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_FLOAT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|UnimplementedLoadFunction
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_FLOAT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|UnimplementedLoadFunction
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
block|}
block|}
case|case
name|GL_DEPTH_COMPONENT32_OES
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_UNKNOWN
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_INT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadR32ToR24G8
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_INT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadR32ToR24G8
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
block|}
block|}
case|case
name|GL_ETC1_RGB8_LOSSY_DECODE_ANGLE
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_BC1_UNORM
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadETC1RGB8ToBC1
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_ETC1_RGB8_OES
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R8G8B8A8_UNORM
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadETC1RGB8ToRGBA8
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_LUMINANCE
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R16G16B16A16_FLOAT
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_HALF_FLOAT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadL16FToRGBA16F
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|loadMap
index|[
name|GL_HALF_FLOAT_OES
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadL16FToRGBA16F
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|UnreachableLoadFunction
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
case|case
name|DXGI_FORMAT_R32G32B32A32_FLOAT
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_FLOAT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadL32FToRGBA32F
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|UnreachableLoadFunction
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
case|case
name|DXGI_FORMAT_UNKNOWN
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|UnreachableLoadFunction
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|UnreachableLoadFunction
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
block|}
block|}
case|case
name|GL_LUMINANCE16F_EXT
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_UNKNOWN
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_HALF_FLOAT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadL16FToRGBA16F
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|loadMap
index|[
name|GL_HALF_FLOAT_OES
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadL16FToRGBA16F
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_HALF_FLOAT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadL16FToRGBA16F
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|loadMap
index|[
name|GL_HALF_FLOAT_OES
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadL16FToRGBA16F
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
block|}
block|}
case|case
name|GL_LUMINANCE32F_EXT
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_UNKNOWN
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_FLOAT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadL32FToRGBA32F
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_FLOAT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadL32FToRGBA32F
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
block|}
block|}
case|case
name|GL_LUMINANCE8_ALPHA8_EXT
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_UNKNOWN
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadLA8ToRGBA8
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadLA8ToRGBA8
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
block|}
block|}
case|case
name|GL_LUMINANCE8_EXT
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_UNKNOWN
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadL8ToRGBA8
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadL8ToRGBA8
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
block|}
block|}
case|case
name|GL_LUMINANCE_ALPHA
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R16G16B16A16_FLOAT
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_HALF_FLOAT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadLA16FToRGBA16F
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|loadMap
index|[
name|GL_HALF_FLOAT_OES
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadLA16FToRGBA16F
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|UnreachableLoadFunction
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
case|case
name|DXGI_FORMAT_R32G32B32A32_FLOAT
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_FLOAT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadLA32FToRGBA32F
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|UnreachableLoadFunction
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
case|case
name|DXGI_FORMAT_UNKNOWN
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|UnreachableLoadFunction
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|UnreachableLoadFunction
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
block|}
block|}
case|case
name|GL_LUMINANCE_ALPHA16F_EXT
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_UNKNOWN
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_HALF_FLOAT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadLA16FToRGBA16F
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|loadMap
index|[
name|GL_HALF_FLOAT_OES
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadLA16FToRGBA16F
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_HALF_FLOAT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadLA16FToRGBA16F
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|loadMap
index|[
name|GL_HALF_FLOAT_OES
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadLA16FToRGBA16F
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
block|}
block|}
case|case
name|GL_LUMINANCE_ALPHA32F_EXT
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_UNKNOWN
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_FLOAT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadLA32FToRGBA32F
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_FLOAT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadLA32FToRGBA32F
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
block|}
block|}
case|case
name|GL_R11F_G11F_B10F
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R11G11B10_FLOAT
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_HALF_FLOAT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadRGB16FToRG11B10F
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|loadMap
index|[
name|GL_HALF_FLOAT_OES
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadRGB16FToRG11B10F
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|loadMap
index|[
name|GL_FLOAT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadRGB32FToRG11B10F
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_INT_10F_11F_11F_REV
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative
argument_list|<
name|GLuint
argument_list|,
literal|1
argument_list|>
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_R16F
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R16_FLOAT
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_FLOAT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|Load32FTo16F
argument_list|<
literal|1
argument_list|>
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|loadMap
index|[
name|GL_HALF_FLOAT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative
argument_list|<
name|GLhalf
argument_list|,
literal|1
argument_list|>
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|loadMap
index|[
name|GL_HALF_FLOAT_OES
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative
argument_list|<
name|GLhalf
argument_list|,
literal|1
argument_list|>
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_R16I
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R16_SINT
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_SHORT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative
argument_list|<
name|GLshort
argument_list|,
literal|1
argument_list|>
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_R16UI
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R16_UINT
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_SHORT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative
argument_list|<
name|GLushort
argument_list|,
literal|1
argument_list|>
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_R32F
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R32_FLOAT
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_FLOAT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative
argument_list|<
name|GLfloat
argument_list|,
literal|1
argument_list|>
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_R32I
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R32_SINT
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_INT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative
argument_list|<
name|GLint
argument_list|,
literal|1
argument_list|>
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_R32UI
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R32_UINT
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_INT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative
argument_list|<
name|GLuint
argument_list|,
literal|1
argument_list|>
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_R8
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R8_UNORM
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative
argument_list|<
name|GLubyte
argument_list|,
literal|1
argument_list|>
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_R8I
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R8_SINT
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative
argument_list|<
name|GLbyte
argument_list|,
literal|1
argument_list|>
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_R8UI
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R8_UINT
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative
argument_list|<
name|GLubyte
argument_list|,
literal|1
argument_list|>
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_R8_SNORM
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R8_SNORM
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative
argument_list|<
name|GLbyte
argument_list|,
literal|1
argument_list|>
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_RG16F
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R16G16_FLOAT
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_FLOAT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|Load32FTo16F
argument_list|<
literal|2
argument_list|>
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|loadMap
index|[
name|GL_HALF_FLOAT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative
argument_list|<
name|GLhalf
argument_list|,
literal|2
argument_list|>
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|loadMap
index|[
name|GL_HALF_FLOAT_OES
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative
argument_list|<
name|GLhalf
argument_list|,
literal|2
argument_list|>
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_RG16I
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R16G16_SINT
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_SHORT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative
argument_list|<
name|GLshort
argument_list|,
literal|2
argument_list|>
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_RG16UI
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R16G16_UINT
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_SHORT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative
argument_list|<
name|GLushort
argument_list|,
literal|2
argument_list|>
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_RG32F
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R32G32_FLOAT
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_FLOAT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative
argument_list|<
name|GLfloat
argument_list|,
literal|2
argument_list|>
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_RG32I
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R32G32_SINT
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_INT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative
argument_list|<
name|GLint
argument_list|,
literal|2
argument_list|>
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_RG32UI
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R32G32_UINT
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_INT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative
argument_list|<
name|GLuint
argument_list|,
literal|2
argument_list|>
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_RG8
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R8G8_UNORM
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative
argument_list|<
name|GLubyte
argument_list|,
literal|2
argument_list|>
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_RG8I
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R8G8_SINT
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative
argument_list|<
name|GLbyte
argument_list|,
literal|2
argument_list|>
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_RG8UI
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R8G8_UINT
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative
argument_list|<
name|GLubyte
argument_list|,
literal|2
argument_list|>
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_RG8_SNORM
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R8G8_SNORM
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative
argument_list|<
name|GLbyte
argument_list|,
literal|2
argument_list|>
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_RGB
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_UNKNOWN
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|UnreachableLoadFunction
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_SHORT_5_6_5
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|UnreachableLoadFunction
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|UnreachableLoadFunction
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_SHORT_5_6_5
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|UnreachableLoadFunction
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
block|}
block|}
case|case
name|GL_RGB10_A2
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R10G10B10A2_UNORM
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_INT_2_10_10_10_REV
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative
argument_list|<
name|GLuint
argument_list|,
literal|1
argument_list|>
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_RGB10_A2UI
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R10G10B10A2_UINT
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_INT_2_10_10_10_REV
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative
argument_list|<
name|GLuint
argument_list|,
literal|1
argument_list|>
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_RGB16F
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R16G16B16A16_FLOAT
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_FLOAT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadRGB32FToRGBA16F
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|loadMap
index|[
name|GL_HALF_FLOAT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative3To4
argument_list|<
name|GLhalf
argument_list|,
name|gl
operator|::
name|Float16One
argument_list|>
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|loadMap
index|[
name|GL_HALF_FLOAT_OES
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative3To4
argument_list|<
name|GLhalf
argument_list|,
name|gl
operator|::
name|Float16One
argument_list|>
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_RGB16I
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R16G16B16A16_SINT
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_SHORT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative3To4
argument_list|<
name|GLshort
argument_list|,
literal|0x0001
argument_list|>
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_RGB16UI
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R16G16B16A16_UINT
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_SHORT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative3To4
argument_list|<
name|GLushort
argument_list|,
literal|0x0001
argument_list|>
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_RGB32F
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R32G32B32A32_FLOAT
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_FLOAT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative3To4
argument_list|<
name|GLfloat
argument_list|,
name|gl
operator|::
name|Float32One
argument_list|>
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_RGB32I
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R32G32B32A32_SINT
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_INT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative3To4
argument_list|<
name|GLint
argument_list|,
literal|0x00000001
argument_list|>
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_RGB32UI
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R32G32B32A32_UINT
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_INT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative3To4
argument_list|<
name|GLuint
argument_list|,
literal|0x00000001
argument_list|>
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_RGB565
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_B5G6R5_UNORM
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_SHORT_5_6_5
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative
argument_list|<
name|GLushort
argument_list|,
literal|1
argument_list|>
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
case|case
name|DXGI_FORMAT_R8G8B8A8_UNORM
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_SHORT_5_6_5
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadR5G6B5ToRGBA8
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative3To4
argument_list|<
name|GLubyte
argument_list|,
literal|0xFF
argument_list|>
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_RGB5_A1
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_B5G5R5A1_UNORM
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_SHORT_5_5_5_1
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadRGB5A1ToA1RGB5
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
case|case
name|DXGI_FORMAT_R8G8B8A8_UNORM
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_INT_2_10_10_10_REV
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadRGB10A2ToRGBA8
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_SHORT_5_5_5_1
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadRGB5A1ToRGBA8
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative
argument_list|<
name|GLubyte
argument_list|,
literal|4
argument_list|>
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_RGB8
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R8G8B8A8_UNORM
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative3To4
argument_list|<
name|GLubyte
argument_list|,
literal|0xFF
argument_list|>
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_RGB8I
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R8G8B8A8_SINT
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative3To4
argument_list|<
name|GLbyte
argument_list|,
literal|0x01
argument_list|>
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_RGB8UI
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R8G8B8A8_UINT
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative3To4
argument_list|<
name|GLubyte
argument_list|,
literal|0x01
argument_list|>
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_RGB8_SNORM
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R8G8B8A8_SNORM
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative3To4
argument_list|<
name|GLbyte
argument_list|,
literal|0x7F
argument_list|>
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_RGB9_E5
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R9G9B9E5_SHAREDEXP
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_HALF_FLOAT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadRGB16FToRGB9E5
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|loadMap
index|[
name|GL_HALF_FLOAT_OES
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadRGB16FToRGB9E5
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|loadMap
index|[
name|GL_FLOAT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadRGB32FToRGB9E5
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_INT_5_9_9_9_REV
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative
argument_list|<
name|GLuint
argument_list|,
literal|1
argument_list|>
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_RGBA
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_UNKNOWN
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|UnreachableLoadFunction
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_SHORT_4_4_4_4
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|UnreachableLoadFunction
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_SHORT_5_5_5_1
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|UnreachableLoadFunction
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|UnreachableLoadFunction
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_SHORT_4_4_4_4
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|UnreachableLoadFunction
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_SHORT_5_5_5_1
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|UnreachableLoadFunction
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
block|}
block|}
case|case
name|GL_RGBA16F
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R16G16B16A16_FLOAT
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_FLOAT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|Load32FTo16F
argument_list|<
literal|4
argument_list|>
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|loadMap
index|[
name|GL_HALF_FLOAT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative
argument_list|<
name|GLhalf
argument_list|,
literal|4
argument_list|>
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|loadMap
index|[
name|GL_HALF_FLOAT_OES
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative
argument_list|<
name|GLhalf
argument_list|,
literal|4
argument_list|>
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_RGBA16I
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R16G16B16A16_SINT
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_SHORT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative
argument_list|<
name|GLshort
argument_list|,
literal|4
argument_list|>
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_RGBA16UI
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R16G16B16A16_UINT
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_SHORT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative
argument_list|<
name|GLushort
argument_list|,
literal|4
argument_list|>
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_RGBA32F
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R32G32B32A32_FLOAT
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_FLOAT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative
argument_list|<
name|GLfloat
argument_list|,
literal|4
argument_list|>
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_RGBA32I
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R32G32B32A32_SINT
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_INT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative
argument_list|<
name|GLint
argument_list|,
literal|4
argument_list|>
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_RGBA32UI
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R32G32B32A32_UINT
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_INT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative
argument_list|<
name|GLuint
argument_list|,
literal|4
argument_list|>
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_RGBA4
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_B4G4R4A4_UNORM
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_SHORT_4_4_4_4
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadRGBA4ToARGB4
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
case|case
name|DXGI_FORMAT_R8G8B8A8_UNORM
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_SHORT_4_4_4_4
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadRGBA4ToRGBA8
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative
argument_list|<
name|GLubyte
argument_list|,
literal|4
argument_list|>
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_RGBA8
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R8G8B8A8_UNORM
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative
argument_list|<
name|GLubyte
argument_list|,
literal|4
argument_list|>
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_RGBA8I
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R8G8B8A8_SINT
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative
argument_list|<
name|GLbyte
argument_list|,
literal|4
argument_list|>
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_RGBA8UI
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R8G8B8A8_UINT
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative
argument_list|<
name|GLubyte
argument_list|,
literal|4
argument_list|>
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_RGBA8_SNORM
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R8G8B8A8_SNORM
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative
argument_list|<
name|GLbyte
argument_list|,
literal|4
argument_list|>
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_SRGB8
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R8G8B8A8_UNORM_SRGB
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative3To4
argument_list|<
name|GLubyte
argument_list|,
literal|0xFF
argument_list|>
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_SRGB8_ALPHA8
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_R8G8B8A8_UNORM_SRGB
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|GL_UNSIGNED_BYTE
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|LoadToNative
argument_list|<
name|GLubyte
argument_list|,
literal|4
argument_list|>
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
break|break;
block|}
block|}
case|case
name|GL_STENCIL_INDEX8
case|:
block|{
switch|switch
condition|(
name|dxgiFormat
condition|)
block|{
case|case
name|DXGI_FORMAT_UNKNOWN
case|:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|DXGI_FORMAT_D24_UNORM_S8_UINT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|UnimplementedLoadFunction
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|loadMap
index|[
name|DXGI_FORMAT_R24G8_TYPELESS
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|UnimplementedLoadFunction
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
default|default:
block|{
specifier|static
specifier|const
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadFunctionsMap
init|=
capture|[]
parameter_list|()
block|{
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|loadMap
decl_stmt|;
name|loadMap
index|[
name|DXGI_FORMAT_D24_UNORM_S8_UINT
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|UnimplementedLoadFunction
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|loadMap
index|[
name|DXGI_FORMAT_R24G8_TYPELESS
index|]
operator|=
name|LoadImageFunctionInfo
argument_list|(
name|UnimplementedLoadFunction
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|loadMap
return|;
block|}
argument_list|()
decl_stmt|;
return|return
name|loadFunctionsMap
return|;
block|}
block|}
block|}
default|default:
block|{
specifier|static
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunctionInfo
argument_list|>
name|emptyLoadFunctionsMap
decl_stmt|;
return|return
name|emptyLoadFunctionsMap
return|;
block|}
block|}
comment|// clang-format on
block|}
comment|// GetLoadFunctionsMap
block|}
comment|// namespace d3d11
block|}
end_namespace
begin_comment
comment|// namespace rx
end_comment
end_unit
