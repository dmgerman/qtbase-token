begin_unit
begin_comment
comment|//
end_comment
begin_comment
comment|// Copyright (c) 2013 The ANGLE Project Authors. All rights reserved.
end_comment
begin_comment
comment|// Use of this source code is governed by a BSD-style license that can be
end_comment
begin_comment
comment|// found in the LICENSE file.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// Fence11.h: Defines the rx::FenceNV11 and rx::FenceSync11 classes which implement rx::FenceNVImpl and rx::FenceSyncImpl.
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|LIBANGLE_RENDERER_D3D_D3D11_FENCE11_H_
end_ifndef
begin_define
DECL|macro|LIBANGLE_RENDERER_D3D_D3D11_FENCE11_H_
define|#
directive|define
name|LIBANGLE_RENDERER_D3D_D3D11_FENCE11_H_
end_define
begin_include
include|#
directive|include
file|"libANGLE/renderer/FenceNVImpl.h"
end_include
begin_include
include|#
directive|include
file|"libANGLE/renderer/FenceSyncImpl.h"
end_include
begin_decl_stmt
name|namespace
name|rx
block|{
name|class
name|Renderer11
decl_stmt|;
name|class
name|FenceNV11
range|:
name|public
name|FenceNVImpl
block|{
name|public
operator|:
name|explicit
name|FenceNV11
argument_list|(
name|Renderer11
operator|*
name|renderer
argument_list|)
block|;
name|virtual
operator|~
name|FenceNV11
argument_list|()
block|;
name|gl
operator|::
name|Error
name|set
argument_list|()
block|;
name|gl
operator|::
name|Error
name|test
argument_list|(
argument|bool flushCommandBuffer
argument_list|,
argument|GLboolean *outFinished
argument_list|)
block|;
name|gl
operator|::
name|Error
name|finishFence
argument_list|(
name|GLboolean
operator|*
name|outFinished
argument_list|)
block|;
name|private
operator|:
name|template
operator|<
name|class
name|T
operator|>
name|friend
name|gl
operator|::
name|Error
name|FenceSetHelper
argument_list|(
name|T
operator|*
name|fence
argument_list|)
block|;
name|template
operator|<
name|class
name|T
operator|>
name|friend
name|gl
operator|::
name|Error
name|FenceTestHelper
argument_list|(
argument|T *fence
argument_list|,
argument|bool flushCommandBuffer
argument_list|,
argument|GLboolean *outFinished
argument_list|)
block|;
name|Renderer11
operator|*
name|mRenderer
block|;
name|ID3D11Query
operator|*
name|mQuery
block|; }
decl_stmt|;
name|class
name|FenceSync11
range|:
name|public
name|FenceSyncImpl
block|{
name|public
operator|:
name|explicit
name|FenceSync11
argument_list|(
name|Renderer11
operator|*
name|renderer
argument_list|)
block|;
name|virtual
operator|~
name|FenceSync11
argument_list|()
block|;
name|gl
operator|::
name|Error
name|set
argument_list|()
block|;
name|gl
operator|::
name|Error
name|clientWait
argument_list|(
argument|GLbitfield flags
argument_list|,
argument|GLuint64 timeout
argument_list|,
argument|GLenum *outResult
argument_list|)
block|;
name|gl
operator|::
name|Error
name|serverWait
argument_list|(
argument|GLbitfield flags
argument_list|,
argument|GLuint64 timeout
argument_list|)
block|;
name|gl
operator|::
name|Error
name|getStatus
argument_list|(
name|GLint
operator|*
name|outResult
argument_list|)
block|;
name|private
operator|:
name|template
operator|<
name|class
name|T
operator|>
name|friend
name|gl
operator|::
name|Error
name|FenceSetHelper
argument_list|(
name|T
operator|*
name|fence
argument_list|)
block|;
name|template
operator|<
name|class
name|T
operator|>
name|friend
name|gl
operator|::
name|Error
name|FenceTestHelper
argument_list|(
argument|T *fence
argument_list|,
argument|bool flushCommandBuffer
argument_list|,
argument|GLboolean *outFinished
argument_list|)
block|;
name|Renderer11
operator|*
name|mRenderer
block|;
name|ID3D11Query
operator|*
name|mQuery
block|;
name|LONGLONG
name|mCounterFrequency
block|; }
decl_stmt|;
block|}
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// LIBANGLE_RENDERER_D3D_D3D11_FENCE11_H_
end_comment
end_unit
