begin_unit
begin_comment
comment|//
end_comment
begin_comment
comment|// Copyright (c) 2012-2015 The ANGLE Project Authors. All rights reserved.
end_comment
begin_comment
comment|// Use of this source code is governed by a BSD-style license that can be
end_comment
begin_comment
comment|// found in the LICENSE file.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// ShaderExecutable.h: Defines a class to contain D3D shader executable
end_comment
begin_comment
comment|// implementation details.
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|LIBANGLE_RENDERER_D3D_SHADEREXECUTABLED3D_H_
end_ifndef
begin_define
DECL|macro|LIBANGLE_RENDERER_D3D_SHADEREXECUTABLED3D_H_
define|#
directive|define
name|LIBANGLE_RENDERER_D3D_SHADEREXECUTABLED3D_H_
end_define
begin_include
include|#
directive|include
file|"common/debug.h"
end_include
begin_include
include|#
directive|include
file|<vector>
end_include
begin_include
include|#
directive|include
file|<cstdint>
end_include
begin_decl_stmt
name|namespace
name|rx
block|{
name|class
name|ShaderExecutableD3D
range|:
name|angle
operator|::
name|NonCopyable
block|{
name|public
operator|:
name|ShaderExecutableD3D
argument_list|(
argument|const void *function
argument_list|,
argument|size_t length
argument_list|)
block|;
name|virtual
operator|~
name|ShaderExecutableD3D
argument_list|()
block|;
specifier|const
name|uint8_t
operator|*
name|getFunction
argument_list|()
specifier|const
block|;
name|size_t
name|getLength
argument_list|()
specifier|const
block|;
specifier|const
name|std
operator|::
name|string
operator|&
name|getDebugInfo
argument_list|()
specifier|const
block|;
name|void
name|appendDebugInfo
argument_list|(
specifier|const
name|std
operator|::
name|string
operator|&
name|info
argument_list|)
block|;
name|private
operator|:
name|std
operator|::
name|vector
operator|<
name|uint8_t
operator|>
name|mFunctionBuffer
block|;
name|std
operator|::
name|string
name|mDebugInfo
block|; }
decl_stmt|;
name|class
name|UniformStorageD3D
range|:
name|angle
operator|::
name|NonCopyable
block|{
name|public
operator|:
name|UniformStorageD3D
argument_list|(
argument|size_t initialSize
argument_list|)
block|;
name|virtual
operator|~
name|UniformStorageD3D
argument_list|()
block|;
name|size_t
name|size
argument_list|()
specifier|const
block|;
name|private
operator|:
name|size_t
name|mSize
block|; }
decl_stmt|;
block|}
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// LIBANGLE_RENDERER_D3D_SHADEREXECUTABLED3D_H_
end_comment
end_unit
