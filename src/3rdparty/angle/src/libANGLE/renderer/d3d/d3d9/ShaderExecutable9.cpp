begin_unit
begin_comment
comment|//
end_comment
begin_comment
comment|// Copyright (c) 2012-2013 The ANGLE Project Authors. All rights reserved.
end_comment
begin_comment
comment|// Use of this source code is governed by a BSD-style license that can be
end_comment
begin_comment
comment|// found in the LICENSE file.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// ShaderExecutable9.cpp: Implements a D3D9-specific class to contain shader
end_comment
begin_comment
comment|// executable implementation details.
end_comment
begin_include
include|#
directive|include
file|"libANGLE/renderer/d3d/d3d9/ShaderExecutable9.h"
end_include
begin_include
include|#
directive|include
file|"common/debug.h"
end_include
begin_namespace
DECL|namespace|rx
namespace|namespace
name|rx
block|{
DECL|function|ShaderExecutable9
name|ShaderExecutable9
operator|::
name|ShaderExecutable9
parameter_list|(
specifier|const
name|void
modifier|*
name|function
parameter_list|,
name|size_t
name|length
parameter_list|,
name|IDirect3DPixelShader9
modifier|*
name|executable
parameter_list|)
member_init_list|:
name|ShaderExecutableD3D
argument_list|(
name|function
argument_list|,
name|length
argument_list|)
block|{
name|mPixelExecutable
operator|=
name|executable
expr_stmt|;
name|mVertexExecutable
operator|=
name|NULL
expr_stmt|;
block|}
DECL|function|ShaderExecutable9
name|ShaderExecutable9
operator|::
name|ShaderExecutable9
parameter_list|(
specifier|const
name|void
modifier|*
name|function
parameter_list|,
name|size_t
name|length
parameter_list|,
name|IDirect3DVertexShader9
modifier|*
name|executable
parameter_list|)
member_init_list|:
name|ShaderExecutableD3D
argument_list|(
name|function
argument_list|,
name|length
argument_list|)
block|{
name|mVertexExecutable
operator|=
name|executable
expr_stmt|;
name|mPixelExecutable
operator|=
name|NULL
expr_stmt|;
block|}
DECL|function|~ShaderExecutable9
name|ShaderExecutable9
operator|::
name|~
name|ShaderExecutable9
parameter_list|()
block|{
name|SafeRelease
argument_list|(
name|mVertexExecutable
argument_list|)
expr_stmt|;
name|SafeRelease
argument_list|(
name|mPixelExecutable
argument_list|)
expr_stmt|;
block|}
DECL|function|getVertexShader
name|IDirect3DVertexShader9
modifier|*
name|ShaderExecutable9
operator|::
name|getVertexShader
parameter_list|()
specifier|const
block|{
return|return
name|mVertexExecutable
return|;
block|}
DECL|function|getPixelShader
name|IDirect3DPixelShader9
modifier|*
name|ShaderExecutable9
operator|::
name|getPixelShader
parameter_list|()
specifier|const
block|{
return|return
name|mPixelExecutable
return|;
block|}
block|}
end_namespace
end_unit
