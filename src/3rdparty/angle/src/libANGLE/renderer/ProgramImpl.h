begin_unit
begin_comment
comment|//
end_comment
begin_comment
comment|// Copyright 2014 The ANGLE Project Authors. All rights reserved.
end_comment
begin_comment
comment|// Use of this source code is governed by a BSD-style license that can be
end_comment
begin_comment
comment|// found in the LICENSE file.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// ProgramImpl.h: Defines the abstract rx::ProgramImpl class.
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|LIBANGLE_RENDERER_PROGRAMIMPL_H_
end_ifndef
begin_define
DECL|macro|LIBANGLE_RENDERER_PROGRAMIMPL_H_
define|#
directive|define
name|LIBANGLE_RENDERER_PROGRAMIMPL_H_
end_define
begin_include
include|#
directive|include
file|"common/angleutils.h"
end_include
begin_include
include|#
directive|include
file|"libANGLE/BinaryStream.h"
end_include
begin_include
include|#
directive|include
file|"libANGLE/Constants.h"
end_include
begin_include
include|#
directive|include
file|"libANGLE/Program.h"
end_include
begin_include
include|#
directive|include
file|"libANGLE/Shader.h"
end_include
begin_include
include|#
directive|include
file|"libANGLE/renderer/Renderer.h"
end_include
begin_include
include|#
directive|include
file|<map>
end_include
begin_decl_stmt
name|namespace
name|rx
block|{
struct|struct
name|LinkResult
block|{
name|bool
name|linkSuccess
decl_stmt|;
name|gl
operator|::
name|Error
name|error
expr_stmt|;
name|LinkResult
argument_list|(
argument|bool linkSuccess
argument_list|,
argument|const gl::Error&error
argument_list|)
empty_stmt|;
block|}
struct|;
name|class
name|ProgramImpl
range|:
name|angle
operator|::
name|NonCopyable
block|{
name|public
operator|:
typedef|typedef
name|int
name|SemanticIndexArray
index|[
name|gl
operator|::
name|MAX_VERTEX_ATTRIBS
index|]
typedef|;
name|ProgramImpl
argument_list|()
block|{ }
name|virtual
operator|~
name|ProgramImpl
argument_list|()
decl_stmt|;
name|virtual
name|bool
name|usesPointSize
argument_list|()
specifier|const
operator|=
literal|0
expr_stmt|;
name|virtual
name|int
name|getShaderVersion
argument_list|()
specifier|const
operator|=
literal|0
expr_stmt|;
name|virtual
name|GLenum
name|getTransformFeedbackBufferMode
argument_list|()
specifier|const
operator|=
literal|0
expr_stmt|;
name|virtual
name|GLenum
name|getBinaryFormat
parameter_list|()
init|=
literal|0
function_decl|;
name|virtual
name|LinkResult
name|load
argument_list|(
name|gl
operator|::
name|InfoLog
operator|&
name|infoLog
argument_list|,
name|gl
operator|::
name|BinaryInputStream
operator|*
name|stream
argument_list|)
init|=
literal|0
decl_stmt|;
name|virtual
name|gl
operator|::
name|Error
name|save
argument_list|(
name|gl
operator|::
name|BinaryOutputStream
operator|*
name|stream
argument_list|)
operator|=
literal|0
expr_stmt|;
name|virtual
name|LinkResult
name|link
argument_list|(
specifier|const
name|gl
operator|::
name|Data
operator|&
name|data
argument_list|,
name|gl
operator|::
name|InfoLog
operator|&
name|infoLog
argument_list|,
name|gl
operator|::
name|Shader
operator|*
name|fragmentShader
argument_list|,
name|gl
operator|::
name|Shader
operator|*
name|vertexShader
argument_list|,
specifier|const
name|std
operator|::
name|vector
operator|<
name|std
operator|::
name|string
operator|>
operator|&
name|transformFeedbackVaryings
argument_list|,
name|GLenum
name|transformFeedbackBufferMode
argument_list|,
name|int
operator|*
name|registers
argument_list|,
name|std
operator|::
name|vector
operator|<
name|gl
operator|::
name|LinkedVarying
operator|>
operator|*
name|linkedVaryings
argument_list|,
name|std
operator|::
name|map
operator|<
name|int
argument_list|,
name|gl
operator|::
name|VariableLocation
operator|>
operator|*
name|outputVariables
argument_list|)
init|=
literal|0
decl_stmt|;
name|virtual
name|void
name|setUniform1fv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|setUniform2fv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|setUniform3fv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|setUniform4fv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|setUniform1iv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|setUniform2iv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|setUniform3iv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|setUniform4iv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|setUniform1uiv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|v
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|setUniform2uiv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|v
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|setUniform3uiv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|v
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|setUniform4uiv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|v
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|setUniformMatrix2fv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|setUniformMatrix3fv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|setUniformMatrix4fv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|setUniformMatrix2x3fv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|setUniformMatrix3x2fv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|setUniformMatrix2x4fv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|setUniformMatrix4x2fv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|setUniformMatrix3x4fv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|setUniformMatrix4x3fv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|getUniformfv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|getUniformiv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|getUniformuiv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLuint
modifier|*
name|params
parameter_list|)
init|=
literal|0
function_decl|;
comment|// TODO: The following functions are possibly only applicable to D3D backends. The should be carefully evaluated to
comment|// determine if they can be removed from this interface.
name|virtual
name|GLint
name|getSamplerMapping
argument_list|(
name|gl
operator|::
name|SamplerType
name|type
argument_list|,
name|unsigned
name|int
name|samplerIndex
argument_list|,
specifier|const
name|gl
operator|::
name|Caps
operator|&
name|caps
argument_list|)
decl|const
init|=
literal|0
decl_stmt|;
name|virtual
name|GLenum
name|getSamplerTextureType
argument_list|(
name|gl
operator|::
name|SamplerType
name|type
argument_list|,
name|unsigned
name|int
name|samplerIndex
argument_list|)
decl|const
init|=
literal|0
decl_stmt|;
name|virtual
name|GLint
name|getUsedSamplerRange
argument_list|(
name|gl
operator|::
name|SamplerType
name|type
argument_list|)
decl|const
init|=
literal|0
decl_stmt|;
name|virtual
name|void
name|updateSamplerMapping
parameter_list|()
init|=
literal|0
function_decl|;
name|virtual
name|bool
name|validateSamplers
argument_list|(
name|gl
operator|::
name|InfoLog
operator|*
name|infoLog
argument_list|,
specifier|const
name|gl
operator|::
name|Caps
operator|&
name|caps
argument_list|)
init|=
literal|0
decl_stmt|;
name|virtual
name|LinkResult
name|compileProgramExecutables
argument_list|(
name|gl
operator|::
name|InfoLog
operator|&
name|infoLog
argument_list|,
name|gl
operator|::
name|Shader
operator|*
name|fragmentShader
argument_list|,
name|gl
operator|::
name|Shader
operator|*
name|vertexShader
argument_list|,
name|int
name|registers
argument_list|)
init|=
literal|0
decl_stmt|;
name|virtual
name|bool
name|linkUniforms
argument_list|(
name|gl
operator|::
name|InfoLog
operator|&
name|infoLog
argument_list|,
specifier|const
name|gl
operator|::
name|Shader
operator|&
name|vertexShader
argument_list|,
specifier|const
name|gl
operator|::
name|Shader
operator|&
name|fragmentShader
argument_list|,
specifier|const
name|gl
operator|::
name|Caps
operator|&
name|caps
argument_list|)
init|=
literal|0
decl_stmt|;
name|virtual
name|bool
name|defineUniformBlock
argument_list|(
name|gl
operator|::
name|InfoLog
operator|&
name|infoLog
argument_list|,
specifier|const
name|gl
operator|::
name|Shader
operator|&
name|shader
argument_list|,
specifier|const
name|sh
operator|::
name|InterfaceBlock
operator|&
name|interfaceBlock
argument_list|,
specifier|const
name|gl
operator|::
name|Caps
operator|&
name|caps
argument_list|)
init|=
literal|0
decl_stmt|;
name|virtual
name|gl
operator|::
name|Error
name|applyUniforms
argument_list|()
operator|=
literal|0
expr_stmt|;
name|virtual
name|gl
operator|::
name|Error
name|applyUniformBuffers
argument_list|(
argument|const gl::Data&data
argument_list|,
argument|GLuint uniformBlockBindings[]
argument_list|)
operator|=
literal|0
expr_stmt|;
name|virtual
name|bool
name|assignUniformBlockRegister
argument_list|(
name|gl
operator|::
name|InfoLog
operator|&
name|infoLog
argument_list|,
name|gl
operator|::
name|UniformBlock
operator|*
name|uniformBlock
argument_list|,
name|GLenum
name|shader
argument_list|,
name|unsigned
name|int
name|registerIndex
argument_list|,
specifier|const
name|gl
operator|::
name|Caps
operator|&
name|caps
argument_list|)
init|=
literal|0
decl_stmt|;
specifier|const
name|std
operator|::
name|vector
operator|<
name|gl
operator|::
name|LinkedUniform
operator|*
operator|>
operator|&
name|getUniforms
argument_list|()
specifier|const
block|{
return|return
name|mUniforms
return|;
block|}
specifier|const
name|std
operator|::
name|vector
operator|<
name|gl
operator|::
name|VariableLocation
operator|>
operator|&
name|getUniformIndices
argument_list|()
specifier|const
block|{
return|return
name|mUniformIndex
return|;
block|}
specifier|const
name|std
operator|::
name|vector
operator|<
name|gl
operator|::
name|UniformBlock
operator|*
operator|>
operator|&
name|getUniformBlocks
argument_list|()
specifier|const
block|{
return|return
name|mUniformBlocks
return|;
block|}
specifier|const
name|std
operator|::
name|vector
operator|<
name|gl
operator|::
name|LinkedVarying
operator|>
operator|&
name|getTransformFeedbackLinkedVaryings
argument_list|()
specifier|const
block|{
return|return
name|mTransformFeedbackLinkedVaryings
return|;
block|}
specifier|const
name|sh
operator|::
name|Attribute
operator|*
name|getShaderAttributes
argument_list|()
specifier|const
block|{
return|return
name|mShaderAttributes
return|;
block|}
specifier|const
name|SemanticIndexArray
operator|&
name|getSemanticIndexes
argument_list|()
specifier|const
block|{
return|return
name|mSemanticIndex
return|;
block|}
name|std
operator|::
name|vector
operator|<
name|gl
operator|::
name|LinkedUniform
operator|*
operator|>
operator|&
name|getUniforms
argument_list|()
block|{
return|return
name|mUniforms
return|;
block|}
name|std
operator|::
name|vector
operator|<
name|gl
operator|::
name|VariableLocation
operator|>
operator|&
name|getUniformIndices
argument_list|()
block|{
return|return
name|mUniformIndex
return|;
block|}
name|std
operator|::
name|vector
operator|<
name|gl
operator|::
name|UniformBlock
operator|*
operator|>
operator|&
name|getUniformBlocks
argument_list|()
block|{
return|return
name|mUniformBlocks
return|;
block|}
name|std
operator|::
name|vector
operator|<
name|gl
operator|::
name|LinkedVarying
operator|>
operator|&
name|getTransformFeedbackLinkedVaryings
argument_list|()
block|{
return|return
name|mTransformFeedbackLinkedVaryings
return|;
block|}
name|sh
operator|::
name|Attribute
operator|*
name|getShaderAttributes
argument_list|()
block|{
return|return
name|mShaderAttributes
return|;
block|}
name|SemanticIndexArray
modifier|&
name|getSemanticIndexes
parameter_list|()
block|{
return|return
name|mSemanticIndex
return|;
block|}
name|gl
operator|::
name|LinkedUniform
operator|*
name|getUniformByLocation
argument_list|(
argument|GLint location
argument_list|)
specifier|const
expr_stmt|;
name|gl
operator|::
name|LinkedUniform
operator|*
name|getUniformByName
argument_list|(
argument|const std::string&name
argument_list|)
specifier|const
expr_stmt|;
name|gl
operator|::
name|UniformBlock
operator|*
name|getUniformBlockByIndex
argument_list|(
argument|GLuint blockIndex
argument_list|)
specifier|const
expr_stmt|;
name|GLint
name|getUniformLocation
argument_list|(
name|std
operator|::
name|string
name|name
argument_list|)
decl_stmt|;
name|GLuint
name|getUniformIndex
argument_list|(
name|std
operator|::
name|string
name|name
argument_list|)
decl_stmt|;
name|GLuint
name|getUniformBlockIndex
argument_list|(
name|std
operator|::
name|string
name|name
argument_list|)
decl|const
decl_stmt|;
name|virtual
name|void
name|reset
parameter_list|()
function_decl|;
name|protected
label|:
name|std
operator|::
name|vector
operator|<
name|gl
operator|::
name|LinkedUniform
operator|*
operator|>
name|mUniforms
expr_stmt|;
name|std
operator|::
name|vector
operator|<
name|gl
operator|::
name|VariableLocation
operator|>
name|mUniformIndex
expr_stmt|;
name|std
operator|::
name|vector
operator|<
name|gl
operator|::
name|UniformBlock
operator|*
operator|>
name|mUniformBlocks
expr_stmt|;
name|std
operator|::
name|vector
operator|<
name|gl
operator|::
name|LinkedVarying
operator|>
name|mTransformFeedbackLinkedVaryings
expr_stmt|;
name|SemanticIndexArray
name|mSemanticIndex
decl_stmt|;
name|sh
operator|::
name|Attribute
name|mShaderAttributes
index|[
name|gl
operator|::
name|MAX_VERTEX_ATTRIBS
index|]
expr_stmt|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_endif
unit|}
endif|#
directive|endif
end_endif
begin_comment
comment|// LIBANGLE_RENDERER_PROGRAMIMPL_H_
end_comment
end_unit
