begin_unit
begin_comment
comment|//
end_comment
begin_comment
comment|// Copyright (c) 2013 The ANGLE Project Authors. All rights reserved.
end_comment
begin_comment
comment|// Use of this source code is governed by a BSD-style license that can be
end_comment
begin_comment
comment|// found in the LICENSE file.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// QueryImpl.h: Defines the abstract rx::QueryImpl class.
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|LIBANGLE_RENDERER_QUERYIMPL_H_
end_ifndef
begin_define
DECL|macro|LIBANGLE_RENDERER_QUERYIMPL_H_
define|#
directive|define
name|LIBANGLE_RENDERER_QUERYIMPL_H_
end_define
begin_include
include|#
directive|include
file|"libANGLE/Error.h"
end_include
begin_include
include|#
directive|include
file|"common/angleutils.h"
end_include
begin_include
include|#
directive|include
file|<GLES2/gl2.h>
end_include
begin_decl_stmt
name|namespace
name|rx
block|{
name|class
name|QueryImpl
range|:
name|angle
operator|::
name|NonCopyable
block|{
name|public
operator|:
name|explicit
name|QueryImpl
argument_list|(
argument|GLenum type
argument_list|)
block|{
name|mType
operator|=
name|type
block|; }
name|virtual
operator|~
name|QueryImpl
argument_list|()
block|{ }
name|virtual
name|gl
operator|::
name|Error
name|begin
argument_list|()
operator|=
literal|0
block|;
name|virtual
name|gl
operator|::
name|Error
name|end
argument_list|()
operator|=
literal|0
block|;
name|virtual
name|gl
operator|::
name|Error
name|queryCounter
argument_list|()
operator|=
literal|0
block|;
name|virtual
name|gl
operator|::
name|Error
name|getResult
argument_list|(
name|GLint
operator|*
name|params
argument_list|)
operator|=
literal|0
block|;
name|virtual
name|gl
operator|::
name|Error
name|getResult
argument_list|(
name|GLuint
operator|*
name|params
argument_list|)
operator|=
literal|0
block|;
name|virtual
name|gl
operator|::
name|Error
name|getResult
argument_list|(
name|GLint64
operator|*
name|params
argument_list|)
operator|=
literal|0
block|;
name|virtual
name|gl
operator|::
name|Error
name|getResult
argument_list|(
name|GLuint64
operator|*
name|params
argument_list|)
operator|=
literal|0
block|;
name|virtual
name|gl
operator|::
name|Error
name|isResultAvailable
argument_list|(
name|bool
operator|*
name|available
argument_list|)
operator|=
literal|0
block|;
name|GLenum
name|getType
argument_list|()
specifier|const
block|{
return|return
name|mType
return|;
block|}
name|private
operator|:
name|GLenum
name|mType
block|; }
decl_stmt|;
block|}
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// LIBANGLE_RENDERER_QUERYIMPL_H_
end_comment
end_unit
