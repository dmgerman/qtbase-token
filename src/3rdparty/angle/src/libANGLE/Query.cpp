begin_unit
begin_comment
comment|//
end_comment
begin_comment
comment|// Copyright (c) 2012 The ANGLE Project Authors. All rights reserved.
end_comment
begin_comment
comment|// Use of this source code is governed by a BSD-style license that can be
end_comment
begin_comment
comment|// found in the LICENSE file.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// Query.cpp: Implements the gl::Query class
end_comment
begin_include
include|#
directive|include
file|"libANGLE/Query.h"
end_include
begin_include
include|#
directive|include
file|"libANGLE/renderer/QueryImpl.h"
end_include
begin_namespace
DECL|namespace|gl
namespace|namespace
name|gl
block|{
DECL|function|Query
name|Query
operator|::
name|Query
parameter_list|(
name|rx
operator|::
name|QueryImpl
modifier|*
name|impl
parameter_list|,
name|GLuint
name|id
parameter_list|)
member_init_list|:
name|RefCountObject
argument_list|(
name|id
argument_list|)
member_init_list|,
name|mQuery
argument_list|(
name|impl
argument_list|)
member_init_list|,
name|mLabel
argument_list|()
block|{ }
DECL|function|~Query
name|Query
operator|::
name|~
name|Query
parameter_list|()
block|{
name|SafeDelete
argument_list|(
name|mQuery
argument_list|)
expr_stmt|;
block|}
DECL|function|setLabel
name|void
name|Query
operator|::
name|setLabel
parameter_list|(
specifier|const
name|std
operator|::
name|string
modifier|&
name|label
parameter_list|)
block|{
name|mLabel
operator|=
name|label
expr_stmt|;
block|}
DECL|function|getLabel
specifier|const
name|std
operator|::
name|string
modifier|&
name|Query
operator|::
name|getLabel
parameter_list|()
specifier|const
block|{
return|return
name|mLabel
return|;
block|}
DECL|function|begin
name|Error
name|Query
operator|::
name|begin
parameter_list|()
block|{
return|return
name|mQuery
operator|->
name|begin
argument_list|()
return|;
block|}
DECL|function|end
name|Error
name|Query
operator|::
name|end
parameter_list|()
block|{
return|return
name|mQuery
operator|->
name|end
argument_list|()
return|;
block|}
DECL|function|queryCounter
name|Error
name|Query
operator|::
name|queryCounter
parameter_list|()
block|{
return|return
name|mQuery
operator|->
name|queryCounter
argument_list|()
return|;
block|}
DECL|function|getResult
name|Error
name|Query
operator|::
name|getResult
parameter_list|(
name|GLint
modifier|*
name|params
parameter_list|)
block|{
return|return
name|mQuery
operator|->
name|getResult
argument_list|(
name|params
argument_list|)
return|;
block|}
DECL|function|getResult
name|Error
name|Query
operator|::
name|getResult
parameter_list|(
name|GLuint
modifier|*
name|params
parameter_list|)
block|{
return|return
name|mQuery
operator|->
name|getResult
argument_list|(
name|params
argument_list|)
return|;
block|}
DECL|function|getResult
name|Error
name|Query
operator|::
name|getResult
parameter_list|(
name|GLint64
modifier|*
name|params
parameter_list|)
block|{
return|return
name|mQuery
operator|->
name|getResult
argument_list|(
name|params
argument_list|)
return|;
block|}
DECL|function|getResult
name|Error
name|Query
operator|::
name|getResult
parameter_list|(
name|GLuint64
modifier|*
name|params
parameter_list|)
block|{
return|return
name|mQuery
operator|->
name|getResult
argument_list|(
name|params
argument_list|)
return|;
block|}
DECL|function|isResultAvailable
name|Error
name|Query
operator|::
name|isResultAvailable
parameter_list|(
name|bool
modifier|*
name|available
parameter_list|)
block|{
return|return
name|mQuery
operator|->
name|isResultAvailable
argument_list|(
name|available
argument_list|)
return|;
block|}
DECL|function|getType
name|GLenum
name|Query
operator|::
name|getType
parameter_list|()
specifier|const
block|{
return|return
name|mQuery
operator|->
name|getType
argument_list|()
return|;
block|}
DECL|function|getImplementation
name|rx
operator|::
name|QueryImpl
modifier|*
name|Query
operator|::
name|getImplementation
parameter_list|()
block|{
return|return
name|mQuery
return|;
block|}
DECL|function|getImplementation
specifier|const
name|rx
operator|::
name|QueryImpl
modifier|*
name|Query
operator|::
name|getImplementation
parameter_list|()
specifier|const
block|{
return|return
name|mQuery
return|;
block|}
block|}
end_namespace
end_unit
