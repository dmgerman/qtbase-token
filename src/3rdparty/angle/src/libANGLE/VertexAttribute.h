begin_unit
begin_comment
comment|//
end_comment
begin_comment
comment|// Copyright (c) 2013 The ANGLE Project Authors. All rights reserved.
end_comment
begin_comment
comment|// Use of this source code is governed by a BSD-style license that can be
end_comment
begin_comment
comment|// found in the LICENSE file.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// Helper structure describing a single vertex attribute
end_comment
begin_comment
comment|//
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|LIBANGLE_VERTEXATTRIBUTE_H_
end_ifndef
begin_define
DECL|macro|LIBANGLE_VERTEXATTRIBUTE_H_
define|#
directive|define
name|LIBANGLE_VERTEXATTRIBUTE_H_
end_define
begin_include
include|#
directive|include
file|"libANGLE/Buffer.h"
end_include
begin_decl_stmt
name|namespace
name|gl
block|{
struct|struct
name|VertexAttribute
block|{
name|bool
name|enabled
decl_stmt|;
comment|// From glEnable/DisableVertexAttribArray
name|GLenum
name|type
decl_stmt|;
name|GLuint
name|size
decl_stmt|;
name|bool
name|normalized
decl_stmt|;
name|bool
name|pureInteger
decl_stmt|;
name|GLuint
name|stride
decl_stmt|;
comment|// 0 means natural stride
union|union
block|{
specifier|const
name|GLvoid
modifier|*
name|pointer
decl_stmt|;
name|GLintptr
name|offset
decl_stmt|;
block|}
union|;
name|BindingPointer
operator|<
name|Buffer
operator|>
name|buffer
expr_stmt|;
comment|// Captured when glVertexAttribPointer is called.
name|GLuint
name|divisor
decl_stmt|;
name|VertexAttribute
argument_list|()
expr_stmt|;
block|}
struct|;
name|bool
name|operator
operator|==
operator|(
specifier|const
name|VertexAttribute
operator|&
name|a
operator|,
specifier|const
name|VertexAttribute
operator|&
name|b
operator|)
expr_stmt|;
name|bool
name|operator
operator|!=
operator|(
specifier|const
name|VertexAttribute
operator|&
name|a
operator|,
specifier|const
name|VertexAttribute
operator|&
name|b
operator|)
expr_stmt|;
name|template
operator|<
name|typename
name|T
operator|>
name|T
name|QuerySingleVertexAttributeParameter
argument_list|(
argument|const VertexAttribute& attrib
argument_list|,
argument|GLenum pname
argument_list|)
expr_stmt|;
name|size_t
name|ComputeVertexAttributeTypeSize
parameter_list|(
specifier|const
name|VertexAttribute
modifier|&
name|attrib
parameter_list|)
function_decl|;
name|size_t
name|ComputeVertexAttributeStride
parameter_list|(
specifier|const
name|VertexAttribute
modifier|&
name|attrib
parameter_list|)
function_decl|;
name|size_t
name|ComputeVertexAttributeElementCount
parameter_list|(
specifier|const
name|VertexAttribute
modifier|&
name|attrib
parameter_list|,
name|size_t
name|drawCount
parameter_list|,
name|size_t
name|instanceCount
parameter_list|)
function_decl|;
struct|struct
name|VertexAttribCurrentValueData
block|{
union|union
block|{
name|GLfloat
name|FloatValues
index|[
literal|4
index|]
decl_stmt|;
name|GLint
name|IntValues
index|[
literal|4
index|]
decl_stmt|;
name|GLuint
name|UnsignedIntValues
index|[
literal|4
index|]
decl_stmt|;
block|}
union|;
name|GLenum
name|Type
decl_stmt|;
name|VertexAttribCurrentValueData
argument_list|()
expr_stmt|;
name|void
name|setFloatValues
parameter_list|(
specifier|const
name|GLfloat
name|floatValues
index|[
literal|4
index|]
parameter_list|)
function_decl|;
name|void
name|setIntValues
parameter_list|(
specifier|const
name|GLint
name|intValues
index|[
literal|4
index|]
parameter_list|)
function_decl|;
name|void
name|setUnsignedIntValues
parameter_list|(
specifier|const
name|GLuint
name|unsignedIntValues
index|[
literal|4
index|]
parameter_list|)
function_decl|;
block|}
struct|;
name|bool
name|operator
operator|==
operator|(
specifier|const
name|VertexAttribCurrentValueData
operator|&
name|a
operator|,
specifier|const
name|VertexAttribCurrentValueData
operator|&
name|b
operator|)
expr_stmt|;
name|bool
name|operator
operator|!=
operator|(
specifier|const
name|VertexAttribCurrentValueData
operator|&
name|a
operator|,
specifier|const
name|VertexAttribCurrentValueData
operator|&
name|b
operator|)
expr_stmt|;
block|}
end_decl_stmt
begin_include
include|#
directive|include
file|"VertexAttribute.inl"
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// LIBANGLE_VERTEXATTRIBUTE_H_
end_comment
end_unit
