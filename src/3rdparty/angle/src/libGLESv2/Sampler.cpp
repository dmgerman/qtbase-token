begin_unit
begin_comment
comment|//
end_comment
begin_comment
comment|// Copyright (c) 2013 The ANGLE Project Authors. All rights reserved.
end_comment
begin_comment
comment|// Use of this source code is governed by a BSD-style license that can be
end_comment
begin_comment
comment|// found in the LICENSE file.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// Sampler.cpp : Implements the Sampler class, which represents a GLES 3
end_comment
begin_comment
comment|// sampler object. Sampler objects store some state needed to sample textures.
end_comment
begin_include
include|#
directive|include
file|"libGLESv2/Sampler.h"
end_include
begin_include
include|#
directive|include
file|"libGLESv2/angletypes.h"
end_include
begin_namespace
DECL|namespace|gl
namespace|namespace
name|gl
block|{
DECL|function|Sampler
name|Sampler
operator|::
name|Sampler
parameter_list|(
name|GLuint
name|id
parameter_list|)
member_init_list|:
name|RefCountObject
argument_list|(
name|id
argument_list|)
member_init_list|,
name|mMinFilter
argument_list|(
name|GL_NEAREST_MIPMAP_LINEAR
argument_list|)
member_init_list|,
name|mMagFilter
argument_list|(
name|GL_LINEAR
argument_list|)
member_init_list|,
name|mWrapS
argument_list|(
name|GL_REPEAT
argument_list|)
member_init_list|,
name|mWrapT
argument_list|(
name|GL_REPEAT
argument_list|)
member_init_list|,
name|mWrapR
argument_list|(
name|GL_REPEAT
argument_list|)
member_init_list|,
name|mMinLod
argument_list|(
operator|-
literal|1000.0f
argument_list|)
member_init_list|,
name|mMaxLod
argument_list|(
literal|1000.0f
argument_list|)
member_init_list|,
name|mComparisonMode
argument_list|(
name|GL_NONE
argument_list|)
member_init_list|,
name|mComparisonFunc
argument_list|(
name|GL_LEQUAL
argument_list|)
block|{ }
DECL|function|getState
name|void
name|Sampler
operator|::
name|getState
parameter_list|(
name|SamplerState
modifier|*
name|samplerState
parameter_list|)
specifier|const
block|{
name|samplerState
operator|->
name|minFilter
operator|=
name|mMinFilter
expr_stmt|;
name|samplerState
operator|->
name|magFilter
operator|=
name|mMagFilter
expr_stmt|;
name|samplerState
operator|->
name|wrapS
operator|=
name|mWrapS
expr_stmt|;
name|samplerState
operator|->
name|wrapT
operator|=
name|mWrapT
expr_stmt|;
name|samplerState
operator|->
name|wrapR
operator|=
name|mWrapR
expr_stmt|;
name|samplerState
operator|->
name|minLod
operator|=
name|mMinLod
expr_stmt|;
name|samplerState
operator|->
name|maxLod
operator|=
name|mMaxLod
expr_stmt|;
name|samplerState
operator|->
name|compareMode
operator|=
name|mComparisonMode
expr_stmt|;
name|samplerState
operator|->
name|compareFunc
operator|=
name|mComparisonFunc
expr_stmt|;
block|}
block|}
end_namespace
end_unit
