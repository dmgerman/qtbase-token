begin_unit
begin_comment
comment|//
end_comment
begin_comment
comment|// Copyright (c) 2013 The ANGLE Project Authors. All rights reserved.
end_comment
begin_comment
comment|// Use of this source code is governed by a BSD-style license that can be
end_comment
begin_comment
comment|// found in the LICENSE file.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// formatutils.h: Queries for GL image formats.
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|LIBGLESV2_FORMATUTILS_H_
end_ifndef
begin_define
DECL|macro|LIBGLESV2_FORMATUTILS_H_
define|#
directive|define
name|LIBGLESV2_FORMATUTILS_H_
end_define
begin_include
include|#
directive|include
file|"libGLESv2/Caps.h"
end_include
begin_include
include|#
directive|include
file|"libGLESv2/angletypes.h"
end_include
begin_include
include|#
directive|include
file|"angle_gl.h"
end_include
begin_include
include|#
directive|include
file|<cstddef>
end_include
begin_include
include|#
directive|include
file|<cstdint>
end_include
begin_typedef
DECL|typedef|MipGenerationFunction
typedef|typedef
name|void
function_decl|(
modifier|*
name|MipGenerationFunction
function_decl|)
parameter_list|(
name|size_t
name|sourceWidth
parameter_list|,
name|size_t
name|sourceHeight
parameter_list|,
name|size_t
name|sourceDepth
parameter_list|,
specifier|const
name|uint8_t
modifier|*
name|sourceData
parameter_list|,
name|size_t
name|sourceRowPitch
parameter_list|,
name|size_t
name|sourceDepthPitch
parameter_list|,
name|uint8_t
modifier|*
name|destData
parameter_list|,
name|size_t
name|destRowPitch
parameter_list|,
name|size_t
name|destDepthPitch
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|LoadImageFunction
typedef|typedef
name|void
function_decl|(
modifier|*
name|LoadImageFunction
function_decl|)
parameter_list|(
name|size_t
name|width
parameter_list|,
name|size_t
name|height
parameter_list|,
name|size_t
name|depth
parameter_list|,
specifier|const
name|uint8_t
modifier|*
name|input
parameter_list|,
name|size_t
name|inputRowPitch
parameter_list|,
name|size_t
name|inputDepthPitch
parameter_list|,
name|uint8_t
modifier|*
name|output
parameter_list|,
name|size_t
name|outputRowPitch
parameter_list|,
name|size_t
name|outputDepthPitch
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|InitializeTextureDataFunction
typedef|typedef
name|void
function_decl|(
modifier|*
name|InitializeTextureDataFunction
function_decl|)
parameter_list|(
name|size_t
name|width
parameter_list|,
name|size_t
name|height
parameter_list|,
name|size_t
name|depth
parameter_list|,
name|uint8_t
modifier|*
name|output
parameter_list|,
name|size_t
name|outputRowPitch
parameter_list|,
name|size_t
name|outputDepthPitch
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|ColorReadFunction
typedef|typedef
name|void
function_decl|(
modifier|*
name|ColorReadFunction
function_decl|)
parameter_list|(
specifier|const
name|uint8_t
modifier|*
name|source
parameter_list|,
name|uint8_t
modifier|*
name|dest
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|ColorWriteFunction
typedef|typedef
name|void
function_decl|(
modifier|*
name|ColorWriteFunction
function_decl|)
parameter_list|(
specifier|const
name|uint8_t
modifier|*
name|source
parameter_list|,
name|uint8_t
modifier|*
name|dest
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|ColorCopyFunction
typedef|typedef
name|void
function_decl|(
modifier|*
name|ColorCopyFunction
function_decl|)
parameter_list|(
specifier|const
name|uint8_t
modifier|*
name|source
parameter_list|,
name|uint8_t
modifier|*
name|dest
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|VertexCopyFunction
typedef|typedef
name|void
function_decl|(
modifier|*
name|VertexCopyFunction
function_decl|)
parameter_list|(
specifier|const
name|uint8_t
modifier|*
name|input
parameter_list|,
name|size_t
name|stride
parameter_list|,
name|size_t
name|count
parameter_list|,
name|uint8_t
modifier|*
name|output
parameter_list|)
function_decl|;
end_typedef
begin_decl_stmt
name|namespace
name|gl
block|{
struct|struct
name|FormatType
block|{
name|FormatType
argument_list|()
expr_stmt|;
name|GLenum
name|internalFormat
decl_stmt|;
name|ColorWriteFunction
name|colorWriteFunction
decl_stmt|;
block|}
struct|;
specifier|const
name|FormatType
modifier|&
name|GetFormatTypeInfo
parameter_list|(
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|)
function_decl|;
struct|struct
name|Type
block|{
name|Type
argument_list|()
expr_stmt|;
name|GLuint
name|bytes
decl_stmt|;
name|bool
name|specialInterpretation
decl_stmt|;
block|}
struct|;
specifier|const
name|Type
modifier|&
name|GetTypeInfo
parameter_list|(
name|GLenum
name|type
parameter_list|)
function_decl|;
struct|struct
name|InternalFormat
block|{
name|InternalFormat
argument_list|()
expr_stmt|;
name|GLuint
name|redBits
decl_stmt|;
name|GLuint
name|greenBits
decl_stmt|;
name|GLuint
name|blueBits
decl_stmt|;
name|GLuint
name|luminanceBits
decl_stmt|;
name|GLuint
name|alphaBits
decl_stmt|;
name|GLuint
name|sharedBits
decl_stmt|;
name|GLuint
name|depthBits
decl_stmt|;
name|GLuint
name|stencilBits
decl_stmt|;
name|GLuint
name|pixelBytes
decl_stmt|;
name|GLuint
name|componentCount
decl_stmt|;
name|bool
name|compressed
decl_stmt|;
name|GLuint
name|compressedBlockWidth
decl_stmt|;
name|GLuint
name|compressedBlockHeight
decl_stmt|;
name|GLenum
name|format
decl_stmt|;
name|GLenum
name|type
decl_stmt|;
name|GLenum
name|componentType
decl_stmt|;
name|GLenum
name|colorEncoding
decl_stmt|;
typedef|typedef
name|bool
function_decl|(
modifier|*
name|SupportCheckFunction
function_decl|)
parameter_list|(
name|GLuint
parameter_list|,
specifier|const
name|Extensions
modifier|&
parameter_list|)
function_decl|;
name|SupportCheckFunction
name|textureSupport
decl_stmt|;
name|SupportCheckFunction
name|renderSupport
decl_stmt|;
name|SupportCheckFunction
name|filterSupport
decl_stmt|;
name|GLuint
name|computeRowPitch
argument_list|(
name|GLenum
name|type
argument_list|,
name|GLsizei
name|width
argument_list|,
name|GLint
name|alignment
argument_list|)
decl|const
decl_stmt|;
name|GLuint
name|computeDepthPitch
argument_list|(
name|GLenum
name|type
argument_list|,
name|GLsizei
name|width
argument_list|,
name|GLsizei
name|height
argument_list|,
name|GLint
name|alignment
argument_list|)
decl|const
decl_stmt|;
name|GLuint
name|computeBlockSize
argument_list|(
name|GLenum
name|type
argument_list|,
name|GLsizei
name|width
argument_list|,
name|GLsizei
name|height
argument_list|)
decl|const
decl_stmt|;
block|}
struct|;
specifier|const
name|InternalFormat
modifier|&
name|GetInternalFormatInfo
parameter_list|(
name|GLenum
name|internalFormat
parameter_list|)
function_decl|;
name|GLenum
name|GetSizedInternalFormat
parameter_list|(
name|GLenum
name|internalFormat
parameter_list|,
name|GLenum
name|type
parameter_list|)
function_decl|;
typedef|typedef
name|std
operator|::
name|set
operator|<
name|GLenum
operator|>
name|FormatSet
expr_stmt|;
specifier|const
name|FormatSet
modifier|&
name|GetAllSizedInternalFormats
parameter_list|()
function_decl|;
block|}
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// LIBGLESV2_FORMATUTILS_H_
end_comment
end_unit
