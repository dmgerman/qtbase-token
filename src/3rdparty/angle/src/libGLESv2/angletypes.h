begin_unit
begin_comment
comment|//
end_comment
begin_comment
comment|// Copyright (c) 2012 The ANGLE Project Authors. All rights reserved.
end_comment
begin_comment
comment|// Use of this source code is governed by a BSD-style license that can be
end_comment
begin_comment
comment|// found in the LICENSE file.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// angletypes.h : Defines a variety of structures and enum types that are used throughout libGLESv2
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|LIBGLESV2_ANGLETYPES_H_
end_ifndef
begin_define
DECL|macro|LIBGLESV2_ANGLETYPES_H_
define|#
directive|define
name|LIBGLESV2_ANGLETYPES_H_
end_define
begin_decl_stmt
name|namespace
name|gl
block|{
enum|enum
name|TextureType
block|{
name|TEXTURE_2D
block|,
name|TEXTURE_CUBE
block|,
name|TEXTURE_TYPE_COUNT
block|,
name|TEXTURE_UNKNOWN
block|}
enum|;
enum|enum
name|SamplerType
block|{
name|SAMPLER_PIXEL
block|,
name|SAMPLER_VERTEX
block|}
enum|;
struct|struct
name|Color
block|{
name|float
name|red
decl_stmt|;
name|float
name|green
decl_stmt|;
name|float
name|blue
decl_stmt|;
name|float
name|alpha
decl_stmt|;
block|}
struct|;
struct|struct
name|Rectangle
block|{
name|int
name|x
decl_stmt|;
name|int
name|y
decl_stmt|;
name|int
name|width
decl_stmt|;
name|int
name|height
decl_stmt|;
block|}
struct|;
struct|struct
name|RasterizerState
block|{
name|bool
name|cullFace
decl_stmt|;
name|GLenum
name|cullMode
decl_stmt|;
name|GLenum
name|frontFace
decl_stmt|;
name|bool
name|polygonOffsetFill
decl_stmt|;
name|GLfloat
name|polygonOffsetFactor
decl_stmt|;
name|GLfloat
name|polygonOffsetUnits
decl_stmt|;
name|bool
name|pointDrawMode
decl_stmt|;
block|}
struct|;
struct|struct
name|BlendState
block|{
name|bool
name|blend
decl_stmt|;
name|GLenum
name|sourceBlendRGB
decl_stmt|;
name|GLenum
name|destBlendRGB
decl_stmt|;
name|GLenum
name|sourceBlendAlpha
decl_stmt|;
name|GLenum
name|destBlendAlpha
decl_stmt|;
name|GLenum
name|blendEquationRGB
decl_stmt|;
name|GLenum
name|blendEquationAlpha
decl_stmt|;
name|bool
name|colorMaskRed
decl_stmt|;
name|bool
name|colorMaskGreen
decl_stmt|;
name|bool
name|colorMaskBlue
decl_stmt|;
name|bool
name|colorMaskAlpha
decl_stmt|;
name|bool
name|sampleAlphaToCoverage
decl_stmt|;
name|bool
name|dither
decl_stmt|;
block|}
struct|;
struct|struct
name|DepthStencilState
block|{
name|bool
name|depthTest
decl_stmt|;
name|GLenum
name|depthFunc
decl_stmt|;
name|bool
name|depthMask
decl_stmt|;
name|bool
name|stencilTest
decl_stmt|;
name|GLenum
name|stencilFunc
decl_stmt|;
name|GLuint
name|stencilMask
decl_stmt|;
name|GLenum
name|stencilFail
decl_stmt|;
name|GLenum
name|stencilPassDepthFail
decl_stmt|;
name|GLenum
name|stencilPassDepthPass
decl_stmt|;
name|GLuint
name|stencilWritemask
decl_stmt|;
name|GLenum
name|stencilBackFunc
decl_stmt|;
name|GLuint
name|stencilBackMask
decl_stmt|;
name|GLenum
name|stencilBackFail
decl_stmt|;
name|GLenum
name|stencilBackPassDepthFail
decl_stmt|;
name|GLenum
name|stencilBackPassDepthPass
decl_stmt|;
name|GLuint
name|stencilBackWritemask
decl_stmt|;
block|}
struct|;
struct|struct
name|SamplerState
block|{
name|GLenum
name|minFilter
decl_stmt|;
name|GLenum
name|magFilter
decl_stmt|;
name|GLenum
name|wrapS
decl_stmt|;
name|GLenum
name|wrapT
decl_stmt|;
name|float
name|maxAnisotropy
decl_stmt|;
name|int
name|lodOffset
decl_stmt|;
block|}
struct|;
struct|struct
name|ClearParameters
block|{
name|GLbitfield
name|mask
decl_stmt|;
name|Color
name|colorClearValue
decl_stmt|;
name|bool
name|colorMaskRed
decl_stmt|;
name|bool
name|colorMaskGreen
decl_stmt|;
name|bool
name|colorMaskBlue
decl_stmt|;
name|bool
name|colorMaskAlpha
decl_stmt|;
name|float
name|depthClearValue
decl_stmt|;
name|GLint
name|stencilClearValue
decl_stmt|;
name|GLuint
name|stencilWriteMask
decl_stmt|;
block|}
struct|;
block|}
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// LIBGLESV2_ANGLETYPES_H_
end_comment
end_unit
