begin_unit
begin_comment
comment|//
end_comment
begin_comment
comment|// Copyright (c) 2002-2014 The ANGLE Project Authors. All rights reserved.
end_comment
begin_comment
comment|// Use of this source code is governed by a BSD-style license that can be
end_comment
begin_comment
comment|// found in the LICENSE file.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// Program.h: Defines the gl::Program class. Implements GL program objects
end_comment
begin_comment
comment|// and related functionality. [OpenGL ES 2.0.24] section 2.10.3 page 28.
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|LIBGLESV2_PROGRAM_H_
end_ifndef
begin_define
DECL|macro|LIBGLESV2_PROGRAM_H_
define|#
directive|define
name|LIBGLESV2_PROGRAM_H_
end_define
begin_include
include|#
directive|include
file|"common/angleutils.h"
end_include
begin_include
include|#
directive|include
file|"common/RefCountObject.h"
end_include
begin_include
include|#
directive|include
file|"libGLESv2/Constants.h"
end_include
begin_include
include|#
directive|include
file|"libGLESv2/ProgramBinary.h"
end_include
begin_include
include|#
directive|include
file|<GLES2/gl2.h>
end_include
begin_include
include|#
directive|include
file|<vector>
end_include
begin_include
include|#
directive|include
file|<string>
end_include
begin_include
include|#
directive|include
file|<set>
end_include
begin_decl_stmt
name|namespace
name|rx
block|{
name|class
name|Renderer
decl_stmt|;
block|}
end_decl_stmt
begin_decl_stmt
name|namespace
name|gl
block|{
struct_decl|struct
name|Caps
struct_decl|;
struct_decl|struct
name|Data
struct_decl|;
name|class
name|ResourceManager
decl_stmt|;
name|class
name|Shader
decl_stmt|;
specifier|extern
specifier|const
name|char
modifier|*
specifier|const
name|g_fakepath
decl_stmt|;
name|class
name|AttributeBindings
block|{
name|public
label|:
name|AttributeBindings
argument_list|()
expr_stmt|;
operator|~
name|AttributeBindings
argument_list|()
expr_stmt|;
name|void
name|bindAttributeLocation
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
name|int
name|getAttributeBinding
argument_list|(
specifier|const
name|std
operator|::
name|string
operator|&
name|name
argument_list|)
decl|const
decl_stmt|;
name|private
label|:
name|std
operator|::
name|set
operator|<
name|std
operator|::
name|string
operator|>
name|mAttributeBinding
index|[
name|MAX_VERTEX_ATTRIBS
index|]
expr_stmt|;
block|}
empty_stmt|;
name|class
name|InfoLog
block|{
name|public
label|:
name|InfoLog
argument_list|()
expr_stmt|;
operator|~
name|InfoLog
argument_list|()
expr_stmt|;
name|int
name|getLength
argument_list|()
specifier|const
expr_stmt|;
name|void
name|getLog
parameter_list|(
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|char
modifier|*
name|infoLog
parameter_list|)
function_decl|;
name|void
name|appendSanitized
parameter_list|(
specifier|const
name|char
modifier|*
name|message
parameter_list|)
function_decl|;
name|void
name|append
parameter_list|(
specifier|const
name|char
modifier|*
name|info
parameter_list|,
modifier|...
parameter_list|)
function_decl|;
name|void
name|reset
parameter_list|()
function_decl|;
name|private
label|:
name|DISALLOW_COPY_AND_ASSIGN
argument_list|(
name|InfoLog
argument_list|)
expr_stmt|;
name|char
modifier|*
name|mInfoLog
decl_stmt|;
block|}
empty_stmt|;
name|class
name|Program
block|{
name|public
label|:
name|Program
argument_list|(
argument|rx::Renderer *renderer
argument_list|,
argument|ResourceManager *manager
argument_list|,
argument|GLuint handle
argument_list|)
empty_stmt|;
operator|~
name|Program
argument_list|()
expr_stmt|;
name|bool
name|attachShader
parameter_list|(
name|Shader
modifier|*
name|shader
parameter_list|)
function_decl|;
name|bool
name|detachShader
parameter_list|(
name|Shader
modifier|*
name|shader
parameter_list|)
function_decl|;
name|int
name|getAttachedShadersCount
argument_list|()
specifier|const
expr_stmt|;
name|void
name|bindAttributeLocation
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
name|Error
name|link
parameter_list|(
specifier|const
name|Data
modifier|&
name|data
parameter_list|)
function_decl|;
name|bool
name|isLinked
parameter_list|()
function_decl|;
name|Error
name|setProgramBinary
parameter_list|(
name|GLenum
name|binaryFormat
parameter_list|,
specifier|const
name|void
modifier|*
name|binary
parameter_list|,
name|GLsizei
name|length
parameter_list|)
function_decl|;
name|ProgramBinary
operator|*
name|getProgramBinary
argument_list|()
specifier|const
expr_stmt|;
name|int
name|getInfoLogLength
argument_list|()
specifier|const
expr_stmt|;
name|void
name|getInfoLog
parameter_list|(
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|char
modifier|*
name|infoLog
parameter_list|)
function_decl|;
name|void
name|getAttachedShaders
parameter_list|(
name|GLsizei
name|maxCount
parameter_list|,
name|GLsizei
modifier|*
name|count
parameter_list|,
name|GLuint
modifier|*
name|shaders
parameter_list|)
function_decl|;
name|void
name|getActiveAttribute
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|bufsize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLint
modifier|*
name|size
parameter_list|,
name|GLenum
modifier|*
name|type
parameter_list|,
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
name|GLint
name|getActiveAttributeCount
parameter_list|()
function_decl|;
name|GLint
name|getActiveAttributeMaxLength
parameter_list|()
function_decl|;
name|void
name|getActiveUniform
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|bufsize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLint
modifier|*
name|size
parameter_list|,
name|GLenum
modifier|*
name|type
parameter_list|,
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
name|GLint
name|getActiveUniformCount
parameter_list|()
function_decl|;
name|GLint
name|getActiveUniformMaxLength
parameter_list|()
function_decl|;
name|GLint
name|getActiveUniformBlockCount
parameter_list|()
function_decl|;
name|GLint
name|getActiveUniformBlockMaxLength
parameter_list|()
function_decl|;
name|void
name|bindUniformBlock
parameter_list|(
name|GLuint
name|uniformBlockIndex
parameter_list|,
name|GLuint
name|uniformBlockBinding
parameter_list|)
function_decl|;
name|GLuint
name|getUniformBlockBinding
argument_list|(
name|GLuint
name|uniformBlockIndex
argument_list|)
decl|const
decl_stmt|;
name|void
name|setTransformFeedbackVaryings
parameter_list|(
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLchar
modifier|*
specifier|const
modifier|*
name|varyings
parameter_list|,
name|GLenum
name|bufferMode
parameter_list|)
function_decl|;
name|void
name|getTransformFeedbackVarying
argument_list|(
name|GLuint
name|index
argument_list|,
name|GLsizei
name|bufSize
argument_list|,
name|GLsizei
operator|*
name|length
argument_list|,
name|GLsizei
operator|*
name|size
argument_list|,
name|GLenum
operator|*
name|type
argument_list|,
name|GLchar
operator|*
name|name
argument_list|)
decl|const
decl_stmt|;
name|GLsizei
name|getTransformFeedbackVaryingCount
argument_list|()
specifier|const
expr_stmt|;
name|GLsizei
name|getTransformFeedbackVaryingMaxLength
argument_list|()
specifier|const
expr_stmt|;
name|GLenum
name|getTransformFeedbackBufferMode
argument_list|()
specifier|const
expr_stmt|;
name|void
name|addRef
parameter_list|()
function_decl|;
name|void
name|release
parameter_list|()
function_decl|;
name|unsigned
name|int
name|getRefCount
argument_list|()
specifier|const
expr_stmt|;
name|void
name|flagForDeletion
parameter_list|()
function_decl|;
name|bool
name|isFlaggedForDeletion
argument_list|()
specifier|const
expr_stmt|;
name|void
name|validate
parameter_list|(
specifier|const
name|Caps
modifier|&
name|caps
parameter_list|)
function_decl|;
name|bool
name|isValidated
argument_list|()
specifier|const
expr_stmt|;
name|GLint
name|getProgramBinaryLength
argument_list|()
specifier|const
expr_stmt|;
name|private
label|:
name|DISALLOW_COPY_AND_ASSIGN
argument_list|(
name|Program
argument_list|)
expr_stmt|;
name|void
name|unlink
parameter_list|(
name|bool
name|destroy
init|=
name|false
parameter_list|)
function_decl|;
name|void
name|resetUniformBlockBindings
parameter_list|()
function_decl|;
name|Shader
modifier|*
name|mFragmentShader
decl_stmt|;
name|Shader
modifier|*
name|mVertexShader
decl_stmt|;
name|AttributeBindings
name|mAttributeBindings
decl_stmt|;
name|GLuint
name|mUniformBlockBindings
index|[
name|IMPLEMENTATION_MAX_COMBINED_SHADER_UNIFORM_BUFFERS
index|]
decl_stmt|;
name|std
operator|::
name|vector
operator|<
name|std
operator|::
name|string
operator|>
name|mTransformFeedbackVaryings
expr_stmt|;
name|GLuint
name|mTransformFeedbackBufferMode
decl_stmt|;
name|BindingPointer
operator|<
name|ProgramBinary
operator|>
name|mProgramBinary
expr_stmt|;
name|bool
name|mLinked
decl_stmt|;
name|bool
name|mDeleteStatus
decl_stmt|;
comment|// Flag to indicate that the program can be deleted when no longer in use
name|unsigned
name|int
name|mRefCount
decl_stmt|;
name|ResourceManager
modifier|*
name|mResourceManager
decl_stmt|;
name|rx
operator|::
name|Renderer
operator|*
name|mRenderer
expr_stmt|;
specifier|const
name|GLuint
name|mHandle
decl_stmt|;
name|InfoLog
name|mInfoLog
decl_stmt|;
block|}
empty_stmt|;
block|}
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// LIBGLESV2_PROGRAM_H_
end_comment
end_unit
