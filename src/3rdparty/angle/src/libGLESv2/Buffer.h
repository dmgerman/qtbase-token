begin_unit
begin_comment
comment|//
end_comment
begin_comment
comment|// Copyright (c) 2002-2010 The ANGLE Project Authors. All rights reserved.
end_comment
begin_comment
comment|// Use of this source code is governed by a BSD-style license that can be
end_comment
begin_comment
comment|// found in the LICENSE file.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// Buffer.h: Defines the gl::Buffer class, representing storage of vertex and/or
end_comment
begin_comment
comment|// index data. Implements GL buffer objects and related functionality.
end_comment
begin_comment
comment|// [OpenGL ES 2.0.24] section 2.9 page 21.
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|LIBGLESV2_BUFFER_H_
end_ifndef
begin_define
DECL|macro|LIBGLESV2_BUFFER_H_
define|#
directive|define
name|LIBGLESV2_BUFFER_H_
end_define
begin_include
include|#
directive|include
file|<cstddef>
end_include
begin_include
include|#
directive|include
file|<vector>
end_include
begin_define
DECL|macro|GL_APICALL
define|#
directive|define
name|GL_APICALL
end_define
begin_include
include|#
directive|include
file|<GLES2/gl2.h>
end_include
begin_include
include|#
directive|include
file|"common/angleutils.h"
end_include
begin_include
include|#
directive|include
file|"common/RefCountObject.h"
end_include
begin_decl_stmt
name|namespace
name|gl
block|{
name|class
name|StaticVertexBuffer
decl_stmt|;
name|class
name|StaticIndexBuffer
decl_stmt|;
name|class
name|Buffer
range|:
name|public
name|RefCountObject
block|{
name|public
operator|:
name|explicit
name|Buffer
argument_list|(
argument|GLuint id
argument_list|)
block|;
name|virtual
operator|~
name|Buffer
argument_list|()
block|;
name|void
name|bufferData
argument_list|(
argument|const void *data
argument_list|,
argument|GLsizeiptr size
argument_list|,
argument|GLenum usage
argument_list|)
block|;
name|void
name|bufferSubData
argument_list|(
argument|const void *data
argument_list|,
argument|GLsizeiptr size
argument_list|,
argument|GLintptr offset
argument_list|)
block|;
name|void
operator|*
name|data
argument_list|()
block|{
return|return
name|mContents
return|;
block|}
name|size_t
name|size
argument_list|()
specifier|const
block|{
return|return
name|mSize
return|;
block|}
name|GLenum
name|usage
argument_list|()
specifier|const
block|{
return|return
name|mUsage
return|;
block|}
name|StaticVertexBuffer
operator|*
name|getStaticVertexBuffer
argument_list|()
block|;
name|StaticIndexBuffer
operator|*
name|getStaticIndexBuffer
argument_list|()
block|;
name|void
name|invalidateStaticData
argument_list|()
block|;
name|void
name|promoteStaticUsage
argument_list|(
argument|int dataSize
argument_list|)
block|;
name|private
operator|:
name|DISALLOW_COPY_AND_ASSIGN
argument_list|(
name|Buffer
argument_list|)
block|;
name|GLubyte
operator|*
name|mContents
block|;
name|GLsizeiptr
name|mSize
block|;
name|GLenum
name|mUsage
block|;
name|StaticVertexBuffer
operator|*
name|mStaticVertexBuffer
block|;
name|StaticIndexBuffer
operator|*
name|mStaticIndexBuffer
block|;
name|GLsizeiptr
name|mUnmodifiedDataUse
block|; }
decl_stmt|;
block|}
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// LIBGLESV2_BUFFER_H_
end_comment
end_unit
