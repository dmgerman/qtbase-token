begin_unit
begin_comment
comment|//
end_comment
begin_comment
comment|// Copyright (c) 2002-2013 The ANGLE Project Authors. All rights reserved.
end_comment
begin_comment
comment|// Use of this source code is governed by a BSD-style license that can be
end_comment
begin_comment
comment|// found in the LICENSE file.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// Framebuffer.h: Defines the gl::Framebuffer class. Implements GL framebuffer
end_comment
begin_comment
comment|// objects and related functionality. [OpenGL ES 2.0.24] section 4.4 page 105.
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|LIBGLESV2_FRAMEBUFFER_H_
end_ifndef
begin_define
DECL|macro|LIBGLESV2_FRAMEBUFFER_H_
define|#
directive|define
name|LIBGLESV2_FRAMEBUFFER_H_
end_define
begin_include
include|#
directive|include
file|"common/angleutils.h"
end_include
begin_include
include|#
directive|include
file|"common/RefCountObject.h"
end_include
begin_include
include|#
directive|include
file|"constants.h"
end_include
begin_decl_stmt
name|namespace
name|rx
block|{
name|class
name|Renderer
decl_stmt|;
block|}
end_decl_stmt
begin_decl_stmt
name|namespace
name|gl
block|{
name|class
name|FramebufferAttachment
decl_stmt|;
name|class
name|Colorbuffer
decl_stmt|;
name|class
name|Depthbuffer
decl_stmt|;
name|class
name|Stencilbuffer
decl_stmt|;
name|class
name|DepthStencilbuffer
decl_stmt|;
name|class
name|Framebuffer
block|{
name|public
label|:
name|Framebuffer
argument_list|(
argument|rx::Renderer *renderer
argument_list|,
argument|GLuint id
argument_list|)
empty_stmt|;
name|virtual
operator|~
name|Framebuffer
argument_list|()
expr_stmt|;
name|GLuint
name|id
argument_list|()
specifier|const
block|{
return|return
name|mId
return|;
block|}
name|void
name|setColorbuffer
parameter_list|(
name|unsigned
name|int
name|colorAttachment
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLuint
name|colorbuffer
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|layer
parameter_list|)
function_decl|;
name|void
name|setDepthbuffer
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLuint
name|depthbuffer
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|layer
parameter_list|)
function_decl|;
name|void
name|setStencilbuffer
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLuint
name|stencilbuffer
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|layer
parameter_list|)
function_decl|;
name|void
name|setDepthStencilBuffer
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLuint
name|depthStencilBuffer
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|layer
parameter_list|)
function_decl|;
name|void
name|detachTexture
parameter_list|(
name|GLuint
name|texture
parameter_list|)
function_decl|;
name|void
name|detachRenderbuffer
parameter_list|(
name|GLuint
name|renderbuffer
parameter_list|)
function_decl|;
name|FramebufferAttachment
modifier|*
name|getColorbuffer
argument_list|(
name|unsigned
name|int
name|colorAttachment
argument_list|)
decl|const
decl_stmt|;
name|FramebufferAttachment
operator|*
name|getDepthbuffer
argument_list|()
specifier|const
expr_stmt|;
name|FramebufferAttachment
operator|*
name|getStencilbuffer
argument_list|()
specifier|const
expr_stmt|;
name|FramebufferAttachment
operator|*
name|getDepthStencilBuffer
argument_list|()
specifier|const
expr_stmt|;
name|FramebufferAttachment
operator|*
name|getDepthOrStencilbuffer
argument_list|()
specifier|const
expr_stmt|;
name|FramebufferAttachment
operator|*
name|getReadColorbuffer
argument_list|()
specifier|const
expr_stmt|;
name|GLenum
name|getReadColorbufferType
argument_list|()
specifier|const
expr_stmt|;
name|FramebufferAttachment
operator|*
name|getFirstColorbuffer
argument_list|()
specifier|const
expr_stmt|;
name|virtual
name|FramebufferAttachment
modifier|*
name|getAttachment
argument_list|(
name|GLenum
name|attachment
argument_list|)
decl|const
decl_stmt|;
name|GLenum
name|getDrawBufferState
argument_list|(
name|unsigned
name|int
name|colorAttachment
argument_list|)
decl|const
decl_stmt|;
name|void
name|setDrawBufferState
parameter_list|(
name|unsigned
name|int
name|colorAttachment
parameter_list|,
name|GLenum
name|drawBuffer
parameter_list|)
function_decl|;
name|bool
name|isEnabledColorAttachment
argument_list|(
name|unsigned
name|int
name|colorAttachment
argument_list|)
decl|const
decl_stmt|;
name|bool
name|hasEnabledColorAttachment
argument_list|()
specifier|const
expr_stmt|;
name|bool
name|hasStencil
argument_list|()
specifier|const
expr_stmt|;
name|int
name|getSamples
argument_list|()
specifier|const
expr_stmt|;
name|bool
name|usingExtendedDrawBuffers
argument_list|()
specifier|const
expr_stmt|;
name|virtual
name|GLenum
name|completeness
argument_list|()
specifier|const
expr_stmt|;
name|bool
name|hasValidDepthStencil
argument_list|()
specifier|const
expr_stmt|;
name|protected
label|:
name|rx
operator|::
name|Renderer
operator|*
name|mRenderer
expr_stmt|;
name|GLuint
name|mId
decl_stmt|;
name|FramebufferAttachment
modifier|*
name|mColorbuffers
index|[
name|IMPLEMENTATION_MAX_DRAW_BUFFERS
index|]
decl_stmt|;
name|GLenum
name|mDrawBufferStates
index|[
name|IMPLEMENTATION_MAX_DRAW_BUFFERS
index|]
decl_stmt|;
name|GLenum
name|mReadBufferState
decl_stmt|;
name|FramebufferAttachment
modifier|*
name|mDepthbuffer
decl_stmt|;
name|FramebufferAttachment
modifier|*
name|mStencilbuffer
decl_stmt|;
name|private
label|:
name|DISALLOW_COPY_AND_ASSIGN
argument_list|(
name|Framebuffer
argument_list|)
expr_stmt|;
name|FramebufferAttachment
modifier|*
name|createAttachment
argument_list|(
name|GLenum
name|type
argument_list|,
name|GLuint
name|handle
argument_list|,
name|GLint
name|level
argument_list|,
name|GLint
name|layer
argument_list|)
decl|const
decl_stmt|;
block|}
empty_stmt|;
name|class
name|DefaultFramebuffer
range|:
name|public
name|Framebuffer
block|{
name|public
operator|:
name|DefaultFramebuffer
argument_list|(
name|rx
operator|::
name|Renderer
operator|*
name|Renderer
argument_list|,
name|Colorbuffer
operator|*
name|colorbuffer
argument_list|,
name|DepthStencilbuffer
operator|*
name|depthStencil
argument_list|)
block|;
name|virtual
name|GLenum
name|completeness
argument_list|()
specifier|const
block|;
name|virtual
name|FramebufferAttachment
operator|*
name|getAttachment
argument_list|(
argument|GLenum attachment
argument_list|)
specifier|const
block|;
name|private
operator|:
name|DISALLOW_COPY_AND_ASSIGN
argument_list|(
name|DefaultFramebuffer
argument_list|)
block|; }
decl_stmt|;
block|}
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// LIBGLESV2_FRAMEBUFFER_H_
end_comment
end_unit
