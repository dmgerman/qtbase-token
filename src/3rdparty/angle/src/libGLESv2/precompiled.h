begin_unit
begin_comment
comment|//
end_comment
begin_comment
comment|// Copyright (c) 2013 The ANGLE Project Authors. All rights reserved.
end_comment
begin_comment
comment|// Use of this source code is governed by a BSD-style license that can be
end_comment
begin_comment
comment|// found in the LICENSE file.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// precompiled.h: Precompiled header file for libGLESv2.
end_comment
begin_define
DECL|macro|GL_APICALL
define|#
directive|define
name|GL_APICALL
end_define
begin_include
include|#
directive|include
file|<GLES2/gl2.h>
end_include
begin_include
include|#
directive|include
file|<GLES2/gl2ext.h>
end_include
begin_define
DECL|macro|EGLAPI
define|#
directive|define
name|EGLAPI
end_define
begin_include
include|#
directive|include
file|<EGL/egl.h>
end_include
begin_include
include|#
directive|include
file|<assert.h>
end_include
begin_include
include|#
directive|include
file|<cstddef>
end_include
begin_include
include|#
directive|include
file|<float.h>
end_include
begin_include
include|#
directive|include
file|<intrin.h>
end_include
begin_include
include|#
directive|include
file|<math.h>
end_include
begin_include
include|#
directive|include
file|<stdarg.h>
end_include
begin_include
include|#
directive|include
file|<stdlib.h>
end_include
begin_include
include|#
directive|include
file|<stdio.h>
end_include
begin_include
include|#
directive|include
file|<string.h>
end_include
begin_include
include|#
directive|include
file|<algorithm>
end_include
begin_comment
comment|// for std::min and std::max
end_comment
begin_include
include|#
directive|include
file|<limits>
end_include
begin_include
include|#
directive|include
file|<map>
end_include
begin_include
include|#
directive|include
file|<set>
end_include
begin_include
include|#
directive|include
file|<sstream>
end_include
begin_include
include|#
directive|include
file|<string>
end_include
begin_include
include|#
directive|include
file|<unordered_map>
end_include
begin_include
include|#
directive|include
file|<vector>
end_include
begin_if
if|#
directive|if
name|defined
argument_list|(
name|WINAPI_FAMILY
argument_list|)
operator|&&
operator|(
name|WINAPI_FAMILY
operator|==
name|WINAPI_FAMILY_APP
operator|||
name|WINAPI_FAMILY
operator|==
name|WINAPI_FAMILY_PHONE_APP
operator|)
end_if
begin_define
DECL|macro|ANGLE_OS_WINRT
define|#
directive|define
name|ANGLE_OS_WINRT
end_define
begin_if
if|#
directive|if
name|WINAPI_FAMILY
operator|==
name|WINAPI_FAMILY_PHONE_APP
end_if
begin_define
DECL|macro|ANGLE_OS_WINPHONE
define|#
directive|define
name|ANGLE_OS_WINPHONE
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|ANGLE_ENABLE_D3D11
end_ifndef
begin_include
include|#
directive|include
file|<d3d9.h>
end_include
begin_else
else|#
directive|else
end_else
begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|ANGLE_OS_WINRT
argument_list|)
end_if
begin_include
include|#
directive|include
file|<D3D11.h>
end_include
begin_else
else|#
directive|else
end_else
begin_include
include|#
directive|include
file|<d3d11_1.h>
end_include
begin_define
DECL|macro|Sleep
define|#
directive|define
name|Sleep
parameter_list|(
name|x
parameter_list|)
value|WaitForSingleObjectEx(GetCurrentThread(), x, FALSE)
end_define
begin_define
DECL|macro|GetVersion
define|#
directive|define
name|GetVersion
parameter_list|()
value|WINVER
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_include
include|#
directive|include
file|<dxgi.h>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|ANGLE_OS_WINPHONE
end_ifndef
begin_include
include|#
directive|include
file|<D3Dcompiler.h>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_ifdef
ifdef|#
directive|ifdef
name|_MSC_VER
end_ifdef
begin_include
include|#
directive|include
file|<hash_map>
end_include
begin_endif
endif|#
directive|endif
end_endif
end_unit
