begin_unit
begin_comment
comment|//
end_comment
begin_comment
comment|// Copyright (c) 2002-2013 The ANGLE Project Authors. All rights reserved.
end_comment
begin_comment
comment|// Use of this source code is governed by a BSD-style license that can be
end_comment
begin_comment
comment|// found in the LICENSE file.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// utilities.h: Conversion functions and other utility routines.
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|LIBGLESV2_UTILITIES_H
end_ifndef
begin_define
DECL|macro|LIBGLESV2_UTILITIES_H
define|#
directive|define
name|LIBGLESV2_UTILITIES_H
end_define
begin_define
DECL|macro|GL_APICALL
define|#
directive|define
name|GL_APICALL
end_define
begin_include
include|#
directive|include
file|<GLES2/gl2.h>
end_include
begin_include
include|#
directive|include
file|<GLES2/gl2ext.h>
end_include
begin_include
include|#
directive|include
file|<string>
end_include
begin_decl_stmt
name|namespace
name|gl
block|{
struct_decl|struct
name|Color
struct_decl|;
name|int
name|UniformComponentCount
parameter_list|(
name|GLenum
name|type
parameter_list|)
function_decl|;
name|GLenum
name|UniformComponentType
parameter_list|(
name|GLenum
name|type
parameter_list|)
function_decl|;
name|size_t
name|UniformInternalSize
parameter_list|(
name|GLenum
name|type
parameter_list|)
function_decl|;
name|size_t
name|UniformExternalSize
parameter_list|(
name|GLenum
name|type
parameter_list|)
function_decl|;
name|int
name|VariableRowCount
parameter_list|(
name|GLenum
name|type
parameter_list|)
function_decl|;
name|int
name|VariableColumnCount
parameter_list|(
name|GLenum
name|type
parameter_list|)
function_decl|;
name|int
name|AllocateFirstFreeBits
parameter_list|(
name|unsigned
name|int
modifier|*
name|bits
parameter_list|,
name|unsigned
name|int
name|allocationSize
parameter_list|,
name|unsigned
name|int
name|bitsSize
parameter_list|)
function_decl|;
name|void
name|MakeValidSize
parameter_list|(
name|bool
name|isImage
parameter_list|,
name|bool
name|isCompressed
parameter_list|,
name|GLsizei
modifier|*
name|requestWidth
parameter_list|,
name|GLsizei
modifier|*
name|requestHeight
parameter_list|,
name|int
modifier|*
name|levelOffset
parameter_list|)
function_decl|;
name|int
name|ComputePixelSize
parameter_list|(
name|GLint
name|internalformat
parameter_list|)
function_decl|;
name|GLsizei
name|ComputePitch
parameter_list|(
name|GLsizei
name|width
parameter_list|,
name|GLint
name|internalformat
parameter_list|,
name|GLint
name|alignment
parameter_list|)
function_decl|;
name|GLsizei
name|ComputeCompressedPitch
parameter_list|(
name|GLsizei
name|width
parameter_list|,
name|GLenum
name|format
parameter_list|)
function_decl|;
name|GLsizei
name|ComputeCompressedSize
parameter_list|(
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|)
function_decl|;
name|bool
name|IsCompressed
parameter_list|(
name|GLenum
name|format
parameter_list|)
function_decl|;
name|bool
name|IsDepthTexture
parameter_list|(
name|GLenum
name|format
parameter_list|)
function_decl|;
name|bool
name|IsStencilTexture
parameter_list|(
name|GLenum
name|format
parameter_list|)
function_decl|;
name|bool
name|IsCubemapTextureTarget
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
name|bool
name|IsInternalTextureTarget
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
name|GLint
name|ConvertSizedInternalFormat
parameter_list|(
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|)
function_decl|;
name|GLenum
name|ExtractFormat
parameter_list|(
name|GLenum
name|internalformat
parameter_list|)
function_decl|;
name|GLenum
name|ExtractType
parameter_list|(
name|GLenum
name|internalformat
parameter_list|)
function_decl|;
name|bool
name|IsColorRenderable
parameter_list|(
name|GLenum
name|internalformat
parameter_list|)
function_decl|;
name|bool
name|IsDepthRenderable
parameter_list|(
name|GLenum
name|internalformat
parameter_list|)
function_decl|;
name|bool
name|IsStencilRenderable
parameter_list|(
name|GLenum
name|internalformat
parameter_list|)
function_decl|;
name|bool
name|IsFloat32Format
parameter_list|(
name|GLint
name|internalformat
parameter_list|)
function_decl|;
name|bool
name|IsFloat16Format
parameter_list|(
name|GLint
name|internalformat
parameter_list|)
function_decl|;
name|GLuint
name|GetAlphaSize
parameter_list|(
name|GLenum
name|colorFormat
parameter_list|)
function_decl|;
name|GLuint
name|GetRedSize
parameter_list|(
name|GLenum
name|colorFormat
parameter_list|)
function_decl|;
name|GLuint
name|GetGreenSize
parameter_list|(
name|GLenum
name|colorFormat
parameter_list|)
function_decl|;
name|GLuint
name|GetBlueSize
parameter_list|(
name|GLenum
name|colorFormat
parameter_list|)
function_decl|;
name|GLuint
name|GetDepthSize
parameter_list|(
name|GLenum
name|depthFormat
parameter_list|)
function_decl|;
name|GLuint
name|GetStencilSize
parameter_list|(
name|GLenum
name|stencilFormat
parameter_list|)
function_decl|;
name|bool
name|IsTriangleMode
parameter_list|(
name|GLenum
name|drawMode
parameter_list|)
function_decl|;
block|}
end_decl_stmt
begin_expr_stmt
name|std
operator|::
name|string
name|getTempPath
argument_list|()
expr_stmt|;
end_expr_stmt
begin_function_decl
name|void
name|writeFile
parameter_list|(
specifier|const
name|char
modifier|*
name|path
parameter_list|,
specifier|const
name|void
modifier|*
name|data
parameter_list|,
name|size_t
name|size
parameter_list|)
function_decl|;
end_function_decl
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// LIBGLESV2_UTILITIES_H
end_comment
end_unit
