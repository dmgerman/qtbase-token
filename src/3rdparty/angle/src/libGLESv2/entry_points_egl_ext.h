begin_unit
begin_comment
comment|//
end_comment
begin_comment
comment|// Copyright(c) 2014 The ANGLE Project Authors. All rights reserved.
end_comment
begin_comment
comment|// Use of this source code is governed by a BSD-style license that can be
end_comment
begin_comment
comment|// found in the LICENSE file.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// entry_points_egl_ext.h : Defines the EGL extension entry points.
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|LIBGLESV2_ENTRYPOINTSEGLEXT_H_
end_ifndef
begin_define
DECL|macro|LIBGLESV2_ENTRYPOINTSEGLEXT_H_
define|#
directive|define
name|LIBGLESV2_ENTRYPOINTSEGLEXT_H_
end_define
begin_include
include|#
directive|include
file|<EGL/egl.h>
end_include
begin_include
include|#
directive|include
file|<EGL/eglext.h>
end_include
begin_include
include|#
directive|include
file|<export.h>
end_include
begin_decl_stmt
name|namespace
name|egl
block|{
comment|// EGL_ANGLE_query_surface_pointer
name|ANGLE_EXPORT
name|EGLBoolean
name|EGLAPIENTRY
name|QuerySurfacePointerANGLE
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSurface
name|surface
parameter_list|,
name|EGLint
name|attribute
parameter_list|,
name|void
modifier|*
modifier|*
name|value
parameter_list|)
function_decl|;
comment|// EGL_NV_post_sub_buffer
name|ANGLE_EXPORT
name|EGLBoolean
name|EGLAPIENTRY
name|PostSubBufferNV
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSurface
name|surface
parameter_list|,
name|EGLint
name|x
parameter_list|,
name|EGLint
name|y
parameter_list|,
name|EGLint
name|width
parameter_list|,
name|EGLint
name|height
parameter_list|)
function_decl|;
comment|// EGL_EXT_platform_base
name|ANGLE_EXPORT
name|EGLDisplay
name|EGLAPIENTRY
name|GetPlatformDisplayEXT
parameter_list|(
name|EGLenum
name|platform
parameter_list|,
name|void
modifier|*
name|native_display
parameter_list|,
specifier|const
name|EGLint
modifier|*
name|attrib_list
parameter_list|)
function_decl|;
comment|// EGL_EXT_device_query
name|ANGLE_EXPORT
name|EGLBoolean
name|EGLAPIENTRY
name|QueryDisplayAttribEXT
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLint
name|attribute
parameter_list|,
name|EGLAttrib
modifier|*
name|value
parameter_list|)
function_decl|;
name|ANGLE_EXPORT
name|EGLBoolean
name|EGLAPIENTRY
name|QueryDeviceAttribEXT
parameter_list|(
name|EGLDeviceEXT
name|device
parameter_list|,
name|EGLint
name|attribute
parameter_list|,
name|EGLAttrib
modifier|*
name|value
parameter_list|)
function_decl|;
name|ANGLE_EXPORT
specifier|const
name|char
modifier|*
name|EGLAPIENTRY
name|QueryDeviceStringEXT
parameter_list|(
name|EGLDeviceEXT
name|device
parameter_list|,
name|EGLint
name|name
parameter_list|)
function_decl|;
comment|// EGL_KHR_image_base/EGL_KHR_image
name|ANGLE_EXPORT
name|EGLImageKHR
name|EGLAPIENTRY
name|CreateImageKHR
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLContext
name|ctx
parameter_list|,
name|EGLenum
name|target
parameter_list|,
name|EGLClientBuffer
name|buffer
parameter_list|,
specifier|const
name|EGLint
modifier|*
name|attrib_list
parameter_list|)
function_decl|;
name|ANGLE_EXPORT
name|EGLBoolean
name|EGLAPIENTRY
name|DestroyImageKHR
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLImageKHR
name|image
parameter_list|)
function_decl|;
comment|// EGL_EXT_device_creation
name|ANGLE_EXPORT
name|EGLDeviceEXT
name|EGLAPIENTRY
name|CreateDeviceANGLE
parameter_list|(
name|EGLint
name|device_type
parameter_list|,
name|void
modifier|*
name|native_device
parameter_list|,
specifier|const
name|EGLAttrib
modifier|*
name|attrib_list
parameter_list|)
function_decl|;
name|ANGLE_EXPORT
name|EGLBoolean
name|EGLAPIENTRY
name|ReleaseDeviceANGLE
parameter_list|(
name|EGLDeviceEXT
name|device
parameter_list|)
function_decl|;
block|}
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// LIBGLESV2_ENTRYPOINTSEGLEXT_H_
end_comment
end_unit
