begin_unit
begin_comment
comment|//
end_comment
begin_comment
comment|// Copyright (c) 2014 The ANGLE Project Authors. All rights reserved.
end_comment
begin_comment
comment|// Use of this source code is governed by a BSD-style license that can be
end_comment
begin_comment
comment|// found in the LICENSE file.
end_comment
begin_comment
comment|//
end_comment
begin_include
include|#
directive|include
file|"libGLESv2/TransformFeedback.h"
end_include
begin_namespace
DECL|namespace|gl
namespace|namespace
name|gl
block|{
DECL|function|TransformFeedback
name|TransformFeedback
operator|::
name|TransformFeedback
parameter_list|(
name|GLuint
name|id
parameter_list|)
member_init_list|:
name|RefCountObject
argument_list|(
name|id
argument_list|)
member_init_list|,
name|mStarted
argument_list|(
name|GL_FALSE
argument_list|)
member_init_list|,
name|mPrimitiveMode
argument_list|(
name|GL_NONE
argument_list|)
member_init_list|,
name|mPaused
argument_list|(
name|GL_FALSE
argument_list|)
block|{ }
DECL|function|~TransformFeedback
name|TransformFeedback
operator|::
name|~
name|TransformFeedback
parameter_list|()
block|{ }
DECL|function|start
name|void
name|TransformFeedback
operator|::
name|start
parameter_list|(
name|GLenum
name|primitiveMode
parameter_list|)
block|{
name|mStarted
operator|=
name|GL_TRUE
expr_stmt|;
name|mPrimitiveMode
operator|=
name|primitiveMode
expr_stmt|;
name|mPaused
operator|=
name|GL_FALSE
expr_stmt|;
block|}
DECL|function|stop
name|void
name|TransformFeedback
operator|::
name|stop
parameter_list|()
block|{
name|mStarted
operator|=
name|GL_FALSE
expr_stmt|;
name|mPrimitiveMode
operator|=
name|GL_NONE
expr_stmt|;
name|mPaused
operator|=
name|GL_FALSE
expr_stmt|;
block|}
DECL|function|isStarted
name|GLboolean
name|TransformFeedback
operator|::
name|isStarted
parameter_list|()
specifier|const
block|{
return|return
name|mStarted
return|;
block|}
DECL|function|getDrawMode
name|GLenum
name|TransformFeedback
operator|::
name|getDrawMode
parameter_list|()
specifier|const
block|{
return|return
name|mPrimitiveMode
return|;
block|}
DECL|function|pause
name|void
name|TransformFeedback
operator|::
name|pause
parameter_list|()
block|{
name|mPaused
operator|=
name|GL_TRUE
expr_stmt|;
block|}
DECL|function|resume
name|void
name|TransformFeedback
operator|::
name|resume
parameter_list|()
block|{
name|mPaused
operator|=
name|GL_FALSE
expr_stmt|;
block|}
DECL|function|isPaused
name|GLboolean
name|TransformFeedback
operator|::
name|isPaused
parameter_list|()
specifier|const
block|{
return|return
name|mPaused
return|;
block|}
block|}
end_namespace
end_unit
