begin_unit
begin_comment
comment|//
end_comment
begin_comment
comment|// Copyright (c) 2014 The ANGLE Project Authors. All rights reserved.
end_comment
begin_comment
comment|// Use of this source code is governed by a BSD-style license that can be
end_comment
begin_comment
comment|// found in the LICENSE file.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// FramebufferAttachment.cpp: the gl::FramebufferAttachment class and its derived classes
end_comment
begin_comment
comment|// objects and related functionality. [OpenGL ES 2.0.24] section 4.4.3 page 108.
end_comment
begin_include
include|#
directive|include
file|"libGLESv2/FramebufferAttachment.h"
end_include
begin_include
include|#
directive|include
file|"libGLESv2/Texture.h"
end_include
begin_include
include|#
directive|include
file|"libGLESv2/formatutils.h"
end_include
begin_include
include|#
directive|include
file|"libGLESv2/Renderbuffer.h"
end_include
begin_include
include|#
directive|include
file|"libGLESv2/renderer/RenderTarget.h"
end_include
begin_include
include|#
directive|include
file|"libGLESv2/renderer/Renderer.h"
end_include
begin_include
include|#
directive|include
file|"libGLESv2/renderer/d3d/TextureStorage.h"
end_include
begin_include
include|#
directive|include
file|"common/utilities.h"
end_include
begin_namespace
DECL|namespace|gl
namespace|namespace
name|gl
block|{
comment|////// FramebufferAttachment Implementation //////
DECL|function|FramebufferAttachment
name|FramebufferAttachment
operator|::
name|FramebufferAttachment
parameter_list|(
name|GLenum
name|binding
parameter_list|)
member_init_list|:
name|mBinding
argument_list|(
name|binding
argument_list|)
block|{ }
DECL|function|~FramebufferAttachment
name|FramebufferAttachment
operator|::
name|~
name|FramebufferAttachment
parameter_list|()
block|{ }
DECL|function|getRedSize
name|GLuint
name|FramebufferAttachment
operator|::
name|getRedSize
parameter_list|()
specifier|const
block|{
return|return
operator|(
name|GetInternalFormatInfo
argument_list|(
name|getInternalFormat
argument_list|()
argument_list|)
operator|.
name|redBits
operator|>
literal|0
operator|)
condition|?
name|GetInternalFormatInfo
argument_list|(
name|getActualFormat
argument_list|()
argument_list|)
operator|.
name|redBits
else|:
literal|0
return|;
block|}
DECL|function|getGreenSize
name|GLuint
name|FramebufferAttachment
operator|::
name|getGreenSize
parameter_list|()
specifier|const
block|{
return|return
operator|(
name|GetInternalFormatInfo
argument_list|(
name|getInternalFormat
argument_list|()
argument_list|)
operator|.
name|greenBits
operator|>
literal|0
operator|)
condition|?
name|GetInternalFormatInfo
argument_list|(
name|getActualFormat
argument_list|()
argument_list|)
operator|.
name|greenBits
else|:
literal|0
return|;
block|}
DECL|function|getBlueSize
name|GLuint
name|FramebufferAttachment
operator|::
name|getBlueSize
parameter_list|()
specifier|const
block|{
return|return
operator|(
name|GetInternalFormatInfo
argument_list|(
name|getInternalFormat
argument_list|()
argument_list|)
operator|.
name|blueBits
operator|>
literal|0
operator|)
condition|?
name|GetInternalFormatInfo
argument_list|(
name|getActualFormat
argument_list|()
argument_list|)
operator|.
name|blueBits
else|:
literal|0
return|;
block|}
DECL|function|getAlphaSize
name|GLuint
name|FramebufferAttachment
operator|::
name|getAlphaSize
parameter_list|()
specifier|const
block|{
return|return
operator|(
name|GetInternalFormatInfo
argument_list|(
name|getInternalFormat
argument_list|()
argument_list|)
operator|.
name|alphaBits
operator|>
literal|0
operator|)
condition|?
name|GetInternalFormatInfo
argument_list|(
name|getActualFormat
argument_list|()
argument_list|)
operator|.
name|alphaBits
else|:
literal|0
return|;
block|}
DECL|function|getDepthSize
name|GLuint
name|FramebufferAttachment
operator|::
name|getDepthSize
parameter_list|()
specifier|const
block|{
return|return
operator|(
name|GetInternalFormatInfo
argument_list|(
name|getInternalFormat
argument_list|()
argument_list|)
operator|.
name|depthBits
operator|>
literal|0
operator|)
condition|?
name|GetInternalFormatInfo
argument_list|(
name|getActualFormat
argument_list|()
argument_list|)
operator|.
name|depthBits
else|:
literal|0
return|;
block|}
DECL|function|getStencilSize
name|GLuint
name|FramebufferAttachment
operator|::
name|getStencilSize
parameter_list|()
specifier|const
block|{
return|return
operator|(
name|GetInternalFormatInfo
argument_list|(
name|getInternalFormat
argument_list|()
argument_list|)
operator|.
name|stencilBits
operator|>
literal|0
operator|)
condition|?
name|GetInternalFormatInfo
argument_list|(
name|getActualFormat
argument_list|()
argument_list|)
operator|.
name|stencilBits
else|:
literal|0
return|;
block|}
DECL|function|getComponentType
name|GLenum
name|FramebufferAttachment
operator|::
name|getComponentType
parameter_list|()
specifier|const
block|{
return|return
name|GetInternalFormatInfo
argument_list|(
name|getActualFormat
argument_list|()
argument_list|)
operator|.
name|componentType
return|;
block|}
DECL|function|getColorEncoding
name|GLenum
name|FramebufferAttachment
operator|::
name|getColorEncoding
parameter_list|()
specifier|const
block|{
return|return
name|GetInternalFormatInfo
argument_list|(
name|getActualFormat
argument_list|()
argument_list|)
operator|.
name|colorEncoding
return|;
block|}
DECL|function|isTexture
name|bool
name|FramebufferAttachment
operator|::
name|isTexture
parameter_list|()
specifier|const
block|{
return|return
operator|(
name|type
argument_list|()
operator|!=
name|GL_RENDERBUFFER
operator|)
return|;
block|}
comment|///// TextureAttachment Implementation ////////
DECL|function|TextureAttachment
name|TextureAttachment
operator|::
name|TextureAttachment
parameter_list|(
name|GLenum
name|binding
parameter_list|,
name|Texture
modifier|*
name|texture
parameter_list|,
specifier|const
name|ImageIndex
modifier|&
name|index
parameter_list|)
member_init_list|:
name|FramebufferAttachment
argument_list|(
name|binding
argument_list|)
member_init_list|,
name|mIndex
argument_list|(
name|index
argument_list|)
block|{
name|mTexture
operator|.
name|set
argument_list|(
name|texture
argument_list|)
expr_stmt|;
block|}
DECL|function|~TextureAttachment
name|TextureAttachment
operator|::
name|~
name|TextureAttachment
parameter_list|()
block|{
name|mTexture
operator|.
name|set
argument_list|(
name|NULL
argument_list|)
expr_stmt|;
block|}
DECL|function|getSamples
name|GLsizei
name|TextureAttachment
operator|::
name|getSamples
parameter_list|()
specifier|const
block|{
return|return
literal|0
return|;
block|}
DECL|function|id
name|GLuint
name|TextureAttachment
operator|::
name|id
parameter_list|()
specifier|const
block|{
return|return
name|mTexture
operator|->
name|id
argument_list|()
return|;
block|}
DECL|function|getWidth
name|GLsizei
name|TextureAttachment
operator|::
name|getWidth
parameter_list|()
specifier|const
block|{
return|return
name|mTexture
operator|->
name|getWidth
argument_list|(
name|mIndex
argument_list|)
return|;
block|}
DECL|function|getHeight
name|GLsizei
name|TextureAttachment
operator|::
name|getHeight
parameter_list|()
specifier|const
block|{
return|return
name|mTexture
operator|->
name|getHeight
argument_list|(
name|mIndex
argument_list|)
return|;
block|}
DECL|function|getInternalFormat
name|GLenum
name|TextureAttachment
operator|::
name|getInternalFormat
parameter_list|()
specifier|const
block|{
return|return
name|mTexture
operator|->
name|getInternalFormat
argument_list|(
name|mIndex
argument_list|)
return|;
block|}
DECL|function|getActualFormat
name|GLenum
name|TextureAttachment
operator|::
name|getActualFormat
parameter_list|()
specifier|const
block|{
return|return
name|mTexture
operator|->
name|getActualFormat
argument_list|(
name|mIndex
argument_list|)
return|;
block|}
DECL|function|type
name|GLenum
name|TextureAttachment
operator|::
name|type
parameter_list|()
specifier|const
block|{
return|return
name|mIndex
operator|.
name|type
return|;
block|}
DECL|function|mipLevel
name|GLint
name|TextureAttachment
operator|::
name|mipLevel
parameter_list|()
specifier|const
block|{
return|return
name|mIndex
operator|.
name|mipIndex
return|;
block|}
DECL|function|layer
name|GLint
name|TextureAttachment
operator|::
name|layer
parameter_list|()
specifier|const
block|{
return|return
name|mIndex
operator|.
name|layerIndex
return|;
block|}
DECL|function|getTexture
name|Texture
modifier|*
name|TextureAttachment
operator|::
name|getTexture
parameter_list|()
block|{
return|return
name|mTexture
operator|.
name|get
argument_list|()
return|;
block|}
DECL|function|getTextureImageIndex
specifier|const
name|ImageIndex
modifier|*
name|TextureAttachment
operator|::
name|getTextureImageIndex
parameter_list|()
specifier|const
block|{
return|return
operator|&
name|mIndex
return|;
block|}
DECL|function|getRenderbuffer
name|Renderbuffer
modifier|*
name|TextureAttachment
operator|::
name|getRenderbuffer
parameter_list|()
block|{
name|UNREACHABLE
argument_list|()
expr_stmt|;
return|return
name|NULL
return|;
block|}
comment|////// RenderbufferAttachment Implementation //////
DECL|function|RenderbufferAttachment
name|RenderbufferAttachment
operator|::
name|RenderbufferAttachment
parameter_list|(
name|GLenum
name|binding
parameter_list|,
name|Renderbuffer
modifier|*
name|renderbuffer
parameter_list|)
member_init_list|:
name|FramebufferAttachment
argument_list|(
name|binding
argument_list|)
block|{
name|ASSERT
argument_list|(
name|renderbuffer
argument_list|)
expr_stmt|;
name|mRenderbuffer
operator|.
name|set
argument_list|(
name|renderbuffer
argument_list|)
expr_stmt|;
block|}
DECL|function|~RenderbufferAttachment
name|RenderbufferAttachment
operator|::
name|~
name|RenderbufferAttachment
parameter_list|()
block|{
name|mRenderbuffer
operator|.
name|set
argument_list|(
name|NULL
argument_list|)
expr_stmt|;
block|}
DECL|function|getWidth
name|GLsizei
name|RenderbufferAttachment
operator|::
name|getWidth
parameter_list|()
specifier|const
block|{
return|return
name|mRenderbuffer
operator|->
name|getWidth
argument_list|()
return|;
block|}
DECL|function|getHeight
name|GLsizei
name|RenderbufferAttachment
operator|::
name|getHeight
parameter_list|()
specifier|const
block|{
return|return
name|mRenderbuffer
operator|->
name|getHeight
argument_list|()
return|;
block|}
DECL|function|getInternalFormat
name|GLenum
name|RenderbufferAttachment
operator|::
name|getInternalFormat
parameter_list|()
specifier|const
block|{
return|return
name|mRenderbuffer
operator|->
name|getInternalFormat
argument_list|()
return|;
block|}
DECL|function|getActualFormat
name|GLenum
name|RenderbufferAttachment
operator|::
name|getActualFormat
parameter_list|()
specifier|const
block|{
return|return
name|mRenderbuffer
operator|->
name|getActualFormat
argument_list|()
return|;
block|}
DECL|function|getSamples
name|GLsizei
name|RenderbufferAttachment
operator|::
name|getSamples
parameter_list|()
specifier|const
block|{
return|return
name|mRenderbuffer
operator|->
name|getSamples
argument_list|()
return|;
block|}
DECL|function|id
name|GLuint
name|RenderbufferAttachment
operator|::
name|id
parameter_list|()
specifier|const
block|{
return|return
name|mRenderbuffer
operator|->
name|id
argument_list|()
return|;
block|}
DECL|function|type
name|GLenum
name|RenderbufferAttachment
operator|::
name|type
parameter_list|()
specifier|const
block|{
return|return
name|GL_RENDERBUFFER
return|;
block|}
DECL|function|mipLevel
name|GLint
name|RenderbufferAttachment
operator|::
name|mipLevel
parameter_list|()
specifier|const
block|{
return|return
literal|0
return|;
block|}
DECL|function|layer
name|GLint
name|RenderbufferAttachment
operator|::
name|layer
parameter_list|()
specifier|const
block|{
return|return
literal|0
return|;
block|}
DECL|function|getTexture
name|Texture
modifier|*
name|RenderbufferAttachment
operator|::
name|getTexture
parameter_list|()
block|{
name|UNREACHABLE
argument_list|()
expr_stmt|;
return|return
name|NULL
return|;
block|}
DECL|function|getTextureImageIndex
specifier|const
name|ImageIndex
modifier|*
name|RenderbufferAttachment
operator|::
name|getTextureImageIndex
parameter_list|()
specifier|const
block|{
name|UNREACHABLE
argument_list|()
expr_stmt|;
return|return
name|NULL
return|;
block|}
DECL|function|getRenderbuffer
name|Renderbuffer
modifier|*
name|RenderbufferAttachment
operator|::
name|getRenderbuffer
parameter_list|()
block|{
return|return
name|mRenderbuffer
operator|.
name|get
argument_list|()
return|;
block|}
block|}
end_namespace
end_unit
