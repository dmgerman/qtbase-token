begin_unit
begin_comment
comment|//
end_comment
begin_comment
comment|// Copyright (c) 2013-2014 The ANGLE Project Authors. All rights reserved.
end_comment
begin_comment
comment|// Use of this source code is governed by a BSD-style license that can be
end_comment
begin_comment
comment|// found in the LICENSE file.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// formatutils9.h: Queries for GL image formats and their translations to D3D9
end_comment
begin_comment
comment|// formats.
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|LIBGLESV2_RENDERER_FORMATUTILS9_H_
end_ifndef
begin_define
DECL|macro|LIBGLESV2_RENDERER_FORMATUTILS9_H_
define|#
directive|define
name|LIBGLESV2_RENDERER_FORMATUTILS9_H_
end_define
begin_include
include|#
directive|include
file|"libGLESv2/formatutils.h"
end_include
begin_include
include|#
directive|include
file|<map>
end_include
begin_decl_stmt
name|namespace
name|rx
block|{
name|class
name|Renderer9
decl_stmt|;
name|namespace
name|d3d9
block|{
typedef|typedef
name|std
operator|::
name|map
operator|<
name|std
operator|::
name|pair
operator|<
name|GLenum
operator|,
name|GLenum
operator|>
operator|,
name|ColorCopyFunction
operator|>
name|FastCopyFunctionMap
expr_stmt|;
struct|struct
name|D3DFormat
block|{
name|D3DFormat
argument_list|()
expr_stmt|;
name|GLuint
name|pixelBytes
decl_stmt|;
name|GLuint
name|blockWidth
decl_stmt|;
name|GLuint
name|blockHeight
decl_stmt|;
name|GLenum
name|internalFormat
decl_stmt|;
name|MipGenerationFunction
name|mipGenerationFunction
decl_stmt|;
name|ColorReadFunction
name|colorReadFunction
decl_stmt|;
name|FastCopyFunctionMap
name|fastCopyFunctions
decl_stmt|;
name|ColorCopyFunction
name|getFastCopyFunction
argument_list|(
name|GLenum
name|format
argument_list|,
name|GLenum
name|type
argument_list|)
decl|const
decl_stmt|;
block|}
struct|;
specifier|const
name|D3DFormat
modifier|&
name|GetD3DFormatInfo
parameter_list|(
name|D3DFORMAT
name|format
parameter_list|)
function_decl|;
struct|struct
name|VertexFormat
block|{
name|VertexFormat
argument_list|()
expr_stmt|;
name|VertexConversionType
name|conversionType
decl_stmt|;
name|size_t
name|outputElementSize
decl_stmt|;
name|VertexCopyFunction
name|copyFunction
decl_stmt|;
name|D3DDECLTYPE
name|nativeFormat
decl_stmt|;
name|GLenum
name|componentType
decl_stmt|;
block|}
struct|;
specifier|const
name|VertexFormat
modifier|&
name|GetVertexFormatInfo
argument_list|(
name|DWORD
name|supportedDeclTypes
argument_list|,
specifier|const
name|gl
operator|::
name|VertexFormat
operator|&
name|vertexFormat
argument_list|)
decl_stmt|;
struct|struct
name|TextureFormat
block|{
name|TextureFormat
argument_list|()
expr_stmt|;
name|D3DFORMAT
name|texFormat
decl_stmt|;
name|D3DFORMAT
name|renderFormat
decl_stmt|;
name|InitializeTextureDataFunction
name|dataInitializerFunction
decl_stmt|;
name|LoadImageFunction
name|loadFunction
decl_stmt|;
block|}
struct|;
specifier|const
name|TextureFormat
modifier|&
name|GetTextureFormatInfo
parameter_list|(
name|GLenum
name|internalFormat
parameter_list|)
function_decl|;
block|}
block|}
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// LIBGLESV2_RENDERER_FORMATUTILS9_H_
end_comment
end_unit
