begin_unit
begin_comment
comment|//
end_comment
begin_comment
comment|// Copyright (c) 2002-2013 The ANGLE Project Authors. All rights reserved.
end_comment
begin_comment
comment|// Use of this source code is governed by a BSD-style license that can be
end_comment
begin_comment
comment|// found in the LICENSE file.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// TextureStorage.h: Defines the abstract rx::TextureStorage class.
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|LIBGLESV2_RENDERER_TEXTURESTORAGE_H_
end_ifndef
begin_define
DECL|macro|LIBGLESV2_RENDERER_TEXTURESTORAGE_H_
define|#
directive|define
name|LIBGLESV2_RENDERER_TEXTURESTORAGE_H_
end_define
begin_include
include|#
directive|include
file|"common/debug.h"
end_include
begin_include
include|#
directive|include
file|<GLES2/gl2.h>
end_include
begin_decl_stmt
name|namespace
name|gl
block|{
struct_decl|struct
name|ImageIndex
struct_decl|;
block|}
end_decl_stmt
begin_decl_stmt
name|namespace
name|rx
block|{
name|class
name|Renderer
decl_stmt|;
name|class
name|SwapChain
decl_stmt|;
name|class
name|RenderTarget
decl_stmt|;
name|class
name|TextureStorage
block|{
name|public
label|:
name|TextureStorage
argument_list|()
expr_stmt|;
name|virtual
operator|~
name|TextureStorage
argument_list|()
block|{}
expr_stmt|;
name|virtual
name|int
name|getTopLevel
argument_list|()
specifier|const
operator|=
literal|0
expr_stmt|;
name|virtual
name|bool
name|isRenderTarget
argument_list|()
specifier|const
operator|=
literal|0
expr_stmt|;
name|virtual
name|bool
name|isManaged
argument_list|()
specifier|const
operator|=
literal|0
expr_stmt|;
name|virtual
name|int
name|getLevelCount
argument_list|()
specifier|const
operator|=
literal|0
expr_stmt|;
name|virtual
name|RenderTarget
modifier|*
name|getRenderTarget
argument_list|(
specifier|const
name|gl
operator|::
name|ImageIndex
operator|&
name|index
argument_list|)
init|=
literal|0
decl_stmt|;
name|virtual
name|void
name|generateMipmaps
parameter_list|()
init|=
literal|0
function_decl|;
name|unsigned
name|int
name|getRenderTargetSerial
argument_list|(
specifier|const
name|gl
operator|::
name|ImageIndex
operator|&
name|index
argument_list|)
decl|const
decl_stmt|;
name|unsigned
name|int
name|getTextureSerial
argument_list|()
specifier|const
expr_stmt|;
name|protected
label|:
name|void
name|initializeSerials
parameter_list|(
name|unsigned
name|int
name|rtSerialsToReserve
parameter_list|,
name|unsigned
name|int
name|rtSerialsLayerStride
parameter_list|)
function_decl|;
name|private
label|:
name|DISALLOW_COPY_AND_ASSIGN
argument_list|(
name|TextureStorage
argument_list|)
expr_stmt|;
specifier|const
name|unsigned
name|int
name|mTextureSerial
decl_stmt|;
specifier|static
name|unsigned
name|int
name|issueTextureSerial
parameter_list|()
function_decl|;
specifier|static
name|unsigned
name|int
name|mCurrentTextureSerial
decl_stmt|;
name|unsigned
name|int
name|mFirstRenderTargetSerial
decl_stmt|;
name|unsigned
name|int
name|mRenderTargetSerialsLayerStride
decl_stmt|;
block|}
empty_stmt|;
block|}
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// LIBGLESV2_RENDERER_TEXTURESTORAGE_H_
end_comment
end_unit
