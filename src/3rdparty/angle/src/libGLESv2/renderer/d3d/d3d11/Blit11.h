begin_unit
begin_comment
comment|//
end_comment
begin_comment
comment|// Copyright (c) 2013 The ANGLE Project Authors. All rights reserved.
end_comment
begin_comment
comment|// Use of this source code is governed by a BSD-style license that can be
end_comment
begin_comment
comment|// found in the LICENSE file.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// Blit11.cpp: Texture copy utility class.
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|LIBGLESV2_BLIT11_H_
end_ifndef
begin_define
DECL|macro|LIBGLESV2_BLIT11_H_
define|#
directive|define
name|LIBGLESV2_BLIT11_H_
end_define
begin_include
include|#
directive|include
file|"common/angleutils.h"
end_include
begin_include
include|#
directive|include
file|"libGLESv2/angletypes.h"
end_include
begin_include
include|#
directive|include
file|"libGLESv2/Error.h"
end_include
begin_include
include|#
directive|include
file|<map>
end_include
begin_decl_stmt
name|namespace
name|rx
block|{
name|class
name|Renderer11
decl_stmt|;
enum|enum
name|Filter
block|{
name|Point
block|,
name|Linear
block|, }
enum|;
name|class
name|Blit11
block|{
name|public
label|:
name|explicit
name|Blit11
parameter_list|(
name|Renderer11
modifier|*
name|renderer
parameter_list|)
function_decl|;
operator|~
name|Blit11
argument_list|()
expr_stmt|;
name|gl
operator|::
name|Error
name|swizzleTexture
argument_list|(
argument|ID3D11ShaderResourceView *source
argument_list|,
argument|ID3D11RenderTargetView *dest
argument_list|,
argument|const gl::Extents&size
argument_list|,
argument|GLenum swizzleRed
argument_list|,
argument|GLenum swizzleGreen
argument_list|,
argument|GLenum swizzleBlue
argument_list|,
argument|GLenum swizzleAlpha
argument_list|)
expr_stmt|;
name|bool
name|copyTexture
argument_list|(
name|ID3D11ShaderResourceView
operator|*
name|source
argument_list|,
specifier|const
name|gl
operator|::
name|Box
operator|&
name|sourceArea
argument_list|,
specifier|const
name|gl
operator|::
name|Extents
operator|&
name|sourceSize
argument_list|,
name|ID3D11RenderTargetView
operator|*
name|dest
argument_list|,
specifier|const
name|gl
operator|::
name|Box
operator|&
name|destArea
argument_list|,
specifier|const
name|gl
operator|::
name|Extents
operator|&
name|destSize
argument_list|,
specifier|const
name|gl
operator|::
name|Rectangle
operator|*
name|scissor
argument_list|,
name|GLenum
name|destFormat
argument_list|,
name|GLenum
name|filter
argument_list|)
decl_stmt|;
name|bool
name|copyStencil
argument_list|(
name|ID3D11Resource
operator|*
name|source
argument_list|,
name|unsigned
name|int
name|sourceSubresource
argument_list|,
specifier|const
name|gl
operator|::
name|Box
operator|&
name|sourceArea
argument_list|,
specifier|const
name|gl
operator|::
name|Extents
operator|&
name|sourceSize
argument_list|,
name|ID3D11Resource
operator|*
name|dest
argument_list|,
name|unsigned
name|int
name|destSubresource
argument_list|,
specifier|const
name|gl
operator|::
name|Box
operator|&
name|destArea
argument_list|,
specifier|const
name|gl
operator|::
name|Extents
operator|&
name|destSize
argument_list|,
specifier|const
name|gl
operator|::
name|Rectangle
operator|*
name|scissor
argument_list|)
decl_stmt|;
name|bool
name|copyDepth
argument_list|(
name|ID3D11ShaderResourceView
operator|*
name|source
argument_list|,
specifier|const
name|gl
operator|::
name|Box
operator|&
name|sourceArea
argument_list|,
specifier|const
name|gl
operator|::
name|Extents
operator|&
name|sourceSize
argument_list|,
name|ID3D11DepthStencilView
operator|*
name|dest
argument_list|,
specifier|const
name|gl
operator|::
name|Box
operator|&
name|destArea
argument_list|,
specifier|const
name|gl
operator|::
name|Extents
operator|&
name|destSize
argument_list|,
specifier|const
name|gl
operator|::
name|Rectangle
operator|*
name|scissor
argument_list|)
decl_stmt|;
name|bool
name|copyDepthStencil
argument_list|(
name|ID3D11Resource
operator|*
name|source
argument_list|,
name|unsigned
name|int
name|sourceSubresource
argument_list|,
specifier|const
name|gl
operator|::
name|Box
operator|&
name|sourceArea
argument_list|,
specifier|const
name|gl
operator|::
name|Extents
operator|&
name|sourceSize
argument_list|,
name|ID3D11Resource
operator|*
name|dest
argument_list|,
name|unsigned
name|int
name|destSubresource
argument_list|,
specifier|const
name|gl
operator|::
name|Box
operator|&
name|destArea
argument_list|,
specifier|const
name|gl
operator|::
name|Extents
operator|&
name|destSize
argument_list|,
specifier|const
name|gl
operator|::
name|Rectangle
operator|*
name|scissor
argument_list|)
decl_stmt|;
name|private
label|:
name|rx
operator|::
name|Renderer11
operator|*
name|mRenderer
expr_stmt|;
struct|struct
name|BlitParameters
block|{
name|GLenum
name|mDestinationFormat
decl_stmt|;
name|bool
name|mSignedInteger
decl_stmt|;
name|bool
name|m3DBlit
decl_stmt|;
block|}
struct|;
name|bool
name|copyDepthStencil
argument_list|(
name|ID3D11Resource
operator|*
name|source
argument_list|,
name|unsigned
name|int
name|sourceSubresource
argument_list|,
specifier|const
name|gl
operator|::
name|Box
operator|&
name|sourceArea
argument_list|,
specifier|const
name|gl
operator|::
name|Extents
operator|&
name|sourceSize
argument_list|,
name|ID3D11Resource
operator|*
name|dest
argument_list|,
name|unsigned
name|int
name|destSubresource
argument_list|,
specifier|const
name|gl
operator|::
name|Box
operator|&
name|destArea
argument_list|,
specifier|const
name|gl
operator|::
name|Extents
operator|&
name|destSize
argument_list|,
specifier|const
name|gl
operator|::
name|Rectangle
operator|*
name|scissor
argument_list|,
name|bool
name|stencilOnly
argument_list|)
decl_stmt|;
specifier|static
name|bool
name|compareBlitParameters
parameter_list|(
specifier|const
name|BlitParameters
modifier|&
name|a
parameter_list|,
specifier|const
name|BlitParameters
modifier|&
name|b
parameter_list|)
function_decl|;
typedef|typedef
name|void
argument_list|(
argument|*WriteVertexFunction
argument_list|)
operator|(
specifier|const
name|gl
operator|::
name|Box
operator|&
name|sourceArea
operator|,
specifier|const
name|gl
operator|::
name|Extents
operator|&
name|sourceSize
operator|,
specifier|const
name|gl
operator|::
name|Box
operator|&
name|destArea
operator|,
specifier|const
name|gl
operator|::
name|Extents
operator|&
name|destSize
operator|,
name|void
operator|*
name|outVertices
operator|,
name|unsigned
name|int
operator|*
name|outStride
operator|,
name|unsigned
name|int
operator|*
name|outVertexCount
operator|,
name|D3D11_PRIMITIVE_TOPOLOGY
operator|*
name|outTopology
operator|)
expr_stmt|;
struct|struct
name|Shader
block|{
name|WriteVertexFunction
name|mVertexWriteFunction
decl_stmt|;
name|ID3D11InputLayout
modifier|*
name|mInputLayout
decl_stmt|;
name|ID3D11VertexShader
modifier|*
name|mVertexShader
decl_stmt|;
name|ID3D11GeometryShader
modifier|*
name|mGeometryShader
decl_stmt|;
name|ID3D11PixelShader
modifier|*
name|mPixelShader
decl_stmt|;
block|}
struct|;
typedef|typedef
name|bool
function_decl|(
modifier|*
name|BlitParametersComparisonFunction
function_decl|)
parameter_list|(
specifier|const
name|BlitParameters
modifier|&
parameter_list|,
specifier|const
name|BlitParameters
modifier|&
parameter_list|)
function_decl|;
typedef|typedef
name|std
operator|::
name|map
operator|<
name|BlitParameters
operator|,
name|Shader
operator|,
name|BlitParametersComparisonFunction
operator|>
name|BlitShaderMap
expr_stmt|;
name|BlitShaderMap
name|mBlitShaderMap
decl_stmt|;
name|void
name|add2DBlitShaderToMap
parameter_list|(
name|GLenum
name|destFormat
parameter_list|,
name|bool
name|signedInteger
parameter_list|,
name|ID3D11PixelShader
modifier|*
name|ps
parameter_list|)
function_decl|;
name|void
name|add3DBlitShaderToMap
parameter_list|(
name|GLenum
name|destFormat
parameter_list|,
name|bool
name|signedInteger
parameter_list|,
name|ID3D11PixelShader
modifier|*
name|ps
parameter_list|)
function_decl|;
struct|struct
name|SwizzleParameters
block|{
name|GLenum
name|mDestinationType
decl_stmt|;
name|D3D11_SRV_DIMENSION
name|mViewDimension
decl_stmt|;
block|}
struct|;
specifier|static
name|bool
name|compareSwizzleParameters
parameter_list|(
specifier|const
name|SwizzleParameters
modifier|&
name|a
parameter_list|,
specifier|const
name|SwizzleParameters
modifier|&
name|b
parameter_list|)
function_decl|;
typedef|typedef
name|bool
function_decl|(
modifier|*
name|SwizzleParametersComparisonFunction
function_decl|)
parameter_list|(
specifier|const
name|SwizzleParameters
modifier|&
parameter_list|,
specifier|const
name|SwizzleParameters
modifier|&
parameter_list|)
function_decl|;
typedef|typedef
name|std
operator|::
name|map
operator|<
name|SwizzleParameters
operator|,
name|Shader
operator|,
name|SwizzleParametersComparisonFunction
operator|>
name|SwizzleShaderMap
expr_stmt|;
name|SwizzleShaderMap
name|mSwizzleShaderMap
decl_stmt|;
name|void
name|addSwizzleShaderToMap
parameter_list|(
name|GLenum
name|destType
parameter_list|,
name|D3D11_SRV_DIMENSION
name|viewDimension
parameter_list|,
name|ID3D11PixelShader
modifier|*
name|ps
parameter_list|)
function_decl|;
name|void
name|buildShaderMap
parameter_list|()
function_decl|;
name|void
name|clearShaderMap
parameter_list|()
function_decl|;
name|ID3D11Buffer
modifier|*
name|mVertexBuffer
decl_stmt|;
name|ID3D11SamplerState
modifier|*
name|mPointSampler
decl_stmt|;
name|ID3D11SamplerState
modifier|*
name|mLinearSampler
decl_stmt|;
name|ID3D11RasterizerState
modifier|*
name|mScissorEnabledRasterizerState
decl_stmt|;
name|ID3D11RasterizerState
modifier|*
name|mScissorDisabledRasterizerState
decl_stmt|;
name|ID3D11DepthStencilState
modifier|*
name|mDepthStencilState
decl_stmt|;
name|ID3D11InputLayout
modifier|*
name|mQuad2DIL
decl_stmt|;
name|ID3D11VertexShader
modifier|*
name|mQuad2DVS
decl_stmt|;
name|ID3D11PixelShader
modifier|*
name|mDepthPS
decl_stmt|;
name|ID3D11InputLayout
modifier|*
name|mQuad3DIL
decl_stmt|;
name|ID3D11VertexShader
modifier|*
name|mQuad3DVS
decl_stmt|;
name|ID3D11GeometryShader
modifier|*
name|mQuad3DGS
decl_stmt|;
name|ID3D11Buffer
modifier|*
name|mSwizzleCB
decl_stmt|;
name|DISALLOW_COPY_AND_ASSIGN
argument_list|(
name|Blit11
argument_list|)
expr_stmt|;
block|}
empty_stmt|;
block|}
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// LIBGLESV2_BLIT11_H_
end_comment
end_unit
