begin_unit
begin_comment
comment|//
end_comment
begin_comment
comment|// Copyright (c) 2013-2014 The ANGLE Project Authors. All rights reserved.
end_comment
begin_comment
comment|// Use of this source code is governed by a BSD-style license that can be
end_comment
begin_comment
comment|// found in the LICENSE file.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// formatutils11.h: Queries for GL image formats and their translations to D3D11
end_comment
begin_comment
comment|// formats.
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|LIBGLESV2_RENDERER_FORMATUTILS11_H_
end_ifndef
begin_define
DECL|macro|LIBGLESV2_RENDERER_FORMATUTILS11_H_
define|#
directive|define
name|LIBGLESV2_RENDERER_FORMATUTILS11_H_
end_define
begin_include
include|#
directive|include
file|"libGLESv2/formatutils.h"
end_include
begin_decl_stmt
name|namespace
name|rx
block|{
name|class
name|Renderer
decl_stmt|;
name|namespace
name|d3d11
block|{
typedef|typedef
name|std
operator|::
name|set
operator|<
name|DXGI_FORMAT
operator|>
name|DXGIFormatSet
expr_stmt|;
name|MipGenerationFunction
name|GetMipGenerationFunction
parameter_list|(
name|DXGI_FORMAT
name|format
parameter_list|)
function_decl|;
name|LoadImageFunction
name|GetImageLoadFunction
parameter_list|(
name|GLenum
name|internalFormat
parameter_list|,
name|GLenum
name|type
parameter_list|)
function_decl|;
name|GLuint
name|GetFormatPixelBytes
parameter_list|(
name|DXGI_FORMAT
name|format
parameter_list|)
function_decl|;
name|GLuint
name|GetBlockWidth
parameter_list|(
name|DXGI_FORMAT
name|format
parameter_list|)
function_decl|;
name|GLuint
name|GetBlockHeight
parameter_list|(
name|DXGI_FORMAT
name|format
parameter_list|)
function_decl|;
name|GLenum
name|GetComponentType
parameter_list|(
name|DXGI_FORMAT
name|format
parameter_list|)
function_decl|;
name|GLuint
name|GetDepthBits
parameter_list|(
name|DXGI_FORMAT
name|format
parameter_list|)
function_decl|;
name|GLuint
name|GetDepthOffset
parameter_list|(
name|DXGI_FORMAT
name|format
parameter_list|)
function_decl|;
name|GLuint
name|GetStencilBits
parameter_list|(
name|DXGI_FORMAT
name|format
parameter_list|)
function_decl|;
name|GLuint
name|GetStencilOffset
parameter_list|(
name|DXGI_FORMAT
name|format
parameter_list|)
function_decl|;
name|void
name|MakeValidSize
parameter_list|(
name|bool
name|isImage
parameter_list|,
name|DXGI_FORMAT
name|format
parameter_list|,
name|GLsizei
modifier|*
name|requestWidth
parameter_list|,
name|GLsizei
modifier|*
name|requestHeight
parameter_list|,
name|int
modifier|*
name|levelOffset
parameter_list|)
function_decl|;
specifier|const
name|DXGIFormatSet
modifier|&
name|GetAllUsedDXGIFormats
parameter_list|()
function_decl|;
name|ColorReadFunction
name|GetColorReadFunction
parameter_list|(
name|DXGI_FORMAT
name|format
parameter_list|)
function_decl|;
name|ColorCopyFunction
name|GetFastCopyFunction
parameter_list|(
name|DXGI_FORMAT
name|sourceFormat
parameter_list|,
name|GLenum
name|destFormat
parameter_list|,
name|GLenum
name|destType
parameter_list|)
function_decl|;
block|}
name|namespace
name|gl_d3d11
block|{
name|DXGI_FORMAT
name|GetTexFormat
parameter_list|(
name|GLenum
name|internalFormat
parameter_list|)
function_decl|;
name|DXGI_FORMAT
name|GetSRVFormat
parameter_list|(
name|GLenum
name|internalFormat
parameter_list|)
function_decl|;
name|DXGI_FORMAT
name|GetRTVFormat
parameter_list|(
name|GLenum
name|internalFormat
parameter_list|)
function_decl|;
name|DXGI_FORMAT
name|GetDSVFormat
parameter_list|(
name|GLenum
name|internalFormat
parameter_list|)
function_decl|;
name|DXGI_FORMAT
name|GetRenderableFormat
parameter_list|(
name|GLenum
name|internalFormat
parameter_list|)
function_decl|;
name|DXGI_FORMAT
name|GetSwizzleTexFormat
parameter_list|(
name|GLint
name|internalFormat
parameter_list|)
function_decl|;
name|DXGI_FORMAT
name|GetSwizzleSRVFormat
parameter_list|(
name|GLint
name|internalFormat
parameter_list|)
function_decl|;
name|DXGI_FORMAT
name|GetSwizzleRTVFormat
parameter_list|(
name|GLint
name|internalFormat
parameter_list|)
function_decl|;
name|bool
name|RequiresTextureDataInitialization
parameter_list|(
name|GLint
name|internalFormat
parameter_list|)
function_decl|;
name|InitializeTextureDataFunction
name|GetTextureDataInitializationFunction
parameter_list|(
name|GLint
name|internalFormat
parameter_list|)
function_decl|;
name|VertexCopyFunction
name|GetVertexCopyFunction
argument_list|(
specifier|const
name|gl
operator|::
name|VertexFormat
operator|&
name|vertexFormat
argument_list|)
decl_stmt|;
name|size_t
name|GetVertexElementSize
argument_list|(
specifier|const
name|gl
operator|::
name|VertexFormat
operator|&
name|vertexFormat
argument_list|)
decl_stmt|;
name|VertexConversionType
name|GetVertexConversionType
argument_list|(
specifier|const
name|gl
operator|::
name|VertexFormat
operator|&
name|vertexFormat
argument_list|)
decl_stmt|;
name|DXGI_FORMAT
name|GetNativeVertexFormat
argument_list|(
specifier|const
name|gl
operator|::
name|VertexFormat
operator|&
name|vertexFormat
argument_list|)
decl_stmt|;
block|}
name|namespace
name|d3d11_gl
block|{
name|GLenum
name|GetInternalFormat
parameter_list|(
name|DXGI_FORMAT
name|format
parameter_list|)
function_decl|;
block|}
block|}
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// LIBGLESV2_RENDERER_FORMATUTILS11_H_
end_comment
end_unit
