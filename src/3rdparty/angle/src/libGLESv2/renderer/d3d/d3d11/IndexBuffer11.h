begin_unit
begin_comment
comment|//
end_comment
begin_comment
comment|// Copyright (c) 2012 The ANGLE Project Authors. All rights reserved.
end_comment
begin_comment
comment|// Use of this source code is governed by a BSD-style license that can be
end_comment
begin_comment
comment|// found in the LICENSE file.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// IndexBuffer11.h: Defines the D3D11 IndexBuffer implementation.
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|LIBGLESV2_RENDERER_INDEXBUFFER11_H_
end_ifndef
begin_define
DECL|macro|LIBGLESV2_RENDERER_INDEXBUFFER11_H_
define|#
directive|define
name|LIBGLESV2_RENDERER_INDEXBUFFER11_H_
end_define
begin_include
include|#
directive|include
file|"libGLESv2/renderer/d3d/IndexBuffer.h"
end_include
begin_decl_stmt
name|namespace
name|rx
block|{
name|class
name|Renderer11
decl_stmt|;
name|class
name|IndexBuffer11
range|:
name|public
name|IndexBuffer
block|{
name|public
operator|:
name|explicit
name|IndexBuffer11
argument_list|(
name|Renderer11
operator|*
specifier|const
name|renderer
argument_list|)
block|;
name|virtual
operator|~
name|IndexBuffer11
argument_list|()
block|;
name|virtual
name|bool
name|initialize
argument_list|(
argument|unsigned int bufferSize
argument_list|,
argument|GLenum indexType
argument_list|,
argument|bool dynamic
argument_list|)
block|;
specifier|static
name|IndexBuffer11
operator|*
name|makeIndexBuffer11
argument_list|(
name|IndexBuffer
operator|*
name|indexBuffer
argument_list|)
block|;
name|virtual
name|bool
name|mapBuffer
argument_list|(
argument|unsigned int offset
argument_list|,
argument|unsigned int size
argument_list|,
argument|void** outMappedMemory
argument_list|)
block|;
name|virtual
name|bool
name|unmapBuffer
argument_list|()
block|;
name|virtual
name|GLenum
name|getIndexType
argument_list|()
specifier|const
block|;
name|virtual
name|unsigned
name|int
name|getBufferSize
argument_list|()
specifier|const
block|;
name|virtual
name|bool
name|setSize
argument_list|(
argument|unsigned int bufferSize
argument_list|,
argument|GLenum indexType
argument_list|)
block|;
name|virtual
name|bool
name|discard
argument_list|()
block|;
name|DXGI_FORMAT
name|getIndexFormat
argument_list|()
specifier|const
block|;
name|ID3D11Buffer
operator|*
name|getBuffer
argument_list|()
specifier|const
block|;
name|private
operator|:
name|DISALLOW_COPY_AND_ASSIGN
argument_list|(
name|IndexBuffer11
argument_list|)
block|;
name|rx
operator|::
name|Renderer11
operator|*
specifier|const
name|mRenderer
block|;
name|ID3D11Buffer
operator|*
name|mBuffer
block|;
name|unsigned
name|int
name|mBufferSize
block|;
name|GLenum
name|mIndexType
block|;
name|bool
name|mDynamicUsage
block|; }
decl_stmt|;
block|}
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// LIBGLESV2_RENDERER_INDEXBUFFER11_H_
end_comment
end_unit
