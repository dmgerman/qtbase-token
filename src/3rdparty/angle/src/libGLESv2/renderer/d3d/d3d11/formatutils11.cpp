begin_unit
begin_include
include|#
directive|include
file|"precompiled.h"
end_include
begin_comment
comment|//
end_comment
begin_comment
comment|// Copyright (c) 2013-2014 The ANGLE Project Authors. All rights reserved.
end_comment
begin_comment
comment|// Use of this source code is governed by a BSD-style license that can be
end_comment
begin_comment
comment|// found in the LICENSE file.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// formatutils11.cpp: Queries for GL image formats and their translations to D3D11
end_comment
begin_comment
comment|// formats.
end_comment
begin_include
include|#
directive|include
file|"libGLESv2/renderer/d3d/d3d11/formatutils11.h"
end_include
begin_include
include|#
directive|include
file|"libGLESv2/renderer/generatemip.h"
end_include
begin_include
include|#
directive|include
file|"libGLESv2/renderer/loadimage.h"
end_include
begin_include
include|#
directive|include
file|"libGLESv2/renderer/copyimage.h"
end_include
begin_include
include|#
directive|include
file|"libGLESv2/renderer/Renderer.h"
end_include
begin_include
include|#
directive|include
file|"libGLESv2/renderer/copyvertex.h"
end_include
begin_namespace
DECL|namespace|rx
namespace|namespace
name|rx
block|{
DECL|struct|D3D11FormatInfo
struct|struct
name|D3D11FormatInfo
block|{
DECL|member|mTexFormat
name|DXGI_FORMAT
name|mTexFormat
decl_stmt|;
DECL|member|mSRVFormat
name|DXGI_FORMAT
name|mSRVFormat
decl_stmt|;
DECL|member|mRTVFormat
name|DXGI_FORMAT
name|mRTVFormat
decl_stmt|;
DECL|member|mDSVFormat
name|DXGI_FORMAT
name|mDSVFormat
decl_stmt|;
DECL|function|D3D11FormatInfo
name|D3D11FormatInfo
parameter_list|()
member_init_list|:
name|mTexFormat
argument_list|(
name|DXGI_FORMAT_UNKNOWN
argument_list|)
member_init_list|,
name|mDSVFormat
argument_list|(
name|DXGI_FORMAT_UNKNOWN
argument_list|)
member_init_list|,
name|mRTVFormat
argument_list|(
name|DXGI_FORMAT_UNKNOWN
argument_list|)
member_init_list|,
name|mSRVFormat
argument_list|(
name|DXGI_FORMAT_UNKNOWN
argument_list|)
block|{ }
DECL|function|D3D11FormatInfo
name|D3D11FormatInfo
parameter_list|(
name|DXGI_FORMAT
name|texFormat
parameter_list|,
name|DXGI_FORMAT
name|srvFormat
parameter_list|,
name|DXGI_FORMAT
name|rtvFormat
parameter_list|,
name|DXGI_FORMAT
name|dsvFormat
parameter_list|)
member_init_list|:
name|mTexFormat
argument_list|(
name|texFormat
argument_list|)
member_init_list|,
name|mDSVFormat
argument_list|(
name|dsvFormat
argument_list|)
member_init_list|,
name|mRTVFormat
argument_list|(
name|rtvFormat
argument_list|)
member_init_list|,
name|mSRVFormat
argument_list|(
name|srvFormat
argument_list|)
block|{ }
block|}
struct|;
comment|// For sized GL internal formats, there is only one corresponding D3D11 format. This map type allows
comment|// querying for the DXGI texture formats to use for textures, SRVs, RTVs and DSVs given a GL internal
comment|// format.
DECL|typedef|D3D11ES3FormatPair
typedef|typedef
name|std
operator|::
name|pair
argument_list|<
name|GLenum
argument_list|,
name|D3D11FormatInfo
argument_list|>
name|D3D11ES3FormatPair
typedef|;
DECL|typedef|D3D11ES3FormatMap
typedef|typedef
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|D3D11FormatInfo
argument_list|>
name|D3D11ES3FormatMap
typedef|;
DECL|function|BuildD3D11FormatMap
specifier|static
name|D3D11ES3FormatMap
name|BuildD3D11FormatMap
parameter_list|()
block|{
name|D3D11ES3FormatMap
name|map
decl_stmt|;
comment|//                           | GL internal format  |               | D3D11 texture format            | D3D11 SRV format               | D3D11 RTV format               | D3D11 DSV format   |
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_NONE
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_R8
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R8_UNORM
argument_list|,
name|DXGI_FORMAT_R8_UNORM
argument_list|,
name|DXGI_FORMAT_R8_UNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_R8_SNORM
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R8_SNORM
argument_list|,
name|DXGI_FORMAT_R8_SNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_RG8
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R8G8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8_UNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_RG8_SNORM
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R8G8_SNORM
argument_list|,
name|DXGI_FORMAT_R8G8_SNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_RGB8
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_RGB8_SNORM
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R8G8B8A8_SNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_SNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_RGB565
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_RGBA4
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_RGB5_A1
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_RGBA8
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_RGBA8_SNORM
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R8G8B8A8_SNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_SNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_RGB10_A2
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R10G10B10A2_UNORM
argument_list|,
name|DXGI_FORMAT_R10G10B10A2_UNORM
argument_list|,
name|DXGI_FORMAT_R10G10B10A2_UNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_RGB10_A2UI
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R10G10B10A2_UINT
argument_list|,
name|DXGI_FORMAT_R10G10B10A2_UINT
argument_list|,
name|DXGI_FORMAT_R10G10B10A2_UINT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_SRGB8
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R8G8B8A8_UNORM_SRGB
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM_SRGB
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_SRGB8_ALPHA8
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R8G8B8A8_UNORM_SRGB
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM_SRGB
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM_SRGB
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_R16F
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R16_FLOAT
argument_list|,
name|DXGI_FORMAT_R16_FLOAT
argument_list|,
name|DXGI_FORMAT_R16_FLOAT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_RG16F
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R16G16_FLOAT
argument_list|,
name|DXGI_FORMAT_R16G16_FLOAT
argument_list|,
name|DXGI_FORMAT_R16G16_FLOAT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_RGB16F
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R16G16B16A16_FLOAT
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_FLOAT
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_FLOAT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_RGBA16F
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R16G16B16A16_FLOAT
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_FLOAT
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_FLOAT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_R32F
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R32_FLOAT
argument_list|,
name|DXGI_FORMAT_R32_FLOAT
argument_list|,
name|DXGI_FORMAT_R32_FLOAT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_RG32F
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R32G32_FLOAT
argument_list|,
name|DXGI_FORMAT_R32G32_FLOAT
argument_list|,
name|DXGI_FORMAT_R32G32_FLOAT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_RGB32F
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_RGBA32F
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_R11F_G11F_B10F
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R11G11B10_FLOAT
argument_list|,
name|DXGI_FORMAT_R11G11B10_FLOAT
argument_list|,
name|DXGI_FORMAT_R11G11B10_FLOAT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_RGB9_E5
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R9G9B9E5_SHAREDEXP
argument_list|,
name|DXGI_FORMAT_R9G9B9E5_SHAREDEXP
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_R8I
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R8_SINT
argument_list|,
name|DXGI_FORMAT_R8_SINT
argument_list|,
name|DXGI_FORMAT_R8_SINT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_R8UI
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R8_UINT
argument_list|,
name|DXGI_FORMAT_R8_UINT
argument_list|,
name|DXGI_FORMAT_R8_UINT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_R16I
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R16_SINT
argument_list|,
name|DXGI_FORMAT_R16_SINT
argument_list|,
name|DXGI_FORMAT_R16_SINT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_R16UI
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R16_UINT
argument_list|,
name|DXGI_FORMAT_R16_UINT
argument_list|,
name|DXGI_FORMAT_R16_UINT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_R32I
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R32_SINT
argument_list|,
name|DXGI_FORMAT_R32_SINT
argument_list|,
name|DXGI_FORMAT_R32_SINT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_R32UI
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R32_UINT
argument_list|,
name|DXGI_FORMAT_R32_UINT
argument_list|,
name|DXGI_FORMAT_R32_UINT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_RG8I
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R8G8_SINT
argument_list|,
name|DXGI_FORMAT_R8G8_SINT
argument_list|,
name|DXGI_FORMAT_R8G8_SINT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_RG8UI
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R8G8_UINT
argument_list|,
name|DXGI_FORMAT_R8G8_UINT
argument_list|,
name|DXGI_FORMAT_R8G8_UINT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_RG16I
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R16G16_SINT
argument_list|,
name|DXGI_FORMAT_R16G16_SINT
argument_list|,
name|DXGI_FORMAT_R16G16_SINT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_RG16UI
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R16G16_UINT
argument_list|,
name|DXGI_FORMAT_R16G16_UINT
argument_list|,
name|DXGI_FORMAT_R16G16_UINT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_RG32I
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R32G32_SINT
argument_list|,
name|DXGI_FORMAT_R32G32_SINT
argument_list|,
name|DXGI_FORMAT_R32G32_SINT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_RG32UI
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R32G32_UINT
argument_list|,
name|DXGI_FORMAT_R32G32_UINT
argument_list|,
name|DXGI_FORMAT_R32G32_UINT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_RGB8I
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R8G8B8A8_SINT
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_SINT
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_SINT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_RGB8UI
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R8G8B8A8_UINT
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UINT
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UINT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_RGB16I
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R16G16B16A16_SINT
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_SINT
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_SINT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_RGB16UI
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R16G16B16A16_UINT
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_UINT
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_UINT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_RGB32I
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R32G32B32A32_SINT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_SINT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_SINT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_RGB32UI
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R32G32B32A32_UINT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_UINT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_UINT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_RGBA8I
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R8G8B8A8_SINT
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_SINT
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_SINT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_RGBA8UI
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R8G8B8A8_UINT
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UINT
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UINT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_RGBA16I
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R16G16B16A16_SINT
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_SINT
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_SINT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_RGBA16UI
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R16G16B16A16_UINT
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_UINT
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_UINT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_RGBA32I
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R32G32B32A32_SINT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_SINT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_SINT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_RGBA32UI
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R32G32B32A32_UINT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_UINT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_UINT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// Unsized formats, TODO: Are types of float and half float allowed for the unsized types? Would it change the DXGI format?
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_ALPHA
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_A8_UNORM
argument_list|,
name|DXGI_FORMAT_A8_UNORM
argument_list|,
name|DXGI_FORMAT_A8_UNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_LUMINANCE
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_LUMINANCE_ALPHA
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_RGB
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_RGBA
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_BGRA_EXT
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_B8G8R8A8_UNORM
argument_list|,
name|DXGI_FORMAT_B8G8R8A8_UNORM
argument_list|,
name|DXGI_FORMAT_B8G8R8A8_UNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// From GL_EXT_texture_storage
comment|//                           | GL internal format       |               | D3D11 texture format          | D3D11 SRV format                    | D3D11 RTV format              | D3D11 DSV format               |
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_ALPHA8_EXT
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_LUMINANCE8_EXT
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_ALPHA32F_EXT
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_LUMINANCE32F_EXT
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_ALPHA16F_EXT
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R16G16B16A16_FLOAT
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_FLOAT
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_FLOAT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_LUMINANCE16F_EXT
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R16G16B16A16_FLOAT
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_FLOAT
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_FLOAT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_LUMINANCE8_ALPHA8_EXT
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_LUMINANCE_ALPHA32F_EXT
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_LUMINANCE_ALPHA16F_EXT
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R16G16B16A16_FLOAT
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_FLOAT
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_FLOAT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_BGRA8_EXT
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_B8G8R8A8_UNORM
argument_list|,
name|DXGI_FORMAT_B8G8R8A8_UNORM
argument_list|,
name|DXGI_FORMAT_B8G8R8A8_UNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_BGRA4_ANGLEX
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_B8G8R8A8_UNORM
argument_list|,
name|DXGI_FORMAT_B8G8R8A8_UNORM
argument_list|,
name|DXGI_FORMAT_B8G8R8A8_UNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_BGR5_A1_ANGLEX
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_B8G8R8A8_UNORM
argument_list|,
name|DXGI_FORMAT_B8G8R8A8_UNORM
argument_list|,
name|DXGI_FORMAT_B8G8R8A8_UNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// Depth stencil formats
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_DEPTH_COMPONENT16
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R16_TYPELESS
argument_list|,
name|DXGI_FORMAT_R16_UNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_D16_UNORM
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_DEPTH_COMPONENT24
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R24G8_TYPELESS
argument_list|,
name|DXGI_FORMAT_R24_UNORM_X8_TYPELESS
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_D24_UNORM_S8_UINT
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_DEPTH_COMPONENT32F
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R32_TYPELESS
argument_list|,
name|DXGI_FORMAT_R32_FLOAT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_D32_FLOAT
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_DEPTH24_STENCIL8
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R24G8_TYPELESS
argument_list|,
name|DXGI_FORMAT_R24_UNORM_X8_TYPELESS
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_D24_UNORM_S8_UINT
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_DEPTH32F_STENCIL8
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R32G8X24_TYPELESS
argument_list|,
name|DXGI_FORMAT_R32_FLOAT_X8X24_TYPELESS
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_D32_FLOAT_S8X24_UINT
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_STENCIL_INDEX8
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R24G8_TYPELESS
argument_list|,
name|DXGI_FORMAT_X24_TYPELESS_G8_UINT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_D24_UNORM_S8_UINT
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// From GL_ANGLE_depth_texture
comment|// Since D3D11 doesn't have a D32_UNORM format, use D24S8 which has comparable precision and matches the ES3 format.
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_DEPTH_COMPONENT32_OES
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_R24G8_TYPELESS
argument_list|,
name|DXGI_FORMAT_R24_UNORM_X8_TYPELESS
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_D24_UNORM_S8_UINT
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// Compressed formats, From ES 3.0.1 spec, table 3.16
comment|//                           | GL internal format                          |               | D3D11 texture format | D3D11 SRV format     | D3D11 RTV format   | D3D11 DSV format  |
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_COMPRESSED_R11_EAC
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_COMPRESSED_SIGNED_R11_EAC
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_COMPRESSED_RG11_EAC
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_COMPRESSED_SIGNED_RG11_EAC
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_COMPRESSED_RGB8_ETC2
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_COMPRESSED_SRGB8_ETC2
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_COMPRESSED_RGBA8_ETC2_EAC
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// From GL_EXT_texture_compression_dxt1
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_COMPRESSED_RGB_S3TC_DXT1_EXT
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_BC1_UNORM
argument_list|,
name|DXGI_FORMAT_BC1_UNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_COMPRESSED_RGBA_S3TC_DXT1_EXT
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_BC1_UNORM
argument_list|,
name|DXGI_FORMAT_BC1_UNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// From GL_ANGLE_texture_compression_dxt3
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_COMPRESSED_RGBA_S3TC_DXT3_ANGLE
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_BC2_UNORM
argument_list|,
name|DXGI_FORMAT_BC2_UNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// From GL_ANGLE_texture_compression_dxt5
name|map
operator|.
name|insert
argument_list|(
name|D3D11ES3FormatPair
argument_list|(
name|GL_COMPRESSED_RGBA_S3TC_DXT5_ANGLE
argument_list|,
name|D3D11FormatInfo
argument_list|(
name|DXGI_FORMAT_BC3_UNORM
argument_list|,
name|DXGI_FORMAT_BC3_UNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|map
return|;
block|}
DECL|function|GetD3D11FormatInfo
specifier|static
name|bool
name|GetD3D11FormatInfo
parameter_list|(
name|GLenum
name|internalFormat
parameter_list|,
name|D3D11FormatInfo
modifier|*
name|outFormatInfo
parameter_list|)
block|{
specifier|static
specifier|const
name|D3D11ES3FormatMap
name|formatMap
init|=
name|BuildD3D11FormatMap
argument_list|()
decl_stmt|;
name|D3D11ES3FormatMap
operator|::
name|const_iterator
name|iter
init|=
name|formatMap
operator|.
name|find
argument_list|(
name|internalFormat
argument_list|)
decl_stmt|;
if|if
condition|(
name|iter
operator|!=
name|formatMap
operator|.
name|end
argument_list|()
condition|)
block|{
if|if
condition|(
name|outFormatInfo
condition|)
block|{
operator|*
name|outFormatInfo
operator|=
name|iter
operator|->
name|second
expr_stmt|;
block|}
return|return
literal|true
return|;
block|}
else|else
block|{
return|return
literal|false
return|;
block|}
block|}
comment|// ES3 image loading functions vary based on the internal format and data type given,
comment|// this map type determines the loading function from the internal format and type supplied
comment|// to glTex*Image*D and the destination DXGI_FORMAT. Source formats and types are taken from
comment|// Tables 3.2 and 3.3 of the ES 3 spec.
DECL|typedef|InternalFormatTypePair
typedef|typedef
name|std
operator|::
name|pair
argument_list|<
name|GLenum
argument_list|,
name|GLenum
argument_list|>
name|InternalFormatTypePair
typedef|;
DECL|typedef|D3D11LoadFunctionPair
typedef|typedef
name|std
operator|::
name|pair
argument_list|<
name|InternalFormatTypePair
argument_list|,
name|LoadImageFunction
argument_list|>
name|D3D11LoadFunctionPair
typedef|;
DECL|typedef|D3D11LoadFunctionMap
typedef|typedef
name|std
operator|::
name|map
argument_list|<
name|InternalFormatTypePair
argument_list|,
name|LoadImageFunction
argument_list|>
name|D3D11LoadFunctionMap
typedef|;
DECL|function|UnimplementedLoadFunction
specifier|static
name|void
name|UnimplementedLoadFunction
parameter_list|(
name|size_t
name|width
parameter_list|,
name|size_t
name|height
parameter_list|,
name|size_t
name|depth
parameter_list|,
specifier|const
name|uint8_t
modifier|*
name|input
parameter_list|,
name|size_t
name|inputRowPitch
parameter_list|,
name|size_t
name|inputDepthPitch
parameter_list|,
name|uint8_t
modifier|*
name|output
parameter_list|,
name|size_t
name|outputRowPitch
parameter_list|,
name|size_t
name|outputDepthPitch
parameter_list|)
block|{
name|UNIMPLEMENTED
argument_list|()
expr_stmt|;
block|}
DECL|function|UnreachableLoadFunction
specifier|static
name|void
name|UnreachableLoadFunction
parameter_list|(
name|size_t
name|width
parameter_list|,
name|size_t
name|height
parameter_list|,
name|size_t
name|depth
parameter_list|,
specifier|const
name|uint8_t
modifier|*
name|input
parameter_list|,
name|size_t
name|inputRowPitch
parameter_list|,
name|size_t
name|inputDepthPitch
parameter_list|,
name|uint8_t
modifier|*
name|output
parameter_list|,
name|size_t
name|outputRowPitch
parameter_list|,
name|size_t
name|outputDepthPitch
parameter_list|)
block|{
name|UNREACHABLE
argument_list|()
expr_stmt|;
block|}
comment|// A helper function to insert data into the D3D11LoadFunctionMap with fewer characters.
DECL|function|insertLoadFunction
specifier|static
specifier|inline
name|void
name|insertLoadFunction
parameter_list|(
name|D3D11LoadFunctionMap
modifier|*
name|map
parameter_list|,
name|GLenum
name|internalFormat
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|LoadImageFunction
name|loadFunc
parameter_list|)
block|{
name|map
operator|->
name|insert
argument_list|(
name|D3D11LoadFunctionPair
argument_list|(
name|InternalFormatTypePair
argument_list|(
name|internalFormat
argument_list|,
name|type
argument_list|)
argument_list|,
name|loadFunc
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|function|buildD3D11LoadFunctionMap
name|D3D11LoadFunctionMap
name|buildD3D11LoadFunctionMap
parameter_list|()
block|{
name|D3D11LoadFunctionMap
name|map
decl_stmt|;
comment|//                      | Internal format      | Type                             | Load function                       |
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGBA8
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|LoadToNative
argument_list|<
name|GLubyte
argument_list|,
literal|4
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB5_A1
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|LoadToNative
argument_list|<
name|GLubyte
argument_list|,
literal|4
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGBA4
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|LoadToNative
argument_list|<
name|GLubyte
argument_list|,
literal|4
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_SRGB8_ALPHA8
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|LoadToNative
argument_list|<
name|GLubyte
argument_list|,
literal|4
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGBA8_SNORM
argument_list|,
name|GL_BYTE
argument_list|,
name|LoadToNative
argument_list|<
name|GLbyte
argument_list|,
literal|4
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGBA4
argument_list|,
name|GL_UNSIGNED_SHORT_4_4_4_4
argument_list|,
name|LoadRGBA4ToRGBA8
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB10_A2
argument_list|,
name|GL_UNSIGNED_INT_2_10_10_10_REV
argument_list|,
name|LoadToNative
argument_list|<
name|GLuint
argument_list|,
literal|1
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB5_A1
argument_list|,
name|GL_UNSIGNED_SHORT_5_5_5_1
argument_list|,
name|LoadRGB5A1ToRGBA8
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB5_A1
argument_list|,
name|GL_UNSIGNED_INT_2_10_10_10_REV
argument_list|,
name|LoadRGB10A2ToRGBA8
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGBA16F
argument_list|,
name|GL_HALF_FLOAT
argument_list|,
name|LoadToNative
argument_list|<
name|GLhalf
argument_list|,
literal|4
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGBA16F
argument_list|,
name|GL_HALF_FLOAT_OES
argument_list|,
name|LoadToNative
argument_list|<
name|GLhalf
argument_list|,
literal|4
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGBA32F
argument_list|,
name|GL_FLOAT
argument_list|,
name|LoadToNative
argument_list|<
name|GLfloat
argument_list|,
literal|4
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGBA16F
argument_list|,
name|GL_FLOAT
argument_list|,
name|Load32FTo16F
argument_list|<
literal|4
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGBA8UI
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|LoadToNative
argument_list|<
name|GLubyte
argument_list|,
literal|4
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGBA8I
argument_list|,
name|GL_BYTE
argument_list|,
name|LoadToNative
argument_list|<
name|GLbyte
argument_list|,
literal|4
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGBA16UI
argument_list|,
name|GL_UNSIGNED_SHORT
argument_list|,
name|LoadToNative
argument_list|<
name|GLushort
argument_list|,
literal|4
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGBA16I
argument_list|,
name|GL_SHORT
argument_list|,
name|LoadToNative
argument_list|<
name|GLshort
argument_list|,
literal|4
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGBA32UI
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|LoadToNative
argument_list|<
name|GLuint
argument_list|,
literal|4
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGBA32I
argument_list|,
name|GL_INT
argument_list|,
name|LoadToNative
argument_list|<
name|GLint
argument_list|,
literal|4
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB10_A2UI
argument_list|,
name|GL_UNSIGNED_INT_2_10_10_10_REV
argument_list|,
name|LoadToNative
argument_list|<
name|GLuint
argument_list|,
literal|1
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB8
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|LoadToNative3To4
argument_list|<
name|GLubyte
argument_list|,
literal|0xFF
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB565
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|LoadToNative3To4
argument_list|<
name|GLubyte
argument_list|,
literal|0xFF
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_SRGB8
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|LoadToNative3To4
argument_list|<
name|GLubyte
argument_list|,
literal|0xFF
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB8_SNORM
argument_list|,
name|GL_BYTE
argument_list|,
name|LoadToNative3To4
argument_list|<
name|GLbyte
argument_list|,
literal|0x7F
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB565
argument_list|,
name|GL_UNSIGNED_SHORT_5_6_5
argument_list|,
name|LoadR5G6B5ToRGBA8
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_R11F_G11F_B10F
argument_list|,
name|GL_UNSIGNED_INT_10F_11F_11F_REV
argument_list|,
name|LoadToNative
argument_list|<
name|GLuint
argument_list|,
literal|1
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB9_E5
argument_list|,
name|GL_UNSIGNED_INT_5_9_9_9_REV
argument_list|,
name|LoadToNative
argument_list|<
name|GLuint
argument_list|,
literal|1
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB16F
argument_list|,
name|GL_HALF_FLOAT
argument_list|,
name|LoadToNative3To4
argument_list|<
name|GLhalf
argument_list|,
name|gl
operator|::
name|Float16One
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB16F
argument_list|,
name|GL_HALF_FLOAT_OES
argument_list|,
name|LoadToNative3To4
argument_list|<
name|GLhalf
argument_list|,
name|gl
operator|::
name|Float16One
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_R11F_G11F_B10F
argument_list|,
name|GL_HALF_FLOAT
argument_list|,
name|LoadRGB16FToRG11B10F
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_R11F_G11F_B10F
argument_list|,
name|GL_HALF_FLOAT_OES
argument_list|,
name|LoadRGB16FToRG11B10F
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB9_E5
argument_list|,
name|GL_HALF_FLOAT
argument_list|,
name|LoadRGB16FToRGB9E5
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB9_E5
argument_list|,
name|GL_HALF_FLOAT_OES
argument_list|,
name|LoadRGB16FToRGB9E5
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB32F
argument_list|,
name|GL_FLOAT
argument_list|,
name|LoadToNative3To4
argument_list|<
name|GLfloat
argument_list|,
name|gl
operator|::
name|Float32One
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB16F
argument_list|,
name|GL_FLOAT
argument_list|,
name|LoadRGB32FToRGBA16F
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_R11F_G11F_B10F
argument_list|,
name|GL_FLOAT
argument_list|,
name|LoadRGB32FToRG11B10F
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB9_E5
argument_list|,
name|GL_FLOAT
argument_list|,
name|LoadRGB32FToRGB9E5
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB8UI
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|LoadToNative3To4
argument_list|<
name|GLubyte
argument_list|,
literal|0x01
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB8I
argument_list|,
name|GL_BYTE
argument_list|,
name|LoadToNative3To4
argument_list|<
name|GLbyte
argument_list|,
literal|0x01
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB16UI
argument_list|,
name|GL_UNSIGNED_SHORT
argument_list|,
name|LoadToNative3To4
argument_list|<
name|GLushort
argument_list|,
literal|0x0001
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB16I
argument_list|,
name|GL_SHORT
argument_list|,
name|LoadToNative3To4
argument_list|<
name|GLshort
argument_list|,
literal|0x0001
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB32UI
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|LoadToNative3To4
argument_list|<
name|GLuint
argument_list|,
literal|0x00000001
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB32I
argument_list|,
name|GL_INT
argument_list|,
name|LoadToNative3To4
argument_list|<
name|GLint
argument_list|,
literal|0x00000001
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RG8
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|LoadToNative
argument_list|<
name|GLubyte
argument_list|,
literal|2
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RG8_SNORM
argument_list|,
name|GL_BYTE
argument_list|,
name|LoadToNative
argument_list|<
name|GLbyte
argument_list|,
literal|2
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RG16F
argument_list|,
name|GL_HALF_FLOAT
argument_list|,
name|LoadToNative
argument_list|<
name|GLhalf
argument_list|,
literal|2
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RG16F
argument_list|,
name|GL_HALF_FLOAT_OES
argument_list|,
name|LoadToNative
argument_list|<
name|GLhalf
argument_list|,
literal|2
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RG32F
argument_list|,
name|GL_FLOAT
argument_list|,
name|LoadToNative
argument_list|<
name|GLfloat
argument_list|,
literal|2
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RG16F
argument_list|,
name|GL_FLOAT
argument_list|,
name|Load32FTo16F
argument_list|<
literal|2
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RG8UI
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|LoadToNative
argument_list|<
name|GLubyte
argument_list|,
literal|2
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RG8I
argument_list|,
name|GL_BYTE
argument_list|,
name|LoadToNative
argument_list|<
name|GLbyte
argument_list|,
literal|2
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RG16UI
argument_list|,
name|GL_UNSIGNED_SHORT
argument_list|,
name|LoadToNative
argument_list|<
name|GLushort
argument_list|,
literal|2
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RG16I
argument_list|,
name|GL_SHORT
argument_list|,
name|LoadToNative
argument_list|<
name|GLshort
argument_list|,
literal|2
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RG32UI
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|LoadToNative
argument_list|<
name|GLuint
argument_list|,
literal|2
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RG32I
argument_list|,
name|GL_INT
argument_list|,
name|LoadToNative
argument_list|<
name|GLint
argument_list|,
literal|2
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_R8
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|LoadToNative
argument_list|<
name|GLubyte
argument_list|,
literal|1
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_R8_SNORM
argument_list|,
name|GL_BYTE
argument_list|,
name|LoadToNative
argument_list|<
name|GLbyte
argument_list|,
literal|1
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_R16F
argument_list|,
name|GL_HALF_FLOAT
argument_list|,
name|LoadToNative
argument_list|<
name|GLhalf
argument_list|,
literal|1
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_R16F
argument_list|,
name|GL_HALF_FLOAT_OES
argument_list|,
name|LoadToNative
argument_list|<
name|GLhalf
argument_list|,
literal|1
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_R32F
argument_list|,
name|GL_FLOAT
argument_list|,
name|LoadToNative
argument_list|<
name|GLfloat
argument_list|,
literal|1
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_R16F
argument_list|,
name|GL_FLOAT
argument_list|,
name|Load32FTo16F
argument_list|<
literal|1
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_R8UI
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|LoadToNative
argument_list|<
name|GLubyte
argument_list|,
literal|1
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_R8I
argument_list|,
name|GL_BYTE
argument_list|,
name|LoadToNative
argument_list|<
name|GLbyte
argument_list|,
literal|1
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_R16UI
argument_list|,
name|GL_UNSIGNED_SHORT
argument_list|,
name|LoadToNative
argument_list|<
name|GLushort
argument_list|,
literal|1
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_R16I
argument_list|,
name|GL_SHORT
argument_list|,
name|LoadToNative
argument_list|<
name|GLshort
argument_list|,
literal|1
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_R32UI
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|LoadToNative
argument_list|<
name|GLuint
argument_list|,
literal|1
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_R32I
argument_list|,
name|GL_INT
argument_list|,
name|LoadToNative
argument_list|<
name|GLint
argument_list|,
literal|1
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_DEPTH_COMPONENT16
argument_list|,
name|GL_UNSIGNED_SHORT
argument_list|,
name|LoadToNative
argument_list|<
name|GLushort
argument_list|,
literal|1
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_DEPTH_COMPONENT24
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|LoadR32ToR24G8
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_DEPTH_COMPONENT16
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|LoadR32ToR16
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_DEPTH_COMPONENT32F
argument_list|,
name|GL_FLOAT
argument_list|,
name|LoadToNative
argument_list|<
name|GLfloat
argument_list|,
literal|1
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_DEPTH24_STENCIL8
argument_list|,
name|GL_UNSIGNED_INT_24_8
argument_list|,
name|LoadR32ToR24G8
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_DEPTH32F_STENCIL8
argument_list|,
name|GL_FLOAT_32_UNSIGNED_INT_24_8_REV
argument_list|,
name|LoadToNative
argument_list|<
name|GLuint
argument_list|,
literal|2
argument_list|>
argument_list|)
expr_stmt|;
comment|// Unsized formats
comment|// Load functions are unreachable because they are converted to sized internal formats based on
comment|// the format and type before loading takes place.
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGBA
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|UnreachableLoadFunction
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGBA
argument_list|,
name|GL_UNSIGNED_SHORT_4_4_4_4
argument_list|,
name|UnreachableLoadFunction
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGBA
argument_list|,
name|GL_UNSIGNED_SHORT_5_5_5_1
argument_list|,
name|UnreachableLoadFunction
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|UnreachableLoadFunction
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB
argument_list|,
name|GL_UNSIGNED_SHORT_5_6_5
argument_list|,
name|UnreachableLoadFunction
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_LUMINANCE_ALPHA
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|UnreachableLoadFunction
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_LUMINANCE
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|UnreachableLoadFunction
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_ALPHA
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|UnreachableLoadFunction
argument_list|)
expr_stmt|;
comment|// From GL_OES_texture_float
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_LUMINANCE_ALPHA
argument_list|,
name|GL_FLOAT
argument_list|,
name|LoadLA32FToRGBA32F
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_LUMINANCE
argument_list|,
name|GL_FLOAT
argument_list|,
name|LoadL32FToRGBA32F
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_ALPHA
argument_list|,
name|GL_FLOAT
argument_list|,
name|LoadA32FToRGBA32F
argument_list|)
expr_stmt|;
comment|// From GL_OES_texture_half_float
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_LUMINANCE_ALPHA
argument_list|,
name|GL_HALF_FLOAT
argument_list|,
name|LoadLA16FToRGBA16F
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_LUMINANCE_ALPHA
argument_list|,
name|GL_HALF_FLOAT_OES
argument_list|,
name|LoadLA16FToRGBA16F
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_LUMINANCE
argument_list|,
name|GL_HALF_FLOAT
argument_list|,
name|LoadL16FToRGBA16F
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_LUMINANCE
argument_list|,
name|GL_HALF_FLOAT_OES
argument_list|,
name|LoadL16FToRGBA16F
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_ALPHA
argument_list|,
name|GL_HALF_FLOAT
argument_list|,
name|LoadA16FToRGBA16F
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_ALPHA
argument_list|,
name|GL_HALF_FLOAT_OES
argument_list|,
name|LoadA16FToRGBA16F
argument_list|)
expr_stmt|;
comment|// From GL_EXT_texture_storage
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_ALPHA8_EXT
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|LoadA8ToBGRA8
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_LUMINANCE8_EXT
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|LoadL8ToRGBA8
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_LUMINANCE8_ALPHA8_EXT
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|LoadLA8ToRGBA8
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_ALPHA32F_EXT
argument_list|,
name|GL_FLOAT
argument_list|,
name|LoadA32FToRGBA32F
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_LUMINANCE32F_EXT
argument_list|,
name|GL_FLOAT
argument_list|,
name|LoadL32FToRGBA32F
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_LUMINANCE_ALPHA32F_EXT
argument_list|,
name|GL_FLOAT
argument_list|,
name|LoadLA32FToRGBA32F
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_ALPHA16F_EXT
argument_list|,
name|GL_HALF_FLOAT
argument_list|,
name|LoadA16FToRGBA16F
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_ALPHA16F_EXT
argument_list|,
name|GL_HALF_FLOAT_OES
argument_list|,
name|LoadA16FToRGBA16F
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_LUMINANCE16F_EXT
argument_list|,
name|GL_HALF_FLOAT
argument_list|,
name|LoadL16FToRGBA16F
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_LUMINANCE16F_EXT
argument_list|,
name|GL_HALF_FLOAT_OES
argument_list|,
name|LoadL16FToRGBA16F
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_LUMINANCE_ALPHA16F_EXT
argument_list|,
name|GL_HALF_FLOAT
argument_list|,
name|LoadLA16FToRGBA16F
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_LUMINANCE_ALPHA16F_EXT
argument_list|,
name|GL_HALF_FLOAT_OES
argument_list|,
name|LoadLA16FToRGBA16F
argument_list|)
expr_stmt|;
comment|// From GL_ANGLE_depth_texture
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_DEPTH_COMPONENT32_OES
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|LoadR32ToR24G8
argument_list|)
expr_stmt|;
comment|// From GL_EXT_texture_format_BGRA8888
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_BGRA8_EXT
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|LoadToNative
argument_list|<
name|GLubyte
argument_list|,
literal|4
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_BGRA4_ANGLEX
argument_list|,
name|GL_UNSIGNED_SHORT_4_4_4_4_REV_EXT
argument_list|,
name|LoadRGBA4ToRGBA8
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_BGRA4_ANGLEX
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|LoadToNative
argument_list|<
name|GLubyte
argument_list|,
literal|4
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_BGR5_A1_ANGLEX
argument_list|,
name|GL_UNSIGNED_SHORT_1_5_5_5_REV_EXT
argument_list|,
name|LoadRGB5A1ToRGBA8
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_BGR5_A1_ANGLEX
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|LoadToNative
argument_list|<
name|GLubyte
argument_list|,
literal|4
argument_list|>
argument_list|)
expr_stmt|;
comment|// Compressed formats
comment|// From ES 3.0.1 spec, table 3.16
comment|//                      | Internal format                             | Type            | Load function                     |
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_COMPRESSED_R11_EAC
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|UnimplementedLoadFunction
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_COMPRESSED_R11_EAC
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|UnimplementedLoadFunction
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_COMPRESSED_SIGNED_R11_EAC
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|UnimplementedLoadFunction
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_COMPRESSED_RG11_EAC
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|UnimplementedLoadFunction
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_COMPRESSED_SIGNED_RG11_EAC
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|UnimplementedLoadFunction
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_COMPRESSED_RGB8_ETC2
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|UnimplementedLoadFunction
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_COMPRESSED_SRGB8_ETC2
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|UnimplementedLoadFunction
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|UnimplementedLoadFunction
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|UnimplementedLoadFunction
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_COMPRESSED_RGBA8_ETC2_EAC
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|UnimplementedLoadFunction
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|UnimplementedLoadFunction
argument_list|)
expr_stmt|;
comment|// From GL_EXT_texture_compression_dxt1
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_COMPRESSED_RGB_S3TC_DXT1_EXT
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|LoadCompressedToNative
argument_list|<
literal|4
argument_list|,
literal|4
argument_list|,
literal|8
argument_list|>
argument_list|)
expr_stmt|;
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_COMPRESSED_RGBA_S3TC_DXT1_EXT
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|LoadCompressedToNative
argument_list|<
literal|4
argument_list|,
literal|4
argument_list|,
literal|8
argument_list|>
argument_list|)
expr_stmt|;
comment|// From GL_ANGLE_texture_compression_dxt3
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_COMPRESSED_RGBA_S3TC_DXT3_ANGLE
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|LoadCompressedToNative
argument_list|<
literal|4
argument_list|,
literal|4
argument_list|,
literal|16
argument_list|>
argument_list|)
expr_stmt|;
comment|// From GL_ANGLE_texture_compression_dxt5
name|insertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_COMPRESSED_RGBA_S3TC_DXT5_ANGLE
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|LoadCompressedToNative
argument_list|<
literal|4
argument_list|,
literal|4
argument_list|,
literal|16
argument_list|>
argument_list|)
expr_stmt|;
return|return
name|map
return|;
block|}
comment|// A map to determine the pixel size and mipmap generation function of a given DXGI format
DECL|struct|DXGIFormatInfo
struct|struct
name|DXGIFormatInfo
block|{
DECL|member|mPixelBits
name|GLuint
name|mPixelBits
decl_stmt|;
DECL|member|mBlockWidth
name|GLuint
name|mBlockWidth
decl_stmt|;
DECL|member|mBlockHeight
name|GLuint
name|mBlockHeight
decl_stmt|;
DECL|member|mComponentType
name|GLenum
name|mComponentType
decl_stmt|;
DECL|member|mMipGenerationFunction
name|MipGenerationFunction
name|mMipGenerationFunction
decl_stmt|;
DECL|member|mColorReadFunction
name|ColorReadFunction
name|mColorReadFunction
decl_stmt|;
DECL|function|DXGIFormatInfo
name|DXGIFormatInfo
parameter_list|()
member_init_list|:
name|mPixelBits
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|mBlockWidth
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|mBlockHeight
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|mComponentType
argument_list|(
name|GL_NONE
argument_list|)
member_init_list|,
name|mMipGenerationFunction
argument_list|(
name|NULL
argument_list|)
member_init_list|,
name|mColorReadFunction
argument_list|(
name|NULL
argument_list|)
block|{ }
DECL|function|DXGIFormatInfo
name|DXGIFormatInfo
parameter_list|(
name|GLuint
name|pixelBits
parameter_list|,
name|GLuint
name|blockWidth
parameter_list|,
name|GLuint
name|blockHeight
parameter_list|,
name|GLenum
name|componentType
parameter_list|,
name|MipGenerationFunction
name|mipFunc
parameter_list|,
name|ColorReadFunction
name|readFunc
parameter_list|)
member_init_list|:
name|mPixelBits
argument_list|(
name|pixelBits
argument_list|)
member_init_list|,
name|mBlockWidth
argument_list|(
name|blockWidth
argument_list|)
member_init_list|,
name|mBlockHeight
argument_list|(
name|blockHeight
argument_list|)
member_init_list|,
name|mComponentType
argument_list|(
name|componentType
argument_list|)
member_init_list|,
name|mMipGenerationFunction
argument_list|(
name|mipFunc
argument_list|)
member_init_list|,
name|mColorReadFunction
argument_list|(
name|readFunc
argument_list|)
block|{ }
block|}
struct|;
DECL|typedef|DXGIFormatInfoMap
typedef|typedef
name|std
operator|::
name|map
argument_list|<
name|DXGI_FORMAT
argument_list|,
name|DXGIFormatInfo
argument_list|>
name|DXGIFormatInfoMap
typedef|;
DECL|function|AddDXGIFormat
name|void
name|AddDXGIFormat
parameter_list|(
name|DXGIFormatInfoMap
modifier|*
name|map
parameter_list|,
name|DXGI_FORMAT
name|dxgiFormat
parameter_list|,
name|GLuint
name|pixelBits
parameter_list|,
name|GLuint
name|blockWidth
parameter_list|,
name|GLuint
name|blockHeight
parameter_list|,
name|GLenum
name|componentType
parameter_list|,
name|MipGenerationFunction
name|mipFunc
parameter_list|,
name|ColorReadFunction
name|readFunc
parameter_list|)
block|{
name|map
operator|->
name|insert
argument_list|(
name|std
operator|::
name|make_pair
argument_list|(
name|dxgiFormat
argument_list|,
name|DXGIFormatInfo
argument_list|(
name|pixelBits
argument_list|,
name|blockWidth
argument_list|,
name|blockHeight
argument_list|,
name|componentType
argument_list|,
name|mipFunc
argument_list|,
name|readFunc
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|function|BuildDXGIFormatInfoMap
specifier|static
name|DXGIFormatInfoMap
name|BuildDXGIFormatInfoMap
parameter_list|()
block|{
name|DXGIFormatInfoMap
name|map
decl_stmt|;
comment|//                | DXGI format                          |S   |W |H |Component Type        | Mip generation function   | Color read function
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|GL_NONE
argument_list|,
name|NULL
argument_list|,
name|NULL
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_A8_UNORM
argument_list|,
literal|8
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_UNSIGNED_NORMALIZED
argument_list|,
name|GenerateMip
argument_list|<
name|A8
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|A8
argument_list|,
name|GLfloat
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R8_UNORM
argument_list|,
literal|8
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_UNSIGNED_NORMALIZED
argument_list|,
name|GenerateMip
argument_list|<
name|R8
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R8
argument_list|,
name|GLfloat
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R8G8_UNORM
argument_list|,
literal|16
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_UNSIGNED_NORMALIZED
argument_list|,
name|GenerateMip
argument_list|<
name|R8G8
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R8G8
argument_list|,
name|GLfloat
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
literal|32
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_UNSIGNED_NORMALIZED
argument_list|,
name|GenerateMip
argument_list|<
name|R8G8B8A8
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R8G8B8A8
argument_list|,
name|GLfloat
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM_SRGB
argument_list|,
literal|32
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_UNSIGNED_NORMALIZED
argument_list|,
name|GenerateMip
argument_list|<
name|R8G8B8A8
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R8G8B8A8
argument_list|,
name|GLfloat
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_B8G8R8A8_UNORM
argument_list|,
literal|32
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_UNSIGNED_NORMALIZED
argument_list|,
name|GenerateMip
argument_list|<
name|B8G8R8A8
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|B8G8R8A8
argument_list|,
name|GLfloat
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R8_SNORM
argument_list|,
literal|8
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_SIGNED_NORMALIZED
argument_list|,
name|GenerateMip
argument_list|<
name|R8S
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R8S
argument_list|,
name|GLfloat
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R8G8_SNORM
argument_list|,
literal|16
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_SIGNED_NORMALIZED
argument_list|,
name|GenerateMip
argument_list|<
name|R8G8S
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R8G8S
argument_list|,
name|GLfloat
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_SNORM
argument_list|,
literal|32
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_SIGNED_NORMALIZED
argument_list|,
name|GenerateMip
argument_list|<
name|R8G8B8A8S
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R8G8B8A8S
argument_list|,
name|GLfloat
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R8_UINT
argument_list|,
literal|8
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|GenerateMip
argument_list|<
name|R8
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R8
argument_list|,
name|GLuint
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16_UINT
argument_list|,
literal|16
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|GenerateMip
argument_list|<
name|R16
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R16
argument_list|,
name|GLuint
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32_UINT
argument_list|,
literal|32
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|GenerateMip
argument_list|<
name|R32
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R32
argument_list|,
name|GLuint
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R8G8_UINT
argument_list|,
literal|16
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|GenerateMip
argument_list|<
name|R8G8
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R8G8
argument_list|,
name|GLuint
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16G16_UINT
argument_list|,
literal|32
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|GenerateMip
argument_list|<
name|R16G16
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R16G16
argument_list|,
name|GLuint
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32G32_UINT
argument_list|,
literal|64
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|GenerateMip
argument_list|<
name|R32G32
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R32G32
argument_list|,
name|GLuint
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32G32B32_UINT
argument_list|,
literal|96
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|GenerateMip
argument_list|<
name|R32G32B32
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R32G32B32
argument_list|,
name|GLuint
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UINT
argument_list|,
literal|32
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|GenerateMip
argument_list|<
name|R8G8B8A8
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R8G8B8A8
argument_list|,
name|GLuint
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_UINT
argument_list|,
literal|64
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|GenerateMip
argument_list|<
name|R16G16B16A16
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R16G16B16A16
argument_list|,
name|GLuint
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_UINT
argument_list|,
literal|128
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|GenerateMip
argument_list|<
name|R32G32B32A32
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R32G32B32A32
argument_list|,
name|GLuint
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R8_SINT
argument_list|,
literal|8
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_INT
argument_list|,
name|GenerateMip
argument_list|<
name|R8S
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R8S
argument_list|,
name|GLint
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16_SINT
argument_list|,
literal|16
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_INT
argument_list|,
name|GenerateMip
argument_list|<
name|R16S
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R16S
argument_list|,
name|GLint
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32_SINT
argument_list|,
literal|32
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_INT
argument_list|,
name|GenerateMip
argument_list|<
name|R32S
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R32S
argument_list|,
name|GLint
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R8G8_SINT
argument_list|,
literal|16
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_INT
argument_list|,
name|GenerateMip
argument_list|<
name|R8G8S
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R8G8S
argument_list|,
name|GLint
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16G16_SINT
argument_list|,
literal|32
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_INT
argument_list|,
name|GenerateMip
argument_list|<
name|R16G16S
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R16G16S
argument_list|,
name|GLint
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32G32_SINT
argument_list|,
literal|64
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_INT
argument_list|,
name|GenerateMip
argument_list|<
name|R32G32S
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R32G32S
argument_list|,
name|GLint
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32G32B32_SINT
argument_list|,
literal|96
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_INT
argument_list|,
name|GenerateMip
argument_list|<
name|R32G32B32S
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R32G32B32S
argument_list|,
name|GLint
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_SINT
argument_list|,
literal|32
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_INT
argument_list|,
name|GenerateMip
argument_list|<
name|R8G8B8A8S
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R8G8B8A8S
argument_list|,
name|GLint
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_SINT
argument_list|,
literal|64
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_INT
argument_list|,
name|GenerateMip
argument_list|<
name|R16G16B16A16S
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R16G16B16A16S
argument_list|,
name|GLint
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_SINT
argument_list|,
literal|128
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_INT
argument_list|,
name|GenerateMip
argument_list|<
name|R32G32B32A32S
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R32G32B32A32S
argument_list|,
name|GLint
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R10G10B10A2_UNORM
argument_list|,
literal|32
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_UNSIGNED_NORMALIZED
argument_list|,
name|GenerateMip
argument_list|<
name|R10G10B10A2
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R10G10B10A2
argument_list|,
name|GLfloat
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R10G10B10A2_UINT
argument_list|,
literal|32
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|GenerateMip
argument_list|<
name|R10G10B10A2
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R10G10B10A2
argument_list|,
name|GLuint
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16_FLOAT
argument_list|,
literal|16
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_FLOAT
argument_list|,
name|GenerateMip
argument_list|<
name|R16F
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R16F
argument_list|,
name|GLfloat
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16G16_FLOAT
argument_list|,
literal|32
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_FLOAT
argument_list|,
name|GenerateMip
argument_list|<
name|R16G16F
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R16G16F
argument_list|,
name|GLfloat
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_FLOAT
argument_list|,
literal|64
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_FLOAT
argument_list|,
name|GenerateMip
argument_list|<
name|R16G16B16A16F
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R16G16B16A16F
argument_list|,
name|GLfloat
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32_FLOAT
argument_list|,
literal|32
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_FLOAT
argument_list|,
name|GenerateMip
argument_list|<
name|R32F
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R32F
argument_list|,
name|GLfloat
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32G32_FLOAT
argument_list|,
literal|64
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_FLOAT
argument_list|,
name|GenerateMip
argument_list|<
name|R32G32F
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R32G32F
argument_list|,
name|GLfloat
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32G32B32_FLOAT
argument_list|,
literal|96
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_FLOAT
argument_list|,
name|NULL
argument_list|,
name|NULL
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
literal|128
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_FLOAT
argument_list|,
name|GenerateMip
argument_list|<
name|R32G32B32A32F
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R32G32B32A32F
argument_list|,
name|GLfloat
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R9G9B9E5_SHAREDEXP
argument_list|,
literal|32
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_FLOAT
argument_list|,
name|GenerateMip
argument_list|<
name|R9G9B9E5
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R9G9B9E5
argument_list|,
name|GLfloat
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R11G11B10_FLOAT
argument_list|,
literal|32
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_FLOAT
argument_list|,
name|GenerateMip
argument_list|<
name|R11G11B10F
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R11G11B10F
argument_list|,
name|GLfloat
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16_TYPELESS
argument_list|,
literal|16
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_NONE
argument_list|,
name|NULL
argument_list|,
name|NULL
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16_UNORM
argument_list|,
literal|16
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_UNSIGNED_NORMALIZED
argument_list|,
name|NULL
argument_list|,
name|NULL
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_D16_UNORM
argument_list|,
literal|16
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_UNSIGNED_NORMALIZED
argument_list|,
name|NULL
argument_list|,
name|NULL
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R24G8_TYPELESS
argument_list|,
literal|32
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_NONE
argument_list|,
name|NULL
argument_list|,
name|NULL
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R24_UNORM_X8_TYPELESS
argument_list|,
literal|32
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_NONE
argument_list|,
name|NULL
argument_list|,
name|NULL
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_D24_UNORM_S8_UINT
argument_list|,
literal|32
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|NULL
argument_list|,
name|NULL
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32G8X24_TYPELESS
argument_list|,
literal|64
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_NONE
argument_list|,
name|NULL
argument_list|,
name|NULL
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32_FLOAT_X8X24_TYPELESS
argument_list|,
literal|64
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_NONE
argument_list|,
name|NULL
argument_list|,
name|NULL
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_D32_FLOAT_S8X24_UINT
argument_list|,
literal|64
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|NULL
argument_list|,
name|NULL
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32_TYPELESS
argument_list|,
literal|32
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_NONE
argument_list|,
name|NULL
argument_list|,
name|NULL
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_D32_FLOAT
argument_list|,
literal|32
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_FLOAT
argument_list|,
name|NULL
argument_list|,
name|NULL
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_BC1_UNORM
argument_list|,
literal|64
argument_list|,
literal|4
argument_list|,
literal|4
argument_list|,
name|GL_UNSIGNED_NORMALIZED
argument_list|,
name|NULL
argument_list|,
name|NULL
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_BC2_UNORM
argument_list|,
literal|128
argument_list|,
literal|4
argument_list|,
literal|4
argument_list|,
name|GL_UNSIGNED_NORMALIZED
argument_list|,
name|NULL
argument_list|,
name|NULL
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_BC3_UNORM
argument_list|,
literal|128
argument_list|,
literal|4
argument_list|,
literal|4
argument_list|,
name|GL_UNSIGNED_NORMALIZED
argument_list|,
name|NULL
argument_list|,
name|NULL
argument_list|)
expr_stmt|;
comment|// Useful formats for vertex buffers
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16_UNORM
argument_list|,
literal|16
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_UNSIGNED_NORMALIZED
argument_list|,
name|NULL
argument_list|,
name|NULL
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16_SNORM
argument_list|,
literal|16
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_SIGNED_NORMALIZED
argument_list|,
name|NULL
argument_list|,
name|NULL
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16G16_UNORM
argument_list|,
literal|32
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_UNSIGNED_NORMALIZED
argument_list|,
name|NULL
argument_list|,
name|NULL
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16G16_SNORM
argument_list|,
literal|32
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_SIGNED_NORMALIZED
argument_list|,
name|NULL
argument_list|,
name|NULL
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_UNORM
argument_list|,
literal|64
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_UNSIGNED_NORMALIZED
argument_list|,
name|NULL
argument_list|,
name|NULL
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_SNORM
argument_list|,
literal|64
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_SIGNED_NORMALIZED
argument_list|,
name|NULL
argument_list|,
name|NULL
argument_list|)
expr_stmt|;
return|return
name|map
return|;
block|}
DECL|typedef|DXGIToESFormatMap
typedef|typedef
name|std
operator|::
name|map
argument_list|<
name|DXGI_FORMAT
argument_list|,
name|GLenum
argument_list|>
name|DXGIToESFormatMap
typedef|;
DECL|function|AddDXGIToESEntry
specifier|inline
name|void
name|AddDXGIToESEntry
parameter_list|(
name|DXGIToESFormatMap
modifier|*
name|map
parameter_list|,
name|DXGI_FORMAT
name|key
parameter_list|,
name|GLenum
name|value
parameter_list|)
block|{
name|map
operator|->
name|insert
argument_list|(
name|std
operator|::
name|make_pair
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|function|BuildDXGIToESFormatMap
specifier|static
name|DXGIToESFormatMap
name|BuildDXGIToESFormatMap
parameter_list|()
block|{
name|DXGIToESFormatMap
name|map
decl_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|GL_NONE
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_A8_UNORM
argument_list|,
name|GL_ALPHA8_EXT
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R8_UNORM
argument_list|,
name|GL_R8
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R8G8_UNORM
argument_list|,
name|GL_RG8
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|GL_RGBA8
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM_SRGB
argument_list|,
name|GL_SRGB8_ALPHA8
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_B8G8R8A8_UNORM
argument_list|,
name|GL_BGRA8_EXT
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R8_SNORM
argument_list|,
name|GL_R8_SNORM
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R8G8_SNORM
argument_list|,
name|GL_RG8_SNORM
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_SNORM
argument_list|,
name|GL_RGBA8_SNORM
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R8_UINT
argument_list|,
name|GL_R8UI
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16_UINT
argument_list|,
name|GL_R16UI
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32_UINT
argument_list|,
name|GL_R32UI
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R8G8_UINT
argument_list|,
name|GL_RG8UI
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16G16_UINT
argument_list|,
name|GL_RG16UI
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32G32_UINT
argument_list|,
name|GL_RG32UI
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32G32B32_UINT
argument_list|,
name|GL_RGB32UI
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UINT
argument_list|,
name|GL_RGBA8UI
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_UINT
argument_list|,
name|GL_RGBA16UI
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_UINT
argument_list|,
name|GL_RGBA32UI
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R8_SINT
argument_list|,
name|GL_R8I
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16_SINT
argument_list|,
name|GL_R16I
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32_SINT
argument_list|,
name|GL_R32I
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R8G8_SINT
argument_list|,
name|GL_RG8I
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16G16_SINT
argument_list|,
name|GL_RG16I
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32G32_SINT
argument_list|,
name|GL_RG32I
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32G32B32_SINT
argument_list|,
name|GL_RGB32I
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_SINT
argument_list|,
name|GL_RGBA8I
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_SINT
argument_list|,
name|GL_RGBA16I
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_SINT
argument_list|,
name|GL_RGBA32I
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R10G10B10A2_UNORM
argument_list|,
name|GL_RGB10_A2
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R10G10B10A2_UINT
argument_list|,
name|GL_RGB10_A2UI
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16_FLOAT
argument_list|,
name|GL_R16F
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16G16_FLOAT
argument_list|,
name|GL_RG16F
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_FLOAT
argument_list|,
name|GL_RGBA16F
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32_FLOAT
argument_list|,
name|GL_R32F
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32G32_FLOAT
argument_list|,
name|GL_RG32F
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32G32B32_FLOAT
argument_list|,
name|GL_RGB32F
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
name|GL_RGBA32F
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R9G9B9E5_SHAREDEXP
argument_list|,
name|GL_RGB9_E5
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R11G11B10_FLOAT
argument_list|,
name|GL_R11F_G11F_B10F
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16_TYPELESS
argument_list|,
name|GL_DEPTH_COMPONENT16
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16_UNORM
argument_list|,
name|GL_DEPTH_COMPONENT16
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_D16_UNORM
argument_list|,
name|GL_DEPTH_COMPONENT16
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R24G8_TYPELESS
argument_list|,
name|GL_DEPTH24_STENCIL8_OES
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R24_UNORM_X8_TYPELESS
argument_list|,
name|GL_DEPTH24_STENCIL8_OES
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_D24_UNORM_S8_UINT
argument_list|,
name|GL_DEPTH24_STENCIL8_OES
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32G8X24_TYPELESS
argument_list|,
name|GL_DEPTH32F_STENCIL8
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32_FLOAT_X8X24_TYPELESS
argument_list|,
name|GL_DEPTH32F_STENCIL8
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_D32_FLOAT_S8X24_UINT
argument_list|,
name|GL_DEPTH32F_STENCIL8
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32_TYPELESS
argument_list|,
name|GL_DEPTH_COMPONENT32F
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_D32_FLOAT
argument_list|,
name|GL_DEPTH_COMPONENT32F
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_BC1_UNORM
argument_list|,
name|GL_COMPRESSED_RGBA_S3TC_DXT1_EXT
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_BC2_UNORM
argument_list|,
name|GL_COMPRESSED_RGBA_S3TC_DXT3_ANGLE
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_BC3_UNORM
argument_list|,
name|GL_COMPRESSED_RGBA_S3TC_DXT5_ANGLE
argument_list|)
expr_stmt|;
return|return
name|map
return|;
block|}
DECL|function|GetDXGIToESFormatMap
specifier|static
specifier|const
name|DXGIToESFormatMap
modifier|&
name|GetDXGIToESFormatMap
parameter_list|()
block|{
specifier|static
specifier|const
name|DXGIToESFormatMap
name|map
init|=
name|BuildDXGIToESFormatMap
argument_list|()
decl_stmt|;
return|return
name|map
return|;
block|}
DECL|function|GetDXGIFormatInfoMap
specifier|static
specifier|const
name|DXGIFormatInfoMap
modifier|&
name|GetDXGIFormatInfoMap
parameter_list|()
block|{
specifier|static
specifier|const
name|DXGIFormatInfoMap
name|infoMap
init|=
name|BuildDXGIFormatInfoMap
argument_list|()
decl_stmt|;
return|return
name|infoMap
return|;
block|}
DECL|function|GetDXGIFormatInfo
specifier|static
name|bool
name|GetDXGIFormatInfo
parameter_list|(
name|DXGI_FORMAT
name|format
parameter_list|,
name|DXGIFormatInfo
modifier|*
name|outFormatInfo
parameter_list|)
block|{
specifier|const
name|DXGIFormatInfoMap
modifier|&
name|infoMap
init|=
name|GetDXGIFormatInfoMap
argument_list|()
decl_stmt|;
name|DXGIFormatInfoMap
operator|::
name|const_iterator
name|iter
init|=
name|infoMap
operator|.
name|find
argument_list|(
name|format
argument_list|)
decl_stmt|;
if|if
condition|(
name|iter
operator|!=
name|infoMap
operator|.
name|end
argument_list|()
condition|)
block|{
if|if
condition|(
name|outFormatInfo
condition|)
block|{
operator|*
name|outFormatInfo
operator|=
name|iter
operator|->
name|second
expr_stmt|;
block|}
return|return
literal|true
return|;
block|}
else|else
block|{
return|return
literal|false
return|;
block|}
block|}
DECL|function|BuildAllDXGIFormatSet
specifier|static
name|d3d11
operator|::
name|DXGIFormatSet
name|BuildAllDXGIFormatSet
parameter_list|()
block|{
name|d3d11
operator|::
name|DXGIFormatSet
name|set
decl_stmt|;
specifier|const
name|DXGIFormatInfoMap
modifier|&
name|infoMap
init|=
name|GetDXGIFormatInfoMap
argument_list|()
decl_stmt|;
for|for
control|(
name|DXGIFormatInfoMap
operator|::
name|const_iterator
name|i
init|=
name|infoMap
operator|.
name|begin
argument_list|()
init|;
name|i
operator|!=
name|infoMap
operator|.
name|end
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|set
operator|.
name|insert
argument_list|(
name|i
operator|->
name|first
argument_list|)
expr_stmt|;
block|}
return|return
name|set
return|;
block|}
DECL|struct|D3D11FastCopyFormat
struct|struct
name|D3D11FastCopyFormat
block|{
DECL|member|mSourceFormat
name|DXGI_FORMAT
name|mSourceFormat
decl_stmt|;
DECL|member|mDestFormat
name|GLenum
name|mDestFormat
decl_stmt|;
DECL|member|mDestType
name|GLenum
name|mDestType
decl_stmt|;
DECL|function|D3D11FastCopyFormat
name|D3D11FastCopyFormat
parameter_list|(
name|DXGI_FORMAT
name|sourceFormat
parameter_list|,
name|GLenum
name|destFormat
parameter_list|,
name|GLenum
name|destType
parameter_list|)
member_init_list|:
name|mSourceFormat
argument_list|(
name|sourceFormat
argument_list|)
member_init_list|,
name|mDestFormat
argument_list|(
name|destFormat
argument_list|)
member_init_list|,
name|mDestType
argument_list|(
name|destType
argument_list|)
block|{ }
DECL|function|operator <
name|bool
name|operator
name|<
parameter_list|(
specifier|const
name|D3D11FastCopyFormat
modifier|&
name|other
parameter_list|)
specifier|const
block|{
return|return
name|memcmp
argument_list|(
name|this
argument_list|,
operator|&
name|other
argument_list|,
sizeof|sizeof
argument_list|(
name|D3D11FastCopyFormat
argument_list|)
argument_list|)
operator|<
literal|0
return|;
block|}
block|}
struct|;
DECL|typedef|D3D11FastCopyMap
typedef|typedef
name|std
operator|::
name|map
argument_list|<
name|D3D11FastCopyFormat
argument_list|,
name|ColorCopyFunction
argument_list|>
name|D3D11FastCopyMap
typedef|;
DECL|typedef|D3D11FastCopyPair
typedef|typedef
name|std
operator|::
name|pair
argument_list|<
name|D3D11FastCopyFormat
argument_list|,
name|ColorCopyFunction
argument_list|>
name|D3D11FastCopyPair
typedef|;
DECL|function|BuildFastCopyMap
specifier|static
name|D3D11FastCopyMap
name|BuildFastCopyMap
parameter_list|()
block|{
name|D3D11FastCopyMap
name|map
decl_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|D3D11FastCopyPair
argument_list|(
name|D3D11FastCopyFormat
argument_list|(
name|DXGI_FORMAT_B8G8R8A8_UNORM
argument_list|,
name|GL_RGBA
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|)
argument_list|,
name|CopyBGRAUByteToRGBAUByte
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|map
return|;
block|}
DECL|struct|DXGIDepthStencilInfo
struct|struct
name|DXGIDepthStencilInfo
block|{
DECL|member|mDepthBits
name|unsigned
name|int
name|mDepthBits
decl_stmt|;
DECL|member|mDepthOffset
name|unsigned
name|int
name|mDepthOffset
decl_stmt|;
DECL|member|mStencilBits
name|unsigned
name|int
name|mStencilBits
decl_stmt|;
DECL|member|mStencilOffset
name|unsigned
name|int
name|mStencilOffset
decl_stmt|;
DECL|function|DXGIDepthStencilInfo
name|DXGIDepthStencilInfo
parameter_list|()
member_init_list|:
name|mDepthBits
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|mDepthOffset
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|mStencilBits
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|mStencilOffset
argument_list|(
literal|0
argument_list|)
block|{ }
DECL|function|DXGIDepthStencilInfo
name|DXGIDepthStencilInfo
parameter_list|(
name|unsigned
name|int
name|depthBits
parameter_list|,
name|unsigned
name|int
name|depthOffset
parameter_list|,
name|unsigned
name|int
name|stencilBits
parameter_list|,
name|unsigned
name|int
name|stencilOffset
parameter_list|)
member_init_list|:
name|mDepthBits
argument_list|(
name|depthBits
argument_list|)
member_init_list|,
name|mDepthOffset
argument_list|(
name|depthOffset
argument_list|)
member_init_list|,
name|mStencilBits
argument_list|(
name|stencilBits
argument_list|)
member_init_list|,
name|mStencilOffset
argument_list|(
name|stencilOffset
argument_list|)
block|{ }
block|}
struct|;
DECL|typedef|DepthStencilInfoMap
typedef|typedef
name|std
operator|::
name|map
argument_list|<
name|DXGI_FORMAT
argument_list|,
name|DXGIDepthStencilInfo
argument_list|>
name|DepthStencilInfoMap
typedef|;
DECL|typedef|DepthStencilInfoPair
typedef|typedef
name|std
operator|::
name|pair
argument_list|<
name|DXGI_FORMAT
argument_list|,
name|DXGIDepthStencilInfo
argument_list|>
name|DepthStencilInfoPair
typedef|;
DECL|function|BuildDepthStencilInfoMap
specifier|static
name|DepthStencilInfoMap
name|BuildDepthStencilInfoMap
parameter_list|()
block|{
name|DepthStencilInfoMap
name|map
decl_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|DepthStencilInfoPair
argument_list|(
name|DXGI_FORMAT_R16_TYPELESS
argument_list|,
name|DXGIDepthStencilInfo
argument_list|(
literal|16
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|DepthStencilInfoPair
argument_list|(
name|DXGI_FORMAT_R16_UNORM
argument_list|,
name|DXGIDepthStencilInfo
argument_list|(
literal|16
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|DepthStencilInfoPair
argument_list|(
name|DXGI_FORMAT_D16_UNORM
argument_list|,
name|DXGIDepthStencilInfo
argument_list|(
literal|16
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|DepthStencilInfoPair
argument_list|(
name|DXGI_FORMAT_R24G8_TYPELESS
argument_list|,
name|DXGIDepthStencilInfo
argument_list|(
literal|24
argument_list|,
literal|0
argument_list|,
literal|8
argument_list|,
literal|24
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|DepthStencilInfoPair
argument_list|(
name|DXGI_FORMAT_R24_UNORM_X8_TYPELESS
argument_list|,
name|DXGIDepthStencilInfo
argument_list|(
literal|24
argument_list|,
literal|0
argument_list|,
literal|8
argument_list|,
literal|24
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|DepthStencilInfoPair
argument_list|(
name|DXGI_FORMAT_D24_UNORM_S8_UINT
argument_list|,
name|DXGIDepthStencilInfo
argument_list|(
literal|24
argument_list|,
literal|0
argument_list|,
literal|8
argument_list|,
literal|24
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|DepthStencilInfoPair
argument_list|(
name|DXGI_FORMAT_R32_TYPELESS
argument_list|,
name|DXGIDepthStencilInfo
argument_list|(
literal|32
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|DepthStencilInfoPair
argument_list|(
name|DXGI_FORMAT_R32_FLOAT
argument_list|,
name|DXGIDepthStencilInfo
argument_list|(
literal|32
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|DepthStencilInfoPair
argument_list|(
name|DXGI_FORMAT_D32_FLOAT
argument_list|,
name|DXGIDepthStencilInfo
argument_list|(
literal|32
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|DepthStencilInfoPair
argument_list|(
name|DXGI_FORMAT_R32G8X24_TYPELESS
argument_list|,
name|DXGIDepthStencilInfo
argument_list|(
literal|32
argument_list|,
literal|0
argument_list|,
literal|8
argument_list|,
literal|32
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|DepthStencilInfoPair
argument_list|(
name|DXGI_FORMAT_R32_FLOAT_X8X24_TYPELESS
argument_list|,
name|DXGIDepthStencilInfo
argument_list|(
literal|32
argument_list|,
literal|0
argument_list|,
literal|8
argument_list|,
literal|32
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|DepthStencilInfoPair
argument_list|(
name|DXGI_FORMAT_D32_FLOAT_S8X24_UINT
argument_list|,
name|DXGIDepthStencilInfo
argument_list|(
literal|32
argument_list|,
literal|0
argument_list|,
literal|8
argument_list|,
literal|32
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|map
return|;
block|}
DECL|function|GetDepthStencilInfoMap
specifier|static
specifier|const
name|DepthStencilInfoMap
modifier|&
name|GetDepthStencilInfoMap
parameter_list|()
block|{
specifier|static
specifier|const
name|DepthStencilInfoMap
name|infoMap
init|=
name|BuildDepthStencilInfoMap
argument_list|()
decl_stmt|;
return|return
name|infoMap
return|;
block|}
DECL|function|GetDepthStencilInfo
name|bool
name|GetDepthStencilInfo
parameter_list|(
name|DXGI_FORMAT
name|format
parameter_list|,
name|DXGIDepthStencilInfo
modifier|*
name|outDepthStencilInfo
parameter_list|)
block|{
specifier|const
name|DepthStencilInfoMap
modifier|&
name|infoMap
init|=
name|GetDepthStencilInfoMap
argument_list|()
decl_stmt|;
name|DepthStencilInfoMap
operator|::
name|const_iterator
name|iter
init|=
name|infoMap
operator|.
name|find
argument_list|(
name|format
argument_list|)
decl_stmt|;
if|if
condition|(
name|iter
operator|!=
name|infoMap
operator|.
name|end
argument_list|()
condition|)
block|{
if|if
condition|(
name|outDepthStencilInfo
condition|)
block|{
operator|*
name|outDepthStencilInfo
operator|=
name|iter
operator|->
name|second
expr_stmt|;
block|}
return|return
literal|true
return|;
block|}
else|else
block|{
return|return
literal|false
return|;
block|}
block|}
DECL|struct|SwizzleSizeType
struct|struct
name|SwizzleSizeType
block|{
DECL|member|mMaxComponentSize
name|unsigned
name|int
name|mMaxComponentSize
decl_stmt|;
DECL|member|mComponentType
name|GLenum
name|mComponentType
decl_stmt|;
DECL|function|SwizzleSizeType
name|SwizzleSizeType
parameter_list|()
member_init_list|:
name|mMaxComponentSize
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|mComponentType
argument_list|(
name|GL_NONE
argument_list|)
block|{ }
DECL|function|SwizzleSizeType
name|SwizzleSizeType
parameter_list|(
name|unsigned
name|int
name|maxComponentSize
parameter_list|,
name|GLenum
name|componentType
parameter_list|)
member_init_list|:
name|mMaxComponentSize
argument_list|(
name|maxComponentSize
argument_list|)
member_init_list|,
name|mComponentType
argument_list|(
name|componentType
argument_list|)
block|{ }
DECL|function|operator <
name|bool
name|operator
name|<
parameter_list|(
specifier|const
name|SwizzleSizeType
modifier|&
name|other
parameter_list|)
specifier|const
block|{
return|return
operator|(
name|mMaxComponentSize
operator|!=
name|other
operator|.
name|mMaxComponentSize
operator|)
condition|?
operator|(
name|mMaxComponentSize
operator|<
name|other
operator|.
name|mMaxComponentSize
operator|)
else|:
operator|(
name|mComponentType
operator|<
name|other
operator|.
name|mComponentType
operator|)
return|;
block|}
block|}
struct|;
DECL|struct|SwizzleFormatInfo
struct|struct
name|SwizzleFormatInfo
block|{
DECL|member|mTexFormat
name|DXGI_FORMAT
name|mTexFormat
decl_stmt|;
DECL|member|mSRVFormat
name|DXGI_FORMAT
name|mSRVFormat
decl_stmt|;
DECL|member|mRTVFormat
name|DXGI_FORMAT
name|mRTVFormat
decl_stmt|;
DECL|function|SwizzleFormatInfo
name|SwizzleFormatInfo
parameter_list|()
member_init_list|:
name|mTexFormat
argument_list|(
name|DXGI_FORMAT_UNKNOWN
argument_list|)
member_init_list|,
name|mSRVFormat
argument_list|(
name|DXGI_FORMAT_UNKNOWN
argument_list|)
member_init_list|,
name|mRTVFormat
argument_list|(
name|DXGI_FORMAT_UNKNOWN
argument_list|)
block|{ }
DECL|function|SwizzleFormatInfo
name|SwizzleFormatInfo
parameter_list|(
name|DXGI_FORMAT
name|texFormat
parameter_list|,
name|DXGI_FORMAT
name|srvFormat
parameter_list|,
name|DXGI_FORMAT
name|rtvFormat
parameter_list|)
member_init_list|:
name|mTexFormat
argument_list|(
name|texFormat
argument_list|)
member_init_list|,
name|mSRVFormat
argument_list|(
name|srvFormat
argument_list|)
member_init_list|,
name|mRTVFormat
argument_list|(
name|rtvFormat
argument_list|)
block|{ }
block|}
struct|;
DECL|typedef|SwizzleInfoMap
typedef|typedef
name|std
operator|::
name|map
argument_list|<
name|SwizzleSizeType
argument_list|,
name|SwizzleFormatInfo
argument_list|>
name|SwizzleInfoMap
typedef|;
DECL|typedef|SwizzleInfoPair
typedef|typedef
name|std
operator|::
name|pair
argument_list|<
name|SwizzleSizeType
argument_list|,
name|SwizzleFormatInfo
argument_list|>
name|SwizzleInfoPair
typedef|;
DECL|function|BuildSwizzleInfoMap
specifier|static
name|SwizzleInfoMap
name|BuildSwizzleInfoMap
parameter_list|()
block|{
name|SwizzleInfoMap
name|map
decl_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|SwizzleInfoPair
argument_list|(
name|SwizzleSizeType
argument_list|(
literal|8
argument_list|,
name|GL_UNSIGNED_NORMALIZED
argument_list|)
argument_list|,
name|SwizzleFormatInfo
argument_list|(
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|SwizzleInfoPair
argument_list|(
name|SwizzleSizeType
argument_list|(
literal|16
argument_list|,
name|GL_UNSIGNED_NORMALIZED
argument_list|)
argument_list|,
name|SwizzleFormatInfo
argument_list|(
name|DXGI_FORMAT_R16G16B16A16_UNORM
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_UNORM
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_UNORM
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|SwizzleInfoPair
argument_list|(
name|SwizzleSizeType
argument_list|(
literal|24
argument_list|,
name|GL_UNSIGNED_NORMALIZED
argument_list|)
argument_list|,
name|SwizzleFormatInfo
argument_list|(
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|SwizzleInfoPair
argument_list|(
name|SwizzleSizeType
argument_list|(
literal|32
argument_list|,
name|GL_UNSIGNED_NORMALIZED
argument_list|)
argument_list|,
name|SwizzleFormatInfo
argument_list|(
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|SwizzleInfoPair
argument_list|(
name|SwizzleSizeType
argument_list|(
literal|8
argument_list|,
name|GL_SIGNED_NORMALIZED
argument_list|)
argument_list|,
name|SwizzleFormatInfo
argument_list|(
name|DXGI_FORMAT_R8G8B8A8_SNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_SNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_SNORM
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|SwizzleInfoPair
argument_list|(
name|SwizzleSizeType
argument_list|(
literal|16
argument_list|,
name|GL_FLOAT
argument_list|)
argument_list|,
name|SwizzleFormatInfo
argument_list|(
name|DXGI_FORMAT_R16G16B16A16_FLOAT
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_FLOAT
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_FLOAT
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|SwizzleInfoPair
argument_list|(
name|SwizzleSizeType
argument_list|(
literal|32
argument_list|,
name|GL_FLOAT
argument_list|)
argument_list|,
name|SwizzleFormatInfo
argument_list|(
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|SwizzleInfoPair
argument_list|(
name|SwizzleSizeType
argument_list|(
literal|8
argument_list|,
name|GL_UNSIGNED_INT
argument_list|)
argument_list|,
name|SwizzleFormatInfo
argument_list|(
name|DXGI_FORMAT_R8G8B8A8_UINT
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UINT
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UINT
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|SwizzleInfoPair
argument_list|(
name|SwizzleSizeType
argument_list|(
literal|16
argument_list|,
name|GL_UNSIGNED_INT
argument_list|)
argument_list|,
name|SwizzleFormatInfo
argument_list|(
name|DXGI_FORMAT_R16G16B16A16_UINT
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_UINT
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_UINT
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|SwizzleInfoPair
argument_list|(
name|SwizzleSizeType
argument_list|(
literal|32
argument_list|,
name|GL_UNSIGNED_INT
argument_list|)
argument_list|,
name|SwizzleFormatInfo
argument_list|(
name|DXGI_FORMAT_R32G32B32A32_UINT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_UINT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_UINT
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|SwizzleInfoPair
argument_list|(
name|SwizzleSizeType
argument_list|(
literal|8
argument_list|,
name|GL_INT
argument_list|)
argument_list|,
name|SwizzleFormatInfo
argument_list|(
name|DXGI_FORMAT_R8G8B8A8_SINT
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_SINT
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_SINT
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|SwizzleInfoPair
argument_list|(
name|SwizzleSizeType
argument_list|(
literal|16
argument_list|,
name|GL_INT
argument_list|)
argument_list|,
name|SwizzleFormatInfo
argument_list|(
name|DXGI_FORMAT_R16G16B16A16_SINT
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_SINT
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_SINT
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|SwizzleInfoPair
argument_list|(
name|SwizzleSizeType
argument_list|(
literal|32
argument_list|,
name|GL_INT
argument_list|)
argument_list|,
name|SwizzleFormatInfo
argument_list|(
name|DXGI_FORMAT_R32G32B32A32_SINT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_SINT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_SINT
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|map
return|;
block|}
DECL|typedef|InternalFormatInitializerPair
typedef|typedef
name|std
operator|::
name|pair
argument_list|<
name|GLint
argument_list|,
name|InitializeTextureDataFunction
argument_list|>
name|InternalFormatInitializerPair
typedef|;
DECL|typedef|InternalFormatInitializerMap
typedef|typedef
name|std
operator|::
name|map
argument_list|<
name|GLint
argument_list|,
name|InitializeTextureDataFunction
argument_list|>
name|InternalFormatInitializerMap
typedef|;
DECL|function|BuildInternalFormatInitializerMap
specifier|static
name|InternalFormatInitializerMap
name|BuildInternalFormatInitializerMap
parameter_list|()
block|{
name|InternalFormatInitializerMap
name|map
decl_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|InternalFormatInitializerPair
argument_list|(
name|GL_RGB8
argument_list|,
name|Initialize4ComponentData
argument_list|<
name|GLubyte
argument_list|,
literal|0x00
argument_list|,
literal|0x00
argument_list|,
literal|0x00
argument_list|,
literal|0xFF
argument_list|>
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|InternalFormatInitializerPair
argument_list|(
name|GL_RGB565
argument_list|,
name|Initialize4ComponentData
argument_list|<
name|GLubyte
argument_list|,
literal|0x00
argument_list|,
literal|0x00
argument_list|,
literal|0x00
argument_list|,
literal|0xFF
argument_list|>
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|InternalFormatInitializerPair
argument_list|(
name|GL_SRGB8
argument_list|,
name|Initialize4ComponentData
argument_list|<
name|GLubyte
argument_list|,
literal|0x00
argument_list|,
literal|0x00
argument_list|,
literal|0x00
argument_list|,
literal|0xFF
argument_list|>
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|InternalFormatInitializerPair
argument_list|(
name|GL_RGB16F
argument_list|,
name|Initialize4ComponentData
argument_list|<
name|GLhalf
argument_list|,
literal|0x0000
argument_list|,
literal|0x0000
argument_list|,
literal|0x0000
argument_list|,
name|gl
operator|::
name|Float16One
argument_list|>
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|InternalFormatInitializerPair
argument_list|(
name|GL_RGB32F
argument_list|,
name|Initialize4ComponentData
argument_list|<
name|GLfloat
argument_list|,
literal|0x00000000
argument_list|,
literal|0x00000000
argument_list|,
literal|0x00000000
argument_list|,
name|gl
operator|::
name|Float32One
argument_list|>
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|InternalFormatInitializerPair
argument_list|(
name|GL_RGB8UI
argument_list|,
name|Initialize4ComponentData
argument_list|<
name|GLubyte
argument_list|,
literal|0x00
argument_list|,
literal|0x00
argument_list|,
literal|0x00
argument_list|,
literal|0x01
argument_list|>
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|InternalFormatInitializerPair
argument_list|(
name|GL_RGB8I
argument_list|,
name|Initialize4ComponentData
argument_list|<
name|GLbyte
argument_list|,
literal|0x00
argument_list|,
literal|0x00
argument_list|,
literal|0x00
argument_list|,
literal|0x01
argument_list|>
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|InternalFormatInitializerPair
argument_list|(
name|GL_RGB16UI
argument_list|,
name|Initialize4ComponentData
argument_list|<
name|GLushort
argument_list|,
literal|0x0000
argument_list|,
literal|0x0000
argument_list|,
literal|0x0000
argument_list|,
literal|0x0001
argument_list|>
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|InternalFormatInitializerPair
argument_list|(
name|GL_RGB16I
argument_list|,
name|Initialize4ComponentData
argument_list|<
name|GLshort
argument_list|,
literal|0x0000
argument_list|,
literal|0x0000
argument_list|,
literal|0x0000
argument_list|,
literal|0x0001
argument_list|>
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|InternalFormatInitializerPair
argument_list|(
name|GL_RGB32UI
argument_list|,
name|Initialize4ComponentData
argument_list|<
name|GLuint
argument_list|,
literal|0x00000000
argument_list|,
literal|0x00000000
argument_list|,
literal|0x00000000
argument_list|,
literal|0x00000001
argument_list|>
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|InternalFormatInitializerPair
argument_list|(
name|GL_RGB32I
argument_list|,
name|Initialize4ComponentData
argument_list|<
name|GLint
argument_list|,
literal|0x00000000
argument_list|,
literal|0x00000000
argument_list|,
literal|0x00000000
argument_list|,
literal|0x00000001
argument_list|>
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|map
return|;
block|}
DECL|function|GetSwizzleInfoMap
specifier|static
specifier|const
name|SwizzleInfoMap
modifier|&
name|GetSwizzleInfoMap
parameter_list|()
block|{
specifier|static
specifier|const
name|SwizzleInfoMap
name|map
init|=
name|BuildSwizzleInfoMap
argument_list|()
decl_stmt|;
return|return
name|map
return|;
block|}
DECL|function|GetSwizzleFormatInfo
specifier|static
specifier|const
name|SwizzleFormatInfo
name|GetSwizzleFormatInfo
parameter_list|(
name|GLenum
name|internalFormat
parameter_list|)
block|{
comment|// Get the maximum sized component
name|unsigned
name|int
name|maxBits
init|=
literal|1
decl_stmt|;
if|if
condition|(
name|gl
operator|::
name|IsFormatCompressed
argument_list|(
name|internalFormat
argument_list|)
condition|)
block|{
name|unsigned
name|int
name|compressedBitsPerBlock
init|=
name|gl
operator|::
name|GetPixelBytes
argument_list|(
name|internalFormat
argument_list|)
operator|*
literal|8
decl_stmt|;
name|unsigned
name|int
name|blockSize
init|=
name|gl
operator|::
name|GetCompressedBlockWidth
argument_list|(
name|internalFormat
argument_list|)
operator|*
name|gl
operator|::
name|GetCompressedBlockHeight
argument_list|(
name|internalFormat
argument_list|)
decl_stmt|;
name|maxBits
operator|=
name|std
operator|::
name|max
argument_list|(
name|compressedBitsPerBlock
operator|/
name|blockSize
argument_list|,
name|maxBits
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|maxBits
operator|=
name|std
operator|::
name|max
argument_list|(
name|maxBits
argument_list|,
name|gl
operator|::
name|GetAlphaBits
argument_list|(
name|internalFormat
argument_list|)
argument_list|)
expr_stmt|;
name|maxBits
operator|=
name|std
operator|::
name|max
argument_list|(
name|maxBits
argument_list|,
name|gl
operator|::
name|GetRedBits
argument_list|(
name|internalFormat
argument_list|)
argument_list|)
expr_stmt|;
name|maxBits
operator|=
name|std
operator|::
name|max
argument_list|(
name|maxBits
argument_list|,
name|gl
operator|::
name|GetGreenBits
argument_list|(
name|internalFormat
argument_list|)
argument_list|)
expr_stmt|;
name|maxBits
operator|=
name|std
operator|::
name|max
argument_list|(
name|maxBits
argument_list|,
name|gl
operator|::
name|GetBlueBits
argument_list|(
name|internalFormat
argument_list|)
argument_list|)
expr_stmt|;
name|maxBits
operator|=
name|std
operator|::
name|max
argument_list|(
name|maxBits
argument_list|,
name|gl
operator|::
name|GetLuminanceBits
argument_list|(
name|internalFormat
argument_list|)
argument_list|)
expr_stmt|;
name|maxBits
operator|=
name|std
operator|::
name|max
argument_list|(
name|maxBits
argument_list|,
name|gl
operator|::
name|GetDepthBits
argument_list|(
name|internalFormat
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|maxBits
operator|=
name|roundUp
argument_list|(
name|maxBits
argument_list|,
literal|8U
argument_list|)
expr_stmt|;
name|GLenum
name|componentType
init|=
name|gl
operator|::
name|GetComponentType
argument_list|(
name|internalFormat
argument_list|)
decl_stmt|;
specifier|const
name|SwizzleInfoMap
modifier|&
name|map
init|=
name|GetSwizzleInfoMap
argument_list|()
decl_stmt|;
name|SwizzleInfoMap
operator|::
name|const_iterator
name|iter
init|=
name|map
operator|.
name|find
argument_list|(
name|SwizzleSizeType
argument_list|(
name|maxBits
argument_list|,
name|componentType
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|iter
operator|!=
name|map
operator|.
name|end
argument_list|()
condition|)
block|{
return|return
name|iter
operator|->
name|second
return|;
block|}
else|else
block|{
name|UNREACHABLE
argument_list|()
expr_stmt|;
specifier|static
specifier|const
name|SwizzleFormatInfo
name|defaultFormatInfo
decl_stmt|;
return|return
name|defaultFormatInfo
return|;
block|}
block|}
DECL|function|GetInternalFormatInitializerMap
specifier|static
specifier|const
name|InternalFormatInitializerMap
modifier|&
name|GetInternalFormatInitializerMap
parameter_list|()
block|{
specifier|static
specifier|const
name|InternalFormatInitializerMap
name|map
init|=
name|BuildInternalFormatInitializerMap
argument_list|()
decl_stmt|;
return|return
name|map
return|;
block|}
DECL|namespace|d3d11
namespace|namespace
name|d3d11
block|{
DECL|function|GetMipGenerationFunction
name|MipGenerationFunction
name|GetMipGenerationFunction
parameter_list|(
name|DXGI_FORMAT
name|format
parameter_list|)
block|{
name|DXGIFormatInfo
name|formatInfo
decl_stmt|;
if|if
condition|(
name|GetDXGIFormatInfo
argument_list|(
name|format
argument_list|,
operator|&
name|formatInfo
argument_list|)
condition|)
block|{
return|return
name|formatInfo
operator|.
name|mMipGenerationFunction
return|;
block|}
else|else
block|{
name|UNREACHABLE
argument_list|()
expr_stmt|;
return|return
name|NULL
return|;
block|}
block|}
DECL|function|GetImageLoadFunction
name|LoadImageFunction
name|GetImageLoadFunction
parameter_list|(
name|GLenum
name|internalFormat
parameter_list|,
name|GLenum
name|type
parameter_list|)
block|{
specifier|static
specifier|const
name|D3D11LoadFunctionMap
name|loadImageMap
init|=
name|buildD3D11LoadFunctionMap
argument_list|()
decl_stmt|;
name|D3D11LoadFunctionMap
operator|::
name|const_iterator
name|iter
init|=
name|loadImageMap
operator|.
name|find
argument_list|(
name|InternalFormatTypePair
argument_list|(
name|internalFormat
argument_list|,
name|type
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|iter
operator|!=
name|loadImageMap
operator|.
name|end
argument_list|()
condition|)
block|{
return|return
name|iter
operator|->
name|second
return|;
block|}
else|else
block|{
name|UNREACHABLE
argument_list|()
expr_stmt|;
return|return
name|NULL
return|;
block|}
block|}
DECL|function|GetFormatPixelBytes
name|GLuint
name|GetFormatPixelBytes
parameter_list|(
name|DXGI_FORMAT
name|format
parameter_list|)
block|{
name|DXGIFormatInfo
name|dxgiFormatInfo
decl_stmt|;
if|if
condition|(
name|GetDXGIFormatInfo
argument_list|(
name|format
argument_list|,
operator|&
name|dxgiFormatInfo
argument_list|)
condition|)
block|{
return|return
name|dxgiFormatInfo
operator|.
name|mPixelBits
operator|/
literal|8
return|;
block|}
else|else
block|{
name|UNREACHABLE
argument_list|()
expr_stmt|;
return|return
literal|0
return|;
block|}
block|}
DECL|function|GetBlockWidth
name|GLuint
name|GetBlockWidth
parameter_list|(
name|DXGI_FORMAT
name|format
parameter_list|)
block|{
name|DXGIFormatInfo
name|dxgiFormatInfo
decl_stmt|;
if|if
condition|(
name|GetDXGIFormatInfo
argument_list|(
name|format
argument_list|,
operator|&
name|dxgiFormatInfo
argument_list|)
condition|)
block|{
return|return
name|dxgiFormatInfo
operator|.
name|mBlockWidth
return|;
block|}
else|else
block|{
name|UNREACHABLE
argument_list|()
expr_stmt|;
return|return
literal|0
return|;
block|}
block|}
DECL|function|GetBlockHeight
name|GLuint
name|GetBlockHeight
parameter_list|(
name|DXGI_FORMAT
name|format
parameter_list|)
block|{
name|DXGIFormatInfo
name|dxgiFormatInfo
decl_stmt|;
if|if
condition|(
name|GetDXGIFormatInfo
argument_list|(
name|format
argument_list|,
operator|&
name|dxgiFormatInfo
argument_list|)
condition|)
block|{
return|return
name|dxgiFormatInfo
operator|.
name|mBlockHeight
return|;
block|}
else|else
block|{
name|UNREACHABLE
argument_list|()
expr_stmt|;
return|return
literal|0
return|;
block|}
block|}
DECL|function|GetComponentType
name|GLenum
name|GetComponentType
parameter_list|(
name|DXGI_FORMAT
name|format
parameter_list|)
block|{
name|DXGIFormatInfo
name|dxgiFormatInfo
decl_stmt|;
if|if
condition|(
name|GetDXGIFormatInfo
argument_list|(
name|format
argument_list|,
operator|&
name|dxgiFormatInfo
argument_list|)
condition|)
block|{
return|return
name|dxgiFormatInfo
operator|.
name|mComponentType
return|;
block|}
else|else
block|{
name|UNREACHABLE
argument_list|()
expr_stmt|;
return|return
name|GL_NONE
return|;
block|}
block|}
DECL|function|GetDepthBits
name|GLuint
name|GetDepthBits
parameter_list|(
name|DXGI_FORMAT
name|format
parameter_list|)
block|{
name|DXGIDepthStencilInfo
name|dxgiDSInfo
decl_stmt|;
if|if
condition|(
name|GetDepthStencilInfo
argument_list|(
name|format
argument_list|,
operator|&
name|dxgiDSInfo
argument_list|)
condition|)
block|{
return|return
name|dxgiDSInfo
operator|.
name|mDepthBits
return|;
block|}
else|else
block|{
comment|// Since the depth stencil info map does not contain all used DXGI formats,
comment|// we should not assert that the format exists
return|return
literal|0
return|;
block|}
block|}
DECL|function|GetDepthOffset
name|GLuint
name|GetDepthOffset
parameter_list|(
name|DXGI_FORMAT
name|format
parameter_list|)
block|{
name|DXGIDepthStencilInfo
name|dxgiDSInfo
decl_stmt|;
if|if
condition|(
name|GetDepthStencilInfo
argument_list|(
name|format
argument_list|,
operator|&
name|dxgiDSInfo
argument_list|)
condition|)
block|{
return|return
name|dxgiDSInfo
operator|.
name|mDepthOffset
return|;
block|}
else|else
block|{
comment|// Since the depth stencil info map does not contain all used DXGI formats,
comment|// we should not assert that the format exists
return|return
literal|0
return|;
block|}
block|}
DECL|function|GetStencilBits
name|GLuint
name|GetStencilBits
parameter_list|(
name|DXGI_FORMAT
name|format
parameter_list|)
block|{
name|DXGIDepthStencilInfo
name|dxgiDSInfo
decl_stmt|;
if|if
condition|(
name|GetDepthStencilInfo
argument_list|(
name|format
argument_list|,
operator|&
name|dxgiDSInfo
argument_list|)
condition|)
block|{
return|return
name|dxgiDSInfo
operator|.
name|mStencilBits
return|;
block|}
else|else
block|{
comment|// Since the depth stencil info map does not contain all used DXGI formats,
comment|// we should not assert that the format exists
return|return
literal|0
return|;
block|}
block|}
DECL|function|GetStencilOffset
name|GLuint
name|GetStencilOffset
parameter_list|(
name|DXGI_FORMAT
name|format
parameter_list|)
block|{
name|DXGIDepthStencilInfo
name|dxgiDSInfo
decl_stmt|;
if|if
condition|(
name|GetDepthStencilInfo
argument_list|(
name|format
argument_list|,
operator|&
name|dxgiDSInfo
argument_list|)
condition|)
block|{
return|return
name|dxgiDSInfo
operator|.
name|mStencilOffset
return|;
block|}
else|else
block|{
comment|// Since the depth stencil info map does not contain all used DXGI formats,
comment|// we should not assert that the format exists
return|return
literal|0
return|;
block|}
block|}
DECL|function|MakeValidSize
name|void
name|MakeValidSize
parameter_list|(
name|bool
name|isImage
parameter_list|,
name|DXGI_FORMAT
name|format
parameter_list|,
name|GLsizei
modifier|*
name|requestWidth
parameter_list|,
name|GLsizei
modifier|*
name|requestHeight
parameter_list|,
name|int
modifier|*
name|levelOffset
parameter_list|)
block|{
name|DXGIFormatInfo
name|dxgiFormatInfo
decl_stmt|;
if|if
condition|(
name|GetDXGIFormatInfo
argument_list|(
name|format
argument_list|,
operator|&
name|dxgiFormatInfo
argument_list|)
condition|)
block|{
name|int
name|upsampleCount
init|=
literal|0
decl_stmt|;
name|GLsizei
name|blockWidth
init|=
name|dxgiFormatInfo
operator|.
name|mBlockWidth
decl_stmt|;
name|GLsizei
name|blockHeight
init|=
name|dxgiFormatInfo
operator|.
name|mBlockHeight
decl_stmt|;
comment|// Don't expand the size of full textures that are at least (blockWidth x blockHeight) already.
if|if
condition|(
name|isImage
operator|||
operator|*
name|requestWidth
operator|<
name|blockWidth
operator|||
operator|*
name|requestHeight
operator|<
name|blockHeight
condition|)
block|{
while|while
condition|(
operator|*
name|requestWidth
operator|%
name|blockWidth
operator|!=
literal|0
operator|||
operator|*
name|requestHeight
operator|%
name|blockHeight
operator|!=
literal|0
condition|)
block|{
operator|*
name|requestWidth
operator|<<=
literal|1
expr_stmt|;
operator|*
name|requestHeight
operator|<<=
literal|1
expr_stmt|;
name|upsampleCount
operator|++
expr_stmt|;
block|}
block|}
operator|*
name|levelOffset
operator|=
name|upsampleCount
expr_stmt|;
block|}
else|else
block|{
name|UNREACHABLE
argument_list|()
expr_stmt|;
block|}
block|}
DECL|function|GetAllUsedDXGIFormats
specifier|const
name|DXGIFormatSet
modifier|&
name|GetAllUsedDXGIFormats
parameter_list|()
block|{
specifier|static
name|DXGIFormatSet
name|formatSet
init|=
name|BuildAllDXGIFormatSet
argument_list|()
decl_stmt|;
return|return
name|formatSet
return|;
block|}
DECL|function|GetColorReadFunction
name|ColorReadFunction
name|GetColorReadFunction
parameter_list|(
name|DXGI_FORMAT
name|format
parameter_list|)
block|{
name|DXGIFormatInfo
name|dxgiFormatInfo
decl_stmt|;
if|if
condition|(
name|GetDXGIFormatInfo
argument_list|(
name|format
argument_list|,
operator|&
name|dxgiFormatInfo
argument_list|)
condition|)
block|{
return|return
name|dxgiFormatInfo
operator|.
name|mColorReadFunction
return|;
block|}
else|else
block|{
name|UNREACHABLE
argument_list|()
expr_stmt|;
return|return
name|NULL
return|;
block|}
block|}
DECL|function|GetFastCopyFunction
name|ColorCopyFunction
name|GetFastCopyFunction
parameter_list|(
name|DXGI_FORMAT
name|sourceFormat
parameter_list|,
name|GLenum
name|destFormat
parameter_list|,
name|GLenum
name|destType
parameter_list|)
block|{
specifier|static
specifier|const
name|D3D11FastCopyMap
name|fastCopyMap
init|=
name|BuildFastCopyMap
argument_list|()
decl_stmt|;
name|D3D11FastCopyMap
operator|::
name|const_iterator
name|iter
init|=
name|fastCopyMap
operator|.
name|find
argument_list|(
name|D3D11FastCopyFormat
argument_list|(
name|sourceFormat
argument_list|,
name|destFormat
argument_list|,
name|destType
argument_list|)
argument_list|)
decl_stmt|;
return|return
operator|(
name|iter
operator|!=
name|fastCopyMap
operator|.
name|end
argument_list|()
operator|)
condition|?
name|iter
operator|->
name|second
else|:
name|NULL
return|;
block|}
block|}
DECL|namespace|gl_d3d11
namespace|namespace
name|gl_d3d11
block|{
DECL|function|GetTexFormat
name|DXGI_FORMAT
name|GetTexFormat
parameter_list|(
name|GLenum
name|internalFormat
parameter_list|)
block|{
name|D3D11FormatInfo
name|d3d11FormatInfo
decl_stmt|;
if|if
condition|(
name|GetD3D11FormatInfo
argument_list|(
name|internalFormat
argument_list|,
operator|&
name|d3d11FormatInfo
argument_list|)
condition|)
block|{
return|return
name|d3d11FormatInfo
operator|.
name|mTexFormat
return|;
block|}
else|else
block|{
name|UNREACHABLE
argument_list|()
expr_stmt|;
return|return
name|DXGI_FORMAT_UNKNOWN
return|;
block|}
block|}
DECL|function|GetSRVFormat
name|DXGI_FORMAT
name|GetSRVFormat
parameter_list|(
name|GLenum
name|internalFormat
parameter_list|)
block|{
name|D3D11FormatInfo
name|d3d11FormatInfo
decl_stmt|;
if|if
condition|(
name|GetD3D11FormatInfo
argument_list|(
name|internalFormat
argument_list|,
operator|&
name|d3d11FormatInfo
argument_list|)
condition|)
block|{
return|return
name|d3d11FormatInfo
operator|.
name|mSRVFormat
return|;
block|}
else|else
block|{
name|UNREACHABLE
argument_list|()
expr_stmt|;
return|return
name|DXGI_FORMAT_UNKNOWN
return|;
block|}
block|}
DECL|function|GetRTVFormat
name|DXGI_FORMAT
name|GetRTVFormat
parameter_list|(
name|GLenum
name|internalFormat
parameter_list|)
block|{
name|D3D11FormatInfo
name|d3d11FormatInfo
decl_stmt|;
if|if
condition|(
name|GetD3D11FormatInfo
argument_list|(
name|internalFormat
argument_list|,
operator|&
name|d3d11FormatInfo
argument_list|)
condition|)
block|{
return|return
name|d3d11FormatInfo
operator|.
name|mRTVFormat
return|;
block|}
else|else
block|{
name|UNREACHABLE
argument_list|()
expr_stmt|;
return|return
name|DXGI_FORMAT_UNKNOWN
return|;
block|}
block|}
DECL|function|GetDSVFormat
name|DXGI_FORMAT
name|GetDSVFormat
parameter_list|(
name|GLenum
name|internalFormat
parameter_list|)
block|{
name|D3D11FormatInfo
name|d3d11FormatInfo
decl_stmt|;
if|if
condition|(
name|GetD3D11FormatInfo
argument_list|(
name|internalFormat
argument_list|,
operator|&
name|d3d11FormatInfo
argument_list|)
condition|)
block|{
return|return
name|d3d11FormatInfo
operator|.
name|mDSVFormat
return|;
block|}
else|else
block|{
return|return
name|DXGI_FORMAT_UNKNOWN
return|;
block|}
block|}
comment|// Given a GL internal format, this function returns the DSV format if it is depth- or stencil-renderable,
comment|// the RTV format if it is color-renderable, and the (nonrenderable) texture format otherwise.
DECL|function|GetRenderableFormat
name|DXGI_FORMAT
name|GetRenderableFormat
parameter_list|(
name|GLenum
name|internalFormat
parameter_list|)
block|{
name|DXGI_FORMAT
name|targetFormat
init|=
name|GetDSVFormat
argument_list|(
name|internalFormat
argument_list|)
decl_stmt|;
if|if
condition|(
name|targetFormat
operator|==
name|DXGI_FORMAT_UNKNOWN
condition|)
name|targetFormat
operator|=
name|GetRTVFormat
argument_list|(
name|internalFormat
argument_list|)
expr_stmt|;
if|if
condition|(
name|targetFormat
operator|==
name|DXGI_FORMAT_UNKNOWN
condition|)
name|targetFormat
operator|=
name|GetTexFormat
argument_list|(
name|internalFormat
argument_list|)
expr_stmt|;
return|return
name|targetFormat
return|;
block|}
DECL|function|GetSwizzleTexFormat
name|DXGI_FORMAT
name|GetSwizzleTexFormat
parameter_list|(
name|GLint
name|internalFormat
parameter_list|)
block|{
if|if
condition|(
name|GetRTVFormat
argument_list|(
name|internalFormat
argument_list|)
operator|==
name|DXGI_FORMAT_UNKNOWN
operator|||
name|gl
operator|::
name|GetComponentCount
argument_list|(
name|internalFormat
argument_list|)
operator|!=
literal|4
condition|)
block|{
specifier|const
name|SwizzleFormatInfo
modifier|&
name|swizzleInfo
init|=
name|GetSwizzleFormatInfo
argument_list|(
name|internalFormat
argument_list|)
decl_stmt|;
return|return
name|swizzleInfo
operator|.
name|mTexFormat
return|;
block|}
else|else
block|{
return|return
name|GetTexFormat
argument_list|(
name|internalFormat
argument_list|)
return|;
block|}
block|}
DECL|function|GetSwizzleSRVFormat
name|DXGI_FORMAT
name|GetSwizzleSRVFormat
parameter_list|(
name|GLint
name|internalFormat
parameter_list|)
block|{
if|if
condition|(
name|GetRTVFormat
argument_list|(
name|internalFormat
argument_list|)
operator|==
name|DXGI_FORMAT_UNKNOWN
operator|||
name|gl
operator|::
name|GetComponentCount
argument_list|(
name|internalFormat
argument_list|)
operator|!=
literal|4
condition|)
block|{
specifier|const
name|SwizzleFormatInfo
modifier|&
name|swizzleInfo
init|=
name|GetSwizzleFormatInfo
argument_list|(
name|internalFormat
argument_list|)
decl_stmt|;
return|return
name|swizzleInfo
operator|.
name|mSRVFormat
return|;
block|}
else|else
block|{
return|return
name|GetSRVFormat
argument_list|(
name|internalFormat
argument_list|)
return|;
block|}
block|}
DECL|function|GetSwizzleRTVFormat
name|DXGI_FORMAT
name|GetSwizzleRTVFormat
parameter_list|(
name|GLint
name|internalFormat
parameter_list|)
block|{
if|if
condition|(
name|GetRTVFormat
argument_list|(
name|internalFormat
argument_list|)
operator|==
name|DXGI_FORMAT_UNKNOWN
operator|||
name|gl
operator|::
name|GetComponentCount
argument_list|(
name|internalFormat
argument_list|)
operator|!=
literal|4
condition|)
block|{
specifier|const
name|SwizzleFormatInfo
modifier|&
name|swizzleInfo
init|=
name|GetSwizzleFormatInfo
argument_list|(
name|internalFormat
argument_list|)
decl_stmt|;
return|return
name|swizzleInfo
operator|.
name|mRTVFormat
return|;
block|}
else|else
block|{
return|return
name|GetRTVFormat
argument_list|(
name|internalFormat
argument_list|)
return|;
block|}
block|}
DECL|function|RequiresTextureDataInitialization
name|bool
name|RequiresTextureDataInitialization
parameter_list|(
name|GLint
name|internalFormat
parameter_list|)
block|{
specifier|const
name|InternalFormatInitializerMap
modifier|&
name|map
init|=
name|GetInternalFormatInitializerMap
argument_list|()
decl_stmt|;
return|return
name|map
operator|.
name|find
argument_list|(
name|internalFormat
argument_list|)
operator|!=
name|map
operator|.
name|end
argument_list|()
return|;
block|}
DECL|function|GetTextureDataInitializationFunction
name|InitializeTextureDataFunction
name|GetTextureDataInitializationFunction
parameter_list|(
name|GLint
name|internalFormat
parameter_list|)
block|{
specifier|const
name|InternalFormatInitializerMap
modifier|&
name|map
init|=
name|GetInternalFormatInitializerMap
argument_list|()
decl_stmt|;
name|InternalFormatInitializerMap
operator|::
name|const_iterator
name|iter
init|=
name|map
operator|.
name|find
argument_list|(
name|internalFormat
argument_list|)
decl_stmt|;
if|if
condition|(
name|iter
operator|!=
name|map
operator|.
name|end
argument_list|()
condition|)
block|{
return|return
name|iter
operator|->
name|second
return|;
block|}
else|else
block|{
name|UNREACHABLE
argument_list|()
expr_stmt|;
return|return
name|NULL
return|;
block|}
block|}
DECL|struct|D3D11VertexFormatInfo
struct|struct
name|D3D11VertexFormatInfo
block|{
DECL|member|mConversionType
name|rx
operator|::
name|VertexConversionType
name|mConversionType
decl_stmt|;
DECL|member|mNativeFormat
name|DXGI_FORMAT
name|mNativeFormat
decl_stmt|;
DECL|member|mCopyFunction
name|VertexCopyFunction
name|mCopyFunction
decl_stmt|;
DECL|function|D3D11VertexFormatInfo
name|D3D11VertexFormatInfo
parameter_list|()
member_init_list|:
name|mConversionType
argument_list|(
name|VERTEX_CONVERT_NONE
argument_list|)
member_init_list|,
name|mNativeFormat
argument_list|(
name|DXGI_FORMAT_UNKNOWN
argument_list|)
member_init_list|,
name|mCopyFunction
argument_list|(
name|NULL
argument_list|)
block|{}
DECL|function|D3D11VertexFormatInfo
name|D3D11VertexFormatInfo
parameter_list|(
name|VertexConversionType
name|conversionType
parameter_list|,
name|DXGI_FORMAT
name|nativeFormat
parameter_list|,
name|VertexCopyFunction
name|copyFunction
parameter_list|)
member_init_list|:
name|mConversionType
argument_list|(
name|conversionType
argument_list|)
member_init_list|,
name|mNativeFormat
argument_list|(
name|nativeFormat
argument_list|)
member_init_list|,
name|mCopyFunction
argument_list|(
name|copyFunction
argument_list|)
block|{}
block|}
struct|;
DECL|typedef|D3D11VertexFormatInfoMap
typedef|typedef
name|std
operator|::
name|map
argument_list|<
name|gl
operator|::
name|VertexFormat
argument_list|,
name|D3D11VertexFormatInfo
argument_list|>
name|D3D11VertexFormatInfoMap
typedef|;
DECL|typedef|D3D11VertexFormatPair
typedef|typedef
name|std
operator|::
name|pair
argument_list|<
name|gl
operator|::
name|VertexFormat
argument_list|,
name|D3D11VertexFormatInfo
argument_list|>
name|D3D11VertexFormatPair
typedef|;
DECL|function|addVertexFormatInfo
specifier|static
name|void
name|addVertexFormatInfo
parameter_list|(
name|D3D11VertexFormatInfoMap
modifier|*
name|map
parameter_list|,
name|GLenum
name|inputType
parameter_list|,
name|GLboolean
name|normalized
parameter_list|,
name|GLuint
name|componentCount
parameter_list|,
name|VertexConversionType
name|conversionType
parameter_list|,
name|DXGI_FORMAT
name|nativeFormat
parameter_list|,
name|VertexCopyFunction
name|copyFunction
parameter_list|)
block|{
name|gl
operator|::
name|VertexFormat
name|inputFormat
argument_list|(
name|inputType
argument_list|,
name|normalized
argument_list|,
name|componentCount
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|map
operator|->
name|insert
argument_list|(
name|D3D11VertexFormatPair
argument_list|(
name|inputFormat
argument_list|,
name|D3D11VertexFormatInfo
argument_list|(
name|conversionType
argument_list|,
name|nativeFormat
argument_list|,
name|copyFunction
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|function|addIntegerVertexFormatInfo
specifier|static
name|void
name|addIntegerVertexFormatInfo
parameter_list|(
name|D3D11VertexFormatInfoMap
modifier|*
name|map
parameter_list|,
name|GLenum
name|inputType
parameter_list|,
name|GLuint
name|componentCount
parameter_list|,
name|VertexConversionType
name|conversionType
parameter_list|,
name|DXGI_FORMAT
name|nativeFormat
parameter_list|,
name|VertexCopyFunction
name|copyFunction
parameter_list|)
block|{
name|gl
operator|::
name|VertexFormat
name|inputFormat
argument_list|(
name|inputType
argument_list|,
name|GL_FALSE
argument_list|,
name|componentCount
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|map
operator|->
name|insert
argument_list|(
name|D3D11VertexFormatPair
argument_list|(
name|inputFormat
argument_list|,
name|D3D11VertexFormatInfo
argument_list|(
name|conversionType
argument_list|,
name|nativeFormat
argument_list|,
name|copyFunction
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|function|BuildD3D11VertexFormatInfoMap
specifier|static
name|D3D11VertexFormatInfoMap
name|BuildD3D11VertexFormatInfoMap
parameter_list|()
block|{
name|D3D11VertexFormatInfoMap
name|map
decl_stmt|;
comment|// TODO: column legend
comment|//
comment|// Float formats
comment|//
comment|// GL_BYTE -- un-normalized
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_BYTE
argument_list|,
name|GL_FALSE
argument_list|,
literal|1
argument_list|,
name|VERTEX_CONVERT_GPU
argument_list|,
name|DXGI_FORMAT_R8_SINT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLbyte
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_BYTE
argument_list|,
name|GL_FALSE
argument_list|,
literal|2
argument_list|,
name|VERTEX_CONVERT_GPU
argument_list|,
name|DXGI_FORMAT_R8G8_SINT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLbyte
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_BYTE
argument_list|,
name|GL_FALSE
argument_list|,
literal|3
argument_list|,
name|VERTEX_CONVERT_BOTH
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_SINT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLbyte
argument_list|,
literal|3
argument_list|,
literal|1
argument_list|>
argument_list|)
expr_stmt|;
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_BYTE
argument_list|,
name|GL_FALSE
argument_list|,
literal|4
argument_list|,
name|VERTEX_CONVERT_GPU
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_SINT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLbyte
argument_list|,
literal|4
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
comment|// GL_BYTE -- normalized
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_BYTE
argument_list|,
name|GL_TRUE
argument_list|,
literal|1
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R8_SNORM
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLbyte
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_BYTE
argument_list|,
name|GL_TRUE
argument_list|,
literal|2
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R8G8_SNORM
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLbyte
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_BYTE
argument_list|,
name|GL_TRUE
argument_list|,
literal|3
argument_list|,
name|VERTEX_CONVERT_CPU
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_SNORM
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLbyte
argument_list|,
literal|3
argument_list|,
name|INT8_MAX
argument_list|>
argument_list|)
expr_stmt|;
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_BYTE
argument_list|,
name|GL_TRUE
argument_list|,
literal|4
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_SNORM
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLbyte
argument_list|,
literal|4
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
comment|// GL_UNSIGNED_BYTE -- un-normalized
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|GL_FALSE
argument_list|,
literal|1
argument_list|,
name|VERTEX_CONVERT_GPU
argument_list|,
name|DXGI_FORMAT_R8_UINT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLubyte
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|GL_FALSE
argument_list|,
literal|2
argument_list|,
name|VERTEX_CONVERT_GPU
argument_list|,
name|DXGI_FORMAT_R8G8_UINT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLubyte
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|GL_FALSE
argument_list|,
literal|3
argument_list|,
name|VERTEX_CONVERT_BOTH
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UINT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLubyte
argument_list|,
literal|3
argument_list|,
literal|1
argument_list|>
argument_list|)
expr_stmt|;
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|GL_FALSE
argument_list|,
literal|4
argument_list|,
name|VERTEX_CONVERT_GPU
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UINT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLubyte
argument_list|,
literal|4
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
comment|// GL_UNSIGNED_BYTE -- normalized
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|GL_TRUE
argument_list|,
literal|1
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R8_UNORM
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLubyte
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|GL_TRUE
argument_list|,
literal|2
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R8G8_UNORM
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLubyte
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|GL_TRUE
argument_list|,
literal|3
argument_list|,
name|VERTEX_CONVERT_CPU
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLubyte
argument_list|,
literal|3
argument_list|,
name|UINT8_MAX
argument_list|>
argument_list|)
expr_stmt|;
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|GL_TRUE
argument_list|,
literal|4
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLubyte
argument_list|,
literal|4
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
comment|// GL_SHORT -- un-normalized
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_SHORT
argument_list|,
name|GL_FALSE
argument_list|,
literal|1
argument_list|,
name|VERTEX_CONVERT_GPU
argument_list|,
name|DXGI_FORMAT_R16_SINT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLshort
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_SHORT
argument_list|,
name|GL_FALSE
argument_list|,
literal|2
argument_list|,
name|VERTEX_CONVERT_GPU
argument_list|,
name|DXGI_FORMAT_R16G16_SINT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLshort
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_SHORT
argument_list|,
name|GL_FALSE
argument_list|,
literal|3
argument_list|,
name|VERTEX_CONVERT_BOTH
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_SINT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLshort
argument_list|,
literal|4
argument_list|,
literal|1
argument_list|>
argument_list|)
expr_stmt|;
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_SHORT
argument_list|,
name|GL_FALSE
argument_list|,
literal|4
argument_list|,
name|VERTEX_CONVERT_GPU
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_SINT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLshort
argument_list|,
literal|4
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
comment|// GL_SHORT -- normalized
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_SHORT
argument_list|,
name|GL_TRUE
argument_list|,
literal|1
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R16_SNORM
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLshort
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_SHORT
argument_list|,
name|GL_TRUE
argument_list|,
literal|2
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R16G16_SNORM
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLshort
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_SHORT
argument_list|,
name|GL_TRUE
argument_list|,
literal|3
argument_list|,
name|VERTEX_CONVERT_CPU
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_SNORM
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLshort
argument_list|,
literal|3
argument_list|,
name|INT16_MAX
argument_list|>
argument_list|)
expr_stmt|;
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_SHORT
argument_list|,
name|GL_TRUE
argument_list|,
literal|4
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_SNORM
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLshort
argument_list|,
literal|4
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
comment|// GL_UNSIGNED_SHORT -- un-normalized
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_SHORT
argument_list|,
name|GL_FALSE
argument_list|,
literal|1
argument_list|,
name|VERTEX_CONVERT_GPU
argument_list|,
name|DXGI_FORMAT_R16_UINT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLushort
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_SHORT
argument_list|,
name|GL_FALSE
argument_list|,
literal|2
argument_list|,
name|VERTEX_CONVERT_GPU
argument_list|,
name|DXGI_FORMAT_R16G16_UINT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLushort
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_SHORT
argument_list|,
name|GL_FALSE
argument_list|,
literal|3
argument_list|,
name|VERTEX_CONVERT_BOTH
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_UINT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLushort
argument_list|,
literal|3
argument_list|,
literal|1
argument_list|>
argument_list|)
expr_stmt|;
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_SHORT
argument_list|,
name|GL_FALSE
argument_list|,
literal|4
argument_list|,
name|VERTEX_CONVERT_GPU
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_UINT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLushort
argument_list|,
literal|4
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
comment|// GL_UNSIGNED_SHORT -- normalized
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_SHORT
argument_list|,
name|GL_TRUE
argument_list|,
literal|1
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R16_UNORM
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLushort
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_SHORT
argument_list|,
name|GL_TRUE
argument_list|,
literal|2
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R16G16_UNORM
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLushort
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_SHORT
argument_list|,
name|GL_TRUE
argument_list|,
literal|3
argument_list|,
name|VERTEX_CONVERT_CPU
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_UNORM
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLushort
argument_list|,
literal|3
argument_list|,
name|UINT16_MAX
argument_list|>
argument_list|)
expr_stmt|;
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_SHORT
argument_list|,
name|GL_TRUE
argument_list|,
literal|4
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_UNORM
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLushort
argument_list|,
literal|4
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
comment|// GL_INT -- un-normalized
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_INT
argument_list|,
name|GL_FALSE
argument_list|,
literal|1
argument_list|,
name|VERTEX_CONVERT_GPU
argument_list|,
name|DXGI_FORMAT_R32_SINT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLint
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_INT
argument_list|,
name|GL_FALSE
argument_list|,
literal|2
argument_list|,
name|VERTEX_CONVERT_GPU
argument_list|,
name|DXGI_FORMAT_R32G32_SINT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLint
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_INT
argument_list|,
name|GL_FALSE
argument_list|,
literal|3
argument_list|,
name|VERTEX_CONVERT_GPU
argument_list|,
name|DXGI_FORMAT_R32G32B32_SINT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLint
argument_list|,
literal|3
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_INT
argument_list|,
name|GL_FALSE
argument_list|,
literal|4
argument_list|,
name|VERTEX_CONVERT_GPU
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_SINT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLint
argument_list|,
literal|4
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
comment|// GL_INT -- normalized
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_INT
argument_list|,
name|GL_TRUE
argument_list|,
literal|1
argument_list|,
name|VERTEX_CONVERT_CPU
argument_list|,
name|DXGI_FORMAT_R32_FLOAT
argument_list|,
operator|&
name|copyToFloatVertexData
argument_list|<
name|GLint
argument_list|,
literal|1
argument_list|,
literal|true
argument_list|>
argument_list|)
expr_stmt|;
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_INT
argument_list|,
name|GL_TRUE
argument_list|,
literal|2
argument_list|,
name|VERTEX_CONVERT_CPU
argument_list|,
name|DXGI_FORMAT_R32G32_FLOAT
argument_list|,
operator|&
name|copyToFloatVertexData
argument_list|<
name|GLint
argument_list|,
literal|2
argument_list|,
literal|true
argument_list|>
argument_list|)
expr_stmt|;
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_INT
argument_list|,
name|GL_TRUE
argument_list|,
literal|3
argument_list|,
name|VERTEX_CONVERT_CPU
argument_list|,
name|DXGI_FORMAT_R32G32B32_FLOAT
argument_list|,
operator|&
name|copyToFloatVertexData
argument_list|<
name|GLint
argument_list|,
literal|3
argument_list|,
literal|true
argument_list|>
argument_list|)
expr_stmt|;
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_INT
argument_list|,
name|GL_TRUE
argument_list|,
literal|4
argument_list|,
name|VERTEX_CONVERT_CPU
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
operator|&
name|copyToFloatVertexData
argument_list|<
name|GLint
argument_list|,
literal|4
argument_list|,
literal|true
argument_list|>
argument_list|)
expr_stmt|;
comment|// GL_UNSIGNED_INT -- un-normalized
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|GL_FALSE
argument_list|,
literal|1
argument_list|,
name|VERTEX_CONVERT_GPU
argument_list|,
name|DXGI_FORMAT_R32_UINT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLuint
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|GL_FALSE
argument_list|,
literal|2
argument_list|,
name|VERTEX_CONVERT_GPU
argument_list|,
name|DXGI_FORMAT_R32G32_UINT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLuint
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|GL_FALSE
argument_list|,
literal|3
argument_list|,
name|VERTEX_CONVERT_GPU
argument_list|,
name|DXGI_FORMAT_R32G32B32_UINT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLuint
argument_list|,
literal|3
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|GL_FALSE
argument_list|,
literal|4
argument_list|,
name|VERTEX_CONVERT_GPU
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_UINT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLuint
argument_list|,
literal|4
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
comment|// GL_UNSIGNED_INT -- normalized
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|GL_TRUE
argument_list|,
literal|1
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R32_FLOAT
argument_list|,
operator|&
name|copyToFloatVertexData
argument_list|<
name|GLuint
argument_list|,
literal|1
argument_list|,
literal|true
argument_list|>
argument_list|)
expr_stmt|;
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|GL_TRUE
argument_list|,
literal|2
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R32G32_FLOAT
argument_list|,
operator|&
name|copyToFloatVertexData
argument_list|<
name|GLuint
argument_list|,
literal|2
argument_list|,
literal|true
argument_list|>
argument_list|)
expr_stmt|;
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|GL_TRUE
argument_list|,
literal|3
argument_list|,
name|VERTEX_CONVERT_CPU
argument_list|,
name|DXGI_FORMAT_R32G32B32_FLOAT
argument_list|,
operator|&
name|copyToFloatVertexData
argument_list|<
name|GLuint
argument_list|,
literal|3
argument_list|,
literal|true
argument_list|>
argument_list|)
expr_stmt|;
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|GL_TRUE
argument_list|,
literal|4
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
operator|&
name|copyToFloatVertexData
argument_list|<
name|GLuint
argument_list|,
literal|4
argument_list|,
literal|true
argument_list|>
argument_list|)
expr_stmt|;
comment|// GL_FIXED
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_FIXED
argument_list|,
name|GL_FALSE
argument_list|,
literal|1
argument_list|,
name|VERTEX_CONVERT_CPU
argument_list|,
name|DXGI_FORMAT_R32_FLOAT
argument_list|,
operator|&
name|copyFixedVertexData
argument_list|<
literal|1
argument_list|>
argument_list|)
expr_stmt|;
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_FIXED
argument_list|,
name|GL_FALSE
argument_list|,
literal|2
argument_list|,
name|VERTEX_CONVERT_CPU
argument_list|,
name|DXGI_FORMAT_R32G32_FLOAT
argument_list|,
operator|&
name|copyFixedVertexData
argument_list|<
literal|2
argument_list|>
argument_list|)
expr_stmt|;
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_FIXED
argument_list|,
name|GL_FALSE
argument_list|,
literal|3
argument_list|,
name|VERTEX_CONVERT_CPU
argument_list|,
name|DXGI_FORMAT_R32G32B32_FLOAT
argument_list|,
operator|&
name|copyFixedVertexData
argument_list|<
literal|3
argument_list|>
argument_list|)
expr_stmt|;
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_FIXED
argument_list|,
name|GL_FALSE
argument_list|,
literal|4
argument_list|,
name|VERTEX_CONVERT_CPU
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
operator|&
name|copyFixedVertexData
argument_list|<
literal|4
argument_list|>
argument_list|)
expr_stmt|;
comment|// GL_HALF_FLOAT
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_HALF_FLOAT
argument_list|,
name|GL_FALSE
argument_list|,
literal|1
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R16_FLOAT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLhalf
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_HALF_FLOAT
argument_list|,
name|GL_FALSE
argument_list|,
literal|2
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R16G16_FLOAT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLhalf
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_HALF_FLOAT
argument_list|,
name|GL_FALSE
argument_list|,
literal|3
argument_list|,
name|VERTEX_CONVERT_CPU
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_FLOAT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLhalf
argument_list|,
literal|3
argument_list|,
name|gl
operator|::
name|Float16One
argument_list|>
argument_list|)
expr_stmt|;
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_HALF_FLOAT
argument_list|,
name|GL_FALSE
argument_list|,
literal|4
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_FLOAT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLhalf
argument_list|,
literal|4
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
comment|// GL_FLOAT
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_FLOAT
argument_list|,
name|GL_FALSE
argument_list|,
literal|1
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R32_FLOAT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLfloat
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_FLOAT
argument_list|,
name|GL_FALSE
argument_list|,
literal|2
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R32G32_FLOAT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLfloat
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_FLOAT
argument_list|,
name|GL_FALSE
argument_list|,
literal|3
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R32G32B32_FLOAT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLfloat
argument_list|,
literal|3
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_FLOAT
argument_list|,
name|GL_FALSE
argument_list|,
literal|4
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLfloat
argument_list|,
literal|4
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
comment|// GL_INT_2_10_10_10_REV
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_INT_2_10_10_10_REV
argument_list|,
name|GL_FALSE
argument_list|,
literal|4
argument_list|,
name|VERTEX_CONVERT_CPU
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
operator|&
name|copyPackedVertexData
argument_list|<
literal|true
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|>
argument_list|)
expr_stmt|;
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_INT_2_10_10_10_REV
argument_list|,
name|GL_TRUE
argument_list|,
literal|4
argument_list|,
name|VERTEX_CONVERT_CPU
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
operator|&
name|copyPackedVertexData
argument_list|<
literal|true
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|>
argument_list|)
expr_stmt|;
comment|// GL_UNSIGNED_INT_2_10_10_10_REV
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_INT_2_10_10_10_REV
argument_list|,
name|GL_FALSE
argument_list|,
literal|4
argument_list|,
name|VERTEX_CONVERT_CPU
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
operator|&
name|copyPackedVertexData
argument_list|<
literal|false
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|>
argument_list|)
expr_stmt|;
name|addVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_INT_2_10_10_10_REV
argument_list|,
name|GL_TRUE
argument_list|,
literal|4
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R10G10B10A2_UNORM
argument_list|,
operator|&
name|copyPackedUnsignedVertexData
argument_list|)
expr_stmt|;
comment|//
comment|// Integer Formats
comment|//
comment|// GL_BYTE
name|addIntegerVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_BYTE
argument_list|,
literal|1
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R8_SINT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLbyte
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|addIntegerVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_BYTE
argument_list|,
literal|2
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R8G8_SINT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLbyte
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|addIntegerVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_BYTE
argument_list|,
literal|3
argument_list|,
name|VERTEX_CONVERT_CPU
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_SINT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLbyte
argument_list|,
literal|3
argument_list|,
literal|1
argument_list|>
argument_list|)
expr_stmt|;
name|addIntegerVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_BYTE
argument_list|,
literal|4
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_SINT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLbyte
argument_list|,
literal|4
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
comment|// GL_UNSIGNED_BYTE
name|addIntegerVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
literal|1
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R8_UINT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLubyte
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|addIntegerVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
literal|2
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R8G8_UINT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLubyte
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|addIntegerVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
literal|3
argument_list|,
name|VERTEX_CONVERT_CPU
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UINT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLubyte
argument_list|,
literal|3
argument_list|,
literal|1
argument_list|>
argument_list|)
expr_stmt|;
name|addIntegerVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
literal|4
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UINT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLubyte
argument_list|,
literal|4
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
comment|// GL_SHORT
name|addIntegerVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_SHORT
argument_list|,
literal|1
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R16_SINT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLshort
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|addIntegerVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_SHORT
argument_list|,
literal|2
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R16G16_SINT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLshort
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|addIntegerVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_SHORT
argument_list|,
literal|3
argument_list|,
name|VERTEX_CONVERT_CPU
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_SINT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLshort
argument_list|,
literal|3
argument_list|,
literal|1
argument_list|>
argument_list|)
expr_stmt|;
name|addIntegerVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_SHORT
argument_list|,
literal|4
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_SINT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLshort
argument_list|,
literal|4
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
comment|// GL_UNSIGNED_SHORT
name|addIntegerVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_SHORT
argument_list|,
literal|1
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R16_UINT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLushort
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|addIntegerVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_SHORT
argument_list|,
literal|2
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R16G16_UINT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLushort
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|addIntegerVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_SHORT
argument_list|,
literal|3
argument_list|,
name|VERTEX_CONVERT_CPU
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_UINT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLushort
argument_list|,
literal|3
argument_list|,
literal|1
argument_list|>
argument_list|)
expr_stmt|;
name|addIntegerVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_SHORT
argument_list|,
literal|4
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_UINT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLushort
argument_list|,
literal|4
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
comment|// GL_INT
name|addIntegerVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_INT
argument_list|,
literal|1
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R32_SINT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLint
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|addIntegerVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_INT
argument_list|,
literal|2
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R32G32_SINT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLint
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|addIntegerVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_INT
argument_list|,
literal|3
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R32G32B32_SINT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLint
argument_list|,
literal|3
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|addIntegerVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_INT
argument_list|,
literal|4
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_SINT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLint
argument_list|,
literal|4
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
comment|// GL_UNSIGNED_INT
name|addIntegerVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
literal|1
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R32_SINT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLuint
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|addIntegerVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
literal|2
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R32G32_SINT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLuint
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|addIntegerVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
literal|3
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R32G32B32_SINT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLuint
argument_list|,
literal|3
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|addIntegerVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
literal|4
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_SINT
argument_list|,
operator|&
name|copyVertexData
argument_list|<
name|GLuint
argument_list|,
literal|4
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
comment|// GL_INT_2_10_10_10_REV
name|addIntegerVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_INT_2_10_10_10_REV
argument_list|,
literal|4
argument_list|,
name|VERTEX_CONVERT_CPU
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_SINT
argument_list|,
operator|&
name|copyPackedVertexData
argument_list|<
literal|true
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|>
argument_list|)
expr_stmt|;
comment|// GL_UNSIGNED_INT_2_10_10_10_REV
name|addIntegerVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_INT_2_10_10_10_REV
argument_list|,
literal|4
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R10G10B10A2_UINT
argument_list|,
operator|&
name|copyPackedUnsignedVertexData
argument_list|)
expr_stmt|;
return|return
name|map
return|;
block|}
DECL|function|GetD3D11VertexFormatInfo
specifier|static
name|bool
name|GetD3D11VertexFormatInfo
parameter_list|(
specifier|const
name|gl
operator|::
name|VertexFormat
modifier|&
name|vertexFormat
parameter_list|,
name|D3D11VertexFormatInfo
modifier|*
name|outVertexFormatInfo
parameter_list|)
block|{
specifier|static
specifier|const
name|D3D11VertexFormatInfoMap
name|vertexFormatMap
init|=
name|BuildD3D11VertexFormatInfoMap
argument_list|()
decl_stmt|;
name|D3D11VertexFormatInfoMap
operator|::
name|const_iterator
name|iter
init|=
name|vertexFormatMap
operator|.
name|find
argument_list|(
name|vertexFormat
argument_list|)
decl_stmt|;
if|if
condition|(
name|iter
operator|!=
name|vertexFormatMap
operator|.
name|end
argument_list|()
condition|)
block|{
if|if
condition|(
name|outVertexFormatInfo
condition|)
block|{
operator|*
name|outVertexFormatInfo
operator|=
name|iter
operator|->
name|second
expr_stmt|;
block|}
return|return
literal|true
return|;
block|}
else|else
block|{
return|return
literal|false
return|;
block|}
block|}
DECL|function|GetVertexCopyFunction
name|VertexCopyFunction
name|GetVertexCopyFunction
parameter_list|(
specifier|const
name|gl
operator|::
name|VertexFormat
modifier|&
name|vertexFormat
parameter_list|)
block|{
name|D3D11VertexFormatInfo
name|vertexFormatInfo
decl_stmt|;
if|if
condition|(
name|GetD3D11VertexFormatInfo
argument_list|(
name|vertexFormat
argument_list|,
operator|&
name|vertexFormatInfo
argument_list|)
condition|)
block|{
return|return
name|vertexFormatInfo
operator|.
name|mCopyFunction
return|;
block|}
else|else
block|{
name|UNREACHABLE
argument_list|()
expr_stmt|;
return|return
name|NULL
return|;
block|}
block|}
DECL|function|GetVertexElementSize
name|size_t
name|GetVertexElementSize
parameter_list|(
specifier|const
name|gl
operator|::
name|VertexFormat
modifier|&
name|vertexFormat
parameter_list|)
block|{
name|D3D11VertexFormatInfo
name|vertexFormatInfo
decl_stmt|;
if|if
condition|(
name|GetD3D11VertexFormatInfo
argument_list|(
name|vertexFormat
argument_list|,
operator|&
name|vertexFormatInfo
argument_list|)
condition|)
block|{
comment|// FIXME: should not need a client version, and is not a pixel!
return|return
name|d3d11
operator|::
name|GetFormatPixelBytes
argument_list|(
name|vertexFormatInfo
operator|.
name|mNativeFormat
argument_list|)
return|;
block|}
else|else
block|{
name|UNREACHABLE
argument_list|()
expr_stmt|;
return|return
literal|0
return|;
block|}
block|}
DECL|function|GetVertexConversionType
name|rx
operator|::
name|VertexConversionType
name|GetVertexConversionType
parameter_list|(
specifier|const
name|gl
operator|::
name|VertexFormat
modifier|&
name|vertexFormat
parameter_list|)
block|{
name|D3D11VertexFormatInfo
name|vertexFormatInfo
decl_stmt|;
if|if
condition|(
name|GetD3D11VertexFormatInfo
argument_list|(
name|vertexFormat
argument_list|,
operator|&
name|vertexFormatInfo
argument_list|)
condition|)
block|{
return|return
name|vertexFormatInfo
operator|.
name|mConversionType
return|;
block|}
else|else
block|{
name|UNREACHABLE
argument_list|()
expr_stmt|;
return|return
name|VERTEX_CONVERT_NONE
return|;
block|}
block|}
DECL|function|GetNativeVertexFormat
name|DXGI_FORMAT
name|GetNativeVertexFormat
parameter_list|(
specifier|const
name|gl
operator|::
name|VertexFormat
modifier|&
name|vertexFormat
parameter_list|)
block|{
name|D3D11VertexFormatInfo
name|vertexFormatInfo
decl_stmt|;
if|if
condition|(
name|GetD3D11VertexFormatInfo
argument_list|(
name|vertexFormat
argument_list|,
operator|&
name|vertexFormatInfo
argument_list|)
condition|)
block|{
return|return
name|vertexFormatInfo
operator|.
name|mNativeFormat
return|;
block|}
else|else
block|{
name|UNREACHABLE
argument_list|()
expr_stmt|;
return|return
name|DXGI_FORMAT_UNKNOWN
return|;
block|}
block|}
block|}
DECL|namespace|d3d11_gl
namespace|namespace
name|d3d11_gl
block|{
DECL|function|GetInternalFormat
name|GLenum
name|GetInternalFormat
parameter_list|(
name|DXGI_FORMAT
name|format
parameter_list|)
block|{
specifier|const
name|DXGIToESFormatMap
modifier|&
name|formatMap
init|=
name|GetDXGIToESFormatMap
argument_list|()
decl_stmt|;
name|DXGIToESFormatMap
operator|::
name|const_iterator
name|iter
init|=
name|formatMap
operator|.
name|find
argument_list|(
name|format
argument_list|)
decl_stmt|;
if|if
condition|(
name|iter
operator|!=
name|formatMap
operator|.
name|end
argument_list|()
condition|)
block|{
return|return
name|iter
operator|->
name|second
return|;
block|}
else|else
block|{
name|UNREACHABLE
argument_list|()
expr_stmt|;
return|return
name|GL_NONE
return|;
block|}
block|}
block|}
block|}
end_namespace
end_unit
