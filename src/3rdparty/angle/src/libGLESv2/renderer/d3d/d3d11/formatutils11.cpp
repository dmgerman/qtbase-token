begin_unit
begin_comment
comment|//
end_comment
begin_comment
comment|// Copyright (c) 2013-2014 The ANGLE Project Authors. All rights reserved.
end_comment
begin_comment
comment|// Use of this source code is governed by a BSD-style license that can be
end_comment
begin_comment
comment|// found in the LICENSE file.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// formatutils11.cpp: Queries for GL image formats and their translations to D3D11
end_comment
begin_comment
comment|// formats.
end_comment
begin_include
include|#
directive|include
file|"libGLESv2/renderer/d3d/d3d11/formatutils11.h"
end_include
begin_include
include|#
directive|include
file|"libGLESv2/renderer/generatemip.h"
end_include
begin_include
include|#
directive|include
file|"libGLESv2/renderer/loadimage.h"
end_include
begin_include
include|#
directive|include
file|"libGLESv2/renderer/copyimage.h"
end_include
begin_include
include|#
directive|include
file|"libGLESv2/renderer/Renderer.h"
end_include
begin_include
include|#
directive|include
file|"libGLESv2/renderer/copyvertex.h"
end_include
begin_namespace
DECL|namespace|rx
namespace|namespace
name|rx
block|{
DECL|namespace|d3d11
namespace|namespace
name|d3d11
block|{
DECL|typedef|DXGIToESFormatMap
typedef|typedef
name|std
operator|::
name|map
argument_list|<
name|DXGI_FORMAT
argument_list|,
name|GLenum
argument_list|>
name|DXGIToESFormatMap
typedef|;
DECL|function|AddDXGIToESEntry
specifier|inline
name|void
name|AddDXGIToESEntry
parameter_list|(
name|DXGIToESFormatMap
modifier|*
name|map
parameter_list|,
name|DXGI_FORMAT
name|key
parameter_list|,
name|GLenum
name|value
parameter_list|)
block|{
name|map
operator|->
name|insert
argument_list|(
name|std
operator|::
name|make_pair
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|function|BuildDXGIToESFormatMap
specifier|static
name|DXGIToESFormatMap
name|BuildDXGIToESFormatMap
parameter_list|()
block|{
name|DXGIToESFormatMap
name|map
decl_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|GL_NONE
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_A8_UNORM
argument_list|,
name|GL_ALPHA8_EXT
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R8_UNORM
argument_list|,
name|GL_R8
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R8G8_UNORM
argument_list|,
name|GL_RG8
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|GL_RGBA8
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM_SRGB
argument_list|,
name|GL_SRGB8_ALPHA8
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_B8G8R8A8_UNORM
argument_list|,
name|GL_BGRA8_EXT
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R8_SNORM
argument_list|,
name|GL_R8_SNORM
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R8G8_SNORM
argument_list|,
name|GL_RG8_SNORM
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_SNORM
argument_list|,
name|GL_RGBA8_SNORM
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R8_UINT
argument_list|,
name|GL_R8UI
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16_UINT
argument_list|,
name|GL_R16UI
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32_UINT
argument_list|,
name|GL_R32UI
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R8G8_UINT
argument_list|,
name|GL_RG8UI
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16G16_UINT
argument_list|,
name|GL_RG16UI
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32G32_UINT
argument_list|,
name|GL_RG32UI
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32G32B32_UINT
argument_list|,
name|GL_RGB32UI
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UINT
argument_list|,
name|GL_RGBA8UI
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_UINT
argument_list|,
name|GL_RGBA16UI
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_UINT
argument_list|,
name|GL_RGBA32UI
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R8_SINT
argument_list|,
name|GL_R8I
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16_SINT
argument_list|,
name|GL_R16I
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32_SINT
argument_list|,
name|GL_R32I
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R8G8_SINT
argument_list|,
name|GL_RG8I
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16G16_SINT
argument_list|,
name|GL_RG16I
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32G32_SINT
argument_list|,
name|GL_RG32I
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32G32B32_SINT
argument_list|,
name|GL_RGB32I
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_SINT
argument_list|,
name|GL_RGBA8I
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_SINT
argument_list|,
name|GL_RGBA16I
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_SINT
argument_list|,
name|GL_RGBA32I
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R10G10B10A2_UNORM
argument_list|,
name|GL_RGB10_A2
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R10G10B10A2_UINT
argument_list|,
name|GL_RGB10_A2UI
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16_FLOAT
argument_list|,
name|GL_R16F
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16G16_FLOAT
argument_list|,
name|GL_RG16F
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_FLOAT
argument_list|,
name|GL_RGBA16F
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32_FLOAT
argument_list|,
name|GL_R32F
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32G32_FLOAT
argument_list|,
name|GL_RG32F
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32G32B32_FLOAT
argument_list|,
name|GL_RGB32F
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
name|GL_RGBA32F
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R9G9B9E5_SHAREDEXP
argument_list|,
name|GL_RGB9_E5
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R11G11B10_FLOAT
argument_list|,
name|GL_R11F_G11F_B10F
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16_TYPELESS
argument_list|,
name|GL_DEPTH_COMPONENT16
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16_UNORM
argument_list|,
name|GL_DEPTH_COMPONENT16
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_D16_UNORM
argument_list|,
name|GL_DEPTH_COMPONENT16
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R24G8_TYPELESS
argument_list|,
name|GL_DEPTH24_STENCIL8_OES
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R24_UNORM_X8_TYPELESS
argument_list|,
name|GL_DEPTH24_STENCIL8_OES
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_D24_UNORM_S8_UINT
argument_list|,
name|GL_DEPTH24_STENCIL8_OES
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32G8X24_TYPELESS
argument_list|,
name|GL_DEPTH32F_STENCIL8
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32_FLOAT_X8X24_TYPELESS
argument_list|,
name|GL_DEPTH32F_STENCIL8
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_D32_FLOAT_S8X24_UINT
argument_list|,
name|GL_DEPTH32F_STENCIL8
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32_TYPELESS
argument_list|,
name|GL_DEPTH_COMPONENT32F
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_D32_FLOAT
argument_list|,
name|GL_DEPTH_COMPONENT32F
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_BC1_UNORM
argument_list|,
name|GL_COMPRESSED_RGBA_S3TC_DXT1_EXT
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_BC2_UNORM
argument_list|,
name|GL_COMPRESSED_RGBA_S3TC_DXT3_ANGLE
argument_list|)
expr_stmt|;
name|AddDXGIToESEntry
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_BC3_UNORM
argument_list|,
name|GL_COMPRESSED_RGBA_S3TC_DXT5_ANGLE
argument_list|)
expr_stmt|;
return|return
name|map
return|;
block|}
DECL|struct|D3D11FastCopyFormat
struct|struct
name|D3D11FastCopyFormat
block|{
DECL|member|destFormat
name|GLenum
name|destFormat
decl_stmt|;
DECL|member|destType
name|GLenum
name|destType
decl_stmt|;
DECL|member|copyFunction
name|ColorCopyFunction
name|copyFunction
decl_stmt|;
DECL|function|D3D11FastCopyFormat
name|D3D11FastCopyFormat
parameter_list|(
name|GLenum
name|destFormat
parameter_list|,
name|GLenum
name|destType
parameter_list|,
name|ColorCopyFunction
name|copyFunction
parameter_list|)
member_init_list|:
name|destFormat
argument_list|(
name|destFormat
argument_list|)
member_init_list|,
name|destType
argument_list|(
name|destType
argument_list|)
member_init_list|,
name|copyFunction
argument_list|(
name|copyFunction
argument_list|)
block|{ }
DECL|function|operator <
name|bool
name|operator
name|<
parameter_list|(
specifier|const
name|D3D11FastCopyFormat
modifier|&
name|other
parameter_list|)
specifier|const
block|{
return|return
name|memcmp
argument_list|(
name|this
argument_list|,
operator|&
name|other
argument_list|,
sizeof|sizeof
argument_list|(
name|D3D11FastCopyFormat
argument_list|)
argument_list|)
operator|<
literal|0
return|;
block|}
block|}
struct|;
DECL|typedef|D3D11FastCopyMap
typedef|typedef
name|std
operator|::
name|multimap
argument_list|<
name|DXGI_FORMAT
argument_list|,
name|D3D11FastCopyFormat
argument_list|>
name|D3D11FastCopyMap
typedef|;
DECL|function|BuildFastCopyMap
specifier|static
name|D3D11FastCopyMap
name|BuildFastCopyMap
parameter_list|()
block|{
name|D3D11FastCopyMap
name|map
decl_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|std
operator|::
name|make_pair
argument_list|(
name|DXGI_FORMAT_B8G8R8A8_UNORM
argument_list|,
name|D3D11FastCopyFormat
argument_list|(
name|GL_RGBA
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|CopyBGRA8ToRGBA8
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|map
return|;
block|}
DECL|struct|DXGIDepthStencilInfo
struct|struct
name|DXGIDepthStencilInfo
block|{
DECL|member|depthBits
name|unsigned
name|int
name|depthBits
decl_stmt|;
DECL|member|depthOffset
name|unsigned
name|int
name|depthOffset
decl_stmt|;
DECL|member|stencilBits
name|unsigned
name|int
name|stencilBits
decl_stmt|;
DECL|member|stencilOffset
name|unsigned
name|int
name|stencilOffset
decl_stmt|;
block|}
struct|;
DECL|typedef|DepthStencilInfoMap
typedef|typedef
name|std
operator|::
name|map
argument_list|<
name|DXGI_FORMAT
argument_list|,
name|DXGIDepthStencilInfo
argument_list|>
name|DepthStencilInfoMap
typedef|;
DECL|typedef|DepthStencilInfoPair
typedef|typedef
name|std
operator|::
name|pair
argument_list|<
name|DXGI_FORMAT
argument_list|,
name|DXGIDepthStencilInfo
argument_list|>
name|DepthStencilInfoPair
typedef|;
DECL|function|InsertDXGIDepthStencilInfo
specifier|static
specifier|inline
name|void
name|InsertDXGIDepthStencilInfo
parameter_list|(
name|DepthStencilInfoMap
modifier|*
name|map
parameter_list|,
name|DXGI_FORMAT
name|format
parameter_list|,
name|unsigned
name|int
name|depthBits
parameter_list|,
name|unsigned
name|int
name|depthOffset
parameter_list|,
name|unsigned
name|int
name|stencilBits
parameter_list|,
name|unsigned
name|int
name|stencilOffset
parameter_list|)
block|{
name|DXGIDepthStencilInfo
name|info
decl_stmt|;
name|info
operator|.
name|depthBits
operator|=
name|depthBits
expr_stmt|;
name|info
operator|.
name|depthOffset
operator|=
name|depthOffset
expr_stmt|;
name|info
operator|.
name|stencilBits
operator|=
name|stencilBits
expr_stmt|;
name|info
operator|.
name|stencilOffset
operator|=
name|stencilOffset
expr_stmt|;
name|map
operator|->
name|insert
argument_list|(
name|std
operator|::
name|make_pair
argument_list|(
name|format
argument_list|,
name|info
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|function|BuildDepthStencilInfoMap
specifier|static
name|DepthStencilInfoMap
name|BuildDepthStencilInfoMap
parameter_list|()
block|{
name|DepthStencilInfoMap
name|map
decl_stmt|;
name|InsertDXGIDepthStencilInfo
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16_TYPELESS
argument_list|,
literal|16
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|InsertDXGIDepthStencilInfo
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16_UNORM
argument_list|,
literal|16
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|InsertDXGIDepthStencilInfo
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_D16_UNORM
argument_list|,
literal|16
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|InsertDXGIDepthStencilInfo
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R24G8_TYPELESS
argument_list|,
literal|24
argument_list|,
literal|0
argument_list|,
literal|8
argument_list|,
literal|24
argument_list|)
expr_stmt|;
name|InsertDXGIDepthStencilInfo
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R24_UNORM_X8_TYPELESS
argument_list|,
literal|24
argument_list|,
literal|0
argument_list|,
literal|8
argument_list|,
literal|24
argument_list|)
expr_stmt|;
name|InsertDXGIDepthStencilInfo
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_D24_UNORM_S8_UINT
argument_list|,
literal|24
argument_list|,
literal|0
argument_list|,
literal|8
argument_list|,
literal|24
argument_list|)
expr_stmt|;
name|InsertDXGIDepthStencilInfo
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32_TYPELESS
argument_list|,
literal|32
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|InsertDXGIDepthStencilInfo
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32_FLOAT
argument_list|,
literal|32
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|InsertDXGIDepthStencilInfo
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_D32_FLOAT
argument_list|,
literal|32
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|InsertDXGIDepthStencilInfo
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32G8X24_TYPELESS
argument_list|,
literal|32
argument_list|,
literal|0
argument_list|,
literal|8
argument_list|,
literal|32
argument_list|)
expr_stmt|;
name|InsertDXGIDepthStencilInfo
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32_FLOAT_X8X24_TYPELESS
argument_list|,
literal|32
argument_list|,
literal|0
argument_list|,
literal|8
argument_list|,
literal|32
argument_list|)
expr_stmt|;
name|InsertDXGIDepthStencilInfo
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_D32_FLOAT_S8X24_UINT
argument_list|,
literal|32
argument_list|,
literal|0
argument_list|,
literal|8
argument_list|,
literal|32
argument_list|)
expr_stmt|;
return|return
name|map
return|;
block|}
DECL|typedef|DXGIFormatInfoMap
typedef|typedef
name|std
operator|::
name|map
argument_list|<
name|DXGI_FORMAT
argument_list|,
name|DXGIFormat
argument_list|>
name|DXGIFormatInfoMap
typedef|;
DECL|function|DXGIFormat
name|DXGIFormat
operator|::
name|DXGIFormat
parameter_list|()
member_init_list|:
name|pixelBytes
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|blockWidth
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|blockHeight
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|depthBits
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|depthOffset
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|stencilBits
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|stencilOffset
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|internalFormat
argument_list|(
name|GL_NONE
argument_list|)
member_init_list|,
name|componentType
argument_list|(
name|GL_NONE
argument_list|)
member_init_list|,
name|mipGenerationFunction
argument_list|(
name|NULL
argument_list|)
member_init_list|,
name|colorReadFunction
argument_list|(
name|NULL
argument_list|)
member_init_list|,
name|fastCopyFunctions
argument_list|()
block|{ }
DECL|function|getFastCopyFunction
name|ColorCopyFunction
name|DXGIFormat
operator|::
name|getFastCopyFunction
parameter_list|(
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|)
specifier|const
block|{
name|FastCopyFunctionMap
operator|::
name|const_iterator
name|iter
init|=
name|fastCopyFunctions
operator|.
name|find
argument_list|(
name|std
operator|::
name|make_pair
argument_list|(
name|format
argument_list|,
name|type
argument_list|)
argument_list|)
decl_stmt|;
return|return
operator|(
name|iter
operator|!=
name|fastCopyFunctions
operator|.
name|end
argument_list|()
operator|)
condition|?
name|iter
operator|->
name|second
else|:
name|NULL
return|;
block|}
DECL|function|AddDXGIFormat
name|void
name|AddDXGIFormat
parameter_list|(
name|DXGIFormatInfoMap
modifier|*
name|map
parameter_list|,
name|DXGI_FORMAT
name|dxgiFormat
parameter_list|,
name|GLuint
name|pixelBits
parameter_list|,
name|GLuint
name|blockWidth
parameter_list|,
name|GLuint
name|blockHeight
parameter_list|,
name|GLenum
name|componentType
parameter_list|,
name|MipGenerationFunction
name|mipFunc
parameter_list|,
name|ColorReadFunction
name|readFunc
parameter_list|)
block|{
name|DXGIFormat
name|info
decl_stmt|;
name|info
operator|.
name|pixelBytes
operator|=
name|pixelBits
operator|/
literal|8
expr_stmt|;
name|info
operator|.
name|blockWidth
operator|=
name|blockWidth
expr_stmt|;
name|info
operator|.
name|blockHeight
operator|=
name|blockHeight
expr_stmt|;
specifier|static
specifier|const
name|DepthStencilInfoMap
name|dsInfoMap
init|=
name|BuildDepthStencilInfoMap
argument_list|()
decl_stmt|;
name|DepthStencilInfoMap
operator|::
name|const_iterator
name|dsInfoIter
init|=
name|dsInfoMap
operator|.
name|find
argument_list|(
name|dxgiFormat
argument_list|)
decl_stmt|;
if|if
condition|(
name|dsInfoIter
operator|!=
name|dsInfoMap
operator|.
name|end
argument_list|()
condition|)
block|{
name|info
operator|.
name|depthBits
operator|=
name|dsInfoIter
operator|->
name|second
operator|.
name|depthBits
expr_stmt|;
name|info
operator|.
name|depthOffset
operator|=
name|dsInfoIter
operator|->
name|second
operator|.
name|depthOffset
expr_stmt|;
name|info
operator|.
name|stencilBits
operator|=
name|dsInfoIter
operator|->
name|second
operator|.
name|stencilBits
expr_stmt|;
name|info
operator|.
name|stencilOffset
operator|=
name|dsInfoIter
operator|->
name|second
operator|.
name|stencilOffset
expr_stmt|;
block|}
else|else
block|{
name|info
operator|.
name|depthBits
operator|=
literal|0
expr_stmt|;
name|info
operator|.
name|depthOffset
operator|=
literal|0
expr_stmt|;
name|info
operator|.
name|stencilBits
operator|=
literal|0
expr_stmt|;
name|info
operator|.
name|stencilOffset
operator|=
literal|0
expr_stmt|;
block|}
specifier|static
specifier|const
name|DXGIToESFormatMap
name|dxgiToESMap
init|=
name|BuildDXGIToESFormatMap
argument_list|()
decl_stmt|;
name|DXGIToESFormatMap
operator|::
name|const_iterator
name|dxgiToESIter
init|=
name|dxgiToESMap
operator|.
name|find
argument_list|(
name|dxgiFormat
argument_list|)
decl_stmt|;
name|info
operator|.
name|internalFormat
operator|=
operator|(
name|dxgiToESIter
operator|!=
name|dxgiToESMap
operator|.
name|end
argument_list|()
operator|)
condition|?
name|dxgiToESIter
operator|->
name|second
else|:
name|GL_NONE
expr_stmt|;
name|info
operator|.
name|componentType
operator|=
name|componentType
expr_stmt|;
name|info
operator|.
name|mipGenerationFunction
operator|=
name|mipFunc
expr_stmt|;
name|info
operator|.
name|colorReadFunction
operator|=
name|readFunc
expr_stmt|;
specifier|static
specifier|const
name|D3D11FastCopyMap
name|fastCopyMap
init|=
name|BuildFastCopyMap
argument_list|()
decl_stmt|;
name|std
operator|::
name|pair
argument_list|<
name|D3D11FastCopyMap
operator|::
name|const_iterator
argument_list|,
name|D3D11FastCopyMap
operator|::
name|const_iterator
argument_list|>
name|fastCopyIter
init|=
name|fastCopyMap
operator|.
name|equal_range
argument_list|(
name|dxgiFormat
argument_list|)
decl_stmt|;
for|for
control|(
name|D3D11FastCopyMap
operator|::
name|const_iterator
name|i
init|=
name|fastCopyIter
operator|.
name|first
init|;
name|i
operator|!=
name|fastCopyIter
operator|.
name|second
condition|;
name|i
operator|++
control|)
block|{
name|info
operator|.
name|fastCopyFunctions
operator|.
name|insert
argument_list|(
name|std
operator|::
name|make_pair
argument_list|(
name|std
operator|::
name|make_pair
argument_list|(
name|i
operator|->
name|second
operator|.
name|destFormat
argument_list|,
name|i
operator|->
name|second
operator|.
name|destType
argument_list|)
argument_list|,
name|i
operator|->
name|second
operator|.
name|copyFunction
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|map
operator|->
name|insert
argument_list|(
name|std
operator|::
name|make_pair
argument_list|(
name|dxgiFormat
argument_list|,
name|info
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// A map to determine the pixel size and mipmap generation function of a given DXGI format
DECL|function|BuildDXGIFormatInfoMap
specifier|static
name|DXGIFormatInfoMap
name|BuildDXGIFormatInfoMap
parameter_list|()
block|{
name|DXGIFormatInfoMap
name|map
decl_stmt|;
comment|//                | DXGI format                          |S   |W |H |Component Type         | Mip generation function   | Color read function
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|GL_NONE
argument_list|,
name|NULL
argument_list|,
name|NULL
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_A8_UNORM
argument_list|,
literal|8
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_UNSIGNED_NORMALIZED
argument_list|,
name|GenerateMip
argument_list|<
name|A8
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|A8
argument_list|,
name|GLfloat
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R8_UNORM
argument_list|,
literal|8
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_UNSIGNED_NORMALIZED
argument_list|,
name|GenerateMip
argument_list|<
name|R8
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R8
argument_list|,
name|GLfloat
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R8G8_UNORM
argument_list|,
literal|16
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_UNSIGNED_NORMALIZED
argument_list|,
name|GenerateMip
argument_list|<
name|R8G8
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R8G8
argument_list|,
name|GLfloat
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
literal|32
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_UNSIGNED_NORMALIZED
argument_list|,
name|GenerateMip
argument_list|<
name|R8G8B8A8
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R8G8B8A8
argument_list|,
name|GLfloat
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM_SRGB
argument_list|,
literal|32
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_UNSIGNED_NORMALIZED
argument_list|,
name|GenerateMip
argument_list|<
name|R8G8B8A8
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R8G8B8A8
argument_list|,
name|GLfloat
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_B8G8R8A8_UNORM
argument_list|,
literal|32
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_UNSIGNED_NORMALIZED
argument_list|,
name|GenerateMip
argument_list|<
name|B8G8R8A8
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|B8G8R8A8
argument_list|,
name|GLfloat
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R8_SNORM
argument_list|,
literal|8
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_SIGNED_NORMALIZED
argument_list|,
name|GenerateMip
argument_list|<
name|R8S
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R8S
argument_list|,
name|GLfloat
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R8G8_SNORM
argument_list|,
literal|16
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_SIGNED_NORMALIZED
argument_list|,
name|GenerateMip
argument_list|<
name|R8G8S
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R8G8S
argument_list|,
name|GLfloat
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_SNORM
argument_list|,
literal|32
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_SIGNED_NORMALIZED
argument_list|,
name|GenerateMip
argument_list|<
name|R8G8B8A8S
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R8G8B8A8S
argument_list|,
name|GLfloat
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R8_UINT
argument_list|,
literal|8
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|GenerateMip
argument_list|<
name|R8
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R8
argument_list|,
name|GLuint
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16_UINT
argument_list|,
literal|16
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|GenerateMip
argument_list|<
name|R16
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R16
argument_list|,
name|GLuint
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32_UINT
argument_list|,
literal|32
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|GenerateMip
argument_list|<
name|R32
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R32
argument_list|,
name|GLuint
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R8G8_UINT
argument_list|,
literal|16
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|GenerateMip
argument_list|<
name|R8G8
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R8G8
argument_list|,
name|GLuint
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16G16_UINT
argument_list|,
literal|32
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|GenerateMip
argument_list|<
name|R16G16
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R16G16
argument_list|,
name|GLuint
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32G32_UINT
argument_list|,
literal|64
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|GenerateMip
argument_list|<
name|R32G32
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R32G32
argument_list|,
name|GLuint
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32G32B32_UINT
argument_list|,
literal|96
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|GenerateMip
argument_list|<
name|R32G32B32
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R32G32B32
argument_list|,
name|GLuint
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UINT
argument_list|,
literal|32
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|GenerateMip
argument_list|<
name|R8G8B8A8
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R8G8B8A8
argument_list|,
name|GLuint
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_UINT
argument_list|,
literal|64
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|GenerateMip
argument_list|<
name|R16G16B16A16
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R16G16B16A16
argument_list|,
name|GLuint
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_UINT
argument_list|,
literal|128
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|GenerateMip
argument_list|<
name|R32G32B32A32
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R32G32B32A32
argument_list|,
name|GLuint
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R8_SINT
argument_list|,
literal|8
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_INT
argument_list|,
name|GenerateMip
argument_list|<
name|R8S
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R8S
argument_list|,
name|GLint
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16_SINT
argument_list|,
literal|16
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_INT
argument_list|,
name|GenerateMip
argument_list|<
name|R16S
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R16S
argument_list|,
name|GLint
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32_SINT
argument_list|,
literal|32
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_INT
argument_list|,
name|GenerateMip
argument_list|<
name|R32S
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R32S
argument_list|,
name|GLint
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R8G8_SINT
argument_list|,
literal|16
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_INT
argument_list|,
name|GenerateMip
argument_list|<
name|R8G8S
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R8G8S
argument_list|,
name|GLint
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16G16_SINT
argument_list|,
literal|32
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_INT
argument_list|,
name|GenerateMip
argument_list|<
name|R16G16S
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R16G16S
argument_list|,
name|GLint
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32G32_SINT
argument_list|,
literal|64
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_INT
argument_list|,
name|GenerateMip
argument_list|<
name|R32G32S
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R32G32S
argument_list|,
name|GLint
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32G32B32_SINT
argument_list|,
literal|96
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_INT
argument_list|,
name|GenerateMip
argument_list|<
name|R32G32B32S
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R32G32B32S
argument_list|,
name|GLint
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_SINT
argument_list|,
literal|32
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_INT
argument_list|,
name|GenerateMip
argument_list|<
name|R8G8B8A8S
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R8G8B8A8S
argument_list|,
name|GLint
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_SINT
argument_list|,
literal|64
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_INT
argument_list|,
name|GenerateMip
argument_list|<
name|R16G16B16A16S
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R16G16B16A16S
argument_list|,
name|GLint
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_SINT
argument_list|,
literal|128
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_INT
argument_list|,
name|GenerateMip
argument_list|<
name|R32G32B32A32S
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R32G32B32A32S
argument_list|,
name|GLint
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R10G10B10A2_UNORM
argument_list|,
literal|32
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_UNSIGNED_NORMALIZED
argument_list|,
name|GenerateMip
argument_list|<
name|R10G10B10A2
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R10G10B10A2
argument_list|,
name|GLfloat
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R10G10B10A2_UINT
argument_list|,
literal|32
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|GenerateMip
argument_list|<
name|R10G10B10A2
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R10G10B10A2
argument_list|,
name|GLuint
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16_FLOAT
argument_list|,
literal|16
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_FLOAT
argument_list|,
name|GenerateMip
argument_list|<
name|R16F
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R16F
argument_list|,
name|GLfloat
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16G16_FLOAT
argument_list|,
literal|32
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_FLOAT
argument_list|,
name|GenerateMip
argument_list|<
name|R16G16F
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R16G16F
argument_list|,
name|GLfloat
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_FLOAT
argument_list|,
literal|64
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_FLOAT
argument_list|,
name|GenerateMip
argument_list|<
name|R16G16B16A16F
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R16G16B16A16F
argument_list|,
name|GLfloat
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32_FLOAT
argument_list|,
literal|32
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_FLOAT
argument_list|,
name|GenerateMip
argument_list|<
name|R32F
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R32F
argument_list|,
name|GLfloat
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32G32_FLOAT
argument_list|,
literal|64
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_FLOAT
argument_list|,
name|GenerateMip
argument_list|<
name|R32G32F
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R32G32F
argument_list|,
name|GLfloat
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32G32B32_FLOAT
argument_list|,
literal|96
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_FLOAT
argument_list|,
name|NULL
argument_list|,
name|NULL
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
literal|128
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_FLOAT
argument_list|,
name|GenerateMip
argument_list|<
name|R32G32B32A32F
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R32G32B32A32F
argument_list|,
name|GLfloat
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R9G9B9E5_SHAREDEXP
argument_list|,
literal|32
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_FLOAT
argument_list|,
name|GenerateMip
argument_list|<
name|R9G9B9E5
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R9G9B9E5
argument_list|,
name|GLfloat
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R11G11B10_FLOAT
argument_list|,
literal|32
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_FLOAT
argument_list|,
name|GenerateMip
argument_list|<
name|R11G11B10F
argument_list|>
argument_list|,
name|ReadColor
argument_list|<
name|R11G11B10F
argument_list|,
name|GLfloat
argument_list|>
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16_TYPELESS
argument_list|,
literal|16
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_NONE
argument_list|,
name|NULL
argument_list|,
name|NULL
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16_UNORM
argument_list|,
literal|16
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_UNSIGNED_NORMALIZED
argument_list|,
name|NULL
argument_list|,
name|NULL
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_D16_UNORM
argument_list|,
literal|16
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_UNSIGNED_NORMALIZED
argument_list|,
name|NULL
argument_list|,
name|NULL
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R24G8_TYPELESS
argument_list|,
literal|32
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_NONE
argument_list|,
name|NULL
argument_list|,
name|NULL
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R24_UNORM_X8_TYPELESS
argument_list|,
literal|32
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_NONE
argument_list|,
name|NULL
argument_list|,
name|NULL
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_D24_UNORM_S8_UINT
argument_list|,
literal|32
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|NULL
argument_list|,
name|NULL
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32G8X24_TYPELESS
argument_list|,
literal|64
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_NONE
argument_list|,
name|NULL
argument_list|,
name|NULL
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32_FLOAT_X8X24_TYPELESS
argument_list|,
literal|64
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_NONE
argument_list|,
name|NULL
argument_list|,
name|NULL
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_D32_FLOAT_S8X24_UINT
argument_list|,
literal|64
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|NULL
argument_list|,
name|NULL
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R32_TYPELESS
argument_list|,
literal|32
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_NONE
argument_list|,
name|NULL
argument_list|,
name|NULL
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_D32_FLOAT
argument_list|,
literal|32
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_FLOAT
argument_list|,
name|NULL
argument_list|,
name|NULL
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_BC1_UNORM
argument_list|,
literal|64
argument_list|,
literal|4
argument_list|,
literal|4
argument_list|,
name|GL_UNSIGNED_NORMALIZED
argument_list|,
name|NULL
argument_list|,
name|NULL
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_BC2_UNORM
argument_list|,
literal|128
argument_list|,
literal|4
argument_list|,
literal|4
argument_list|,
name|GL_UNSIGNED_NORMALIZED
argument_list|,
name|NULL
argument_list|,
name|NULL
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_BC3_UNORM
argument_list|,
literal|128
argument_list|,
literal|4
argument_list|,
literal|4
argument_list|,
name|GL_UNSIGNED_NORMALIZED
argument_list|,
name|NULL
argument_list|,
name|NULL
argument_list|)
expr_stmt|;
comment|// Useful formats for vertex buffers
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16_UNORM
argument_list|,
literal|16
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_UNSIGNED_NORMALIZED
argument_list|,
name|NULL
argument_list|,
name|NULL
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16_SNORM
argument_list|,
literal|16
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_SIGNED_NORMALIZED
argument_list|,
name|NULL
argument_list|,
name|NULL
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16G16_UNORM
argument_list|,
literal|32
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_UNSIGNED_NORMALIZED
argument_list|,
name|NULL
argument_list|,
name|NULL
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16G16_SNORM
argument_list|,
literal|32
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_SIGNED_NORMALIZED
argument_list|,
name|NULL
argument_list|,
name|NULL
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_UNORM
argument_list|,
literal|64
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_UNSIGNED_NORMALIZED
argument_list|,
name|NULL
argument_list|,
name|NULL
argument_list|)
expr_stmt|;
name|AddDXGIFormat
argument_list|(
operator|&
name|map
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_SNORM
argument_list|,
literal|64
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|GL_SIGNED_NORMALIZED
argument_list|,
name|NULL
argument_list|,
name|NULL
argument_list|)
expr_stmt|;
return|return
name|map
return|;
block|}
DECL|function|GetDXGIFormatInfo
specifier|const
name|DXGIFormat
modifier|&
name|GetDXGIFormatInfo
parameter_list|(
name|DXGI_FORMAT
name|format
parameter_list|)
block|{
specifier|static
specifier|const
name|DXGIFormatInfoMap
name|infoMap
init|=
name|BuildDXGIFormatInfoMap
argument_list|()
decl_stmt|;
name|DXGIFormatInfoMap
operator|::
name|const_iterator
name|iter
init|=
name|infoMap
operator|.
name|find
argument_list|(
name|format
argument_list|)
decl_stmt|;
if|if
condition|(
name|iter
operator|!=
name|infoMap
operator|.
name|end
argument_list|()
condition|)
block|{
return|return
name|iter
operator|->
name|second
return|;
block|}
else|else
block|{
specifier|static
name|DXGIFormat
name|defaultInfo
decl_stmt|;
return|return
name|defaultInfo
return|;
block|}
block|}
DECL|struct|SwizzleSizeType
struct|struct
name|SwizzleSizeType
block|{
DECL|member|maxComponentSize
name|size_t
name|maxComponentSize
decl_stmt|;
DECL|member|componentType
name|GLenum
name|componentType
decl_stmt|;
DECL|function|SwizzleSizeType
name|SwizzleSizeType
parameter_list|()
member_init_list|:
name|maxComponentSize
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|componentType
argument_list|(
name|GL_NONE
argument_list|)
block|{ }
DECL|function|SwizzleSizeType
name|SwizzleSizeType
parameter_list|(
name|size_t
name|maxComponentSize
parameter_list|,
name|GLenum
name|componentType
parameter_list|)
member_init_list|:
name|maxComponentSize
argument_list|(
name|maxComponentSize
argument_list|)
member_init_list|,
name|componentType
argument_list|(
name|componentType
argument_list|)
block|{ }
DECL|function|operator <
name|bool
name|operator
name|<
parameter_list|(
specifier|const
name|SwizzleSizeType
modifier|&
name|other
parameter_list|)
specifier|const
block|{
return|return
operator|(
name|maxComponentSize
operator|!=
name|other
operator|.
name|maxComponentSize
operator|)
condition|?
operator|(
name|maxComponentSize
operator|<
name|other
operator|.
name|maxComponentSize
operator|)
else|:
operator|(
name|componentType
operator|<
name|other
operator|.
name|componentType
operator|)
return|;
block|}
block|}
struct|;
DECL|struct|SwizzleFormatInfo
struct|struct
name|SwizzleFormatInfo
block|{
DECL|member|mTexFormat
name|DXGI_FORMAT
name|mTexFormat
decl_stmt|;
DECL|member|mSRVFormat
name|DXGI_FORMAT
name|mSRVFormat
decl_stmt|;
DECL|member|mRTVFormat
name|DXGI_FORMAT
name|mRTVFormat
decl_stmt|;
DECL|function|SwizzleFormatInfo
name|SwizzleFormatInfo
parameter_list|()
member_init_list|:
name|mTexFormat
argument_list|(
name|DXGI_FORMAT_UNKNOWN
argument_list|)
member_init_list|,
name|mSRVFormat
argument_list|(
name|DXGI_FORMAT_UNKNOWN
argument_list|)
member_init_list|,
name|mRTVFormat
argument_list|(
name|DXGI_FORMAT_UNKNOWN
argument_list|)
block|{ }
DECL|function|SwizzleFormatInfo
name|SwizzleFormatInfo
parameter_list|(
name|DXGI_FORMAT
name|texFormat
parameter_list|,
name|DXGI_FORMAT
name|srvFormat
parameter_list|,
name|DXGI_FORMAT
name|rtvFormat
parameter_list|)
member_init_list|:
name|mTexFormat
argument_list|(
name|texFormat
argument_list|)
member_init_list|,
name|mSRVFormat
argument_list|(
name|srvFormat
argument_list|)
member_init_list|,
name|mRTVFormat
argument_list|(
name|rtvFormat
argument_list|)
block|{ }
block|}
struct|;
DECL|typedef|SwizzleInfoMap
typedef|typedef
name|std
operator|::
name|map
argument_list|<
name|SwizzleSizeType
argument_list|,
name|SwizzleFormatInfo
argument_list|>
name|SwizzleInfoMap
typedef|;
DECL|typedef|SwizzleInfoPair
typedef|typedef
name|std
operator|::
name|pair
argument_list|<
name|SwizzleSizeType
argument_list|,
name|SwizzleFormatInfo
argument_list|>
name|SwizzleInfoPair
typedef|;
DECL|function|BuildSwizzleInfoMap
specifier|static
name|SwizzleInfoMap
name|BuildSwizzleInfoMap
parameter_list|()
block|{
name|SwizzleInfoMap
name|map
decl_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|SwizzleInfoPair
argument_list|(
name|SwizzleSizeType
argument_list|(
literal|8
argument_list|,
name|GL_UNSIGNED_NORMALIZED
argument_list|)
argument_list|,
name|SwizzleFormatInfo
argument_list|(
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|SwizzleInfoPair
argument_list|(
name|SwizzleSizeType
argument_list|(
literal|16
argument_list|,
name|GL_UNSIGNED_NORMALIZED
argument_list|)
argument_list|,
name|SwizzleFormatInfo
argument_list|(
name|DXGI_FORMAT_R16G16B16A16_UNORM
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_UNORM
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_UNORM
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|SwizzleInfoPair
argument_list|(
name|SwizzleSizeType
argument_list|(
literal|24
argument_list|,
name|GL_UNSIGNED_NORMALIZED
argument_list|)
argument_list|,
name|SwizzleFormatInfo
argument_list|(
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|SwizzleInfoPair
argument_list|(
name|SwizzleSizeType
argument_list|(
literal|32
argument_list|,
name|GL_UNSIGNED_NORMALIZED
argument_list|)
argument_list|,
name|SwizzleFormatInfo
argument_list|(
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|SwizzleInfoPair
argument_list|(
name|SwizzleSizeType
argument_list|(
literal|8
argument_list|,
name|GL_SIGNED_NORMALIZED
argument_list|)
argument_list|,
name|SwizzleFormatInfo
argument_list|(
name|DXGI_FORMAT_R8G8B8A8_SNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_SNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_SNORM
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|SwizzleInfoPair
argument_list|(
name|SwizzleSizeType
argument_list|(
literal|16
argument_list|,
name|GL_FLOAT
argument_list|)
argument_list|,
name|SwizzleFormatInfo
argument_list|(
name|DXGI_FORMAT_R16G16B16A16_FLOAT
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_FLOAT
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_FLOAT
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|SwizzleInfoPair
argument_list|(
name|SwizzleSizeType
argument_list|(
literal|32
argument_list|,
name|GL_FLOAT
argument_list|)
argument_list|,
name|SwizzleFormatInfo
argument_list|(
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|SwizzleInfoPair
argument_list|(
name|SwizzleSizeType
argument_list|(
literal|8
argument_list|,
name|GL_UNSIGNED_INT
argument_list|)
argument_list|,
name|SwizzleFormatInfo
argument_list|(
name|DXGI_FORMAT_R8G8B8A8_UINT
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UINT
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UINT
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|SwizzleInfoPair
argument_list|(
name|SwizzleSizeType
argument_list|(
literal|16
argument_list|,
name|GL_UNSIGNED_INT
argument_list|)
argument_list|,
name|SwizzleFormatInfo
argument_list|(
name|DXGI_FORMAT_R16G16B16A16_UINT
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_UINT
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_UINT
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|SwizzleInfoPair
argument_list|(
name|SwizzleSizeType
argument_list|(
literal|32
argument_list|,
name|GL_UNSIGNED_INT
argument_list|)
argument_list|,
name|SwizzleFormatInfo
argument_list|(
name|DXGI_FORMAT_R32G32B32A32_UINT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_UINT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_UINT
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|SwizzleInfoPair
argument_list|(
name|SwizzleSizeType
argument_list|(
literal|8
argument_list|,
name|GL_INT
argument_list|)
argument_list|,
name|SwizzleFormatInfo
argument_list|(
name|DXGI_FORMAT_R8G8B8A8_SINT
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_SINT
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_SINT
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|SwizzleInfoPair
argument_list|(
name|SwizzleSizeType
argument_list|(
literal|16
argument_list|,
name|GL_INT
argument_list|)
argument_list|,
name|SwizzleFormatInfo
argument_list|(
name|DXGI_FORMAT_R16G16B16A16_SINT
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_SINT
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_SINT
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|SwizzleInfoPair
argument_list|(
name|SwizzleSizeType
argument_list|(
literal|32
argument_list|,
name|GL_INT
argument_list|)
argument_list|,
name|SwizzleFormatInfo
argument_list|(
name|DXGI_FORMAT_R32G32B32A32_SINT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_SINT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_SINT
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|map
return|;
block|}
DECL|typedef|InternalFormatInitializerPair
typedef|typedef
name|std
operator|::
name|pair
argument_list|<
name|GLint
argument_list|,
name|InitializeTextureDataFunction
argument_list|>
name|InternalFormatInitializerPair
typedef|;
DECL|typedef|InternalFormatInitializerMap
typedef|typedef
name|std
operator|::
name|map
argument_list|<
name|GLint
argument_list|,
name|InitializeTextureDataFunction
argument_list|>
name|InternalFormatInitializerMap
typedef|;
DECL|function|BuildInternalFormatInitializerMap
specifier|static
name|InternalFormatInitializerMap
name|BuildInternalFormatInitializerMap
parameter_list|()
block|{
name|InternalFormatInitializerMap
name|map
decl_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|InternalFormatInitializerPair
argument_list|(
name|GL_RGB8
argument_list|,
name|Initialize4ComponentData
argument_list|<
name|GLubyte
argument_list|,
literal|0x00
argument_list|,
literal|0x00
argument_list|,
literal|0x00
argument_list|,
literal|0xFF
argument_list|>
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|InternalFormatInitializerPair
argument_list|(
name|GL_RGB565
argument_list|,
name|Initialize4ComponentData
argument_list|<
name|GLubyte
argument_list|,
literal|0x00
argument_list|,
literal|0x00
argument_list|,
literal|0x00
argument_list|,
literal|0xFF
argument_list|>
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|InternalFormatInitializerPair
argument_list|(
name|GL_SRGB8
argument_list|,
name|Initialize4ComponentData
argument_list|<
name|GLubyte
argument_list|,
literal|0x00
argument_list|,
literal|0x00
argument_list|,
literal|0x00
argument_list|,
literal|0xFF
argument_list|>
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|InternalFormatInitializerPair
argument_list|(
name|GL_RGB16F
argument_list|,
name|Initialize4ComponentData
argument_list|<
name|GLhalf
argument_list|,
literal|0x0000
argument_list|,
literal|0x0000
argument_list|,
literal|0x0000
argument_list|,
name|gl
operator|::
name|Float16One
argument_list|>
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|InternalFormatInitializerPair
argument_list|(
name|GL_RGB32F
argument_list|,
name|Initialize4ComponentData
argument_list|<
name|GLfloat
argument_list|,
literal|0x00000000
argument_list|,
literal|0x00000000
argument_list|,
literal|0x00000000
argument_list|,
name|gl
operator|::
name|Float32One
argument_list|>
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|InternalFormatInitializerPair
argument_list|(
name|GL_RGB8UI
argument_list|,
name|Initialize4ComponentData
argument_list|<
name|GLubyte
argument_list|,
literal|0x00
argument_list|,
literal|0x00
argument_list|,
literal|0x00
argument_list|,
literal|0x01
argument_list|>
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|InternalFormatInitializerPair
argument_list|(
name|GL_RGB8I
argument_list|,
name|Initialize4ComponentData
argument_list|<
name|GLbyte
argument_list|,
literal|0x00
argument_list|,
literal|0x00
argument_list|,
literal|0x00
argument_list|,
literal|0x01
argument_list|>
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|InternalFormatInitializerPair
argument_list|(
name|GL_RGB16UI
argument_list|,
name|Initialize4ComponentData
argument_list|<
name|GLushort
argument_list|,
literal|0x0000
argument_list|,
literal|0x0000
argument_list|,
literal|0x0000
argument_list|,
literal|0x0001
argument_list|>
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|InternalFormatInitializerPair
argument_list|(
name|GL_RGB16I
argument_list|,
name|Initialize4ComponentData
argument_list|<
name|GLshort
argument_list|,
literal|0x0000
argument_list|,
literal|0x0000
argument_list|,
literal|0x0000
argument_list|,
literal|0x0001
argument_list|>
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|InternalFormatInitializerPair
argument_list|(
name|GL_RGB32UI
argument_list|,
name|Initialize4ComponentData
argument_list|<
name|GLuint
argument_list|,
literal|0x00000000
argument_list|,
literal|0x00000000
argument_list|,
literal|0x00000000
argument_list|,
literal|0x00000001
argument_list|>
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|InternalFormatInitializerPair
argument_list|(
name|GL_RGB32I
argument_list|,
name|Initialize4ComponentData
argument_list|<
name|GLint
argument_list|,
literal|0x00000000
argument_list|,
literal|0x00000000
argument_list|,
literal|0x00000000
argument_list|,
literal|0x00000001
argument_list|>
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|map
return|;
block|}
comment|// ES3 image loading functions vary based on the internal format and data type given,
comment|// this map type determines the loading function from the internal format and type supplied
comment|// to glTex*Image*D and the destination DXGI_FORMAT. Source formats and types are taken from
comment|// Tables 3.2 and 3.3 of the ES 3 spec.
DECL|typedef|TypeLoadFunctionPair
typedef|typedef
name|std
operator|::
name|pair
argument_list|<
name|GLenum
argument_list|,
name|LoadImageFunction
argument_list|>
name|TypeLoadFunctionPair
typedef|;
DECL|typedef|D3D11LoadFunctionMap
typedef|typedef
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|std
operator|::
name|vector
argument_list|<
name|TypeLoadFunctionPair
argument_list|>
argument_list|>
name|D3D11LoadFunctionMap
typedef|;
DECL|function|UnimplementedLoadFunction
specifier|static
name|void
name|UnimplementedLoadFunction
parameter_list|(
name|size_t
name|width
parameter_list|,
name|size_t
name|height
parameter_list|,
name|size_t
name|depth
parameter_list|,
specifier|const
name|uint8_t
modifier|*
name|input
parameter_list|,
name|size_t
name|inputRowPitch
parameter_list|,
name|size_t
name|inputDepthPitch
parameter_list|,
name|uint8_t
modifier|*
name|output
parameter_list|,
name|size_t
name|outputRowPitch
parameter_list|,
name|size_t
name|outputDepthPitch
parameter_list|)
block|{
name|UNIMPLEMENTED
argument_list|()
expr_stmt|;
block|}
DECL|function|UnreachableLoadFunction
specifier|static
name|void
name|UnreachableLoadFunction
parameter_list|(
name|size_t
name|width
parameter_list|,
name|size_t
name|height
parameter_list|,
name|size_t
name|depth
parameter_list|,
specifier|const
name|uint8_t
modifier|*
name|input
parameter_list|,
name|size_t
name|inputRowPitch
parameter_list|,
name|size_t
name|inputDepthPitch
parameter_list|,
name|uint8_t
modifier|*
name|output
parameter_list|,
name|size_t
name|outputRowPitch
parameter_list|,
name|size_t
name|outputDepthPitch
parameter_list|)
block|{
name|UNREACHABLE
argument_list|()
expr_stmt|;
block|}
comment|// A helper function to insert data into the D3D11LoadFunctionMap with fewer characters.
DECL|function|InsertLoadFunction
specifier|static
specifier|inline
name|void
name|InsertLoadFunction
parameter_list|(
name|D3D11LoadFunctionMap
modifier|*
name|map
parameter_list|,
name|GLenum
name|internalFormat
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|LoadImageFunction
name|loadFunc
parameter_list|)
block|{
operator|(
operator|*
name|map
operator|)
index|[
name|internalFormat
index|]
operator|.
name|push_back
argument_list|(
name|TypeLoadFunctionPair
argument_list|(
name|type
argument_list|,
name|loadFunc
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|function|BuildD3D11LoadFunctionMap
name|D3D11LoadFunctionMap
name|BuildD3D11LoadFunctionMap
parameter_list|()
block|{
name|D3D11LoadFunctionMap
name|map
decl_stmt|;
comment|//                      | Internal format      | Type                             | Load function                       |
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGBA8
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|LoadToNative
argument_list|<
name|GLubyte
argument_list|,
literal|4
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB5_A1
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|LoadToNative
argument_list|<
name|GLubyte
argument_list|,
literal|4
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGBA4
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|LoadToNative
argument_list|<
name|GLubyte
argument_list|,
literal|4
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_SRGB8_ALPHA8
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|LoadToNative
argument_list|<
name|GLubyte
argument_list|,
literal|4
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGBA8_SNORM
argument_list|,
name|GL_BYTE
argument_list|,
name|LoadToNative
argument_list|<
name|GLbyte
argument_list|,
literal|4
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGBA4
argument_list|,
name|GL_UNSIGNED_SHORT_4_4_4_4
argument_list|,
name|LoadRGBA4ToRGBA8
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB10_A2
argument_list|,
name|GL_UNSIGNED_INT_2_10_10_10_REV
argument_list|,
name|LoadToNative
argument_list|<
name|GLuint
argument_list|,
literal|1
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB5_A1
argument_list|,
name|GL_UNSIGNED_SHORT_5_5_5_1
argument_list|,
name|LoadRGB5A1ToRGBA8
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB5_A1
argument_list|,
name|GL_UNSIGNED_INT_2_10_10_10_REV
argument_list|,
name|LoadRGB10A2ToRGBA8
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGBA16F
argument_list|,
name|GL_HALF_FLOAT
argument_list|,
name|LoadToNative
argument_list|<
name|GLhalf
argument_list|,
literal|4
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGBA16F
argument_list|,
name|GL_HALF_FLOAT_OES
argument_list|,
name|LoadToNative
argument_list|<
name|GLhalf
argument_list|,
literal|4
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGBA32F
argument_list|,
name|GL_FLOAT
argument_list|,
name|LoadToNative
argument_list|<
name|GLfloat
argument_list|,
literal|4
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGBA16F
argument_list|,
name|GL_FLOAT
argument_list|,
name|Load32FTo16F
argument_list|<
literal|4
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGBA8UI
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|LoadToNative
argument_list|<
name|GLubyte
argument_list|,
literal|4
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGBA8I
argument_list|,
name|GL_BYTE
argument_list|,
name|LoadToNative
argument_list|<
name|GLbyte
argument_list|,
literal|4
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGBA16UI
argument_list|,
name|GL_UNSIGNED_SHORT
argument_list|,
name|LoadToNative
argument_list|<
name|GLushort
argument_list|,
literal|4
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGBA16I
argument_list|,
name|GL_SHORT
argument_list|,
name|LoadToNative
argument_list|<
name|GLshort
argument_list|,
literal|4
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGBA32UI
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|LoadToNative
argument_list|<
name|GLuint
argument_list|,
literal|4
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGBA32I
argument_list|,
name|GL_INT
argument_list|,
name|LoadToNative
argument_list|<
name|GLint
argument_list|,
literal|4
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB10_A2UI
argument_list|,
name|GL_UNSIGNED_INT_2_10_10_10_REV
argument_list|,
name|LoadToNative
argument_list|<
name|GLuint
argument_list|,
literal|1
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB8
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|LoadToNative3To4
argument_list|<
name|GLubyte
argument_list|,
literal|0xFF
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB565
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|LoadToNative3To4
argument_list|<
name|GLubyte
argument_list|,
literal|0xFF
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_SRGB8
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|LoadToNative3To4
argument_list|<
name|GLubyte
argument_list|,
literal|0xFF
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB8_SNORM
argument_list|,
name|GL_BYTE
argument_list|,
name|LoadToNative3To4
argument_list|<
name|GLbyte
argument_list|,
literal|0x7F
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB565
argument_list|,
name|GL_UNSIGNED_SHORT_5_6_5
argument_list|,
name|LoadR5G6B5ToRGBA8
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_R11F_G11F_B10F
argument_list|,
name|GL_UNSIGNED_INT_10F_11F_11F_REV
argument_list|,
name|LoadToNative
argument_list|<
name|GLuint
argument_list|,
literal|1
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB9_E5
argument_list|,
name|GL_UNSIGNED_INT_5_9_9_9_REV
argument_list|,
name|LoadToNative
argument_list|<
name|GLuint
argument_list|,
literal|1
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB16F
argument_list|,
name|GL_HALF_FLOAT
argument_list|,
name|LoadToNative3To4
argument_list|<
name|GLhalf
argument_list|,
name|gl
operator|::
name|Float16One
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB16F
argument_list|,
name|GL_HALF_FLOAT_OES
argument_list|,
name|LoadToNative3To4
argument_list|<
name|GLhalf
argument_list|,
name|gl
operator|::
name|Float16One
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_R11F_G11F_B10F
argument_list|,
name|GL_HALF_FLOAT
argument_list|,
name|LoadRGB16FToRG11B10F
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_R11F_G11F_B10F
argument_list|,
name|GL_HALF_FLOAT_OES
argument_list|,
name|LoadRGB16FToRG11B10F
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB9_E5
argument_list|,
name|GL_HALF_FLOAT
argument_list|,
name|LoadRGB16FToRGB9E5
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB9_E5
argument_list|,
name|GL_HALF_FLOAT_OES
argument_list|,
name|LoadRGB16FToRGB9E5
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB32F
argument_list|,
name|GL_FLOAT
argument_list|,
name|LoadToNative3To4
argument_list|<
name|GLfloat
argument_list|,
name|gl
operator|::
name|Float32One
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB16F
argument_list|,
name|GL_FLOAT
argument_list|,
name|LoadRGB32FToRGBA16F
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_R11F_G11F_B10F
argument_list|,
name|GL_FLOAT
argument_list|,
name|LoadRGB32FToRG11B10F
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB9_E5
argument_list|,
name|GL_FLOAT
argument_list|,
name|LoadRGB32FToRGB9E5
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB8UI
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|LoadToNative3To4
argument_list|<
name|GLubyte
argument_list|,
literal|0x01
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB8I
argument_list|,
name|GL_BYTE
argument_list|,
name|LoadToNative3To4
argument_list|<
name|GLbyte
argument_list|,
literal|0x01
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB16UI
argument_list|,
name|GL_UNSIGNED_SHORT
argument_list|,
name|LoadToNative3To4
argument_list|<
name|GLushort
argument_list|,
literal|0x0001
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB16I
argument_list|,
name|GL_SHORT
argument_list|,
name|LoadToNative3To4
argument_list|<
name|GLshort
argument_list|,
literal|0x0001
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB32UI
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|LoadToNative3To4
argument_list|<
name|GLuint
argument_list|,
literal|0x00000001
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB32I
argument_list|,
name|GL_INT
argument_list|,
name|LoadToNative3To4
argument_list|<
name|GLint
argument_list|,
literal|0x00000001
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RG8
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|LoadToNative
argument_list|<
name|GLubyte
argument_list|,
literal|2
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RG8_SNORM
argument_list|,
name|GL_BYTE
argument_list|,
name|LoadToNative
argument_list|<
name|GLbyte
argument_list|,
literal|2
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RG16F
argument_list|,
name|GL_HALF_FLOAT
argument_list|,
name|LoadToNative
argument_list|<
name|GLhalf
argument_list|,
literal|2
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RG16F
argument_list|,
name|GL_HALF_FLOAT_OES
argument_list|,
name|LoadToNative
argument_list|<
name|GLhalf
argument_list|,
literal|2
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RG32F
argument_list|,
name|GL_FLOAT
argument_list|,
name|LoadToNative
argument_list|<
name|GLfloat
argument_list|,
literal|2
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RG16F
argument_list|,
name|GL_FLOAT
argument_list|,
name|Load32FTo16F
argument_list|<
literal|2
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RG8UI
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|LoadToNative
argument_list|<
name|GLubyte
argument_list|,
literal|2
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RG8I
argument_list|,
name|GL_BYTE
argument_list|,
name|LoadToNative
argument_list|<
name|GLbyte
argument_list|,
literal|2
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RG16UI
argument_list|,
name|GL_UNSIGNED_SHORT
argument_list|,
name|LoadToNative
argument_list|<
name|GLushort
argument_list|,
literal|2
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RG16I
argument_list|,
name|GL_SHORT
argument_list|,
name|LoadToNative
argument_list|<
name|GLshort
argument_list|,
literal|2
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RG32UI
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|LoadToNative
argument_list|<
name|GLuint
argument_list|,
literal|2
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RG32I
argument_list|,
name|GL_INT
argument_list|,
name|LoadToNative
argument_list|<
name|GLint
argument_list|,
literal|2
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_R8
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|LoadToNative
argument_list|<
name|GLubyte
argument_list|,
literal|1
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_R8_SNORM
argument_list|,
name|GL_BYTE
argument_list|,
name|LoadToNative
argument_list|<
name|GLbyte
argument_list|,
literal|1
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_R16F
argument_list|,
name|GL_HALF_FLOAT
argument_list|,
name|LoadToNative
argument_list|<
name|GLhalf
argument_list|,
literal|1
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_R16F
argument_list|,
name|GL_HALF_FLOAT_OES
argument_list|,
name|LoadToNative
argument_list|<
name|GLhalf
argument_list|,
literal|1
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_R32F
argument_list|,
name|GL_FLOAT
argument_list|,
name|LoadToNative
argument_list|<
name|GLfloat
argument_list|,
literal|1
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_R16F
argument_list|,
name|GL_FLOAT
argument_list|,
name|Load32FTo16F
argument_list|<
literal|1
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_R8UI
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|LoadToNative
argument_list|<
name|GLubyte
argument_list|,
literal|1
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_R8I
argument_list|,
name|GL_BYTE
argument_list|,
name|LoadToNative
argument_list|<
name|GLbyte
argument_list|,
literal|1
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_R16UI
argument_list|,
name|GL_UNSIGNED_SHORT
argument_list|,
name|LoadToNative
argument_list|<
name|GLushort
argument_list|,
literal|1
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_R16I
argument_list|,
name|GL_SHORT
argument_list|,
name|LoadToNative
argument_list|<
name|GLshort
argument_list|,
literal|1
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_R32UI
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|LoadToNative
argument_list|<
name|GLuint
argument_list|,
literal|1
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_R32I
argument_list|,
name|GL_INT
argument_list|,
name|LoadToNative
argument_list|<
name|GLint
argument_list|,
literal|1
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_DEPTH_COMPONENT16
argument_list|,
name|GL_UNSIGNED_SHORT
argument_list|,
name|LoadToNative
argument_list|<
name|GLushort
argument_list|,
literal|1
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_DEPTH_COMPONENT24
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|LoadR32ToR24G8
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_DEPTH_COMPONENT16
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|LoadR32ToR16
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_DEPTH_COMPONENT32F
argument_list|,
name|GL_FLOAT
argument_list|,
name|LoadToNative
argument_list|<
name|GLfloat
argument_list|,
literal|1
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_DEPTH24_STENCIL8
argument_list|,
name|GL_UNSIGNED_INT_24_8
argument_list|,
name|LoadR32ToR24G8
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_DEPTH32F_STENCIL8
argument_list|,
name|GL_FLOAT_32_UNSIGNED_INT_24_8_REV
argument_list|,
name|LoadToNative
argument_list|<
name|GLuint
argument_list|,
literal|2
argument_list|>
argument_list|)
expr_stmt|;
comment|// Unsized formats
comment|// Load functions are unreachable because they are converted to sized internal formats based on
comment|// the format and type before loading takes place.
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGBA
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|UnreachableLoadFunction
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGBA
argument_list|,
name|GL_UNSIGNED_SHORT_4_4_4_4
argument_list|,
name|UnreachableLoadFunction
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGBA
argument_list|,
name|GL_UNSIGNED_SHORT_5_5_5_1
argument_list|,
name|UnreachableLoadFunction
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|UnreachableLoadFunction
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB
argument_list|,
name|GL_UNSIGNED_SHORT_5_6_5
argument_list|,
name|UnreachableLoadFunction
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_LUMINANCE_ALPHA
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|UnreachableLoadFunction
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_LUMINANCE
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|UnreachableLoadFunction
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_ALPHA
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|UnreachableLoadFunction
argument_list|)
expr_stmt|;
comment|// From GL_OES_texture_float
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_LUMINANCE_ALPHA
argument_list|,
name|GL_FLOAT
argument_list|,
name|LoadLA32FToRGBA32F
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_LUMINANCE
argument_list|,
name|GL_FLOAT
argument_list|,
name|LoadL32FToRGBA32F
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_ALPHA
argument_list|,
name|GL_FLOAT
argument_list|,
name|LoadA32FToRGBA32F
argument_list|)
expr_stmt|;
comment|// From GL_OES_texture_half_float
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_LUMINANCE_ALPHA
argument_list|,
name|GL_HALF_FLOAT
argument_list|,
name|LoadLA16FToRGBA16F
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_LUMINANCE_ALPHA
argument_list|,
name|GL_HALF_FLOAT_OES
argument_list|,
name|LoadLA16FToRGBA16F
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_LUMINANCE
argument_list|,
name|GL_HALF_FLOAT
argument_list|,
name|LoadL16FToRGBA16F
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_LUMINANCE
argument_list|,
name|GL_HALF_FLOAT_OES
argument_list|,
name|LoadL16FToRGBA16F
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_ALPHA
argument_list|,
name|GL_HALF_FLOAT
argument_list|,
name|LoadA16FToRGBA16F
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_ALPHA
argument_list|,
name|GL_HALF_FLOAT_OES
argument_list|,
name|LoadA16FToRGBA16F
argument_list|)
expr_stmt|;
comment|// From GL_EXT_texture_storage
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_ALPHA8_EXT
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|LoadA8ToRGBA8
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_LUMINANCE8_EXT
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|LoadL8ToRGBA8
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_LUMINANCE8_ALPHA8_EXT
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|LoadLA8ToRGBA8
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_ALPHA32F_EXT
argument_list|,
name|GL_FLOAT
argument_list|,
name|LoadA32FToRGBA32F
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_LUMINANCE32F_EXT
argument_list|,
name|GL_FLOAT
argument_list|,
name|LoadL32FToRGBA32F
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_LUMINANCE_ALPHA32F_EXT
argument_list|,
name|GL_FLOAT
argument_list|,
name|LoadLA32FToRGBA32F
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_ALPHA16F_EXT
argument_list|,
name|GL_HALF_FLOAT
argument_list|,
name|LoadA16FToRGBA16F
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_ALPHA16F_EXT
argument_list|,
name|GL_HALF_FLOAT_OES
argument_list|,
name|LoadA16FToRGBA16F
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_LUMINANCE16F_EXT
argument_list|,
name|GL_HALF_FLOAT
argument_list|,
name|LoadL16FToRGBA16F
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_LUMINANCE16F_EXT
argument_list|,
name|GL_HALF_FLOAT_OES
argument_list|,
name|LoadL16FToRGBA16F
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_LUMINANCE_ALPHA16F_EXT
argument_list|,
name|GL_HALF_FLOAT
argument_list|,
name|LoadLA16FToRGBA16F
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_LUMINANCE_ALPHA16F_EXT
argument_list|,
name|GL_HALF_FLOAT_OES
argument_list|,
name|LoadLA16FToRGBA16F
argument_list|)
expr_stmt|;
comment|// From GL_ANGLE_depth_texture
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_DEPTH_COMPONENT32_OES
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|LoadR32ToR24G8
argument_list|)
expr_stmt|;
comment|// From GL_EXT_texture_format_BGRA8888
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_BGRA8_EXT
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|LoadToNative
argument_list|<
name|GLubyte
argument_list|,
literal|4
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_BGRA4_ANGLEX
argument_list|,
name|GL_UNSIGNED_SHORT_4_4_4_4_REV_EXT
argument_list|,
name|LoadRGBA4ToRGBA8
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_BGRA4_ANGLEX
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|LoadToNative
argument_list|<
name|GLubyte
argument_list|,
literal|4
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_BGR5_A1_ANGLEX
argument_list|,
name|GL_UNSIGNED_SHORT_1_5_5_5_REV_EXT
argument_list|,
name|LoadRGB5A1ToRGBA8
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_BGR5_A1_ANGLEX
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|LoadToNative
argument_list|<
name|GLubyte
argument_list|,
literal|4
argument_list|>
argument_list|)
expr_stmt|;
comment|// Compressed formats
comment|// From ES 3.0.1 spec, table 3.16
comment|//                      | Internal format                             | Type            | Load function                  |
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_COMPRESSED_R11_EAC
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|UnimplementedLoadFunction
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_COMPRESSED_R11_EAC
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|UnimplementedLoadFunction
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_COMPRESSED_SIGNED_R11_EAC
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|UnimplementedLoadFunction
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_COMPRESSED_RG11_EAC
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|UnimplementedLoadFunction
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_COMPRESSED_SIGNED_RG11_EAC
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|UnimplementedLoadFunction
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_COMPRESSED_RGB8_ETC2
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|UnimplementedLoadFunction
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_COMPRESSED_SRGB8_ETC2
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|UnimplementedLoadFunction
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|UnimplementedLoadFunction
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|UnimplementedLoadFunction
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_COMPRESSED_RGBA8_ETC2_EAC
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|UnimplementedLoadFunction
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|UnimplementedLoadFunction
argument_list|)
expr_stmt|;
comment|// From GL_EXT_texture_compression_dxt1
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_COMPRESSED_RGB_S3TC_DXT1_EXT
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|LoadCompressedToNative
argument_list|<
literal|4
argument_list|,
literal|4
argument_list|,
literal|8
argument_list|>
argument_list|)
expr_stmt|;
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_COMPRESSED_RGBA_S3TC_DXT1_EXT
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|LoadCompressedToNative
argument_list|<
literal|4
argument_list|,
literal|4
argument_list|,
literal|8
argument_list|>
argument_list|)
expr_stmt|;
comment|// From GL_ANGLE_texture_compression_dxt3
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_COMPRESSED_RGBA_S3TC_DXT3_ANGLE
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|LoadCompressedToNative
argument_list|<
literal|4
argument_list|,
literal|4
argument_list|,
literal|16
argument_list|>
argument_list|)
expr_stmt|;
comment|// From GL_ANGLE_texture_compression_dxt5
name|InsertLoadFunction
argument_list|(
operator|&
name|map
argument_list|,
name|GL_COMPRESSED_RGBA_S3TC_DXT5_ANGLE
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|LoadCompressedToNative
argument_list|<
literal|4
argument_list|,
literal|4
argument_list|,
literal|16
argument_list|>
argument_list|)
expr_stmt|;
return|return
name|map
return|;
block|}
comment|// For sized GL internal formats, there is only one corresponding D3D11 format. This map type allows
comment|// querying for the DXGI texture formats to use for textures, SRVs, RTVs and DSVs given a GL internal
comment|// format.
DECL|typedef|D3D11ES3FormatMap
typedef|typedef
name|std
operator|::
name|map
argument_list|<
name|GLenum
argument_list|,
name|TextureFormat
argument_list|>
name|D3D11ES3FormatMap
typedef|;
DECL|function|TextureFormat
name|TextureFormat
operator|::
name|TextureFormat
parameter_list|()
member_init_list|:
name|texFormat
argument_list|(
name|DXGI_FORMAT_UNKNOWN
argument_list|)
member_init_list|,
name|srvFormat
argument_list|(
name|DXGI_FORMAT_UNKNOWN
argument_list|)
member_init_list|,
name|rtvFormat
argument_list|(
name|DXGI_FORMAT_UNKNOWN
argument_list|)
member_init_list|,
name|dsvFormat
argument_list|(
name|DXGI_FORMAT_UNKNOWN
argument_list|)
member_init_list|,
name|renderFormat
argument_list|(
name|DXGI_FORMAT_UNKNOWN
argument_list|)
member_init_list|,
name|swizzleTexFormat
argument_list|(
name|DXGI_FORMAT_UNKNOWN
argument_list|)
member_init_list|,
name|swizzleSRVFormat
argument_list|(
name|DXGI_FORMAT_UNKNOWN
argument_list|)
member_init_list|,
name|swizzleRTVFormat
argument_list|(
name|DXGI_FORMAT_UNKNOWN
argument_list|)
member_init_list|,
name|dataInitializerFunction
argument_list|(
name|NULL
argument_list|)
member_init_list|,
name|loadFunctions
argument_list|()
block|{ }
DECL|function|InsertD3D11FormatInfo
specifier|static
specifier|inline
name|void
name|InsertD3D11FormatInfo
parameter_list|(
name|D3D11ES3FormatMap
modifier|*
name|map
parameter_list|,
name|GLenum
name|internalFormat
parameter_list|,
name|DXGI_FORMAT
name|texFormat
parameter_list|,
name|DXGI_FORMAT
name|srvFormat
parameter_list|,
name|DXGI_FORMAT
name|rtvFormat
parameter_list|,
name|DXGI_FORMAT
name|dsvFormat
parameter_list|)
block|{
name|TextureFormat
name|info
decl_stmt|;
name|info
operator|.
name|texFormat
operator|=
name|texFormat
expr_stmt|;
name|info
operator|.
name|srvFormat
operator|=
name|srvFormat
expr_stmt|;
name|info
operator|.
name|rtvFormat
operator|=
name|rtvFormat
expr_stmt|;
name|info
operator|.
name|dsvFormat
operator|=
name|dsvFormat
expr_stmt|;
comment|// Given a GL internal format, the renderFormat is the DSV format if it is depth- or stencil-renderable,
comment|// the RTV format if it is color-renderable, and the (nonrenderable) texture format otherwise.
if|if
condition|(
name|dsvFormat
operator|!=
name|DXGI_FORMAT_UNKNOWN
condition|)
block|{
name|info
operator|.
name|renderFormat
operator|=
name|dsvFormat
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|rtvFormat
operator|!=
name|DXGI_FORMAT_UNKNOWN
condition|)
block|{
name|info
operator|.
name|renderFormat
operator|=
name|rtvFormat
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|texFormat
operator|!=
name|DXGI_FORMAT_UNKNOWN
condition|)
block|{
name|info
operator|.
name|renderFormat
operator|=
name|texFormat
expr_stmt|;
block|}
else|else
block|{
name|info
operator|.
name|renderFormat
operator|=
name|DXGI_FORMAT_UNKNOWN
expr_stmt|;
block|}
comment|// Compute the swizzle formats
specifier|const
name|gl
operator|::
name|InternalFormat
modifier|&
name|formatInfo
init|=
name|gl
operator|::
name|GetInternalFormatInfo
argument_list|(
name|internalFormat
argument_list|)
decl_stmt|;
if|if
condition|(
name|internalFormat
operator|!=
name|GL_NONE
operator|&&
name|formatInfo
operator|.
name|pixelBytes
operator|>
literal|0
condition|)
block|{
if|if
condition|(
name|formatInfo
operator|.
name|componentCount
operator|!=
literal|4
operator|||
name|texFormat
operator|==
name|DXGI_FORMAT_UNKNOWN
operator|||
name|srvFormat
operator|==
name|DXGI_FORMAT_UNKNOWN
operator|||
name|rtvFormat
operator|==
name|DXGI_FORMAT_UNKNOWN
condition|)
block|{
comment|// Get the maximum sized component
name|unsigned
name|int
name|maxBits
init|=
literal|1
decl_stmt|;
if|if
condition|(
name|formatInfo
operator|.
name|compressed
condition|)
block|{
name|unsigned
name|int
name|compressedBitsPerBlock
init|=
name|formatInfo
operator|.
name|pixelBytes
operator|*
literal|8
decl_stmt|;
name|unsigned
name|int
name|blockSize
init|=
name|formatInfo
operator|.
name|compressedBlockWidth
operator|*
name|formatInfo
operator|.
name|compressedBlockHeight
decl_stmt|;
name|maxBits
operator|=
name|std
operator|::
name|max
argument_list|(
name|compressedBitsPerBlock
operator|/
name|blockSize
argument_list|,
name|maxBits
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|maxBits
operator|=
name|std
operator|::
name|max
argument_list|(
name|maxBits
argument_list|,
name|formatInfo
operator|.
name|alphaBits
argument_list|)
expr_stmt|;
name|maxBits
operator|=
name|std
operator|::
name|max
argument_list|(
name|maxBits
argument_list|,
name|formatInfo
operator|.
name|redBits
argument_list|)
expr_stmt|;
name|maxBits
operator|=
name|std
operator|::
name|max
argument_list|(
name|maxBits
argument_list|,
name|formatInfo
operator|.
name|greenBits
argument_list|)
expr_stmt|;
name|maxBits
operator|=
name|std
operator|::
name|max
argument_list|(
name|maxBits
argument_list|,
name|formatInfo
operator|.
name|blueBits
argument_list|)
expr_stmt|;
name|maxBits
operator|=
name|std
operator|::
name|max
argument_list|(
name|maxBits
argument_list|,
name|formatInfo
operator|.
name|luminanceBits
argument_list|)
expr_stmt|;
name|maxBits
operator|=
name|std
operator|::
name|max
argument_list|(
name|maxBits
argument_list|,
name|formatInfo
operator|.
name|depthBits
argument_list|)
expr_stmt|;
block|}
name|maxBits
operator|=
name|roundUp
argument_list|(
name|maxBits
argument_list|,
literal|8U
argument_list|)
expr_stmt|;
specifier|static
specifier|const
name|SwizzleInfoMap
name|swizzleMap
init|=
name|BuildSwizzleInfoMap
argument_list|()
decl_stmt|;
name|SwizzleInfoMap
operator|::
name|const_iterator
name|swizzleIter
init|=
name|swizzleMap
operator|.
name|find
argument_list|(
name|SwizzleSizeType
argument_list|(
name|maxBits
argument_list|,
name|formatInfo
operator|.
name|componentType
argument_list|)
argument_list|)
decl_stmt|;
name|ASSERT
argument_list|(
name|swizzleIter
operator|!=
name|swizzleMap
operator|.
name|end
argument_list|()
argument_list|)
expr_stmt|;
specifier|const
name|SwizzleFormatInfo
modifier|&
name|swizzleInfo
init|=
name|swizzleIter
operator|->
name|second
decl_stmt|;
name|info
operator|.
name|swizzleTexFormat
operator|=
name|swizzleInfo
operator|.
name|mTexFormat
expr_stmt|;
name|info
operator|.
name|swizzleSRVFormat
operator|=
name|swizzleInfo
operator|.
name|mSRVFormat
expr_stmt|;
name|info
operator|.
name|swizzleRTVFormat
operator|=
name|swizzleInfo
operator|.
name|mRTVFormat
expr_stmt|;
block|}
else|else
block|{
comment|// The original texture format is suitable for swizzle operations
name|info
operator|.
name|swizzleTexFormat
operator|=
name|texFormat
expr_stmt|;
name|info
operator|.
name|swizzleSRVFormat
operator|=
name|srvFormat
expr_stmt|;
name|info
operator|.
name|swizzleRTVFormat
operator|=
name|rtvFormat
expr_stmt|;
block|}
block|}
else|else
block|{
comment|// Not possible to swizzle with this texture format since it is either unsized or GL_NONE
name|info
operator|.
name|swizzleTexFormat
operator|=
name|DXGI_FORMAT_UNKNOWN
expr_stmt|;
name|info
operator|.
name|swizzleSRVFormat
operator|=
name|DXGI_FORMAT_UNKNOWN
expr_stmt|;
name|info
operator|.
name|swizzleRTVFormat
operator|=
name|DXGI_FORMAT_UNKNOWN
expr_stmt|;
block|}
comment|// Check if there is an initialization function for this texture format
specifier|static
specifier|const
name|InternalFormatInitializerMap
name|initializerMap
init|=
name|BuildInternalFormatInitializerMap
argument_list|()
decl_stmt|;
name|InternalFormatInitializerMap
operator|::
name|const_iterator
name|initializerIter
init|=
name|initializerMap
operator|.
name|find
argument_list|(
name|internalFormat
argument_list|)
decl_stmt|;
name|info
operator|.
name|dataInitializerFunction
operator|=
operator|(
name|initializerIter
operator|!=
name|initializerMap
operator|.
name|end
argument_list|()
operator|)
condition|?
name|initializerIter
operator|->
name|second
else|:
name|NULL
expr_stmt|;
comment|// Gather all the load functions for this internal format
specifier|static
specifier|const
name|D3D11LoadFunctionMap
name|loadFunctions
init|=
name|BuildD3D11LoadFunctionMap
argument_list|()
decl_stmt|;
name|D3D11LoadFunctionMap
operator|::
name|const_iterator
name|loadFunctionIter
init|=
name|loadFunctions
operator|.
name|find
argument_list|(
name|internalFormat
argument_list|)
decl_stmt|;
if|if
condition|(
name|loadFunctionIter
operator|!=
name|loadFunctions
operator|.
name|end
argument_list|()
condition|)
block|{
specifier|const
name|std
operator|::
name|vector
argument_list|<
name|TypeLoadFunctionPair
argument_list|>
modifier|&
name|loadFunctionVector
init|=
name|loadFunctionIter
operator|->
name|second
decl_stmt|;
for|for
control|(
name|size_t
name|i
init|=
literal|0
init|;
name|i
operator|<
name|loadFunctionVector
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|GLenum
name|type
init|=
name|loadFunctionVector
index|[
name|i
index|]
operator|.
name|first
decl_stmt|;
name|LoadImageFunction
name|function
init|=
name|loadFunctionVector
index|[
name|i
index|]
operator|.
name|second
decl_stmt|;
name|info
operator|.
name|loadFunctions
operator|.
name|insert
argument_list|(
name|std
operator|::
name|make_pair
argument_list|(
name|type
argument_list|,
name|function
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|map
operator|->
name|insert
argument_list|(
name|std
operator|::
name|make_pair
argument_list|(
name|internalFormat
argument_list|,
name|info
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|function|BuildD3D11FormatMap
specifier|static
name|D3D11ES3FormatMap
name|BuildD3D11FormatMap
parameter_list|()
block|{
name|D3D11ES3FormatMap
name|map
decl_stmt|;
comment|//                         | GL internal format  | D3D11 texture format            | D3D11 SRV format               | D3D11 RTV format               | D3D11 DSV format   |
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_NONE
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_R8
argument_list|,
name|DXGI_FORMAT_R8_UNORM
argument_list|,
name|DXGI_FORMAT_R8_UNORM
argument_list|,
name|DXGI_FORMAT_R8_UNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_R8_SNORM
argument_list|,
name|DXGI_FORMAT_R8_SNORM
argument_list|,
name|DXGI_FORMAT_R8_SNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RG8
argument_list|,
name|DXGI_FORMAT_R8G8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8_UNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RG8_SNORM
argument_list|,
name|DXGI_FORMAT_R8G8_SNORM
argument_list|,
name|DXGI_FORMAT_R8G8_SNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB8
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB8_SNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_SNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_SNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB565
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGBA4
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB5_A1
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGBA8
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGBA8_SNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_SNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_SNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB10_A2
argument_list|,
name|DXGI_FORMAT_R10G10B10A2_UNORM
argument_list|,
name|DXGI_FORMAT_R10G10B10A2_UNORM
argument_list|,
name|DXGI_FORMAT_R10G10B10A2_UNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB10_A2UI
argument_list|,
name|DXGI_FORMAT_R10G10B10A2_UINT
argument_list|,
name|DXGI_FORMAT_R10G10B10A2_UINT
argument_list|,
name|DXGI_FORMAT_R10G10B10A2_UINT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_SRGB8
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM_SRGB
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM_SRGB
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_SRGB8_ALPHA8
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM_SRGB
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM_SRGB
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM_SRGB
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_R16F
argument_list|,
name|DXGI_FORMAT_R16_FLOAT
argument_list|,
name|DXGI_FORMAT_R16_FLOAT
argument_list|,
name|DXGI_FORMAT_R16_FLOAT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RG16F
argument_list|,
name|DXGI_FORMAT_R16G16_FLOAT
argument_list|,
name|DXGI_FORMAT_R16G16_FLOAT
argument_list|,
name|DXGI_FORMAT_R16G16_FLOAT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB16F
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_FLOAT
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_FLOAT
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_FLOAT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGBA16F
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_FLOAT
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_FLOAT
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_FLOAT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_R32F
argument_list|,
name|DXGI_FORMAT_R32_FLOAT
argument_list|,
name|DXGI_FORMAT_R32_FLOAT
argument_list|,
name|DXGI_FORMAT_R32_FLOAT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RG32F
argument_list|,
name|DXGI_FORMAT_R32G32_FLOAT
argument_list|,
name|DXGI_FORMAT_R32G32_FLOAT
argument_list|,
name|DXGI_FORMAT_R32G32_FLOAT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB32F
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGBA32F
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_R11F_G11F_B10F
argument_list|,
name|DXGI_FORMAT_R11G11B10_FLOAT
argument_list|,
name|DXGI_FORMAT_R11G11B10_FLOAT
argument_list|,
name|DXGI_FORMAT_R11G11B10_FLOAT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB9_E5
argument_list|,
name|DXGI_FORMAT_R9G9B9E5_SHAREDEXP
argument_list|,
name|DXGI_FORMAT_R9G9B9E5_SHAREDEXP
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_R8I
argument_list|,
name|DXGI_FORMAT_R8_SINT
argument_list|,
name|DXGI_FORMAT_R8_SINT
argument_list|,
name|DXGI_FORMAT_R8_SINT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_R8UI
argument_list|,
name|DXGI_FORMAT_R8_UINT
argument_list|,
name|DXGI_FORMAT_R8_UINT
argument_list|,
name|DXGI_FORMAT_R8_UINT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_R16I
argument_list|,
name|DXGI_FORMAT_R16_SINT
argument_list|,
name|DXGI_FORMAT_R16_SINT
argument_list|,
name|DXGI_FORMAT_R16_SINT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_R16UI
argument_list|,
name|DXGI_FORMAT_R16_UINT
argument_list|,
name|DXGI_FORMAT_R16_UINT
argument_list|,
name|DXGI_FORMAT_R16_UINT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_R32I
argument_list|,
name|DXGI_FORMAT_R32_SINT
argument_list|,
name|DXGI_FORMAT_R32_SINT
argument_list|,
name|DXGI_FORMAT_R32_SINT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_R32UI
argument_list|,
name|DXGI_FORMAT_R32_UINT
argument_list|,
name|DXGI_FORMAT_R32_UINT
argument_list|,
name|DXGI_FORMAT_R32_UINT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RG8I
argument_list|,
name|DXGI_FORMAT_R8G8_SINT
argument_list|,
name|DXGI_FORMAT_R8G8_SINT
argument_list|,
name|DXGI_FORMAT_R8G8_SINT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RG8UI
argument_list|,
name|DXGI_FORMAT_R8G8_UINT
argument_list|,
name|DXGI_FORMAT_R8G8_UINT
argument_list|,
name|DXGI_FORMAT_R8G8_UINT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RG16I
argument_list|,
name|DXGI_FORMAT_R16G16_SINT
argument_list|,
name|DXGI_FORMAT_R16G16_SINT
argument_list|,
name|DXGI_FORMAT_R16G16_SINT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RG16UI
argument_list|,
name|DXGI_FORMAT_R16G16_UINT
argument_list|,
name|DXGI_FORMAT_R16G16_UINT
argument_list|,
name|DXGI_FORMAT_R16G16_UINT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RG32I
argument_list|,
name|DXGI_FORMAT_R32G32_SINT
argument_list|,
name|DXGI_FORMAT_R32G32_SINT
argument_list|,
name|DXGI_FORMAT_R32G32_SINT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RG32UI
argument_list|,
name|DXGI_FORMAT_R32G32_UINT
argument_list|,
name|DXGI_FORMAT_R32G32_UINT
argument_list|,
name|DXGI_FORMAT_R32G32_UINT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB8I
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_SINT
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_SINT
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_SINT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB8UI
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UINT
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UINT
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UINT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB16I
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_SINT
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_SINT
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_SINT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB16UI
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_UINT
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_UINT
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_UINT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB32I
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_SINT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_SINT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_SINT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB32UI
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_UINT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_UINT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_UINT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGBA8I
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_SINT
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_SINT
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_SINT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGBA8UI
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UINT
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UINT
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UINT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGBA16I
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_SINT
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_SINT
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_SINT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGBA16UI
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_UINT
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_UINT
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_UINT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGBA32I
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_SINT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_SINT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_SINT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGBA32UI
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_UINT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_UINT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_UINT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
comment|// Unsized formats, TODO: Are types of float and half float allowed for the unsized types? Would it change the DXGI format?
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_ALPHA
argument_list|,
name|DXGI_FORMAT_A8_UNORM
argument_list|,
name|DXGI_FORMAT_A8_UNORM
argument_list|,
name|DXGI_FORMAT_A8_UNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_LUMINANCE
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_LUMINANCE_ALPHA
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGB
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_RGBA
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_BGRA_EXT
argument_list|,
name|DXGI_FORMAT_B8G8R8A8_UNORM
argument_list|,
name|DXGI_FORMAT_B8G8R8A8_UNORM
argument_list|,
name|DXGI_FORMAT_B8G8R8A8_UNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
comment|// From GL_EXT_texture_storage
comment|//                           | GL internal format     | D3D11 texture format          | D3D11 SRV format                    | D3D11 RTV format              | D3D11 DSV format               |
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_ALPHA8_EXT
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_LUMINANCE8_EXT
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_ALPHA32F_EXT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_LUMINANCE32F_EXT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_ALPHA16F_EXT
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_FLOAT
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_FLOAT
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_FLOAT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_LUMINANCE16F_EXT
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_FLOAT
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_FLOAT
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_FLOAT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_LUMINANCE8_ALPHA8_EXT
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_LUMINANCE_ALPHA32F_EXT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_LUMINANCE_ALPHA16F_EXT
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_FLOAT
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_FLOAT
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_FLOAT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_BGRA8_EXT
argument_list|,
name|DXGI_FORMAT_B8G8R8A8_UNORM
argument_list|,
name|DXGI_FORMAT_B8G8R8A8_UNORM
argument_list|,
name|DXGI_FORMAT_B8G8R8A8_UNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_BGRA4_ANGLEX
argument_list|,
name|DXGI_FORMAT_B8G8R8A8_UNORM
argument_list|,
name|DXGI_FORMAT_B8G8R8A8_UNORM
argument_list|,
name|DXGI_FORMAT_B8G8R8A8_UNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_BGR5_A1_ANGLEX
argument_list|,
name|DXGI_FORMAT_B8G8R8A8_UNORM
argument_list|,
name|DXGI_FORMAT_B8G8R8A8_UNORM
argument_list|,
name|DXGI_FORMAT_B8G8R8A8_UNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
comment|// Depth stencil formats
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_DEPTH_COMPONENT16
argument_list|,
name|DXGI_FORMAT_R16_TYPELESS
argument_list|,
name|DXGI_FORMAT_R16_UNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_D16_UNORM
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_DEPTH_COMPONENT24
argument_list|,
name|DXGI_FORMAT_R24G8_TYPELESS
argument_list|,
name|DXGI_FORMAT_R24_UNORM_X8_TYPELESS
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_D24_UNORM_S8_UINT
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_DEPTH_COMPONENT32F
argument_list|,
name|DXGI_FORMAT_R32_TYPELESS
argument_list|,
name|DXGI_FORMAT_R32_FLOAT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_D32_FLOAT
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_DEPTH24_STENCIL8
argument_list|,
name|DXGI_FORMAT_R24G8_TYPELESS
argument_list|,
name|DXGI_FORMAT_R24_UNORM_X8_TYPELESS
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_D24_UNORM_S8_UINT
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_DEPTH32F_STENCIL8
argument_list|,
name|DXGI_FORMAT_R32G8X24_TYPELESS
argument_list|,
name|DXGI_FORMAT_R32_FLOAT_X8X24_TYPELESS
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_D32_FLOAT_S8X24_UINT
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_STENCIL_INDEX8
argument_list|,
name|DXGI_FORMAT_R24G8_TYPELESS
argument_list|,
name|DXGI_FORMAT_X24_TYPELESS_G8_UINT
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_D24_UNORM_S8_UINT
argument_list|)
expr_stmt|;
comment|// From GL_ANGLE_depth_texture
comment|// Since D3D11 doesn't have a D32_UNORM format, use D24S8 which has comparable precision and matches the ES3 format.
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_DEPTH_COMPONENT32_OES
argument_list|,
name|DXGI_FORMAT_R24G8_TYPELESS
argument_list|,
name|DXGI_FORMAT_R24_UNORM_X8_TYPELESS
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_D24_UNORM_S8_UINT
argument_list|)
expr_stmt|;
comment|// Compressed formats, From ES 3.0.1 spec, table 3.16
comment|//                           | GL internal format                        | D3D11 texture format | D3D11 SRV format     | D3D11 RTV format   | D3D11 DSV format  |
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_COMPRESSED_R11_EAC
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_COMPRESSED_SIGNED_R11_EAC
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_COMPRESSED_RG11_EAC
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_COMPRESSED_SIGNED_RG11_EAC
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_COMPRESSED_RGB8_ETC2
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_COMPRESSED_SRGB8_ETC2
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_COMPRESSED_RGBA8_ETC2_EAC
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
comment|// From GL_EXT_texture_compression_dxt1
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_COMPRESSED_RGB_S3TC_DXT1_EXT
argument_list|,
name|DXGI_FORMAT_BC1_UNORM
argument_list|,
name|DXGI_FORMAT_BC1_UNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_COMPRESSED_RGBA_S3TC_DXT1_EXT
argument_list|,
name|DXGI_FORMAT_BC1_UNORM
argument_list|,
name|DXGI_FORMAT_BC1_UNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
comment|// From GL_ANGLE_texture_compression_dxt3
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_COMPRESSED_RGBA_S3TC_DXT3_ANGLE
argument_list|,
name|DXGI_FORMAT_BC2_UNORM
argument_list|,
name|DXGI_FORMAT_BC2_UNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
comment|// From GL_ANGLE_texture_compression_dxt5
name|InsertD3D11FormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_COMPRESSED_RGBA_S3TC_DXT5_ANGLE
argument_list|,
name|DXGI_FORMAT_BC3_UNORM
argument_list|,
name|DXGI_FORMAT_BC3_UNORM
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|,
name|DXGI_FORMAT_UNKNOWN
argument_list|)
expr_stmt|;
return|return
name|map
return|;
block|}
DECL|function|GetTextureFormatInfo
specifier|const
name|TextureFormat
modifier|&
name|GetTextureFormatInfo
parameter_list|(
name|GLenum
name|internalFormat
parameter_list|)
block|{
specifier|static
specifier|const
name|D3D11ES3FormatMap
name|formatMap
init|=
name|BuildD3D11FormatMap
argument_list|()
decl_stmt|;
name|D3D11ES3FormatMap
operator|::
name|const_iterator
name|iter
init|=
name|formatMap
operator|.
name|find
argument_list|(
name|internalFormat
argument_list|)
decl_stmt|;
if|if
condition|(
name|iter
operator|!=
name|formatMap
operator|.
name|end
argument_list|()
condition|)
block|{
return|return
name|iter
operator|->
name|second
return|;
block|}
else|else
block|{
specifier|static
specifier|const
name|TextureFormat
name|defaultInfo
decl_stmt|;
return|return
name|defaultInfo
return|;
block|}
block|}
DECL|typedef|D3D11VertexFormatInfoMap
typedef|typedef
name|std
operator|::
name|map
argument_list|<
name|gl
operator|::
name|VertexFormat
argument_list|,
name|VertexFormat
argument_list|>
name|D3D11VertexFormatInfoMap
typedef|;
DECL|typedef|D3D11VertexFormatPair
typedef|typedef
name|std
operator|::
name|pair
argument_list|<
name|gl
operator|::
name|VertexFormat
argument_list|,
name|VertexFormat
argument_list|>
name|D3D11VertexFormatPair
typedef|;
DECL|function|VertexFormat
name|VertexFormat
operator|::
name|VertexFormat
parameter_list|()
member_init_list|:
name|conversionType
argument_list|(
name|VERTEX_CONVERT_NONE
argument_list|)
member_init_list|,
name|nativeFormat
argument_list|(
name|DXGI_FORMAT_UNKNOWN
argument_list|)
member_init_list|,
name|copyFunction
argument_list|(
name|NULL
argument_list|)
block|{ }
DECL|function|AddVertexFormatInfo
specifier|static
name|void
name|AddVertexFormatInfo
parameter_list|(
name|D3D11VertexFormatInfoMap
modifier|*
name|map
parameter_list|,
name|GLenum
name|inputType
parameter_list|,
name|GLboolean
name|normalized
parameter_list|,
name|GLuint
name|componentCount
parameter_list|,
name|VertexConversionType
name|conversionType
parameter_list|,
name|DXGI_FORMAT
name|nativeFormat
parameter_list|,
name|VertexCopyFunction
name|copyFunction
parameter_list|)
block|{
name|gl
operator|::
name|VertexFormat
name|inputFormat
argument_list|(
name|inputType
argument_list|,
name|normalized
argument_list|,
name|componentCount
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|VertexFormat
name|info
decl_stmt|;
name|info
operator|.
name|conversionType
operator|=
name|conversionType
expr_stmt|;
name|info
operator|.
name|nativeFormat
operator|=
name|nativeFormat
expr_stmt|;
name|info
operator|.
name|copyFunction
operator|=
name|copyFunction
expr_stmt|;
name|map
operator|->
name|insert
argument_list|(
name|D3D11VertexFormatPair
argument_list|(
name|inputFormat
argument_list|,
name|info
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|function|AddIntegerVertexFormatInfo
specifier|static
name|void
name|AddIntegerVertexFormatInfo
parameter_list|(
name|D3D11VertexFormatInfoMap
modifier|*
name|map
parameter_list|,
name|GLenum
name|inputType
parameter_list|,
name|GLuint
name|componentCount
parameter_list|,
name|VertexConversionType
name|conversionType
parameter_list|,
name|DXGI_FORMAT
name|nativeFormat
parameter_list|,
name|VertexCopyFunction
name|copyFunction
parameter_list|)
block|{
name|gl
operator|::
name|VertexFormat
name|inputFormat
argument_list|(
name|inputType
argument_list|,
name|GL_FALSE
argument_list|,
name|componentCount
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|VertexFormat
name|info
decl_stmt|;
name|info
operator|.
name|conversionType
operator|=
name|conversionType
expr_stmt|;
name|info
operator|.
name|nativeFormat
operator|=
name|nativeFormat
expr_stmt|;
name|info
operator|.
name|copyFunction
operator|=
name|copyFunction
expr_stmt|;
name|map
operator|->
name|insert
argument_list|(
name|D3D11VertexFormatPair
argument_list|(
name|inputFormat
argument_list|,
name|info
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|function|BuildD3D11VertexFormatInfoMap
specifier|static
name|D3D11VertexFormatInfoMap
name|BuildD3D11VertexFormatInfoMap
parameter_list|()
block|{
name|D3D11VertexFormatInfoMap
name|map
decl_stmt|;
comment|// TODO: column legend
comment|//
comment|// Float formats
comment|//
comment|// GL_BYTE -- un-normalized
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_BYTE
argument_list|,
name|GL_FALSE
argument_list|,
literal|1
argument_list|,
name|VERTEX_CONVERT_GPU
argument_list|,
name|DXGI_FORMAT_R8_SINT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLbyte
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_BYTE
argument_list|,
name|GL_FALSE
argument_list|,
literal|2
argument_list|,
name|VERTEX_CONVERT_GPU
argument_list|,
name|DXGI_FORMAT_R8G8_SINT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLbyte
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_BYTE
argument_list|,
name|GL_FALSE
argument_list|,
literal|3
argument_list|,
name|VERTEX_CONVERT_BOTH
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_SINT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLbyte
argument_list|,
literal|3
argument_list|,
literal|1
argument_list|>
argument_list|)
expr_stmt|;
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_BYTE
argument_list|,
name|GL_FALSE
argument_list|,
literal|4
argument_list|,
name|VERTEX_CONVERT_GPU
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_SINT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLbyte
argument_list|,
literal|4
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
comment|// GL_BYTE -- normalized
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_BYTE
argument_list|,
name|GL_TRUE
argument_list|,
literal|1
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R8_SNORM
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLbyte
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_BYTE
argument_list|,
name|GL_TRUE
argument_list|,
literal|2
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R8G8_SNORM
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLbyte
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_BYTE
argument_list|,
name|GL_TRUE
argument_list|,
literal|3
argument_list|,
name|VERTEX_CONVERT_CPU
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_SNORM
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLbyte
argument_list|,
literal|3
argument_list|,
name|INT8_MAX
argument_list|>
argument_list|)
expr_stmt|;
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_BYTE
argument_list|,
name|GL_TRUE
argument_list|,
literal|4
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_SNORM
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLbyte
argument_list|,
literal|4
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
comment|// GL_UNSIGNED_BYTE -- un-normalized
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|GL_FALSE
argument_list|,
literal|1
argument_list|,
name|VERTEX_CONVERT_GPU
argument_list|,
name|DXGI_FORMAT_R8_UINT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLubyte
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|GL_FALSE
argument_list|,
literal|2
argument_list|,
name|VERTEX_CONVERT_GPU
argument_list|,
name|DXGI_FORMAT_R8G8_UINT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLubyte
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|GL_FALSE
argument_list|,
literal|3
argument_list|,
name|VERTEX_CONVERT_BOTH
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UINT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLubyte
argument_list|,
literal|3
argument_list|,
literal|1
argument_list|>
argument_list|)
expr_stmt|;
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|GL_FALSE
argument_list|,
literal|4
argument_list|,
name|VERTEX_CONVERT_GPU
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UINT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLubyte
argument_list|,
literal|4
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
comment|// GL_UNSIGNED_BYTE -- normalized
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|GL_TRUE
argument_list|,
literal|1
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R8_UNORM
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLubyte
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|GL_TRUE
argument_list|,
literal|2
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R8G8_UNORM
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLubyte
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|GL_TRUE
argument_list|,
literal|3
argument_list|,
name|VERTEX_CONVERT_CPU
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLubyte
argument_list|,
literal|3
argument_list|,
name|UINT8_MAX
argument_list|>
argument_list|)
expr_stmt|;
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
name|GL_TRUE
argument_list|,
literal|4
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UNORM
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLubyte
argument_list|,
literal|4
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
comment|// GL_SHORT -- un-normalized
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_SHORT
argument_list|,
name|GL_FALSE
argument_list|,
literal|1
argument_list|,
name|VERTEX_CONVERT_GPU
argument_list|,
name|DXGI_FORMAT_R16_SINT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLshort
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_SHORT
argument_list|,
name|GL_FALSE
argument_list|,
literal|2
argument_list|,
name|VERTEX_CONVERT_GPU
argument_list|,
name|DXGI_FORMAT_R16G16_SINT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLshort
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_SHORT
argument_list|,
name|GL_FALSE
argument_list|,
literal|3
argument_list|,
name|VERTEX_CONVERT_BOTH
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_SINT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLshort
argument_list|,
literal|4
argument_list|,
literal|1
argument_list|>
argument_list|)
expr_stmt|;
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_SHORT
argument_list|,
name|GL_FALSE
argument_list|,
literal|4
argument_list|,
name|VERTEX_CONVERT_GPU
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_SINT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLshort
argument_list|,
literal|4
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
comment|// GL_SHORT -- normalized
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_SHORT
argument_list|,
name|GL_TRUE
argument_list|,
literal|1
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R16_SNORM
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLshort
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_SHORT
argument_list|,
name|GL_TRUE
argument_list|,
literal|2
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R16G16_SNORM
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLshort
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_SHORT
argument_list|,
name|GL_TRUE
argument_list|,
literal|3
argument_list|,
name|VERTEX_CONVERT_CPU
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_SNORM
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLshort
argument_list|,
literal|3
argument_list|,
name|INT16_MAX
argument_list|>
argument_list|)
expr_stmt|;
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_SHORT
argument_list|,
name|GL_TRUE
argument_list|,
literal|4
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_SNORM
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLshort
argument_list|,
literal|4
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
comment|// GL_UNSIGNED_SHORT -- un-normalized
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_SHORT
argument_list|,
name|GL_FALSE
argument_list|,
literal|1
argument_list|,
name|VERTEX_CONVERT_GPU
argument_list|,
name|DXGI_FORMAT_R16_UINT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLushort
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_SHORT
argument_list|,
name|GL_FALSE
argument_list|,
literal|2
argument_list|,
name|VERTEX_CONVERT_GPU
argument_list|,
name|DXGI_FORMAT_R16G16_UINT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLushort
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_SHORT
argument_list|,
name|GL_FALSE
argument_list|,
literal|3
argument_list|,
name|VERTEX_CONVERT_BOTH
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_UINT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLushort
argument_list|,
literal|3
argument_list|,
literal|1
argument_list|>
argument_list|)
expr_stmt|;
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_SHORT
argument_list|,
name|GL_FALSE
argument_list|,
literal|4
argument_list|,
name|VERTEX_CONVERT_GPU
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_UINT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLushort
argument_list|,
literal|4
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
comment|// GL_UNSIGNED_SHORT -- normalized
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_SHORT
argument_list|,
name|GL_TRUE
argument_list|,
literal|1
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R16_UNORM
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLushort
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_SHORT
argument_list|,
name|GL_TRUE
argument_list|,
literal|2
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R16G16_UNORM
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLushort
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_SHORT
argument_list|,
name|GL_TRUE
argument_list|,
literal|3
argument_list|,
name|VERTEX_CONVERT_CPU
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_UNORM
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLushort
argument_list|,
literal|3
argument_list|,
name|UINT16_MAX
argument_list|>
argument_list|)
expr_stmt|;
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_SHORT
argument_list|,
name|GL_TRUE
argument_list|,
literal|4
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_UNORM
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLushort
argument_list|,
literal|4
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
comment|// GL_INT -- un-normalized
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_INT
argument_list|,
name|GL_FALSE
argument_list|,
literal|1
argument_list|,
name|VERTEX_CONVERT_GPU
argument_list|,
name|DXGI_FORMAT_R32_SINT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLint
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_INT
argument_list|,
name|GL_FALSE
argument_list|,
literal|2
argument_list|,
name|VERTEX_CONVERT_GPU
argument_list|,
name|DXGI_FORMAT_R32G32_SINT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLint
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_INT
argument_list|,
name|GL_FALSE
argument_list|,
literal|3
argument_list|,
name|VERTEX_CONVERT_GPU
argument_list|,
name|DXGI_FORMAT_R32G32B32_SINT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLint
argument_list|,
literal|3
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_INT
argument_list|,
name|GL_FALSE
argument_list|,
literal|4
argument_list|,
name|VERTEX_CONVERT_GPU
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_SINT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLint
argument_list|,
literal|4
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
comment|// GL_INT -- normalized
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_INT
argument_list|,
name|GL_TRUE
argument_list|,
literal|1
argument_list|,
name|VERTEX_CONVERT_CPU
argument_list|,
name|DXGI_FORMAT_R32_FLOAT
argument_list|,
operator|&
name|CopyTo32FVertexData
argument_list|<
name|GLint
argument_list|,
literal|1
argument_list|,
literal|true
argument_list|>
argument_list|)
expr_stmt|;
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_INT
argument_list|,
name|GL_TRUE
argument_list|,
literal|2
argument_list|,
name|VERTEX_CONVERT_CPU
argument_list|,
name|DXGI_FORMAT_R32G32_FLOAT
argument_list|,
operator|&
name|CopyTo32FVertexData
argument_list|<
name|GLint
argument_list|,
literal|2
argument_list|,
literal|true
argument_list|>
argument_list|)
expr_stmt|;
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_INT
argument_list|,
name|GL_TRUE
argument_list|,
literal|3
argument_list|,
name|VERTEX_CONVERT_CPU
argument_list|,
name|DXGI_FORMAT_R32G32B32_FLOAT
argument_list|,
operator|&
name|CopyTo32FVertexData
argument_list|<
name|GLint
argument_list|,
literal|3
argument_list|,
literal|true
argument_list|>
argument_list|)
expr_stmt|;
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_INT
argument_list|,
name|GL_TRUE
argument_list|,
literal|4
argument_list|,
name|VERTEX_CONVERT_CPU
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
operator|&
name|CopyTo32FVertexData
argument_list|<
name|GLint
argument_list|,
literal|4
argument_list|,
literal|true
argument_list|>
argument_list|)
expr_stmt|;
comment|// GL_UNSIGNED_INT -- un-normalized
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|GL_FALSE
argument_list|,
literal|1
argument_list|,
name|VERTEX_CONVERT_GPU
argument_list|,
name|DXGI_FORMAT_R32_UINT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLuint
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|GL_FALSE
argument_list|,
literal|2
argument_list|,
name|VERTEX_CONVERT_GPU
argument_list|,
name|DXGI_FORMAT_R32G32_UINT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLuint
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|GL_FALSE
argument_list|,
literal|3
argument_list|,
name|VERTEX_CONVERT_GPU
argument_list|,
name|DXGI_FORMAT_R32G32B32_UINT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLuint
argument_list|,
literal|3
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|GL_FALSE
argument_list|,
literal|4
argument_list|,
name|VERTEX_CONVERT_GPU
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_UINT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLuint
argument_list|,
literal|4
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
comment|// GL_UNSIGNED_INT -- normalized
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|GL_TRUE
argument_list|,
literal|1
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R32_FLOAT
argument_list|,
operator|&
name|CopyTo32FVertexData
argument_list|<
name|GLuint
argument_list|,
literal|1
argument_list|,
literal|true
argument_list|>
argument_list|)
expr_stmt|;
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|GL_TRUE
argument_list|,
literal|2
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R32G32_FLOAT
argument_list|,
operator|&
name|CopyTo32FVertexData
argument_list|<
name|GLuint
argument_list|,
literal|2
argument_list|,
literal|true
argument_list|>
argument_list|)
expr_stmt|;
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|GL_TRUE
argument_list|,
literal|3
argument_list|,
name|VERTEX_CONVERT_CPU
argument_list|,
name|DXGI_FORMAT_R32G32B32_FLOAT
argument_list|,
operator|&
name|CopyTo32FVertexData
argument_list|<
name|GLuint
argument_list|,
literal|3
argument_list|,
literal|true
argument_list|>
argument_list|)
expr_stmt|;
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
name|GL_TRUE
argument_list|,
literal|4
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
operator|&
name|CopyTo32FVertexData
argument_list|<
name|GLuint
argument_list|,
literal|4
argument_list|,
literal|true
argument_list|>
argument_list|)
expr_stmt|;
comment|// GL_FIXED
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_FIXED
argument_list|,
name|GL_FALSE
argument_list|,
literal|1
argument_list|,
name|VERTEX_CONVERT_CPU
argument_list|,
name|DXGI_FORMAT_R32_FLOAT
argument_list|,
operator|&
name|Copy32FixedTo32FVertexData
argument_list|<
literal|1
argument_list|>
argument_list|)
expr_stmt|;
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_FIXED
argument_list|,
name|GL_FALSE
argument_list|,
literal|2
argument_list|,
name|VERTEX_CONVERT_CPU
argument_list|,
name|DXGI_FORMAT_R32G32_FLOAT
argument_list|,
operator|&
name|Copy32FixedTo32FVertexData
argument_list|<
literal|2
argument_list|>
argument_list|)
expr_stmt|;
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_FIXED
argument_list|,
name|GL_FALSE
argument_list|,
literal|3
argument_list|,
name|VERTEX_CONVERT_CPU
argument_list|,
name|DXGI_FORMAT_R32G32B32_FLOAT
argument_list|,
operator|&
name|Copy32FixedTo32FVertexData
argument_list|<
literal|3
argument_list|>
argument_list|)
expr_stmt|;
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_FIXED
argument_list|,
name|GL_FALSE
argument_list|,
literal|4
argument_list|,
name|VERTEX_CONVERT_CPU
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
operator|&
name|Copy32FixedTo32FVertexData
argument_list|<
literal|4
argument_list|>
argument_list|)
expr_stmt|;
comment|// GL_HALF_FLOAT
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_HALF_FLOAT
argument_list|,
name|GL_FALSE
argument_list|,
literal|1
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R16_FLOAT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLhalf
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_HALF_FLOAT
argument_list|,
name|GL_FALSE
argument_list|,
literal|2
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R16G16_FLOAT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLhalf
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_HALF_FLOAT
argument_list|,
name|GL_FALSE
argument_list|,
literal|3
argument_list|,
name|VERTEX_CONVERT_CPU
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_FLOAT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLhalf
argument_list|,
literal|3
argument_list|,
name|gl
operator|::
name|Float16One
argument_list|>
argument_list|)
expr_stmt|;
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_HALF_FLOAT
argument_list|,
name|GL_FALSE
argument_list|,
literal|4
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_FLOAT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLhalf
argument_list|,
literal|4
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
comment|// GL_FLOAT
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_FLOAT
argument_list|,
name|GL_FALSE
argument_list|,
literal|1
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R32_FLOAT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLfloat
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_FLOAT
argument_list|,
name|GL_FALSE
argument_list|,
literal|2
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R32G32_FLOAT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLfloat
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_FLOAT
argument_list|,
name|GL_FALSE
argument_list|,
literal|3
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R32G32B32_FLOAT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLfloat
argument_list|,
literal|3
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_FLOAT
argument_list|,
name|GL_FALSE
argument_list|,
literal|4
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLfloat
argument_list|,
literal|4
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
comment|// GL_INT_2_10_10_10_REV
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_INT_2_10_10_10_REV
argument_list|,
name|GL_FALSE
argument_list|,
literal|4
argument_list|,
name|VERTEX_CONVERT_CPU
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
operator|&
name|CopyXYZ10W2ToXYZW32FVertexData
argument_list|<
literal|true
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|>
argument_list|)
expr_stmt|;
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_INT_2_10_10_10_REV
argument_list|,
name|GL_TRUE
argument_list|,
literal|4
argument_list|,
name|VERTEX_CONVERT_CPU
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
operator|&
name|CopyXYZ10W2ToXYZW32FVertexData
argument_list|<
literal|true
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|>
argument_list|)
expr_stmt|;
comment|// GL_UNSIGNED_INT_2_10_10_10_REV
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_INT_2_10_10_10_REV
argument_list|,
name|GL_FALSE
argument_list|,
literal|4
argument_list|,
name|VERTEX_CONVERT_CPU
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_FLOAT
argument_list|,
operator|&
name|CopyXYZ10W2ToXYZW32FVertexData
argument_list|<
literal|false
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|>
argument_list|)
expr_stmt|;
name|AddVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_INT_2_10_10_10_REV
argument_list|,
name|GL_TRUE
argument_list|,
literal|4
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R10G10B10A2_UNORM
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLuint
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
comment|//
comment|// Integer Formats
comment|//
comment|// GL_BYTE
name|AddIntegerVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_BYTE
argument_list|,
literal|1
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R8_SINT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLbyte
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|AddIntegerVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_BYTE
argument_list|,
literal|2
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R8G8_SINT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLbyte
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|AddIntegerVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_BYTE
argument_list|,
literal|3
argument_list|,
name|VERTEX_CONVERT_CPU
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_SINT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLbyte
argument_list|,
literal|3
argument_list|,
literal|1
argument_list|>
argument_list|)
expr_stmt|;
name|AddIntegerVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_BYTE
argument_list|,
literal|4
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_SINT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLbyte
argument_list|,
literal|4
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
comment|// GL_UNSIGNED_BYTE
name|AddIntegerVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
literal|1
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R8_UINT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLubyte
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|AddIntegerVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
literal|2
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R8G8_UINT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLubyte
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|AddIntegerVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
literal|3
argument_list|,
name|VERTEX_CONVERT_CPU
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UINT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLubyte
argument_list|,
literal|3
argument_list|,
literal|1
argument_list|>
argument_list|)
expr_stmt|;
name|AddIntegerVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
literal|4
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R8G8B8A8_UINT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLubyte
argument_list|,
literal|4
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
comment|// GL_SHORT
name|AddIntegerVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_SHORT
argument_list|,
literal|1
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R16_SINT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLshort
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|AddIntegerVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_SHORT
argument_list|,
literal|2
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R16G16_SINT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLshort
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|AddIntegerVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_SHORT
argument_list|,
literal|3
argument_list|,
name|VERTEX_CONVERT_CPU
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_SINT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLshort
argument_list|,
literal|3
argument_list|,
literal|1
argument_list|>
argument_list|)
expr_stmt|;
name|AddIntegerVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_SHORT
argument_list|,
literal|4
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_SINT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLshort
argument_list|,
literal|4
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
comment|// GL_UNSIGNED_SHORT
name|AddIntegerVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_SHORT
argument_list|,
literal|1
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R16_UINT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLushort
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|AddIntegerVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_SHORT
argument_list|,
literal|2
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R16G16_UINT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLushort
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|AddIntegerVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_SHORT
argument_list|,
literal|3
argument_list|,
name|VERTEX_CONVERT_CPU
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_UINT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLushort
argument_list|,
literal|3
argument_list|,
literal|1
argument_list|>
argument_list|)
expr_stmt|;
name|AddIntegerVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_SHORT
argument_list|,
literal|4
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_UINT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLushort
argument_list|,
literal|4
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
comment|// GL_INT
name|AddIntegerVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_INT
argument_list|,
literal|1
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R32_SINT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLint
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|AddIntegerVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_INT
argument_list|,
literal|2
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R32G32_SINT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLint
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|AddIntegerVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_INT
argument_list|,
literal|3
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R32G32B32_SINT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLint
argument_list|,
literal|3
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|AddIntegerVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_INT
argument_list|,
literal|4
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_SINT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLint
argument_list|,
literal|4
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
comment|// GL_UNSIGNED_INT
name|AddIntegerVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
literal|1
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R32_SINT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLuint
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|AddIntegerVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
literal|2
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R32G32_SINT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLuint
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|AddIntegerVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
literal|3
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R32G32B32_SINT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLuint
argument_list|,
literal|3
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
name|AddIntegerVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_INT
argument_list|,
literal|4
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R32G32B32A32_SINT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLuint
argument_list|,
literal|4
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
comment|// GL_INT_2_10_10_10_REV
name|AddIntegerVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_INT_2_10_10_10_REV
argument_list|,
literal|4
argument_list|,
name|VERTEX_CONVERT_CPU
argument_list|,
name|DXGI_FORMAT_R16G16B16A16_SINT
argument_list|,
operator|&
name|CopyXYZ10W2ToXYZW32FVertexData
argument_list|<
literal|true
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|>
argument_list|)
expr_stmt|;
comment|// GL_UNSIGNED_INT_2_10_10_10_REV
name|AddIntegerVertexFormatInfo
argument_list|(
operator|&
name|map
argument_list|,
name|GL_UNSIGNED_INT_2_10_10_10_REV
argument_list|,
literal|4
argument_list|,
name|VERTEX_CONVERT_NONE
argument_list|,
name|DXGI_FORMAT_R10G10B10A2_UINT
argument_list|,
operator|&
name|CopyNativeVertexData
argument_list|<
name|GLuint
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|>
argument_list|)
expr_stmt|;
return|return
name|map
return|;
block|}
DECL|function|GetVertexFormatInfo
specifier|const
name|VertexFormat
modifier|&
name|GetVertexFormatInfo
parameter_list|(
specifier|const
name|gl
operator|::
name|VertexFormat
modifier|&
name|vertexFormat
parameter_list|)
block|{
specifier|static
specifier|const
name|D3D11VertexFormatInfoMap
name|vertexFormatMap
init|=
name|BuildD3D11VertexFormatInfoMap
argument_list|()
decl_stmt|;
name|D3D11VertexFormatInfoMap
operator|::
name|const_iterator
name|iter
init|=
name|vertexFormatMap
operator|.
name|find
argument_list|(
name|vertexFormat
argument_list|)
decl_stmt|;
if|if
condition|(
name|iter
operator|!=
name|vertexFormatMap
operator|.
name|end
argument_list|()
condition|)
block|{
return|return
name|iter
operator|->
name|second
return|;
block|}
else|else
block|{
specifier|static
specifier|const
name|VertexFormat
name|defaultInfo
decl_stmt|;
return|return
name|defaultInfo
return|;
block|}
block|}
block|}
block|}
end_namespace
end_unit
