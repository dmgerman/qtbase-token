begin_unit
begin_comment
comment|//
end_comment
begin_comment
comment|// Copyright (c) 2002-2013 The ANGLE Project Authors. All rights reserved.
end_comment
begin_comment
comment|// Use of this source code is governed by a BSD-style license that can be
end_comment
begin_comment
comment|// found in the LICENSE file.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// TextureStorage.cpp: Shared members of abstract rx::TextureStorage class.
end_comment
begin_include
include|#
directive|include
file|"libGLESv2/renderer/d3d/TextureStorage.h"
end_include
begin_include
include|#
directive|include
file|"libGLESv2/renderer/d3d/TextureD3D.h"
end_include
begin_include
include|#
directive|include
file|"libGLESv2/renderer/RenderTarget.h"
end_include
begin_include
include|#
directive|include
file|"libGLESv2/renderer/Renderer.h"
end_include
begin_include
include|#
directive|include
file|"libGLESv2/Renderbuffer.h"
end_include
begin_include
include|#
directive|include
file|"libGLESv2/Texture.h"
end_include
begin_include
include|#
directive|include
file|"common/debug.h"
end_include
begin_include
include|#
directive|include
file|"common/mathutil.h"
end_include
begin_namespace
DECL|namespace|rx
namespace|namespace
name|rx
block|{
DECL|function|TextureStorage
name|TextureStorage
operator|::
name|TextureStorage
parameter_list|()
member_init_list|:
name|mFirstRenderTargetSerial
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|mRenderTargetSerialsLayerStride
argument_list|(
literal|0
argument_list|)
block|{}
DECL|function|initializeSerials
name|void
name|TextureStorage
operator|::
name|initializeSerials
parameter_list|(
name|unsigned
name|int
name|rtSerialsToReserve
parameter_list|,
name|unsigned
name|int
name|rtSerialsLayerStride
parameter_list|)
block|{
name|mFirstRenderTargetSerial
operator|=
name|RenderTarget
operator|::
name|issueSerials
argument_list|(
name|rtSerialsToReserve
argument_list|)
expr_stmt|;
name|mRenderTargetSerialsLayerStride
operator|=
name|rtSerialsLayerStride
expr_stmt|;
block|}
DECL|function|getRenderTargetSerial
name|unsigned
name|int
name|TextureStorage
operator|::
name|getRenderTargetSerial
parameter_list|(
specifier|const
name|gl
operator|::
name|ImageIndex
modifier|&
name|index
parameter_list|)
specifier|const
block|{
name|unsigned
name|int
name|layerOffset
init|=
operator|(
name|index
operator|.
name|hasLayer
argument_list|()
condition|?
operator|(
cast|static_cast
argument_list|<
name|unsigned
name|int
argument_list|>
argument_list|(
name|index
operator|.
name|layerIndex
argument_list|)
operator|*
name|mRenderTargetSerialsLayerStride
operator|)
else|:
literal|0
operator|)
decl_stmt|;
return|return
name|mFirstRenderTargetSerial
operator|+
cast|static_cast
argument_list|<
name|unsigned
name|int
argument_list|>
argument_list|(
name|index
operator|.
name|mipIndex
argument_list|)
operator|+
name|layerOffset
return|;
block|}
block|}
end_namespace
end_unit
