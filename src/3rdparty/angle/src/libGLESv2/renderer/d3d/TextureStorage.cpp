begin_unit
begin_include
include|#
directive|include
file|"precompiled.h"
end_include
begin_comment
comment|//
end_comment
begin_comment
comment|// Copyright (c) 2002-2013 The ANGLE Project Authors. All rights reserved.
end_comment
begin_comment
comment|// Use of this source code is governed by a BSD-style license that can be
end_comment
begin_comment
comment|// found in the LICENSE file.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// TextureStorage.cpp: Implements the abstract rx::TextureStorageInterface class and its concrete derived
end_comment
begin_comment
comment|// classes TextureStorageInterface2D and TextureStorageInterfaceCube, which act as the interface to the
end_comment
begin_comment
comment|// GPU-side texture.
end_comment
begin_include
include|#
directive|include
file|"libGLESv2/renderer/d3d/TextureStorage.h"
end_include
begin_include
include|#
directive|include
file|"libGLESv2/renderer/d3d/TextureD3D.h"
end_include
begin_include
include|#
directive|include
file|"libGLESv2/renderer/Renderer.h"
end_include
begin_include
include|#
directive|include
file|"libGLESv2/Renderbuffer.h"
end_include
begin_include
include|#
directive|include
file|"libGLESv2/Texture.h"
end_include
begin_include
include|#
directive|include
file|"common/debug.h"
end_include
begin_include
include|#
directive|include
file|"common/mathutil.h"
end_include
begin_namespace
DECL|namespace|rx
namespace|namespace
name|rx
block|{
DECL|member|mCurrentTextureSerial
name|unsigned
name|int
name|TextureStorageInterface
operator|::
name|mCurrentTextureSerial
init|=
literal|1
decl_stmt|;
DECL|function|TextureStorageInterface
name|TextureStorageInterface
operator|::
name|TextureStorageInterface
parameter_list|()
member_init_list|:
name|mTextureSerial
argument_list|(
name|issueTextureSerial
argument_list|()
argument_list|)
member_init_list|,
name|mInstance
argument_list|(
name|NULL
argument_list|)
block|{ }
DECL|function|~TextureStorageInterface
name|TextureStorageInterface
operator|::
name|~
name|TextureStorageInterface
parameter_list|()
block|{
operator|delete
name|mInstance
expr_stmt|;
block|}
DECL|function|isRenderTarget
name|bool
name|TextureStorageInterface
operator|::
name|isRenderTarget
parameter_list|()
specifier|const
block|{
return|return
name|mInstance
operator|->
name|isRenderTarget
argument_list|()
return|;
block|}
DECL|function|isManaged
name|bool
name|TextureStorageInterface
operator|::
name|isManaged
parameter_list|()
specifier|const
block|{
return|return
name|mInstance
operator|->
name|isManaged
argument_list|()
return|;
block|}
DECL|function|getTextureSerial
name|unsigned
name|int
name|TextureStorageInterface
operator|::
name|getTextureSerial
parameter_list|()
specifier|const
block|{
return|return
name|mTextureSerial
return|;
block|}
DECL|function|issueTextureSerial
name|unsigned
name|int
name|TextureStorageInterface
operator|::
name|issueTextureSerial
parameter_list|()
block|{
return|return
name|mCurrentTextureSerial
operator|++
return|;
block|}
DECL|function|getTopLevel
name|int
name|TextureStorageInterface
operator|::
name|getTopLevel
parameter_list|()
specifier|const
block|{
return|return
name|mInstance
operator|->
name|getTopLevel
argument_list|()
return|;
block|}
DECL|function|getLevelCount
name|int
name|TextureStorageInterface
operator|::
name|getLevelCount
parameter_list|()
specifier|const
block|{
return|return
name|mInstance
operator|->
name|getLevelCount
argument_list|()
return|;
block|}
DECL|function|TextureStorageInterface2D
name|TextureStorageInterface2D
operator|::
name|TextureStorageInterface2D
parameter_list|(
name|Renderer
modifier|*
name|renderer
parameter_list|,
name|SwapChain
modifier|*
name|swapchain
parameter_list|)
block|{
name|mFirstRenderTargetSerial
operator|=
name|gl
operator|::
name|RenderbufferStorage
operator|::
name|issueSerials
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|mInstance
operator|=
name|renderer
operator|->
name|createTextureStorage2D
argument_list|(
name|swapchain
argument_list|)
expr_stmt|;
block|}
DECL|function|TextureStorageInterface2D
name|TextureStorageInterface2D
operator|::
name|TextureStorageInterface2D
parameter_list|(
name|Renderer
modifier|*
name|renderer
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|bool
name|renderTarget
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|int
name|levels
parameter_list|)
block|{
name|mInstance
operator|=
name|renderer
operator|->
name|createTextureStorage2D
argument_list|(
name|internalformat
argument_list|,
name|renderTarget
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|levels
argument_list|)
expr_stmt|;
name|mFirstRenderTargetSerial
operator|=
name|gl
operator|::
name|RenderbufferStorage
operator|::
name|issueSerials
argument_list|(
cast|static_cast
argument_list|<
name|GLuint
argument_list|>
argument_list|(
name|mInstance
operator|->
name|getLevelCount
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|function|~TextureStorageInterface2D
name|TextureStorageInterface2D
operator|::
name|~
name|TextureStorageInterface2D
parameter_list|()
block|{ }
DECL|function|getRenderTarget
name|RenderTarget
modifier|*
name|TextureStorageInterface2D
operator|::
name|getRenderTarget
parameter_list|(
name|GLint
name|level
parameter_list|)
specifier|const
block|{
return|return
name|mInstance
operator|->
name|getRenderTarget
argument_list|(
name|level
argument_list|)
return|;
block|}
DECL|function|generateMipmap
name|void
name|TextureStorageInterface2D
operator|::
name|generateMipmap
parameter_list|(
name|int
name|level
parameter_list|)
block|{
name|mInstance
operator|->
name|generateMipmap
argument_list|(
name|level
argument_list|)
expr_stmt|;
block|}
DECL|function|getRenderTargetSerial
name|unsigned
name|int
name|TextureStorageInterface2D
operator|::
name|getRenderTargetSerial
parameter_list|(
name|GLint
name|level
parameter_list|)
specifier|const
block|{
return|return
name|mFirstRenderTargetSerial
operator|+
name|level
return|;
block|}
DECL|function|TextureStorageInterfaceCube
name|TextureStorageInterfaceCube
operator|::
name|TextureStorageInterfaceCube
parameter_list|(
name|Renderer
modifier|*
name|renderer
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|bool
name|renderTarget
parameter_list|,
name|int
name|size
parameter_list|,
name|int
name|levels
parameter_list|)
block|{
name|mInstance
operator|=
name|renderer
operator|->
name|createTextureStorageCube
argument_list|(
name|internalformat
argument_list|,
name|renderTarget
argument_list|,
name|size
argument_list|,
name|levels
argument_list|)
expr_stmt|;
name|mFirstRenderTargetSerial
operator|=
name|gl
operator|::
name|RenderbufferStorage
operator|::
name|issueSerials
argument_list|(
cast|static_cast
argument_list|<
name|GLuint
argument_list|>
argument_list|(
name|mInstance
operator|->
name|getLevelCount
argument_list|()
operator|*
literal|6
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|function|~TextureStorageInterfaceCube
name|TextureStorageInterfaceCube
operator|::
name|~
name|TextureStorageInterfaceCube
parameter_list|()
block|{ }
DECL|function|getRenderTarget
name|RenderTarget
modifier|*
name|TextureStorageInterfaceCube
operator|::
name|getRenderTarget
parameter_list|(
name|GLenum
name|faceTarget
parameter_list|,
name|GLint
name|level
parameter_list|)
specifier|const
block|{
return|return
name|mInstance
operator|->
name|getRenderTargetFace
argument_list|(
name|faceTarget
argument_list|,
name|level
argument_list|)
return|;
block|}
DECL|function|generateMipmap
name|void
name|TextureStorageInterfaceCube
operator|::
name|generateMipmap
parameter_list|(
name|int
name|faceIndex
parameter_list|,
name|int
name|level
parameter_list|)
block|{
name|mInstance
operator|->
name|generateMipmap
argument_list|(
name|faceIndex
argument_list|,
name|level
argument_list|)
expr_stmt|;
block|}
DECL|function|getRenderTargetSerial
name|unsigned
name|int
name|TextureStorageInterfaceCube
operator|::
name|getRenderTargetSerial
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|)
specifier|const
block|{
return|return
name|mFirstRenderTargetSerial
operator|+
operator|(
name|level
operator|*
literal|6
operator|)
operator|+
name|TextureD3D_Cube
operator|::
name|targetToIndex
argument_list|(
name|target
argument_list|)
return|;
block|}
DECL|function|TextureStorageInterface3D
name|TextureStorageInterface3D
operator|::
name|TextureStorageInterface3D
parameter_list|(
name|Renderer
modifier|*
name|renderer
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|bool
name|renderTarget
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|int
name|levels
parameter_list|)
block|{
name|mInstance
operator|=
name|renderer
operator|->
name|createTextureStorage3D
argument_list|(
name|internalformat
argument_list|,
name|renderTarget
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|levels
argument_list|)
expr_stmt|;
name|mFirstRenderTargetSerial
operator|=
name|gl
operator|::
name|RenderbufferStorage
operator|::
name|issueSerials
argument_list|(
cast|static_cast
argument_list|<
name|GLuint
argument_list|>
argument_list|(
name|mInstance
operator|->
name|getLevelCount
argument_list|()
operator|*
name|depth
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|function|~TextureStorageInterface3D
name|TextureStorageInterface3D
operator|::
name|~
name|TextureStorageInterface3D
parameter_list|()
block|{ }
DECL|function|generateMipmap
name|void
name|TextureStorageInterface3D
operator|::
name|generateMipmap
parameter_list|(
name|int
name|level
parameter_list|)
block|{
name|mInstance
operator|->
name|generateMipmap
argument_list|(
name|level
argument_list|)
expr_stmt|;
block|}
DECL|function|getRenderTarget
name|RenderTarget
modifier|*
name|TextureStorageInterface3D
operator|::
name|getRenderTarget
parameter_list|(
name|GLint
name|level
parameter_list|)
specifier|const
block|{
return|return
name|mInstance
operator|->
name|getRenderTarget
argument_list|(
name|level
argument_list|)
return|;
block|}
DECL|function|getRenderTarget
name|RenderTarget
modifier|*
name|TextureStorageInterface3D
operator|::
name|getRenderTarget
parameter_list|(
name|GLint
name|level
parameter_list|,
name|GLint
name|layer
parameter_list|)
specifier|const
block|{
return|return
name|mInstance
operator|->
name|getRenderTargetLayer
argument_list|(
name|level
argument_list|,
name|layer
argument_list|)
return|;
block|}
DECL|function|getRenderTargetSerial
name|unsigned
name|int
name|TextureStorageInterface3D
operator|::
name|getRenderTargetSerial
parameter_list|(
name|GLint
name|level
parameter_list|,
name|GLint
name|layer
parameter_list|)
specifier|const
block|{
return|return
name|mFirstRenderTargetSerial
operator|+
cast|static_cast
argument_list|<
name|unsigned
name|int
argument_list|>
argument_list|(
operator|(
name|layer
operator|*
name|mInstance
operator|->
name|getLevelCount
argument_list|()
operator|)
operator|+
name|level
argument_list|)
return|;
block|}
DECL|function|TextureStorageInterface2DArray
name|TextureStorageInterface2DArray
operator|::
name|TextureStorageInterface2DArray
parameter_list|(
name|Renderer
modifier|*
name|renderer
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|bool
name|renderTarget
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|int
name|levels
parameter_list|)
block|{
name|mInstance
operator|=
name|renderer
operator|->
name|createTextureStorage2DArray
argument_list|(
name|internalformat
argument_list|,
name|renderTarget
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|levels
argument_list|)
expr_stmt|;
name|mFirstRenderTargetSerial
operator|=
name|gl
operator|::
name|RenderbufferStorage
operator|::
name|issueSerials
argument_list|(
cast|static_cast
argument_list|<
name|GLuint
argument_list|>
argument_list|(
name|mInstance
operator|->
name|getLevelCount
argument_list|()
operator|*
name|depth
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|function|~TextureStorageInterface2DArray
name|TextureStorageInterface2DArray
operator|::
name|~
name|TextureStorageInterface2DArray
parameter_list|()
block|{ }
DECL|function|generateMipmap
name|void
name|TextureStorageInterface2DArray
operator|::
name|generateMipmap
parameter_list|(
name|int
name|level
parameter_list|)
block|{
name|mInstance
operator|->
name|generateMipmap
argument_list|(
name|level
argument_list|)
expr_stmt|;
block|}
DECL|function|getRenderTarget
name|RenderTarget
modifier|*
name|TextureStorageInterface2DArray
operator|::
name|getRenderTarget
parameter_list|(
name|GLint
name|level
parameter_list|,
name|GLint
name|layer
parameter_list|)
specifier|const
block|{
return|return
name|mInstance
operator|->
name|getRenderTargetLayer
argument_list|(
name|level
argument_list|,
name|layer
argument_list|)
return|;
block|}
DECL|function|getRenderTargetSerial
name|unsigned
name|int
name|TextureStorageInterface2DArray
operator|::
name|getRenderTargetSerial
parameter_list|(
name|GLint
name|level
parameter_list|,
name|GLint
name|layer
parameter_list|)
specifier|const
block|{
return|return
name|mFirstRenderTargetSerial
operator|+
cast|static_cast
argument_list|<
name|unsigned
name|int
argument_list|>
argument_list|(
operator|(
name|layer
operator|*
name|mInstance
operator|->
name|getLevelCount
argument_list|()
operator|)
operator|+
name|level
argument_list|)
return|;
block|}
block|}
end_namespace
end_unit
