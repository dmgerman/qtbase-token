begin_unit
begin_comment
comment|//
end_comment
begin_comment
comment|// Copyright (c) 2012 The ANGLE Project Authors. All rights reserved.
end_comment
begin_comment
comment|// Use of this source code is governed by a BSD-style license that can be
end_comment
begin_comment
comment|// found in the LICENSE file.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// ShaderExecutable.h: Defines a renderer-agnostic class to contain shader
end_comment
begin_comment
comment|// executable implementation details.
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|LIBGLESV2_RENDERER_SHADEREXECUTABLE_H_
end_ifndef
begin_define
DECL|macro|LIBGLESV2_RENDERER_SHADEREXECUTABLE_H_
define|#
directive|define
name|LIBGLESV2_RENDERER_SHADEREXECUTABLE_H_
end_define
begin_include
include|#
directive|include
file|"common/angleutils.h"
end_include
begin_include
include|#
directive|include
file|"common/debug.h"
end_include
begin_decl_stmt
name|namespace
name|rx
block|{
name|class
name|ShaderExecutable
block|{
name|public
label|:
name|ShaderExecutable
argument_list|(
argument|const void *function
argument_list|,
argument|size_t length
argument_list|)
block|:
name|mFunctionBuffer
argument_list|(
argument|length
argument_list|)
block|{
name|memcpy
argument_list|(
name|mFunctionBuffer
operator|.
name|data
argument_list|()
argument_list|,
name|function
argument_list|,
name|length
argument_list|)
expr_stmt|;
block|}
name|virtual
operator|~
name|ShaderExecutable
argument_list|()
block|{}
specifier|const
name|uint8_t
operator|*
name|getFunction
argument_list|()
specifier|const
block|{
return|return
name|mFunctionBuffer
operator|.
name|data
argument_list|()
return|;
block|}
name|size_t
name|getLength
argument_list|()
specifier|const
block|{
return|return
name|mFunctionBuffer
operator|.
name|size
argument_list|()
return|;
block|}
name|private
label|:
name|DISALLOW_COPY_AND_ASSIGN
argument_list|(
name|ShaderExecutable
argument_list|)
expr_stmt|;
name|std
operator|::
name|vector
operator|<
name|uint8_t
operator|>
name|mFunctionBuffer
expr_stmt|;
block|}
empty_stmt|;
name|class
name|UniformStorage
block|{
name|public
label|:
name|UniformStorage
argument_list|(
argument|size_t initialSize
argument_list|)
block|:
name|mSize
argument_list|(
argument|initialSize
argument_list|)
block|{     }
name|virtual
operator|~
name|UniformStorage
argument_list|()
block|{}
name|size_t
name|size
argument_list|()
specifier|const
block|{
return|return
name|mSize
return|;
block|}
name|private
label|:
name|size_t
name|mSize
decl_stmt|;
block|}
empty_stmt|;
block|}
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// LIBGLESV2_RENDERER_SHADEREXECUTABLE9_H_
end_comment
end_unit
