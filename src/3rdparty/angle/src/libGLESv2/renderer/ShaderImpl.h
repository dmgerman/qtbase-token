begin_unit
begin_comment
comment|//
end_comment
begin_comment
comment|// Copyright 2014 The ANGLE Project Authors. All rights reserved.
end_comment
begin_comment
comment|// Use of this source code is governed by a BSD-style license that can be
end_comment
begin_comment
comment|// found in the LICENSE file.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// ShaderImpl.h: Defines the abstract rx::ShaderImpl class.
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|LIBGLESV2_RENDERER_SHADERIMPL_H_
end_ifndef
begin_define
DECL|macro|LIBGLESV2_RENDERER_SHADERIMPL_H_
define|#
directive|define
name|LIBGLESV2_RENDERER_SHADERIMPL_H_
end_define
begin_include
include|#
directive|include
file|<vector>
end_include
begin_include
include|#
directive|include
file|"common/angleutils.h"
end_include
begin_include
include|#
directive|include
file|"libGLESv2/Shader.h"
end_include
begin_decl_stmt
name|namespace
name|rx
block|{
name|class
name|ShaderImpl
block|{
name|public
label|:
name|ShaderImpl
argument_list|()
block|{ }
name|virtual
operator|~
name|ShaderImpl
argument_list|()
block|{ }
name|virtual
name|bool
name|compile
argument_list|(
specifier|const
name|std
operator|::
name|string
operator|&
name|source
argument_list|)
operator|=
literal|0
expr_stmt|;
name|virtual
specifier|const
name|std
operator|::
name|string
operator|&
name|getInfoLog
argument_list|()
specifier|const
operator|=
literal|0
expr_stmt|;
name|virtual
specifier|const
name|std
operator|::
name|string
operator|&
name|getTranslatedSource
argument_list|()
specifier|const
operator|=
literal|0
expr_stmt|;
specifier|const
name|std
operator|::
name|vector
operator|<
name|gl
operator|::
name|PackedVarying
operator|>
operator|&
name|getVaryings
argument_list|()
specifier|const
block|{
return|return
name|mVaryings
return|;
block|}
specifier|const
name|std
operator|::
name|vector
operator|<
name|sh
operator|::
name|Uniform
operator|>
operator|&
name|getUniforms
argument_list|()
specifier|const
block|{
return|return
name|mUniforms
return|;
block|}
specifier|const
name|std
operator|::
name|vector
operator|<
name|sh
operator|::
name|InterfaceBlock
operator|>
operator|&
name|getInterfaceBlocks
argument_list|()
specifier|const
block|{
return|return
name|mInterfaceBlocks
return|;
block|}
specifier|const
name|std
operator|::
name|vector
operator|<
name|sh
operator|::
name|Attribute
operator|>
operator|&
name|getActiveAttributes
argument_list|()
specifier|const
block|{
return|return
name|mActiveAttributes
return|;
block|}
specifier|const
name|std
operator|::
name|vector
operator|<
name|sh
operator|::
name|Attribute
operator|>
operator|&
name|getActiveOutputVariables
argument_list|()
specifier|const
block|{
return|return
name|mActiveOutputVariables
return|;
block|}
name|std
operator|::
name|vector
operator|<
name|gl
operator|::
name|PackedVarying
operator|>
operator|&
name|getVaryings
argument_list|()
block|{
return|return
name|mVaryings
return|;
block|}
name|std
operator|::
name|vector
operator|<
name|sh
operator|::
name|Uniform
operator|>
operator|&
name|getUniforms
argument_list|()
block|{
return|return
name|mUniforms
return|;
block|}
name|std
operator|::
name|vector
operator|<
name|sh
operator|::
name|InterfaceBlock
operator|>
operator|&
name|getInterfaceBlocks
argument_list|()
block|{
return|return
name|mInterfaceBlocks
return|;
block|}
name|std
operator|::
name|vector
operator|<
name|sh
operator|::
name|Attribute
operator|>
operator|&
name|getActiveAttributes
argument_list|()
block|{
return|return
name|mActiveAttributes
return|;
block|}
name|std
operator|::
name|vector
operator|<
name|sh
operator|::
name|Attribute
operator|>
operator|&
name|getActiveOutputVariables
argument_list|()
block|{
return|return
name|mActiveOutputVariables
return|;
block|}
name|protected
label|:
name|DISALLOW_COPY_AND_ASSIGN
argument_list|(
name|ShaderImpl
argument_list|)
expr_stmt|;
name|std
operator|::
name|vector
operator|<
name|gl
operator|::
name|PackedVarying
operator|>
name|mVaryings
expr_stmt|;
name|std
operator|::
name|vector
operator|<
name|sh
operator|::
name|Uniform
operator|>
name|mUniforms
expr_stmt|;
name|std
operator|::
name|vector
operator|<
name|sh
operator|::
name|InterfaceBlock
operator|>
name|mInterfaceBlocks
expr_stmt|;
name|std
operator|::
name|vector
operator|<
name|sh
operator|::
name|Attribute
operator|>
name|mActiveAttributes
expr_stmt|;
name|std
operator|::
name|vector
operator|<
name|sh
operator|::
name|Attribute
operator|>
name|mActiveOutputVariables
expr_stmt|;
block|}
empty_stmt|;
block|}
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// LIBGLESV2_RENDERER_SHADERIMPL_H_
end_comment
end_unit
