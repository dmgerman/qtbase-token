begin_unit
begin_comment
comment|//
end_comment
begin_comment
comment|// Copyright (c) 2013 The ANGLE Project Authors. All rights reserved.
end_comment
begin_comment
comment|// Use of this source code is governed by a BSD-style license that can be
end_comment
begin_comment
comment|// found in the LICENSE file.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// FenceImpl.h: Defines the rx::FenceImpl class.
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|LIBGLESV2_RENDERER_FENCEIMPL_H_
end_ifndef
begin_define
DECL|macro|LIBGLESV2_RENDERER_FENCEIMPL_H_
define|#
directive|define
name|LIBGLESV2_RENDERER_FENCEIMPL_H_
end_define
begin_include
include|#
directive|include
file|"common/angleutils.h"
end_include
begin_decl_stmt
name|namespace
name|rx
block|{
name|class
name|FenceImpl
block|{
name|public
label|:
name|FenceImpl
argument_list|()
operator|:
name|mStatus
argument_list|(
name|GL_FALSE
argument_list|)
operator|,
name|mCondition
argument_list|(
argument|GL_NONE
argument_list|)
block|{ }
expr_stmt|;
name|virtual
operator|~
name|FenceImpl
argument_list|()
block|{ }
expr_stmt|;
name|virtual
name|GLboolean
name|isFence
parameter_list|()
init|=
literal|0
function_decl|;
name|virtual
name|void
name|setFence
parameter_list|(
name|GLenum
name|condition
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|GLboolean
name|testFence
parameter_list|()
init|=
literal|0
function_decl|;
name|virtual
name|void
name|finishFence
parameter_list|()
init|=
literal|0
function_decl|;
name|virtual
name|void
name|getFenceiv
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
init|=
literal|0
function_decl|;
name|protected
label|:
name|void
name|setStatus
parameter_list|(
name|GLboolean
name|status
parameter_list|)
block|{
name|mStatus
operator|=
name|status
expr_stmt|;
block|}
name|GLboolean
name|getStatus
argument_list|()
specifier|const
block|{
return|return
name|mStatus
return|;
block|}
name|void
name|setCondition
parameter_list|(
name|GLuint
name|condition
parameter_list|)
block|{
name|mCondition
operator|=
name|condition
expr_stmt|;
block|}
name|GLuint
name|getCondition
argument_list|()
specifier|const
block|{
return|return
name|mCondition
return|;
block|}
name|private
label|:
name|DISALLOW_COPY_AND_ASSIGN
argument_list|(
name|FenceImpl
argument_list|)
expr_stmt|;
name|GLboolean
name|mStatus
decl_stmt|;
name|GLenum
name|mCondition
decl_stmt|;
block|}
empty_stmt|;
block|}
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// LIBGLESV2_RENDERER_FENCEIMPL_H_
end_comment
end_unit
