begin_unit
begin_comment
comment|//
end_comment
begin_comment
comment|// Copyright (c) 2002-2010 The ANGLE Project Authors. All rights reserved.
end_comment
begin_comment
comment|// Use of this source code is governed by a BSD-style license that can be
end_comment
begin_comment
comment|// found in the LICENSE file.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// main.h: Management of thread-local data.
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|LIBGLESV2_MAIN_H_
end_ifndef
begin_define
DECL|macro|LIBGLESV2_MAIN_H_
define|#
directive|define
name|LIBGLESV2_MAIN_H_
end_define
begin_define
DECL|macro|GL_APICALL
define|#
directive|define
name|GL_APICALL
end_define
begin_include
include|#
directive|include
file|<GLES2/gl2.h>
end_include
begin_include
include|#
directive|include
file|<GLES2/gl2ext.h>
end_include
begin_include
include|#
directive|include
file|"common/debug.h"
end_include
begin_include
include|#
directive|include
file|"libEGL/Display.h"
end_include
begin_include
include|#
directive|include
file|"libGLESv2/Context.h"
end_include
begin_decl_stmt
name|namespace
name|gl
block|{
struct|struct
name|Current
block|{
name|Context
modifier|*
name|context
decl_stmt|;
name|egl
operator|::
name|Display
operator|*
name|display
expr_stmt|;
block|}
struct|;
name|void
name|makeCurrent
argument_list|(
name|Context
operator|*
name|context
argument_list|,
name|egl
operator|::
name|Display
operator|*
name|display
argument_list|,
name|egl
operator|::
name|Surface
operator|*
name|surface
argument_list|)
decl_stmt|;
name|Context
modifier|*
name|getContext
parameter_list|()
function_decl|;
name|Context
modifier|*
name|getNonLostContext
parameter_list|()
function_decl|;
name|egl
operator|::
name|Display
operator|*
name|getDisplay
argument_list|()
expr_stmt|;
name|IDirect3DDevice9
modifier|*
name|getDevice
parameter_list|()
function_decl|;
name|bool
name|checkDeviceLost
parameter_list|(
name|HRESULT
name|errorCode
parameter_list|)
function_decl|;
block|}
end_decl_stmt
begin_function_decl
name|void
name|error
parameter_list|(
name|GLenum
name|errorCode
parameter_list|)
function_decl|;
end_function_decl
begin_expr_stmt
name|template
operator|<
name|class
name|T
operator|>
DECL|function|error
specifier|const
name|T
operator|&
name|error
argument_list|(
argument|GLenum errorCode
argument_list|,
argument|const T&returnValue
argument_list|)
block|{
name|error
argument_list|(
name|errorCode
argument_list|)
block|;
return|return
name|returnValue
return|;
block|}
end_expr_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// LIBGLESV2_MAIN_H_
end_comment
end_unit
