begin_unit
begin_comment
comment|//
end_comment
begin_comment
comment|// Copyright (c) 2002-2014 The ANGLE Project Authors. All rights reserved.
end_comment
begin_comment
comment|// Use of this source code is governed by a BSD-style license that can be
end_comment
begin_comment
comment|// found in the LICENSE file.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// Context.h: Defines the gl::Context class, managing all GL state and performing
end_comment
begin_comment
comment|// rendering operations. It is the GLES2 specific implementation of EGLContext.
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|LIBGLESV2_CONTEXT_H_
end_ifndef
begin_define
DECL|macro|LIBGLESV2_CONTEXT_H_
define|#
directive|define
name|LIBGLESV2_CONTEXT_H_
end_define
begin_include
include|#
directive|include
file|"common/angleutils.h"
end_include
begin_include
include|#
directive|include
file|"common/RefCountObject.h"
end_include
begin_include
include|#
directive|include
file|"libGLESv2/Caps.h"
end_include
begin_include
include|#
directive|include
file|"libGLESv2/Constants.h"
end_include
begin_include
include|#
directive|include
file|"libGLESv2/Data.h"
end_include
begin_include
include|#
directive|include
file|"libGLESv2/Error.h"
end_include
begin_include
include|#
directive|include
file|"libGLESv2/HandleAllocator.h"
end_include
begin_include
include|#
directive|include
file|"libGLESv2/VertexAttribute.h"
end_include
begin_include
include|#
directive|include
file|"libGLESv2/angletypes.h"
end_include
begin_include
include|#
directive|include
file|"angle_gl.h"
end_include
begin_include
include|#
directive|include
file|<string>
end_include
begin_include
include|#
directive|include
file|<set>
end_include
begin_include
include|#
directive|include
file|<map>
end_include
begin_include
include|#
directive|include
file|<unordered_map>
end_include
begin_include
include|#
directive|include
file|<array>
end_include
begin_decl_stmt
name|namespace
name|rx
block|{
name|class
name|Renderer
decl_stmt|;
block|}
end_decl_stmt
begin_decl_stmt
name|namespace
name|egl
block|{
name|class
name|Surface
decl_stmt|;
block|}
end_decl_stmt
begin_decl_stmt
name|namespace
name|gl
block|{
name|class
name|Shader
decl_stmt|;
name|class
name|Program
decl_stmt|;
name|class
name|ProgramBinary
decl_stmt|;
name|class
name|Texture
decl_stmt|;
name|class
name|Texture2D
decl_stmt|;
name|class
name|TextureCubeMap
decl_stmt|;
name|class
name|Texture3D
decl_stmt|;
name|class
name|Texture2DArray
decl_stmt|;
name|class
name|Framebuffer
decl_stmt|;
name|class
name|Renderbuffer
decl_stmt|;
name|class
name|FenceNV
decl_stmt|;
name|class
name|FenceSync
decl_stmt|;
name|class
name|Query
decl_stmt|;
name|class
name|ResourceManager
decl_stmt|;
name|class
name|Buffer
decl_stmt|;
struct_decl|struct
name|VertexAttribute
struct_decl|;
name|class
name|VertexArray
decl_stmt|;
name|class
name|Sampler
decl_stmt|;
name|class
name|TransformFeedback
decl_stmt|;
name|class
name|Context
block|{
name|public
label|:
name|Context
argument_list|(
argument|int clientVersion
argument_list|,
argument|const Context *shareContext
argument_list|,
argument|rx::Renderer *renderer
argument_list|,
argument|bool notifyResets
argument_list|,
argument|bool robustAccess
argument_list|)
empty_stmt|;
name|virtual
operator|~
name|Context
argument_list|()
expr_stmt|;
name|void
name|makeCurrent
argument_list|(
name|egl
operator|::
name|Surface
operator|*
name|surface
argument_list|)
decl_stmt|;
name|virtual
name|void
name|markContextLost
parameter_list|()
function_decl|;
name|bool
name|isContextLost
parameter_list|()
function_decl|;
comment|// These create  and destroy methods are merely pass-throughs to
comment|// ResourceManager, which owns these object types
name|GLuint
name|createBuffer
parameter_list|()
function_decl|;
name|GLuint
name|createShader
parameter_list|(
name|GLenum
name|type
parameter_list|)
function_decl|;
name|GLuint
name|createProgram
parameter_list|()
function_decl|;
name|GLuint
name|createTexture
parameter_list|()
function_decl|;
name|GLuint
name|createRenderbuffer
parameter_list|()
function_decl|;
name|GLuint
name|createSampler
parameter_list|()
function_decl|;
name|GLuint
name|createTransformFeedback
parameter_list|()
function_decl|;
name|GLsync
name|createFenceSync
parameter_list|()
function_decl|;
name|void
name|deleteBuffer
parameter_list|(
name|GLuint
name|buffer
parameter_list|)
function_decl|;
name|void
name|deleteShader
parameter_list|(
name|GLuint
name|shader
parameter_list|)
function_decl|;
name|void
name|deleteProgram
parameter_list|(
name|GLuint
name|program
parameter_list|)
function_decl|;
name|void
name|deleteTexture
parameter_list|(
name|GLuint
name|texture
parameter_list|)
function_decl|;
name|void
name|deleteRenderbuffer
parameter_list|(
name|GLuint
name|renderbuffer
parameter_list|)
function_decl|;
name|void
name|deleteSampler
parameter_list|(
name|GLuint
name|sampler
parameter_list|)
function_decl|;
name|void
name|deleteTransformFeedback
parameter_list|(
name|GLuint
name|transformFeedback
parameter_list|)
function_decl|;
name|void
name|deleteFenceSync
parameter_list|(
name|GLsync
name|fenceSync
parameter_list|)
function_decl|;
comment|// Framebuffers are owned by the Context, so these methods do not pass through
name|GLuint
name|createFramebuffer
parameter_list|()
function_decl|;
name|void
name|deleteFramebuffer
parameter_list|(
name|GLuint
name|framebuffer
parameter_list|)
function_decl|;
comment|// NV Fences are owned by the Context.
name|GLuint
name|createFenceNV
parameter_list|()
function_decl|;
name|void
name|deleteFenceNV
parameter_list|(
name|GLuint
name|fence
parameter_list|)
function_decl|;
comment|// Queries are owned by the Context;
name|GLuint
name|createQuery
parameter_list|()
function_decl|;
name|void
name|deleteQuery
parameter_list|(
name|GLuint
name|query
parameter_list|)
function_decl|;
comment|// Vertex arrays are owned by the Context
name|GLuint
name|createVertexArray
parameter_list|()
function_decl|;
name|void
name|deleteVertexArray
parameter_list|(
name|GLuint
name|vertexArray
parameter_list|)
function_decl|;
name|void
name|bindArrayBuffer
parameter_list|(
name|GLuint
name|buffer
parameter_list|)
function_decl|;
name|void
name|bindElementArrayBuffer
parameter_list|(
name|GLuint
name|buffer
parameter_list|)
function_decl|;
name|void
name|bindTexture
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|handle
parameter_list|)
function_decl|;
name|void
name|bindReadFramebuffer
parameter_list|(
name|GLuint
name|framebuffer
parameter_list|)
function_decl|;
name|void
name|bindDrawFramebuffer
parameter_list|(
name|GLuint
name|framebuffer
parameter_list|)
function_decl|;
name|void
name|bindRenderbuffer
parameter_list|(
name|GLuint
name|renderbuffer
parameter_list|)
function_decl|;
name|void
name|bindVertexArray
parameter_list|(
name|GLuint
name|vertexArray
parameter_list|)
function_decl|;
name|void
name|bindSampler
parameter_list|(
name|GLuint
name|textureUnit
parameter_list|,
name|GLuint
name|sampler
parameter_list|)
function_decl|;
name|void
name|bindGenericUniformBuffer
parameter_list|(
name|GLuint
name|buffer
parameter_list|)
function_decl|;
name|void
name|bindIndexedUniformBuffer
parameter_list|(
name|GLuint
name|buffer
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLintptr
name|offset
parameter_list|,
name|GLsizeiptr
name|size
parameter_list|)
function_decl|;
name|void
name|bindGenericTransformFeedbackBuffer
parameter_list|(
name|GLuint
name|buffer
parameter_list|)
function_decl|;
name|void
name|bindIndexedTransformFeedbackBuffer
parameter_list|(
name|GLuint
name|buffer
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLintptr
name|offset
parameter_list|,
name|GLsizeiptr
name|size
parameter_list|)
function_decl|;
name|void
name|bindCopyReadBuffer
parameter_list|(
name|GLuint
name|buffer
parameter_list|)
function_decl|;
name|void
name|bindCopyWriteBuffer
parameter_list|(
name|GLuint
name|buffer
parameter_list|)
function_decl|;
name|void
name|bindPixelPackBuffer
parameter_list|(
name|GLuint
name|buffer
parameter_list|)
function_decl|;
name|void
name|bindPixelUnpackBuffer
parameter_list|(
name|GLuint
name|buffer
parameter_list|)
function_decl|;
name|void
name|useProgram
parameter_list|(
name|GLuint
name|program
parameter_list|)
function_decl|;
name|Error
name|linkProgram
parameter_list|(
name|GLuint
name|program
parameter_list|)
function_decl|;
name|Error
name|setProgramBinary
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|binaryFormat
parameter_list|,
specifier|const
name|void
modifier|*
name|binary
parameter_list|,
name|GLint
name|length
parameter_list|)
function_decl|;
name|void
name|bindTransformFeedback
parameter_list|(
name|GLuint
name|transformFeedback
parameter_list|)
function_decl|;
name|Error
name|beginQuery
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|query
parameter_list|)
function_decl|;
name|Error
name|endQuery
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
name|void
name|setFramebufferZero
parameter_list|(
name|Framebuffer
modifier|*
name|framebuffer
parameter_list|)
function_decl|;
name|void
name|setVertexAttribDivisor
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLuint
name|divisor
parameter_list|)
function_decl|;
name|void
name|samplerParameteri
parameter_list|(
name|GLuint
name|sampler
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
name|void
name|samplerParameterf
parameter_list|(
name|GLuint
name|sampler
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
function_decl|;
name|GLint
name|getSamplerParameteri
parameter_list|(
name|GLuint
name|sampler
parameter_list|,
name|GLenum
name|pname
parameter_list|)
function_decl|;
name|GLfloat
name|getSamplerParameterf
parameter_list|(
name|GLuint
name|sampler
parameter_list|,
name|GLenum
name|pname
parameter_list|)
function_decl|;
name|Buffer
modifier|*
name|getBuffer
parameter_list|(
name|GLuint
name|handle
parameter_list|)
function_decl|;
name|FenceNV
modifier|*
name|getFenceNV
parameter_list|(
name|GLuint
name|handle
parameter_list|)
function_decl|;
name|FenceSync
modifier|*
name|getFenceSync
argument_list|(
name|GLsync
name|handle
argument_list|)
decl|const
decl_stmt|;
name|Shader
modifier|*
name|getShader
argument_list|(
name|GLuint
name|handle
argument_list|)
decl|const
decl_stmt|;
name|Program
modifier|*
name|getProgram
argument_list|(
name|GLuint
name|handle
argument_list|)
decl|const
decl_stmt|;
name|Texture
modifier|*
name|getTexture
argument_list|(
name|GLuint
name|handle
argument_list|)
decl|const
decl_stmt|;
name|Framebuffer
modifier|*
name|getFramebuffer
argument_list|(
name|GLuint
name|handle
argument_list|)
decl|const
decl_stmt|;
name|Renderbuffer
modifier|*
name|getRenderbuffer
parameter_list|(
name|GLuint
name|handle
parameter_list|)
function_decl|;
name|VertexArray
modifier|*
name|getVertexArray
argument_list|(
name|GLuint
name|handle
argument_list|)
decl|const
decl_stmt|;
name|Sampler
modifier|*
name|getSampler
argument_list|(
name|GLuint
name|handle
argument_list|)
decl|const
decl_stmt|;
name|Query
modifier|*
name|getQuery
parameter_list|(
name|GLuint
name|handle
parameter_list|,
name|bool
name|create
parameter_list|,
name|GLenum
name|type
parameter_list|)
function_decl|;
name|TransformFeedback
modifier|*
name|getTransformFeedback
argument_list|(
name|GLuint
name|handle
argument_list|)
decl|const
decl_stmt|;
name|Texture
modifier|*
name|getTargetTexture
argument_list|(
name|GLenum
name|target
argument_list|)
decl|const
decl_stmt|;
name|Texture2D
operator|*
name|getTexture2D
argument_list|()
specifier|const
expr_stmt|;
name|TextureCubeMap
operator|*
name|getTextureCubeMap
argument_list|()
specifier|const
expr_stmt|;
name|Texture3D
operator|*
name|getTexture3D
argument_list|()
specifier|const
expr_stmt|;
name|Texture2DArray
operator|*
name|getTexture2DArray
argument_list|()
specifier|const
expr_stmt|;
name|Texture
modifier|*
name|getSamplerTexture
argument_list|(
name|unsigned
name|int
name|sampler
argument_list|,
name|GLenum
name|type
argument_list|)
decl|const
decl_stmt|;
name|bool
name|isSampler
argument_list|(
name|GLuint
name|samplerName
argument_list|)
decl|const
decl_stmt|;
name|void
name|getBooleanv
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLboolean
modifier|*
name|params
parameter_list|)
function_decl|;
name|void
name|getFloatv
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|void
name|getIntegerv
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|void
name|getInteger64v
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLint64
modifier|*
name|params
parameter_list|)
function_decl|;
name|bool
name|getIndexedIntegerv
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLint
modifier|*
name|data
parameter_list|)
function_decl|;
name|bool
name|getIndexedInteger64v
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLint64
modifier|*
name|data
parameter_list|)
function_decl|;
name|bool
name|getQueryParameterInfo
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLenum
modifier|*
name|type
parameter_list|,
name|unsigned
name|int
modifier|*
name|numParams
parameter_list|)
function_decl|;
name|bool
name|getIndexedQueryParameterInfo
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
modifier|*
name|type
parameter_list|,
name|unsigned
name|int
modifier|*
name|numParams
parameter_list|)
function_decl|;
name|Error
name|clear
parameter_list|(
name|GLbitfield
name|mask
parameter_list|)
function_decl|;
name|Error
name|clearBufferfv
parameter_list|(
name|GLenum
name|buffer
parameter_list|,
name|GLint
name|drawbuffer
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|values
parameter_list|)
function_decl|;
name|Error
name|clearBufferuiv
parameter_list|(
name|GLenum
name|buffer
parameter_list|,
name|GLint
name|drawbuffer
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|values
parameter_list|)
function_decl|;
name|Error
name|clearBufferiv
parameter_list|(
name|GLenum
name|buffer
parameter_list|,
name|GLint
name|drawbuffer
parameter_list|,
specifier|const
name|GLint
modifier|*
name|values
parameter_list|)
function_decl|;
name|Error
name|clearBufferfi
parameter_list|(
name|GLenum
name|buffer
parameter_list|,
name|GLint
name|drawbuffer
parameter_list|,
name|GLfloat
name|depth
parameter_list|,
name|GLint
name|stencil
parameter_list|)
function_decl|;
name|Error
name|readPixels
parameter_list|(
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
modifier|*
name|bufSize
parameter_list|,
name|void
modifier|*
name|pixels
parameter_list|)
function_decl|;
name|Error
name|drawArrays
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLint
name|first
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLsizei
name|instances
parameter_list|)
function_decl|;
name|Error
name|drawElements
argument_list|(
name|GLenum
name|mode
argument_list|,
name|GLsizei
name|count
argument_list|,
name|GLenum
name|type
argument_list|,
specifier|const
name|GLvoid
operator|*
name|indices
argument_list|,
name|GLsizei
name|instances
argument_list|,
specifier|const
name|rx
operator|::
name|RangeUI
operator|&
name|indexRange
argument_list|)
decl_stmt|;
name|Error
name|sync
parameter_list|(
name|bool
name|block
parameter_list|)
function_decl|;
comment|// flush/finish
name|void
name|recordError
parameter_list|(
specifier|const
name|Error
modifier|&
name|error
parameter_list|)
function_decl|;
name|GLenum
name|getError
parameter_list|()
function_decl|;
name|GLenum
name|getResetStatus
parameter_list|()
function_decl|;
name|virtual
name|bool
name|isResetNotificationEnabled
parameter_list|()
function_decl|;
name|virtual
name|int
name|getClientVersion
argument_list|()
specifier|const
expr_stmt|;
specifier|const
name|Caps
operator|&
name|getCaps
argument_list|()
specifier|const
expr_stmt|;
specifier|const
name|TextureCapsMap
operator|&
name|getTextureCaps
argument_list|()
specifier|const
expr_stmt|;
specifier|const
name|Extensions
operator|&
name|getExtensions
argument_list|()
specifier|const
expr_stmt|;
specifier|const
name|std
operator|::
name|string
operator|&
name|getRendererString
argument_list|()
specifier|const
expr_stmt|;
specifier|const
name|std
operator|::
name|string
operator|&
name|getExtensionString
argument_list|()
specifier|const
expr_stmt|;
specifier|const
name|std
operator|::
name|string
operator|&
name|getExtensionString
argument_list|(
argument|size_t idx
argument_list|)
specifier|const
expr_stmt|;
name|size_t
name|getExtensionStringCount
argument_list|()
specifier|const
expr_stmt|;
name|void
name|getCurrentReadFormatType
parameter_list|(
name|GLenum
modifier|*
name|internalFormat
parameter_list|,
name|GLenum
modifier|*
name|format
parameter_list|,
name|GLenum
modifier|*
name|type
parameter_list|)
function_decl|;
name|Error
name|blitFramebuffer
parameter_list|(
name|GLint
name|srcX0
parameter_list|,
name|GLint
name|srcY0
parameter_list|,
name|GLint
name|srcX1
parameter_list|,
name|GLint
name|srcY1
parameter_list|,
name|GLint
name|dstX0
parameter_list|,
name|GLint
name|dstY0
parameter_list|,
name|GLint
name|dstX1
parameter_list|,
name|GLint
name|dstY1
parameter_list|,
name|GLbitfield
name|mask
parameter_list|,
name|GLenum
name|filter
parameter_list|)
function_decl|;
name|rx
operator|::
name|Renderer
operator|*
name|getRenderer
argument_list|()
block|{
return|return
name|mRenderer
return|;
block|}
name|State
modifier|&
name|getState
parameter_list|()
block|{
return|return
name|mState
return|;
block|}
specifier|const
name|State
operator|&
name|getState
argument_list|()
specifier|const
block|{
return|return
name|mState
return|;
block|}
name|Data
name|getData
argument_list|()
specifier|const
expr_stmt|;
name|void
name|releaseShaderCompiler
parameter_list|()
function_decl|;
name|private
label|:
name|DISALLOW_COPY_AND_ASSIGN
argument_list|(
name|Context
argument_list|)
expr_stmt|;
name|void
name|detachBuffer
parameter_list|(
name|GLuint
name|buffer
parameter_list|)
function_decl|;
name|void
name|detachTexture
parameter_list|(
name|GLuint
name|texture
parameter_list|)
function_decl|;
name|void
name|detachFramebuffer
parameter_list|(
name|GLuint
name|framebuffer
parameter_list|)
function_decl|;
name|void
name|detachRenderbuffer
parameter_list|(
name|GLuint
name|renderbuffer
parameter_list|)
function_decl|;
name|void
name|detachVertexArray
parameter_list|(
name|GLuint
name|vertexArray
parameter_list|)
function_decl|;
name|void
name|detachTransformFeedback
parameter_list|(
name|GLuint
name|transformFeedback
parameter_list|)
function_decl|;
name|void
name|detachSampler
parameter_list|(
name|GLuint
name|sampler
parameter_list|)
function_decl|;
name|void
name|initRendererString
parameter_list|()
function_decl|;
name|void
name|initExtensionStrings
parameter_list|()
function_decl|;
name|void
name|initCaps
parameter_list|(
name|GLuint
name|clientVersion
parameter_list|)
function_decl|;
comment|// Caps to use for validation
name|Caps
name|mCaps
decl_stmt|;
name|TextureCapsMap
name|mTextureCaps
decl_stmt|;
name|Extensions
name|mExtensions
decl_stmt|;
name|rx
operator|::
name|Renderer
operator|*
specifier|const
name|mRenderer
expr_stmt|;
name|State
name|mState
decl_stmt|;
name|int
name|mClientVersion
decl_stmt|;
name|TextureMap
name|mZeroTextures
decl_stmt|;
typedef|typedef
name|std
operator|::
name|unordered_map
operator|<
name|GLuint
operator|,
name|Framebuffer
operator|*
operator|>
name|FramebufferMap
expr_stmt|;
name|FramebufferMap
name|mFramebufferMap
decl_stmt|;
name|HandleAllocator
name|mFramebufferHandleAllocator
decl_stmt|;
typedef|typedef
name|std
operator|::
name|unordered_map
operator|<
name|GLuint
operator|,
name|FenceNV
operator|*
operator|>
name|FenceNVMap
expr_stmt|;
name|FenceNVMap
name|mFenceNVMap
decl_stmt|;
name|HandleAllocator
name|mFenceNVHandleAllocator
decl_stmt|;
typedef|typedef
name|std
operator|::
name|unordered_map
operator|<
name|GLuint
operator|,
name|Query
operator|*
operator|>
name|QueryMap
expr_stmt|;
name|QueryMap
name|mQueryMap
decl_stmt|;
name|HandleAllocator
name|mQueryHandleAllocator
decl_stmt|;
typedef|typedef
name|std
operator|::
name|unordered_map
operator|<
name|GLuint
operator|,
name|VertexArray
operator|*
operator|>
name|VertexArrayMap
expr_stmt|;
name|VertexArrayMap
name|mVertexArrayMap
decl_stmt|;
name|HandleAllocator
name|mVertexArrayHandleAllocator
decl_stmt|;
name|BindingPointer
operator|<
name|TransformFeedback
operator|>
name|mTransformFeedbackZero
expr_stmt|;
typedef|typedef
name|std
operator|::
name|unordered_map
operator|<
name|GLuint
operator|,
name|TransformFeedback
operator|*
operator|>
name|TransformFeedbackMap
expr_stmt|;
name|TransformFeedbackMap
name|mTransformFeedbackMap
decl_stmt|;
name|HandleAllocator
name|mTransformFeedbackAllocator
decl_stmt|;
name|std
operator|::
name|string
name|mRendererString
expr_stmt|;
name|std
operator|::
name|string
name|mExtensionString
expr_stmt|;
name|std
operator|::
name|vector
operator|<
name|std
operator|::
name|string
operator|>
name|mExtensionStrings
expr_stmt|;
comment|// Recorded errors
typedef|typedef
name|std
operator|::
name|set
operator|<
name|GLenum
operator|>
name|ErrorSet
expr_stmt|;
name|ErrorSet
name|mErrors
decl_stmt|;
comment|// Current/lost context flags
name|bool
name|mHasBeenCurrent
decl_stmt|;
name|bool
name|mContextLost
decl_stmt|;
name|GLenum
name|mResetStatus
decl_stmt|;
name|GLenum
name|mResetStrategy
decl_stmt|;
name|bool
name|mRobustAccess
decl_stmt|;
name|ResourceManager
modifier|*
name|mResourceManager
decl_stmt|;
block|}
empty_stmt|;
block|}
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// INCLUDE_CONTEXT_H_
end_comment
end_unit
