begin_unit
begin_comment
comment|//
end_comment
begin_comment
comment|// Copyright (c) 2002-2011 The ANGLE Project Authors. All rights reserved.
end_comment
begin_comment
comment|// Use of this source code is governed by a BSD-style license that can be
end_comment
begin_comment
comment|// found in the LICENSE file.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// HandleAllocator.h: Defines the gl::HandleAllocator class, which is used to
end_comment
begin_comment
comment|// allocate GL handles.
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|LIBGLESV2_HANDLEALLOCATOR_H_
end_ifndef
begin_define
DECL|macro|LIBGLESV2_HANDLEALLOCATOR_H_
define|#
directive|define
name|LIBGLESV2_HANDLEALLOCATOR_H_
end_define
begin_include
include|#
directive|include
file|"angle_gl.h"
end_include
begin_include
include|#
directive|include
file|<vector>
end_include
begin_include
include|#
directive|include
file|"common/angleutils.h"
end_include
begin_decl_stmt
name|namespace
name|gl
block|{
name|class
name|HandleAllocator
block|{
name|public
label|:
name|HandleAllocator
argument_list|()
expr_stmt|;
name|virtual
operator|~
name|HandleAllocator
argument_list|()
expr_stmt|;
name|void
name|setBaseHandle
parameter_list|(
name|GLuint
name|value
parameter_list|)
function_decl|;
name|GLuint
name|allocate
parameter_list|()
function_decl|;
name|void
name|release
parameter_list|(
name|GLuint
name|handle
parameter_list|)
function_decl|;
name|private
label|:
name|DISALLOW_COPY_AND_ASSIGN
argument_list|(
name|HandleAllocator
argument_list|)
expr_stmt|;
name|GLuint
name|mBaseValue
decl_stmt|;
name|GLuint
name|mNextValue
decl_stmt|;
typedef|typedef
name|std
operator|::
name|vector
operator|<
name|GLuint
operator|>
name|HandleList
expr_stmt|;
name|HandleList
name|mFreeValues
decl_stmt|;
block|}
empty_stmt|;
block|}
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// LIBGLESV2_HANDLEALLOCATOR_H_
end_comment
end_unit
