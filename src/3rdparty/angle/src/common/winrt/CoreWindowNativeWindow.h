begin_unit
begin_comment
comment|//
end_comment
begin_comment
comment|// Copyright (c) 2014 The ANGLE Project Authors. All rights reserved.
end_comment
begin_comment
comment|// Use of this source code is governed by a BSD-style license that can be
end_comment
begin_comment
comment|// found in the LICENSE file.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// CoreWindowNativeWindow.h: NativeWindow for managing ICoreWindow native window types.
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|COMMON_WINRT_COREWINDOWNATIVEWINDOW_H_
end_ifndef
begin_define
DECL|macro|COMMON_WINRT_COREWINDOWNATIVEWINDOW_H_
define|#
directive|define
name|COMMON_WINRT_COREWINDOWNATIVEWINDOW_H_
end_define
begin_include
include|#
directive|include
file|"common/winrt/InspectableNativeWindow.h"
end_include
begin_include
include|#
directive|include
file|<memory>
end_include
begin_include
include|#
directive|include
file|<windows.graphics.display.h>
end_include
begin_decl_stmt
name|namespace
name|rx
block|{
name|class
name|CoreWindowNativeWindow
range|:
name|public
name|InspectableNativeWindow
decl_stmt|,
name|public
name|std
decl|::
name|enable_shared_from_this
decl|<
name|CoreWindowNativeWindow
decl|>
block|{
name|public
label|:
operator|~
name|CoreWindowNativeWindow
argument_list|()
expr_stmt|;
name|bool
name|initialize
parameter_list|(
name|EGLNativeWindowType
name|window
parameter_list|,
name|EGLNativeDisplayType
name|display
parameter_list|,
name|IPropertySet
modifier|*
name|propertySet
parameter_list|)
function_decl|;
name|bool
name|registerForSizeChangeEvents
parameter_list|()
function_decl|;
name|void
name|unregisterForSizeChangeEvents
parameter_list|()
function_decl|;
name|HRESULT
name|createSwapChain
parameter_list|(
name|ID3D11Device
modifier|*
name|device
parameter_list|,
name|DXGIFactory
modifier|*
name|factory
parameter_list|,
name|DXGI_FORMAT
name|format
parameter_list|,
name|unsigned
name|int
name|width
parameter_list|,
name|unsigned
name|int
name|height
parameter_list|,
name|DXGISwapChain
modifier|*
modifier|*
name|swapChain
parameter_list|)
function_decl|;
name|private
label|:
name|HRESULT
name|onSizeChanged
argument_list|(
name|ABI
operator|::
name|Windows
operator|::
name|UI
operator|::
name|Core
operator|::
name|ICoreWindow
operator|*
argument_list|,
name|ABI
operator|::
name|Windows
operator|::
name|UI
operator|::
name|Core
operator|::
name|IWindowSizeChangedEventArgs
operator|*
argument_list|)
decl_stmt|;
name|ComPtr
operator|<
name|ABI
operator|::
name|Windows
operator|::
name|UI
operator|::
name|Core
operator|::
name|ICoreWindow
operator|>
name|mCoreWindow
expr_stmt|;
name|ComPtr
operator|<
name|ABI
operator|::
name|Windows
operator|::
name|Graphics
operator|::
name|Display
operator|::
name|IDisplayInformation
operator|>
name|mDisplayInformation
expr_stmt|;
name|ComPtr
operator|<
name|IMap
operator|<
name|HSTRING
operator|,
name|IInspectable
operator|*
operator|>>
name|mPropertyMap
expr_stmt|;
block|}
empty_stmt|;
block|}
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// COMMON_WINRT_COREWINDOWNATIVEWINDOW_H_
end_comment
end_unit
