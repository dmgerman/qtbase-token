begin_unit
begin_comment
comment|//
end_comment
begin_comment
comment|// Copyright (c) 2014 The ANGLE Project Authors. All rights reserved.
end_comment
begin_comment
comment|// Use of this source code is governed by a BSD-style license that can be
end_comment
begin_comment
comment|// found in the LICENSE file.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// platform.h: Operating system specific includes and defines.
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|COMMON_PLATFORM_H_
end_ifndef
begin_define
DECL|macro|COMMON_PLATFORM_H_
define|#
directive|define
name|COMMON_PLATFORM_H_
end_define
begin_if
if|#
directive|if
name|defined
argument_list|(
name|_WIN32
argument_list|)
operator|||
name|defined
argument_list|(
name|_WIN64
argument_list|)
end_if
begin_define
DECL|macro|ANGLE_PLATFORM_WINDOWS
define|#
directive|define
name|ANGLE_PLATFORM_WINDOWS
value|1
end_define
begin_elif
elif|#
directive|elif
name|defined
argument_list|(
name|__APPLE__
argument_list|)
end_elif
begin_define
DECL|macro|ANGLE_PLATFORM_APPLE
define|#
directive|define
name|ANGLE_PLATFORM_APPLE
value|1
end_define
begin_define
DECL|macro|ANGLE_PLATFORM_POSIX
define|#
directive|define
name|ANGLE_PLATFORM_POSIX
value|1
end_define
begin_elif
elif|#
directive|elif
name|defined
argument_list|(
name|__linux__
argument_list|)
end_elif
begin_define
DECL|macro|ANGLE_PLATFORM_LINUX
define|#
directive|define
name|ANGLE_PLATFORM_LINUX
value|1
end_define
begin_define
DECL|macro|ANGLE_PLATFORM_POSIX
define|#
directive|define
name|ANGLE_PLATFORM_POSIX
value|1
end_define
begin_elif
elif|#
directive|elif
name|defined
argument_list|(
name|ANDROID
argument_list|)
end_elif
begin_define
DECL|macro|ANGLE_PLATFORM_ANDROID
define|#
directive|define
name|ANGLE_PLATFORM_ANDROID
value|1
end_define
begin_define
DECL|macro|ANGLE_PLATFORM_POSIX
define|#
directive|define
name|ANGLE_PLATFORM_POSIX
value|1
end_define
begin_elif
elif|#
directive|elif
name|defined
argument_list|(
name|__FreeBSD__
argument_list|)
operator|||
expr|\
name|defined
argument_list|(
name|__OpenBSD__
argument_list|)
operator|||
expr|\
name|defined
argument_list|(
name|__NetBSD__
argument_list|)
operator|||
expr|\
name|defined
argument_list|(
name|__DragonFly__
argument_list|)
operator|||
expr|\
name|defined
argument_list|(
name|__sun
argument_list|)
operator|||
expr|\
name|defined
argument_list|(
name|__GLIBC__
argument_list|)
operator|||
expr|\
name|defined
argument_list|(
name|__GNU__
argument_list|)
operator|||
expr|\
name|defined
argument_list|(
name|__QNX__
argument_list|)
end_elif
begin_define
DECL|macro|ANGLE_PLATFORM_POSIX
define|#
directive|define
name|ANGLE_PLATFORM_POSIX
value|1
end_define
begin_else
else|#
directive|else
end_else
begin_error
error|#
directive|error
error|Unsupported platform.
end_error
begin_endif
endif|#
directive|endif
end_endif
begin_ifdef
ifdef|#
directive|ifdef
name|ANGLE_PLATFORM_WINDOWS
end_ifdef
begin_if
if|#
directive|if
name|defined
argument_list|(
name|WINAPI_FAMILY
argument_list|)
operator|&&
operator|(
name|WINAPI_FAMILY
operator|==
name|WINAPI_FAMILY_PC_APP
operator|||
name|WINAPI_FAMILY
operator|==
name|WINAPI_FAMILY_PHONE_APP
operator|)
end_if
begin_define
DECL|macro|ANGLE_ENABLE_WINDOWS_STORE
define|#
directive|define
name|ANGLE_ENABLE_WINDOWS_STORE
value|1
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|STRICT
end_ifndef
begin_define
DECL|macro|STRICT
define|#
directive|define
name|STRICT
value|1
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|WIN32_LEAN_AND_MEAN
end_ifndef
begin_define
DECL|macro|WIN32_LEAN_AND_MEAN
define|#
directive|define
name|WIN32_LEAN_AND_MEAN
value|1
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|NOMINMAX
end_ifndef
begin_define
DECL|macro|NOMINMAX
define|#
directive|define
name|NOMINMAX
value|1
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_include
include|#
directive|include
file|<windows.h>
end_include
begin_include
include|#
directive|include
file|<intrin.h>
end_include
begin_if
if|#
directive|if
name|defined
argument_list|(
name|ANGLE_ENABLE_D3D9
argument_list|)
end_if
begin_include
include|#
directive|include
file|<d3d9.h>
end_include
begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|COMPILER_IMPLEMENTATION
argument_list|)
end_if
begin_include
include|#
directive|include
file|<d3dcompiler.h>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_endif
endif|#
directive|endif
end_endif
begin_if
if|#
directive|if
name|defined
argument_list|(
name|ANGLE_ENABLE_D3D11
argument_list|)
end_if
begin_include
include|#
directive|include
file|<d3d10_1.h>
end_include
begin_include
include|#
directive|include
file|<d3d10.h>
end_include
begin_include
include|#
directive|include
file|<d3d11.h>
end_include
begin_include
include|#
directive|include
file|<dxgi.h>
end_include
begin_if
if|#
directive|if
name|defined
argument_list|(
name|_MSC_VER
argument_list|)
operator|&&
operator|(
name|_MSC_VER
operator|>=
literal|1700
operator|)
end_if
begin_include
include|#
directive|include
file|<d3d11_1.h>
end_include
begin_include
include|#
directive|include
file|<dxgi1_2.h>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|COMPILER_IMPLEMENTATION
argument_list|)
end_if
begin_include
include|#
directive|include
file|<d3dcompiler.h>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_endif
endif|#
directive|endif
end_endif
begin_if
if|#
directive|if
name|defined
argument_list|(
name|ANGLE_ENABLE_WINDOWS_STORE
argument_list|)
end_if
begin_include
include|#
directive|include
file|<dxgi1_3.h>
end_include
begin_if
if|#
directive|if
name|defined
argument_list|(
name|_DEBUG
argument_list|)
end_if
begin_if
if|#
directive|if
operator|(
name|WINAPI_FAMILY
operator|!=
name|WINAPI_FAMILY_PHONE_APP
operator|)
end_if
begin_include
include|#
directive|include
file|<DXProgrammableCapture.h>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_include
include|#
directive|include
file|<dxgidebug.h>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_endif
endif|#
directive|endif
end_endif
begin_if
if|#
directive|if
name|defined
argument_list|(
name|__MINGW32__
argument_list|)
end_if
begin_comment
comment|// Missing defines on MinGW
end_comment
begin_typedef
DECL|enum|D3D11_MAP_FLAG
typedef|typedef
enum|enum
name|D3D11_MAP_FLAG
block|{
DECL|enumerator|D3D11_MAP_FLAG_DO_NOT_WAIT
name|D3D11_MAP_FLAG_DO_NOT_WAIT
init|=
literal|0x100000L
block|}
DECL|typedef|D3D11_MAP_FLAG
name|D3D11_MAP_FLAG
typedef|;
end_typedef
begin_typedef
DECL|struct|D3D11_QUERY_DATA_SO_STATISTICS
typedef|typedef
struct|struct
name|D3D11_QUERY_DATA_SO_STATISTICS
block|{
DECL|member|NumPrimitivesWritten
name|UINT64
name|NumPrimitivesWritten
decl_stmt|;
DECL|member|PrimitivesStorageNeeded
name|UINT64
name|PrimitivesStorageNeeded
decl_stmt|;
block|}
DECL|typedef|D3D11_QUERY_DATA_SO_STATISTICS
name|D3D11_QUERY_DATA_SO_STATISTICS
typedef|;
end_typedef
begin_typedef
DECL|typedef|PFN_D3D11_CREATE_DEVICE
typedef|typedef
name|HRESULT
function_decl|(
name|WINAPI
modifier|*
name|PFN_D3D11_CREATE_DEVICE
function_decl|)
parameter_list|(
name|IDXGIAdapter
modifier|*
parameter_list|,
name|D3D_DRIVER_TYPE
parameter_list|,
name|HMODULE
parameter_list|,
name|UINT
parameter_list|,
name|CONST
name|D3D_FEATURE_LEVEL
modifier|*
parameter_list|,
name|UINT
name|FeatureLevels
parameter_list|,
name|UINT
parameter_list|,
name|ID3D11Device
modifier|*
modifier|*
parameter_list|,
name|D3D_FEATURE_LEVEL
modifier|*
parameter_list|,
name|ID3D11DeviceContext
modifier|*
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_define
DECL|macro|D3D11_MESSAGE_CATEGORY
define|#
directive|define
name|D3D11_MESSAGE_CATEGORY
value|UINT
end_define
begin_define
DECL|macro|D3D11_MESSAGE_SEVERITY
define|#
directive|define
name|D3D11_MESSAGE_SEVERITY
value|UINT
end_define
begin_define
DECL|macro|D3D11_MESSAGE_ID
define|#
directive|define
name|D3D11_MESSAGE_ID
value|UINT
end_define
begin_struct_decl
struct_decl|struct
name|D3D11_MESSAGE
struct_decl|;
end_struct_decl
begin_typedef
DECL|struct|D3D11_INFO_QUEUE_FILTER_DESC
typedef|typedef
struct|struct
name|D3D11_INFO_QUEUE_FILTER_DESC
block|{
DECL|member|NumCategories
name|UINT
name|NumCategories
decl_stmt|;
DECL|member|pCategoryList
name|D3D11_MESSAGE_CATEGORY
modifier|*
name|pCategoryList
decl_stmt|;
DECL|member|NumSeverities
name|UINT
name|NumSeverities
decl_stmt|;
DECL|member|pSeverityList
name|D3D11_MESSAGE_SEVERITY
modifier|*
name|pSeverityList
decl_stmt|;
DECL|member|NumIDs
name|UINT
name|NumIDs
decl_stmt|;
DECL|member|pIDList
name|D3D11_MESSAGE_ID
modifier|*
name|pIDList
decl_stmt|;
block|}
DECL|typedef|D3D11_INFO_QUEUE_FILTER_DESC
name|D3D11_INFO_QUEUE_FILTER_DESC
typedef|;
end_typedef
begin_typedef
DECL|struct|D3D11_INFO_QUEUE_FILTER
typedef|typedef
struct|struct
name|D3D11_INFO_QUEUE_FILTER
block|{
DECL|member|AllowList
name|D3D11_INFO_QUEUE_FILTER_DESC
name|AllowList
decl_stmt|;
DECL|member|DenyList
name|D3D11_INFO_QUEUE_FILTER_DESC
name|DenyList
decl_stmt|;
block|}
DECL|typedef|D3D11_INFO_QUEUE_FILTER
name|D3D11_INFO_QUEUE_FILTER
typedef|;
end_typedef
begin_decl_stmt
DECL|variable|IID_ID3D11InfoQueue
specifier|static
specifier|const
name|IID
name|IID_ID3D11InfoQueue
init|=
block|{
literal|0x6543dbb6
block|,
literal|0x1b48
block|,
literal|0x42f5
block|,
literal|0xab
block|,
literal|0x82
block|,
literal|0xe9
block|,
literal|0x7e
block|,
literal|0xc7
block|,
literal|0x43
block|,
literal|0x26
block|,
literal|0xf6
block|}
decl_stmt|;
end_decl_stmt
begin_macro
name|MIDL_INTERFACE
argument_list|(
literal|"6543dbb6-1b48-42f5-ab82-e97ec74326f6"
argument_list|)
end_macro
begin_label
name|ID3D11InfoQueue
label|:
end_label
begin_decl_stmt
name|public
name|IUnknown
block|{
name|public
label|:
name|virtual
name|HRESULT
name|__stdcall
name|SetMessageCountLimit
parameter_list|(
name|UINT64
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|__stdcall
name|ClearStoredMessages
parameter_list|()
init|=
literal|0
function_decl|;
name|virtual
name|HRESULT
name|__stdcall
name|GetMessage
parameter_list|(
name|UINT64
parameter_list|,
name|D3D11_MESSAGE
modifier|*
parameter_list|,
name|SIZE_T
modifier|*
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|UINT64
name|__stdcall
name|GetNumMessagesAllowedByStorageFilter
parameter_list|()
init|=
literal|0
function_decl|;
name|virtual
name|UINT64
name|__stdcall
name|GetNumMessagesDeniedByStorageFilter
parameter_list|()
init|=
literal|0
function_decl|;
name|virtual
name|UINT64
name|__stdcall
name|GetNumStoredMessages
parameter_list|()
init|=
literal|0
function_decl|;
name|virtual
name|UINT64
name|__stdcall
name|GetNumStoredMessagesAllowedByRetrievalFilter
parameter_list|()
init|=
literal|0
function_decl|;
name|virtual
name|UINT64
name|__stdcall
name|GetNumMessagesDiscardedByMessageCountLimit
parameter_list|()
init|=
literal|0
function_decl|;
name|virtual
name|UINT64
name|__stdcall
name|GetMessageCountLimit
parameter_list|()
init|=
literal|0
function_decl|;
name|virtual
name|HRESULT
name|__stdcall
name|AddStorageFilterEntries
parameter_list|(
name|D3D11_INFO_QUEUE_FILTER
modifier|*
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|HRESULT
name|__stdcall
name|GetStorageFilter
parameter_list|(
name|D3D11_INFO_QUEUE_FILTER
modifier|*
parameter_list|,
name|SIZE_T
modifier|*
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|__stdcall
name|ClearStorageFilter
parameter_list|()
init|=
literal|0
function_decl|;
name|virtual
name|HRESULT
name|__stdcall
name|PushEmptyStorageFilter
parameter_list|()
init|=
literal|0
function_decl|;
name|virtual
name|HRESULT
name|__stdcall
name|PushCopyOfStorageFilter
parameter_list|()
init|=
literal|0
function_decl|;
name|virtual
name|HRESULT
name|__stdcall
name|PushStorageFilter
parameter_list|(
name|D3D11_INFO_QUEUE_FILTER
modifier|*
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|__stdcall
name|PopStorageFilter
parameter_list|()
init|=
literal|0
function_decl|;
name|virtual
name|UINT
name|__stdcall
name|GetStorageFilterStackSize
parameter_list|()
init|=
literal|0
function_decl|;
name|virtual
name|HRESULT
name|__stdcall
name|AddRetrievalFilterEntries
parameter_list|(
name|D3D11_INFO_QUEUE_FILTER
modifier|*
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|HRESULT
name|__stdcall
name|GetRetrievalFilter
parameter_list|(
name|D3D11_INFO_QUEUE_FILTER
modifier|*
parameter_list|,
name|SIZE_T
modifier|*
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|__stdcall
name|ClearRetrievalFilter
parameter_list|()
init|=
literal|0
function_decl|;
name|virtual
name|HRESULT
name|__stdcall
name|PushEmptyRetrievalFilter
parameter_list|()
init|=
literal|0
function_decl|;
name|virtual
name|HRESULT
name|__stdcall
name|PushCopyOfRetrievalFilter
parameter_list|()
init|=
literal|0
function_decl|;
name|virtual
name|HRESULT
name|__stdcall
name|PushRetrievalFilter
parameter_list|(
name|D3D11_INFO_QUEUE_FILTER
modifier|*
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|__stdcall
name|PopRetrievalFilter
parameter_list|()
init|=
literal|0
function_decl|;
name|virtual
name|UINT
name|__stdcall
name|GetRetrievalFilterStackSize
parameter_list|()
init|=
literal|0
function_decl|;
name|virtual
name|HRESULT
name|__stdcall
name|AddMessage
parameter_list|(
name|D3D11_MESSAGE_CATEGORY
parameter_list|,
name|D3D11_MESSAGE_SEVERITY
parameter_list|,
name|D3D11_MESSAGE_ID
parameter_list|,
name|LPCSTR
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|HRESULT
name|__stdcall
name|AddApplicationMessage
parameter_list|(
name|D3D11_MESSAGE_SEVERITY
parameter_list|,
name|LPCSTR
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|HRESULT
name|__stdcall
name|SetBreakOnCategory
parameter_list|(
name|D3D11_MESSAGE_CATEGORY
parameter_list|,
name|BOOL
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|HRESULT
name|__stdcall
name|SetBreakOnSeverity
parameter_list|(
name|D3D11_MESSAGE_SEVERITY
parameter_list|,
name|BOOL
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|HRESULT
name|__stdcall
name|SetBreakOnID
parameter_list|(
name|D3D11_MESSAGE_ID
parameter_list|,
name|BOOL
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|BOOL
name|__stdcall
name|GetBreakOnCategory
parameter_list|(
name|D3D11_MESSAGE_CATEGORY
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|BOOL
name|__stdcall
name|GetBreakOnSeverity
parameter_list|(
name|D3D11_MESSAGE_SEVERITY
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|BOOL
name|__stdcall
name|GetBreakOnID
parameter_list|(
name|D3D11_MESSAGE_ID
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|__stdcall
name|SetMuteDebugOutput
parameter_list|(
name|BOOL
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|BOOL
name|__stdcall
name|GetMuteDebugOutput
parameter_list|()
init|=
literal|0
function_decl|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// __MINGW32__
end_comment
begin_undef
DECL|macro|near
undef|#
directive|undef
name|near
end_undef
begin_undef
DECL|macro|far
undef|#
directive|undef
name|far
end_undef
begin_endif
endif|#
directive|endif
end_endif
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// COMMON_PLATFORM_H_
end_comment
end_unit
