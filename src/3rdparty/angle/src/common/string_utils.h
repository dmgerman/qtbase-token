begin_unit
begin_comment
comment|//
end_comment
begin_comment
comment|// Copyright 2015 The ANGLE Project Authors. All rights reserved.
end_comment
begin_comment
comment|// Use of this source code is governed by a BSD-style license that can be
end_comment
begin_comment
comment|// found in the LICENSE file.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// string_utils:
end_comment
begin_comment
comment|//   String helper functions.
end_comment
begin_comment
comment|//
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|LIBANGLE_STRING_UTILS_H_
end_ifndef
begin_define
DECL|macro|LIBANGLE_STRING_UTILS_H_
define|#
directive|define
name|LIBANGLE_STRING_UTILS_H_
end_define
begin_include
include|#
directive|include
file|<string>
end_include
begin_include
include|#
directive|include
file|<vector>
end_include
begin_decl_stmt
name|namespace
name|angle
block|{
specifier|extern
specifier|const
name|char
name|kWhitespaceASCII
index|[]
decl_stmt|;
enum|enum
name|WhitespaceHandling
block|{
name|KEEP_WHITESPACE
block|,
name|TRIM_WHITESPACE
block|, }
enum|;
enum|enum
name|SplitResult
block|{
name|SPLIT_WANT_ALL
block|,
name|SPLIT_WANT_NONEMPTY
block|, }
enum|;
name|std
operator|::
name|vector
operator|<
name|std
operator|::
name|string
operator|>
name|SplitString
argument_list|(
argument|const std::string&input
argument_list|,
argument|const std::string&delimiters
argument_list|,
argument|WhitespaceHandling whitespace
argument_list|,
argument|SplitResult resultType
argument_list|)
expr_stmt|;
name|void
name|SplitStringAlongWhitespace
argument_list|(
specifier|const
name|std
operator|::
name|string
operator|&
name|input
argument_list|,
name|std
operator|::
name|vector
operator|<
name|std
operator|::
name|string
operator|>
operator|*
name|tokensOut
argument_list|)
decl_stmt|;
name|std
operator|::
name|string
name|TrimString
argument_list|(
specifier|const
name|std
operator|::
name|string
operator|&
name|input
argument_list|,
specifier|const
name|std
operator|::
name|string
operator|&
name|trimChars
argument_list|)
expr_stmt|;
name|bool
name|HexStringToUInt
argument_list|(
specifier|const
name|std
operator|::
name|string
operator|&
name|input
argument_list|,
name|unsigned
name|int
operator|*
name|uintOut
argument_list|)
decl_stmt|;
name|bool
name|ReadFileToString
argument_list|(
specifier|const
name|std
operator|::
name|string
operator|&
name|path
argument_list|,
name|std
operator|::
name|string
operator|*
name|stringOut
argument_list|)
decl_stmt|;
block|}
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// LIBANGLE_STRING_UTILS_H_
end_comment
end_unit
