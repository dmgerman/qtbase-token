begin_unit
begin_comment
comment|//
end_comment
begin_comment
comment|// Copyright (c) 2014 The ANGLE Project Authors. All rights reserved.
end_comment
begin_comment
comment|// Use of this source code is governed by a BSD-style license that can be
end_comment
begin_comment
comment|// found in the LICENSE file.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// tls.h: Simple cross-platform interface for thread local storage.
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|COMMON_TLS_H_
end_ifndef
begin_define
DECL|macro|COMMON_TLS_H_
define|#
directive|define
name|COMMON_TLS_H_
end_define
begin_include
include|#
directive|include
file|"common/platform.h"
end_include
begin_ifdef
ifdef|#
directive|ifdef
name|ANGLE_PLATFORM_WINDOWS
end_ifdef
begin_comment
comment|// TLS does not exist for Windows Store and needs to be emulated
end_comment
begin_ifdef
ifdef|#
directive|ifdef
name|ANGLE_ENABLE_WINDOWS_STORE
end_ifdef
begin_define
DECL|macro|TLS_OUT_OF_INDEXES
define|#
directive|define
name|TLS_OUT_OF_INDEXES
value|-1
end_define
begin_ifndef
ifndef|#
directive|ifndef
name|CREATE_SUSPENDED
end_ifndef
begin_define
DECL|macro|CREATE_SUSPENDED
define|#
directive|define
name|CREATE_SUSPENDED
value|0x00000004
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_endif
endif|#
directive|endif
end_endif
begin_typedef
DECL|typedef|TLSIndex
typedef|typedef
name|DWORD
name|TLSIndex
typedef|;
end_typedef
begin_define
DECL|macro|TLS_INVALID_INDEX
define|#
directive|define
name|TLS_INVALID_INDEX
value|(TLS_OUT_OF_INDEXES)
end_define
begin_elif
elif|#
directive|elif
name|defined
argument_list|(
name|ANGLE_PLATFORM_POSIX
argument_list|)
end_elif
begin_include
include|#
directive|include
file|<pthread.h>
end_include
begin_include
include|#
directive|include
file|<semaphore.h>
end_include
begin_include
include|#
directive|include
file|<errno.h>
end_include
begin_typedef
DECL|typedef|TLSIndex
typedef|typedef
name|pthread_key_t
name|TLSIndex
typedef|;
end_typedef
begin_define
DECL|macro|TLS_INVALID_INDEX
define|#
directive|define
name|TLS_INVALID_INDEX
value|(static_cast<TLSIndex>(-1))
end_define
begin_else
else|#
directive|else
end_else
begin_error
error|#
directive|error
error|Unsupported platform.
end_error
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// TODO(kbr): for POSIX platforms this will have to be changed to take
end_comment
begin_comment
comment|// in a destructor function pointer, to allow the thread-local storage
end_comment
begin_comment
comment|// to be properly deallocated upon thread exit.
end_comment
begin_function_decl
name|TLSIndex
name|CreateTLSIndex
parameter_list|()
function_decl|;
end_function_decl
begin_function_decl
name|bool
name|DestroyTLSIndex
parameter_list|(
name|TLSIndex
name|index
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|bool
name|SetTLSValue
parameter_list|(
name|TLSIndex
name|index
parameter_list|,
name|void
modifier|*
name|value
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|void
modifier|*
name|GetTLSValue
parameter_list|(
name|TLSIndex
name|index
parameter_list|)
function_decl|;
end_function_decl
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// COMMON_TLS_H_
end_comment
end_unit
