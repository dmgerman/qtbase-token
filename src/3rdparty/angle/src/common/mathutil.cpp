begin_unit
begin_comment
comment|//
end_comment
begin_comment
comment|// Copyright (c) 2013 The ANGLE Project Authors. All rights reserved.
end_comment
begin_comment
comment|// Use of this source code is governed by a BSD-style license that can be
end_comment
begin_comment
comment|// found in the LICENSE file.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// mathutil.cpp: Math and bit manipulation functions.
end_comment
begin_include
include|#
directive|include
file|"common/mathutil.h"
end_include
begin_include
include|#
directive|include
file|<algorithm>
end_include
begin_include
include|#
directive|include
file|<math.h>
end_include
begin_namespace
DECL|namespace|gl
namespace|namespace
name|gl
block|{
DECL|struct|RGB9E5Data
struct|struct
name|RGB9E5Data
block|{
DECL|member|R
name|unsigned
name|int
name|R
range|:
literal|9
decl_stmt|;
DECL|member|G
name|unsigned
name|int
name|G
range|:
literal|9
decl_stmt|;
DECL|member|B
name|unsigned
name|int
name|B
range|:
literal|9
decl_stmt|;
DECL|member|E
name|unsigned
name|int
name|E
range|:
literal|5
decl_stmt|;
block|}
struct|;
comment|// B is the exponent bias (15)
DECL|member|g_sharedexp_bias
specifier|static
specifier|const
name|int
name|g_sharedexp_bias
init|=
literal|15
decl_stmt|;
comment|// N is the number of mantissa bits per component (9)
DECL|member|g_sharedexp_mantissabits
specifier|static
specifier|const
name|int
name|g_sharedexp_mantissabits
init|=
literal|9
decl_stmt|;
comment|// Emax is the maximum allowed biased exponent value (31)
DECL|member|g_sharedexp_maxexponent
specifier|static
specifier|const
name|int
name|g_sharedexp_maxexponent
init|=
literal|31
decl_stmt|;
DECL|member|g_sharedexp_max
specifier|static
specifier|const
name|float
name|g_sharedexp_max
init|=
operator|(
operator|(
name|pow
argument_list|(
literal|2.0f
argument_list|,
name|g_sharedexp_mantissabits
argument_list|)
operator|-
literal|1
operator|)
operator|/
name|pow
argument_list|(
literal|2.0f
argument_list|,
name|g_sharedexp_mantissabits
argument_list|)
operator|)
operator|*
name|pow
argument_list|(
literal|2.0f
argument_list|,
name|g_sharedexp_maxexponent
operator|-
name|g_sharedexp_bias
argument_list|)
decl_stmt|;
DECL|function|convertRGBFloatsTo999E5
name|unsigned
name|int
name|convertRGBFloatsTo999E5
parameter_list|(
name|float
name|red
parameter_list|,
name|float
name|green
parameter_list|,
name|float
name|blue
parameter_list|)
block|{
specifier|const
name|float
name|red_c
init|=
name|std
operator|::
name|max
argument_list|<
name|float
argument_list|>
argument_list|(
literal|0
argument_list|,
name|std
operator|::
name|min
argument_list|(
name|g_sharedexp_max
argument_list|,
name|red
argument_list|)
argument_list|)
decl_stmt|;
specifier|const
name|float
name|green_c
init|=
name|std
operator|::
name|max
argument_list|<
name|float
argument_list|>
argument_list|(
literal|0
argument_list|,
name|std
operator|::
name|min
argument_list|(
name|g_sharedexp_max
argument_list|,
name|green
argument_list|)
argument_list|)
decl_stmt|;
specifier|const
name|float
name|blue_c
init|=
name|std
operator|::
name|max
argument_list|<
name|float
argument_list|>
argument_list|(
literal|0
argument_list|,
name|std
operator|::
name|min
argument_list|(
name|g_sharedexp_max
argument_list|,
name|blue
argument_list|)
argument_list|)
decl_stmt|;
specifier|const
name|float
name|max_c
init|=
name|std
operator|::
name|max
argument_list|<
name|float
argument_list|>
argument_list|(
name|std
operator|::
name|max
argument_list|<
name|float
argument_list|>
argument_list|(
name|red_c
argument_list|,
name|green_c
argument_list|)
argument_list|,
name|blue_c
argument_list|)
decl_stmt|;
specifier|const
name|float
name|exp_p
init|=
name|std
operator|::
name|max
argument_list|<
name|float
argument_list|>
argument_list|(
operator|-
name|g_sharedexp_bias
operator|-
literal|1
argument_list|,
name|floor
argument_list|(
name|log
argument_list|(
name|max_c
argument_list|)
argument_list|)
argument_list|)
operator|+
literal|1
operator|+
name|g_sharedexp_bias
decl_stmt|;
specifier|const
name|int
name|max_s
init|=
name|floor
argument_list|(
operator|(
name|max_c
operator|/
operator|(
name|pow
argument_list|(
literal|2.0f
argument_list|,
name|exp_p
operator|-
name|g_sharedexp_bias
operator|-
name|g_sharedexp_mantissabits
argument_list|)
operator|)
operator|)
operator|+
literal|0.5f
argument_list|)
decl_stmt|;
specifier|const
name|int
name|exp_s
init|=
operator|(
name|max_s
operator|<
name|pow
argument_list|(
literal|2.0f
argument_list|,
name|g_sharedexp_mantissabits
argument_list|)
operator|)
condition|?
name|exp_p
else|:
name|exp_p
operator|+
literal|1
decl_stmt|;
name|RGB9E5Data
name|output
decl_stmt|;
name|output
operator|.
name|R
operator|=
name|floor
argument_list|(
operator|(
name|red_c
operator|/
operator|(
name|pow
argument_list|(
literal|2.0f
argument_list|,
name|exp_s
operator|-
name|g_sharedexp_bias
operator|-
name|g_sharedexp_mantissabits
argument_list|)
operator|)
operator|)
operator|+
literal|0.5f
argument_list|)
expr_stmt|;
name|output
operator|.
name|G
operator|=
name|floor
argument_list|(
operator|(
name|green_c
operator|/
operator|(
name|pow
argument_list|(
literal|2.0f
argument_list|,
name|exp_s
operator|-
name|g_sharedexp_bias
operator|-
name|g_sharedexp_mantissabits
argument_list|)
operator|)
operator|)
operator|+
literal|0.5f
argument_list|)
expr_stmt|;
name|output
operator|.
name|B
operator|=
name|floor
argument_list|(
operator|(
name|blue_c
operator|/
operator|(
name|pow
argument_list|(
literal|2.0f
argument_list|,
name|exp_s
operator|-
name|g_sharedexp_bias
operator|-
name|g_sharedexp_mantissabits
argument_list|)
operator|)
operator|)
operator|+
literal|0.5f
argument_list|)
expr_stmt|;
name|output
operator|.
name|E
operator|=
name|exp_s
expr_stmt|;
return|return
operator|*
cast|reinterpret_cast
argument_list|<
name|unsigned
name|int
operator|*
argument_list|>
argument_list|(
operator|&
name|output
argument_list|)
return|;
block|}
DECL|function|convert999E5toRGBFloats
name|void
name|convert999E5toRGBFloats
parameter_list|(
name|unsigned
name|int
name|input
parameter_list|,
name|float
modifier|*
name|red
parameter_list|,
name|float
modifier|*
name|green
parameter_list|,
name|float
modifier|*
name|blue
parameter_list|)
block|{
specifier|const
name|RGB9E5Data
modifier|*
name|inputData
init|=
cast|reinterpret_cast
argument_list|<
specifier|const
name|RGB9E5Data
operator|*
argument_list|>
argument_list|(
operator|&
name|input
argument_list|)
decl_stmt|;
operator|*
name|red
operator|=
name|inputData
operator|->
name|R
operator|*
name|pow
argument_list|(
literal|2.0f
argument_list|,
operator|(
name|int
operator|)
name|inputData
operator|->
name|E
operator|-
name|g_sharedexp_bias
operator|-
name|g_sharedexp_mantissabits
argument_list|)
expr_stmt|;
operator|*
name|green
operator|=
name|inputData
operator|->
name|G
operator|*
name|pow
argument_list|(
literal|2.0f
argument_list|,
operator|(
name|int
operator|)
name|inputData
operator|->
name|E
operator|-
name|g_sharedexp_bias
operator|-
name|g_sharedexp_mantissabits
argument_list|)
expr_stmt|;
operator|*
name|blue
operator|=
name|inputData
operator|->
name|B
operator|*
name|pow
argument_list|(
literal|2.0f
argument_list|,
operator|(
name|int
operator|)
name|inputData
operator|->
name|E
operator|-
name|g_sharedexp_bias
operator|-
name|g_sharedexp_mantissabits
argument_list|)
expr_stmt|;
block|}
block|}
end_namespace
end_unit
