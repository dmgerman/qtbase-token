begin_unit
begin_comment
comment|//
end_comment
begin_comment
comment|// Copyright 2015 The ANGLE Project Authors. All rights reserved.
end_comment
begin_comment
comment|// Use of this source code is governed by a BSD-style license that can be
end_comment
begin_comment
comment|// found in the LICENSE file.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// Matrix:
end_comment
begin_comment
comment|//   Utility class implementing various matrix operations.
end_comment
begin_comment
comment|//   Supports matrices with minimum 2 and maximum 4 number of rows/columns.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// TODO: Check if we can merge Matrix.h in sample_util with this and replace it with this implementation.
end_comment
begin_comment
comment|// TODO: Rename this file to Matrix.h once we remove Matrix.h in sample_util.
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|COMMON_MATRIX_UTILS_H_
end_ifndef
begin_define
DECL|macro|COMMON_MATRIX_UTILS_H_
define|#
directive|define
name|COMMON_MATRIX_UTILS_H_
end_define
begin_include
include|#
directive|include
file|<vector>
end_include
begin_include
include|#
directive|include
file|"common/debug.h"
end_include
begin_decl_stmt
name|namespace
name|angle
block|{
name|template
operator|<
name|typename
name|T
operator|>
name|class
name|Matrix
block|{
name|public
operator|:
name|Matrix
argument_list|(
argument|const std::vector<T>&elements
argument_list|,
argument|const unsigned int&numRows
argument_list|,
argument|const unsigned int&numCols
argument_list|)
operator|:
name|mElements
argument_list|(
name|elements
argument_list|)
block|,
name|mRows
argument_list|(
name|numRows
argument_list|)
block|,
name|mCols
argument_list|(
argument|numCols
argument_list|)
block|{
name|ASSERT
argument_list|(
name|rows
argument_list|()
operator|>=
literal|1
operator|&&
name|rows
argument_list|()
operator|<=
literal|4
argument_list|)
block|;
name|ASSERT
argument_list|(
name|columns
argument_list|()
operator|>=
literal|1
operator|&&
name|columns
argument_list|()
operator|<=
literal|4
argument_list|)
block|;     }
name|Matrix
argument_list|(
argument|const std::vector<T>&elements
argument_list|,
argument|const unsigned int&size
argument_list|)
operator|:
name|mElements
argument_list|(
name|elements
argument_list|)
block|,
name|mRows
argument_list|(
name|size
argument_list|)
block|,
name|mCols
argument_list|(
argument|size
argument_list|)
block|{
name|ASSERT
argument_list|(
name|rows
argument_list|()
operator|>=
literal|1
operator|&&
name|rows
argument_list|()
operator|<=
literal|4
argument_list|)
block|;
name|ASSERT
argument_list|(
name|columns
argument_list|()
operator|>=
literal|1
operator|&&
name|columns
argument_list|()
operator|<=
literal|4
argument_list|)
block|;     }
name|Matrix
argument_list|(
argument|const T *elements
argument_list|,
argument|const unsigned int&size
argument_list|)
operator|:
name|mRows
argument_list|(
name|size
argument_list|)
block|,
name|mCols
argument_list|(
argument|size
argument_list|)
block|{
name|ASSERT
argument_list|(
name|rows
argument_list|()
operator|>=
literal|1
operator|&&
name|rows
argument_list|()
operator|<=
literal|4
argument_list|)
block|;
name|ASSERT
argument_list|(
name|columns
argument_list|()
operator|>=
literal|1
operator|&&
name|columns
argument_list|()
operator|<=
literal|4
argument_list|)
block|;
for|for
control|(
name|size_t
name|i
init|=
literal|0
init|;
name|i
operator|<
name|size
operator|*
name|size
condition|;
name|i
operator|++
control|)
name|mElements
operator|.
name|push_back
argument_list|(
name|elements
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
specifier|const
name|T
operator|&
name|operator
argument_list|()
operator|(
specifier|const
name|unsigned
name|int
operator|&
name|rowIndex
operator|,
specifier|const
name|unsigned
name|int
operator|&
name|columnIndex
operator|)
specifier|const
block|{
return|return
name|mElements
index|[
name|rowIndex
operator|*
name|columns
argument_list|()
operator|+
name|columnIndex
index|]
return|;
block|}
name|T
operator|&
name|operator
argument_list|()
operator|(
specifier|const
name|unsigned
name|int
operator|&
name|rowIndex
operator|,
specifier|const
name|unsigned
name|int
operator|&
name|columnIndex
operator|)
block|{
return|return
name|mElements
index|[
name|rowIndex
operator|*
name|columns
argument_list|()
operator|+
name|columnIndex
index|]
return|;
block|}
specifier|const
name|T
operator|&
name|at
argument_list|(
argument|const unsigned int&rowIndex
argument_list|,
argument|const unsigned int&columnIndex
argument_list|)
specifier|const
block|{
return|return
name|operator
argument_list|()
argument_list|(
name|rowIndex
argument_list|,
name|columnIndex
argument_list|)
return|;
block|}
name|Matrix
operator|<
name|T
operator|>
name|operator
operator|*
operator|(
specifier|const
name|Matrix
operator|<
name|T
operator|>
operator|&
name|m
operator|)
block|{
name|ASSERT
argument_list|(
name|columns
argument_list|()
operator|==
name|m
operator|.
name|rows
argument_list|()
argument_list|)
block|;
name|unsigned
name|int
name|resultRows
operator|=
name|rows
argument_list|()
block|;
name|unsigned
name|int
name|resultCols
operator|=
name|m
operator|.
name|columns
argument_list|()
block|;
name|Matrix
operator|<
name|T
operator|>
name|result
argument_list|(
name|std
operator|::
name|vector
operator|<
name|T
operator|>
operator|(
name|resultRows
operator|*
name|resultCols
operator|)
argument_list|,
name|resultRows
argument_list|,
name|resultCols
argument_list|)
block|;
for|for
control|(
name|unsigned
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|resultRows
condition|;
name|i
operator|++
control|)
block|{
for|for
control|(
name|unsigned
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|resultCols
condition|;
name|j
operator|++
control|)
block|{
name|T
name|tmp
init|=
literal|0.0f
decl_stmt|;
for|for
control|(
name|unsigned
name|int
name|k
init|=
literal|0
init|;
name|k
operator|<
name|columns
argument_list|()
condition|;
name|k
operator|++
control|)
name|tmp
operator|+=
name|at
argument_list|(
name|i
argument_list|,
name|k
argument_list|)
operator|*
name|m
argument_list|(
name|k
argument_list|,
name|j
argument_list|)
expr_stmt|;
name|result
argument_list|(
name|i
argument_list|,
name|j
argument_list|)
operator|=
name|tmp
expr_stmt|;
block|}
block|}
return|return
name|result
return|;
block|}
name|unsigned
name|int
name|size
argument_list|()
specifier|const
block|{
name|ASSERT
argument_list|(
name|rows
argument_list|()
operator|==
name|columns
argument_list|()
argument_list|)
block|;
return|return
name|rows
argument_list|()
return|;
block|}
name|unsigned
name|int
name|rows
argument_list|()
specifier|const
block|{
return|return
name|mRows
return|;
block|}
name|unsigned
name|int
name|columns
argument_list|()
specifier|const
block|{
return|return
name|mCols
return|;
block|}
name|std
operator|::
name|vector
operator|<
name|T
operator|>
name|elements
argument_list|()
specifier|const
block|{
return|return
name|mElements
return|;
block|}
name|Matrix
operator|<
name|T
operator|>
name|compMult
argument_list|(
argument|const Matrix<T>&mat1
argument_list|)
specifier|const
block|{
name|Matrix
name|result
argument_list|(
name|std
operator|::
name|vector
operator|<
name|T
operator|>
operator|(
name|mElements
operator|.
name|size
argument_list|()
operator|)
argument_list|,
name|size
argument_list|()
argument_list|)
block|;
for|for
control|(
name|unsigned
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|columns
argument_list|()
condition|;
name|i
operator|++
control|)
for|for
control|(
name|unsigned
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|rows
argument_list|()
condition|;
name|j
operator|++
control|)
name|result
argument_list|(
name|i
argument_list|,
name|j
argument_list|)
operator|=
name|at
argument_list|(
name|i
argument_list|,
name|j
argument_list|)
operator|*
name|mat1
argument_list|(
name|i
argument_list|,
name|j
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
name|Matrix
operator|<
name|T
operator|>
name|outerProduct
argument_list|(
argument|const Matrix<T>&mat1
argument_list|)
specifier|const
block|{
name|unsigned
name|int
name|cols
operator|=
name|mat1
operator|.
name|columns
argument_list|()
block|;
name|Matrix
name|result
argument_list|(
name|std
operator|::
name|vector
operator|<
name|T
operator|>
operator|(
name|rows
argument_list|()
operator|*
name|cols
operator|)
argument_list|,
name|rows
argument_list|()
argument_list|,
name|cols
argument_list|)
block|;
for|for
control|(
name|unsigned
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|rows
argument_list|()
condition|;
name|i
operator|++
control|)
for|for
control|(
name|unsigned
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|cols
condition|;
name|j
operator|++
control|)
name|result
argument_list|(
name|i
argument_list|,
name|j
argument_list|)
operator|=
name|at
argument_list|(
name|i
argument_list|,
literal|0
argument_list|)
operator|*
name|mat1
argument_list|(
literal|0
argument_list|,
name|j
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
end_decl_stmt
begin_expr_stmt
name|Matrix
operator|<
name|T
operator|>
name|transpose
argument_list|()
specifier|const
block|{
name|Matrix
name|result
argument_list|(
name|std
operator|::
name|vector
operator|<
name|T
operator|>
operator|(
name|mElements
operator|.
name|size
argument_list|()
operator|)
argument_list|,
name|columns
argument_list|()
argument_list|,
name|rows
argument_list|()
argument_list|)
block|;
for|for
control|(
name|unsigned
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|columns
argument_list|()
condition|;
name|i
operator|++
control|)
for|for
control|(
name|unsigned
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|rows
argument_list|()
condition|;
name|j
operator|++
control|)
name|result
argument_list|(
name|i
argument_list|,
name|j
argument_list|)
operator|=
name|at
argument_list|(
name|j
argument_list|,
name|i
argument_list|)
expr_stmt|;
end_expr_stmt
begin_return
return|return
name|result
return|;
end_return
begin_macro
unit|}      T
name|determinant
argument_list|()
end_macro
begin_expr_stmt
specifier|const
block|{
name|ASSERT
argument_list|(
name|rows
argument_list|()
operator|==
name|columns
argument_list|()
argument_list|)
block|;
switch|switch
condition|(
name|size
argument_list|()
condition|)
block|{
case|case
literal|2
case|:
return|return
name|at
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|-
name|at
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
return|;
case|case
literal|3
case|:
return|return
name|at
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
operator|+
name|at
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
operator|+
name|at
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
operator|-
name|at
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
operator|-
name|at
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
operator|-
name|at
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
return|;
case|case
literal|4
case|:
block|{
specifier|const
name|float
name|minorMatrices
index|[
literal|4
index|]
index|[
literal|3
operator|*
literal|3
index|]
init|=
block|{
block|{
name|at
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
block|,
name|at
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
block|,
name|at
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
block|,
name|at
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
block|,
name|at
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
block|,
name|at
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
block|,
name|at
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
block|,
name|at
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|)
block|,
name|at
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
block|,                     }
block|,
block|{
name|at
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
block|,
name|at
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
block|,
name|at
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
block|,
name|at
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
block|,
name|at
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
block|,
name|at
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
block|,
name|at
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
block|,
name|at
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|)
block|,
name|at
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
block|,                     }
block|,
block|{
name|at
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
block|,
name|at
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
block|,
name|at
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
block|,
name|at
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
block|,
name|at
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
block|,
name|at
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
block|,
name|at
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
block|,
name|at
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|)
block|,
name|at
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
block|,                     }
block|,
block|{
name|at
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
block|,
name|at
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
block|,
name|at
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
block|,
name|at
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
block|,
name|at
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
block|,
name|at
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
block|,
name|at
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
block|,
name|at
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
block|,
name|at
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
block|,                     }
block|}
decl_stmt|;
return|return
name|at
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|*
name|Matrix
operator|<
name|T
operator|>
operator|(
name|minorMatrices
index|[
literal|0
index|]
operator|,
literal|3
operator|)
operator|.
name|determinant
argument_list|()
operator|-
name|at
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|*
name|Matrix
operator|<
name|T
operator|>
operator|(
name|minorMatrices
index|[
literal|1
index|]
operator|,
literal|3
operator|)
operator|.
name|determinant
argument_list|()
operator|+
name|at
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
operator|*
name|Matrix
operator|<
name|T
operator|>
operator|(
name|minorMatrices
index|[
literal|2
index|]
operator|,
literal|3
operator|)
operator|.
name|determinant
argument_list|()
operator|-
name|at
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
operator|*
name|Matrix
operator|<
name|T
operator|>
operator|(
name|minorMatrices
index|[
literal|3
index|]
operator|,
literal|3
operator|)
operator|.
name|determinant
argument_list|()
return|;
block|}
end_expr_stmt
begin_default
default|default:
end_default
begin_expr_stmt
name|UNREACHABLE
argument_list|()
expr_stmt|;
end_expr_stmt
begin_break
break|break;
end_break
begin_expr_stmt
unit|}          return
name|T
argument_list|()
expr_stmt|;
end_expr_stmt
begin_expr_stmt
unit|}      Matrix
operator|<
name|T
operator|>
name|inverse
argument_list|()
specifier|const
block|{
name|ASSERT
argument_list|(
name|rows
argument_list|()
operator|==
name|columns
argument_list|()
argument_list|)
block|;
name|Matrix
operator|<
name|T
operator|>
name|cof
argument_list|(
name|std
operator|::
name|vector
operator|<
name|T
operator|>
operator|(
name|mElements
operator|.
name|size
argument_list|()
operator|)
argument_list|,
name|rows
argument_list|()
argument_list|,
name|columns
argument_list|()
argument_list|)
block|;
switch|switch
condition|(
name|size
argument_list|()
condition|)
block|{
case|case
literal|2
case|:
name|cof
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|=
name|at
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|cof
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|=
operator|-
name|at
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|cof
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|=
operator|-
name|at
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|cof
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|=
name|at
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
break|break;
case|case
literal|3
case|:
name|cof
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|=
name|at
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
operator|-
name|at
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|cof
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|=
operator|-
operator|(
name|at
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
operator|-
name|at
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
operator|)
expr_stmt|;
name|cof
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
operator|=
name|at
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
operator|-
name|at
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|cof
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|=
operator|-
operator|(
name|at
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
operator|-
name|at
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
operator|)
expr_stmt|;
name|cof
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|=
name|at
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
operator|-
name|at
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|cof
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
operator|=
operator|-
operator|(
name|at
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
operator|-
name|at
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|)
expr_stmt|;
name|cof
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
operator|=
name|at
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
operator|-
name|at
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|cof
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
operator|=
operator|-
operator|(
name|at
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
operator|-
name|at
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
operator|)
expr_stmt|;
name|cof
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
operator|=
name|at
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|-
name|at
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
break|break;
case|case
literal|4
case|:
name|cof
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|=
name|at
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
operator|*
name|at
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
operator|+
name|at
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
operator|+
name|at
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|)
operator|-
name|at
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|)
operator|-
name|at
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
operator|*
name|at
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
operator|-
name|at
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|cof
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|=
operator|-
operator|(
name|at
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
operator|*
name|at
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
operator|+
name|at
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
operator|+
name|at
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|)
operator|-
name|at
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|)
operator|-
name|at
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
operator|*
name|at
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
operator|-
name|at
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
operator|)
expr_stmt|;
name|cof
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
operator|=
name|at
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
operator|+
name|at
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
operator|+
name|at
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|)
operator|-
name|at
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|)
operator|-
name|at
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
operator|-
name|at
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|cof
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
operator|=
operator|-
operator|(
name|at
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
operator|+
name|at
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
operator|+
name|at
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
operator|-
name|at
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
operator|-
name|at
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
operator|-
name|at
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
operator|)
expr_stmt|;
name|cof
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|=
operator|-
operator|(
name|at
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
operator|*
name|at
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
operator|+
name|at
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
operator|*
name|at
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
operator|+
name|at
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|)
operator|-
name|at
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|)
operator|-
name|at
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
operator|*
name|at
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
operator|-
name|at
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
operator|*
name|at
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
operator|)
expr_stmt|;
name|cof
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|=
name|at
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
operator|*
name|at
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
operator|+
name|at
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
operator|*
name|at
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
operator|+
name|at
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|)
operator|-
name|at
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|)
operator|-
name|at
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
operator|*
name|at
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
operator|-
name|at
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
operator|*
name|at
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|cof
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
operator|=
operator|-
operator|(
name|at
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
operator|+
name|at
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
operator|+
name|at
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|)
operator|-
name|at
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|)
operator|-
name|at
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
operator|-
name|at
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
operator|)
expr_stmt|;
name|cof
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
operator|=
name|at
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
operator|+
name|at
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
operator|+
name|at
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
operator|-
name|at
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
operator|-
name|at
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
operator|-
name|at
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|cof
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
operator|=
name|at
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
operator|*
name|at
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
operator|+
name|at
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
operator|*
name|at
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
operator|+
name|at
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
operator|-
name|at
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
operator|-
name|at
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
operator|*
name|at
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
operator|-
name|at
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
operator|*
name|at
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|cof
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
operator|=
operator|-
operator|(
name|at
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
operator|*
name|at
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
operator|+
name|at
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
operator|*
name|at
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
operator|+
name|at
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
operator|-
name|at
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
operator|-
name|at
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
operator|*
name|at
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
operator|-
name|at
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
operator|*
name|at
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
operator|)
expr_stmt|;
name|cof
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
operator|=
name|at
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
operator|+
name|at
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
operator|+
name|at
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
operator|-
name|at
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
operator|-
name|at
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
operator|-
name|at
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|cof
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|)
operator|=
operator|-
operator|(
name|at
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
operator|+
name|at
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
operator|+
name|at
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
operator|-
name|at
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
operator|-
name|at
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
operator|-
name|at
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
operator|)
expr_stmt|;
name|cof
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
operator|=
operator|-
operator|(
name|at
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|)
operator|+
name|at
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
operator|*
name|at
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
operator|+
name|at
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
operator|-
name|at
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
operator|-
name|at
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|)
operator|-
name|at
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
operator|*
name|at
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
operator|)
expr_stmt|;
name|cof
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
operator|=
name|at
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|)
operator|+
name|at
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
operator|*
name|at
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
operator|+
name|at
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
operator|-
name|at
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
operator|-
name|at
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|)
operator|-
name|at
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
operator|*
name|at
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|cof
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
operator|=
operator|-
operator|(
name|at
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|)
operator|+
name|at
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
operator|+
name|at
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
operator|-
name|at
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
operator|-
name|at
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|)
operator|-
name|at
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
operator|)
expr_stmt|;
name|cof
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
operator|=
name|at
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
operator|+
name|at
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
operator|+
name|at
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
operator|-
name|at
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
operator|-
name|at
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
operator|-
name|at
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
operator|*
name|at
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|*
name|at
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
break|break;
default|default:
name|UNREACHABLE
argument_list|()
expr_stmt|;
break|break;
block|}
comment|// The inverse of A is the transpose of the cofactor matrix times the reciprocal of the determinant of A.
name|Matrix
operator|<
name|T
operator|>
name|adjugateMatrix
argument_list|(
name|cof
operator|.
name|transpose
argument_list|()
argument_list|)
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|T
name|det
init|=
name|determinant
argument_list|()
decl_stmt|;
end_decl_stmt
begin_expr_stmt
name|Matrix
operator|<
name|T
operator|>
name|result
argument_list|(
name|std
operator|::
name|vector
operator|<
name|T
operator|>
operator|(
name|mElements
operator|.
name|size
argument_list|()
operator|)
argument_list|,
name|rows
argument_list|()
argument_list|,
name|columns
argument_list|()
argument_list|)
expr_stmt|;
end_expr_stmt
begin_for
for|for
control|(
name|unsigned
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|rows
argument_list|()
condition|;
name|i
operator|++
control|)
for|for
control|(
name|unsigned
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|columns
argument_list|()
condition|;
name|j
operator|++
control|)
name|result
argument_list|(
name|i
argument_list|,
name|j
argument_list|)
operator|=
name|det
condition|?
name|adjugateMatrix
argument_list|(
name|i
argument_list|,
name|j
argument_list|)
operator|/
name|det
else|:
name|T
argument_list|()
expr_stmt|;
end_for
begin_return
return|return
name|result
return|;
end_return
begin_expr_stmt
unit|}    private:
name|std
operator|::
name|vector
operator|<
name|T
operator|>
name|mElements
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|unsigned
name|int
name|mRows
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|unsigned
name|int
name|mCols
decl_stmt|;
end_decl_stmt
begin_comment
unit|};  }
comment|// namespace angle
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// COMMON_MATRIX_UTILS_H_
end_comment
end_unit
