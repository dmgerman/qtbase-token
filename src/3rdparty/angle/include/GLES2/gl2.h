begin_unit
begin_ifndef
ifndef|#
directive|ifndef
name|__gl2_h_
end_ifndef
begin_define
DECL|macro|__gl2_h_
define|#
directive|define
name|__gl2_h_
value|1
end_define
begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef
begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
comment|/* ** Copyright (c) 2013-2015 The Khronos Group Inc. ** ** Permission is hereby granted, free of charge, to any person obtaining a ** copy of this software and/or associated documentation files (the ** "Materials"), to deal in the Materials without restriction, including ** without limitation the rights to use, copy, modify, merge, publish, ** distribute, sublicense, and/or sell copies of the Materials, and to ** permit persons to whom the Materials are furnished to do so, subject to ** the following conditions: ** ** The above copyright notice and this permission notice shall be included ** in all copies or substantial portions of the Materials. ** ** THE MATERIALS ARE PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, ** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF ** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. ** IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY ** CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, ** TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE ** MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS. */
comment|/* ** This header is generated from the Khronos OpenGL / OpenGL ES XML ** API Registry. The current version of the Registry, generator scripts ** used to make the header, and the header can be found at **   http://www.opengl.org/registry/ ** ** Khronos $Revision: 31811 $ on $Date: 2015-08-10 00:01:11 -0700 (Mon, 10 Aug 2015) $ */
include|#
directive|include
file|<GLES2/gl2platform.h>
ifndef|#
directive|ifndef
name|GL_APIENTRYP
DECL|macro|GL_APIENTRYP
define|#
directive|define
name|GL_APIENTRYP
value|GL_APIENTRY*
endif|#
directive|endif
comment|/* Generated on date 20150809 */
comment|/* Generated C header for:  * API: gles2  * Profile: common  * Versions considered: 2\.[0-9]  * Versions emitted: .*  * Default extensions included: None  * Additional extensions included: _nomatch_^  * Extensions removed: _nomatch_^  */
ifndef|#
directive|ifndef
name|GL_ES_VERSION_2_0
DECL|macro|GL_ES_VERSION_2_0
define|#
directive|define
name|GL_ES_VERSION_2_0
value|1
include|#
directive|include
file|<KHR/khrplatform.h>
DECL|typedef|GLbyte
typedef|typedef
name|khronos_int8_t
name|GLbyte
typedef|;
DECL|typedef|GLclampf
typedef|typedef
name|khronos_float_t
name|GLclampf
typedef|;
DECL|typedef|GLfixed
typedef|typedef
name|khronos_int32_t
name|GLfixed
typedef|;
DECL|typedef|GLshort
typedef|typedef
name|short
name|GLshort
typedef|;
DECL|typedef|GLushort
typedef|typedef
name|unsigned
name|short
name|GLushort
typedef|;
DECL|typedef|GLvoid
typedef|typedef
name|void
name|GLvoid
typedef|;
DECL|typedef|GLsync
typedef|typedef
name|struct
name|__GLsync
modifier|*
name|GLsync
typedef|;
DECL|typedef|GLint64
typedef|typedef
name|khronos_int64_t
name|GLint64
typedef|;
DECL|typedef|GLuint64
typedef|typedef
name|khronos_uint64_t
name|GLuint64
typedef|;
DECL|typedef|GLenum
typedef|typedef
name|unsigned
name|int
name|GLenum
typedef|;
DECL|typedef|GLuint
typedef|typedef
name|unsigned
name|int
name|GLuint
typedef|;
DECL|typedef|GLchar
typedef|typedef
name|char
name|GLchar
typedef|;
DECL|typedef|GLfloat
typedef|typedef
name|khronos_float_t
name|GLfloat
typedef|;
DECL|typedef|GLsizeiptr
typedef|typedef
name|khronos_ssize_t
name|GLsizeiptr
typedef|;
DECL|typedef|GLintptr
typedef|typedef
name|khronos_intptr_t
name|GLintptr
typedef|;
DECL|typedef|GLbitfield
typedef|typedef
name|unsigned
name|int
name|GLbitfield
typedef|;
DECL|typedef|GLint
typedef|typedef
name|int
name|GLint
typedef|;
DECL|typedef|GLboolean
typedef|typedef
name|unsigned
name|char
name|GLboolean
typedef|;
DECL|typedef|GLsizei
typedef|typedef
name|int
name|GLsizei
typedef|;
DECL|typedef|GLubyte
typedef|typedef
name|khronos_uint8_t
name|GLubyte
typedef|;
DECL|macro|GL_DEPTH_BUFFER_BIT
define|#
directive|define
name|GL_DEPTH_BUFFER_BIT
value|0x00000100
DECL|macro|GL_STENCIL_BUFFER_BIT
define|#
directive|define
name|GL_STENCIL_BUFFER_BIT
value|0x00000400
DECL|macro|GL_COLOR_BUFFER_BIT
define|#
directive|define
name|GL_COLOR_BUFFER_BIT
value|0x00004000
DECL|macro|GL_FALSE
define|#
directive|define
name|GL_FALSE
value|0
DECL|macro|GL_TRUE
define|#
directive|define
name|GL_TRUE
value|1
DECL|macro|GL_POINTS
define|#
directive|define
name|GL_POINTS
value|0x0000
DECL|macro|GL_LINES
define|#
directive|define
name|GL_LINES
value|0x0001
DECL|macro|GL_LINE_LOOP
define|#
directive|define
name|GL_LINE_LOOP
value|0x0002
DECL|macro|GL_LINE_STRIP
define|#
directive|define
name|GL_LINE_STRIP
value|0x0003
DECL|macro|GL_TRIANGLES
define|#
directive|define
name|GL_TRIANGLES
value|0x0004
DECL|macro|GL_TRIANGLE_STRIP
define|#
directive|define
name|GL_TRIANGLE_STRIP
value|0x0005
DECL|macro|GL_TRIANGLE_FAN
define|#
directive|define
name|GL_TRIANGLE_FAN
value|0x0006
DECL|macro|GL_ZERO
define|#
directive|define
name|GL_ZERO
value|0
DECL|macro|GL_ONE
define|#
directive|define
name|GL_ONE
value|1
DECL|macro|GL_SRC_COLOR
define|#
directive|define
name|GL_SRC_COLOR
value|0x0300
DECL|macro|GL_ONE_MINUS_SRC_COLOR
define|#
directive|define
name|GL_ONE_MINUS_SRC_COLOR
value|0x0301
DECL|macro|GL_SRC_ALPHA
define|#
directive|define
name|GL_SRC_ALPHA
value|0x0302
DECL|macro|GL_ONE_MINUS_SRC_ALPHA
define|#
directive|define
name|GL_ONE_MINUS_SRC_ALPHA
value|0x0303
DECL|macro|GL_DST_ALPHA
define|#
directive|define
name|GL_DST_ALPHA
value|0x0304
DECL|macro|GL_ONE_MINUS_DST_ALPHA
define|#
directive|define
name|GL_ONE_MINUS_DST_ALPHA
value|0x0305
DECL|macro|GL_DST_COLOR
define|#
directive|define
name|GL_DST_COLOR
value|0x0306
DECL|macro|GL_ONE_MINUS_DST_COLOR
define|#
directive|define
name|GL_ONE_MINUS_DST_COLOR
value|0x0307
DECL|macro|GL_SRC_ALPHA_SATURATE
define|#
directive|define
name|GL_SRC_ALPHA_SATURATE
value|0x0308
DECL|macro|GL_FUNC_ADD
define|#
directive|define
name|GL_FUNC_ADD
value|0x8006
DECL|macro|GL_BLEND_EQUATION
define|#
directive|define
name|GL_BLEND_EQUATION
value|0x8009
DECL|macro|GL_BLEND_EQUATION_RGB
define|#
directive|define
name|GL_BLEND_EQUATION_RGB
value|0x8009
DECL|macro|GL_BLEND_EQUATION_ALPHA
define|#
directive|define
name|GL_BLEND_EQUATION_ALPHA
value|0x883D
DECL|macro|GL_FUNC_SUBTRACT
define|#
directive|define
name|GL_FUNC_SUBTRACT
value|0x800A
DECL|macro|GL_FUNC_REVERSE_SUBTRACT
define|#
directive|define
name|GL_FUNC_REVERSE_SUBTRACT
value|0x800B
DECL|macro|GL_BLEND_DST_RGB
define|#
directive|define
name|GL_BLEND_DST_RGB
value|0x80C8
DECL|macro|GL_BLEND_SRC_RGB
define|#
directive|define
name|GL_BLEND_SRC_RGB
value|0x80C9
DECL|macro|GL_BLEND_DST_ALPHA
define|#
directive|define
name|GL_BLEND_DST_ALPHA
value|0x80CA
DECL|macro|GL_BLEND_SRC_ALPHA
define|#
directive|define
name|GL_BLEND_SRC_ALPHA
value|0x80CB
DECL|macro|GL_CONSTANT_COLOR
define|#
directive|define
name|GL_CONSTANT_COLOR
value|0x8001
DECL|macro|GL_ONE_MINUS_CONSTANT_COLOR
define|#
directive|define
name|GL_ONE_MINUS_CONSTANT_COLOR
value|0x8002
DECL|macro|GL_CONSTANT_ALPHA
define|#
directive|define
name|GL_CONSTANT_ALPHA
value|0x8003
DECL|macro|GL_ONE_MINUS_CONSTANT_ALPHA
define|#
directive|define
name|GL_ONE_MINUS_CONSTANT_ALPHA
value|0x8004
DECL|macro|GL_BLEND_COLOR
define|#
directive|define
name|GL_BLEND_COLOR
value|0x8005
DECL|macro|GL_ARRAY_BUFFER
define|#
directive|define
name|GL_ARRAY_BUFFER
value|0x8892
DECL|macro|GL_ELEMENT_ARRAY_BUFFER
define|#
directive|define
name|GL_ELEMENT_ARRAY_BUFFER
value|0x8893
DECL|macro|GL_ARRAY_BUFFER_BINDING
define|#
directive|define
name|GL_ARRAY_BUFFER_BINDING
value|0x8894
DECL|macro|GL_ELEMENT_ARRAY_BUFFER_BINDING
define|#
directive|define
name|GL_ELEMENT_ARRAY_BUFFER_BINDING
value|0x8895
DECL|macro|GL_STREAM_DRAW
define|#
directive|define
name|GL_STREAM_DRAW
value|0x88E0
DECL|macro|GL_STATIC_DRAW
define|#
directive|define
name|GL_STATIC_DRAW
value|0x88E4
DECL|macro|GL_DYNAMIC_DRAW
define|#
directive|define
name|GL_DYNAMIC_DRAW
value|0x88E8
DECL|macro|GL_BUFFER_SIZE
define|#
directive|define
name|GL_BUFFER_SIZE
value|0x8764
DECL|macro|GL_BUFFER_USAGE
define|#
directive|define
name|GL_BUFFER_USAGE
value|0x8765
DECL|macro|GL_CURRENT_VERTEX_ATTRIB
define|#
directive|define
name|GL_CURRENT_VERTEX_ATTRIB
value|0x8626
DECL|macro|GL_FRONT
define|#
directive|define
name|GL_FRONT
value|0x0404
DECL|macro|GL_BACK
define|#
directive|define
name|GL_BACK
value|0x0405
DECL|macro|GL_FRONT_AND_BACK
define|#
directive|define
name|GL_FRONT_AND_BACK
value|0x0408
DECL|macro|GL_TEXTURE_2D
define|#
directive|define
name|GL_TEXTURE_2D
value|0x0DE1
DECL|macro|GL_CULL_FACE
define|#
directive|define
name|GL_CULL_FACE
value|0x0B44
DECL|macro|GL_BLEND
define|#
directive|define
name|GL_BLEND
value|0x0BE2
DECL|macro|GL_DITHER
define|#
directive|define
name|GL_DITHER
value|0x0BD0
DECL|macro|GL_STENCIL_TEST
define|#
directive|define
name|GL_STENCIL_TEST
value|0x0B90
DECL|macro|GL_DEPTH_TEST
define|#
directive|define
name|GL_DEPTH_TEST
value|0x0B71
DECL|macro|GL_SCISSOR_TEST
define|#
directive|define
name|GL_SCISSOR_TEST
value|0x0C11
DECL|macro|GL_POLYGON_OFFSET_FILL
define|#
directive|define
name|GL_POLYGON_OFFSET_FILL
value|0x8037
DECL|macro|GL_SAMPLE_ALPHA_TO_COVERAGE
define|#
directive|define
name|GL_SAMPLE_ALPHA_TO_COVERAGE
value|0x809E
DECL|macro|GL_SAMPLE_COVERAGE
define|#
directive|define
name|GL_SAMPLE_COVERAGE
value|0x80A0
DECL|macro|GL_NO_ERROR
define|#
directive|define
name|GL_NO_ERROR
value|0
DECL|macro|GL_INVALID_ENUM
define|#
directive|define
name|GL_INVALID_ENUM
value|0x0500
DECL|macro|GL_INVALID_VALUE
define|#
directive|define
name|GL_INVALID_VALUE
value|0x0501
DECL|macro|GL_INVALID_OPERATION
define|#
directive|define
name|GL_INVALID_OPERATION
value|0x0502
DECL|macro|GL_OUT_OF_MEMORY
define|#
directive|define
name|GL_OUT_OF_MEMORY
value|0x0505
DECL|macro|GL_CW
define|#
directive|define
name|GL_CW
value|0x0900
DECL|macro|GL_CCW
define|#
directive|define
name|GL_CCW
value|0x0901
DECL|macro|GL_LINE_WIDTH
define|#
directive|define
name|GL_LINE_WIDTH
value|0x0B21
DECL|macro|GL_ALIASED_POINT_SIZE_RANGE
define|#
directive|define
name|GL_ALIASED_POINT_SIZE_RANGE
value|0x846D
DECL|macro|GL_ALIASED_LINE_WIDTH_RANGE
define|#
directive|define
name|GL_ALIASED_LINE_WIDTH_RANGE
value|0x846E
DECL|macro|GL_CULL_FACE_MODE
define|#
directive|define
name|GL_CULL_FACE_MODE
value|0x0B45
DECL|macro|GL_FRONT_FACE
define|#
directive|define
name|GL_FRONT_FACE
value|0x0B46
DECL|macro|GL_DEPTH_RANGE
define|#
directive|define
name|GL_DEPTH_RANGE
value|0x0B70
DECL|macro|GL_DEPTH_WRITEMASK
define|#
directive|define
name|GL_DEPTH_WRITEMASK
value|0x0B72
DECL|macro|GL_DEPTH_CLEAR_VALUE
define|#
directive|define
name|GL_DEPTH_CLEAR_VALUE
value|0x0B73
DECL|macro|GL_DEPTH_FUNC
define|#
directive|define
name|GL_DEPTH_FUNC
value|0x0B74
DECL|macro|GL_STENCIL_CLEAR_VALUE
define|#
directive|define
name|GL_STENCIL_CLEAR_VALUE
value|0x0B91
DECL|macro|GL_STENCIL_FUNC
define|#
directive|define
name|GL_STENCIL_FUNC
value|0x0B92
DECL|macro|GL_STENCIL_FAIL
define|#
directive|define
name|GL_STENCIL_FAIL
value|0x0B94
DECL|macro|GL_STENCIL_PASS_DEPTH_FAIL
define|#
directive|define
name|GL_STENCIL_PASS_DEPTH_FAIL
value|0x0B95
DECL|macro|GL_STENCIL_PASS_DEPTH_PASS
define|#
directive|define
name|GL_STENCIL_PASS_DEPTH_PASS
value|0x0B96
DECL|macro|GL_STENCIL_REF
define|#
directive|define
name|GL_STENCIL_REF
value|0x0B97
DECL|macro|GL_STENCIL_VALUE_MASK
define|#
directive|define
name|GL_STENCIL_VALUE_MASK
value|0x0B93
DECL|macro|GL_STENCIL_WRITEMASK
define|#
directive|define
name|GL_STENCIL_WRITEMASK
value|0x0B98
DECL|macro|GL_STENCIL_BACK_FUNC
define|#
directive|define
name|GL_STENCIL_BACK_FUNC
value|0x8800
DECL|macro|GL_STENCIL_BACK_FAIL
define|#
directive|define
name|GL_STENCIL_BACK_FAIL
value|0x8801
DECL|macro|GL_STENCIL_BACK_PASS_DEPTH_FAIL
define|#
directive|define
name|GL_STENCIL_BACK_PASS_DEPTH_FAIL
value|0x8802
DECL|macro|GL_STENCIL_BACK_PASS_DEPTH_PASS
define|#
directive|define
name|GL_STENCIL_BACK_PASS_DEPTH_PASS
value|0x8803
DECL|macro|GL_STENCIL_BACK_REF
define|#
directive|define
name|GL_STENCIL_BACK_REF
value|0x8CA3
DECL|macro|GL_STENCIL_BACK_VALUE_MASK
define|#
directive|define
name|GL_STENCIL_BACK_VALUE_MASK
value|0x8CA4
DECL|macro|GL_STENCIL_BACK_WRITEMASK
define|#
directive|define
name|GL_STENCIL_BACK_WRITEMASK
value|0x8CA5
DECL|macro|GL_VIEWPORT
define|#
directive|define
name|GL_VIEWPORT
value|0x0BA2
DECL|macro|GL_SCISSOR_BOX
define|#
directive|define
name|GL_SCISSOR_BOX
value|0x0C10
DECL|macro|GL_COLOR_CLEAR_VALUE
define|#
directive|define
name|GL_COLOR_CLEAR_VALUE
value|0x0C22
DECL|macro|GL_COLOR_WRITEMASK
define|#
directive|define
name|GL_COLOR_WRITEMASK
value|0x0C23
DECL|macro|GL_UNPACK_ALIGNMENT
define|#
directive|define
name|GL_UNPACK_ALIGNMENT
value|0x0CF5
DECL|macro|GL_PACK_ALIGNMENT
define|#
directive|define
name|GL_PACK_ALIGNMENT
value|0x0D05
DECL|macro|GL_MAX_TEXTURE_SIZE
define|#
directive|define
name|GL_MAX_TEXTURE_SIZE
value|0x0D33
DECL|macro|GL_MAX_VIEWPORT_DIMS
define|#
directive|define
name|GL_MAX_VIEWPORT_DIMS
value|0x0D3A
DECL|macro|GL_SUBPIXEL_BITS
define|#
directive|define
name|GL_SUBPIXEL_BITS
value|0x0D50
DECL|macro|GL_RED_BITS
define|#
directive|define
name|GL_RED_BITS
value|0x0D52
DECL|macro|GL_GREEN_BITS
define|#
directive|define
name|GL_GREEN_BITS
value|0x0D53
DECL|macro|GL_BLUE_BITS
define|#
directive|define
name|GL_BLUE_BITS
value|0x0D54
DECL|macro|GL_ALPHA_BITS
define|#
directive|define
name|GL_ALPHA_BITS
value|0x0D55
DECL|macro|GL_DEPTH_BITS
define|#
directive|define
name|GL_DEPTH_BITS
value|0x0D56
DECL|macro|GL_STENCIL_BITS
define|#
directive|define
name|GL_STENCIL_BITS
value|0x0D57
DECL|macro|GL_POLYGON_OFFSET_UNITS
define|#
directive|define
name|GL_POLYGON_OFFSET_UNITS
value|0x2A00
DECL|macro|GL_POLYGON_OFFSET_FACTOR
define|#
directive|define
name|GL_POLYGON_OFFSET_FACTOR
value|0x8038
DECL|macro|GL_TEXTURE_BINDING_2D
define|#
directive|define
name|GL_TEXTURE_BINDING_2D
value|0x8069
DECL|macro|GL_SAMPLE_BUFFERS
define|#
directive|define
name|GL_SAMPLE_BUFFERS
value|0x80A8
DECL|macro|GL_SAMPLES
define|#
directive|define
name|GL_SAMPLES
value|0x80A9
DECL|macro|GL_SAMPLE_COVERAGE_VALUE
define|#
directive|define
name|GL_SAMPLE_COVERAGE_VALUE
value|0x80AA
DECL|macro|GL_SAMPLE_COVERAGE_INVERT
define|#
directive|define
name|GL_SAMPLE_COVERAGE_INVERT
value|0x80AB
DECL|macro|GL_NUM_COMPRESSED_TEXTURE_FORMATS
define|#
directive|define
name|GL_NUM_COMPRESSED_TEXTURE_FORMATS
value|0x86A2
DECL|macro|GL_COMPRESSED_TEXTURE_FORMATS
define|#
directive|define
name|GL_COMPRESSED_TEXTURE_FORMATS
value|0x86A3
DECL|macro|GL_DONT_CARE
define|#
directive|define
name|GL_DONT_CARE
value|0x1100
DECL|macro|GL_FASTEST
define|#
directive|define
name|GL_FASTEST
value|0x1101
DECL|macro|GL_NICEST
define|#
directive|define
name|GL_NICEST
value|0x1102
DECL|macro|GL_GENERATE_MIPMAP_HINT
define|#
directive|define
name|GL_GENERATE_MIPMAP_HINT
value|0x8192
DECL|macro|GL_BYTE
define|#
directive|define
name|GL_BYTE
value|0x1400
DECL|macro|GL_UNSIGNED_BYTE
define|#
directive|define
name|GL_UNSIGNED_BYTE
value|0x1401
DECL|macro|GL_SHORT
define|#
directive|define
name|GL_SHORT
value|0x1402
DECL|macro|GL_UNSIGNED_SHORT
define|#
directive|define
name|GL_UNSIGNED_SHORT
value|0x1403
DECL|macro|GL_INT
define|#
directive|define
name|GL_INT
value|0x1404
DECL|macro|GL_UNSIGNED_INT
define|#
directive|define
name|GL_UNSIGNED_INT
value|0x1405
DECL|macro|GL_FLOAT
define|#
directive|define
name|GL_FLOAT
value|0x1406
DECL|macro|GL_FIXED
define|#
directive|define
name|GL_FIXED
value|0x140C
DECL|macro|GL_DEPTH_COMPONENT
define|#
directive|define
name|GL_DEPTH_COMPONENT
value|0x1902
DECL|macro|GL_ALPHA
define|#
directive|define
name|GL_ALPHA
value|0x1906
DECL|macro|GL_RGB
define|#
directive|define
name|GL_RGB
value|0x1907
DECL|macro|GL_RGBA
define|#
directive|define
name|GL_RGBA
value|0x1908
DECL|macro|GL_LUMINANCE
define|#
directive|define
name|GL_LUMINANCE
value|0x1909
DECL|macro|GL_LUMINANCE_ALPHA
define|#
directive|define
name|GL_LUMINANCE_ALPHA
value|0x190A
DECL|macro|GL_UNSIGNED_SHORT_4_4_4_4
define|#
directive|define
name|GL_UNSIGNED_SHORT_4_4_4_4
value|0x8033
DECL|macro|GL_UNSIGNED_SHORT_5_5_5_1
define|#
directive|define
name|GL_UNSIGNED_SHORT_5_5_5_1
value|0x8034
DECL|macro|GL_UNSIGNED_SHORT_5_6_5
define|#
directive|define
name|GL_UNSIGNED_SHORT_5_6_5
value|0x8363
DECL|macro|GL_FRAGMENT_SHADER
define|#
directive|define
name|GL_FRAGMENT_SHADER
value|0x8B30
DECL|macro|GL_VERTEX_SHADER
define|#
directive|define
name|GL_VERTEX_SHADER
value|0x8B31
DECL|macro|GL_MAX_VERTEX_ATTRIBS
define|#
directive|define
name|GL_MAX_VERTEX_ATTRIBS
value|0x8869
DECL|macro|GL_MAX_VERTEX_UNIFORM_VECTORS
define|#
directive|define
name|GL_MAX_VERTEX_UNIFORM_VECTORS
value|0x8DFB
DECL|macro|GL_MAX_VARYING_VECTORS
define|#
directive|define
name|GL_MAX_VARYING_VECTORS
value|0x8DFC
DECL|macro|GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS
define|#
directive|define
name|GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS
value|0x8B4D
DECL|macro|GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS
define|#
directive|define
name|GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS
value|0x8B4C
DECL|macro|GL_MAX_TEXTURE_IMAGE_UNITS
define|#
directive|define
name|GL_MAX_TEXTURE_IMAGE_UNITS
value|0x8872
DECL|macro|GL_MAX_FRAGMENT_UNIFORM_VECTORS
define|#
directive|define
name|GL_MAX_FRAGMENT_UNIFORM_VECTORS
value|0x8DFD
DECL|macro|GL_SHADER_TYPE
define|#
directive|define
name|GL_SHADER_TYPE
value|0x8B4F
DECL|macro|GL_DELETE_STATUS
define|#
directive|define
name|GL_DELETE_STATUS
value|0x8B80
DECL|macro|GL_LINK_STATUS
define|#
directive|define
name|GL_LINK_STATUS
value|0x8B82
DECL|macro|GL_VALIDATE_STATUS
define|#
directive|define
name|GL_VALIDATE_STATUS
value|0x8B83
DECL|macro|GL_ATTACHED_SHADERS
define|#
directive|define
name|GL_ATTACHED_SHADERS
value|0x8B85
DECL|macro|GL_ACTIVE_UNIFORMS
define|#
directive|define
name|GL_ACTIVE_UNIFORMS
value|0x8B86
DECL|macro|GL_ACTIVE_UNIFORM_MAX_LENGTH
define|#
directive|define
name|GL_ACTIVE_UNIFORM_MAX_LENGTH
value|0x8B87
DECL|macro|GL_ACTIVE_ATTRIBUTES
define|#
directive|define
name|GL_ACTIVE_ATTRIBUTES
value|0x8B89
DECL|macro|GL_ACTIVE_ATTRIBUTE_MAX_LENGTH
define|#
directive|define
name|GL_ACTIVE_ATTRIBUTE_MAX_LENGTH
value|0x8B8A
DECL|macro|GL_SHADING_LANGUAGE_VERSION
define|#
directive|define
name|GL_SHADING_LANGUAGE_VERSION
value|0x8B8C
DECL|macro|GL_CURRENT_PROGRAM
define|#
directive|define
name|GL_CURRENT_PROGRAM
value|0x8B8D
DECL|macro|GL_NEVER
define|#
directive|define
name|GL_NEVER
value|0x0200
DECL|macro|GL_LESS
define|#
directive|define
name|GL_LESS
value|0x0201
DECL|macro|GL_EQUAL
define|#
directive|define
name|GL_EQUAL
value|0x0202
DECL|macro|GL_LEQUAL
define|#
directive|define
name|GL_LEQUAL
value|0x0203
DECL|macro|GL_GREATER
define|#
directive|define
name|GL_GREATER
value|0x0204
DECL|macro|GL_NOTEQUAL
define|#
directive|define
name|GL_NOTEQUAL
value|0x0205
DECL|macro|GL_GEQUAL
define|#
directive|define
name|GL_GEQUAL
value|0x0206
DECL|macro|GL_ALWAYS
define|#
directive|define
name|GL_ALWAYS
value|0x0207
DECL|macro|GL_KEEP
define|#
directive|define
name|GL_KEEP
value|0x1E00
DECL|macro|GL_REPLACE
define|#
directive|define
name|GL_REPLACE
value|0x1E01
DECL|macro|GL_INCR
define|#
directive|define
name|GL_INCR
value|0x1E02
DECL|macro|GL_DECR
define|#
directive|define
name|GL_DECR
value|0x1E03
DECL|macro|GL_INVERT
define|#
directive|define
name|GL_INVERT
value|0x150A
DECL|macro|GL_INCR_WRAP
define|#
directive|define
name|GL_INCR_WRAP
value|0x8507
DECL|macro|GL_DECR_WRAP
define|#
directive|define
name|GL_DECR_WRAP
value|0x8508
DECL|macro|GL_VENDOR
define|#
directive|define
name|GL_VENDOR
value|0x1F00
DECL|macro|GL_RENDERER
define|#
directive|define
name|GL_RENDERER
value|0x1F01
DECL|macro|GL_VERSION
define|#
directive|define
name|GL_VERSION
value|0x1F02
DECL|macro|GL_EXTENSIONS
define|#
directive|define
name|GL_EXTENSIONS
value|0x1F03
DECL|macro|GL_NEAREST
define|#
directive|define
name|GL_NEAREST
value|0x2600
DECL|macro|GL_LINEAR
define|#
directive|define
name|GL_LINEAR
value|0x2601
DECL|macro|GL_NEAREST_MIPMAP_NEAREST
define|#
directive|define
name|GL_NEAREST_MIPMAP_NEAREST
value|0x2700
DECL|macro|GL_LINEAR_MIPMAP_NEAREST
define|#
directive|define
name|GL_LINEAR_MIPMAP_NEAREST
value|0x2701
DECL|macro|GL_NEAREST_MIPMAP_LINEAR
define|#
directive|define
name|GL_NEAREST_MIPMAP_LINEAR
value|0x2702
DECL|macro|GL_LINEAR_MIPMAP_LINEAR
define|#
directive|define
name|GL_LINEAR_MIPMAP_LINEAR
value|0x2703
DECL|macro|GL_TEXTURE_MAG_FILTER
define|#
directive|define
name|GL_TEXTURE_MAG_FILTER
value|0x2800
DECL|macro|GL_TEXTURE_MIN_FILTER
define|#
directive|define
name|GL_TEXTURE_MIN_FILTER
value|0x2801
DECL|macro|GL_TEXTURE_WRAP_S
define|#
directive|define
name|GL_TEXTURE_WRAP_S
value|0x2802
DECL|macro|GL_TEXTURE_WRAP_T
define|#
directive|define
name|GL_TEXTURE_WRAP_T
value|0x2803
DECL|macro|GL_TEXTURE
define|#
directive|define
name|GL_TEXTURE
value|0x1702
DECL|macro|GL_TEXTURE_CUBE_MAP
define|#
directive|define
name|GL_TEXTURE_CUBE_MAP
value|0x8513
DECL|macro|GL_TEXTURE_BINDING_CUBE_MAP
define|#
directive|define
name|GL_TEXTURE_BINDING_CUBE_MAP
value|0x8514
DECL|macro|GL_TEXTURE_CUBE_MAP_POSITIVE_X
define|#
directive|define
name|GL_TEXTURE_CUBE_MAP_POSITIVE_X
value|0x8515
DECL|macro|GL_TEXTURE_CUBE_MAP_NEGATIVE_X
define|#
directive|define
name|GL_TEXTURE_CUBE_MAP_NEGATIVE_X
value|0x8516
DECL|macro|GL_TEXTURE_CUBE_MAP_POSITIVE_Y
define|#
directive|define
name|GL_TEXTURE_CUBE_MAP_POSITIVE_Y
value|0x8517
DECL|macro|GL_TEXTURE_CUBE_MAP_NEGATIVE_Y
define|#
directive|define
name|GL_TEXTURE_CUBE_MAP_NEGATIVE_Y
value|0x8518
DECL|macro|GL_TEXTURE_CUBE_MAP_POSITIVE_Z
define|#
directive|define
name|GL_TEXTURE_CUBE_MAP_POSITIVE_Z
value|0x8519
DECL|macro|GL_TEXTURE_CUBE_MAP_NEGATIVE_Z
define|#
directive|define
name|GL_TEXTURE_CUBE_MAP_NEGATIVE_Z
value|0x851A
DECL|macro|GL_MAX_CUBE_MAP_TEXTURE_SIZE
define|#
directive|define
name|GL_MAX_CUBE_MAP_TEXTURE_SIZE
value|0x851C
DECL|macro|GL_TEXTURE0
define|#
directive|define
name|GL_TEXTURE0
value|0x84C0
DECL|macro|GL_TEXTURE1
define|#
directive|define
name|GL_TEXTURE1
value|0x84C1
DECL|macro|GL_TEXTURE2
define|#
directive|define
name|GL_TEXTURE2
value|0x84C2
DECL|macro|GL_TEXTURE3
define|#
directive|define
name|GL_TEXTURE3
value|0x84C3
DECL|macro|GL_TEXTURE4
define|#
directive|define
name|GL_TEXTURE4
value|0x84C4
DECL|macro|GL_TEXTURE5
define|#
directive|define
name|GL_TEXTURE5
value|0x84C5
DECL|macro|GL_TEXTURE6
define|#
directive|define
name|GL_TEXTURE6
value|0x84C6
DECL|macro|GL_TEXTURE7
define|#
directive|define
name|GL_TEXTURE7
value|0x84C7
DECL|macro|GL_TEXTURE8
define|#
directive|define
name|GL_TEXTURE8
value|0x84C8
DECL|macro|GL_TEXTURE9
define|#
directive|define
name|GL_TEXTURE9
value|0x84C9
DECL|macro|GL_TEXTURE10
define|#
directive|define
name|GL_TEXTURE10
value|0x84CA
DECL|macro|GL_TEXTURE11
define|#
directive|define
name|GL_TEXTURE11
value|0x84CB
DECL|macro|GL_TEXTURE12
define|#
directive|define
name|GL_TEXTURE12
value|0x84CC
DECL|macro|GL_TEXTURE13
define|#
directive|define
name|GL_TEXTURE13
value|0x84CD
DECL|macro|GL_TEXTURE14
define|#
directive|define
name|GL_TEXTURE14
value|0x84CE
DECL|macro|GL_TEXTURE15
define|#
directive|define
name|GL_TEXTURE15
value|0x84CF
DECL|macro|GL_TEXTURE16
define|#
directive|define
name|GL_TEXTURE16
value|0x84D0
DECL|macro|GL_TEXTURE17
define|#
directive|define
name|GL_TEXTURE17
value|0x84D1
DECL|macro|GL_TEXTURE18
define|#
directive|define
name|GL_TEXTURE18
value|0x84D2
DECL|macro|GL_TEXTURE19
define|#
directive|define
name|GL_TEXTURE19
value|0x84D3
DECL|macro|GL_TEXTURE20
define|#
directive|define
name|GL_TEXTURE20
value|0x84D4
DECL|macro|GL_TEXTURE21
define|#
directive|define
name|GL_TEXTURE21
value|0x84D5
DECL|macro|GL_TEXTURE22
define|#
directive|define
name|GL_TEXTURE22
value|0x84D6
DECL|macro|GL_TEXTURE23
define|#
directive|define
name|GL_TEXTURE23
value|0x84D7
DECL|macro|GL_TEXTURE24
define|#
directive|define
name|GL_TEXTURE24
value|0x84D8
DECL|macro|GL_TEXTURE25
define|#
directive|define
name|GL_TEXTURE25
value|0x84D9
DECL|macro|GL_TEXTURE26
define|#
directive|define
name|GL_TEXTURE26
value|0x84DA
DECL|macro|GL_TEXTURE27
define|#
directive|define
name|GL_TEXTURE27
value|0x84DB
DECL|macro|GL_TEXTURE28
define|#
directive|define
name|GL_TEXTURE28
value|0x84DC
DECL|macro|GL_TEXTURE29
define|#
directive|define
name|GL_TEXTURE29
value|0x84DD
DECL|macro|GL_TEXTURE30
define|#
directive|define
name|GL_TEXTURE30
value|0x84DE
DECL|macro|GL_TEXTURE31
define|#
directive|define
name|GL_TEXTURE31
value|0x84DF
DECL|macro|GL_ACTIVE_TEXTURE
define|#
directive|define
name|GL_ACTIVE_TEXTURE
value|0x84E0
DECL|macro|GL_REPEAT
define|#
directive|define
name|GL_REPEAT
value|0x2901
DECL|macro|GL_CLAMP_TO_EDGE
define|#
directive|define
name|GL_CLAMP_TO_EDGE
value|0x812F
DECL|macro|GL_MIRRORED_REPEAT
define|#
directive|define
name|GL_MIRRORED_REPEAT
value|0x8370
DECL|macro|GL_FLOAT_VEC2
define|#
directive|define
name|GL_FLOAT_VEC2
value|0x8B50
DECL|macro|GL_FLOAT_VEC3
define|#
directive|define
name|GL_FLOAT_VEC3
value|0x8B51
DECL|macro|GL_FLOAT_VEC4
define|#
directive|define
name|GL_FLOAT_VEC4
value|0x8B52
DECL|macro|GL_INT_VEC2
define|#
directive|define
name|GL_INT_VEC2
value|0x8B53
DECL|macro|GL_INT_VEC3
define|#
directive|define
name|GL_INT_VEC3
value|0x8B54
DECL|macro|GL_INT_VEC4
define|#
directive|define
name|GL_INT_VEC4
value|0x8B55
DECL|macro|GL_BOOL
define|#
directive|define
name|GL_BOOL
value|0x8B56
DECL|macro|GL_BOOL_VEC2
define|#
directive|define
name|GL_BOOL_VEC2
value|0x8B57
DECL|macro|GL_BOOL_VEC3
define|#
directive|define
name|GL_BOOL_VEC3
value|0x8B58
DECL|macro|GL_BOOL_VEC4
define|#
directive|define
name|GL_BOOL_VEC4
value|0x8B59
DECL|macro|GL_FLOAT_MAT2
define|#
directive|define
name|GL_FLOAT_MAT2
value|0x8B5A
DECL|macro|GL_FLOAT_MAT3
define|#
directive|define
name|GL_FLOAT_MAT3
value|0x8B5B
DECL|macro|GL_FLOAT_MAT4
define|#
directive|define
name|GL_FLOAT_MAT4
value|0x8B5C
DECL|macro|GL_SAMPLER_2D
define|#
directive|define
name|GL_SAMPLER_2D
value|0x8B5E
DECL|macro|GL_SAMPLER_CUBE
define|#
directive|define
name|GL_SAMPLER_CUBE
value|0x8B60
DECL|macro|GL_VERTEX_ATTRIB_ARRAY_ENABLED
define|#
directive|define
name|GL_VERTEX_ATTRIB_ARRAY_ENABLED
value|0x8622
DECL|macro|GL_VERTEX_ATTRIB_ARRAY_SIZE
define|#
directive|define
name|GL_VERTEX_ATTRIB_ARRAY_SIZE
value|0x8623
DECL|macro|GL_VERTEX_ATTRIB_ARRAY_STRIDE
define|#
directive|define
name|GL_VERTEX_ATTRIB_ARRAY_STRIDE
value|0x8624
DECL|macro|GL_VERTEX_ATTRIB_ARRAY_TYPE
define|#
directive|define
name|GL_VERTEX_ATTRIB_ARRAY_TYPE
value|0x8625
DECL|macro|GL_VERTEX_ATTRIB_ARRAY_NORMALIZED
define|#
directive|define
name|GL_VERTEX_ATTRIB_ARRAY_NORMALIZED
value|0x886A
DECL|macro|GL_VERTEX_ATTRIB_ARRAY_POINTER
define|#
directive|define
name|GL_VERTEX_ATTRIB_ARRAY_POINTER
value|0x8645
DECL|macro|GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING
define|#
directive|define
name|GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING
value|0x889F
DECL|macro|GL_IMPLEMENTATION_COLOR_READ_TYPE
define|#
directive|define
name|GL_IMPLEMENTATION_COLOR_READ_TYPE
value|0x8B9A
DECL|macro|GL_IMPLEMENTATION_COLOR_READ_FORMAT
define|#
directive|define
name|GL_IMPLEMENTATION_COLOR_READ_FORMAT
value|0x8B9B
DECL|macro|GL_COMPILE_STATUS
define|#
directive|define
name|GL_COMPILE_STATUS
value|0x8B81
DECL|macro|GL_INFO_LOG_LENGTH
define|#
directive|define
name|GL_INFO_LOG_LENGTH
value|0x8B84
DECL|macro|GL_SHADER_SOURCE_LENGTH
define|#
directive|define
name|GL_SHADER_SOURCE_LENGTH
value|0x8B88
DECL|macro|GL_SHADER_COMPILER
define|#
directive|define
name|GL_SHADER_COMPILER
value|0x8DFA
DECL|macro|GL_SHADER_BINARY_FORMATS
define|#
directive|define
name|GL_SHADER_BINARY_FORMATS
value|0x8DF8
DECL|macro|GL_NUM_SHADER_BINARY_FORMATS
define|#
directive|define
name|GL_NUM_SHADER_BINARY_FORMATS
value|0x8DF9
DECL|macro|GL_LOW_FLOAT
define|#
directive|define
name|GL_LOW_FLOAT
value|0x8DF0
DECL|macro|GL_MEDIUM_FLOAT
define|#
directive|define
name|GL_MEDIUM_FLOAT
value|0x8DF1
DECL|macro|GL_HIGH_FLOAT
define|#
directive|define
name|GL_HIGH_FLOAT
value|0x8DF2
DECL|macro|GL_LOW_INT
define|#
directive|define
name|GL_LOW_INT
value|0x8DF3
DECL|macro|GL_MEDIUM_INT
define|#
directive|define
name|GL_MEDIUM_INT
value|0x8DF4
DECL|macro|GL_HIGH_INT
define|#
directive|define
name|GL_HIGH_INT
value|0x8DF5
DECL|macro|GL_FRAMEBUFFER
define|#
directive|define
name|GL_FRAMEBUFFER
value|0x8D40
DECL|macro|GL_RENDERBUFFER
define|#
directive|define
name|GL_RENDERBUFFER
value|0x8D41
DECL|macro|GL_RGBA4
define|#
directive|define
name|GL_RGBA4
value|0x8056
DECL|macro|GL_RGB5_A1
define|#
directive|define
name|GL_RGB5_A1
value|0x8057
DECL|macro|GL_RGB565
define|#
directive|define
name|GL_RGB565
value|0x8D62
DECL|macro|GL_DEPTH_COMPONENT16
define|#
directive|define
name|GL_DEPTH_COMPONENT16
value|0x81A5
DECL|macro|GL_STENCIL_INDEX8
define|#
directive|define
name|GL_STENCIL_INDEX8
value|0x8D48
DECL|macro|GL_RENDERBUFFER_WIDTH
define|#
directive|define
name|GL_RENDERBUFFER_WIDTH
value|0x8D42
DECL|macro|GL_RENDERBUFFER_HEIGHT
define|#
directive|define
name|GL_RENDERBUFFER_HEIGHT
value|0x8D43
DECL|macro|GL_RENDERBUFFER_INTERNAL_FORMAT
define|#
directive|define
name|GL_RENDERBUFFER_INTERNAL_FORMAT
value|0x8D44
DECL|macro|GL_RENDERBUFFER_RED_SIZE
define|#
directive|define
name|GL_RENDERBUFFER_RED_SIZE
value|0x8D50
DECL|macro|GL_RENDERBUFFER_GREEN_SIZE
define|#
directive|define
name|GL_RENDERBUFFER_GREEN_SIZE
value|0x8D51
DECL|macro|GL_RENDERBUFFER_BLUE_SIZE
define|#
directive|define
name|GL_RENDERBUFFER_BLUE_SIZE
value|0x8D52
DECL|macro|GL_RENDERBUFFER_ALPHA_SIZE
define|#
directive|define
name|GL_RENDERBUFFER_ALPHA_SIZE
value|0x8D53
DECL|macro|GL_RENDERBUFFER_DEPTH_SIZE
define|#
directive|define
name|GL_RENDERBUFFER_DEPTH_SIZE
value|0x8D54
DECL|macro|GL_RENDERBUFFER_STENCIL_SIZE
define|#
directive|define
name|GL_RENDERBUFFER_STENCIL_SIZE
value|0x8D55
DECL|macro|GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
define|#
directive|define
name|GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
value|0x8CD0
DECL|macro|GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
define|#
directive|define
name|GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
value|0x8CD1
DECL|macro|GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
define|#
directive|define
name|GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
value|0x8CD2
DECL|macro|GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
define|#
directive|define
name|GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
value|0x8CD3
DECL|macro|GL_COLOR_ATTACHMENT0
define|#
directive|define
name|GL_COLOR_ATTACHMENT0
value|0x8CE0
DECL|macro|GL_DEPTH_ATTACHMENT
define|#
directive|define
name|GL_DEPTH_ATTACHMENT
value|0x8D00
DECL|macro|GL_STENCIL_ATTACHMENT
define|#
directive|define
name|GL_STENCIL_ATTACHMENT
value|0x8D20
DECL|macro|GL_NONE
define|#
directive|define
name|GL_NONE
value|0
DECL|macro|GL_FRAMEBUFFER_COMPLETE
define|#
directive|define
name|GL_FRAMEBUFFER_COMPLETE
value|0x8CD5
DECL|macro|GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
define|#
directive|define
name|GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
value|0x8CD6
DECL|macro|GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
define|#
directive|define
name|GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
value|0x8CD7
DECL|macro|GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS
define|#
directive|define
name|GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS
value|0x8CD9
DECL|macro|GL_FRAMEBUFFER_UNSUPPORTED
define|#
directive|define
name|GL_FRAMEBUFFER_UNSUPPORTED
value|0x8CDD
DECL|macro|GL_FRAMEBUFFER_BINDING
define|#
directive|define
name|GL_FRAMEBUFFER_BINDING
value|0x8CA6
DECL|macro|GL_RENDERBUFFER_BINDING
define|#
directive|define
name|GL_RENDERBUFFER_BINDING
value|0x8CA7
DECL|macro|GL_MAX_RENDERBUFFER_SIZE
define|#
directive|define
name|GL_MAX_RENDERBUFFER_SIZE
value|0x84E8
DECL|macro|GL_INVALID_FRAMEBUFFER_OPERATION
define|#
directive|define
name|GL_INVALID_FRAMEBUFFER_OPERATION
value|0x0506
DECL|typedef|PFNGLACTIVETEXTUREPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLACTIVETEXTUREPROC
function_decl|)
parameter_list|(
name|GLenum
name|texture
parameter_list|)
function_decl|;
DECL|typedef|PFNGLATTACHSHADERPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLATTACHSHADERPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|shader
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBINDATTRIBLOCATIONPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLBINDATTRIBLOCATIONPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBINDBUFFERPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLBINDBUFFERPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|buffer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBINDFRAMEBUFFERPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLBINDFRAMEBUFFERPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|framebuffer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBINDRENDERBUFFERPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLBINDRENDERBUFFERPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|renderbuffer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBINDTEXTUREPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLBINDTEXTUREPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|texture
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBLENDCOLORPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLBLENDCOLORPROC
function_decl|)
parameter_list|(
name|GLfloat
name|red
parameter_list|,
name|GLfloat
name|green
parameter_list|,
name|GLfloat
name|blue
parameter_list|,
name|GLfloat
name|alpha
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBLENDEQUATIONPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLBLENDEQUATIONPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBLENDEQUATIONSEPARATEPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLBLENDEQUATIONSEPARATEPROC
function_decl|)
parameter_list|(
name|GLenum
name|modeRGB
parameter_list|,
name|GLenum
name|modeAlpha
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBLENDFUNCPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLBLENDFUNCPROC
function_decl|)
parameter_list|(
name|GLenum
name|sfactor
parameter_list|,
name|GLenum
name|dfactor
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBLENDFUNCSEPARATEPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLBLENDFUNCSEPARATEPROC
function_decl|)
parameter_list|(
name|GLenum
name|sfactorRGB
parameter_list|,
name|GLenum
name|dfactorRGB
parameter_list|,
name|GLenum
name|sfactorAlpha
parameter_list|,
name|GLenum
name|dfactorAlpha
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBUFFERDATAPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLBUFFERDATAPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizeiptr
name|size
parameter_list|,
specifier|const
name|void
modifier|*
name|data
parameter_list|,
name|GLenum
name|usage
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBUFFERSUBDATAPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLBUFFERSUBDATAPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLintptr
name|offset
parameter_list|,
name|GLsizeiptr
name|size
parameter_list|,
specifier|const
name|void
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCHECKFRAMEBUFFERSTATUSPROC
typedef|typedef
name|GLenum
function_decl|(
name|GL_APIENTRYP
name|PFNGLCHECKFRAMEBUFFERSTATUSPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCLEARPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLCLEARPROC
function_decl|)
parameter_list|(
name|GLbitfield
name|mask
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCLEARCOLORPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLCLEARCOLORPROC
function_decl|)
parameter_list|(
name|GLfloat
name|red
parameter_list|,
name|GLfloat
name|green
parameter_list|,
name|GLfloat
name|blue
parameter_list|,
name|GLfloat
name|alpha
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCLEARDEPTHFPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLCLEARDEPTHFPROC
function_decl|)
parameter_list|(
name|GLfloat
name|d
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCLEARSTENCILPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLCLEARSTENCILPROC
function_decl|)
parameter_list|(
name|GLint
name|s
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOLORMASKPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLCOLORMASKPROC
function_decl|)
parameter_list|(
name|GLboolean
name|red
parameter_list|,
name|GLboolean
name|green
parameter_list|,
name|GLboolean
name|blue
parameter_list|,
name|GLboolean
name|alpha
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOMPILESHADERPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLCOMPILESHADERPROC
function_decl|)
parameter_list|(
name|GLuint
name|shader
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOMPRESSEDTEXIMAGE2DPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLCOMPRESSEDTEXIMAGE2DPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|void
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|void
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOPYTEXIMAGE2DPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLCOPYTEXIMAGE2DPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLint
name|border
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOPYTEXSUBIMAGE2DPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLCOPYTEXSUBIMAGE2DPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCREATEPROGRAMPROC
typedef|typedef
name|GLuint
function_decl|(
name|GL_APIENTRYP
name|PFNGLCREATEPROGRAMPROC
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCREATESHADERPROC
typedef|typedef
name|GLuint
function_decl|(
name|GL_APIENTRYP
name|PFNGLCREATESHADERPROC
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCULLFACEPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLCULLFACEPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDELETEBUFFERSPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLDELETEBUFFERSPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|buffers
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDELETEFRAMEBUFFERSPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLDELETEFRAMEBUFFERSPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|framebuffers
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDELETEPROGRAMPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLDELETEPROGRAMPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDELETERENDERBUFFERSPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLDELETERENDERBUFFERSPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|renderbuffers
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDELETESHADERPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLDELETESHADERPROC
function_decl|)
parameter_list|(
name|GLuint
name|shader
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDELETETEXTURESPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLDELETETEXTURESPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|textures
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDEPTHFUNCPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLDEPTHFUNCPROC
function_decl|)
parameter_list|(
name|GLenum
name|func
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDEPTHMASKPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLDEPTHMASKPROC
function_decl|)
parameter_list|(
name|GLboolean
name|flag
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDEPTHRANGEFPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLDEPTHRANGEFPROC
function_decl|)
parameter_list|(
name|GLfloat
name|n
parameter_list|,
name|GLfloat
name|f
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDETACHSHADERPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLDETACHSHADERPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|shader
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDISABLEPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLDISABLEPROC
function_decl|)
parameter_list|(
name|GLenum
name|cap
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDISABLEVERTEXATTRIBARRAYPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLDISABLEVERTEXATTRIBARRAYPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDRAWARRAYSPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLDRAWARRAYSPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLint
name|first
parameter_list|,
name|GLsizei
name|count
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDRAWELEMENTSPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLDRAWELEMENTSPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|void
modifier|*
name|indices
parameter_list|)
function_decl|;
DECL|typedef|PFNGLENABLEPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLENABLEPROC
function_decl|)
parameter_list|(
name|GLenum
name|cap
parameter_list|)
function_decl|;
DECL|typedef|PFNGLENABLEVERTEXATTRIBARRAYPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLENABLEVERTEXATTRIBARRAYPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFINISHPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLFINISHPROC
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFLUSHPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLFLUSHPROC
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFRAMEBUFFERRENDERBUFFERPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLFRAMEBUFFERRENDERBUFFERPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|renderbuffertarget
parameter_list|,
name|GLuint
name|renderbuffer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFRAMEBUFFERTEXTURE2DPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLFRAMEBUFFERTEXTURE2DPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|textarget
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFRONTFACEPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLFRONTFACEPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGENBUFFERSPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGENBUFFERSPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|buffers
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGENERATEMIPMAPPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGENERATEMIPMAPPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGENFRAMEBUFFERSPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGENFRAMEBUFFERSPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|framebuffers
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGENRENDERBUFFERSPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGENRENDERBUFFERSPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|renderbuffers
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGENTEXTURESPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGENTEXTURESPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|textures
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETACTIVEATTRIBPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETACTIVEATTRIBPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLint
modifier|*
name|size
parameter_list|,
name|GLenum
modifier|*
name|type
parameter_list|,
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETACTIVEUNIFORMPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETACTIVEUNIFORMPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLint
modifier|*
name|size
parameter_list|,
name|GLenum
modifier|*
name|type
parameter_list|,
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETATTACHEDSHADERSPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETATTACHEDSHADERSPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLsizei
name|maxCount
parameter_list|,
name|GLsizei
modifier|*
name|count
parameter_list|,
name|GLuint
modifier|*
name|shaders
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETATTRIBLOCATIONPROC
typedef|typedef
name|GLint
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETATTRIBLOCATIONPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETBOOLEANVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETBOOLEANVPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLboolean
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETBUFFERPARAMETERIVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETBUFFERPARAMETERIVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETERRORPROC
typedef|typedef
name|GLenum
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETERRORPROC
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETFLOATVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETFLOATVPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETINTEGERVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETINTEGERVPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPROGRAMIVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETPROGRAMIVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPROGRAMINFOLOGPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETPROGRAMINFOLOGPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|infoLog
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETRENDERBUFFERPARAMETERIVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETRENDERBUFFERPARAMETERIVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETSHADERIVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETSHADERIVPROC
function_decl|)
parameter_list|(
name|GLuint
name|shader
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETSHADERINFOLOGPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETSHADERINFOLOGPROC
function_decl|)
parameter_list|(
name|GLuint
name|shader
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|infoLog
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETSHADERPRECISIONFORMATPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETSHADERPRECISIONFORMATPROC
function_decl|)
parameter_list|(
name|GLenum
name|shadertype
parameter_list|,
name|GLenum
name|precisiontype
parameter_list|,
name|GLint
modifier|*
name|range
parameter_list|,
name|GLint
modifier|*
name|precision
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETSHADERSOURCEPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETSHADERSOURCEPROC
function_decl|)
parameter_list|(
name|GLuint
name|shader
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|source
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETSTRINGPROC
typedef|typedef
specifier|const
name|GLubyte
modifier|*
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETSTRINGPROC
function_decl|)
parameter_list|(
name|GLenum
name|name
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETTEXPARAMETERFVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETTEXPARAMETERFVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETTEXPARAMETERIVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETTEXPARAMETERIVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETUNIFORMFVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETUNIFORMFVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETUNIFORMIVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETUNIFORMIVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETUNIFORMLOCATIONPROC
typedef|typedef
name|GLint
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETUNIFORMLOCATIONPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETVERTEXATTRIBFVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETVERTEXATTRIBFVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETVERTEXATTRIBIVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETVERTEXATTRIBIVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETVERTEXATTRIBPOINTERVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETVERTEXATTRIBPOINTERVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|void
modifier|*
modifier|*
name|pointer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLHINTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLHINTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|mode
parameter_list|)
function_decl|;
DECL|typedef|PFNGLISBUFFERPROC
typedef|typedef
name|GLboolean
function_decl|(
name|GL_APIENTRYP
name|PFNGLISBUFFERPROC
function_decl|)
parameter_list|(
name|GLuint
name|buffer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLISENABLEDPROC
typedef|typedef
name|GLboolean
function_decl|(
name|GL_APIENTRYP
name|PFNGLISENABLEDPROC
function_decl|)
parameter_list|(
name|GLenum
name|cap
parameter_list|)
function_decl|;
DECL|typedef|PFNGLISFRAMEBUFFERPROC
typedef|typedef
name|GLboolean
function_decl|(
name|GL_APIENTRYP
name|PFNGLISFRAMEBUFFERPROC
function_decl|)
parameter_list|(
name|GLuint
name|framebuffer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLISPROGRAMPROC
typedef|typedef
name|GLboolean
function_decl|(
name|GL_APIENTRYP
name|PFNGLISPROGRAMPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|)
function_decl|;
DECL|typedef|PFNGLISRENDERBUFFERPROC
typedef|typedef
name|GLboolean
function_decl|(
name|GL_APIENTRYP
name|PFNGLISRENDERBUFFERPROC
function_decl|)
parameter_list|(
name|GLuint
name|renderbuffer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLISSHADERPROC
typedef|typedef
name|GLboolean
function_decl|(
name|GL_APIENTRYP
name|PFNGLISSHADERPROC
function_decl|)
parameter_list|(
name|GLuint
name|shader
parameter_list|)
function_decl|;
DECL|typedef|PFNGLISTEXTUREPROC
typedef|typedef
name|GLboolean
function_decl|(
name|GL_APIENTRYP
name|PFNGLISTEXTUREPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|)
function_decl|;
DECL|typedef|PFNGLLINEWIDTHPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLLINEWIDTHPROC
function_decl|)
parameter_list|(
name|GLfloat
name|width
parameter_list|)
function_decl|;
DECL|typedef|PFNGLLINKPROGRAMPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLLINKPROGRAMPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPIXELSTOREIPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPIXELSTOREIPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPOLYGONOFFSETPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPOLYGONOFFSETPROC
function_decl|)
parameter_list|(
name|GLfloat
name|factor
parameter_list|,
name|GLfloat
name|units
parameter_list|)
function_decl|;
DECL|typedef|PFNGLREADPIXELSPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLREADPIXELSPROC
function_decl|)
parameter_list|(
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|void
modifier|*
name|pixels
parameter_list|)
function_decl|;
DECL|typedef|PFNGLRELEASESHADERCOMPILERPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLRELEASESHADERCOMPILERPROC
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
DECL|typedef|PFNGLRENDERBUFFERSTORAGEPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLRENDERBUFFERSTORAGEPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSAMPLECOVERAGEPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLSAMPLECOVERAGEPROC
function_decl|)
parameter_list|(
name|GLfloat
name|value
parameter_list|,
name|GLboolean
name|invert
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSCISSORPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLSCISSORPROC
function_decl|)
parameter_list|(
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSHADERBINARYPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLSHADERBINARYPROC
function_decl|)
parameter_list|(
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|shaders
parameter_list|,
name|GLenum
name|binaryformat
parameter_list|,
specifier|const
name|void
modifier|*
name|binary
parameter_list|,
name|GLsizei
name|length
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSHADERSOURCEPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLSHADERSOURCEPROC
function_decl|)
parameter_list|(
name|GLuint
name|shader
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLchar
modifier|*
specifier|const
modifier|*
name|string
parameter_list|,
specifier|const
name|GLint
modifier|*
name|length
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSTENCILFUNCPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLSTENCILFUNCPROC
function_decl|)
parameter_list|(
name|GLenum
name|func
parameter_list|,
name|GLint
name|ref
parameter_list|,
name|GLuint
name|mask
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSTENCILFUNCSEPARATEPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLSTENCILFUNCSEPARATEPROC
function_decl|)
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|func
parameter_list|,
name|GLint
name|ref
parameter_list|,
name|GLuint
name|mask
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSTENCILMASKPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLSTENCILMASKPROC
function_decl|)
parameter_list|(
name|GLuint
name|mask
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSTENCILMASKSEPARATEPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLSTENCILMASKSEPARATEPROC
function_decl|)
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLuint
name|mask
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSTENCILOPPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLSTENCILOPPROC
function_decl|)
parameter_list|(
name|GLenum
name|fail
parameter_list|,
name|GLenum
name|zfail
parameter_list|,
name|GLenum
name|zpass
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSTENCILOPSEPARATEPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLSTENCILOPSEPARATEPROC
function_decl|)
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|sfail
parameter_list|,
name|GLenum
name|dpfail
parameter_list|,
name|GLenum
name|dppass
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXIMAGE2DPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLTEXIMAGE2DPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|void
modifier|*
name|pixels
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXPARAMETERFPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLTEXPARAMETERFPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXPARAMETERFVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLTEXPARAMETERFVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXPARAMETERIPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLTEXPARAMETERIPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXPARAMETERIVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLTEXPARAMETERIVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXSUBIMAGE2DPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLTEXSUBIMAGE2DPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|void
modifier|*
name|pixels
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM1FPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLUNIFORM1FPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLfloat
name|v0
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM1FVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLUNIFORM1FVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM1IPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLUNIFORM1IPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLint
name|v0
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM1IVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLUNIFORM1IVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM2FPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLUNIFORM2FPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLfloat
name|v0
parameter_list|,
name|GLfloat
name|v1
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM2FVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLUNIFORM2FVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM2IPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLUNIFORM2IPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLint
name|v0
parameter_list|,
name|GLint
name|v1
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM2IVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLUNIFORM2IVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM3FPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLUNIFORM3FPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLfloat
name|v0
parameter_list|,
name|GLfloat
name|v1
parameter_list|,
name|GLfloat
name|v2
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM3FVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLUNIFORM3FVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM3IPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLUNIFORM3IPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLint
name|v0
parameter_list|,
name|GLint
name|v1
parameter_list|,
name|GLint
name|v2
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM3IVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLUNIFORM3IVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM4FPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLUNIFORM4FPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLfloat
name|v0
parameter_list|,
name|GLfloat
name|v1
parameter_list|,
name|GLfloat
name|v2
parameter_list|,
name|GLfloat
name|v3
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM4FVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLUNIFORM4FVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM4IPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLUNIFORM4IPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLint
name|v0
parameter_list|,
name|GLint
name|v1
parameter_list|,
name|GLint
name|v2
parameter_list|,
name|GLint
name|v3
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM4IVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLUNIFORM4IVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORMMATRIX2FVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLUNIFORMMATRIX2FVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORMMATRIX3FVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLUNIFORMMATRIX3FVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORMMATRIX4FVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLUNIFORMMATRIX4FVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUSEPROGRAMPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLUSEPROGRAMPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVALIDATEPROGRAMPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLVALIDATEPROGRAMPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB1FPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLVERTEXATTRIB1FPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLfloat
name|x
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB1FVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLVERTEXATTRIB1FVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB2FPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLVERTEXATTRIB2FPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB2FVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLVERTEXATTRIB2FVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB3FPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLVERTEXATTRIB3FPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB3FVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLVERTEXATTRIB3FVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB4FPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLVERTEXATTRIB4FPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|,
name|GLfloat
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB4FVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLVERTEXATTRIB4FVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBPOINTERPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLVERTEXATTRIBPOINTERPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLboolean
name|normalized
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|void
modifier|*
name|pointer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVIEWPORTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLVIEWPORTPROC
function_decl|)
parameter_list|(
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glActiveTexture
parameter_list|(
name|GLenum
name|texture
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glAttachShader
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|shader
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glBindAttribLocation
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glBindBuffer
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|buffer
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glBindFramebuffer
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|framebuffer
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glBindRenderbuffer
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|renderbuffer
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glBindTexture
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|texture
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glBlendColor
parameter_list|(
name|GLfloat
name|red
parameter_list|,
name|GLfloat
name|green
parameter_list|,
name|GLfloat
name|blue
parameter_list|,
name|GLfloat
name|alpha
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glBlendEquation
parameter_list|(
name|GLenum
name|mode
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glBlendEquationSeparate
parameter_list|(
name|GLenum
name|modeRGB
parameter_list|,
name|GLenum
name|modeAlpha
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glBlendFunc
parameter_list|(
name|GLenum
name|sfactor
parameter_list|,
name|GLenum
name|dfactor
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glBlendFuncSeparate
parameter_list|(
name|GLenum
name|sfactorRGB
parameter_list|,
name|GLenum
name|dfactorRGB
parameter_list|,
name|GLenum
name|sfactorAlpha
parameter_list|,
name|GLenum
name|dfactorAlpha
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glBufferData
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizeiptr
name|size
parameter_list|,
specifier|const
name|void
modifier|*
name|data
parameter_list|,
name|GLenum
name|usage
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glBufferSubData
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLintptr
name|offset
parameter_list|,
name|GLsizeiptr
name|size
parameter_list|,
specifier|const
name|void
modifier|*
name|data
parameter_list|)
function_decl|;
name|GL_APICALL
name|GLenum
name|GL_APIENTRY
name|glCheckFramebufferStatus
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glClear
parameter_list|(
name|GLbitfield
name|mask
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glClearColor
parameter_list|(
name|GLfloat
name|red
parameter_list|,
name|GLfloat
name|green
parameter_list|,
name|GLfloat
name|blue
parameter_list|,
name|GLfloat
name|alpha
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glClearDepthf
parameter_list|(
name|GLfloat
name|d
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glClearStencil
parameter_list|(
name|GLint
name|s
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glColorMask
parameter_list|(
name|GLboolean
name|red
parameter_list|,
name|GLboolean
name|green
parameter_list|,
name|GLboolean
name|blue
parameter_list|,
name|GLboolean
name|alpha
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glCompileShader
parameter_list|(
name|GLuint
name|shader
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glCompressedTexImage2D
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|void
modifier|*
name|data
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glCompressedTexSubImage2D
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|void
modifier|*
name|data
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glCopyTexImage2D
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLint
name|border
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glCopyTexSubImage2D
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
name|GL_APICALL
name|GLuint
name|GL_APIENTRY
name|glCreateProgram
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|GL_APICALL
name|GLuint
name|GL_APIENTRY
name|glCreateShader
parameter_list|(
name|GLenum
name|type
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glCullFace
parameter_list|(
name|GLenum
name|mode
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glDeleteBuffers
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|buffers
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glDeleteFramebuffers
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|framebuffers
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glDeleteProgram
parameter_list|(
name|GLuint
name|program
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glDeleteRenderbuffers
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|renderbuffers
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glDeleteShader
parameter_list|(
name|GLuint
name|shader
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glDeleteTextures
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|textures
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glDepthFunc
parameter_list|(
name|GLenum
name|func
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glDepthMask
parameter_list|(
name|GLboolean
name|flag
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glDepthRangef
parameter_list|(
name|GLfloat
name|n
parameter_list|,
name|GLfloat
name|f
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glDetachShader
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|shader
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glDisable
parameter_list|(
name|GLenum
name|cap
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glDisableVertexAttribArray
parameter_list|(
name|GLuint
name|index
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glDrawArrays
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLint
name|first
parameter_list|,
name|GLsizei
name|count
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glDrawElements
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|void
modifier|*
name|indices
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glEnable
parameter_list|(
name|GLenum
name|cap
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glEnableVertexAttribArray
parameter_list|(
name|GLuint
name|index
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glFinish
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glFlush
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glFramebufferRenderbuffer
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|renderbuffertarget
parameter_list|,
name|GLuint
name|renderbuffer
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glFramebufferTexture2D
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|textarget
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glFrontFace
parameter_list|(
name|GLenum
name|mode
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGenBuffers
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|buffers
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGenerateMipmap
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGenFramebuffers
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|framebuffers
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGenRenderbuffers
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|renderbuffers
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGenTextures
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|textures
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetActiveAttrib
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLint
modifier|*
name|size
parameter_list|,
name|GLenum
modifier|*
name|type
parameter_list|,
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetActiveUniform
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLint
modifier|*
name|size
parameter_list|,
name|GLenum
modifier|*
name|type
parameter_list|,
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetAttachedShaders
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLsizei
name|maxCount
parameter_list|,
name|GLsizei
modifier|*
name|count
parameter_list|,
name|GLuint
modifier|*
name|shaders
parameter_list|)
function_decl|;
name|GL_APICALL
name|GLint
name|GL_APIENTRY
name|glGetAttribLocation
parameter_list|(
name|GLuint
name|program
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetBooleanv
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLboolean
modifier|*
name|data
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetBufferParameteriv
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GL_APICALL
name|GLenum
name|GL_APIENTRY
name|glGetError
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetFloatv
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|data
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetFramebufferAttachmentParameteriv
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetIntegerv
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|data
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetProgramiv
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetProgramInfoLog
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|infoLog
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetRenderbufferParameteriv
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetShaderiv
parameter_list|(
name|GLuint
name|shader
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetShaderInfoLog
parameter_list|(
name|GLuint
name|shader
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|infoLog
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetShaderPrecisionFormat
parameter_list|(
name|GLenum
name|shadertype
parameter_list|,
name|GLenum
name|precisiontype
parameter_list|,
name|GLint
modifier|*
name|range
parameter_list|,
name|GLint
modifier|*
name|precision
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetShaderSource
parameter_list|(
name|GLuint
name|shader
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|source
parameter_list|)
function_decl|;
name|GL_APICALL
specifier|const
name|GLubyte
modifier|*
name|GL_APIENTRY
name|glGetString
parameter_list|(
name|GLenum
name|name
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetTexParameterfv
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetTexParameteriv
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetUniformfv
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetUniformiv
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GL_APICALL
name|GLint
name|GL_APIENTRY
name|glGetUniformLocation
parameter_list|(
name|GLuint
name|program
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetVertexAttribfv
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetVertexAttribiv
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetVertexAttribPointerv
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|void
modifier|*
modifier|*
name|pointer
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glHint
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|mode
parameter_list|)
function_decl|;
name|GL_APICALL
name|GLboolean
name|GL_APIENTRY
name|glIsBuffer
parameter_list|(
name|GLuint
name|buffer
parameter_list|)
function_decl|;
name|GL_APICALL
name|GLboolean
name|GL_APIENTRY
name|glIsEnabled
parameter_list|(
name|GLenum
name|cap
parameter_list|)
function_decl|;
name|GL_APICALL
name|GLboolean
name|GL_APIENTRY
name|glIsFramebuffer
parameter_list|(
name|GLuint
name|framebuffer
parameter_list|)
function_decl|;
name|GL_APICALL
name|GLboolean
name|GL_APIENTRY
name|glIsProgram
parameter_list|(
name|GLuint
name|program
parameter_list|)
function_decl|;
name|GL_APICALL
name|GLboolean
name|GL_APIENTRY
name|glIsRenderbuffer
parameter_list|(
name|GLuint
name|renderbuffer
parameter_list|)
function_decl|;
name|GL_APICALL
name|GLboolean
name|GL_APIENTRY
name|glIsShader
parameter_list|(
name|GLuint
name|shader
parameter_list|)
function_decl|;
name|GL_APICALL
name|GLboolean
name|GL_APIENTRY
name|glIsTexture
parameter_list|(
name|GLuint
name|texture
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glLineWidth
parameter_list|(
name|GLfloat
name|width
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glLinkProgram
parameter_list|(
name|GLuint
name|program
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glPixelStorei
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glPolygonOffset
parameter_list|(
name|GLfloat
name|factor
parameter_list|,
name|GLfloat
name|units
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glReadPixels
parameter_list|(
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|void
modifier|*
name|pixels
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glReleaseShaderCompiler
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glRenderbufferStorage
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glSampleCoverage
parameter_list|(
name|GLfloat
name|value
parameter_list|,
name|GLboolean
name|invert
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glScissor
parameter_list|(
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glShaderBinary
parameter_list|(
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|shaders
parameter_list|,
name|GLenum
name|binaryformat
parameter_list|,
specifier|const
name|void
modifier|*
name|binary
parameter_list|,
name|GLsizei
name|length
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glShaderSource
parameter_list|(
name|GLuint
name|shader
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLchar
modifier|*
specifier|const
modifier|*
name|string
parameter_list|,
specifier|const
name|GLint
modifier|*
name|length
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glStencilFunc
parameter_list|(
name|GLenum
name|func
parameter_list|,
name|GLint
name|ref
parameter_list|,
name|GLuint
name|mask
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glStencilFuncSeparate
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|func
parameter_list|,
name|GLint
name|ref
parameter_list|,
name|GLuint
name|mask
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glStencilMask
parameter_list|(
name|GLuint
name|mask
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glStencilMaskSeparate
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLuint
name|mask
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glStencilOp
parameter_list|(
name|GLenum
name|fail
parameter_list|,
name|GLenum
name|zfail
parameter_list|,
name|GLenum
name|zpass
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glStencilOpSeparate
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|sfail
parameter_list|,
name|GLenum
name|dpfail
parameter_list|,
name|GLenum
name|dppass
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glTexImage2D
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|void
modifier|*
name|pixels
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glTexParameterf
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glTexParameterfv
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glTexParameteri
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glTexParameteriv
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glTexSubImage2D
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|void
modifier|*
name|pixels
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glUniform1f
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLfloat
name|v0
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glUniform1fv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glUniform1i
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLint
name|v0
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glUniform1iv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glUniform2f
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLfloat
name|v0
parameter_list|,
name|GLfloat
name|v1
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glUniform2fv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glUniform2i
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLint
name|v0
parameter_list|,
name|GLint
name|v1
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glUniform2iv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glUniform3f
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLfloat
name|v0
parameter_list|,
name|GLfloat
name|v1
parameter_list|,
name|GLfloat
name|v2
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glUniform3fv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glUniform3i
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLint
name|v0
parameter_list|,
name|GLint
name|v1
parameter_list|,
name|GLint
name|v2
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glUniform3iv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glUniform4f
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLfloat
name|v0
parameter_list|,
name|GLfloat
name|v1
parameter_list|,
name|GLfloat
name|v2
parameter_list|,
name|GLfloat
name|v3
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glUniform4fv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glUniform4i
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLint
name|v0
parameter_list|,
name|GLint
name|v1
parameter_list|,
name|GLint
name|v2
parameter_list|,
name|GLint
name|v3
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glUniform4iv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glUniformMatrix2fv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glUniformMatrix3fv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glUniformMatrix4fv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glUseProgram
parameter_list|(
name|GLuint
name|program
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glValidateProgram
parameter_list|(
name|GLuint
name|program
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glVertexAttrib1f
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLfloat
name|x
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glVertexAttrib1fv
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glVertexAttrib2f
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glVertexAttrib2fv
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glVertexAttrib3f
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glVertexAttrib3fv
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glVertexAttrib4f
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|,
name|GLfloat
name|w
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glVertexAttrib4fv
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glVertexAttribPointer
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLboolean
name|normalized
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|void
modifier|*
name|pointer
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glViewport
parameter_list|(
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_ES_VERSION_2_0 */
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern
begin_endif
endif|#
directive|endif
end_endif
begin_endif
endif|#
directive|endif
end_endif
end_unit
