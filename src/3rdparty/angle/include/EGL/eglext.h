begin_unit
begin_ifndef
ifndef|#
directive|ifndef
name|__eglext_h_
end_ifndef
begin_define
DECL|macro|__eglext_h_
define|#
directive|define
name|__eglext_h_
value|1
end_define
begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef
begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
comment|/* ** Copyright (c) 2013-2014 The Khronos Group Inc. ** ** Permission is hereby granted, free of charge, to any person obtaining a ** copy of this software and/or associated documentation files (the ** "Materials"), to deal in the Materials without restriction, including ** without limitation the rights to use, copy, modify, merge, publish, ** distribute, sublicense, and/or sell copies of the Materials, and to ** permit persons to whom the Materials are furnished to do so, subject to ** the following conditions: ** ** The above copyright notice and this permission notice shall be included ** in all copies or substantial portions of the Materials. ** ** THE MATERIALS ARE PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, ** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF ** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. ** IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY ** CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, ** TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE ** MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS. */
comment|/* ** This header is generated from the Khronos OpenGL / OpenGL ES XML ** API Registry. The current version of the Registry, generator scripts ** used to make the header, and the header can be found at **   http://www.opengl.org/registry/ ** ** Khronos $Revision: 27018 $ on $Date: 2014-06-10 08:06:12 -0700 (Tue, 10 Jun 2014) $ */
include|#
directive|include
file|<EGL/eglplatform.h>
DECL|macro|EGL_EGLEXT_VERSION
define|#
directive|define
name|EGL_EGLEXT_VERSION
value|20140610
comment|/* Generated C header for:  * API: egl  * Versions considered: .*  * Versions emitted: _nomatch_^  * Default extensions included: egl  * Additional extensions included: _nomatch_^  * Extensions removed: _nomatch_^  */
ifndef|#
directive|ifndef
name|EGL_KHR_cl_event
DECL|macro|EGL_KHR_cl_event
define|#
directive|define
name|EGL_KHR_cl_event
value|1
DECL|macro|EGL_CL_EVENT_HANDLE_KHR
define|#
directive|define
name|EGL_CL_EVENT_HANDLE_KHR
value|0x309C
DECL|macro|EGL_SYNC_CL_EVENT_KHR
define|#
directive|define
name|EGL_SYNC_CL_EVENT_KHR
value|0x30FE
DECL|macro|EGL_SYNC_CL_EVENT_COMPLETE_KHR
define|#
directive|define
name|EGL_SYNC_CL_EVENT_COMPLETE_KHR
value|0x30FF
endif|#
directive|endif
comment|/* EGL_KHR_cl_event */
ifndef|#
directive|ifndef
name|EGL_KHR_cl_event2
DECL|macro|EGL_KHR_cl_event2
define|#
directive|define
name|EGL_KHR_cl_event2
value|1
DECL|typedef|EGLSyncKHR
typedef|typedef
name|void
modifier|*
name|EGLSyncKHR
typedef|;
DECL|typedef|EGLAttribKHR
typedef|typedef
name|khronos_intptr_t
name|EGLAttribKHR
typedef|;
DECL|typedef|PFNEGLCREATESYNC64KHRPROC
typedef|typedef
name|EGLSyncKHR
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLCREATESYNC64KHRPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLenum
name|type
parameter_list|,
specifier|const
name|EGLAttribKHR
modifier|*
name|attrib_list
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|EGL_EGLEXT_PROTOTYPES
name|EGLAPI
name|EGLSyncKHR
name|EGLAPIENTRY
name|eglCreateSync64KHR
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLenum
name|type
parameter_list|,
specifier|const
name|EGLAttribKHR
modifier|*
name|attrib_list
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* EGL_KHR_cl_event2 */
ifndef|#
directive|ifndef
name|EGL_KHR_client_get_all_proc_addresses
DECL|macro|EGL_KHR_client_get_all_proc_addresses
define|#
directive|define
name|EGL_KHR_client_get_all_proc_addresses
value|1
endif|#
directive|endif
comment|/* EGL_KHR_client_get_all_proc_addresses */
ifndef|#
directive|ifndef
name|EGL_KHR_config_attribs
DECL|macro|EGL_KHR_config_attribs
define|#
directive|define
name|EGL_KHR_config_attribs
value|1
DECL|macro|EGL_CONFORMANT_KHR
define|#
directive|define
name|EGL_CONFORMANT_KHR
value|0x3042
DECL|macro|EGL_VG_COLORSPACE_LINEAR_BIT_KHR
define|#
directive|define
name|EGL_VG_COLORSPACE_LINEAR_BIT_KHR
value|0x0020
DECL|macro|EGL_VG_ALPHA_FORMAT_PRE_BIT_KHR
define|#
directive|define
name|EGL_VG_ALPHA_FORMAT_PRE_BIT_KHR
value|0x0040
endif|#
directive|endif
comment|/* EGL_KHR_config_attribs */
ifndef|#
directive|ifndef
name|EGL_KHR_create_context
DECL|macro|EGL_KHR_create_context
define|#
directive|define
name|EGL_KHR_create_context
value|1
DECL|macro|EGL_CONTEXT_MAJOR_VERSION_KHR
define|#
directive|define
name|EGL_CONTEXT_MAJOR_VERSION_KHR
value|0x3098
DECL|macro|EGL_CONTEXT_MINOR_VERSION_KHR
define|#
directive|define
name|EGL_CONTEXT_MINOR_VERSION_KHR
value|0x30FB
DECL|macro|EGL_CONTEXT_FLAGS_KHR
define|#
directive|define
name|EGL_CONTEXT_FLAGS_KHR
value|0x30FC
DECL|macro|EGL_CONTEXT_OPENGL_PROFILE_MASK_KHR
define|#
directive|define
name|EGL_CONTEXT_OPENGL_PROFILE_MASK_KHR
value|0x30FD
DECL|macro|EGL_CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY_KHR
define|#
directive|define
name|EGL_CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY_KHR
value|0x31BD
DECL|macro|EGL_NO_RESET_NOTIFICATION_KHR
define|#
directive|define
name|EGL_NO_RESET_NOTIFICATION_KHR
value|0x31BE
DECL|macro|EGL_LOSE_CONTEXT_ON_RESET_KHR
define|#
directive|define
name|EGL_LOSE_CONTEXT_ON_RESET_KHR
value|0x31BF
DECL|macro|EGL_CONTEXT_OPENGL_DEBUG_BIT_KHR
define|#
directive|define
name|EGL_CONTEXT_OPENGL_DEBUG_BIT_KHR
value|0x00000001
DECL|macro|EGL_CONTEXT_OPENGL_FORWARD_COMPATIBLE_BIT_KHR
define|#
directive|define
name|EGL_CONTEXT_OPENGL_FORWARD_COMPATIBLE_BIT_KHR
value|0x00000002
DECL|macro|EGL_CONTEXT_OPENGL_ROBUST_ACCESS_BIT_KHR
define|#
directive|define
name|EGL_CONTEXT_OPENGL_ROBUST_ACCESS_BIT_KHR
value|0x00000004
DECL|macro|EGL_CONTEXT_OPENGL_CORE_PROFILE_BIT_KHR
define|#
directive|define
name|EGL_CONTEXT_OPENGL_CORE_PROFILE_BIT_KHR
value|0x00000001
DECL|macro|EGL_CONTEXT_OPENGL_COMPATIBILITY_PROFILE_BIT_KHR
define|#
directive|define
name|EGL_CONTEXT_OPENGL_COMPATIBILITY_PROFILE_BIT_KHR
value|0x00000002
DECL|macro|EGL_OPENGL_ES3_BIT_KHR
define|#
directive|define
name|EGL_OPENGL_ES3_BIT_KHR
value|0x00000040
endif|#
directive|endif
comment|/* EGL_KHR_create_context */
ifndef|#
directive|ifndef
name|EGL_KHR_fence_sync
DECL|macro|EGL_KHR_fence_sync
define|#
directive|define
name|EGL_KHR_fence_sync
value|1
ifdef|#
directive|ifdef
name|KHRONOS_SUPPORT_INT64
DECL|macro|EGL_SYNC_PRIOR_COMMANDS_COMPLETE_KHR
define|#
directive|define
name|EGL_SYNC_PRIOR_COMMANDS_COMPLETE_KHR
value|0x30F0
DECL|macro|EGL_SYNC_CONDITION_KHR
define|#
directive|define
name|EGL_SYNC_CONDITION_KHR
value|0x30F8
DECL|macro|EGL_SYNC_FENCE_KHR
define|#
directive|define
name|EGL_SYNC_FENCE_KHR
value|0x30F9
endif|#
directive|endif
comment|/* KHRONOS_SUPPORT_INT64 */
endif|#
directive|endif
comment|/* EGL_KHR_fence_sync */
ifndef|#
directive|ifndef
name|EGL_KHR_get_all_proc_addresses
DECL|macro|EGL_KHR_get_all_proc_addresses
define|#
directive|define
name|EGL_KHR_get_all_proc_addresses
value|1
endif|#
directive|endif
comment|/* EGL_KHR_get_all_proc_addresses */
ifndef|#
directive|ifndef
name|EGL_KHR_gl_colorspace
DECL|macro|EGL_KHR_gl_colorspace
define|#
directive|define
name|EGL_KHR_gl_colorspace
value|1
DECL|macro|EGL_GL_COLORSPACE_KHR
define|#
directive|define
name|EGL_GL_COLORSPACE_KHR
value|0x309D
DECL|macro|EGL_GL_COLORSPACE_SRGB_KHR
define|#
directive|define
name|EGL_GL_COLORSPACE_SRGB_KHR
value|0x3089
DECL|macro|EGL_GL_COLORSPACE_LINEAR_KHR
define|#
directive|define
name|EGL_GL_COLORSPACE_LINEAR_KHR
value|0x308A
endif|#
directive|endif
comment|/* EGL_KHR_gl_colorspace */
ifndef|#
directive|ifndef
name|EGL_KHR_gl_renderbuffer_image
DECL|macro|EGL_KHR_gl_renderbuffer_image
define|#
directive|define
name|EGL_KHR_gl_renderbuffer_image
value|1
DECL|macro|EGL_GL_RENDERBUFFER_KHR
define|#
directive|define
name|EGL_GL_RENDERBUFFER_KHR
value|0x30B9
endif|#
directive|endif
comment|/* EGL_KHR_gl_renderbuffer_image */
ifndef|#
directive|ifndef
name|EGL_KHR_gl_texture_2D_image
DECL|macro|EGL_KHR_gl_texture_2D_image
define|#
directive|define
name|EGL_KHR_gl_texture_2D_image
value|1
DECL|macro|EGL_GL_TEXTURE_2D_KHR
define|#
directive|define
name|EGL_GL_TEXTURE_2D_KHR
value|0x30B1
DECL|macro|EGL_GL_TEXTURE_LEVEL_KHR
define|#
directive|define
name|EGL_GL_TEXTURE_LEVEL_KHR
value|0x30BC
endif|#
directive|endif
comment|/* EGL_KHR_gl_texture_2D_image */
ifndef|#
directive|ifndef
name|EGL_KHR_gl_texture_3D_image
DECL|macro|EGL_KHR_gl_texture_3D_image
define|#
directive|define
name|EGL_KHR_gl_texture_3D_image
value|1
DECL|macro|EGL_GL_TEXTURE_3D_KHR
define|#
directive|define
name|EGL_GL_TEXTURE_3D_KHR
value|0x30B2
DECL|macro|EGL_GL_TEXTURE_ZOFFSET_KHR
define|#
directive|define
name|EGL_GL_TEXTURE_ZOFFSET_KHR
value|0x30BD
endif|#
directive|endif
comment|/* EGL_KHR_gl_texture_3D_image */
ifndef|#
directive|ifndef
name|EGL_KHR_gl_texture_cubemap_image
DECL|macro|EGL_KHR_gl_texture_cubemap_image
define|#
directive|define
name|EGL_KHR_gl_texture_cubemap_image
value|1
DECL|macro|EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_X_KHR
define|#
directive|define
name|EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_X_KHR
value|0x30B3
DECL|macro|EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_X_KHR
define|#
directive|define
name|EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_X_KHR
value|0x30B4
DECL|macro|EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_Y_KHR
define|#
directive|define
name|EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_Y_KHR
value|0x30B5
DECL|macro|EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_KHR
define|#
directive|define
name|EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_KHR
value|0x30B6
DECL|macro|EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_Z_KHR
define|#
directive|define
name|EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_Z_KHR
value|0x30B7
DECL|macro|EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_KHR
define|#
directive|define
name|EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_KHR
value|0x30B8
endif|#
directive|endif
comment|/* EGL_KHR_gl_texture_cubemap_image */
ifndef|#
directive|ifndef
name|EGL_KHR_image
DECL|macro|EGL_KHR_image
define|#
directive|define
name|EGL_KHR_image
value|1
DECL|typedef|EGLImageKHR
typedef|typedef
name|void
modifier|*
name|EGLImageKHR
typedef|;
DECL|macro|EGL_NATIVE_PIXMAP_KHR
define|#
directive|define
name|EGL_NATIVE_PIXMAP_KHR
value|0x30B0
DECL|macro|EGL_NO_IMAGE_KHR
define|#
directive|define
name|EGL_NO_IMAGE_KHR
value|((EGLImageKHR)0)
DECL|typedef|PFNEGLCREATEIMAGEKHRPROC
typedef|typedef
name|EGLImageKHR
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLCREATEIMAGEKHRPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLContext
name|ctx
parameter_list|,
name|EGLenum
name|target
parameter_list|,
name|EGLClientBuffer
name|buffer
parameter_list|,
specifier|const
name|EGLint
modifier|*
name|attrib_list
parameter_list|)
function_decl|;
DECL|typedef|PFNEGLDESTROYIMAGEKHRPROC
typedef|typedef
name|EGLBoolean
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLDESTROYIMAGEKHRPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLImageKHR
name|image
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|EGL_EGLEXT_PROTOTYPES
name|EGLAPI
name|EGLImageKHR
name|EGLAPIENTRY
name|eglCreateImageKHR
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLContext
name|ctx
parameter_list|,
name|EGLenum
name|target
parameter_list|,
name|EGLClientBuffer
name|buffer
parameter_list|,
specifier|const
name|EGLint
modifier|*
name|attrib_list
parameter_list|)
function_decl|;
name|EGLAPI
name|EGLBoolean
name|EGLAPIENTRY
name|eglDestroyImageKHR
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLImageKHR
name|image
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* EGL_KHR_image */
ifndef|#
directive|ifndef
name|EGL_KHR_image_base
DECL|macro|EGL_KHR_image_base
define|#
directive|define
name|EGL_KHR_image_base
value|1
DECL|macro|EGL_IMAGE_PRESERVED_KHR
define|#
directive|define
name|EGL_IMAGE_PRESERVED_KHR
value|0x30D2
endif|#
directive|endif
comment|/* EGL_KHR_image_base */
ifndef|#
directive|ifndef
name|EGL_KHR_image_pixmap
DECL|macro|EGL_KHR_image_pixmap
define|#
directive|define
name|EGL_KHR_image_pixmap
value|1
endif|#
directive|endif
comment|/* EGL_KHR_image_pixmap */
ifndef|#
directive|ifndef
name|EGL_KHR_lock_surface
DECL|macro|EGL_KHR_lock_surface
define|#
directive|define
name|EGL_KHR_lock_surface
value|1
DECL|macro|EGL_READ_SURFACE_BIT_KHR
define|#
directive|define
name|EGL_READ_SURFACE_BIT_KHR
value|0x0001
DECL|macro|EGL_WRITE_SURFACE_BIT_KHR
define|#
directive|define
name|EGL_WRITE_SURFACE_BIT_KHR
value|0x0002
DECL|macro|EGL_LOCK_SURFACE_BIT_KHR
define|#
directive|define
name|EGL_LOCK_SURFACE_BIT_KHR
value|0x0080
DECL|macro|EGL_OPTIMAL_FORMAT_BIT_KHR
define|#
directive|define
name|EGL_OPTIMAL_FORMAT_BIT_KHR
value|0x0100
DECL|macro|EGL_MATCH_FORMAT_KHR
define|#
directive|define
name|EGL_MATCH_FORMAT_KHR
value|0x3043
DECL|macro|EGL_FORMAT_RGB_565_EXACT_KHR
define|#
directive|define
name|EGL_FORMAT_RGB_565_EXACT_KHR
value|0x30C0
DECL|macro|EGL_FORMAT_RGB_565_KHR
define|#
directive|define
name|EGL_FORMAT_RGB_565_KHR
value|0x30C1
DECL|macro|EGL_FORMAT_RGBA_8888_EXACT_KHR
define|#
directive|define
name|EGL_FORMAT_RGBA_8888_EXACT_KHR
value|0x30C2
DECL|macro|EGL_FORMAT_RGBA_8888_KHR
define|#
directive|define
name|EGL_FORMAT_RGBA_8888_KHR
value|0x30C3
DECL|macro|EGL_MAP_PRESERVE_PIXELS_KHR
define|#
directive|define
name|EGL_MAP_PRESERVE_PIXELS_KHR
value|0x30C4
DECL|macro|EGL_LOCK_USAGE_HINT_KHR
define|#
directive|define
name|EGL_LOCK_USAGE_HINT_KHR
value|0x30C5
DECL|macro|EGL_BITMAP_POINTER_KHR
define|#
directive|define
name|EGL_BITMAP_POINTER_KHR
value|0x30C6
DECL|macro|EGL_BITMAP_PITCH_KHR
define|#
directive|define
name|EGL_BITMAP_PITCH_KHR
value|0x30C7
DECL|macro|EGL_BITMAP_ORIGIN_KHR
define|#
directive|define
name|EGL_BITMAP_ORIGIN_KHR
value|0x30C8
DECL|macro|EGL_BITMAP_PIXEL_RED_OFFSET_KHR
define|#
directive|define
name|EGL_BITMAP_PIXEL_RED_OFFSET_KHR
value|0x30C9
DECL|macro|EGL_BITMAP_PIXEL_GREEN_OFFSET_KHR
define|#
directive|define
name|EGL_BITMAP_PIXEL_GREEN_OFFSET_KHR
value|0x30CA
DECL|macro|EGL_BITMAP_PIXEL_BLUE_OFFSET_KHR
define|#
directive|define
name|EGL_BITMAP_PIXEL_BLUE_OFFSET_KHR
value|0x30CB
DECL|macro|EGL_BITMAP_PIXEL_ALPHA_OFFSET_KHR
define|#
directive|define
name|EGL_BITMAP_PIXEL_ALPHA_OFFSET_KHR
value|0x30CC
DECL|macro|EGL_BITMAP_PIXEL_LUMINANCE_OFFSET_KHR
define|#
directive|define
name|EGL_BITMAP_PIXEL_LUMINANCE_OFFSET_KHR
value|0x30CD
DECL|macro|EGL_LOWER_LEFT_KHR
define|#
directive|define
name|EGL_LOWER_LEFT_KHR
value|0x30CE
DECL|macro|EGL_UPPER_LEFT_KHR
define|#
directive|define
name|EGL_UPPER_LEFT_KHR
value|0x30CF
DECL|typedef|PFNEGLLOCKSURFACEKHRPROC
typedef|typedef
name|EGLBoolean
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLLOCKSURFACEKHRPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSurface
name|surface
parameter_list|,
specifier|const
name|EGLint
modifier|*
name|attrib_list
parameter_list|)
function_decl|;
DECL|typedef|PFNEGLUNLOCKSURFACEKHRPROC
typedef|typedef
name|EGLBoolean
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLUNLOCKSURFACEKHRPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSurface
name|surface
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|EGL_EGLEXT_PROTOTYPES
name|EGLAPI
name|EGLBoolean
name|EGLAPIENTRY
name|eglLockSurfaceKHR
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSurface
name|surface
parameter_list|,
specifier|const
name|EGLint
modifier|*
name|attrib_list
parameter_list|)
function_decl|;
name|EGLAPI
name|EGLBoolean
name|EGLAPIENTRY
name|eglUnlockSurfaceKHR
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSurface
name|surface
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* EGL_KHR_lock_surface */
ifndef|#
directive|ifndef
name|EGL_KHR_lock_surface2
DECL|macro|EGL_KHR_lock_surface2
define|#
directive|define
name|EGL_KHR_lock_surface2
value|1
DECL|macro|EGL_BITMAP_PIXEL_SIZE_KHR
define|#
directive|define
name|EGL_BITMAP_PIXEL_SIZE_KHR
value|0x3110
endif|#
directive|endif
comment|/* EGL_KHR_lock_surface2 */
ifndef|#
directive|ifndef
name|EGL_KHR_lock_surface3
DECL|macro|EGL_KHR_lock_surface3
define|#
directive|define
name|EGL_KHR_lock_surface3
value|1
DECL|typedef|PFNEGLQUERYSURFACE64KHRPROC
typedef|typedef
name|EGLBoolean
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLQUERYSURFACE64KHRPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSurface
name|surface
parameter_list|,
name|EGLint
name|attribute
parameter_list|,
name|EGLAttribKHR
modifier|*
name|value
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|EGL_EGLEXT_PROTOTYPES
name|EGLAPI
name|EGLBoolean
name|EGLAPIENTRY
name|eglQuerySurface64KHR
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSurface
name|surface
parameter_list|,
name|EGLint
name|attribute
parameter_list|,
name|EGLAttribKHR
modifier|*
name|value
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* EGL_KHR_lock_surface3 */
ifndef|#
directive|ifndef
name|EGL_KHR_platform_android
DECL|macro|EGL_KHR_platform_android
define|#
directive|define
name|EGL_KHR_platform_android
value|1
DECL|macro|EGL_PLATFORM_ANDROID_KHR
define|#
directive|define
name|EGL_PLATFORM_ANDROID_KHR
value|0x3141
endif|#
directive|endif
comment|/* EGL_KHR_platform_android */
ifndef|#
directive|ifndef
name|EGL_KHR_platform_gbm
DECL|macro|EGL_KHR_platform_gbm
define|#
directive|define
name|EGL_KHR_platform_gbm
value|1
DECL|macro|EGL_PLATFORM_GBM_KHR
define|#
directive|define
name|EGL_PLATFORM_GBM_KHR
value|0x31D7
endif|#
directive|endif
comment|/* EGL_KHR_platform_gbm */
ifndef|#
directive|ifndef
name|EGL_KHR_platform_wayland
DECL|macro|EGL_KHR_platform_wayland
define|#
directive|define
name|EGL_KHR_platform_wayland
value|1
DECL|macro|EGL_PLATFORM_WAYLAND_KHR
define|#
directive|define
name|EGL_PLATFORM_WAYLAND_KHR
value|0x31D8
endif|#
directive|endif
comment|/* EGL_KHR_platform_wayland */
ifndef|#
directive|ifndef
name|EGL_KHR_platform_x11
DECL|macro|EGL_KHR_platform_x11
define|#
directive|define
name|EGL_KHR_platform_x11
value|1
DECL|macro|EGL_PLATFORM_X11_KHR
define|#
directive|define
name|EGL_PLATFORM_X11_KHR
value|0x31D5
DECL|macro|EGL_PLATFORM_X11_SCREEN_KHR
define|#
directive|define
name|EGL_PLATFORM_X11_SCREEN_KHR
value|0x31D6
endif|#
directive|endif
comment|/* EGL_KHR_platform_x11 */
ifndef|#
directive|ifndef
name|EGL_KHR_reusable_sync
DECL|macro|EGL_KHR_reusable_sync
define|#
directive|define
name|EGL_KHR_reusable_sync
value|1
DECL|typedef|EGLTimeKHR
typedef|typedef
name|khronos_utime_nanoseconds_t
name|EGLTimeKHR
typedef|;
ifdef|#
directive|ifdef
name|KHRONOS_SUPPORT_INT64
DECL|macro|EGL_SYNC_STATUS_KHR
define|#
directive|define
name|EGL_SYNC_STATUS_KHR
value|0x30F1
DECL|macro|EGL_SIGNALED_KHR
define|#
directive|define
name|EGL_SIGNALED_KHR
value|0x30F2
DECL|macro|EGL_UNSIGNALED_KHR
define|#
directive|define
name|EGL_UNSIGNALED_KHR
value|0x30F3
DECL|macro|EGL_TIMEOUT_EXPIRED_KHR
define|#
directive|define
name|EGL_TIMEOUT_EXPIRED_KHR
value|0x30F5
DECL|macro|EGL_CONDITION_SATISFIED_KHR
define|#
directive|define
name|EGL_CONDITION_SATISFIED_KHR
value|0x30F6
DECL|macro|EGL_SYNC_TYPE_KHR
define|#
directive|define
name|EGL_SYNC_TYPE_KHR
value|0x30F7
DECL|macro|EGL_SYNC_REUSABLE_KHR
define|#
directive|define
name|EGL_SYNC_REUSABLE_KHR
value|0x30FA
DECL|macro|EGL_SYNC_FLUSH_COMMANDS_BIT_KHR
define|#
directive|define
name|EGL_SYNC_FLUSH_COMMANDS_BIT_KHR
value|0x0001
DECL|macro|EGL_FOREVER_KHR
define|#
directive|define
name|EGL_FOREVER_KHR
value|0xFFFFFFFFFFFFFFFFull
DECL|macro|EGL_NO_SYNC_KHR
define|#
directive|define
name|EGL_NO_SYNC_KHR
value|((EGLSyncKHR)0)
DECL|typedef|PFNEGLCREATESYNCKHRPROC
typedef|typedef
name|EGLSyncKHR
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLCREATESYNCKHRPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLenum
name|type
parameter_list|,
specifier|const
name|EGLint
modifier|*
name|attrib_list
parameter_list|)
function_decl|;
DECL|typedef|PFNEGLDESTROYSYNCKHRPROC
typedef|typedef
name|EGLBoolean
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLDESTROYSYNCKHRPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSyncKHR
name|sync
parameter_list|)
function_decl|;
DECL|typedef|PFNEGLCLIENTWAITSYNCKHRPROC
typedef|typedef
name|EGLint
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLCLIENTWAITSYNCKHRPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSyncKHR
name|sync
parameter_list|,
name|EGLint
name|flags
parameter_list|,
name|EGLTimeKHR
name|timeout
parameter_list|)
function_decl|;
DECL|typedef|PFNEGLSIGNALSYNCKHRPROC
typedef|typedef
name|EGLBoolean
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLSIGNALSYNCKHRPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSyncKHR
name|sync
parameter_list|,
name|EGLenum
name|mode
parameter_list|)
function_decl|;
DECL|typedef|PFNEGLGETSYNCATTRIBKHRPROC
typedef|typedef
name|EGLBoolean
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLGETSYNCATTRIBKHRPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSyncKHR
name|sync
parameter_list|,
name|EGLint
name|attribute
parameter_list|,
name|EGLint
modifier|*
name|value
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|EGL_EGLEXT_PROTOTYPES
name|EGLAPI
name|EGLSyncKHR
name|EGLAPIENTRY
name|eglCreateSyncKHR
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLenum
name|type
parameter_list|,
specifier|const
name|EGLint
modifier|*
name|attrib_list
parameter_list|)
function_decl|;
name|EGLAPI
name|EGLBoolean
name|EGLAPIENTRY
name|eglDestroySyncKHR
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSyncKHR
name|sync
parameter_list|)
function_decl|;
name|EGLAPI
name|EGLint
name|EGLAPIENTRY
name|eglClientWaitSyncKHR
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSyncKHR
name|sync
parameter_list|,
name|EGLint
name|flags
parameter_list|,
name|EGLTimeKHR
name|timeout
parameter_list|)
function_decl|;
name|EGLAPI
name|EGLBoolean
name|EGLAPIENTRY
name|eglSignalSyncKHR
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSyncKHR
name|sync
parameter_list|,
name|EGLenum
name|mode
parameter_list|)
function_decl|;
name|EGLAPI
name|EGLBoolean
name|EGLAPIENTRY
name|eglGetSyncAttribKHR
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSyncKHR
name|sync
parameter_list|,
name|EGLint
name|attribute
parameter_list|,
name|EGLint
modifier|*
name|value
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* KHRONOS_SUPPORT_INT64 */
endif|#
directive|endif
comment|/* EGL_KHR_reusable_sync */
ifndef|#
directive|ifndef
name|EGL_KHR_stream
DECL|macro|EGL_KHR_stream
define|#
directive|define
name|EGL_KHR_stream
value|1
DECL|typedef|EGLStreamKHR
typedef|typedef
name|void
modifier|*
name|EGLStreamKHR
typedef|;
DECL|typedef|EGLuint64KHR
typedef|typedef
name|khronos_uint64_t
name|EGLuint64KHR
typedef|;
ifdef|#
directive|ifdef
name|KHRONOS_SUPPORT_INT64
DECL|macro|EGL_NO_STREAM_KHR
define|#
directive|define
name|EGL_NO_STREAM_KHR
value|((EGLStreamKHR)0)
DECL|macro|EGL_CONSUMER_LATENCY_USEC_KHR
define|#
directive|define
name|EGL_CONSUMER_LATENCY_USEC_KHR
value|0x3210
DECL|macro|EGL_PRODUCER_FRAME_KHR
define|#
directive|define
name|EGL_PRODUCER_FRAME_KHR
value|0x3212
DECL|macro|EGL_CONSUMER_FRAME_KHR
define|#
directive|define
name|EGL_CONSUMER_FRAME_KHR
value|0x3213
DECL|macro|EGL_STREAM_STATE_KHR
define|#
directive|define
name|EGL_STREAM_STATE_KHR
value|0x3214
DECL|macro|EGL_STREAM_STATE_CREATED_KHR
define|#
directive|define
name|EGL_STREAM_STATE_CREATED_KHR
value|0x3215
DECL|macro|EGL_STREAM_STATE_CONNECTING_KHR
define|#
directive|define
name|EGL_STREAM_STATE_CONNECTING_KHR
value|0x3216
DECL|macro|EGL_STREAM_STATE_EMPTY_KHR
define|#
directive|define
name|EGL_STREAM_STATE_EMPTY_KHR
value|0x3217
DECL|macro|EGL_STREAM_STATE_NEW_FRAME_AVAILABLE_KHR
define|#
directive|define
name|EGL_STREAM_STATE_NEW_FRAME_AVAILABLE_KHR
value|0x3218
DECL|macro|EGL_STREAM_STATE_OLD_FRAME_AVAILABLE_KHR
define|#
directive|define
name|EGL_STREAM_STATE_OLD_FRAME_AVAILABLE_KHR
value|0x3219
DECL|macro|EGL_STREAM_STATE_DISCONNECTED_KHR
define|#
directive|define
name|EGL_STREAM_STATE_DISCONNECTED_KHR
value|0x321A
DECL|macro|EGL_BAD_STREAM_KHR
define|#
directive|define
name|EGL_BAD_STREAM_KHR
value|0x321B
DECL|macro|EGL_BAD_STATE_KHR
define|#
directive|define
name|EGL_BAD_STATE_KHR
value|0x321C
DECL|typedef|PFNEGLCREATESTREAMKHRPROC
typedef|typedef
name|EGLStreamKHR
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLCREATESTREAMKHRPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
specifier|const
name|EGLint
modifier|*
name|attrib_list
parameter_list|)
function_decl|;
DECL|typedef|PFNEGLDESTROYSTREAMKHRPROC
typedef|typedef
name|EGLBoolean
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLDESTROYSTREAMKHRPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLStreamKHR
name|stream
parameter_list|)
function_decl|;
DECL|typedef|PFNEGLSTREAMATTRIBKHRPROC
typedef|typedef
name|EGLBoolean
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLSTREAMATTRIBKHRPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLStreamKHR
name|stream
parameter_list|,
name|EGLenum
name|attribute
parameter_list|,
name|EGLint
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNEGLQUERYSTREAMKHRPROC
typedef|typedef
name|EGLBoolean
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLQUERYSTREAMKHRPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLStreamKHR
name|stream
parameter_list|,
name|EGLenum
name|attribute
parameter_list|,
name|EGLint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNEGLQUERYSTREAMU64KHRPROC
typedef|typedef
name|EGLBoolean
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLQUERYSTREAMU64KHRPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLStreamKHR
name|stream
parameter_list|,
name|EGLenum
name|attribute
parameter_list|,
name|EGLuint64KHR
modifier|*
name|value
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|EGL_EGLEXT_PROTOTYPES
name|EGLAPI
name|EGLStreamKHR
name|EGLAPIENTRY
name|eglCreateStreamKHR
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
specifier|const
name|EGLint
modifier|*
name|attrib_list
parameter_list|)
function_decl|;
name|EGLAPI
name|EGLBoolean
name|EGLAPIENTRY
name|eglDestroyStreamKHR
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLStreamKHR
name|stream
parameter_list|)
function_decl|;
name|EGLAPI
name|EGLBoolean
name|EGLAPIENTRY
name|eglStreamAttribKHR
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLStreamKHR
name|stream
parameter_list|,
name|EGLenum
name|attribute
parameter_list|,
name|EGLint
name|value
parameter_list|)
function_decl|;
name|EGLAPI
name|EGLBoolean
name|EGLAPIENTRY
name|eglQueryStreamKHR
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLStreamKHR
name|stream
parameter_list|,
name|EGLenum
name|attribute
parameter_list|,
name|EGLint
modifier|*
name|value
parameter_list|)
function_decl|;
name|EGLAPI
name|EGLBoolean
name|EGLAPIENTRY
name|eglQueryStreamu64KHR
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLStreamKHR
name|stream
parameter_list|,
name|EGLenum
name|attribute
parameter_list|,
name|EGLuint64KHR
modifier|*
name|value
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* KHRONOS_SUPPORT_INT64 */
endif|#
directive|endif
comment|/* EGL_KHR_stream */
ifndef|#
directive|ifndef
name|EGL_KHR_stream_consumer_gltexture
DECL|macro|EGL_KHR_stream_consumer_gltexture
define|#
directive|define
name|EGL_KHR_stream_consumer_gltexture
value|1
ifdef|#
directive|ifdef
name|EGL_KHR_stream
DECL|macro|EGL_CONSUMER_ACQUIRE_TIMEOUT_USEC_KHR
define|#
directive|define
name|EGL_CONSUMER_ACQUIRE_TIMEOUT_USEC_KHR
value|0x321E
DECL|typedef|PFNEGLSTREAMCONSUMERGLTEXTUREEXTERNALKHRPROC
typedef|typedef
name|EGLBoolean
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLSTREAMCONSUMERGLTEXTUREEXTERNALKHRPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLStreamKHR
name|stream
parameter_list|)
function_decl|;
DECL|typedef|PFNEGLSTREAMCONSUMERACQUIREKHRPROC
typedef|typedef
name|EGLBoolean
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLSTREAMCONSUMERACQUIREKHRPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLStreamKHR
name|stream
parameter_list|)
function_decl|;
DECL|typedef|PFNEGLSTREAMCONSUMERRELEASEKHRPROC
typedef|typedef
name|EGLBoolean
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLSTREAMCONSUMERRELEASEKHRPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLStreamKHR
name|stream
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|EGL_EGLEXT_PROTOTYPES
name|EGLAPI
name|EGLBoolean
name|EGLAPIENTRY
name|eglStreamConsumerGLTextureExternalKHR
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLStreamKHR
name|stream
parameter_list|)
function_decl|;
name|EGLAPI
name|EGLBoolean
name|EGLAPIENTRY
name|eglStreamConsumerAcquireKHR
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLStreamKHR
name|stream
parameter_list|)
function_decl|;
name|EGLAPI
name|EGLBoolean
name|EGLAPIENTRY
name|eglStreamConsumerReleaseKHR
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLStreamKHR
name|stream
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* EGL_KHR_stream */
endif|#
directive|endif
comment|/* EGL_KHR_stream_consumer_gltexture */
ifndef|#
directive|ifndef
name|EGL_KHR_stream_cross_process_fd
DECL|macro|EGL_KHR_stream_cross_process_fd
define|#
directive|define
name|EGL_KHR_stream_cross_process_fd
value|1
DECL|typedef|EGLNativeFileDescriptorKHR
typedef|typedef
name|int
name|EGLNativeFileDescriptorKHR
typedef|;
ifdef|#
directive|ifdef
name|EGL_KHR_stream
DECL|macro|EGL_NO_FILE_DESCRIPTOR_KHR
define|#
directive|define
name|EGL_NO_FILE_DESCRIPTOR_KHR
value|((EGLNativeFileDescriptorKHR)(-1))
DECL|typedef|PFNEGLGETSTREAMFILEDESCRIPTORKHRPROC
typedef|typedef
name|EGLNativeFileDescriptorKHR
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLGETSTREAMFILEDESCRIPTORKHRPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLStreamKHR
name|stream
parameter_list|)
function_decl|;
DECL|typedef|PFNEGLCREATESTREAMFROMFILEDESCRIPTORKHRPROC
typedef|typedef
name|EGLStreamKHR
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLCREATESTREAMFROMFILEDESCRIPTORKHRPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLNativeFileDescriptorKHR
name|file_descriptor
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|EGL_EGLEXT_PROTOTYPES
name|EGLAPI
name|EGLNativeFileDescriptorKHR
name|EGLAPIENTRY
name|eglGetStreamFileDescriptorKHR
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLStreamKHR
name|stream
parameter_list|)
function_decl|;
name|EGLAPI
name|EGLStreamKHR
name|EGLAPIENTRY
name|eglCreateStreamFromFileDescriptorKHR
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLNativeFileDescriptorKHR
name|file_descriptor
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* EGL_KHR_stream */
endif|#
directive|endif
comment|/* EGL_KHR_stream_cross_process_fd */
ifndef|#
directive|ifndef
name|EGL_KHR_stream_fifo
DECL|macro|EGL_KHR_stream_fifo
define|#
directive|define
name|EGL_KHR_stream_fifo
value|1
ifdef|#
directive|ifdef
name|EGL_KHR_stream
DECL|macro|EGL_STREAM_FIFO_LENGTH_KHR
define|#
directive|define
name|EGL_STREAM_FIFO_LENGTH_KHR
value|0x31FC
DECL|macro|EGL_STREAM_TIME_NOW_KHR
define|#
directive|define
name|EGL_STREAM_TIME_NOW_KHR
value|0x31FD
DECL|macro|EGL_STREAM_TIME_CONSUMER_KHR
define|#
directive|define
name|EGL_STREAM_TIME_CONSUMER_KHR
value|0x31FE
DECL|macro|EGL_STREAM_TIME_PRODUCER_KHR
define|#
directive|define
name|EGL_STREAM_TIME_PRODUCER_KHR
value|0x31FF
DECL|typedef|PFNEGLQUERYSTREAMTIMEKHRPROC
typedef|typedef
name|EGLBoolean
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLQUERYSTREAMTIMEKHRPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLStreamKHR
name|stream
parameter_list|,
name|EGLenum
name|attribute
parameter_list|,
name|EGLTimeKHR
modifier|*
name|value
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|EGL_EGLEXT_PROTOTYPES
name|EGLAPI
name|EGLBoolean
name|EGLAPIENTRY
name|eglQueryStreamTimeKHR
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLStreamKHR
name|stream
parameter_list|,
name|EGLenum
name|attribute
parameter_list|,
name|EGLTimeKHR
modifier|*
name|value
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* EGL_KHR_stream */
endif|#
directive|endif
comment|/* EGL_KHR_stream_fifo */
ifndef|#
directive|ifndef
name|EGL_KHR_stream_producer_aldatalocator
DECL|macro|EGL_KHR_stream_producer_aldatalocator
define|#
directive|define
name|EGL_KHR_stream_producer_aldatalocator
value|1
ifdef|#
directive|ifdef
name|EGL_KHR_stream
endif|#
directive|endif
comment|/* EGL_KHR_stream */
endif|#
directive|endif
comment|/* EGL_KHR_stream_producer_aldatalocator */
ifndef|#
directive|ifndef
name|EGL_KHR_stream_producer_eglsurface
DECL|macro|EGL_KHR_stream_producer_eglsurface
define|#
directive|define
name|EGL_KHR_stream_producer_eglsurface
value|1
ifdef|#
directive|ifdef
name|EGL_KHR_stream
DECL|macro|EGL_STREAM_BIT_KHR
define|#
directive|define
name|EGL_STREAM_BIT_KHR
value|0x0800
DECL|typedef|PFNEGLCREATESTREAMPRODUCERSURFACEKHRPROC
typedef|typedef
name|EGLSurface
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLCREATESTREAMPRODUCERSURFACEKHRPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLConfig
name|config
parameter_list|,
name|EGLStreamKHR
name|stream
parameter_list|,
specifier|const
name|EGLint
modifier|*
name|attrib_list
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|EGL_EGLEXT_PROTOTYPES
name|EGLAPI
name|EGLSurface
name|EGLAPIENTRY
name|eglCreateStreamProducerSurfaceKHR
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLConfig
name|config
parameter_list|,
name|EGLStreamKHR
name|stream
parameter_list|,
specifier|const
name|EGLint
modifier|*
name|attrib_list
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* EGL_KHR_stream */
endif|#
directive|endif
comment|/* EGL_KHR_stream_producer_eglsurface */
ifndef|#
directive|ifndef
name|EGL_KHR_surfaceless_context
DECL|macro|EGL_KHR_surfaceless_context
define|#
directive|define
name|EGL_KHR_surfaceless_context
value|1
endif|#
directive|endif
comment|/* EGL_KHR_surfaceless_context */
ifndef|#
directive|ifndef
name|EGL_KHR_vg_parent_image
DECL|macro|EGL_KHR_vg_parent_image
define|#
directive|define
name|EGL_KHR_vg_parent_image
value|1
DECL|macro|EGL_VG_PARENT_IMAGE_KHR
define|#
directive|define
name|EGL_VG_PARENT_IMAGE_KHR
value|0x30BA
endif|#
directive|endif
comment|/* EGL_KHR_vg_parent_image */
ifndef|#
directive|ifndef
name|EGL_KHR_wait_sync
DECL|macro|EGL_KHR_wait_sync
define|#
directive|define
name|EGL_KHR_wait_sync
value|1
DECL|typedef|PFNEGLWAITSYNCKHRPROC
typedef|typedef
name|EGLint
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLWAITSYNCKHRPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSyncKHR
name|sync
parameter_list|,
name|EGLint
name|flags
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|EGL_EGLEXT_PROTOTYPES
name|EGLAPI
name|EGLint
name|EGLAPIENTRY
name|eglWaitSyncKHR
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSyncKHR
name|sync
parameter_list|,
name|EGLint
name|flags
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* EGL_KHR_wait_sync */
ifndef|#
directive|ifndef
name|EGL_ANDROID_blob_cache
DECL|macro|EGL_ANDROID_blob_cache
define|#
directive|define
name|EGL_ANDROID_blob_cache
value|1
DECL|typedef|EGLsizeiANDROID
typedef|typedef
name|khronos_ssize_t
name|EGLsizeiANDROID
typedef|;
DECL|typedef|EGLSetBlobFuncANDROID
typedef|typedef
name|void
function_decl|(
modifier|*
name|EGLSetBlobFuncANDROID
function_decl|)
parameter_list|(
specifier|const
name|void
modifier|*
name|key
parameter_list|,
name|EGLsizeiANDROID
name|keySize
parameter_list|,
specifier|const
name|void
modifier|*
name|value
parameter_list|,
name|EGLsizeiANDROID
name|valueSize
parameter_list|)
function_decl|;
DECL|typedef|EGLGetBlobFuncANDROID
typedef|typedef
name|EGLsizeiANDROID
function_decl|(
modifier|*
name|EGLGetBlobFuncANDROID
function_decl|)
parameter_list|(
specifier|const
name|void
modifier|*
name|key
parameter_list|,
name|EGLsizeiANDROID
name|keySize
parameter_list|,
name|void
modifier|*
name|value
parameter_list|,
name|EGLsizeiANDROID
name|valueSize
parameter_list|)
function_decl|;
DECL|typedef|PFNEGLSETBLOBCACHEFUNCSANDROIDPROC
typedef|typedef
name|void
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLSETBLOBCACHEFUNCSANDROIDPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSetBlobFuncANDROID
name|set
parameter_list|,
name|EGLGetBlobFuncANDROID
name|get
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|EGL_EGLEXT_PROTOTYPES
name|EGLAPI
name|void
name|EGLAPIENTRY
name|eglSetBlobCacheFuncsANDROID
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSetBlobFuncANDROID
name|set
parameter_list|,
name|EGLGetBlobFuncANDROID
name|get
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* EGL_ANDROID_blob_cache */
ifndef|#
directive|ifndef
name|EGL_ANDROID_framebuffer_target
DECL|macro|EGL_ANDROID_framebuffer_target
define|#
directive|define
name|EGL_ANDROID_framebuffer_target
value|1
DECL|macro|EGL_FRAMEBUFFER_TARGET_ANDROID
define|#
directive|define
name|EGL_FRAMEBUFFER_TARGET_ANDROID
value|0x3147
endif|#
directive|endif
comment|/* EGL_ANDROID_framebuffer_target */
ifndef|#
directive|ifndef
name|EGL_ANDROID_image_native_buffer
DECL|macro|EGL_ANDROID_image_native_buffer
define|#
directive|define
name|EGL_ANDROID_image_native_buffer
value|1
DECL|macro|EGL_NATIVE_BUFFER_ANDROID
define|#
directive|define
name|EGL_NATIVE_BUFFER_ANDROID
value|0x3140
endif|#
directive|endif
comment|/* EGL_ANDROID_image_native_buffer */
ifndef|#
directive|ifndef
name|EGL_ANDROID_native_fence_sync
DECL|macro|EGL_ANDROID_native_fence_sync
define|#
directive|define
name|EGL_ANDROID_native_fence_sync
value|1
DECL|macro|EGL_SYNC_NATIVE_FENCE_ANDROID
define|#
directive|define
name|EGL_SYNC_NATIVE_FENCE_ANDROID
value|0x3144
DECL|macro|EGL_SYNC_NATIVE_FENCE_FD_ANDROID
define|#
directive|define
name|EGL_SYNC_NATIVE_FENCE_FD_ANDROID
value|0x3145
DECL|macro|EGL_SYNC_NATIVE_FENCE_SIGNALED_ANDROID
define|#
directive|define
name|EGL_SYNC_NATIVE_FENCE_SIGNALED_ANDROID
value|0x3146
DECL|macro|EGL_NO_NATIVE_FENCE_FD_ANDROID
define|#
directive|define
name|EGL_NO_NATIVE_FENCE_FD_ANDROID
value|-1
DECL|typedef|PFNEGLDUPNATIVEFENCEFDANDROIDPROC
typedef|typedef
name|EGLint
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLDUPNATIVEFENCEFDANDROIDPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSyncKHR
name|sync
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|EGL_EGLEXT_PROTOTYPES
name|EGLAPI
name|EGLint
name|EGLAPIENTRY
name|eglDupNativeFenceFDANDROID
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSyncKHR
name|sync
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* EGL_ANDROID_native_fence_sync */
ifndef|#
directive|ifndef
name|EGL_ANDROID_recordable
DECL|macro|EGL_ANDROID_recordable
define|#
directive|define
name|EGL_ANDROID_recordable
value|1
DECL|macro|EGL_RECORDABLE_ANDROID
define|#
directive|define
name|EGL_RECORDABLE_ANDROID
value|0x3142
endif|#
directive|endif
comment|/* EGL_ANDROID_recordable */
ifndef|#
directive|ifndef
name|EGL_ANGLE_d3d_share_handle_client_buffer
DECL|macro|EGL_ANGLE_d3d_share_handle_client_buffer
define|#
directive|define
name|EGL_ANGLE_d3d_share_handle_client_buffer
value|1
DECL|macro|EGL_D3D_TEXTURE_2D_SHARE_HANDLE_ANGLE
define|#
directive|define
name|EGL_D3D_TEXTURE_2D_SHARE_HANDLE_ANGLE
value|0x3200
endif|#
directive|endif
comment|/* EGL_ANGLE_d3d_share_handle_client_buffer */
ifndef|#
directive|ifndef
name|EGL_ANGLE_window_fixed_size
DECL|macro|EGL_ANGLE_window_fixed_size
define|#
directive|define
name|EGL_ANGLE_window_fixed_size
value|1
DECL|macro|EGL_FIXED_SIZE_ANGLE
define|#
directive|define
name|EGL_FIXED_SIZE_ANGLE
value|0x3201
endif|#
directive|endif
comment|/* EGL_ANGLE_window_fixed_size */
ifndef|#
directive|ifndef
name|EGL_ANGLE_query_surface_pointer
DECL|macro|EGL_ANGLE_query_surface_pointer
define|#
directive|define
name|EGL_ANGLE_query_surface_pointer
value|1
DECL|typedef|PFNEGLQUERYSURFACEPOINTERANGLEPROC
typedef|typedef
name|EGLBoolean
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLQUERYSURFACEPOINTERANGLEPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSurface
name|surface
parameter_list|,
name|EGLint
name|attribute
parameter_list|,
name|void
modifier|*
modifier|*
name|value
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|EGL_EGLEXT_PROTOTYPES
name|EGLAPI
name|EGLBoolean
name|EGLAPIENTRY
name|eglQuerySurfacePointerANGLE
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSurface
name|surface
parameter_list|,
name|EGLint
name|attribute
parameter_list|,
name|void
modifier|*
modifier|*
name|value
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* EGL_ANGLE_query_surface_pointer */
ifndef|#
directive|ifndef
name|EGL_ANGLE_software_display
DECL|macro|EGL_ANGLE_software_display
define|#
directive|define
name|EGL_ANGLE_software_display
value|1
DECL|macro|EGL_SOFTWARE_DISPLAY_ANGLE
define|#
directive|define
name|EGL_SOFTWARE_DISPLAY_ANGLE
value|((EGLNativeDisplayType)-1)
endif|#
directive|endif
comment|/* EGL_ANGLE_software_display */
ifndef|#
directive|ifndef
name|EGL_ANGLE_direct3d_display
DECL|macro|EGL_ANGLE_direct3d_display
define|#
directive|define
name|EGL_ANGLE_direct3d_display
value|1
DECL|macro|EGL_D3D11_ELSE_D3D9_DISPLAY_ANGLE
define|#
directive|define
name|EGL_D3D11_ELSE_D3D9_DISPLAY_ANGLE
value|((EGLNativeDisplayType)-2)
DECL|macro|EGL_D3D11_ONLY_DISPLAY_ANGLE
define|#
directive|define
name|EGL_D3D11_ONLY_DISPLAY_ANGLE
value|((EGLNativeDisplayType)-3)
endif|#
directive|endif
comment|/* EGL_ANGLE_direct3d_display */
ifndef|#
directive|ifndef
name|EGL_ANGLE_surface_d3d_texture_2d_share_handle
DECL|macro|EGL_ANGLE_surface_d3d_texture_2d_share_handle
define|#
directive|define
name|EGL_ANGLE_surface_d3d_texture_2d_share_handle
value|1
endif|#
directive|endif
comment|/* EGL_ANGLE_surface_d3d_texture_2d_share_handle */
ifndef|#
directive|ifndef
name|EGL_ANGLE_platform_angle
DECL|macro|EGL_ANGLE_platform_angle
define|#
directive|define
name|EGL_ANGLE_platform_angle
value|1
DECL|macro|EGL_PLATFORM_ANGLE_ANGLE
define|#
directive|define
name|EGL_PLATFORM_ANGLE_ANGLE
value|0x3201
DECL|macro|EGL_PLATFORM_ANGLE_TYPE_ANGLE
define|#
directive|define
name|EGL_PLATFORM_ANGLE_TYPE_ANGLE
value|0x3202
DECL|macro|EGL_PLATFORM_ANGLE_TYPE_DEFAULT_ANGLE
define|#
directive|define
name|EGL_PLATFORM_ANGLE_TYPE_DEFAULT_ANGLE
value|0x3203
endif|#
directive|endif
comment|/* EGL_ANGLE_platform_angle */
ifndef|#
directive|ifndef
name|EGL_ANGLE_platform_angle_d3d
DECL|macro|EGL_ANGLE_platform_angle_d3d
define|#
directive|define
name|EGL_ANGLE_platform_angle_d3d
value|1
DECL|macro|EGL_PLATFORM_ANGLE_TYPE_D3D9_ANGLE
define|#
directive|define
name|EGL_PLATFORM_ANGLE_TYPE_D3D9_ANGLE
value|0x3204
DECL|macro|EGL_PLATFORM_ANGLE_TYPE_D3D11_ANGLE
define|#
directive|define
name|EGL_PLATFORM_ANGLE_TYPE_D3D11_ANGLE
value|0x3205
DECL|macro|EGL_PLATFORM_ANGLE_TYPE_D3D11_WARP_ANGLE
define|#
directive|define
name|EGL_PLATFORM_ANGLE_TYPE_D3D11_WARP_ANGLE
value|0x3206
endif|#
directive|endif
comment|/* EGL_ANGLE_platform_angle_d3d */
ifndef|#
directive|ifndef
name|EGL_ANGLE_platform_angle_opengl
DECL|macro|EGL_ANGLE_platform_angle_opengl
define|#
directive|define
name|EGL_ANGLE_platform_angle_opengl
value|1
DECL|macro|EGL_PLATFORM_ANGLE_TYPE_OPENGL_ANGLE
define|#
directive|define
name|EGL_PLATFORM_ANGLE_TYPE_OPENGL_ANGLE
value|0x3207
DECL|macro|EGL_PLATFORM_ANGLE_TYPE_OPENGLES_ANGLE
define|#
directive|define
name|EGL_PLATFORM_ANGLE_TYPE_OPENGLES_ANGLE
value|0x3208
endif|#
directive|endif
comment|/* EGL_ANGLE_platform_angle_opengl */
ifndef|#
directive|ifndef
name|EGL_ARM_pixmap_multisample_discard
DECL|macro|EGL_ARM_pixmap_multisample_discard
define|#
directive|define
name|EGL_ARM_pixmap_multisample_discard
value|1
DECL|macro|EGL_DISCARD_SAMPLES_ARM
define|#
directive|define
name|EGL_DISCARD_SAMPLES_ARM
value|0x3286
endif|#
directive|endif
comment|/* EGL_ARM_pixmap_multisample_discard */
ifndef|#
directive|ifndef
name|EGL_EXT_buffer_age
DECL|macro|EGL_EXT_buffer_age
define|#
directive|define
name|EGL_EXT_buffer_age
value|1
DECL|macro|EGL_BUFFER_AGE_EXT
define|#
directive|define
name|EGL_BUFFER_AGE_EXT
value|0x313D
endif|#
directive|endif
comment|/* EGL_EXT_buffer_age */
ifndef|#
directive|ifndef
name|EGL_EXT_client_extensions
DECL|macro|EGL_EXT_client_extensions
define|#
directive|define
name|EGL_EXT_client_extensions
value|1
endif|#
directive|endif
comment|/* EGL_EXT_client_extensions */
ifndef|#
directive|ifndef
name|EGL_EXT_create_context_robustness
DECL|macro|EGL_EXT_create_context_robustness
define|#
directive|define
name|EGL_EXT_create_context_robustness
value|1
DECL|macro|EGL_CONTEXT_OPENGL_ROBUST_ACCESS_EXT
define|#
directive|define
name|EGL_CONTEXT_OPENGL_ROBUST_ACCESS_EXT
value|0x30BF
DECL|macro|EGL_CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY_EXT
define|#
directive|define
name|EGL_CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY_EXT
value|0x3138
DECL|macro|EGL_NO_RESET_NOTIFICATION_EXT
define|#
directive|define
name|EGL_NO_RESET_NOTIFICATION_EXT
value|0x31BE
DECL|macro|EGL_LOSE_CONTEXT_ON_RESET_EXT
define|#
directive|define
name|EGL_LOSE_CONTEXT_ON_RESET_EXT
value|0x31BF
endif|#
directive|endif
comment|/* EGL_EXT_create_context_robustness */
ifndef|#
directive|ifndef
name|EGL_EXT_device_base
DECL|macro|EGL_EXT_device_base
define|#
directive|define
name|EGL_EXT_device_base
value|1
DECL|typedef|EGLDeviceEXT
typedef|typedef
name|void
modifier|*
name|EGLDeviceEXT
typedef|;
DECL|macro|EGL_NO_DEVICE_EXT
define|#
directive|define
name|EGL_NO_DEVICE_EXT
value|((EGLDeviceEXT)(0))
DECL|macro|EGL_BAD_DEVICE_EXT
define|#
directive|define
name|EGL_BAD_DEVICE_EXT
value|0x322B
DECL|macro|EGL_DEVICE_EXT
define|#
directive|define
name|EGL_DEVICE_EXT
value|0x322C
DECL|typedef|PFNEGLQUERYDEVICEATTRIBEXTPROC
typedef|typedef
name|EGLBoolean
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLQUERYDEVICEATTRIBEXTPROC
function_decl|)
parameter_list|(
name|EGLDeviceEXT
name|device
parameter_list|,
name|EGLint
name|attribute
parameter_list|,
name|EGLAttrib
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNEGLQUERYDEVICESTRINGEXTPROC
typedef|typedef
specifier|const
name|char
modifier|*
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLQUERYDEVICESTRINGEXTPROC
function_decl|)
parameter_list|(
name|EGLDeviceEXT
name|device
parameter_list|,
name|EGLint
name|name
parameter_list|)
function_decl|;
DECL|typedef|PFNEGLQUERYDEVICESEXTPROC
typedef|typedef
name|EGLBoolean
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLQUERYDEVICESEXTPROC
function_decl|)
parameter_list|(
name|EGLint
name|max_devices
parameter_list|,
name|EGLDeviceEXT
modifier|*
name|devices
parameter_list|,
name|EGLint
modifier|*
name|num_devices
parameter_list|)
function_decl|;
DECL|typedef|PFNEGLQUERYDISPLAYATTRIBEXTPROC
typedef|typedef
name|EGLBoolean
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLQUERYDISPLAYATTRIBEXTPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLint
name|attribute
parameter_list|,
name|EGLAttrib
modifier|*
name|value
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|EGL_EGLEXT_PROTOTYPES
name|EGLAPI
name|EGLBoolean
name|EGLAPIENTRY
name|eglQueryDeviceAttribEXT
parameter_list|(
name|EGLDeviceEXT
name|device
parameter_list|,
name|EGLint
name|attribute
parameter_list|,
name|EGLAttrib
modifier|*
name|value
parameter_list|)
function_decl|;
name|EGLAPI
specifier|const
name|char
modifier|*
name|EGLAPIENTRY
name|eglQueryDeviceStringEXT
parameter_list|(
name|EGLDeviceEXT
name|device
parameter_list|,
name|EGLint
name|name
parameter_list|)
function_decl|;
name|EGLAPI
name|EGLBoolean
name|EGLAPIENTRY
name|eglQueryDevicesEXT
parameter_list|(
name|EGLint
name|max_devices
parameter_list|,
name|EGLDeviceEXT
modifier|*
name|devices
parameter_list|,
name|EGLint
modifier|*
name|num_devices
parameter_list|)
function_decl|;
name|EGLAPI
name|EGLBoolean
name|EGLAPIENTRY
name|eglQueryDisplayAttribEXT
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLint
name|attribute
parameter_list|,
name|EGLAttrib
modifier|*
name|value
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* EGL_EXT_device_base */
ifndef|#
directive|ifndef
name|EGL_EXT_image_dma_buf_import
DECL|macro|EGL_EXT_image_dma_buf_import
define|#
directive|define
name|EGL_EXT_image_dma_buf_import
value|1
DECL|macro|EGL_LINUX_DMA_BUF_EXT
define|#
directive|define
name|EGL_LINUX_DMA_BUF_EXT
value|0x3270
DECL|macro|EGL_LINUX_DRM_FOURCC_EXT
define|#
directive|define
name|EGL_LINUX_DRM_FOURCC_EXT
value|0x3271
DECL|macro|EGL_DMA_BUF_PLANE0_FD_EXT
define|#
directive|define
name|EGL_DMA_BUF_PLANE0_FD_EXT
value|0x3272
DECL|macro|EGL_DMA_BUF_PLANE0_OFFSET_EXT
define|#
directive|define
name|EGL_DMA_BUF_PLANE0_OFFSET_EXT
value|0x3273
DECL|macro|EGL_DMA_BUF_PLANE0_PITCH_EXT
define|#
directive|define
name|EGL_DMA_BUF_PLANE0_PITCH_EXT
value|0x3274
DECL|macro|EGL_DMA_BUF_PLANE1_FD_EXT
define|#
directive|define
name|EGL_DMA_BUF_PLANE1_FD_EXT
value|0x3275
DECL|macro|EGL_DMA_BUF_PLANE1_OFFSET_EXT
define|#
directive|define
name|EGL_DMA_BUF_PLANE1_OFFSET_EXT
value|0x3276
DECL|macro|EGL_DMA_BUF_PLANE1_PITCH_EXT
define|#
directive|define
name|EGL_DMA_BUF_PLANE1_PITCH_EXT
value|0x3277
DECL|macro|EGL_DMA_BUF_PLANE2_FD_EXT
define|#
directive|define
name|EGL_DMA_BUF_PLANE2_FD_EXT
value|0x3278
DECL|macro|EGL_DMA_BUF_PLANE2_OFFSET_EXT
define|#
directive|define
name|EGL_DMA_BUF_PLANE2_OFFSET_EXT
value|0x3279
DECL|macro|EGL_DMA_BUF_PLANE2_PITCH_EXT
define|#
directive|define
name|EGL_DMA_BUF_PLANE2_PITCH_EXT
value|0x327A
DECL|macro|EGL_YUV_COLOR_SPACE_HINT_EXT
define|#
directive|define
name|EGL_YUV_COLOR_SPACE_HINT_EXT
value|0x327B
DECL|macro|EGL_SAMPLE_RANGE_HINT_EXT
define|#
directive|define
name|EGL_SAMPLE_RANGE_HINT_EXT
value|0x327C
DECL|macro|EGL_YUV_CHROMA_HORIZONTAL_SITING_HINT_EXT
define|#
directive|define
name|EGL_YUV_CHROMA_HORIZONTAL_SITING_HINT_EXT
value|0x327D
DECL|macro|EGL_YUV_CHROMA_VERTICAL_SITING_HINT_EXT
define|#
directive|define
name|EGL_YUV_CHROMA_VERTICAL_SITING_HINT_EXT
value|0x327E
DECL|macro|EGL_ITU_REC601_EXT
define|#
directive|define
name|EGL_ITU_REC601_EXT
value|0x327F
DECL|macro|EGL_ITU_REC709_EXT
define|#
directive|define
name|EGL_ITU_REC709_EXT
value|0x3280
DECL|macro|EGL_ITU_REC2020_EXT
define|#
directive|define
name|EGL_ITU_REC2020_EXT
value|0x3281
DECL|macro|EGL_YUV_FULL_RANGE_EXT
define|#
directive|define
name|EGL_YUV_FULL_RANGE_EXT
value|0x3282
DECL|macro|EGL_YUV_NARROW_RANGE_EXT
define|#
directive|define
name|EGL_YUV_NARROW_RANGE_EXT
value|0x3283
DECL|macro|EGL_YUV_CHROMA_SITING_0_EXT
define|#
directive|define
name|EGL_YUV_CHROMA_SITING_0_EXT
value|0x3284
DECL|macro|EGL_YUV_CHROMA_SITING_0_5_EXT
define|#
directive|define
name|EGL_YUV_CHROMA_SITING_0_5_EXT
value|0x3285
endif|#
directive|endif
comment|/* EGL_EXT_image_dma_buf_import */
ifndef|#
directive|ifndef
name|EGL_EXT_multiview_window
DECL|macro|EGL_EXT_multiview_window
define|#
directive|define
name|EGL_EXT_multiview_window
value|1
DECL|macro|EGL_MULTIVIEW_VIEW_COUNT_EXT
define|#
directive|define
name|EGL_MULTIVIEW_VIEW_COUNT_EXT
value|0x3134
endif|#
directive|endif
comment|/* EGL_EXT_multiview_window */
ifndef|#
directive|ifndef
name|EGL_EXT_platform_base
DECL|macro|EGL_EXT_platform_base
define|#
directive|define
name|EGL_EXT_platform_base
value|1
DECL|typedef|PFNEGLGETPLATFORMDISPLAYEXTPROC
typedef|typedef
name|EGLDisplay
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLGETPLATFORMDISPLAYEXTPROC
function_decl|)
parameter_list|(
name|EGLenum
name|platform
parameter_list|,
name|void
modifier|*
name|native_display
parameter_list|,
specifier|const
name|EGLint
modifier|*
name|attrib_list
parameter_list|)
function_decl|;
DECL|typedef|PFNEGLCREATEPLATFORMWINDOWSURFACEEXTPROC
typedef|typedef
name|EGLSurface
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLCREATEPLATFORMWINDOWSURFACEEXTPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLConfig
name|config
parameter_list|,
name|void
modifier|*
name|native_window
parameter_list|,
specifier|const
name|EGLint
modifier|*
name|attrib_list
parameter_list|)
function_decl|;
DECL|typedef|PFNEGLCREATEPLATFORMPIXMAPSURFACEEXTPROC
typedef|typedef
name|EGLSurface
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLCREATEPLATFORMPIXMAPSURFACEEXTPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLConfig
name|config
parameter_list|,
name|void
modifier|*
name|native_pixmap
parameter_list|,
specifier|const
name|EGLint
modifier|*
name|attrib_list
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|EGL_EGLEXT_PROTOTYPES
name|EGLAPI
name|EGLDisplay
name|EGLAPIENTRY
name|eglGetPlatformDisplayEXT
parameter_list|(
name|EGLenum
name|platform
parameter_list|,
name|void
modifier|*
name|native_display
parameter_list|,
specifier|const
name|EGLint
modifier|*
name|attrib_list
parameter_list|)
function_decl|;
name|EGLAPI
name|EGLSurface
name|EGLAPIENTRY
name|eglCreatePlatformWindowSurfaceEXT
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLConfig
name|config
parameter_list|,
name|void
modifier|*
name|native_window
parameter_list|,
specifier|const
name|EGLint
modifier|*
name|attrib_list
parameter_list|)
function_decl|;
name|EGLAPI
name|EGLSurface
name|EGLAPIENTRY
name|eglCreatePlatformPixmapSurfaceEXT
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLConfig
name|config
parameter_list|,
name|void
modifier|*
name|native_pixmap
parameter_list|,
specifier|const
name|EGLint
modifier|*
name|attrib_list
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* EGL_EXT_platform_base */
ifndef|#
directive|ifndef
name|EGL_EXT_platform_device
DECL|macro|EGL_EXT_platform_device
define|#
directive|define
name|EGL_EXT_platform_device
value|1
DECL|macro|EGL_PLATFORM_DEVICE_EXT
define|#
directive|define
name|EGL_PLATFORM_DEVICE_EXT
value|0x313F
endif|#
directive|endif
comment|/* EGL_EXT_platform_device */
ifndef|#
directive|ifndef
name|EGL_EXT_platform_wayland
DECL|macro|EGL_EXT_platform_wayland
define|#
directive|define
name|EGL_EXT_platform_wayland
value|1
DECL|macro|EGL_PLATFORM_WAYLAND_EXT
define|#
directive|define
name|EGL_PLATFORM_WAYLAND_EXT
value|0x31D8
endif|#
directive|endif
comment|/* EGL_EXT_platform_wayland */
ifndef|#
directive|ifndef
name|EGL_EXT_platform_x11
DECL|macro|EGL_EXT_platform_x11
define|#
directive|define
name|EGL_EXT_platform_x11
value|1
DECL|macro|EGL_PLATFORM_X11_EXT
define|#
directive|define
name|EGL_PLATFORM_X11_EXT
value|0x31D5
DECL|macro|EGL_PLATFORM_X11_SCREEN_EXT
define|#
directive|define
name|EGL_PLATFORM_X11_SCREEN_EXT
value|0x31D6
endif|#
directive|endif
comment|/* EGL_EXT_platform_x11 */
ifndef|#
directive|ifndef
name|EGL_EXT_protected_surface
DECL|macro|EGL_EXT_protected_surface
define|#
directive|define
name|EGL_EXT_protected_surface
value|1
DECL|macro|EGL_PROTECTED_CONTENT_EXT
define|#
directive|define
name|EGL_PROTECTED_CONTENT_EXT
value|0x32C0
endif|#
directive|endif
comment|/* EGL_EXT_protected_surface */
ifndef|#
directive|ifndef
name|EGL_EXT_swap_buffers_with_damage
DECL|macro|EGL_EXT_swap_buffers_with_damage
define|#
directive|define
name|EGL_EXT_swap_buffers_with_damage
value|1
DECL|typedef|PFNEGLSWAPBUFFERSWITHDAMAGEEXTPROC
typedef|typedef
name|EGLBoolean
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLSWAPBUFFERSWITHDAMAGEEXTPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSurface
name|surface
parameter_list|,
name|EGLint
modifier|*
name|rects
parameter_list|,
name|EGLint
name|n_rects
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|EGL_EGLEXT_PROTOTYPES
name|EGLAPI
name|EGLBoolean
name|EGLAPIENTRY
name|eglSwapBuffersWithDamageEXT
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSurface
name|surface
parameter_list|,
name|EGLint
modifier|*
name|rects
parameter_list|,
name|EGLint
name|n_rects
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* EGL_EXT_swap_buffers_with_damage */
ifndef|#
directive|ifndef
name|EGL_HI_clientpixmap
DECL|macro|EGL_HI_clientpixmap
define|#
directive|define
name|EGL_HI_clientpixmap
value|1
DECL|struct|EGLClientPixmapHI
struct|struct
name|EGLClientPixmapHI
block|{
DECL|member|pData
name|void
modifier|*
name|pData
decl_stmt|;
DECL|member|iWidth
name|EGLint
name|iWidth
decl_stmt|;
DECL|member|iHeight
name|EGLint
name|iHeight
decl_stmt|;
DECL|member|iStride
name|EGLint
name|iStride
decl_stmt|;
block|}
struct|;
DECL|macro|EGL_CLIENT_PIXMAP_POINTER_HI
define|#
directive|define
name|EGL_CLIENT_PIXMAP_POINTER_HI
value|0x8F74
DECL|typedef|PFNEGLCREATEPIXMAPSURFACEHIPROC
typedef|typedef
name|EGLSurface
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLCREATEPIXMAPSURFACEHIPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLConfig
name|config
parameter_list|,
name|struct
name|EGLClientPixmapHI
modifier|*
name|pixmap
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|EGL_EGLEXT_PROTOTYPES
name|EGLAPI
name|EGLSurface
name|EGLAPIENTRY
name|eglCreatePixmapSurfaceHI
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLConfig
name|config
parameter_list|,
name|struct
name|EGLClientPixmapHI
modifier|*
name|pixmap
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* EGL_HI_clientpixmap */
ifndef|#
directive|ifndef
name|EGL_HI_colorformats
DECL|macro|EGL_HI_colorformats
define|#
directive|define
name|EGL_HI_colorformats
value|1
DECL|macro|EGL_COLOR_FORMAT_HI
define|#
directive|define
name|EGL_COLOR_FORMAT_HI
value|0x8F70
DECL|macro|EGL_COLOR_RGB_HI
define|#
directive|define
name|EGL_COLOR_RGB_HI
value|0x8F71
DECL|macro|EGL_COLOR_RGBA_HI
define|#
directive|define
name|EGL_COLOR_RGBA_HI
value|0x8F72
DECL|macro|EGL_COLOR_ARGB_HI
define|#
directive|define
name|EGL_COLOR_ARGB_HI
value|0x8F73
endif|#
directive|endif
comment|/* EGL_HI_colorformats */
ifndef|#
directive|ifndef
name|EGL_IMG_context_priority
DECL|macro|EGL_IMG_context_priority
define|#
directive|define
name|EGL_IMG_context_priority
value|1
DECL|macro|EGL_CONTEXT_PRIORITY_LEVEL_IMG
define|#
directive|define
name|EGL_CONTEXT_PRIORITY_LEVEL_IMG
value|0x3100
DECL|macro|EGL_CONTEXT_PRIORITY_HIGH_IMG
define|#
directive|define
name|EGL_CONTEXT_PRIORITY_HIGH_IMG
value|0x3101
DECL|macro|EGL_CONTEXT_PRIORITY_MEDIUM_IMG
define|#
directive|define
name|EGL_CONTEXT_PRIORITY_MEDIUM_IMG
value|0x3102
DECL|macro|EGL_CONTEXT_PRIORITY_LOW_IMG
define|#
directive|define
name|EGL_CONTEXT_PRIORITY_LOW_IMG
value|0x3103
endif|#
directive|endif
comment|/* EGL_IMG_context_priority */
ifndef|#
directive|ifndef
name|EGL_MESA_drm_image
DECL|macro|EGL_MESA_drm_image
define|#
directive|define
name|EGL_MESA_drm_image
value|1
DECL|macro|EGL_DRM_BUFFER_FORMAT_MESA
define|#
directive|define
name|EGL_DRM_BUFFER_FORMAT_MESA
value|0x31D0
DECL|macro|EGL_DRM_BUFFER_USE_MESA
define|#
directive|define
name|EGL_DRM_BUFFER_USE_MESA
value|0x31D1
DECL|macro|EGL_DRM_BUFFER_FORMAT_ARGB32_MESA
define|#
directive|define
name|EGL_DRM_BUFFER_FORMAT_ARGB32_MESA
value|0x31D2
DECL|macro|EGL_DRM_BUFFER_MESA
define|#
directive|define
name|EGL_DRM_BUFFER_MESA
value|0x31D3
DECL|macro|EGL_DRM_BUFFER_STRIDE_MESA
define|#
directive|define
name|EGL_DRM_BUFFER_STRIDE_MESA
value|0x31D4
DECL|macro|EGL_DRM_BUFFER_USE_SCANOUT_MESA
define|#
directive|define
name|EGL_DRM_BUFFER_USE_SCANOUT_MESA
value|0x00000001
DECL|macro|EGL_DRM_BUFFER_USE_SHARE_MESA
define|#
directive|define
name|EGL_DRM_BUFFER_USE_SHARE_MESA
value|0x00000002
DECL|typedef|PFNEGLCREATEDRMIMAGEMESAPROC
typedef|typedef
name|EGLImageKHR
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLCREATEDRMIMAGEMESAPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
specifier|const
name|EGLint
modifier|*
name|attrib_list
parameter_list|)
function_decl|;
DECL|typedef|PFNEGLEXPORTDRMIMAGEMESAPROC
typedef|typedef
name|EGLBoolean
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLEXPORTDRMIMAGEMESAPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLImageKHR
name|image
parameter_list|,
name|EGLint
modifier|*
name|name
parameter_list|,
name|EGLint
modifier|*
name|handle
parameter_list|,
name|EGLint
modifier|*
name|stride
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|EGL_EGLEXT_PROTOTYPES
name|EGLAPI
name|EGLImageKHR
name|EGLAPIENTRY
name|eglCreateDRMImageMESA
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
specifier|const
name|EGLint
modifier|*
name|attrib_list
parameter_list|)
function_decl|;
name|EGLAPI
name|EGLBoolean
name|EGLAPIENTRY
name|eglExportDRMImageMESA
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLImageKHR
name|image
parameter_list|,
name|EGLint
modifier|*
name|name
parameter_list|,
name|EGLint
modifier|*
name|handle
parameter_list|,
name|EGLint
modifier|*
name|stride
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* EGL_MESA_drm_image */
ifndef|#
directive|ifndef
name|EGL_MESA_platform_gbm
DECL|macro|EGL_MESA_platform_gbm
define|#
directive|define
name|EGL_MESA_platform_gbm
value|1
DECL|macro|EGL_PLATFORM_GBM_MESA
define|#
directive|define
name|EGL_PLATFORM_GBM_MESA
value|0x31D7
endif|#
directive|endif
comment|/* EGL_MESA_platform_gbm */
ifndef|#
directive|ifndef
name|EGL_NOK_swap_region
DECL|macro|EGL_NOK_swap_region
define|#
directive|define
name|EGL_NOK_swap_region
value|1
DECL|typedef|PFNEGLSWAPBUFFERSREGIONNOKPROC
typedef|typedef
name|EGLBoolean
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLSWAPBUFFERSREGIONNOKPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSurface
name|surface
parameter_list|,
name|EGLint
name|numRects
parameter_list|,
specifier|const
name|EGLint
modifier|*
name|rects
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|EGL_EGLEXT_PROTOTYPES
name|EGLAPI
name|EGLBoolean
name|EGLAPIENTRY
name|eglSwapBuffersRegionNOK
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSurface
name|surface
parameter_list|,
name|EGLint
name|numRects
parameter_list|,
specifier|const
name|EGLint
modifier|*
name|rects
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* EGL_NOK_swap_region */
ifndef|#
directive|ifndef
name|EGL_NOK_swap_region2
DECL|macro|EGL_NOK_swap_region2
define|#
directive|define
name|EGL_NOK_swap_region2
value|1
DECL|typedef|PFNEGLSWAPBUFFERSREGION2NOKPROC
typedef|typedef
name|EGLBoolean
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLSWAPBUFFERSREGION2NOKPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSurface
name|surface
parameter_list|,
name|EGLint
name|numRects
parameter_list|,
specifier|const
name|EGLint
modifier|*
name|rects
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|EGL_EGLEXT_PROTOTYPES
name|EGLAPI
name|EGLBoolean
name|EGLAPIENTRY
name|eglSwapBuffersRegion2NOK
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSurface
name|surface
parameter_list|,
name|EGLint
name|numRects
parameter_list|,
specifier|const
name|EGLint
modifier|*
name|rects
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* EGL_NOK_swap_region2 */
ifndef|#
directive|ifndef
name|EGL_NOK_texture_from_pixmap
DECL|macro|EGL_NOK_texture_from_pixmap
define|#
directive|define
name|EGL_NOK_texture_from_pixmap
value|1
DECL|macro|EGL_Y_INVERTED_NOK
define|#
directive|define
name|EGL_Y_INVERTED_NOK
value|0x307F
endif|#
directive|endif
comment|/* EGL_NOK_texture_from_pixmap */
ifndef|#
directive|ifndef
name|EGL_NV_3dvision_surface
DECL|macro|EGL_NV_3dvision_surface
define|#
directive|define
name|EGL_NV_3dvision_surface
value|1
DECL|macro|EGL_AUTO_STEREO_NV
define|#
directive|define
name|EGL_AUTO_STEREO_NV
value|0x3136
endif|#
directive|endif
comment|/* EGL_NV_3dvision_surface */
ifndef|#
directive|ifndef
name|EGL_NV_coverage_sample
DECL|macro|EGL_NV_coverage_sample
define|#
directive|define
name|EGL_NV_coverage_sample
value|1
DECL|macro|EGL_COVERAGE_BUFFERS_NV
define|#
directive|define
name|EGL_COVERAGE_BUFFERS_NV
value|0x30E0
DECL|macro|EGL_COVERAGE_SAMPLES_NV
define|#
directive|define
name|EGL_COVERAGE_SAMPLES_NV
value|0x30E1
endif|#
directive|endif
comment|/* EGL_NV_coverage_sample */
ifndef|#
directive|ifndef
name|EGL_NV_coverage_sample_resolve
DECL|macro|EGL_NV_coverage_sample_resolve
define|#
directive|define
name|EGL_NV_coverage_sample_resolve
value|1
DECL|macro|EGL_COVERAGE_SAMPLE_RESOLVE_NV
define|#
directive|define
name|EGL_COVERAGE_SAMPLE_RESOLVE_NV
value|0x3131
DECL|macro|EGL_COVERAGE_SAMPLE_RESOLVE_DEFAULT_NV
define|#
directive|define
name|EGL_COVERAGE_SAMPLE_RESOLVE_DEFAULT_NV
value|0x3132
DECL|macro|EGL_COVERAGE_SAMPLE_RESOLVE_NONE_NV
define|#
directive|define
name|EGL_COVERAGE_SAMPLE_RESOLVE_NONE_NV
value|0x3133
endif|#
directive|endif
comment|/* EGL_NV_coverage_sample_resolve */
ifndef|#
directive|ifndef
name|EGL_NV_depth_nonlinear
DECL|macro|EGL_NV_depth_nonlinear
define|#
directive|define
name|EGL_NV_depth_nonlinear
value|1
DECL|macro|EGL_DEPTH_ENCODING_NV
define|#
directive|define
name|EGL_DEPTH_ENCODING_NV
value|0x30E2
DECL|macro|EGL_DEPTH_ENCODING_NONE_NV
define|#
directive|define
name|EGL_DEPTH_ENCODING_NONE_NV
value|0
DECL|macro|EGL_DEPTH_ENCODING_NONLINEAR_NV
define|#
directive|define
name|EGL_DEPTH_ENCODING_NONLINEAR_NV
value|0x30E3
endif|#
directive|endif
comment|/* EGL_NV_depth_nonlinear */
ifndef|#
directive|ifndef
name|EGL_NV_native_query
DECL|macro|EGL_NV_native_query
define|#
directive|define
name|EGL_NV_native_query
value|1
DECL|typedef|PFNEGLQUERYNATIVEDISPLAYNVPROC
typedef|typedef
name|EGLBoolean
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLQUERYNATIVEDISPLAYNVPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLNativeDisplayType
modifier|*
name|display_id
parameter_list|)
function_decl|;
DECL|typedef|PFNEGLQUERYNATIVEWINDOWNVPROC
typedef|typedef
name|EGLBoolean
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLQUERYNATIVEWINDOWNVPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSurface
name|surf
parameter_list|,
name|EGLNativeWindowType
modifier|*
name|window
parameter_list|)
function_decl|;
DECL|typedef|PFNEGLQUERYNATIVEPIXMAPNVPROC
typedef|typedef
name|EGLBoolean
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLQUERYNATIVEPIXMAPNVPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSurface
name|surf
parameter_list|,
name|EGLNativePixmapType
modifier|*
name|pixmap
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|EGL_EGLEXT_PROTOTYPES
name|EGLAPI
name|EGLBoolean
name|EGLAPIENTRY
name|eglQueryNativeDisplayNV
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLNativeDisplayType
modifier|*
name|display_id
parameter_list|)
function_decl|;
name|EGLAPI
name|EGLBoolean
name|EGLAPIENTRY
name|eglQueryNativeWindowNV
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSurface
name|surf
parameter_list|,
name|EGLNativeWindowType
modifier|*
name|window
parameter_list|)
function_decl|;
name|EGLAPI
name|EGLBoolean
name|EGLAPIENTRY
name|eglQueryNativePixmapNV
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSurface
name|surf
parameter_list|,
name|EGLNativePixmapType
modifier|*
name|pixmap
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* EGL_NV_native_query */
ifndef|#
directive|ifndef
name|EGL_NV_post_convert_rounding
DECL|macro|EGL_NV_post_convert_rounding
define|#
directive|define
name|EGL_NV_post_convert_rounding
value|1
endif|#
directive|endif
comment|/* EGL_NV_post_convert_rounding */
ifndef|#
directive|ifndef
name|EGL_NV_post_sub_buffer
DECL|macro|EGL_NV_post_sub_buffer
define|#
directive|define
name|EGL_NV_post_sub_buffer
value|1
DECL|macro|EGL_POST_SUB_BUFFER_SUPPORTED_NV
define|#
directive|define
name|EGL_POST_SUB_BUFFER_SUPPORTED_NV
value|0x30BE
DECL|typedef|PFNEGLPOSTSUBBUFFERNVPROC
typedef|typedef
name|EGLBoolean
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLPOSTSUBBUFFERNVPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSurface
name|surface
parameter_list|,
name|EGLint
name|x
parameter_list|,
name|EGLint
name|y
parameter_list|,
name|EGLint
name|width
parameter_list|,
name|EGLint
name|height
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|EGL_EGLEXT_PROTOTYPES
name|EGLAPI
name|EGLBoolean
name|EGLAPIENTRY
name|eglPostSubBufferNV
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSurface
name|surface
parameter_list|,
name|EGLint
name|x
parameter_list|,
name|EGLint
name|y
parameter_list|,
name|EGLint
name|width
parameter_list|,
name|EGLint
name|height
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* EGL_NV_post_sub_buffer */
ifndef|#
directive|ifndef
name|EGL_NV_stream_sync
DECL|macro|EGL_NV_stream_sync
define|#
directive|define
name|EGL_NV_stream_sync
value|1
DECL|macro|EGL_SYNC_NEW_FRAME_NV
define|#
directive|define
name|EGL_SYNC_NEW_FRAME_NV
value|0x321F
DECL|typedef|PFNEGLCREATESTREAMSYNCNVPROC
typedef|typedef
name|EGLSyncKHR
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLCREATESTREAMSYNCNVPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLStreamKHR
name|stream
parameter_list|,
name|EGLenum
name|type
parameter_list|,
specifier|const
name|EGLint
modifier|*
name|attrib_list
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|EGL_EGLEXT_PROTOTYPES
name|EGLAPI
name|EGLSyncKHR
name|EGLAPIENTRY
name|eglCreateStreamSyncNV
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLStreamKHR
name|stream
parameter_list|,
name|EGLenum
name|type
parameter_list|,
specifier|const
name|EGLint
modifier|*
name|attrib_list
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* EGL_NV_stream_sync */
ifndef|#
directive|ifndef
name|EGL_NV_sync
DECL|macro|EGL_NV_sync
define|#
directive|define
name|EGL_NV_sync
value|1
DECL|typedef|EGLSyncNV
typedef|typedef
name|void
modifier|*
name|EGLSyncNV
typedef|;
DECL|typedef|EGLTimeNV
typedef|typedef
name|khronos_utime_nanoseconds_t
name|EGLTimeNV
typedef|;
ifdef|#
directive|ifdef
name|KHRONOS_SUPPORT_INT64
DECL|macro|EGL_SYNC_PRIOR_COMMANDS_COMPLETE_NV
define|#
directive|define
name|EGL_SYNC_PRIOR_COMMANDS_COMPLETE_NV
value|0x30E6
DECL|macro|EGL_SYNC_STATUS_NV
define|#
directive|define
name|EGL_SYNC_STATUS_NV
value|0x30E7
DECL|macro|EGL_SIGNALED_NV
define|#
directive|define
name|EGL_SIGNALED_NV
value|0x30E8
DECL|macro|EGL_UNSIGNALED_NV
define|#
directive|define
name|EGL_UNSIGNALED_NV
value|0x30E9
DECL|macro|EGL_SYNC_FLUSH_COMMANDS_BIT_NV
define|#
directive|define
name|EGL_SYNC_FLUSH_COMMANDS_BIT_NV
value|0x0001
DECL|macro|EGL_FOREVER_NV
define|#
directive|define
name|EGL_FOREVER_NV
value|0xFFFFFFFFFFFFFFFFull
DECL|macro|EGL_ALREADY_SIGNALED_NV
define|#
directive|define
name|EGL_ALREADY_SIGNALED_NV
value|0x30EA
DECL|macro|EGL_TIMEOUT_EXPIRED_NV
define|#
directive|define
name|EGL_TIMEOUT_EXPIRED_NV
value|0x30EB
DECL|macro|EGL_CONDITION_SATISFIED_NV
define|#
directive|define
name|EGL_CONDITION_SATISFIED_NV
value|0x30EC
DECL|macro|EGL_SYNC_TYPE_NV
define|#
directive|define
name|EGL_SYNC_TYPE_NV
value|0x30ED
DECL|macro|EGL_SYNC_CONDITION_NV
define|#
directive|define
name|EGL_SYNC_CONDITION_NV
value|0x30EE
DECL|macro|EGL_SYNC_FENCE_NV
define|#
directive|define
name|EGL_SYNC_FENCE_NV
value|0x30EF
DECL|macro|EGL_NO_SYNC_NV
define|#
directive|define
name|EGL_NO_SYNC_NV
value|((EGLSyncNV)0)
DECL|typedef|PFNEGLCREATEFENCESYNCNVPROC
typedef|typedef
name|EGLSyncNV
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLCREATEFENCESYNCNVPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLenum
name|condition
parameter_list|,
specifier|const
name|EGLint
modifier|*
name|attrib_list
parameter_list|)
function_decl|;
DECL|typedef|PFNEGLDESTROYSYNCNVPROC
typedef|typedef
name|EGLBoolean
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLDESTROYSYNCNVPROC
function_decl|)
parameter_list|(
name|EGLSyncNV
name|sync
parameter_list|)
function_decl|;
DECL|typedef|PFNEGLFENCENVPROC
typedef|typedef
name|EGLBoolean
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLFENCENVPROC
function_decl|)
parameter_list|(
name|EGLSyncNV
name|sync
parameter_list|)
function_decl|;
DECL|typedef|PFNEGLCLIENTWAITSYNCNVPROC
typedef|typedef
name|EGLint
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLCLIENTWAITSYNCNVPROC
function_decl|)
parameter_list|(
name|EGLSyncNV
name|sync
parameter_list|,
name|EGLint
name|flags
parameter_list|,
name|EGLTimeNV
name|timeout
parameter_list|)
function_decl|;
DECL|typedef|PFNEGLSIGNALSYNCNVPROC
typedef|typedef
name|EGLBoolean
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLSIGNALSYNCNVPROC
function_decl|)
parameter_list|(
name|EGLSyncNV
name|sync
parameter_list|,
name|EGLenum
name|mode
parameter_list|)
function_decl|;
DECL|typedef|PFNEGLGETSYNCATTRIBNVPROC
typedef|typedef
name|EGLBoolean
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLGETSYNCATTRIBNVPROC
function_decl|)
parameter_list|(
name|EGLSyncNV
name|sync
parameter_list|,
name|EGLint
name|attribute
parameter_list|,
name|EGLint
modifier|*
name|value
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|EGL_EGLEXT_PROTOTYPES
name|EGLAPI
name|EGLSyncNV
name|EGLAPIENTRY
name|eglCreateFenceSyncNV
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLenum
name|condition
parameter_list|,
specifier|const
name|EGLint
modifier|*
name|attrib_list
parameter_list|)
function_decl|;
name|EGLAPI
name|EGLBoolean
name|EGLAPIENTRY
name|eglDestroySyncNV
parameter_list|(
name|EGLSyncNV
name|sync
parameter_list|)
function_decl|;
name|EGLAPI
name|EGLBoolean
name|EGLAPIENTRY
name|eglFenceNV
parameter_list|(
name|EGLSyncNV
name|sync
parameter_list|)
function_decl|;
name|EGLAPI
name|EGLint
name|EGLAPIENTRY
name|eglClientWaitSyncNV
parameter_list|(
name|EGLSyncNV
name|sync
parameter_list|,
name|EGLint
name|flags
parameter_list|,
name|EGLTimeNV
name|timeout
parameter_list|)
function_decl|;
name|EGLAPI
name|EGLBoolean
name|EGLAPIENTRY
name|eglSignalSyncNV
parameter_list|(
name|EGLSyncNV
name|sync
parameter_list|,
name|EGLenum
name|mode
parameter_list|)
function_decl|;
name|EGLAPI
name|EGLBoolean
name|EGLAPIENTRY
name|eglGetSyncAttribNV
parameter_list|(
name|EGLSyncNV
name|sync
parameter_list|,
name|EGLint
name|attribute
parameter_list|,
name|EGLint
modifier|*
name|value
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* KHRONOS_SUPPORT_INT64 */
endif|#
directive|endif
comment|/* EGL_NV_sync */
ifndef|#
directive|ifndef
name|EGL_NV_system_time
DECL|macro|EGL_NV_system_time
define|#
directive|define
name|EGL_NV_system_time
value|1
DECL|typedef|EGLuint64NV
typedef|typedef
name|khronos_utime_nanoseconds_t
name|EGLuint64NV
typedef|;
ifdef|#
directive|ifdef
name|KHRONOS_SUPPORT_INT64
DECL|typedef|PFNEGLGETSYSTEMTIMEFREQUENCYNVPROC
typedef|typedef
name|EGLuint64NV
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLGETSYSTEMTIMEFREQUENCYNVPROC
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
DECL|typedef|PFNEGLGETSYSTEMTIMENVPROC
typedef|typedef
name|EGLuint64NV
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLGETSYSTEMTIMENVPROC
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|EGL_EGLEXT_PROTOTYPES
name|EGLAPI
name|EGLuint64NV
name|EGLAPIENTRY
name|eglGetSystemTimeFrequencyNV
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|EGLAPI
name|EGLuint64NV
name|EGLAPIENTRY
name|eglGetSystemTimeNV
parameter_list|(
name|void
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* KHRONOS_SUPPORT_INT64 */
endif|#
directive|endif
comment|/* EGL_NV_system_time */
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern
begin_endif
endif|#
directive|endif
end_endif
begin_endif
endif|#
directive|endif
end_endif
end_unit
