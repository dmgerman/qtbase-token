begin_unit
begin_comment
comment|/*  * This is the header file for the MD5 message-digest algorithm.  * The algorithm is due to Ron Rivest.  This code was  * written by Colin Plumb in 1993, no copyright is claimed.  * This code is in the public domain; do with it what you wish.  *  * Equivalent code is available from RSA Data Security, Inc.  * This code has been tested against that, and is equivalent,  * except that you don't need to include two pages of legalese  * with every copy.  *  * To compute the message digest of a chunk of bytes, declare an  * MD5Context structure, pass it to MD5Init, call MD5Update as  * needed on buffers full of bytes, and then call MD5Final, which  * will fill a supplied 16-byte array with the digest.  *  * Changed so as no longer to depend on Colin Plumb's `usual.h'  * header definitions; now uses stuff from dpkg's config.h  *  - Ian Jackson<ian@chiark.greenend.org.uk>.  * Still in the public domain.  */
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|MD5_H
end_ifndef
begin_define
DECL|macro|MD5_H
define|#
directive|define
name|MD5_H
end_define
begin_include
include|#
directive|include
file|<qglobal.h>
end_include
begin_include
include|#
directive|include
file|<qbytearray.h>
end_include
begin_include
include|#
directive|include
file|<qstring.h>
end_include
begin_macro
name|QT_BEGIN_NAMESPACE
end_macro
begin_typedef
DECL|typedef|md5byte
typedef|typedef
name|unsigned
name|char
name|md5byte
typedef|;
end_typedef
begin_typedef
DECL|typedef|UWORD32
typedef|typedef
name|quint32
name|UWORD32
typedef|;
end_typedef
begin_struct
DECL|struct|MD5Context
struct|struct
name|MD5Context
block|{
DECL|member|buf
name|UWORD32
name|buf
index|[
literal|4
index|]
decl_stmt|;
DECL|member|bytes
name|UWORD32
name|bytes
index|[
literal|2
index|]
decl_stmt|;
DECL|member|in
name|UWORD32
name|in
index|[
literal|16
index|]
decl_stmt|;
block|}
struct|;
end_struct
begin_function_decl
specifier|static
name|void
name|MD5Init
parameter_list|(
name|struct
name|MD5Context
modifier|*
name|context
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
specifier|static
name|void
name|MD5Update
parameter_list|(
name|struct
name|MD5Context
modifier|*
name|context
parameter_list|,
name|md5byte
specifier|const
modifier|*
name|buf
parameter_list|,
name|unsigned
name|len
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
specifier|static
name|void
name|MD5Final
parameter_list|(
name|struct
name|MD5Context
modifier|*
name|context
parameter_list|,
name|unsigned
name|char
name|digest
index|[
literal|16
index|]
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
specifier|static
name|void
name|MD5Transform
parameter_list|(
name|UWORD32
name|buf
index|[
literal|4
index|]
parameter_list|,
name|UWORD32
specifier|const
name|in
index|[
literal|16
index|]
parameter_list|)
function_decl|;
end_function_decl
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/* !MD5_H */
end_comment
end_unit
