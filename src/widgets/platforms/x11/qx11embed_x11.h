begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** No Commercial Usage ** This file contains pre-release code and may not be distributed. ** You may use this file in accordance with the terms and conditions ** contained in the Technology Preview License Agreement accompanying ** this package. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights.  These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** If you have questions regarding the use of this file, please contact ** Nokia at qt-info@nokia.com. ** ** ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QX11EMBED_X11_H
end_ifndef
begin_define
DECL|macro|QX11EMBED_X11_H
define|#
directive|define
name|QX11EMBED_X11_H
end_define
begin_include
include|#
directive|include
file|<QtWidgets/qwidget.h>
end_include
begin_decl_stmt
name|QT_BEGIN_HEADER
name|QT_BEGIN_NAMESPACE
name|QT_MODULE
argument_list|(
name|Gui
argument_list|)
name|class
name|QX11EmbedWidgetPrivate
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|Q_GUI_EXPORT
name|QX11EmbedWidget
range|:
name|public
name|QWidget
block|{
name|Q_OBJECT
name|public
operator|:
name|QX11EmbedWidget
argument_list|(
name|QWidget
operator|*
name|parent
operator|=
literal|0
argument_list|)
block|;
operator|~
name|QX11EmbedWidget
argument_list|()
block|;
name|void
name|embedInto
argument_list|(
argument|WId id
argument_list|)
block|;
name|WId
name|containerWinId
argument_list|()
specifier|const
block|;      enum
name|Error
block|{
name|Unknown
block|,
name|Internal
block|,
name|InvalidWindowID
block|}
block|;
name|Error
name|error
argument_list|()
specifier|const
block|;
name|Q_SIGNALS
operator|:
name|void
name|embedded
argument_list|()
block|;
name|void
name|containerClosed
argument_list|()
block|;
name|void
name|error
argument_list|(
argument|QX11EmbedWidget::Error error
argument_list|)
block|;
name|protected
operator|:
name|bool
name|x11Event
argument_list|(
name|XEvent
operator|*
argument_list|)
block|;
name|bool
name|eventFilter
argument_list|(
name|QObject
operator|*
argument_list|,
name|QEvent
operator|*
argument_list|)
block|;
name|bool
name|event
argument_list|(
name|QEvent
operator|*
argument_list|)
block|;
name|void
name|resizeEvent
argument_list|(
name|QResizeEvent
operator|*
argument_list|)
block|;
name|private
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QX11EmbedWidget
argument_list|)
name|Q_DISABLE_COPY
argument_list|(
argument|QX11EmbedWidget
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QX11EmbedContainerPrivate
name|class
name|QX11EmbedContainerPrivate
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|Q_GUI_EXPORT
name|QX11EmbedContainer
range|:
name|public
name|QWidget
block|{
name|Q_OBJECT
name|public
operator|:
name|QX11EmbedContainer
argument_list|(
name|QWidget
operator|*
name|parent
operator|=
literal|0
argument_list|)
block|;
operator|~
name|QX11EmbedContainer
argument_list|()
block|;
name|void
name|embedClient
argument_list|(
argument|WId id
argument_list|)
block|;
name|void
name|discardClient
argument_list|()
block|;
name|WId
name|clientWinId
argument_list|()
specifier|const
block|;
name|QSize
name|minimumSizeHint
argument_list|()
specifier|const
block|;      enum
name|Error
block|{
name|Unknown
block|,
name|Internal
block|,
name|InvalidWindowID
block|}
block|;
name|Error
name|error
argument_list|()
specifier|const
block|;
name|Q_SIGNALS
operator|:
name|void
name|clientIsEmbedded
argument_list|()
block|;
name|void
name|clientClosed
argument_list|()
block|;
name|void
name|error
argument_list|(
name|QX11EmbedContainer
operator|::
name|Error
argument_list|)
block|;
name|protected
operator|:
name|bool
name|x11Event
argument_list|(
name|XEvent
operator|*
argument_list|)
block|;
name|bool
name|eventFilter
argument_list|(
name|QObject
operator|*
argument_list|,
name|QEvent
operator|*
argument_list|)
block|;
name|void
name|paintEvent
argument_list|(
name|QPaintEvent
operator|*
name|e
argument_list|)
block|;
name|void
name|resizeEvent
argument_list|(
name|QResizeEvent
operator|*
argument_list|)
block|;
name|void
name|showEvent
argument_list|(
name|QShowEvent
operator|*
argument_list|)
block|;
name|void
name|hideEvent
argument_list|(
name|QHideEvent
operator|*
argument_list|)
block|;
name|bool
name|event
argument_list|(
name|QEvent
operator|*
argument_list|)
block|;
name|private
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QX11EmbedContainer
argument_list|)
name|Q_DISABLE_COPY
argument_list|(
argument|QX11EmbedContainer
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
name|QT_END_NAMESPACE
name|QT_END_HEADER
end_expr_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QX11EMBED_X11_H
end_comment
end_unit
