begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_comment
comment|/**************************************************************************** ** ** Copyright (c) 2007-2008, Apple, Inc. ** ** All rights reserved. ** ** Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are met: ** **   * Redistributions of source code must retain the above copyright notice, **     this list of conditions and the following disclaimer. ** **   * Redistributions in binary form must reproduce the above copyright notice, **     this list of conditions and the following disclaimer in the documentation **     and/or other materials provided with the distribution. ** **   * Neither the name of Apple, Inc. nor the names of its contributors **     may be used to endorse or promote products derived from this software **     without specific prior written permission. ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR ** CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, ** EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, ** PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR ** PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF ** LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING ** NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS ** SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QT_COCOA_HELPERS_MAC_P_H
end_ifndef
begin_define
DECL|macro|QT_COCOA_HELPERS_MAC_P_H
define|#
directive|define
name|QT_COCOA_HELPERS_MAC_P_H
end_define
begin_comment
comment|//
end_comment
begin_comment
comment|//  W A R N I N G
end_comment
begin_comment
comment|//  -------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// This file is not part of the Qt API.  It exists for the convenience
end_comment
begin_comment
comment|// of qapplication_*.cpp, qwidget*.cpp, qcolor_x11.cpp, qfiledialog.cpp
end_comment
begin_comment
comment|// and many other.  This header file may change from version to version
end_comment
begin_comment
comment|// without notice, or even be removed.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// We mean it.
end_comment
begin_comment
comment|//
end_comment
begin_include
include|#
directive|include
file|<private/qt_mac_p.h>
end_include
begin_include
include|#
directive|include
file|<qapplication.h>
end_include
begin_include
include|#
directive|include
file|<qdesktopwidget.h>
end_include
begin_include
include|#
directive|include
file|<qwidget.h>
end_include
begin_include
include|#
directive|include
file|<qevent.h>
end_include
begin_include
include|#
directive|include
file|<qhash.h>
end_include
begin_include
include|#
directive|include
file|<qlabel.h>
end_include
begin_include
include|#
directive|include
file|<qpointer.h>
end_include
begin_include
include|#
directive|include
file|<qstyle.h>
end_include
begin_include
include|#
directive|include
file|<qstyleoption.h>
end_include
begin_include
include|#
directive|include
file|<qstylepainter.h>
end_include
begin_include
include|#
directive|include
file|<qtimer.h>
end_include
begin_include
include|#
directive|include
file|<qtooltip.h>
end_include
begin_include
include|#
directive|include
file|<private/qeffects_p.h>
end_include
begin_include
include|#
directive|include
file|<private/qwidget_p.h>
end_include
begin_include
include|#
directive|include
file|<qtextdocument.h>
end_include
begin_include
include|#
directive|include
file|<qdebug.h>
end_include
begin_include
include|#
directive|include
file|<qpoint.h>
end_include
begin_include
include|#
directive|include
file|"private/qt_mac_p.h"
end_include
begin_struct_decl
struct_decl|struct
name|HIContentBorderMetrics
struct_decl|;
end_struct_decl
begin_ifdef
ifdef|#
directive|ifdef
name|__OBJC__
end_ifdef
begin_comment
comment|// If the source file including this file also includes e.g. Cocoa/Cocoa.h, typedef-ing NSPoint will
end_comment
begin_comment
comment|// fail since NSPoint will already be a type. So we try to detect this. If the build fails, ensure
end_comment
begin_comment
comment|// that the inclusion of cocoa headers happends before the inclusion of this file.
end_comment
begin_include
include|#
directive|include
file|<Foundation/NSGeometry.h>
end_include
begin_else
else|#
directive|else
end_else
begin_ifdef
ifdef|#
directive|ifdef
name|Q_WS_MAC32
end_ifdef
begin_typedef
DECL|typedef|NSPoint
typedef|typedef
name|struct
name|_NSPoint
name|NSPoint
typedef|;
end_typedef
begin_comment
DECL|typedef|NSPoint
comment|// Just redefine here so I don't have to pull in all of Cocoa.
end_comment
begin_else
else|#
directive|else
end_else
begin_typedef
DECL|typedef|NSPoint
typedef|typedef
name|struct
name|CGPoint
name|NSPoint
typedef|;
end_typedef
begin_endif
endif|#
directive|endif
end_endif
begin_endif
endif|#
directive|endif
end_endif
begin_expr_stmt
name|QT_BEGIN_NAMESPACE
name|Qt
operator|::
name|MouseButtons
name|qt_mac_get_buttons
argument_list|(
argument|int buttons
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|Qt
operator|::
name|MouseButton
name|qt_mac_get_button
argument_list|(
argument|EventMouseButton button
argument_list|)
expr_stmt|;
end_expr_stmt
begin_function_decl
name|void
name|macWindowFade
parameter_list|(
name|void
modifier|*
comment|/*OSWindowRef*/
name|window
parameter_list|,
name|float
name|durationSeconds
init|=
literal|0.15
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|void
name|macWindowToolbarShow
parameter_list|(
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|,
name|bool
name|show
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|void
name|macWindowToolbarSet
parameter_list|(
name|void
modifier|*
comment|/*OSWindowRef*/
name|window
parameter_list|,
name|void
modifier|*
name|toolbarRef
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|bool
name|macWindowToolbarIsVisible
parameter_list|(
name|void
modifier|*
comment|/*OSWindowRef*/
name|window
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|void
name|macWindowSetHasShadow
parameter_list|(
name|void
modifier|*
comment|/*OSWindowRef*/
name|window
parameter_list|,
name|bool
name|hasShadow
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|void
name|macWindowFlush
parameter_list|(
name|void
modifier|*
comment|/*OSWindowRef*/
name|window
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|void
name|macSendToolbarChangeEvent
parameter_list|(
name|QWidget
modifier|*
name|widget
parameter_list|)
function_decl|;
end_function_decl
begin_decl_stmt
name|void
name|qt_mac_updateContentBorderMetricts
argument_list|(
name|void
operator|*
comment|/*OSWindowRef */
name|window
argument_list|,
specifier|const
operator|::
name|HIContentBorderMetrics
operator|&
name|metrics
argument_list|)
decl_stmt|;
end_decl_stmt
begin_function_decl
name|void
name|qt_mac_replaceDrawRect
parameter_list|(
name|void
modifier|*
comment|/*OSWindowRef */
name|window
parameter_list|,
name|QWidgetPrivate
modifier|*
name|widget
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|void
name|qt_mac_replaceDrawRectOriginal
parameter_list|(
name|void
modifier|*
comment|/*OSWindowRef */
name|window
parameter_list|,
name|QWidgetPrivate
modifier|*
name|widget
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|void
name|qt_mac_showBaseLineSeparator
parameter_list|(
name|void
modifier|*
comment|/*OSWindowRef */
name|window
parameter_list|,
name|bool
name|show
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|void
name|qt_mac_update_mouseTracking
parameter_list|(
name|QWidget
modifier|*
name|widget
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|OSStatus
name|qt_mac_drawCGImage
parameter_list|(
name|CGContextRef
name|cg
parameter_list|,
specifier|const
name|CGRect
modifier|*
name|inbounds
parameter_list|,
name|CGImageRef
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|bool
name|qt_mac_checkForNativeSizeGrip
parameter_list|(
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|void
name|qt_dispatchTabletProximityEvent
parameter_list|(
name|void
modifier|*
comment|/*NSEvent * */
name|tabletEvent
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|bool
name|qt_dispatchKeyEventWithCocoa
parameter_list|(
name|void
modifier|*
comment|/*NSEvent * */
name|keyEvent
parameter_list|,
name|QWidget
modifier|*
name|widgetToGetEvent
parameter_list|)
function_decl|;
end_function_decl
begin_comment
comment|// These methods exists only for supporting unified mode.
end_comment
begin_function_decl
name|void
name|macDrawRectOnTop
parameter_list|(
name|void
modifier|*
comment|/*OSWindowRef */
name|window
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|void
name|macSyncDrawingOnFirstInvocation
parameter_list|(
name|void
modifier|*
comment|/*OSWindowRef */
name|window
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|void
name|qt_cocoaStackChildWindowOnTopOfOtherChildren
parameter_list|(
name|QWidget
modifier|*
name|widget
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|bool
name|qt_dispatchKeyEvent
parameter_list|(
name|void
modifier|*
comment|/*NSEvent * */
name|keyEvent
parameter_list|,
name|QWidget
modifier|*
name|widgetToGetEvent
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|void
name|qt_dispatchModifiersChanged
parameter_list|(
name|void
modifier|*
comment|/*NSEvent * */
name|flagsChangedEvent
parameter_list|,
name|QWidget
modifier|*
name|widgetToGetEvent
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|bool
name|qt_mac_handleTabletEvent
parameter_list|(
name|void
modifier|*
comment|/*QCocoaView * */
name|view
parameter_list|,
name|void
modifier|*
comment|/*NSEvent * */
name|event
parameter_list|)
function_decl|;
end_function_decl
begin_function
DECL|function|qAppInstance
specifier|inline
name|QApplication
modifier|*
name|qAppInstance
parameter_list|()
block|{
return|return
name|static_cast
operator|<
name|QApplication
operator|*
operator|>
operator|(
name|QCoreApplication
operator|::
name|instance
argument_list|()
operator|)
return|;
block|}
end_function
begin_struct_decl
DECL|variable|TabletProximityRec
struct_decl|struct ::TabletProximityRec;
end_struct_decl
begin_decl_stmt
name|void
name|qt_dispatchTabletProximityEvent
argument_list|(
specifier|const
operator|::
name|TabletProximityRec
operator|&
name|proxRec
argument_list|)
decl_stmt|;
end_decl_stmt
begin_expr_stmt
name|Qt
operator|::
name|KeyboardModifiers
name|qt_cocoaModifiers2QtModifiers
argument_list|(
argument|ulong modifierFlags
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|Qt
operator|::
name|KeyboardModifiers
name|qt_cocoaDragOperation2QtModifiers
argument_list|(
argument|uint dragOperations
argument_list|)
expr_stmt|;
end_expr_stmt
begin_function_decl
name|QPixmap
name|qt_mac_convert_iconref
parameter_list|(
specifier|const
name|IconRef
name|icon
parameter_list|,
name|int
name|width
parameter_list|,
name|int
name|height
parameter_list|)
function_decl|;
end_function_decl
begin_decl_stmt
name|void
name|qt_mac_constructQIconFromIconRef
argument_list|(
specifier|const
name|IconRef
name|icon
argument_list|,
specifier|const
name|IconRef
name|overlayIcon
argument_list|,
name|QIcon
operator|*
name|retIcon
argument_list|,
name|QStyle
operator|::
name|StandardPixmap
name|standardIcon
operator|=
name|QStyle
operator|::
name|SP_CustomBase
argument_list|)
decl_stmt|;
end_decl_stmt
begin_ifdef
ifdef|#
directive|ifdef
name|__OBJC__
end_ifdef
begin_struct
DECL|struct|DnDParams
struct|struct
name|DnDParams
block|{
DECL|member|view
name|NSView
modifier|*
name|view
decl_stmt|;
DECL|member|theEvent
name|NSEvent
modifier|*
name|theEvent
decl_stmt|;
DECL|member|globalPoint
name|QPoint
name|globalPoint
decl_stmt|;
DECL|member|performedAction
name|NSDragOperation
name|performedAction
decl_stmt|;
block|}
struct|;
end_struct
begin_function_decl
name|DnDParams
modifier|*
name|macCurrentDnDParameters
parameter_list|()
function_decl|;
end_function_decl
begin_decl_stmt
name|NSDragOperation
name|qt_mac_mapDropAction
argument_list|(
name|Qt
operator|::
name|DropAction
name|action
argument_list|)
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|NSDragOperation
name|qt_mac_mapDropActions
argument_list|(
name|Qt
operator|::
name|DropActions
name|actions
argument_list|)
decl_stmt|;
end_decl_stmt
begin_expr_stmt
name|Qt
operator|::
name|DropAction
name|qt_mac_mapNSDragOperation
argument_list|(
argument|NSDragOperation nsActions
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|Qt
operator|::
name|DropActions
name|qt_mac_mapNSDragOperations
argument_list|(
argument|NSDragOperation nsActions
argument_list|)
expr_stmt|;
end_expr_stmt
begin_function_decl
name|QWidget
modifier|*
name|qt_mac_getTargetForKeyEvent
parameter_list|(
name|QWidget
modifier|*
name|widgetThatReceivedEvent
parameter_list|)
function_decl|;
end_function_decl
begin_decl_stmt
name|QWidget
modifier|*
name|qt_mac_getTargetForMouseEvent
argument_list|(
name|NSEvent
operator|*
name|event
argument_list|,
name|QEvent
operator|::
name|Type
name|eventType
argument_list|,
name|QPoint
operator|&
name|returnLocalPoint
argument_list|,
name|QPoint
operator|&
name|returnGlobalPoint
argument_list|,
name|QWidget
operator|*
name|nativeWidget
argument_list|,
name|QWidget
operator|*
operator|*
name|returnWidgetUnderMouse
argument_list|)
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|bool
name|qt_mac_handleMouseEvent
argument_list|(
name|NSEvent
operator|*
name|event
argument_list|,
name|QEvent
operator|::
name|Type
name|eventType
argument_list|,
name|Qt
operator|::
name|MouseButton
name|button
argument_list|,
name|QWidget
operator|*
name|nativeWidget
argument_list|)
decl_stmt|;
end_decl_stmt
begin_function_decl
name|void
name|qt_mac_handleNonClientAreaMouseEvent
parameter_list|(
name|NSWindow
modifier|*
name|window
parameter_list|,
name|NSEvent
modifier|*
name|event
parameter_list|)
function_decl|;
end_function_decl
begin_endif
endif|#
directive|endif
end_endif
begin_function
DECL|function|flipYCoordinate
specifier|inline
name|int
name|flipYCoordinate
parameter_list|(
name|int
name|y
parameter_list|)
block|{
return|return
name|QApplication
operator|::
name|desktop
argument_list|()
operator|->
name|screenGeometry
argument_list|(
literal|0
argument_list|)
operator|.
name|height
argument_list|()
operator|-
name|y
return|;
block|}
end_function
begin_function
DECL|function|flipYCoordinate
specifier|inline
name|qreal
name|flipYCoordinate
parameter_list|(
name|qreal
name|y
parameter_list|)
block|{
return|return
name|QApplication
operator|::
name|desktop
argument_list|()
operator|->
name|screenGeometry
argument_list|(
literal|0
argument_list|)
operator|.
name|height
argument_list|()
operator|-
name|y
return|;
block|}
end_function
begin_function_decl
name|QPointF
name|flipPoint
parameter_list|(
specifier|const
name|NSPoint
modifier|&
name|p
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|NSPoint
name|flipPoint
parameter_list|(
specifier|const
name|QPoint
modifier|&
name|p
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|NSPoint
name|flipPoint
parameter_list|(
specifier|const
name|QPointF
modifier|&
name|p
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|QStringList
name|qt_mac_NSArrayToQStringList
parameter_list|(
name|void
modifier|*
name|nsarray
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|void
modifier|*
name|qt_mac_QStringListToNSMutableArrayVoid
parameter_list|(
specifier|const
name|QStringList
modifier|&
name|list
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|void
name|qt_syncCocoaTitleBarButtons
parameter_list|(
name|OSWindowRef
name|window
parameter_list|,
name|QWidget
modifier|*
name|widgetForWindow
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|CGFloat
name|qt_mac_get_scalefactor
parameter_list|()
function_decl|;
end_function_decl
begin_function_decl
name|QString
name|qt_mac_get_pasteboardString
parameter_list|(
name|OSPasteboardRef
name|paste
parameter_list|)
function_decl|;
end_function_decl
begin_ifdef
ifdef|#
directive|ifdef
name|__OBJC__
end_ifdef
begin_function
DECL|function|qt_mac_QStringListToNSMutableArray
specifier|inline
name|NSMutableArray
modifier|*
name|qt_mac_QStringListToNSMutableArray
parameter_list|(
specifier|const
name|QStringList
modifier|&
name|qstrlist
parameter_list|)
block|{
return|return
name|reinterpret_cast
operator|<
name|NSMutableArray
operator|*
operator|>
operator|(
name|qt_mac_QStringListToNSMutableArrayVoid
argument_list|(
name|qstrlist
argument_list|)
operator|)
return|;
block|}
end_function
begin_function
DECL|function|qt_mac_NSStringToQString
specifier|inline
name|QString
name|qt_mac_NSStringToQString
parameter_list|(
specifier|const
name|NSString
modifier|*
name|nsstr
parameter_list|)
block|{
return|return
name|QCFString
operator|::
name|toQString
argument_list|(
name|reinterpret_cast
operator|<
specifier|const
name|CFStringRef
operator|>
operator|(
name|nsstr
operator|)
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|qt_mac_QStringToNSString
specifier|inline
name|NSString
modifier|*
name|qt_mac_QStringToNSString
parameter_list|(
specifier|const
name|QString
modifier|&
name|qstr
parameter_list|)
block|{
return|return
index|[
name|const_cast
operator|<
name|NSString
operator|*
operator|>
operator|(
name|reinterpret_cast
operator|<
specifier|const
name|NSString
operator|*
operator|>
operator|(
name|QCFString
operator|::
name|toCFStringRef
argument_list|(
name|qstr
argument_list|)
operator|)
operator|)
name|autorelease
index|]
return|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_decl_stmt
name|class
name|QMacScrollOptimization
block|{
comment|// This class is made to optimize for the case when the user
comment|// scrolls both horizontally and vertically at the same
comment|// time. This will result in two QWheelEvents (one for each
comment|// direction), which will typically result in two calls to
comment|// QWidget::_scroll_sys. Rather than copying pixels twize on
comment|// screen because of this, we add this helper class to try to
comment|// get away with only one blit.
specifier|static
name|QWidgetPrivate
modifier|*
name|_target
decl_stmt|;
specifier|static
name|bool
name|_inWheelEvent
decl_stmt|;
specifier|static
name|int
name|_dx
decl_stmt|;
specifier|static
name|int
name|_dy
decl_stmt|;
specifier|static
name|QRect
name|_scrollRect
decl_stmt|;
name|public
label|:
specifier|static
name|void
name|initDelayedScroll
parameter_list|()
block|{
name|_inWheelEvent
operator|=
name|true
expr_stmt|;
block|}
specifier|static
name|bool
name|delayScroll
parameter_list|(
name|QWidgetPrivate
modifier|*
name|target
parameter_list|,
name|int
name|dx
parameter_list|,
name|int
name|dy
parameter_list|,
specifier|const
name|QRect
modifier|&
name|scrollRect
parameter_list|)
block|{
if|if
condition|(
operator|!
name|_inWheelEvent
condition|)
return|return
name|false
return|;
if|if
condition|(
name|_target
operator|&&
name|_target
operator|!=
name|target
condition|)
return|return
name|false
return|;
if|if
condition|(
name|_scrollRect
operator|.
name|width
argument_list|()
operator|!=
operator|-
literal|1
operator|&&
name|_scrollRect
operator|!=
name|scrollRect
condition|)
return|return
name|false
return|;
name|_target
operator|=
name|target
expr_stmt|;
name|_dx
operator|+=
name|dx
expr_stmt|;
name|_dy
operator|+=
name|dy
expr_stmt|;
name|_scrollRect
operator|=
name|scrollRect
expr_stmt|;
return|return
name|true
return|;
block|}
specifier|static
name|void
name|performDelayedScroll
parameter_list|()
block|{
if|if
condition|(
operator|!
name|_inWheelEvent
condition|)
return|return;
name|_inWheelEvent
operator|=
name|false
expr_stmt|;
if|if
condition|(
operator|!
name|_target
condition|)
return|return;
name|_target
operator|->
name|scroll_sys
argument_list|(
name|_dx
argument_list|,
name|_dy
argument_list|,
name|_scrollRect
argument_list|)
expr_stmt|;
name|_target
operator|=
literal|0
expr_stmt|;
name|_dx
operator|=
literal|0
expr_stmt|;
name|_dy
operator|=
literal|0
expr_stmt|;
name|_scrollRect
operator|=
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_function_decl
name|void
name|qt_mac_post_retranslateAppMenu
parameter_list|()
function_decl|;
end_function_decl
begin_function_decl
name|void
name|qt_mac_display
parameter_list|(
name|QWidget
modifier|*
name|widget
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|void
name|qt_mac_setNeedsDisplay
parameter_list|(
name|QWidget
modifier|*
name|widget
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|void
name|qt_mac_setNeedsDisplayInRect
parameter_list|(
name|QWidget
modifier|*
name|widget
parameter_list|,
name|QRegion
name|region
parameter_list|)
function_decl|;
end_function_decl
begin_comment
comment|// Utility functions to ease the use of Core Graphics contexts.
end_comment
begin_function
DECL|function|qt_mac_retain_graphics_context
specifier|inline
name|void
name|qt_mac_retain_graphics_context
parameter_list|(
name|CGContextRef
name|context
parameter_list|)
block|{
name|CGContextRetain
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|CGContextSaveGState
argument_list|(
name|context
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|qt_mac_release_graphics_context
specifier|inline
name|void
name|qt_mac_release_graphics_context
parameter_list|(
name|CGContextRef
name|context
parameter_list|)
block|{
name|CGContextRestoreGState
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|CGContextRelease
argument_list|(
name|context
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|qt_mac_draw_image
specifier|inline
name|void
name|qt_mac_draw_image
parameter_list|(
name|CGContextRef
name|context
parameter_list|,
name|CGContextRef
name|imageContext
parameter_list|,
name|CGRect
name|area
parameter_list|,
name|CGRect
name|drawingArea
parameter_list|)
block|{
name|CGImageRef
name|image
init|=
name|CGBitmapContextCreateImage
argument_list|(
name|imageContext
argument_list|)
decl_stmt|;
name|CGImageRef
name|subImage
init|=
name|CGImageCreateWithImageInRect
argument_list|(
name|image
argument_list|,
name|area
argument_list|)
decl_stmt|;
name|CGContextTranslateCTM
argument_list|(
name|context
argument_list|,
literal|0
argument_list|,
name|drawingArea
operator|.
name|origin
operator|.
name|y
operator|+
name|CGRectGetMaxY
argument_list|(
name|drawingArea
argument_list|)
argument_list|)
expr_stmt|;
name|CGContextScaleCTM
argument_list|(
name|context
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|CGContextDrawImage
argument_list|(
name|context
argument_list|,
name|drawingArea
argument_list|,
name|subImage
argument_list|)
expr_stmt|;
name|CGImageRelease
argument_list|(
name|subImage
argument_list|)
expr_stmt|;
name|CGImageRelease
argument_list|(
name|image
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_COCOA_HELPERS_MAC_P_H
end_comment
end_unit
