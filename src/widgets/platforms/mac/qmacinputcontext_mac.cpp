begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<qvarlengtharray.h>
end_include
begin_include
include|#
directive|include
file|<qwidget.h>
end_include
begin_include
include|#
directive|include
file|<private/qmacinputcontext_p.h>
end_include
begin_include
include|#
directive|include
file|"qtextformat.h"
end_include
begin_include
include|#
directive|include
file|<qdebug.h>
end_include
begin_include
include|#
directive|include
file|<private/qapplication_p.h>
end_include
begin_include
include|#
directive|include
file|<private/qkeymapper_p.h>
end_include
begin_function_decl
name|QT_BEGIN_NAMESPACE
specifier|extern
name|bool
name|qt_sendSpontaneousEvent
parameter_list|(
name|QObject
modifier|*
parameter_list|,
name|QEvent
modifier|*
parameter_list|)
function_decl|;
end_function_decl
begin_if
if|#
directive|if
operator|(
name|MAC_OS_X_VERSION_MAX_ALLOWED
operator|<
name|MAC_OS_X_VERSION_10_5
operator|)
end_if
begin_define
DECL|macro|typeRefCon
define|#
directive|define
name|typeRefCon
value|typeSInt32
end_define
begin_define
DECL|macro|typeByteCount
define|#
directive|define
name|typeByteCount
value|typeSInt32
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_constructor
DECL|function|QMacInputContext
name|QMacInputContext
operator|::
name|QMacInputContext
parameter_list|(
name|QObject
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QInputContext
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|composing
argument_list|(
literal|false
argument_list|)
member_init_list|,
name|recursionGuard
argument_list|(
literal|false
argument_list|)
member_init_list|,
name|textDocument
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|keydownEvent
argument_list|(
literal|0
argument_list|)
block|{
comment|//    createTextDocument();
block|}
end_constructor
begin_destructor
DECL|function|~QMacInputContext
name|QMacInputContext
operator|::
name|~
name|QMacInputContext
parameter_list|()
block|{ }
end_destructor
begin_function
name|void
DECL|function|createTextDocument
name|QMacInputContext
operator|::
name|createTextDocument
parameter_list|()
block|{ }
end_function
begin_function
DECL|function|language
name|QString
name|QMacInputContext
operator|::
name|language
parameter_list|()
block|{
return|return
name|QString
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|mouseHandler
name|void
name|QMacInputContext
operator|::
name|mouseHandler
parameter_list|(
name|int
name|pos
parameter_list|,
name|QMouseEvent
modifier|*
name|e
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
name|pos
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setFocusWidget
name|void
name|QMacInputContext
operator|::
name|setFocusWidget
parameter_list|(
name|QWidget
modifier|*
name|w
parameter_list|)
block|{
name|createTextDocument
argument_list|()
expr_stmt|;
name|QInputContext
operator|::
name|setFocusWidget
argument_list|(
name|w
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
name|void
DECL|function|initialize
name|QMacInputContext
operator|::
name|initialize
parameter_list|()
block|{ }
end_function
begin_function
name|void
DECL|function|cleanup
name|QMacInputContext
operator|::
name|cleanup
parameter_list|()
block|{ }
end_function
begin_function
DECL|function|setLastKeydownEvent
name|void
name|QMacInputContext
operator|::
name|setLastKeydownEvent
parameter_list|(
name|EventRef
name|event
parameter_list|)
block|{
name|EventRef
name|tmpEvent
init|=
name|keydownEvent
decl_stmt|;
name|keydownEvent
operator|=
name|event
expr_stmt|;
if|if
condition|(
name|keydownEvent
condition|)
name|RetainEvent
argument_list|(
name|keydownEvent
argument_list|)
expr_stmt|;
if|if
condition|(
name|tmpEvent
condition|)
name|ReleaseEvent
argument_list|(
name|tmpEvent
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
name|OSStatus
DECL|function|globalEventProcessor
name|QMacInputContext
operator|::
name|globalEventProcessor
parameter_list|(
name|EventHandlerCallRef
parameter_list|,
name|EventRef
name|event
parameter_list|,
name|void
modifier|*
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
name|event
argument_list|)
expr_stmt|;
return|return
name|noErr
return|;
comment|//we eat the event
block|}
end_function
begin_macro
name|QT_END_NAMESPACE
end_macro
end_unit
