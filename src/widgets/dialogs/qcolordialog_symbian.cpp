begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"qcolordialog_p.h"
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_COLORDIALOG
end_ifndef
begin_include
include|#
directive|include
file|"qcolor.h"
end_include
begin_include
include|#
directive|include
file|"private/qguiplatformplugin_p.h"
end_include
begin_ifdef
ifdef|#
directive|ifdef
name|Q_WS_S60
end_ifdef
begin_include
include|#
directive|include
file|<AknColourSelectionGrid.h>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_include
include|#
directive|include
file|"private/qt_s60_p.h"
end_include
begin_function
name|QT_BEGIN_NAMESPACE
DECL|function|launchSymbianColorDialog
name|QColor
name|launchSymbianColorDialog
parameter_list|(
name|QColor
name|initial
parameter_list|)
block|{
name|QColor
name|currentColor
init|=
name|QColor
operator|::
name|Invalid
decl_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_S60
name|QT_TRAP_THROWING
argument_list|(
argument|CArrayFixFlat<TRgb>* array = new( ELeave ) CArrayFixFlat<TRgb>(
literal|17
argument|);         CleanupStack::PushL(array);         array->AppendL(KRgbBlack);         array->AppendL(KRgbDarkGray);         array->AppendL(KRgbDarkRed);         array->AppendL(KRgbDarkGreen);         array->AppendL(KRgbDarkYellow);         array->AppendL(KRgbDarkBlue);         array->AppendL(KRgbDarkMagenta);         array->AppendL(KRgbDarkCyan);         array->AppendL(KRgbRed);         array->AppendL(KRgbGreen);         array->AppendL(KRgbYellow);         array->AppendL(KRgbBlue);         array->AppendL(KRgbMagenta);         array->AppendL(KRgbCyan);         array->AppendL(KRgbGray);         array->AppendL(KRgbWhite);          TRgb initialColour(initial.red(), initial.green(), initial.blue(), initial.alpha());          TBool noneChosen = EFalse;
comment|// If true shows the default colour button
argument|CAknColourSelectionGrid* colourSelectionGrid =             CAknColourSelectionGrid::NewL(array, EFalse, noneChosen, initialColour);         CleanupStack::PushL(colourSelectionGrid);          if (colourSelectionGrid->ExecuteLD()) {             currentColor.setRgb(initialColour.Red(), initialColour.Green(),                                 initialColour.Blue(), initialColour.Alpha());         }         CleanupStack::Pop(colourSelectionGrid);         CleanupStack::PopAndDestroy(array);
argument_list|)
empty_stmt|;
endif|#
directive|endif
return|return
name|currentColor
return|;
block|}
end_function
begin_function
DECL|function|qtSymbianGetColor
name|QColor
name|qtSymbianGetColor
parameter_list|(
specifier|const
name|QColor
modifier|&
name|initial
parameter_list|)
block|{
return|return
name|launchSymbianColorDialog
argument_list|(
name|initial
argument_list|)
return|;
block|}
end_function
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_COLORDIALOG
end_comment
end_unit
