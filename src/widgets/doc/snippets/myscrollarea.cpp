begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the documentation of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of The Qt Company Ltd and its Subsidiary(-ies) nor the **     names of its contributors may be used to endorse or promote products **     derived from this software without specific prior written permission. ** ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtGui>
end_include
begin_class
DECL|class|MyScrollArea
class|class
name|MyScrollArea
super|:
specifier|public
name|QAbstractScrollArea
block|{
public|public:
name|MyScrollArea
parameter_list|(
name|QWidget
modifier|*
name|w
parameter_list|)
constructor_decl|;
name|void
name|setWidget
parameter_list|(
name|QWidget
modifier|*
name|w
parameter_list|)
function_decl|;
protected|protected:
name|void
name|scrollContentsBy
parameter_list|(
name|int
name|dx
parameter_list|,
name|int
name|dy
parameter_list|)
function_decl|;
name|void
name|resizeEvent
parameter_list|(
name|QResizeEvent
modifier|*
name|event
parameter_list|)
function_decl|;
private|private:
name|void
name|updateWidgetPosition
parameter_list|()
function_decl|;
name|void
name|updateArea
parameter_list|()
function_decl|;
DECL|member|widget
name|QWidget
modifier|*
name|widget
decl_stmt|;
block|}
class|;
end_class
begin_constructor
DECL|function|MyScrollArea
name|MyScrollArea
operator|::
name|MyScrollArea
parameter_list|(
name|QWidget
modifier|*
name|widget
parameter_list|)
member_init_list|:
name|QAbstractScrollArea
argument_list|()
block|{
name|setWidget
argument_list|(
name|widget
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_function
DECL|function|setWidget
name|void
name|MyScrollArea
operator|::
name|setWidget
parameter_list|(
name|QWidget
modifier|*
name|w
parameter_list|)
block|{
name|widget
operator|=
name|w
expr_stmt|;
name|widget
operator|->
name|setParent
argument_list|(
name|viewport
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|widget
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_Resized
argument_list|)
condition|)
name|widget
operator|->
name|resize
argument_list|(
name|widget
operator|->
name|sizeHint
argument_list|()
argument_list|)
expr_stmt|;
name|verticalScrollBar
argument_list|()
operator|->
name|setValue
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|verticalScrollBar
argument_list|()
operator|->
name|setValue
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|updateArea
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|updateWidgetPosition
name|void
name|MyScrollArea
operator|::
name|updateWidgetPosition
parameter_list|()
block|{
comment|//! [0]
name|int
name|hvalue
init|=
name|horizontalScrollBar
argument_list|()
operator|->
name|value
argument_list|()
decl_stmt|;
name|int
name|vvalue
init|=
name|verticalScrollBar
argument_list|()
operator|->
name|value
argument_list|()
decl_stmt|;
name|QPoint
name|topLeft
init|=
name|viewport
argument_list|()
operator|->
name|rect
argument_list|()
operator|.
name|topLeft
argument_list|()
decl_stmt|;
name|widget
operator|->
name|move
argument_list|(
name|topLeft
operator|.
name|x
argument_list|()
operator|-
name|hvalue
argument_list|,
name|topLeft
operator|.
name|y
argument_list|()
operator|-
name|vvalue
argument_list|)
expr_stmt|;
comment|//! [0]
block|}
end_function
begin_function
DECL|function|scrollContentsBy
name|void
name|MyScrollArea
operator|::
name|scrollContentsBy
parameter_list|(
name|int
comment|/*dx*/
parameter_list|,
name|int
comment|/*dy*/
parameter_list|)
block|{
name|updateWidgetPosition
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|updateArea
name|void
name|MyScrollArea
operator|::
name|updateArea
parameter_list|()
block|{
comment|//! [1]
name|QSize
name|areaSize
init|=
name|viewport
argument_list|()
operator|->
name|size
argument_list|()
decl_stmt|;
name|QSize
name|widgetSize
init|=
name|widget
operator|->
name|size
argument_list|()
decl_stmt|;
name|verticalScrollBar
argument_list|()
operator|->
name|setPageStep
argument_list|(
name|areaSize
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
name|horizontalScrollBar
argument_list|()
operator|->
name|setPageStep
argument_list|(
name|areaSize
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
name|verticalScrollBar
argument_list|()
operator|->
name|setRange
argument_list|(
literal|0
argument_list|,
name|widgetSize
operator|.
name|height
argument_list|()
operator|-
name|areaSize
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
name|horizontalScrollBar
argument_list|()
operator|->
name|setRange
argument_list|(
literal|0
argument_list|,
name|widgetSize
operator|.
name|width
argument_list|()
operator|-
name|areaSize
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
name|updateWidgetPosition
argument_list|()
expr_stmt|;
comment|//! [1]
block|}
end_function
begin_function
DECL|function|resizeEvent
name|void
name|MyScrollArea
operator|::
name|resizeEvent
parameter_list|(
name|QResizeEvent
modifier|*
name|event
parameter_list|)
block|{
name|updateArea
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|main
name|int
name|main
parameter_list|(
name|int
name|argv
parameter_list|,
name|char
modifier|*
modifier|*
name|args
parameter_list|)
block|{
name|QApplication
name|app
argument_list|(
name|argv
argument_list|,
name|args
argument_list|)
decl_stmt|;
name|QPixmap
name|pixmap
argument_list|(
literal|"mypixmap.png"
argument_list|)
decl_stmt|;
name|QLabel
name|label
decl_stmt|;
name|label
operator|.
name|setPixmap
argument_list|(
name|pixmap
argument_list|)
expr_stmt|;
name|MyScrollArea
name|area
argument_list|(
operator|&
name|label
argument_list|)
decl_stmt|;
name|area
operator|.
name|resize
argument_list|(
literal|300
argument_list|,
literal|300
argument_list|)
expr_stmt|;
name|area
operator|.
name|show
argument_list|()
expr_stmt|;
name|area
operator|.
name|setWidget
argument_list|(
operator|&
name|label
argument_list|)
expr_stmt|;
return|return
name|app
operator|.
name|exec
argument_list|()
return|;
block|}
end_function
end_unit
