begin_unit
begin_comment
comment|/*************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 3 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL3 included in the ** packaging of this file. Please review the following information to ** ensure the GNU Lesser General Public License version 3 requirements ** will be met: https://www.gnu.org/licenses/lgpl-3.0.html. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 2.0 or (at your option) the GNU General ** Public license version 3 or any later version approved by the KDE Free ** Qt Foundation. The licenses are as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL2 and LICENSE.GPL3 ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-2.0.html and ** https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"qcustompixmapstyle.h"
end_include
begin_include
include|#
directive|include
file|<QtGui>
end_include
begin_comment
comment|//! [0]
end_comment
begin_constructor
DECL|function|QCustomPixmapStyle
name|QCustomPixmapStyle
operator|::
name|QCustomPixmapStyle
parameter_list|()
member_init_list|:
name|QPixmapStyle
argument_list|()
block|{
comment|//! [1]
name|addDescriptor
argument_list|(
name|PB_Enabled
argument_list|,
name|QLatin1String
argument_list|(
literal|"://button/core_button_inactive.png"
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|13
argument_list|,
literal|13
argument_list|,
literal|13
argument_list|,
literal|13
argument_list|)
argument_list|,
name|QTileRules
argument_list|(
name|Qt
operator|::
name|RepeatTile
argument_list|,
name|Qt
operator|::
name|StretchTile
argument_list|)
argument_list|)
expr_stmt|;
comment|//! [1]
name|addDescriptor
argument_list|(
name|PB_Checked
argument_list|,
name|QLatin1String
argument_list|(
literal|"://button/core_button_enabled_selected.png"
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|13
argument_list|,
literal|13
argument_list|,
literal|13
argument_list|,
literal|13
argument_list|)
argument_list|,
name|QTileRules
argument_list|(
name|Qt
operator|::
name|RepeatTile
argument_list|,
name|Qt
operator|::
name|StretchTile
argument_list|)
argument_list|)
expr_stmt|;
name|addDescriptor
argument_list|(
name|PB_Pressed
argument_list|,
name|QLatin1String
argument_list|(
literal|"://button/core_button_pressed.png"
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|13
argument_list|,
literal|13
argument_list|,
literal|13
argument_list|,
literal|13
argument_list|)
argument_list|,
name|QTileRules
argument_list|(
name|Qt
operator|::
name|RepeatTile
argument_list|,
name|Qt
operator|::
name|StretchTile
argument_list|)
argument_list|)
expr_stmt|;
name|addDescriptor
argument_list|(
name|PB_Disabled
argument_list|,
name|QLatin1String
argument_list|(
literal|"://button/core_button_disabled.png"
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|13
argument_list|,
literal|13
argument_list|,
literal|13
argument_list|,
literal|13
argument_list|)
argument_list|,
name|QTileRules
argument_list|(
name|Qt
operator|::
name|RepeatTile
argument_list|,
name|Qt
operator|::
name|StretchTile
argument_list|)
argument_list|)
expr_stmt|;
name|addDescriptor
argument_list|(
name|PB_PressedDisabled
argument_list|,
name|QLatin1String
argument_list|(
literal|"://button/core_button_disabled_selected.png"
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|13
argument_list|,
literal|13
argument_list|,
literal|13
argument_list|,
literal|13
argument_list|)
argument_list|,
name|QTileRules
argument_list|(
name|Qt
operator|::
name|RepeatTile
argument_list|,
name|Qt
operator|::
name|StretchTile
argument_list|)
argument_list|)
expr_stmt|;
comment|//! [2]
name|addDescriptor
argument_list|(
name|LE_Enabled
argument_list|,
name|QLatin1String
argument_list|(
literal|"://lineedit/core_textinput_bg.png"
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|8
argument_list|,
literal|8
argument_list|,
literal|8
argument_list|,
literal|8
argument_list|)
argument_list|)
expr_stmt|;
name|addDescriptor
argument_list|(
name|LE_Disabled
argument_list|,
name|QLatin1String
argument_list|(
literal|"://lineedit/core_textinput_bg_disabled.png"
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|8
argument_list|,
literal|8
argument_list|,
literal|8
argument_list|,
literal|8
argument_list|)
argument_list|)
expr_stmt|;
name|addDescriptor
argument_list|(
name|LE_Focused
argument_list|,
name|QLatin1String
argument_list|(
literal|"://lineedit/core_textinput_bg_highlight.png"
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|8
argument_list|,
literal|8
argument_list|,
literal|8
argument_list|,
literal|8
argument_list|)
argument_list|)
expr_stmt|;
name|copyDescriptor
argument_list|(
name|LE_Enabled
argument_list|,
name|TE_Enabled
argument_list|)
expr_stmt|;
name|copyDescriptor
argument_list|(
name|LE_Disabled
argument_list|,
name|TE_Disabled
argument_list|)
expr_stmt|;
name|copyDescriptor
argument_list|(
name|LE_Focused
argument_list|,
name|TE_Focused
argument_list|)
expr_stmt|;
comment|//! [2]
block|}
end_constructor
begin_comment
comment|//! [0]
end_comment
begin_destructor
DECL|function|~QCustomPixmapStyle
name|QCustomPixmapStyle
operator|::
name|~
name|QCustomPixmapStyle
parameter_list|()
block|{ }
end_destructor
end_unit
