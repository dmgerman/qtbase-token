begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the documentation of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of Digia Plc and its Subsidiary(-ies) nor the names **     of its contributors may be used to endorse or promote products derived **     from this software without specific prior written permission. ** ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_comment
comment|//! [0]
end_comment
begin_decl_stmt
DECL|variable|scene
name|QGraphicsScene
name|scene
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|rect
name|QGraphicsRectItem
modifier|*
name|rect
init|=
name|scene
operator|.
name|addRect
argument_list|(
name|QRectF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|item
name|QGraphicsItem
modifier|*
name|item
init|=
name|scene
operator|.
name|itemAt
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
decl_stmt|;
end_decl_stmt
begin_comment
comment|// item == rect
end_comment
begin_comment
comment|//! [0]
end_comment
begin_comment
comment|//! [1]
end_comment
begin_decl_stmt
DECL|variable|scene
name|QGraphicsScene
name|scene
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|variable|scene
name|myPopulateScene
argument_list|(
operator|&
name|scene
argument_list|)
expr_stmt|;
end_expr_stmt
begin_decl_stmt
DECL|variable|scene
name|QGraphicsView
name|view
argument_list|(
operator|&
name|scene
argument_list|)
decl_stmt|;
end_decl_stmt
begin_expr_stmt
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
end_expr_stmt
begin_comment
comment|//! [1]
end_comment
begin_comment
comment|//! [2]
end_comment
begin_class
DECL|class|View
class|class
name|View
super|:
specifier|public
name|QGraphicsView
block|{
name|Q_OBJECT
operator|...
specifier|public
name|slots
operator|:
DECL|function|zoomIn
name|void
name|zoomIn
argument_list|()
block|{
name|scale
argument_list|(
literal|1.2
argument_list|,
literal|1.2
argument_list|)
block|; }
DECL|function|zoomOut
name|void
name|zoomOut
argument_list|()
block|{
name|scale
argument_list|(
literal|1
operator|/
literal|1.2
argument_list|,
literal|1
operator|/
literal|1.2
argument_list|)
block|; }
DECL|function|rotateLeft
name|void
name|rotateLeft
argument_list|()
block|{
name|rotate
argument_list|(
operator|-
literal|10
argument_list|)
block|; }
DECL|function|rotateRight
name|void
name|rotateRight
argument_list|()
block|{
name|rotate
argument_list|(
literal|10
argument_list|)
block|; }
operator|...
block|}
class|;
end_class
begin_comment
comment|//! [2]
end_comment
begin_comment
comment|//! [3]
end_comment
begin_decl_stmt
DECL|variable|scene
name|QGraphicsScene
name|scene
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|variable|black
name|scene
operator|.
name|addRect
argument_list|(
name|QRectF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|200
argument_list|)
argument_list|,
name|QPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
argument_list|,
name|QBrush
argument_list|(
name|Qt
operator|::
name|green
argument_list|)
argument_list|)
expr_stmt|;
end_expr_stmt
begin_decl_stmt
DECL|variable|printer
name|QPrinter
name|printer
decl_stmt|;
end_decl_stmt
begin_if
if|if
condition|(
name|QPrintDialog
argument_list|(
operator|&
name|printer
argument_list|)
operator|.
name|exec
argument_list|()
operator|==
name|QDialog
operator|::
name|Accepted
condition|)
block|{
name|QPainter
name|painter
argument_list|(
operator|&
name|printer
argument_list|)
decl_stmt|;
name|painter
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|)
expr_stmt|;
name|scene
operator|.
name|render
argument_list|(
operator|&
name|painter
argument_list|)
expr_stmt|;
block|}
end_if
begin_comment
comment|//! [3]
end_comment
begin_comment
comment|//! [4]
end_comment
begin_decl_stmt
DECL|variable|scene
name|QGraphicsScene
name|scene
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|variable|black
name|scene
operator|.
name|addRect
argument_list|(
name|QRectF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|200
argument_list|)
argument_list|,
name|QPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
argument_list|,
name|QBrush
argument_list|(
name|Qt
operator|::
name|green
argument_list|)
argument_list|)
expr_stmt|;
end_expr_stmt
begin_decl_stmt
DECL|variable|pixmap
name|QPixmap
name|pixmap
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|pixmap
name|QPainter
name|painter
argument_list|(
operator|&
name|pixmap
argument_list|)
decl_stmt|;
end_decl_stmt
begin_expr_stmt
name|painter
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|scene
operator|.
name|render
argument_list|(
operator|&
name|painter
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|painter
operator|.
name|end
argument_list|()
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|pixmap
operator|.
name|save
argument_list|(
literal|"scene.png"
argument_list|)
expr_stmt|;
end_expr_stmt
begin_comment
comment|//! [4]
end_comment
begin_comment
comment|//! [5]
end_comment
begin_function
DECL|function|mousePressEvent
name|void
name|CustomItem
operator|::
name|mousePressEvent
parameter_list|(
name|QGraphicsSceneMouseEvent
modifier|*
name|event
parameter_list|)
block|{
name|QMimeData
modifier|*
name|data
init|=
operator|new
name|QMimeData
decl_stmt|;
name|data
operator|->
name|setColor
argument_list|(
name|Qt
operator|::
name|green
argument_list|)
expr_stmt|;
name|QDrag
modifier|*
name|drag
init|=
operator|new
name|QDrag
argument_list|(
name|event
operator|->
name|widget
argument_list|()
argument_list|)
decl_stmt|;
name|drag
operator|->
name|setMimeData
argument_list|(
name|data
argument_list|)
expr_stmt|;
name|drag
operator|->
name|start
argument_list|()
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [5]
end_comment
begin_comment
comment|//! [6]
end_comment
begin_decl_stmt
DECL|variable|scene
name|QGraphicsView
name|view
argument_list|(
operator|&
name|scene
argument_list|)
decl_stmt|;
end_decl_stmt
begin_expr_stmt
name|view
operator|.
name|setViewport
argument_list|(
operator|new
name|QGLWidget
argument_list|(
name|QGLFormat
argument_list|(
name|QGL
operator|::
name|SampleBuffers
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
end_expr_stmt
begin_comment
comment|//! [6]
end_comment
end_unit
