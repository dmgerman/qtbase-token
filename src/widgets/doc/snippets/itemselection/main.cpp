begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the documentation of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of The Qt Company Ltd and its Subsidiary(-ies) nor the **     names of its contributors may be used to endorse or promote products **     derived from this software without specific prior written permission. ** ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_comment
comment|/*   main.cpp    A simple example that shows how selections can be used directly on a model.   It shows the result of some selections made using a table view. */
end_comment
begin_include
include|#
directive|include
file|<QApplication>
end_include
begin_include
include|#
directive|include
file|<QItemSelection>
end_include
begin_include
include|#
directive|include
file|<QItemSelectionModel>
end_include
begin_include
include|#
directive|include
file|<QTableView>
end_include
begin_include
include|#
directive|include
file|"model.h"
end_include
begin_function
DECL|function|main
name|int
name|main
parameter_list|(
name|int
name|argc
parameter_list|,
name|char
modifier|*
name|argv
index|[]
parameter_list|)
block|{
name|QApplication
name|app
argument_list|(
name|argc
argument_list|,
name|argv
argument_list|)
decl_stmt|;
comment|//! [0]
name|TableModel
modifier|*
name|model
init|=
operator|new
name|TableModel
argument_list|(
literal|8
argument_list|,
literal|4
argument_list|,
operator|&
name|app
argument_list|)
decl_stmt|;
name|QTableView
modifier|*
name|table
init|=
operator|new
name|QTableView
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|table
operator|->
name|setModel
argument_list|(
name|model
argument_list|)
expr_stmt|;
name|QItemSelectionModel
modifier|*
name|selectionModel
init|=
name|table
operator|->
name|selectionModel
argument_list|()
decl_stmt|;
comment|//! [0] //! [1]
name|QModelIndex
name|topLeft
decl_stmt|;
name|QModelIndex
name|bottomRight
decl_stmt|;
name|topLeft
operator|=
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|bottomRight
operator|=
name|model
operator|->
name|index
argument_list|(
literal|5
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
comment|//! [1]
comment|//! [2]
name|QItemSelection
name|selection
argument_list|(
name|topLeft
argument_list|,
name|bottomRight
argument_list|)
decl_stmt|;
name|selectionModel
operator|->
name|select
argument_list|(
name|selection
argument_list|,
name|QItemSelectionModel
operator|::
name|Select
argument_list|)
expr_stmt|;
comment|//! [2]
comment|//! [3]
name|QItemSelection
name|toggleSelection
decl_stmt|;
name|topLeft
operator|=
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|bottomRight
operator|=
name|model
operator|->
name|index
argument_list|(
literal|7
argument_list|,
literal|3
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|toggleSelection
operator|.
name|select
argument_list|(
name|topLeft
argument_list|,
name|bottomRight
argument_list|)
expr_stmt|;
name|selectionModel
operator|->
name|select
argument_list|(
name|toggleSelection
argument_list|,
name|QItemSelectionModel
operator|::
name|Toggle
argument_list|)
expr_stmt|;
comment|//! [3]
comment|//! [4]
name|QItemSelection
name|columnSelection
decl_stmt|;
name|topLeft
operator|=
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|bottomRight
operator|=
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|columnSelection
operator|.
name|select
argument_list|(
name|topLeft
argument_list|,
name|bottomRight
argument_list|)
expr_stmt|;
name|selectionModel
operator|->
name|select
argument_list|(
name|columnSelection
argument_list|,
name|QItemSelectionModel
operator|::
name|Select
operator||
name|QItemSelectionModel
operator|::
name|Columns
argument_list|)
expr_stmt|;
name|QItemSelection
name|rowSelection
decl_stmt|;
name|topLeft
operator|=
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|bottomRight
operator|=
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|rowSelection
operator|.
name|select
argument_list|(
name|topLeft
argument_list|,
name|bottomRight
argument_list|)
expr_stmt|;
name|selectionModel
operator|->
name|select
argument_list|(
name|rowSelection
argument_list|,
name|QItemSelectionModel
operator|::
name|Select
operator||
name|QItemSelectionModel
operator|::
name|Rows
argument_list|)
expr_stmt|;
comment|//! [4]
name|table
operator|->
name|setWindowTitle
argument_list|(
literal|"Selected items in a table model"
argument_list|)
expr_stmt|;
name|table
operator|->
name|show
argument_list|()
expr_stmt|;
name|table
operator|->
name|resize
argument_list|(
literal|460
argument_list|,
literal|280
argument_list|)
expr_stmt|;
return|return
name|app
operator|.
name|exec
argument_list|()
return|;
block|}
end_function
end_unit
