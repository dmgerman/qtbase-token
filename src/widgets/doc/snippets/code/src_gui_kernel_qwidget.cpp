begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the documentation of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of The Qt Company Ltd nor the names of its **     contributors may be used to endorse or promote products derived **     from this software without specific prior written permission. ** ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_comment
comment|//! [0]
end_comment
begin_expr_stmt
name|w
operator|->
name|setWindowState
argument_list|(
name|w
operator|->
name|windowState
argument_list|()
operator|^
name|Qt
operator|::
name|WindowFullScreen
argument_list|)
expr_stmt|;
end_expr_stmt
begin_comment
comment|//! [0]
end_comment
begin_comment
comment|//! [1]
end_comment
begin_expr_stmt
name|w
operator|->
name|setWindowState
argument_list|(
operator|(
name|w
operator|->
name|windowState
argument_list|()
operator|&
operator|~
name|Qt
operator|::
name|WindowMinimized
operator|)
operator||
name|Qt
operator|::
name|WindowActive
argument_list|)
expr_stmt|;
end_expr_stmt
begin_comment
comment|//! [1]
end_comment
begin_comment
comment|//! [2]
end_comment
begin_expr_stmt
name|width
operator|=
name|baseSize
argument_list|()
operator|.
name|width
argument_list|()
operator|+
name|i
operator|*
name|sizeIncrement
argument_list|()
operator|.
name|width
argument_list|()
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|height
operator|=
name|baseSize
argument_list|()
operator|.
name|height
argument_list|()
operator|+
name|j
operator|*
name|sizeIncrement
argument_list|()
operator|.
name|height
argument_list|()
expr_stmt|;
end_expr_stmt
begin_comment
comment|//! [2]
end_comment
begin_comment
comment|//! [3]
end_comment
begin_expr_stmt
name|aWidget
operator|->
name|window
argument_list|()
operator|->
name|setWindowTitle
argument_list|(
literal|"New Window Title"
argument_list|)
expr_stmt|;
end_expr_stmt
begin_comment
comment|//! [3]
end_comment
begin_comment
comment|//! [4]
end_comment
begin_decl_stmt
name|QFont
name|font
argument_list|(
literal|"Helvetica"
argument_list|,
literal|12
argument_list|,
name|QFont
operator|::
name|Bold
argument_list|)
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|variable|font
name|setFont
argument_list|(
name|font
argument_list|)
expr_stmt|;
end_expr_stmt
begin_comment
comment|//! [4]
end_comment
begin_comment
comment|//! [5]
end_comment
begin_decl_stmt
DECL|variable|font
name|QFont
name|font
decl_stmt|;
end_decl_stmt
begin_expr_stmt
name|font
operator|.
name|setBold
argument_list|(
literal|false
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
DECL|variable|font
name|setFont
argument_list|(
name|font
argument_list|)
expr_stmt|;
end_expr_stmt
begin_comment
comment|//! [5]
end_comment
begin_comment
comment|//! [6]
end_comment
begin_expr_stmt
DECL|variable|IBeamCursor
name|setCursor
argument_list|(
name|Qt
operator|::
name|IBeamCursor
argument_list|)
expr_stmt|;
end_expr_stmt
begin_comment
comment|//! [6]
end_comment
begin_comment
comment|//! [7]
end_comment
begin_decl_stmt
name|QPixmap
name|pixmap
argument_list|(
name|widget
operator|->
name|size
argument_list|()
argument_list|)
decl_stmt|;
end_decl_stmt
begin_expr_stmt
name|widget
operator|->
name|render
argument_list|(
operator|&
name|pixmap
argument_list|)
expr_stmt|;
end_expr_stmt
begin_comment
comment|//! [7]
end_comment
begin_comment
comment|//! [8]
end_comment
begin_function_decl
name|QPainter
name|painter
parameter_list|(
name|this
parameter_list|)
function_decl|;
end_function_decl
begin_expr_stmt
operator|...
name|painter
operator|.
name|end
argument_list|()
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|myWidget
operator|->
name|render
argument_list|(
name|this
argument_list|)
expr_stmt|;
end_expr_stmt
begin_comment
comment|//! [8]
end_comment
begin_comment
comment|//! [9]
end_comment
begin_expr_stmt
name|setTabOrder
argument_list|(
name|a
argument_list|,
name|b
argument_list|)
expr_stmt|;
end_expr_stmt
begin_comment
comment|// a to b
end_comment
begin_expr_stmt
name|setTabOrder
argument_list|(
name|b
argument_list|,
name|c
argument_list|)
expr_stmt|;
end_expr_stmt
begin_comment
comment|// a to b to c
end_comment
begin_expr_stmt
name|setTabOrder
argument_list|(
name|c
argument_list|,
name|d
argument_list|)
expr_stmt|;
end_expr_stmt
begin_comment
comment|// a to b to c to d
end_comment
begin_comment
comment|//! [9]
end_comment
begin_comment
comment|//! [10]
end_comment
begin_comment
comment|// WRONG
end_comment
begin_expr_stmt
name|setTabOrder
argument_list|(
name|c
argument_list|,
name|d
argument_list|)
expr_stmt|;
end_expr_stmt
begin_comment
comment|// c to d
end_comment
begin_expr_stmt
name|setTabOrder
argument_list|(
name|a
argument_list|,
name|b
argument_list|)
expr_stmt|;
end_expr_stmt
begin_comment
comment|// a to b AND c to d
end_comment
begin_expr_stmt
name|setTabOrder
argument_list|(
name|b
argument_list|,
name|c
argument_list|)
expr_stmt|;
end_expr_stmt
begin_comment
comment|// a to b to c, but not c to d
end_comment
begin_comment
comment|//! [10]
end_comment
begin_comment
comment|//! [11]
end_comment
begin_function
DECL|function|closeEvent
name|void
name|MyWidget
operator|::
name|closeEvent
parameter_list|(
name|QCloseEvent
modifier|*
name|event
parameter_list|)
block|{
name|QSettings
name|settings
argument_list|(
literal|"MyCompany"
argument_list|,
literal|"MyApp"
argument_list|)
decl_stmt|;
name|settings
operator|.
name|setValue
argument_list|(
literal|"geometry"
argument_list|,
name|saveGeometry
argument_list|()
argument_list|)
expr_stmt|;
name|QWidget
operator|::
name|closeEvent
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [11]
end_comment
begin_comment
comment|//! [12]
end_comment
begin_decl_stmt
name|QSettings
name|settings
argument_list|(
literal|"MyCompany"
argument_list|,
literal|"MyApp"
argument_list|)
decl_stmt|;
end_decl_stmt
begin_expr_stmt
name|myWidget
operator|->
name|restoreGeometry
argument_list|(
name|settings
operator|.
name|value
argument_list|(
literal|"myWidget/geometry"
argument_list|)
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
end_expr_stmt
begin_comment
comment|//! [12]
end_comment
begin_comment
comment|//! [13]
end_comment
begin_expr_stmt
DECL|variable|false
name|setUpdatesEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|bigVisualChanges
argument_list|()
expr_stmt|;
end_expr_stmt
begin_expr_stmt
DECL|variable|true
name|setUpdatesEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
end_expr_stmt
begin_comment
comment|//! [13]
end_comment
begin_comment
comment|//! [14]
end_comment
begin_expr_stmt
operator|...
specifier|extern
name|void
name|qt_x11_set_global_double_buffer
argument_list|(
name|bool
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
DECL|variable|false
name|qt_x11_set_global_double_buffer
argument_list|(
literal|false
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
operator|...
end_expr_stmt
begin_comment
comment|//! [14]
end_comment
end_unit
