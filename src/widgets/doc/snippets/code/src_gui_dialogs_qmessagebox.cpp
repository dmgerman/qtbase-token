begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the documentation of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of The Qt Company Ltd and its Subsidiary(-ies) nor the **     names of its contributors may be used to endorse or promote products **     derived from this software without specific prior written permission. ** ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_comment
comment|//! [0]
end_comment
begin_decl_stmt
DECL|variable|ret
name|int
name|ret
init|=
name|QMessageBox
operator|::
name|warning
argument_list|(
name|this
argument_list|,
name|tr
argument_list|(
literal|"My Application"
argument_list|)
argument_list|,
name|tr
argument_list|(
literal|"The document has been modified.\n"
literal|"Do you want to save your changes?"
argument_list|)
argument_list|,
name|QMessageBox
operator|::
name|Save
operator||
name|QMessageBox
operator|::
name|Discard
operator||
name|QMessageBox
operator|::
name|Cancel
argument_list|,
name|QMessageBox
operator|::
name|Save
argument_list|)
decl_stmt|;
end_decl_stmt
begin_comment
comment|//! [0]
end_comment
begin_comment
comment|//! [1]
end_comment
begin_decl_stmt
DECL|variable|msgBox
name|QMessageBox
name|msgBox
decl_stmt|;
end_decl_stmt
begin_expr_stmt
name|msgBox
operator|.
name|setStandardButtons
argument_list|(
name|QMessageBox
operator|::
name|Yes
operator||
name|QMessageBox
operator|::
name|No
argument_list|)
expr_stmt|;
end_expr_stmt
begin_switch
switch|switch
condition|(
name|msgBox
operator|.
name|exec
argument_list|()
condition|)
block|{
case|case
name|QMessageBox
operator|::
name|Yes
case|:
comment|// yes was clicked
break|break;
case|case
name|QMessageBox
operator|::
name|No
case|:
comment|// no was clicked
break|break;
default|default:
comment|// should never be reached
break|break;
block|}
end_switch
begin_comment
comment|//! [1]
end_comment
begin_comment
comment|//! [2]
end_comment
begin_decl_stmt
DECL|variable|msgBox
name|QMessageBox
name|msgBox
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|connectButton
name|QPushButton
modifier|*
name|connectButton
init|=
name|msgBox
operator|.
name|addButton
argument_list|(
name|tr
argument_list|(
literal|"Connect"
argument_list|)
argument_list|,
name|QMessageBox
operator|::
name|ActionRole
argument_list|)
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|abortButton
name|QPushButton
modifier|*
name|abortButton
init|=
name|msgBox
operator|.
name|addButton
argument_list|(
name|QMessageBox
operator|::
name|Abort
argument_list|)
decl_stmt|;
end_decl_stmt
begin_expr_stmt
name|msgBox
operator|.
name|exec
argument_list|()
expr_stmt|;
end_expr_stmt
begin_if
if|if
condition|(
name|msgBox
operator|.
name|clickedButton
argument_list|()
operator|==
name|connectButton
condition|)
block|{
comment|// connect
block|}
elseif|else
if|if
condition|(
name|msgBox
operator|.
name|clickedButton
argument_list|()
operator|==
name|abortButton
condition|)
block|{
comment|// abort
block|}
end_if
begin_comment
comment|//! [2]
end_comment
begin_comment
comment|//! [3]
end_comment
begin_function_decl
name|QMessageBox
name|messageBox
parameter_list|(
name|this
parameter_list|)
function_decl|;
end_function_decl
begin_decl_stmt
DECL|variable|disconnectButton
name|QAbstractButton
modifier|*
name|disconnectButton
init|=
name|messageBox
operator|.
name|addButton
argument_list|(
name|tr
argument_list|(
literal|"Disconnect"
argument_list|)
argument_list|,
name|QMessageBox
operator|::
name|ActionRole
argument_list|)
decl_stmt|;
end_decl_stmt
begin_expr_stmt
operator|...
name|messageBox
operator|.
name|exec
argument_list|()
expr_stmt|;
end_expr_stmt
begin_if
if|if
condition|(
name|messageBox
operator|.
name|clickedButton
argument_list|()
operator|==
name|disconnectButton
condition|)
block|{
operator|...
block|}
end_if
begin_comment
comment|//! [3]
end_comment
begin_comment
comment|//! [4]
end_comment
begin_include
include|#
directive|include
file|<QApplication>
end_include
begin_include
include|#
directive|include
file|<QMessageBox>
end_include
begin_function
DECL|function|main
name|int
name|main
parameter_list|(
name|int
name|argc
parameter_list|,
name|char
modifier|*
name|argv
index|[]
parameter_list|)
block|{
name|QT_REQUIRE_VERSION
argument_list|(
argument|argc
argument_list|,
argument|argv
argument_list|,
literal|"4.0.2"
argument_list|)
name|QApplication
name|app
argument_list|(
name|argc
argument_list|,
name|argv
argument_list|)
decl_stmt|;
operator|...
return|return
name|app
operator|.
name|exec
argument_list|()
return|;
block|}
end_function
begin_comment
comment|//! [4]
end_comment
begin_comment
comment|//! [5]
end_comment
begin_decl_stmt
DECL|variable|msgBox
name|QMessageBox
name|msgBox
decl_stmt|;
end_decl_stmt
begin_expr_stmt
name|msgBox
operator|.
name|setText
argument_list|(
literal|"The document has been modified."
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|msgBox
operator|.
name|exec
argument_list|()
expr_stmt|;
end_expr_stmt
begin_comment
comment|//! [5]
end_comment
begin_comment
comment|//! [6]
end_comment
begin_decl_stmt
DECL|variable|msgBox
name|QMessageBox
name|msgBox
decl_stmt|;
end_decl_stmt
begin_expr_stmt
name|msgBox
operator|.
name|setText
argument_list|(
literal|"The document has been modified."
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|msgBox
operator|.
name|setInformativeText
argument_list|(
literal|"Do you want to save your changes?"
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|msgBox
operator|.
name|setStandardButtons
argument_list|(
name|QMessageBox
operator|::
name|Save
operator||
name|QMessageBox
operator|::
name|Discard
operator||
name|QMessageBox
operator|::
name|Cancel
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|msgBox
operator|.
name|setDefaultButton
argument_list|(
name|QMessageBox
operator|::
name|Save
argument_list|)
expr_stmt|;
end_expr_stmt
begin_decl_stmt
DECL|variable|ret
name|int
name|ret
init|=
name|msgBox
operator|.
name|exec
argument_list|()
decl_stmt|;
end_decl_stmt
begin_comment
comment|//! [6]
end_comment
begin_comment
comment|//! [7]
end_comment
begin_switch
switch|switch
condition|(
name|ret
condition|)
block|{
case|case
name|QMessageBox
operator|::
name|Save
case|:
comment|// Save was clicked
break|break;
case|case
name|QMessageBox
operator|::
name|Discard
case|:
comment|// Don't Save was clicked
break|break;
case|case
name|QMessageBox
operator|::
name|Cancel
case|:
comment|// Cancel was clicked
break|break;
default|default:
comment|// should never be reached
break|break;
block|}
end_switch
begin_comment
comment|//! [7]
end_comment
begin_comment
comment|//! [9]
end_comment
begin_function_decl
name|QMessageBox
name|msgBox
parameter_list|(
name|this
parameter_list|)
function_decl|;
end_function_decl
begin_expr_stmt
name|msgBox
operator|.
name|setText
argument_list|(
name|tr
argument_list|(
literal|"The document has been modified.\n"
literal|"Do you want to save your changes?"
argument_list|)
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|msgBox
operator|.
name|setStandardButtons
argument_list|(
name|QMessageBox
operator|::
name|Save
operator||
name|QMessageBox
operator|::
name|Discard
operator||
name|QMessageBox
operator|::
name|Cancel
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|msgBox
operator|.
name|setDefaultButton
argument_list|(
name|QMessageBox
operator|::
name|Save
argument_list|)
expr_stmt|;
end_expr_stmt
begin_comment
comment|//! [9]
end_comment
end_unit
