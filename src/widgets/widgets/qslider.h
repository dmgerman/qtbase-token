begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the QtWidgets module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 3 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL3 included in the ** packaging of this file. Please review the following information to ** ensure the GNU Lesser General Public License version 3 requirements ** will be met: https://www.gnu.org/licenses/lgpl-3.0.html. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 2.0 or (at your option) the GNU General ** Public license version 3 or any later version approved by the KDE Free ** Qt Foundation. The licenses are as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL2 and LICENSE.GPL3 ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-2.0.html and ** https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QSLIDER_H
end_ifndef
begin_define
DECL|macro|QSLIDER_H
define|#
directive|define
name|QSLIDER_H
end_define
begin_include
include|#
directive|include
file|<QtWidgets/qabstractslider.h>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
ifndef|#
directive|ifndef
name|QT_NO_SLIDER
DECL|variable|QSliderPrivate
name|class
name|QSliderPrivate
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QStyleOptionSlider
name|class
name|QStyleOptionSlider
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|Q_WIDGETS_EXPORT
name|QSlider
range|:
name|public
name|QAbstractSlider
block|{
name|Q_OBJECT
name|Q_PROPERTY
argument_list|(
argument|TickPosition tickPosition READ tickPosition WRITE setTickPosition
argument_list|)
name|Q_PROPERTY
argument_list|(
argument|int tickInterval READ tickInterval WRITE setTickInterval
argument_list|)
name|public
operator|:
expr|enum
name|TickPosition
block|{
name|NoTicks
operator|=
literal|0
block|,
name|TicksAbove
operator|=
literal|1
block|,
name|TicksLeft
operator|=
name|TicksAbove
block|,
name|TicksBelow
operator|=
literal|2
block|,
name|TicksRight
operator|=
name|TicksBelow
block|,
name|TicksBothSides
operator|=
literal|3
block|}
block|;
name|Q_ENUM
argument_list|(
argument|TickPosition
argument_list|)
name|explicit
name|QSlider
argument_list|(
name|QWidget
operator|*
name|parent
operator|=
name|Q_NULLPTR
argument_list|)
block|;
name|explicit
name|QSlider
argument_list|(
argument|Qt::Orientation orientation
argument_list|,
argument|QWidget *parent = Q_NULLPTR
argument_list|)
block|;
operator|~
name|QSlider
argument_list|()
block|;
name|QSize
name|sizeHint
argument_list|()
specifier|const
name|Q_DECL_OVERRIDE
block|;
name|QSize
name|minimumSizeHint
argument_list|()
specifier|const
name|Q_DECL_OVERRIDE
block|;
name|void
name|setTickPosition
argument_list|(
argument|TickPosition position
argument_list|)
block|;
name|TickPosition
name|tickPosition
argument_list|()
specifier|const
block|;
name|void
name|setTickInterval
argument_list|(
argument|int ti
argument_list|)
block|;
name|int
name|tickInterval
argument_list|()
specifier|const
block|;
name|bool
name|event
argument_list|(
argument|QEvent *event
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|protected
operator|:
name|void
name|paintEvent
argument_list|(
argument|QPaintEvent *ev
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|void
name|mousePressEvent
argument_list|(
argument|QMouseEvent *ev
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|void
name|mouseReleaseEvent
argument_list|(
argument|QMouseEvent *ev
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|void
name|mouseMoveEvent
argument_list|(
argument|QMouseEvent *ev
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|void
name|initStyleOption
argument_list|(
argument|QStyleOptionSlider *option
argument_list|)
specifier|const
block|;
name|private
operator|:
name|friend
name|Q_WIDGETS_EXPORT
name|QStyleOptionSlider
name|qt_qsliderStyleOption
argument_list|(
name|QSlider
operator|*
name|slider
argument_list|)
block|;
name|Q_DISABLE_COPY
argument_list|(
argument|QSlider
argument_list|)
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QSlider
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_SLIDER
end_comment
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QSLIDER_H
end_comment
end_unit
