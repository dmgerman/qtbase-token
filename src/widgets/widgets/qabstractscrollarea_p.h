begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QABSTRACTSCROLLAREA_P_H
end_ifndef
begin_define
DECL|macro|QABSTRACTSCROLLAREA_P_H
define|#
directive|define
name|QABSTRACTSCROLLAREA_P_H
end_define
begin_comment
comment|//
end_comment
begin_comment
comment|//  W A R N I N G
end_comment
begin_comment
comment|//  -------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// This file is not part of the Qt API.  It exists purely as an
end_comment
begin_comment
comment|// implementation detail.  This header file may change from version to
end_comment
begin_comment
comment|// version without notice, or even be removed.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// We mean it.
end_comment
begin_comment
comment|//
end_comment
begin_include
include|#
directive|include
file|"private/qframe_p.h"
end_include
begin_include
include|#
directive|include
file|"qabstractscrollarea.h"
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
ifndef|#
directive|ifndef
name|QT_NO_SCROLLAREA
DECL|variable|QScrollBar
name|class
name|QScrollBar
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QAbstractScrollAreaScrollBarContainer
name|class
name|QAbstractScrollAreaScrollBarContainer
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|Q_WIDGETS_EXPORT
name|QAbstractScrollAreaPrivate
range|:
name|public
name|QFramePrivate
block|{
name|Q_DECLARE_PUBLIC
argument_list|(
argument|QAbstractScrollArea
argument_list|)
name|public
operator|:
name|QAbstractScrollAreaPrivate
argument_list|()
block|;
name|void
name|replaceScrollBar
argument_list|(
argument|QScrollBar *scrollBar
argument_list|,
argument|Qt::Orientation orientation
argument_list|)
block|;
name|QAbstractScrollAreaScrollBarContainer
operator|*
name|scrollBarContainers
index|[
name|Qt
operator|::
name|Vertical
operator|+
literal|1
index|]
block|;
name|QScrollBar
operator|*
name|hbar
block|,
operator|*
name|vbar
block|;
name|Qt
operator|::
name|ScrollBarPolicy
name|vbarpolicy
block|,
name|hbarpolicy
block|;
name|QWidget
operator|*
name|viewport
block|;
name|QWidget
operator|*
name|cornerWidget
block|;
name|QRect
name|cornerPaintingRect
block|;
ifdef|#
directive|ifdef
name|Q_WS_MAC
name|QRect
name|reverseCornerPaintingRect
block|;
endif|#
directive|endif
name|int
name|left
block|,
name|top
block|,
name|right
block|,
name|bottom
block|;
comment|// viewport margin
name|int
name|xoffset
block|,
name|yoffset
block|;
name|QPoint
name|overshoot
block|;
name|void
name|init
argument_list|()
block|;
name|void
name|layoutChildren
argument_list|()
block|;
comment|// ### Fix for 4.4, talk to Bjoern E or Girish.
name|virtual
name|void
name|scrollBarPolicyChanged
argument_list|(
argument|Qt::Orientation
argument_list|,
argument|Qt::ScrollBarPolicy
argument_list|)
block|{}
name|bool
name|canStartScrollingAt
argument_list|(
specifier|const
name|QPoint
operator|&
name|startPos
argument_list|)
block|;
name|void
name|_q_hslide
argument_list|(
name|int
argument_list|)
block|;
name|void
name|_q_vslide
argument_list|(
name|int
argument_list|)
block|;
name|void
name|_q_showOrHideScrollBars
argument_list|()
block|;
name|virtual
name|QPoint
name|contentsOffset
argument_list|()
specifier|const
block|;
specifier|inline
name|bool
name|viewportEvent
argument_list|(
argument|QEvent *event
argument_list|)
block|{
return|return
name|q_func
argument_list|()
operator|->
name|viewportEvent
argument_list|(
name|event
argument_list|)
return|;
block|}
name|QScopedPointer
operator|<
name|QObject
operator|>
name|viewportFilter
block|;
ifdef|#
directive|ifdef
name|Q_WS_WIN
name|bool
name|singleFingerPanEnabled
block|;
name|void
name|setSingleFingerPanEnabled
argument_list|(
argument|bool on = true
argument_list|)
block|;
endif|#
directive|endif
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|QAbstractScrollAreaFilter
range|:
name|public
name|QObject
block|{
name|Q_OBJECT
name|public
operator|:
name|QAbstractScrollAreaFilter
argument_list|(
name|QAbstractScrollAreaPrivate
operator|*
name|p
argument_list|)
operator|:
name|d
argument_list|(
argument|p
argument_list|)
block|{
name|setObjectName
argument_list|(
name|QLatin1String
argument_list|(
literal|"qt_abstractscrollarea_filter"
argument_list|)
argument_list|)
block|; }
name|bool
name|eventFilter
argument_list|(
argument|QObject *o
argument_list|,
argument|QEvent *e
argument_list|)
block|{
return|return
operator|(
name|o
operator|==
name|d
operator|->
name|viewport
operator|?
name|d
operator|->
name|viewportEvent
argument_list|(
name|e
argument_list|)
operator|:
name|false
operator|)
return|;
block|}
name|private
operator|:
name|QAbstractScrollAreaPrivate
operator|*
name|d
block|; }
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QBoxLayout
name|class
name|QBoxLayout
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|QAbstractScrollAreaScrollBarContainer
range|:
name|public
name|QWidget
block|{
name|public
operator|:
expr|enum
name|LogicalPosition
block|{
name|LogicalLeft
operator|=
literal|1
block|,
name|LogicalRight
operator|=
literal|2
block|}
block|;
name|QAbstractScrollAreaScrollBarContainer
argument_list|(
argument|Qt::Orientation orientation
argument_list|,
argument|QWidget *parent
argument_list|)
block|;
name|void
name|addWidget
argument_list|(
argument|QWidget *widget
argument_list|,
argument|LogicalPosition position
argument_list|)
block|;
name|QWidgetList
name|widgets
argument_list|(
argument|LogicalPosition position
argument_list|)
block|;
name|void
name|removeWidget
argument_list|(
name|QWidget
operator|*
name|widget
argument_list|)
block|;
name|QScrollBar
operator|*
name|scrollBar
block|;
name|QBoxLayout
operator|*
name|layout
block|;
name|private
operator|:
name|int
name|scrollBarLayoutIndex
argument_list|()
specifier|const
block|;
name|Qt
operator|::
name|Orientation
name|orientation
block|; }
decl_stmt|;
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_SCROLLAREA
end_comment
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QABSTRACTSCROLLAREA_P_H
end_comment
end_unit
