begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the QtWidgets module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 3 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL3 included in the ** packaging of this file. Please review the following information to ** ensure the GNU Lesser General Public License version 3 requirements ** will be met: https://www.gnu.org/licenses/lgpl-3.0.html. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 2.0 or (at your option) the GNU General ** Public license version 3 or any later version approved by the KDE Free ** Qt Foundation. The licenses are as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL2 and LICENSE.GPL3 ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-2.0.html and ** https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QLCDNUMBER_H
end_ifndef
begin_define
DECL|macro|QLCDNUMBER_H
define|#
directive|define
name|QLCDNUMBER_H
end_define
begin_include
include|#
directive|include
file|<QtWidgets/qframe.h>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
ifndef|#
directive|ifndef
name|QT_NO_LCDNUMBER
DECL|variable|QLCDNumberPrivate
name|class
name|QLCDNumberPrivate
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|Q_WIDGETS_EXPORT
name|QLCDNumber
range|:
name|public
name|QFrame
comment|// LCD number widget
block|{
name|Q_OBJECT
name|Q_PROPERTY
argument_list|(
argument|bool smallDecimalPoint READ smallDecimalPoint WRITE setSmallDecimalPoint
argument_list|)
name|Q_PROPERTY
argument_list|(
argument|int digitCount READ digitCount WRITE setDigitCount
argument_list|)
name|Q_PROPERTY
argument_list|(
argument|Mode mode READ mode WRITE setMode
argument_list|)
name|Q_PROPERTY
argument_list|(
argument|SegmentStyle segmentStyle READ segmentStyle WRITE setSegmentStyle
argument_list|)
name|Q_PROPERTY
argument_list|(
argument|double value READ value WRITE display
argument_list|)
name|Q_PROPERTY
argument_list|(
argument|int intValue READ intValue WRITE display
argument_list|)
name|public
operator|:
name|explicit
name|QLCDNumber
argument_list|(
name|QWidget
operator|*
name|parent
operator|=
name|Q_NULLPTR
argument_list|)
block|;
name|explicit
name|QLCDNumber
argument_list|(
argument|uint numDigits
argument_list|,
argument|QWidget* parent = Q_NULLPTR
argument_list|)
block|;
operator|~
name|QLCDNumber
argument_list|()
block|;      enum
name|Mode
block|{
name|Hex
block|,
name|Dec
block|,
name|Oct
block|,
name|Bin
block|}
block|;
name|Q_ENUM
argument_list|(
name|Mode
argument_list|)
expr|enum
name|SegmentStyle
block|{
name|Outline
block|,
name|Filled
block|,
name|Flat
block|}
block|;
name|Q_ENUM
argument_list|(
argument|SegmentStyle
argument_list|)
name|bool
name|smallDecimalPoint
argument_list|()
specifier|const
block|;
name|int
name|digitCount
argument_list|()
specifier|const
block|;
name|void
name|setDigitCount
argument_list|(
argument|int nDigits
argument_list|)
block|;
name|bool
name|checkOverflow
argument_list|(
argument|double num
argument_list|)
specifier|const
block|;
name|bool
name|checkOverflow
argument_list|(
argument|int num
argument_list|)
specifier|const
block|;
name|Mode
name|mode
argument_list|()
specifier|const
block|;
name|void
name|setMode
argument_list|(
name|Mode
argument_list|)
block|;
name|SegmentStyle
name|segmentStyle
argument_list|()
specifier|const
block|;
name|void
name|setSegmentStyle
argument_list|(
name|SegmentStyle
argument_list|)
block|;
name|double
name|value
argument_list|()
specifier|const
block|;
name|int
name|intValue
argument_list|()
specifier|const
block|;
name|QSize
name|sizeHint
argument_list|()
specifier|const
name|Q_DECL_OVERRIDE
block|;
name|public
name|Q_SLOTS
operator|:
name|void
name|display
argument_list|(
specifier|const
name|QString
operator|&
name|str
argument_list|)
block|;
name|void
name|display
argument_list|(
argument|int num
argument_list|)
block|;
name|void
name|display
argument_list|(
argument|double num
argument_list|)
block|;
name|void
name|setHexMode
argument_list|()
block|;
name|void
name|setDecMode
argument_list|()
block|;
name|void
name|setOctMode
argument_list|()
block|;
name|void
name|setBinMode
argument_list|()
block|;
name|void
name|setSmallDecimalPoint
argument_list|(
name|bool
argument_list|)
block|;
name|Q_SIGNALS
operator|:
name|void
name|overflow
argument_list|()
block|;
name|protected
operator|:
name|bool
name|event
argument_list|(
argument|QEvent *e
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|void
name|paintEvent
argument_list|(
argument|QPaintEvent *
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|public
operator|:
name|private
operator|:
name|Q_DISABLE_COPY
argument_list|(
argument|QLCDNumber
argument_list|)
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QLCDNumber
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_LCDNUMBER
end_comment
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QLCDNUMBER_H
end_comment
end_unit
