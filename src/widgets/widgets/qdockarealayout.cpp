begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** No Commercial Usage ** This file contains pre-release code and may not be distributed. ** You may use this file in accordance with the terms and conditions ** contained in the Technology Preview License Agreement accompanying ** this package. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights.  These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** If you have questions regarding the use of this file, please contact ** Nokia at qt-info@nokia.com. ** ** ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"QtWidgets/qapplication.h"
end_include
begin_include
include|#
directive|include
file|"QtWidgets/qwidget.h"
end_include
begin_include
include|#
directive|include
file|"QtWidgets/qtabbar.h"
end_include
begin_include
include|#
directive|include
file|"QtWidgets/qstyle.h"
end_include
begin_include
include|#
directive|include
file|"QtWidgets/qdesktopwidget.h"
end_include
begin_include
include|#
directive|include
file|"QtCore/qvariant.h"
end_include
begin_include
include|#
directive|include
file|"qdockarealayout_p.h"
end_include
begin_include
include|#
directive|include
file|"qdockwidget.h"
end_include
begin_include
include|#
directive|include
file|"qmainwindow.h"
end_include
begin_include
include|#
directive|include
file|"qwidgetanimator_p.h"
end_include
begin_include
include|#
directive|include
file|"qmainwindowlayout_p.h"
end_include
begin_include
include|#
directive|include
file|"qdockwidget_p.h"
end_include
begin_include
include|#
directive|include
file|<private/qlayoutengine_p.h>
end_include
begin_include
include|#
directive|include
file|<qpainter.h>
end_include
begin_include
include|#
directive|include
file|<qstyleoption.h>
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_DOCKWIDGET
end_ifndef
begin_function_decl
name|QT_BEGIN_NAMESPACE
comment|// qmainwindow.cpp
specifier|extern
name|QMainWindowLayout
modifier|*
name|qt_mainwindow_layout
parameter_list|(
specifier|const
name|QMainWindow
modifier|*
name|window
parameter_list|)
function_decl|;
end_function_decl
begin_enum
DECL|enumerator|StateFlagVisible
DECL|enumerator|StateFlagFloating
enum|enum
block|{
name|StateFlagVisible
init|=
literal|1
block|,
name|StateFlagFloating
init|=
literal|2
block|}
enum|;
end_enum
begin_comment
comment|/****************************************************************************** ** QPlaceHolderItem */
end_comment
begin_constructor
DECL|function|QPlaceHolderItem
name|QPlaceHolderItem
operator|::
name|QPlaceHolderItem
parameter_list|(
name|QWidget
modifier|*
name|w
parameter_list|)
block|{
name|objectName
operator|=
name|w
operator|->
name|objectName
argument_list|()
expr_stmt|;
name|hidden
operator|=
name|w
operator|->
name|isHidden
argument_list|()
expr_stmt|;
name|window
operator|=
name|w
operator|->
name|isWindow
argument_list|()
expr_stmt|;
if|if
condition|(
name|window
condition|)
name|topLevelRect
operator|=
name|w
operator|->
name|geometry
argument_list|()
expr_stmt|;
block|}
end_constructor
begin_comment
comment|/****************************************************************************** ** QDockAreaLayoutItem */
end_comment
begin_constructor
DECL|function|QDockAreaLayoutItem
name|QDockAreaLayoutItem
operator|::
name|QDockAreaLayoutItem
parameter_list|(
name|QLayoutItem
modifier|*
name|_widgetItem
parameter_list|)
member_init_list|:
name|widgetItem
argument_list|(
name|_widgetItem
argument_list|)
member_init_list|,
name|subinfo
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|placeHolderItem
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|pos
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|size
argument_list|(
operator|-
literal|1
argument_list|)
member_init_list|,
name|flags
argument_list|(
name|NoFlags
argument_list|)
block|{ }
end_constructor
begin_constructor
DECL|function|QDockAreaLayoutItem
name|QDockAreaLayoutItem
operator|::
name|QDockAreaLayoutItem
parameter_list|(
name|QDockAreaLayoutInfo
modifier|*
name|_subinfo
parameter_list|)
member_init_list|:
name|widgetItem
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|subinfo
argument_list|(
name|_subinfo
argument_list|)
member_init_list|,
name|placeHolderItem
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|pos
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|size
argument_list|(
operator|-
literal|1
argument_list|)
member_init_list|,
name|flags
argument_list|(
name|NoFlags
argument_list|)
block|{ }
end_constructor
begin_constructor
DECL|function|QDockAreaLayoutItem
name|QDockAreaLayoutItem
operator|::
name|QDockAreaLayoutItem
parameter_list|(
name|QPlaceHolderItem
modifier|*
name|_placeHolderItem
parameter_list|)
member_init_list|:
name|widgetItem
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|subinfo
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|placeHolderItem
argument_list|(
name|_placeHolderItem
argument_list|)
member_init_list|,
name|pos
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|size
argument_list|(
operator|-
literal|1
argument_list|)
member_init_list|,
name|flags
argument_list|(
name|NoFlags
argument_list|)
block|{ }
end_constructor
begin_constructor
DECL|function|QDockAreaLayoutItem
name|QDockAreaLayoutItem
operator|::
name|QDockAreaLayoutItem
parameter_list|(
specifier|const
name|QDockAreaLayoutItem
modifier|&
name|other
parameter_list|)
member_init_list|:
name|widgetItem
argument_list|(
name|other
operator|.
name|widgetItem
argument_list|)
member_init_list|,
name|subinfo
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|placeHolderItem
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|pos
argument_list|(
name|other
operator|.
name|pos
argument_list|)
member_init_list|,
name|size
argument_list|(
name|other
operator|.
name|size
argument_list|)
member_init_list|,
name|flags
argument_list|(
name|other
operator|.
name|flags
argument_list|)
block|{
if|if
condition|(
name|other
operator|.
name|subinfo
operator|!=
literal|0
condition|)
name|subinfo
operator|=
operator|new
name|QDockAreaLayoutInfo
argument_list|(
operator|*
name|other
operator|.
name|subinfo
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|other
operator|.
name|placeHolderItem
operator|!=
literal|0
condition|)
name|placeHolderItem
operator|=
operator|new
name|QPlaceHolderItem
argument_list|(
operator|*
name|other
operator|.
name|placeHolderItem
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_destructor
DECL|function|~QDockAreaLayoutItem
name|QDockAreaLayoutItem
operator|::
name|~
name|QDockAreaLayoutItem
parameter_list|()
block|{
operator|delete
name|subinfo
expr_stmt|;
operator|delete
name|placeHolderItem
expr_stmt|;
block|}
end_destructor
begin_function
DECL|function|skip
name|bool
name|QDockAreaLayoutItem
operator|::
name|skip
parameter_list|()
specifier|const
block|{
if|if
condition|(
name|placeHolderItem
operator|!=
literal|0
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|flags
operator|&
name|GapItem
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|widgetItem
operator|!=
literal|0
condition|)
return|return
name|widgetItem
operator|->
name|isEmpty
argument_list|()
return|;
if|if
condition|(
name|subinfo
operator|!=
literal|0
condition|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|subinfo
operator|->
name|item_list
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
if|if
condition|(
operator|!
name|subinfo
operator|->
name|item_list
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|.
name|skip
argument_list|()
condition|)
return|return
literal|false
return|;
block|}
block|}
return|return
literal|true
return|;
block|}
end_function
begin_function
DECL|function|minimumSize
name|QSize
name|QDockAreaLayoutItem
operator|::
name|minimumSize
parameter_list|()
specifier|const
block|{
if|if
condition|(
name|widgetItem
operator|!=
literal|0
condition|)
block|{
name|int
name|left
decl_stmt|,
name|top
decl_stmt|,
name|right
decl_stmt|,
name|bottom
decl_stmt|;
name|widgetItem
operator|->
name|widget
argument_list|()
operator|->
name|getContentsMargins
argument_list|(
operator|&
name|left
argument_list|,
operator|&
name|top
argument_list|,
operator|&
name|right
argument_list|,
operator|&
name|bottom
argument_list|)
expr_stmt|;
return|return
name|widgetItem
operator|->
name|minimumSize
argument_list|()
operator|+
name|QSize
argument_list|(
name|left
operator|+
name|right
argument_list|,
name|top
operator|+
name|bottom
argument_list|)
return|;
block|}
if|if
condition|(
name|subinfo
operator|!=
literal|0
condition|)
return|return
name|subinfo
operator|->
name|minimumSize
argument_list|()
return|;
return|return
name|QSize
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|maximumSize
name|QSize
name|QDockAreaLayoutItem
operator|::
name|maximumSize
parameter_list|()
specifier|const
block|{
if|if
condition|(
name|widgetItem
operator|!=
literal|0
condition|)
block|{
name|int
name|left
decl_stmt|,
name|top
decl_stmt|,
name|right
decl_stmt|,
name|bottom
decl_stmt|;
name|widgetItem
operator|->
name|widget
argument_list|()
operator|->
name|getContentsMargins
argument_list|(
operator|&
name|left
argument_list|,
operator|&
name|top
argument_list|,
operator|&
name|right
argument_list|,
operator|&
name|bottom
argument_list|)
expr_stmt|;
return|return
name|widgetItem
operator|->
name|maximumSize
argument_list|()
operator|+
name|QSize
argument_list|(
name|left
operator|+
name|right
argument_list|,
name|top
operator|+
name|bottom
argument_list|)
return|;
block|}
if|if
condition|(
name|subinfo
operator|!=
literal|0
condition|)
return|return
name|subinfo
operator|->
name|maximumSize
argument_list|()
return|;
return|return
name|QSize
argument_list|(
name|QWIDGETSIZE_MAX
argument_list|,
name|QWIDGETSIZE_MAX
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|hasFixedSize
name|bool
name|QDockAreaLayoutItem
operator|::
name|hasFixedSize
parameter_list|(
name|Qt
operator|::
name|Orientation
name|o
parameter_list|)
specifier|const
block|{
return|return
name|perp
argument_list|(
name|o
argument_list|,
name|minimumSize
argument_list|()
argument_list|)
operator|==
name|perp
argument_list|(
name|o
argument_list|,
name|maximumSize
argument_list|()
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|expansive
name|bool
name|QDockAreaLayoutItem
operator|::
name|expansive
parameter_list|(
name|Qt
operator|::
name|Orientation
name|o
parameter_list|)
specifier|const
block|{
if|if
condition|(
operator|(
name|flags
operator|&
name|GapItem
operator|)
operator|||
name|placeHolderItem
operator|!=
literal|0
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|widgetItem
operator|!=
literal|0
condition|)
return|return
operator|(
operator|(
name|widgetItem
operator|->
name|expandingDirections
argument_list|()
operator|&
name|o
operator|)
operator|==
name|o
operator|)
return|;
if|if
condition|(
name|subinfo
operator|!=
literal|0
condition|)
return|return
name|subinfo
operator|->
name|expansive
argument_list|(
name|o
argument_list|)
return|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|sizeHint
name|QSize
name|QDockAreaLayoutItem
operator|::
name|sizeHint
parameter_list|()
specifier|const
block|{
if|if
condition|(
name|placeHolderItem
operator|!=
literal|0
condition|)
return|return
name|QSize
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
return|;
if|if
condition|(
name|widgetItem
operator|!=
literal|0
condition|)
block|{
name|int
name|left
decl_stmt|,
name|top
decl_stmt|,
name|right
decl_stmt|,
name|bottom
decl_stmt|;
name|widgetItem
operator|->
name|widget
argument_list|()
operator|->
name|getContentsMargins
argument_list|(
operator|&
name|left
argument_list|,
operator|&
name|top
argument_list|,
operator|&
name|right
argument_list|,
operator|&
name|bottom
argument_list|)
expr_stmt|;
return|return
name|widgetItem
operator|->
name|sizeHint
argument_list|()
operator|+
name|QSize
argument_list|(
name|left
operator|+
name|right
argument_list|,
name|top
operator|+
name|bottom
argument_list|)
return|;
block|}
if|if
condition|(
name|subinfo
operator|!=
literal|0
condition|)
return|return
name|subinfo
operator|->
name|sizeHint
argument_list|()
return|;
return|return
name|QSize
argument_list|(
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
return|;
block|}
end_function
begin_function
name|QDockAreaLayoutItem
DECL|function|operator =
modifier|&
name|QDockAreaLayoutItem
operator|::
name|operator
name|=
parameter_list|(
specifier|const
name|QDockAreaLayoutItem
modifier|&
name|other
parameter_list|)
block|{
name|widgetItem
operator|=
name|other
operator|.
name|widgetItem
expr_stmt|;
if|if
condition|(
name|other
operator|.
name|subinfo
operator|==
literal|0
condition|)
name|subinfo
operator|=
literal|0
expr_stmt|;
else|else
name|subinfo
operator|=
operator|new
name|QDockAreaLayoutInfo
argument_list|(
operator|*
name|other
operator|.
name|subinfo
argument_list|)
expr_stmt|;
operator|delete
name|placeHolderItem
expr_stmt|;
if|if
condition|(
name|other
operator|.
name|placeHolderItem
operator|==
literal|0
condition|)
name|placeHolderItem
operator|=
literal|0
expr_stmt|;
else|else
name|placeHolderItem
operator|=
operator|new
name|QPlaceHolderItem
argument_list|(
operator|*
name|other
operator|.
name|placeHolderItem
argument_list|)
expr_stmt|;
name|pos
operator|=
name|other
operator|.
name|pos
expr_stmt|;
name|size
operator|=
name|other
operator|.
name|size
expr_stmt|;
name|flags
operator|=
name|other
operator|.
name|flags
expr_stmt|;
return|return
operator|*
name|this
return|;
block|}
end_function
begin_comment
comment|/****************************************************************************** ** QDockAreaLayoutInfo */
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
end_ifndef
begin_function
DECL|function|tabId
specifier|static
name|quintptr
name|tabId
parameter_list|(
specifier|const
name|QDockAreaLayoutItem
modifier|&
name|item
parameter_list|)
block|{
if|if
condition|(
name|item
operator|.
name|widgetItem
operator|==
literal|0
condition|)
return|return
literal|0
return|;
return|return
cast|reinterpret_cast
argument_list|<
name|quintptr
argument_list|>
argument_list|(
name|item
operator|.
name|widgetItem
operator|->
name|widget
argument_list|()
argument_list|)
return|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_decl_stmt
DECL|variable|zero
specifier|static
specifier|const
name|int
name|zero
init|=
literal|0
decl_stmt|;
end_decl_stmt
begin_constructor
DECL|function|QDockAreaLayoutInfo
name|QDockAreaLayoutInfo
operator|::
name|QDockAreaLayoutInfo
parameter_list|()
member_init_list|:
name|sep
argument_list|(
operator|&
name|zero
argument_list|)
member_init_list|,
name|dockPos
argument_list|(
name|QInternal
operator|::
name|LeftDock
argument_list|)
member_init_list|,
name|o
argument_list|(
name|Qt
operator|::
name|Horizontal
argument_list|)
member_init_list|,
name|mainWindow
argument_list|(
literal|0
argument_list|)
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
member_init_list|,
name|tabbed
argument_list|(
literal|false
argument_list|)
member_init_list|,
name|tabBar
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|tabBarShape
argument_list|(
name|QTabBar
operator|::
name|RoundedSouth
argument_list|)
endif|#
directive|endif
block|{ }
end_constructor
begin_constructor
DECL|function|QDockAreaLayoutInfo
name|QDockAreaLayoutInfo
operator|::
name|QDockAreaLayoutInfo
parameter_list|(
specifier|const
name|int
modifier|*
name|_sep
parameter_list|,
name|QInternal
operator|::
name|DockPosition
name|_dockPos
parameter_list|,
name|Qt
operator|::
name|Orientation
name|_o
parameter_list|,
name|int
name|tbshape
parameter_list|,
name|QMainWindow
modifier|*
name|window
parameter_list|)
member_init_list|:
name|sep
argument_list|(
name|_sep
argument_list|)
member_init_list|,
name|dockPos
argument_list|(
name|_dockPos
argument_list|)
member_init_list|,
name|o
argument_list|(
name|_o
argument_list|)
member_init_list|,
name|mainWindow
argument_list|(
name|window
argument_list|)
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
member_init_list|,
name|tabbed
argument_list|(
literal|false
argument_list|)
member_init_list|,
name|tabBar
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|tabBarShape
argument_list|(
cast|static_cast
argument_list|<
name|QTabBar
operator|::
name|Shape
argument_list|>
argument_list|(
name|tbshape
argument_list|)
argument_list|)
endif|#
directive|endif
block|{
ifdef|#
directive|ifdef
name|QT_NO_TABBAR
name|Q_UNUSED
argument_list|(
name|tbshape
argument_list|)
expr_stmt|;
endif|#
directive|endif
block|}
end_constructor
begin_function
DECL|function|size
name|QSize
name|QDockAreaLayoutInfo
operator|::
name|size
parameter_list|()
specifier|const
block|{
return|return
name|isEmpty
argument_list|()
condition|?
name|QSize
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
else|:
name|rect
operator|.
name|size
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|clear
name|void
name|QDockAreaLayoutInfo
operator|::
name|clear
parameter_list|()
block|{
name|item_list
operator|.
name|clear
argument_list|()
expr_stmt|;
name|rect
operator|=
name|QRect
argument_list|()
expr_stmt|;
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
name|tabbed
operator|=
literal|false
expr_stmt|;
name|tabBar
operator|=
literal|0
expr_stmt|;
endif|#
directive|endif
block|}
end_function
begin_function
DECL|function|isEmpty
name|bool
name|QDockAreaLayoutInfo
operator|::
name|isEmpty
parameter_list|()
specifier|const
block|{
return|return
name|next
argument_list|(
operator|-
literal|1
argument_list|)
operator|==
operator|-
literal|1
return|;
block|}
end_function
begin_function
DECL|function|minimumSize
name|QSize
name|QDockAreaLayoutInfo
operator|::
name|minimumSize
parameter_list|()
specifier|const
block|{
if|if
condition|(
name|isEmpty
argument_list|()
condition|)
return|return
name|QSize
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
return|;
name|int
name|a
init|=
literal|0
decl_stmt|,
name|b
init|=
literal|0
decl_stmt|;
name|bool
name|first
init|=
literal|true
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|item_list
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
specifier|const
name|QDockAreaLayoutItem
modifier|&
name|item
init|=
name|item_list
operator|.
name|at
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|item
operator|.
name|skip
argument_list|()
condition|)
continue|continue;
name|QSize
name|min_size
init|=
name|item
operator|.
name|minimumSize
argument_list|()
decl_stmt|;
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
if|if
condition|(
name|tabbed
condition|)
block|{
name|a
operator|=
name|qMax
argument_list|(
name|a
argument_list|,
name|pick
argument_list|(
name|o
argument_list|,
name|min_size
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
endif|#
directive|endif
block|{
if|if
condition|(
operator|!
name|first
condition|)
name|a
operator|+=
operator|*
name|sep
expr_stmt|;
name|a
operator|+=
name|pick
argument_list|(
name|o
argument_list|,
name|min_size
argument_list|)
expr_stmt|;
block|}
name|b
operator|=
name|qMax
argument_list|(
name|b
argument_list|,
name|perp
argument_list|(
name|o
argument_list|,
name|min_size
argument_list|)
argument_list|)
expr_stmt|;
name|first
operator|=
literal|false
expr_stmt|;
block|}
name|QSize
name|result
decl_stmt|;
name|rpick
argument_list|(
name|o
argument_list|,
name|result
argument_list|)
operator|=
name|a
expr_stmt|;
name|rperp
argument_list|(
name|o
argument_list|,
name|result
argument_list|)
operator|=
name|b
expr_stmt|;
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
name|QSize
name|tbm
init|=
name|tabBarMinimumSize
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|tbm
operator|.
name|isNull
argument_list|()
condition|)
block|{
switch|switch
condition|(
name|tabBarShape
condition|)
block|{
case|case
name|QTabBar
operator|::
name|RoundedNorth
case|:
case|case
name|QTabBar
operator|::
name|RoundedSouth
case|:
case|case
name|QTabBar
operator|::
name|TriangularNorth
case|:
case|case
name|QTabBar
operator|::
name|TriangularSouth
case|:
name|result
operator|.
name|rheight
argument_list|()
operator|+=
name|tbm
operator|.
name|height
argument_list|()
expr_stmt|;
name|result
operator|.
name|rwidth
argument_list|()
operator|=
name|qMax
argument_list|(
name|tbm
operator|.
name|width
argument_list|()
argument_list|,
name|result
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|QTabBar
operator|::
name|RoundedEast
case|:
case|case
name|QTabBar
operator|::
name|RoundedWest
case|:
case|case
name|QTabBar
operator|::
name|TriangularEast
case|:
case|case
name|QTabBar
operator|::
name|TriangularWest
case|:
name|result
operator|.
name|rheight
argument_list|()
operator|=
name|qMax
argument_list|(
name|tbm
operator|.
name|height
argument_list|()
argument_list|,
name|result
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|.
name|rwidth
argument_list|()
operator|+=
name|tbm
operator|.
name|width
argument_list|()
expr_stmt|;
break|break;
default|default:
break|break;
block|}
block|}
endif|#
directive|endif
comment|// QT_NO_TABBAR
return|return
name|result
return|;
block|}
end_function
begin_function
DECL|function|maximumSize
name|QSize
name|QDockAreaLayoutInfo
operator|::
name|maximumSize
parameter_list|()
specifier|const
block|{
if|if
condition|(
name|isEmpty
argument_list|()
condition|)
return|return
name|QSize
argument_list|(
name|QWIDGETSIZE_MAX
argument_list|,
name|QWIDGETSIZE_MAX
argument_list|)
return|;
name|int
name|a
init|=
literal|0
decl_stmt|,
name|b
init|=
name|QWIDGETSIZE_MAX
decl_stmt|;
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
if|if
condition|(
name|tabbed
condition|)
name|a
operator|=
name|QWIDGETSIZE_MAX
expr_stmt|;
endif|#
directive|endif
name|int
name|min_perp
init|=
literal|0
decl_stmt|;
name|bool
name|first
init|=
literal|true
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|item_list
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
specifier|const
name|QDockAreaLayoutItem
modifier|&
name|item
init|=
name|item_list
operator|.
name|at
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|item
operator|.
name|skip
argument_list|()
condition|)
continue|continue;
name|QSize
name|max_size
init|=
name|item
operator|.
name|maximumSize
argument_list|()
decl_stmt|;
name|min_perp
operator|=
name|qMax
argument_list|(
name|min_perp
argument_list|,
name|perp
argument_list|(
name|o
argument_list|,
name|item
operator|.
name|minimumSize
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
if|if
condition|(
name|tabbed
condition|)
block|{
name|a
operator|=
name|qMin
argument_list|(
name|a
argument_list|,
name|pick
argument_list|(
name|o
argument_list|,
name|max_size
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
endif|#
directive|endif
block|{
if|if
condition|(
operator|!
name|first
condition|)
name|a
operator|+=
operator|*
name|sep
expr_stmt|;
name|a
operator|+=
name|pick
argument_list|(
name|o
argument_list|,
name|max_size
argument_list|)
expr_stmt|;
block|}
name|b
operator|=
name|qMin
argument_list|(
name|b
argument_list|,
name|perp
argument_list|(
name|o
argument_list|,
name|max_size
argument_list|)
argument_list|)
expr_stmt|;
name|a
operator|=
name|qMin
argument_list|(
name|a
argument_list|,
name|int
argument_list|(
name|QWIDGETSIZE_MAX
argument_list|)
argument_list|)
expr_stmt|;
name|b
operator|=
name|qMin
argument_list|(
name|b
argument_list|,
name|int
argument_list|(
name|QWIDGETSIZE_MAX
argument_list|)
argument_list|)
expr_stmt|;
name|first
operator|=
literal|false
expr_stmt|;
block|}
name|b
operator|=
name|qMax
argument_list|(
name|b
argument_list|,
name|min_perp
argument_list|)
expr_stmt|;
name|QSize
name|result
decl_stmt|;
name|rpick
argument_list|(
name|o
argument_list|,
name|result
argument_list|)
operator|=
name|a
expr_stmt|;
name|rperp
argument_list|(
name|o
argument_list|,
name|result
argument_list|)
operator|=
name|b
expr_stmt|;
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
name|QSize
name|tbh
init|=
name|tabBarSizeHint
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|tbh
operator|.
name|isNull
argument_list|()
condition|)
block|{
switch|switch
condition|(
name|tabBarShape
condition|)
block|{
case|case
name|QTabBar
operator|::
name|RoundedNorth
case|:
case|case
name|QTabBar
operator|::
name|RoundedSouth
case|:
name|result
operator|.
name|rheight
argument_list|()
operator|+=
name|tbh
operator|.
name|height
argument_list|()
expr_stmt|;
break|break;
case|case
name|QTabBar
operator|::
name|RoundedEast
case|:
case|case
name|QTabBar
operator|::
name|RoundedWest
case|:
name|result
operator|.
name|rwidth
argument_list|()
operator|+=
name|tbh
operator|.
name|width
argument_list|()
expr_stmt|;
break|break;
default|default:
break|break;
block|}
block|}
endif|#
directive|endif
comment|// QT_NO_TABBAR
return|return
name|result
return|;
block|}
end_function
begin_function
DECL|function|sizeHint
name|QSize
name|QDockAreaLayoutInfo
operator|::
name|sizeHint
parameter_list|()
specifier|const
block|{
if|if
condition|(
name|isEmpty
argument_list|()
condition|)
return|return
name|QSize
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
return|;
name|int
name|a
init|=
literal|0
decl_stmt|,
name|b
init|=
literal|0
decl_stmt|;
name|int
name|min_perp
init|=
literal|0
decl_stmt|;
name|int
name|max_perp
init|=
name|QWIDGETSIZE_MAX
decl_stmt|;
specifier|const
name|QDockAreaLayoutItem
modifier|*
name|previous
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|item_list
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
specifier|const
name|QDockAreaLayoutItem
modifier|&
name|item
init|=
name|item_list
operator|.
name|at
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|item
operator|.
name|skip
argument_list|()
condition|)
continue|continue;
name|bool
name|gap
init|=
name|item
operator|.
name|flags
operator|&
name|QDockAreaLayoutItem
operator|::
name|GapItem
decl_stmt|;
name|QSize
name|size_hint
init|=
name|item
operator|.
name|sizeHint
argument_list|()
decl_stmt|;
name|min_perp
operator|=
name|qMax
argument_list|(
name|min_perp
argument_list|,
name|perp
argument_list|(
name|o
argument_list|,
name|item
operator|.
name|minimumSize
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|max_perp
operator|=
name|qMin
argument_list|(
name|max_perp
argument_list|,
name|perp
argument_list|(
name|o
argument_list|,
name|item
operator|.
name|maximumSize
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
if|if
condition|(
name|tabbed
condition|)
block|{
name|a
operator|=
name|qMax
argument_list|(
name|a
argument_list|,
name|gap
condition|?
name|item
operator|.
name|size
else|:
name|pick
argument_list|(
name|o
argument_list|,
name|size_hint
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
endif|#
directive|endif
block|{
if|if
condition|(
name|previous
operator|&&
operator|!
name|gap
operator|&&
operator|!
operator|(
name|previous
operator|->
name|flags
operator|&
name|QDockAreaLayoutItem
operator|::
name|GapItem
operator|)
operator|&&
operator|!
name|previous
operator|->
name|hasFixedSize
argument_list|(
name|o
argument_list|)
condition|)
block|{
name|a
operator|+=
operator|*
name|sep
expr_stmt|;
block|}
name|a
operator|+=
name|gap
condition|?
name|item
operator|.
name|size
else|:
name|pick
argument_list|(
name|o
argument_list|,
name|size_hint
argument_list|)
expr_stmt|;
block|}
name|b
operator|=
name|qMax
argument_list|(
name|b
argument_list|,
name|perp
argument_list|(
name|o
argument_list|,
name|size_hint
argument_list|)
argument_list|)
expr_stmt|;
name|previous
operator|=
operator|&
name|item
expr_stmt|;
block|}
name|max_perp
operator|=
name|qMax
argument_list|(
name|max_perp
argument_list|,
name|min_perp
argument_list|)
expr_stmt|;
name|b
operator|=
name|qMax
argument_list|(
name|b
argument_list|,
name|min_perp
argument_list|)
expr_stmt|;
name|b
operator|=
name|qMin
argument_list|(
name|b
argument_list|,
name|max_perp
argument_list|)
expr_stmt|;
name|QSize
name|result
decl_stmt|;
name|rpick
argument_list|(
name|o
argument_list|,
name|result
argument_list|)
operator|=
name|a
expr_stmt|;
name|rperp
argument_list|(
name|o
argument_list|,
name|result
argument_list|)
operator|=
name|b
expr_stmt|;
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
if|if
condition|(
name|tabbed
condition|)
block|{
name|QSize
name|tbh
init|=
name|tabBarSizeHint
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tabBarShape
condition|)
block|{
case|case
name|QTabBar
operator|::
name|RoundedNorth
case|:
case|case
name|QTabBar
operator|::
name|RoundedSouth
case|:
case|case
name|QTabBar
operator|::
name|TriangularNorth
case|:
case|case
name|QTabBar
operator|::
name|TriangularSouth
case|:
name|result
operator|.
name|rheight
argument_list|()
operator|+=
name|tbh
operator|.
name|height
argument_list|()
expr_stmt|;
name|result
operator|.
name|rwidth
argument_list|()
operator|=
name|qMax
argument_list|(
name|tbh
operator|.
name|width
argument_list|()
argument_list|,
name|result
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|QTabBar
operator|::
name|RoundedEast
case|:
case|case
name|QTabBar
operator|::
name|RoundedWest
case|:
case|case
name|QTabBar
operator|::
name|TriangularEast
case|:
case|case
name|QTabBar
operator|::
name|TriangularWest
case|:
name|result
operator|.
name|rheight
argument_list|()
operator|=
name|qMax
argument_list|(
name|tbh
operator|.
name|height
argument_list|()
argument_list|,
name|result
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|.
name|rwidth
argument_list|()
operator|+=
name|tbh
operator|.
name|width
argument_list|()
expr_stmt|;
break|break;
default|default:
break|break;
block|}
block|}
endif|#
directive|endif
comment|// QT_NO_TABBAR
return|return
name|result
return|;
block|}
end_function
begin_function
DECL|function|expansive
name|bool
name|QDockAreaLayoutInfo
operator|::
name|expansive
parameter_list|(
name|Qt
operator|::
name|Orientation
name|o
parameter_list|)
specifier|const
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|item_list
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
if|if
condition|(
name|item_list
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|.
name|expansive
argument_list|(
name|o
argument_list|)
condition|)
return|return
literal|true
return|;
block|}
return|return
literal|false
return|;
block|}
end_function
begin_comment
comment|/* QDockAreaLayoutInfo::maximumSize() doesn't return the real max size. For example,    if the layout is empty, it returns QWIDGETSIZE_MAX. This is so that empty dock areas    don't constrain the size of the QMainWindow, but sometimes we really need to know the    maximum size. Also, these functions take into account widgets that want to keep their    size (f.ex. when they are hidden and then shown, they should not change size). */
end_comment
begin_function
DECL|function|realMinSize
specifier|static
name|int
name|realMinSize
parameter_list|(
specifier|const
name|QDockAreaLayoutInfo
modifier|&
name|info
parameter_list|)
block|{
name|int
name|result
init|=
literal|0
decl_stmt|;
name|bool
name|first
init|=
literal|true
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|info
operator|.
name|item_list
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
specifier|const
name|QDockAreaLayoutItem
modifier|&
name|item
init|=
name|info
operator|.
name|item_list
operator|.
name|at
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|item
operator|.
name|skip
argument_list|()
condition|)
continue|continue;
name|int
name|min
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
name|item
operator|.
name|flags
operator|&
name|QDockAreaLayoutItem
operator|::
name|KeepSize
operator|)
operator|&&
name|item
operator|.
name|size
operator|!=
operator|-
literal|1
condition|)
name|min
operator|=
name|item
operator|.
name|size
expr_stmt|;
else|else
name|min
operator|=
name|pick
argument_list|(
name|info
operator|.
name|o
argument_list|,
name|item
operator|.
name|minimumSize
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|first
condition|)
name|result
operator|+=
operator|*
name|info
operator|.
name|sep
expr_stmt|;
name|result
operator|+=
name|min
expr_stmt|;
name|first
operator|=
literal|false
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
end_function
begin_function
DECL|function|realMaxSize
specifier|static
name|int
name|realMaxSize
parameter_list|(
specifier|const
name|QDockAreaLayoutInfo
modifier|&
name|info
parameter_list|)
block|{
name|int
name|result
init|=
literal|0
decl_stmt|;
name|bool
name|first
init|=
literal|true
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|info
operator|.
name|item_list
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
specifier|const
name|QDockAreaLayoutItem
modifier|&
name|item
init|=
name|info
operator|.
name|item_list
operator|.
name|at
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|item
operator|.
name|skip
argument_list|()
condition|)
continue|continue;
name|int
name|max
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
name|item
operator|.
name|flags
operator|&
name|QDockAreaLayoutItem
operator|::
name|KeepSize
operator|)
operator|&&
name|item
operator|.
name|size
operator|!=
operator|-
literal|1
condition|)
name|max
operator|=
name|item
operator|.
name|size
expr_stmt|;
else|else
name|max
operator|=
name|pick
argument_list|(
name|info
operator|.
name|o
argument_list|,
name|item
operator|.
name|maximumSize
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|first
condition|)
name|result
operator|+=
operator|*
name|info
operator|.
name|sep
expr_stmt|;
name|result
operator|+=
name|max
expr_stmt|;
if|if
condition|(
name|result
operator|>=
name|QWIDGETSIZE_MAX
condition|)
return|return
name|QWIDGETSIZE_MAX
return|;
name|first
operator|=
literal|false
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
end_function
begin_function
DECL|function|fitItems
name|void
name|QDockAreaLayoutInfo
operator|::
name|fitItems
parameter_list|()
block|{
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
if|if
condition|(
name|tabbed
condition|)
block|{
return|return;
block|}
endif|#
directive|endif
name|QVector
argument_list|<
name|QLayoutStruct
argument_list|>
name|layout_struct_list
argument_list|(
name|item_list
operator|.
name|size
argument_list|()
operator|*
literal|2
argument_list|)
decl_stmt|;
name|int
name|j
init|=
literal|0
decl_stmt|;
name|int
name|size
init|=
name|pick
argument_list|(
name|o
argument_list|,
name|rect
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
name|int
name|min_size
init|=
name|realMinSize
argument_list|(
operator|*
name|this
argument_list|)
decl_stmt|;
name|int
name|max_size
init|=
name|realMaxSize
argument_list|(
operator|*
name|this
argument_list|)
decl_stmt|;
name|int
name|last_index
init|=
operator|-
literal|1
decl_stmt|;
specifier|const
name|QDockAreaLayoutItem
modifier|*
name|previous
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|item_list
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|QDockAreaLayoutItem
modifier|&
name|item
init|=
name|item_list
index|[
name|i
index|]
decl_stmt|;
if|if
condition|(
name|item
operator|.
name|skip
argument_list|()
condition|)
continue|continue;
name|bool
name|gap
init|=
name|item
operator|.
name|flags
operator|&
name|QDockAreaLayoutItem
operator|::
name|GapItem
decl_stmt|;
if|if
condition|(
name|previous
operator|&&
operator|!
name|gap
condition|)
block|{
if|if
condition|(
operator|!
operator|(
name|previous
operator|->
name|flags
operator|&
name|QDockAreaLayoutItem
operator|::
name|GapItem
operator|)
condition|)
block|{
name|QLayoutStruct
modifier|&
name|ls
init|=
name|layout_struct_list
index|[
name|j
operator|++
index|]
decl_stmt|;
name|ls
operator|.
name|init
argument_list|()
expr_stmt|;
name|ls
operator|.
name|minimumSize
operator|=
name|ls
operator|.
name|maximumSize
operator|=
name|ls
operator|.
name|sizeHint
operator|=
name|previous
operator|->
name|hasFixedSize
argument_list|(
name|o
argument_list|)
condition|?
literal|0
else|:
operator|*
name|sep
expr_stmt|;
name|ls
operator|.
name|empty
operator|=
literal|false
expr_stmt|;
block|}
block|}
if|if
condition|(
name|item
operator|.
name|flags
operator|&
name|QDockAreaLayoutItem
operator|::
name|KeepSize
condition|)
block|{
comment|// Check if the item can keep its size, without violating size constraints
comment|// of other items.
if|if
condition|(
name|size
operator|<
name|min_size
condition|)
block|{
comment|// There is too little space to keep this widget's size
name|item
operator|.
name|flags
operator|&=
operator|~
name|QDockAreaLayoutItem
operator|::
name|KeepSize
expr_stmt|;
name|min_size
operator|-=
name|item
operator|.
name|size
expr_stmt|;
name|min_size
operator|+=
name|pick
argument_list|(
name|o
argument_list|,
name|item
operator|.
name|minimumSize
argument_list|()
argument_list|)
expr_stmt|;
name|min_size
operator|=
name|qMax
argument_list|(
literal|0
argument_list|,
name|min_size
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|size
operator|>
name|max_size
condition|)
block|{
comment|// There is too much space to keep this widget's size
name|item
operator|.
name|flags
operator|&=
operator|~
name|QDockAreaLayoutItem
operator|::
name|KeepSize
expr_stmt|;
name|max_size
operator|-=
name|item
operator|.
name|size
expr_stmt|;
name|max_size
operator|+=
name|pick
argument_list|(
name|o
argument_list|,
name|item
operator|.
name|maximumSize
argument_list|()
argument_list|)
expr_stmt|;
name|max_size
operator|=
name|qMin
argument_list|<
name|int
argument_list|>
argument_list|(
name|QWIDGETSIZE_MAX
argument_list|,
name|max_size
argument_list|)
expr_stmt|;
block|}
block|}
name|last_index
operator|=
name|j
expr_stmt|;
name|QLayoutStruct
modifier|&
name|ls
init|=
name|layout_struct_list
index|[
name|j
operator|++
index|]
decl_stmt|;
name|ls
operator|.
name|init
argument_list|()
expr_stmt|;
name|ls
operator|.
name|empty
operator|=
literal|false
expr_stmt|;
if|if
condition|(
name|item
operator|.
name|flags
operator|&
name|QDockAreaLayoutItem
operator|::
name|KeepSize
condition|)
block|{
name|ls
operator|.
name|minimumSize
operator|=
name|ls
operator|.
name|maximumSize
operator|=
name|ls
operator|.
name|sizeHint
operator|=
name|item
operator|.
name|size
expr_stmt|;
name|ls
operator|.
name|expansive
operator|=
literal|false
expr_stmt|;
name|ls
operator|.
name|stretch
operator|=
literal|0
expr_stmt|;
block|}
else|else
block|{
name|ls
operator|.
name|maximumSize
operator|=
name|pick
argument_list|(
name|o
argument_list|,
name|item
operator|.
name|maximumSize
argument_list|()
argument_list|)
expr_stmt|;
name|ls
operator|.
name|expansive
operator|=
name|item
operator|.
name|expansive
argument_list|(
name|o
argument_list|)
expr_stmt|;
name|ls
operator|.
name|minimumSize
operator|=
name|pick
argument_list|(
name|o
argument_list|,
name|item
operator|.
name|minimumSize
argument_list|()
argument_list|)
expr_stmt|;
name|ls
operator|.
name|sizeHint
operator|=
name|item
operator|.
name|size
operator|==
operator|-
literal|1
condition|?
name|pick
argument_list|(
name|o
argument_list|,
name|item
operator|.
name|sizeHint
argument_list|()
argument_list|)
else|:
name|item
operator|.
name|size
expr_stmt|;
name|ls
operator|.
name|stretch
operator|=
name|ls
operator|.
name|expansive
condition|?
name|ls
operator|.
name|sizeHint
else|:
literal|0
expr_stmt|;
block|}
name|item
operator|.
name|flags
operator|&=
operator|~
name|QDockAreaLayoutItem
operator|::
name|KeepSize
expr_stmt|;
name|previous
operator|=
operator|&
name|item
expr_stmt|;
block|}
name|layout_struct_list
operator|.
name|resize
argument_list|(
name|j
argument_list|)
expr_stmt|;
comment|// If there is more space than the widgets can take (due to maximum size constraints),
comment|// we detect it here and stretch the last widget to take up the rest of the space.
if|if
condition|(
name|size
operator|>
name|max_size
operator|&&
name|last_index
operator|!=
operator|-
literal|1
condition|)
block|{
name|layout_struct_list
index|[
name|last_index
index|]
operator|.
name|maximumSize
operator|=
name|QWIDGETSIZE_MAX
expr_stmt|;
name|layout_struct_list
index|[
name|last_index
index|]
operator|.
name|expansive
operator|=
literal|true
expr_stmt|;
block|}
name|qGeomCalc
argument_list|(
name|layout_struct_list
argument_list|,
literal|0
argument_list|,
name|j
argument_list|,
name|pick
argument_list|(
name|o
argument_list|,
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|)
argument_list|,
name|size
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|j
operator|=
literal|0
expr_stmt|;
name|bool
name|prev_gap
init|=
literal|false
decl_stmt|;
name|bool
name|first
init|=
literal|true
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|item_list
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|QDockAreaLayoutItem
modifier|&
name|item
init|=
name|item_list
index|[
name|i
index|]
decl_stmt|;
if|if
condition|(
name|item
operator|.
name|skip
argument_list|()
condition|)
continue|continue;
name|bool
name|gap
init|=
name|item
operator|.
name|flags
operator|&
name|QDockAreaLayoutItem
operator|::
name|GapItem
decl_stmt|;
if|if
condition|(
operator|!
name|first
operator|&&
operator|!
name|gap
operator|&&
operator|!
name|prev_gap
condition|)
operator|++
name|j
expr_stmt|;
specifier|const
name|QLayoutStruct
modifier|&
name|ls
init|=
name|layout_struct_list
operator|.
name|at
argument_list|(
name|j
operator|++
argument_list|)
decl_stmt|;
name|item
operator|.
name|size
operator|=
name|ls
operator|.
name|size
expr_stmt|;
name|item
operator|.
name|pos
operator|=
name|ls
operator|.
name|pos
expr_stmt|;
if|if
condition|(
name|item
operator|.
name|subinfo
operator|!=
literal|0
condition|)
block|{
name|item
operator|.
name|subinfo
operator|->
name|rect
operator|=
name|itemRect
argument_list|(
name|i
argument_list|)
expr_stmt|;
name|item
operator|.
name|subinfo
operator|->
name|fitItems
argument_list|()
expr_stmt|;
block|}
name|prev_gap
operator|=
name|gap
expr_stmt|;
name|first
operator|=
literal|false
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|dockPosHelper
specifier|static
name|QInternal
operator|::
name|DockPosition
name|dockPosHelper
parameter_list|(
specifier|const
name|QRect
modifier|&
name|rect
parameter_list|,
specifier|const
name|QPoint
modifier|&
name|_pos
parameter_list|,
name|Qt
operator|::
name|Orientation
name|o
parameter_list|,
name|bool
name|nestingEnabled
parameter_list|,
name|QDockAreaLayoutInfo
operator|::
name|TabMode
name|tabMode
parameter_list|)
block|{
if|if
condition|(
name|tabMode
operator|==
name|QDockAreaLayoutInfo
operator|::
name|ForceTabs
condition|)
return|return
name|QInternal
operator|::
name|DockCount
return|;
name|QPoint
name|pos
init|=
name|_pos
operator|-
name|rect
operator|.
name|topLeft
argument_list|()
decl_stmt|;
name|int
name|x
init|=
name|pos
operator|.
name|x
argument_list|()
decl_stmt|;
name|int
name|y
init|=
name|pos
operator|.
name|y
argument_list|()
decl_stmt|;
name|int
name|w
init|=
name|rect
operator|.
name|width
argument_list|()
decl_stmt|;
name|int
name|h
init|=
name|rect
operator|.
name|height
argument_list|()
decl_stmt|;
if|if
condition|(
name|tabMode
operator|!=
name|QDockAreaLayoutInfo
operator|::
name|NoTabs
condition|)
block|{
comment|// is it in the center?
if|if
condition|(
name|nestingEnabled
condition|)
block|{
comment|/*             2/3                 +--------------+                 |              |                 |   CCCCCCCC   |            2/3  |   CCCCCCCC   |                 |   CCCCCCCC   |                 |              |                 +--------------+     */
name|QRect
name|center
argument_list|(
name|w
operator|/
literal|6
argument_list|,
name|h
operator|/
literal|6
argument_list|,
literal|2
operator|*
name|w
operator|/
literal|3
argument_list|,
literal|2
operator|*
name|h
operator|/
literal|3
argument_list|)
decl_stmt|;
if|if
condition|(
name|center
operator|.
name|contains
argument_list|(
name|pos
argument_list|)
condition|)
return|return
name|QInternal
operator|::
name|DockCount
return|;
block|}
elseif|else
if|if
condition|(
name|o
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
block|{
comment|/*             2/3                 +--------------+                 |   CCCCCCCC   |                 |   CCCCCCCC   |                 |   CCCCCCCC   |                 |   CCCCCCCC   |                 |   CCCCCCCC   |                 +--------------+     */
if|if
condition|(
name|x
operator|>
name|w
operator|/
literal|6
operator|&&
name|x
operator|<
name|w
operator|*
literal|5
operator|/
literal|6
condition|)
return|return
name|QInternal
operator|::
name|DockCount
return|;
block|}
else|else
block|{
comment|/*                 +--------------+                 |              |            2/3  |CCCCCCCCCCCCCC|                 |CCCCCCCCCCCCCC|                 |              |                 +--------------+     */
if|if
condition|(
name|y
operator|>
name|h
operator|/
literal|6
operator|&&
name|y
operator|<
literal|5
operator|*
name|h
operator|/
literal|6
condition|)
return|return
name|QInternal
operator|::
name|DockCount
return|;
block|}
block|}
comment|// not in the center. which edge?
if|if
condition|(
name|nestingEnabled
condition|)
block|{
if|if
condition|(
name|o
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
block|{
comment|/*       1/3  1/3 1/3             +------------+     (we've already ruled out the center)             |LLLLTTTTRRRR|             |LLLLTTTTRRRR|             |LLLLBBBBRRRR|             |LLLLBBBBRRRR|             +------------+    */
if|if
condition|(
name|x
operator|<
name|w
operator|/
literal|3
condition|)
return|return
name|QInternal
operator|::
name|LeftDock
return|;
if|if
condition|(
name|x
operator|>
literal|2
operator|*
name|w
operator|/
literal|3
condition|)
return|return
name|QInternal
operator|::
name|RightDock
return|;
if|if
condition|(
name|y
operator|<
name|h
operator|/
literal|2
condition|)
return|return
name|QInternal
operator|::
name|TopDock
return|;
return|return
name|QInternal
operator|::
name|BottomDock
return|;
block|}
else|else
block|{
comment|/*      +------------+     (we've already ruled out the center)         1/3 |TTTTTTTTTTTT|             |LLLLLLRRRRRR|         1/3 |LLLLLLRRRRRR|         1/3 |BBBBBBBBBBBB|             +------------+    */
if|if
condition|(
name|y
operator|<
name|h
operator|/
literal|3
condition|)
return|return
name|QInternal
operator|::
name|TopDock
return|;
if|if
condition|(
name|y
operator|>
literal|2
operator|*
name|h
operator|/
literal|3
condition|)
return|return
name|QInternal
operator|::
name|BottomDock
return|;
if|if
condition|(
name|x
operator|<
name|w
operator|/
literal|2
condition|)
return|return
name|QInternal
operator|::
name|LeftDock
return|;
return|return
name|QInternal
operator|::
name|RightDock
return|;
block|}
block|}
else|else
block|{
if|if
condition|(
name|o
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
block|{
return|return
name|x
operator|<
name|w
operator|/
literal|2
condition|?
name|QInternal
operator|::
name|LeftDock
else|:
name|QInternal
operator|::
name|RightDock
return|;
block|}
else|else
block|{
return|return
name|y
operator|<
name|h
operator|/
literal|2
condition|?
name|QInternal
operator|::
name|TopDock
else|:
name|QInternal
operator|::
name|BottomDock
return|;
block|}
block|}
block|}
end_function
begin_function
DECL|function|gapIndex
name|QList
argument_list|<
name|int
argument_list|>
name|QDockAreaLayoutInfo
operator|::
name|gapIndex
parameter_list|(
specifier|const
name|QPoint
modifier|&
name|_pos
parameter_list|,
name|bool
name|nestingEnabled
parameter_list|,
name|TabMode
name|tabMode
parameter_list|)
specifier|const
block|{
name|QList
argument_list|<
name|int
argument_list|>
name|result
decl_stmt|;
name|QRect
name|item_rect
decl_stmt|;
name|int
name|item_index
init|=
literal|0
decl_stmt|;
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
if|if
condition|(
name|tabbed
condition|)
block|{
name|item_rect
operator|=
name|tabContentRect
argument_list|()
expr_stmt|;
block|}
else|else
endif|#
directive|endif
block|{
name|int
name|pos
init|=
name|pick
argument_list|(
name|o
argument_list|,
name|_pos
argument_list|)
decl_stmt|;
name|int
name|last
init|=
operator|-
literal|1
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|item_list
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
specifier|const
name|QDockAreaLayoutItem
modifier|&
name|item
init|=
name|item_list
operator|.
name|at
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|item
operator|.
name|skip
argument_list|()
condition|)
continue|continue;
name|last
operator|=
name|i
expr_stmt|;
if|if
condition|(
name|item
operator|.
name|pos
operator|+
name|item
operator|.
name|size
operator|<
name|pos
condition|)
continue|continue;
if|if
condition|(
name|item
operator|.
name|subinfo
operator|!=
literal|0
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
operator|&&
operator|!
name|item
operator|.
name|subinfo
operator|->
name|tabbed
endif|#
directive|endif
condition|)
block|{
name|result
operator|=
name|item
operator|.
name|subinfo
operator|->
name|gapIndex
argument_list|(
name|_pos
argument_list|,
name|nestingEnabled
argument_list|,
name|tabMode
argument_list|)
expr_stmt|;
name|result
operator|.
name|prepend
argument_list|(
name|i
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
name|item_rect
operator|=
name|itemRect
argument_list|(
name|i
argument_list|)
expr_stmt|;
name|item_index
operator|=
name|i
expr_stmt|;
break|break;
block|}
if|if
condition|(
name|item_rect
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|result
operator|.
name|append
argument_list|(
name|last
operator|+
literal|1
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
block|}
name|Q_ASSERT
argument_list|(
operator|!
name|item_rect
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QInternal
operator|::
name|DockPosition
name|dock_pos
init|=
name|dockPosHelper
argument_list|(
name|item_rect
argument_list|,
name|_pos
argument_list|,
name|o
argument_list|,
name|nestingEnabled
argument_list|,
name|tabMode
argument_list|)
decl_stmt|;
switch|switch
condition|(
name|dock_pos
condition|)
block|{
case|case
name|QInternal
operator|::
name|LeftDock
case|:
if|if
condition|(
name|o
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
name|result
operator|<<
name|item_index
expr_stmt|;
else|else
name|result
operator|<<
name|item_index
operator|<<
literal|0
expr_stmt|;
comment|// this subinfo doesn't exist yet, but insertGap()
comment|// handles this by inserting it
break|break;
case|case
name|QInternal
operator|::
name|RightDock
case|:
if|if
condition|(
name|o
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
name|result
operator|<<
name|item_index
operator|+
literal|1
expr_stmt|;
else|else
name|result
operator|<<
name|item_index
operator|<<
literal|1
expr_stmt|;
break|break;
case|case
name|QInternal
operator|::
name|TopDock
case|:
if|if
condition|(
name|o
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
name|result
operator|<<
name|item_index
operator|<<
literal|0
expr_stmt|;
else|else
name|result
operator|<<
name|item_index
expr_stmt|;
break|break;
case|case
name|QInternal
operator|::
name|BottomDock
case|:
if|if
condition|(
name|o
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
name|result
operator|<<
name|item_index
operator|<<
literal|1
expr_stmt|;
else|else
name|result
operator|<<
name|item_index
operator|+
literal|1
expr_stmt|;
break|break;
case|case
name|QInternal
operator|::
name|DockCount
case|:
name|result
operator|<<
operator|(
operator|-
name|item_index
operator|-
literal|1
operator|)
operator|<<
literal|0
expr_stmt|;
comment|// negative item_index means "on top of"
comment|// -item_index - 1, insertGap()
comment|// will insert a tabbed subinfo
break|break;
default|default:
break|break;
block|}
return|return
name|result
return|;
block|}
end_function
begin_function
DECL|function|shrink
specifier|static
specifier|inline
name|int
name|shrink
parameter_list|(
name|QLayoutStruct
modifier|&
name|ls
parameter_list|,
name|int
name|delta
parameter_list|)
block|{
if|if
condition|(
name|ls
operator|.
name|empty
condition|)
return|return
literal|0
return|;
name|int
name|old_size
init|=
name|ls
operator|.
name|size
decl_stmt|;
name|ls
operator|.
name|size
operator|=
name|qMax
argument_list|(
name|ls
operator|.
name|size
operator|-
name|delta
argument_list|,
name|ls
operator|.
name|minimumSize
argument_list|)
expr_stmt|;
return|return
name|old_size
operator|-
name|ls
operator|.
name|size
return|;
block|}
end_function
begin_function
DECL|function|grow
specifier|static
specifier|inline
name|int
name|grow
parameter_list|(
name|QLayoutStruct
modifier|&
name|ls
parameter_list|,
name|int
name|delta
parameter_list|)
block|{
if|if
condition|(
name|ls
operator|.
name|empty
condition|)
return|return
literal|0
return|;
name|int
name|old_size
init|=
name|ls
operator|.
name|size
decl_stmt|;
name|ls
operator|.
name|size
operator|=
name|qMin
argument_list|(
name|ls
operator|.
name|size
operator|+
name|delta
argument_list|,
name|ls
operator|.
name|maximumSize
argument_list|)
expr_stmt|;
return|return
name|ls
operator|.
name|size
operator|-
name|old_size
return|;
block|}
end_function
begin_function
DECL|function|separatorMoveHelper
specifier|static
name|int
name|separatorMoveHelper
parameter_list|(
name|QVector
argument_list|<
name|QLayoutStruct
argument_list|>
modifier|&
name|list
parameter_list|,
name|int
name|index
parameter_list|,
name|int
name|delta
parameter_list|,
name|int
name|sep
parameter_list|)
block|{
comment|// adjust sizes
name|int
name|pos
init|=
operator|-
literal|1
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|list
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
specifier|const
name|QLayoutStruct
modifier|&
name|ls
init|=
name|list
operator|.
name|at
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|ls
operator|.
name|empty
condition|)
block|{
name|pos
operator|=
name|ls
operator|.
name|pos
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
name|pos
operator|==
operator|-
literal|1
condition|)
return|return
literal|0
return|;
if|if
condition|(
name|delta
operator|>
literal|0
condition|)
block|{
name|int
name|growlimit
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<=
name|index
condition|;
operator|++
name|i
control|)
block|{
specifier|const
name|QLayoutStruct
modifier|&
name|ls
init|=
name|list
operator|.
name|at
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|ls
operator|.
name|empty
condition|)
continue|continue;
if|if
condition|(
name|ls
operator|.
name|maximumSize
operator|==
name|QLAYOUTSIZE_MAX
condition|)
block|{
name|growlimit
operator|=
name|QLAYOUTSIZE_MAX
expr_stmt|;
break|break;
block|}
name|growlimit
operator|+=
name|ls
operator|.
name|maximumSize
operator|-
name|ls
operator|.
name|size
expr_stmt|;
block|}
if|if
condition|(
name|delta
operator|>
name|growlimit
condition|)
name|delta
operator|=
name|growlimit
expr_stmt|;
name|int
name|d
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
name|index
operator|+
literal|1
init|;
name|d
operator|<
name|delta
operator|&&
name|i
operator|<
name|list
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
name|d
operator|+=
name|shrink
argument_list|(
name|list
index|[
name|i
index|]
argument_list|,
name|delta
operator|-
name|d
argument_list|)
expr_stmt|;
name|delta
operator|=
name|d
expr_stmt|;
name|d
operator|=
literal|0
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
name|index
init|;
name|d
operator|<
name|delta
operator|&&
name|i
operator|>=
literal|0
condition|;
operator|--
name|i
control|)
name|d
operator|+=
name|grow
argument_list|(
name|list
index|[
name|i
index|]
argument_list|,
name|delta
operator|-
name|d
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|delta
operator|<
literal|0
condition|)
block|{
name|int
name|growlimit
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
name|index
operator|+
literal|1
init|;
name|i
operator|<
name|list
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
specifier|const
name|QLayoutStruct
modifier|&
name|ls
init|=
name|list
operator|.
name|at
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|ls
operator|.
name|empty
condition|)
continue|continue;
if|if
condition|(
name|ls
operator|.
name|maximumSize
operator|==
name|QLAYOUTSIZE_MAX
condition|)
block|{
name|growlimit
operator|=
name|QLAYOUTSIZE_MAX
expr_stmt|;
break|break;
block|}
name|growlimit
operator|+=
name|ls
operator|.
name|maximumSize
operator|-
name|ls
operator|.
name|size
expr_stmt|;
block|}
if|if
condition|(
operator|-
name|delta
operator|>
name|growlimit
condition|)
name|delta
operator|=
operator|-
name|growlimit
expr_stmt|;
name|int
name|d
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
name|index
init|;
name|d
operator|<
operator|-
name|delta
operator|&&
name|i
operator|>=
literal|0
condition|;
operator|--
name|i
control|)
name|d
operator|+=
name|shrink
argument_list|(
name|list
index|[
name|i
index|]
argument_list|,
operator|-
name|delta
operator|-
name|d
argument_list|)
expr_stmt|;
name|delta
operator|=
operator|-
name|d
expr_stmt|;
name|d
operator|=
literal|0
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
name|index
operator|+
literal|1
init|;
name|d
operator|<
operator|-
name|delta
operator|&&
name|i
operator|<
name|list
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
name|d
operator|+=
name|grow
argument_list|(
name|list
index|[
name|i
index|]
argument_list|,
operator|-
name|delta
operator|-
name|d
argument_list|)
expr_stmt|;
block|}
comment|// adjust positions
name|bool
name|first
init|=
literal|true
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|list
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|QLayoutStruct
modifier|&
name|ls
init|=
name|list
index|[
name|i
index|]
decl_stmt|;
if|if
condition|(
name|ls
operator|.
name|empty
condition|)
block|{
name|ls
operator|.
name|pos
operator|=
name|pos
operator|+
operator|(
name|first
condition|?
literal|0
else|:
name|sep
operator|)
expr_stmt|;
continue|continue;
block|}
if|if
condition|(
operator|!
name|first
condition|)
name|pos
operator|+=
name|sep
expr_stmt|;
name|ls
operator|.
name|pos
operator|=
name|pos
expr_stmt|;
name|pos
operator|+=
name|ls
operator|.
name|size
expr_stmt|;
name|first
operator|=
literal|false
expr_stmt|;
block|}
return|return
name|delta
return|;
block|}
end_function
begin_function
DECL|function|separatorMove
name|int
name|QDockAreaLayoutInfo
operator|::
name|separatorMove
parameter_list|(
name|int
name|index
parameter_list|,
name|int
name|delta
parameter_list|)
block|{
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
name|Q_ASSERT
argument_list|(
operator|!
name|tabbed
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QVector
argument_list|<
name|QLayoutStruct
argument_list|>
name|list
argument_list|(
name|item_list
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|list
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
specifier|const
name|QDockAreaLayoutItem
modifier|&
name|item
init|=
name|item_list
operator|.
name|at
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|QLayoutStruct
modifier|&
name|ls
init|=
name|list
index|[
name|i
index|]
decl_stmt|;
name|Q_ASSERT
argument_list|(
operator|!
operator|(
name|item
operator|.
name|flags
operator|&
name|QDockAreaLayoutItem
operator|::
name|GapItem
operator|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|item
operator|.
name|skip
argument_list|()
condition|)
block|{
name|ls
operator|.
name|empty
operator|=
literal|true
expr_stmt|;
block|}
else|else
block|{
specifier|const
name|int
name|separatorSpace
init|=
name|item
operator|.
name|hasFixedSize
argument_list|(
name|o
argument_list|)
condition|?
literal|0
else|:
operator|*
name|sep
decl_stmt|;
name|ls
operator|.
name|empty
operator|=
literal|false
expr_stmt|;
name|ls
operator|.
name|pos
operator|=
name|item
operator|.
name|pos
expr_stmt|;
name|ls
operator|.
name|size
operator|=
name|item
operator|.
name|size
operator|+
name|separatorSpace
expr_stmt|;
name|ls
operator|.
name|minimumSize
operator|=
name|pick
argument_list|(
name|o
argument_list|,
name|item
operator|.
name|minimumSize
argument_list|()
argument_list|)
operator|+
name|separatorSpace
expr_stmt|;
name|ls
operator|.
name|maximumSize
operator|=
name|pick
argument_list|(
name|o
argument_list|,
name|item
operator|.
name|maximumSize
argument_list|()
argument_list|)
operator|+
name|separatorSpace
expr_stmt|;
block|}
block|}
comment|//the separator space has been added to the size, so we pass 0 as a parameter
name|delta
operator|=
name|separatorMoveHelper
argument_list|(
name|list
argument_list|,
name|index
argument_list|,
name|delta
argument_list|,
literal|0
comment|/*separator*/
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|list
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|QDockAreaLayoutItem
modifier|&
name|item
init|=
name|item_list
index|[
name|i
index|]
decl_stmt|;
if|if
condition|(
name|item
operator|.
name|skip
argument_list|()
condition|)
continue|continue;
name|QLayoutStruct
modifier|&
name|ls
init|=
name|list
index|[
name|i
index|]
decl_stmt|;
specifier|const
name|int
name|separatorSpace
init|=
name|item
operator|.
name|hasFixedSize
argument_list|(
name|o
argument_list|)
condition|?
literal|0
else|:
operator|*
name|sep
decl_stmt|;
name|item
operator|.
name|size
operator|=
name|ls
operator|.
name|size
operator|-
name|separatorSpace
expr_stmt|;
name|item
operator|.
name|pos
operator|=
name|ls
operator|.
name|pos
expr_stmt|;
if|if
condition|(
name|item
operator|.
name|subinfo
operator|!=
literal|0
condition|)
block|{
name|item
operator|.
name|subinfo
operator|->
name|rect
operator|=
name|itemRect
argument_list|(
name|i
argument_list|)
expr_stmt|;
name|item
operator|.
name|subinfo
operator|->
name|fitItems
argument_list|()
expr_stmt|;
block|}
block|}
return|return
name|delta
return|;
block|}
end_function
begin_function
DECL|function|unnest
name|void
name|QDockAreaLayoutInfo
operator|::
name|unnest
parameter_list|(
name|int
name|index
parameter_list|)
block|{
name|QDockAreaLayoutItem
modifier|&
name|item
init|=
name|item_list
index|[
name|index
index|]
decl_stmt|;
if|if
condition|(
name|item
operator|.
name|subinfo
operator|==
literal|0
condition|)
return|return;
if|if
condition|(
name|item
operator|.
name|subinfo
operator|->
name|item_list
operator|.
name|count
argument_list|()
operator|>
literal|1
condition|)
return|return;
if|if
condition|(
name|item
operator|.
name|subinfo
operator|->
name|item_list
operator|.
name|count
argument_list|()
operator|==
literal|0
condition|)
block|{
name|item_list
operator|.
name|removeAt
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|item
operator|.
name|subinfo
operator|->
name|item_list
operator|.
name|count
argument_list|()
operator|==
literal|1
condition|)
block|{
name|QDockAreaLayoutItem
modifier|&
name|child
init|=
name|item
operator|.
name|subinfo
operator|->
name|item_list
operator|.
name|first
argument_list|()
decl_stmt|;
if|if
condition|(
name|child
operator|.
name|widgetItem
operator|!=
literal|0
condition|)
block|{
name|item
operator|.
name|widgetItem
operator|=
name|child
operator|.
name|widgetItem
expr_stmt|;
operator|delete
name|item
operator|.
name|subinfo
expr_stmt|;
name|item
operator|.
name|subinfo
operator|=
literal|0
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|child
operator|.
name|subinfo
operator|!=
literal|0
condition|)
block|{
name|QDockAreaLayoutInfo
modifier|*
name|tmp
init|=
name|item
operator|.
name|subinfo
decl_stmt|;
name|item
operator|.
name|subinfo
operator|=
name|child
operator|.
name|subinfo
expr_stmt|;
name|child
operator|.
name|subinfo
operator|=
literal|0
expr_stmt|;
name|tmp
operator|->
name|item_list
operator|.
name|clear
argument_list|()
expr_stmt|;
operator|delete
name|tmp
expr_stmt|;
block|}
block|}
block|}
end_function
begin_function
DECL|function|remove
name|void
name|QDockAreaLayoutInfo
operator|::
name|remove
parameter_list|(
specifier|const
name|QList
argument_list|<
name|int
argument_list|>
modifier|&
name|path
parameter_list|)
block|{
name|Q_ASSERT
argument_list|(
operator|!
name|path
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|path
operator|.
name|count
argument_list|()
operator|>
literal|1
condition|)
block|{
specifier|const
name|int
name|index
init|=
name|path
operator|.
name|first
argument_list|()
decl_stmt|;
name|QDockAreaLayoutItem
modifier|&
name|item
init|=
name|item_list
index|[
name|index
index|]
decl_stmt|;
name|Q_ASSERT
argument_list|(
name|item
operator|.
name|subinfo
operator|!=
literal|0
argument_list|)
expr_stmt|;
name|item
operator|.
name|subinfo
operator|->
name|remove
argument_list|(
name|path
operator|.
name|mid
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|unnest
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|int
name|index
init|=
name|path
operator|.
name|first
argument_list|()
decl_stmt|;
name|item_list
operator|.
name|removeAt
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|plug
name|QLayoutItem
modifier|*
name|QDockAreaLayoutInfo
operator|::
name|plug
parameter_list|(
specifier|const
name|QList
argument_list|<
name|int
argument_list|>
modifier|&
name|path
parameter_list|)
block|{
name|Q_ASSERT
argument_list|(
operator|!
name|path
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|int
name|index
init|=
name|path
operator|.
name|first
argument_list|()
decl_stmt|;
if|if
condition|(
name|index
operator|<
literal|0
condition|)
name|index
operator|=
operator|-
name|index
operator|-
literal|1
expr_stmt|;
if|if
condition|(
name|path
operator|.
name|count
argument_list|()
operator|>
literal|1
condition|)
block|{
specifier|const
name|QDockAreaLayoutItem
modifier|&
name|item
init|=
name|item_list
operator|.
name|at
argument_list|(
name|index
argument_list|)
decl_stmt|;
name|Q_ASSERT
argument_list|(
name|item
operator|.
name|subinfo
operator|!=
literal|0
argument_list|)
expr_stmt|;
return|return
name|item
operator|.
name|subinfo
operator|->
name|plug
argument_list|(
name|path
operator|.
name|mid
argument_list|(
literal|1
argument_list|)
argument_list|)
return|;
block|}
name|QDockAreaLayoutItem
modifier|&
name|item
init|=
name|item_list
index|[
name|index
index|]
decl_stmt|;
name|Q_ASSERT
argument_list|(
name|item
operator|.
name|widgetItem
operator|!=
literal|0
argument_list|)
expr_stmt|;
name|Q_ASSERT
argument_list|(
name|item
operator|.
name|flags
operator|&
name|QDockAreaLayoutItem
operator|::
name|GapItem
argument_list|)
expr_stmt|;
name|item
operator|.
name|flags
operator|&=
operator|~
name|QDockAreaLayoutItem
operator|::
name|GapItem
expr_stmt|;
name|QRect
name|result
decl_stmt|;
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
if|if
condition|(
name|tabbed
condition|)
block|{     }
else|else
endif|#
directive|endif
block|{
name|int
name|prev
init|=
name|this
operator|->
name|prev
argument_list|(
name|index
argument_list|)
decl_stmt|;
name|int
name|next
init|=
name|this
operator|->
name|next
argument_list|(
name|index
argument_list|)
decl_stmt|;
if|if
condition|(
name|prev
operator|!=
operator|-
literal|1
operator|&&
operator|!
operator|(
name|item_list
operator|.
name|at
argument_list|(
name|prev
argument_list|)
operator|.
name|flags
operator|&
name|QDockAreaLayoutItem
operator|::
name|GapItem
operator|)
condition|)
block|{
name|item
operator|.
name|pos
operator|+=
operator|*
name|sep
expr_stmt|;
name|item
operator|.
name|size
operator|-=
operator|*
name|sep
expr_stmt|;
block|}
if|if
condition|(
name|next
operator|!=
operator|-
literal|1
operator|&&
operator|!
operator|(
name|item_list
operator|.
name|at
argument_list|(
name|next
argument_list|)
operator|.
name|flags
operator|&
name|QDockAreaLayoutItem
operator|::
name|GapItem
operator|)
condition|)
name|item
operator|.
name|size
operator|-=
operator|*
name|sep
expr_stmt|;
name|QPoint
name|pos
decl_stmt|;
name|rpick
argument_list|(
name|o
argument_list|,
name|pos
argument_list|)
operator|=
name|item
operator|.
name|pos
expr_stmt|;
name|rperp
argument_list|(
name|o
argument_list|,
name|pos
argument_list|)
operator|=
name|perp
argument_list|(
name|o
argument_list|,
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|)
expr_stmt|;
name|QSize
name|s
decl_stmt|;
name|rpick
argument_list|(
name|o
argument_list|,
name|s
argument_list|)
operator|=
name|item
operator|.
name|size
expr_stmt|;
name|rperp
argument_list|(
name|o
argument_list|,
name|s
argument_list|)
operator|=
name|perp
argument_list|(
name|o
argument_list|,
name|rect
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
name|QRect
argument_list|(
name|pos
argument_list|,
name|s
argument_list|)
expr_stmt|;
block|}
return|return
name|item
operator|.
name|widgetItem
return|;
block|}
end_function
begin_function
DECL|function|unplug
name|QLayoutItem
modifier|*
name|QDockAreaLayoutInfo
operator|::
name|unplug
parameter_list|(
specifier|const
name|QList
argument_list|<
name|int
argument_list|>
modifier|&
name|path
parameter_list|)
block|{
name|Q_ASSERT
argument_list|(
operator|!
name|path
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
specifier|const
name|int
name|index
init|=
name|path
operator|.
name|first
argument_list|()
decl_stmt|;
if|if
condition|(
name|path
operator|.
name|count
argument_list|()
operator|>
literal|1
condition|)
block|{
specifier|const
name|QDockAreaLayoutItem
modifier|&
name|item
init|=
name|item_list
operator|.
name|at
argument_list|(
name|index
argument_list|)
decl_stmt|;
name|Q_ASSERT
argument_list|(
name|item
operator|.
name|subinfo
operator|!=
literal|0
argument_list|)
expr_stmt|;
return|return
name|item
operator|.
name|subinfo
operator|->
name|unplug
argument_list|(
name|path
operator|.
name|mid
argument_list|(
literal|1
argument_list|)
argument_list|)
return|;
block|}
name|QDockAreaLayoutItem
modifier|&
name|item
init|=
name|item_list
index|[
name|index
index|]
decl_stmt|;
name|int
name|prev
init|=
name|this
operator|->
name|prev
argument_list|(
name|index
argument_list|)
decl_stmt|;
name|int
name|next
init|=
name|this
operator|->
name|next
argument_list|(
name|index
argument_list|)
decl_stmt|;
name|Q_ASSERT
argument_list|(
operator|!
operator|(
name|item
operator|.
name|flags
operator|&
name|QDockAreaLayoutItem
operator|::
name|GapItem
operator|)
argument_list|)
expr_stmt|;
name|item
operator|.
name|flags
operator||=
name|QDockAreaLayoutItem
operator|::
name|GapItem
expr_stmt|;
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
if|if
condition|(
name|tabbed
condition|)
block|{     }
else|else
endif|#
directive|endif
block|{
if|if
condition|(
name|prev
operator|!=
operator|-
literal|1
operator|&&
operator|!
operator|(
name|item_list
operator|.
name|at
argument_list|(
name|prev
argument_list|)
operator|.
name|flags
operator|&
name|QDockAreaLayoutItem
operator|::
name|GapItem
operator|)
condition|)
block|{
name|item
operator|.
name|pos
operator|-=
operator|*
name|sep
expr_stmt|;
name|item
operator|.
name|size
operator|+=
operator|*
name|sep
expr_stmt|;
block|}
if|if
condition|(
name|next
operator|!=
operator|-
literal|1
operator|&&
operator|!
operator|(
name|item_list
operator|.
name|at
argument_list|(
name|next
argument_list|)
operator|.
name|flags
operator|&
name|QDockAreaLayoutItem
operator|::
name|GapItem
operator|)
condition|)
name|item
operator|.
name|size
operator|+=
operator|*
name|sep
expr_stmt|;
block|}
return|return
name|item
operator|.
name|widgetItem
return|;
block|}
end_function
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
end_ifndef
begin_function
DECL|function|currentTabId
name|quintptr
name|QDockAreaLayoutInfo
operator|::
name|currentTabId
parameter_list|()
specifier|const
block|{
if|if
condition|(
operator|!
name|tabbed
operator|||
name|tabBar
operator|==
literal|0
condition|)
return|return
literal|0
return|;
name|int
name|index
init|=
name|tabBar
operator|->
name|currentIndex
argument_list|()
decl_stmt|;
if|if
condition|(
name|index
operator|==
operator|-
literal|1
condition|)
return|return
literal|0
return|;
return|return
name|qvariant_cast
argument_list|<
name|quintptr
argument_list|>
argument_list|(
name|tabBar
operator|->
name|tabData
argument_list|(
name|index
argument_list|)
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|setCurrentTab
name|void
name|QDockAreaLayoutInfo
operator|::
name|setCurrentTab
parameter_list|(
name|QWidget
modifier|*
name|widget
parameter_list|)
block|{
name|setCurrentTabId
argument_list|(
cast|reinterpret_cast
argument_list|<
name|quintptr
argument_list|>
argument_list|(
name|widget
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setCurrentTabId
name|void
name|QDockAreaLayoutInfo
operator|::
name|setCurrentTabId
parameter_list|(
name|quintptr
name|id
parameter_list|)
block|{
if|if
condition|(
operator|!
name|tabbed
operator|||
name|tabBar
operator|==
literal|0
condition|)
return|return;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|tabBar
operator|->
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
if|if
condition|(
name|qvariant_cast
argument_list|<
name|quintptr
argument_list|>
argument_list|(
name|tabBar
operator|->
name|tabData
argument_list|(
name|i
argument_list|)
argument_list|)
operator|==
name|id
condition|)
block|{
name|tabBar
operator|->
name|setCurrentIndex
argument_list|(
name|i
argument_list|)
expr_stmt|;
return|return;
block|}
block|}
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_TABBAR
end_comment
begin_function
DECL|function|dockedGeometry
specifier|static
name|QRect
name|dockedGeometry
parameter_list|(
name|QWidget
modifier|*
name|widget
parameter_list|)
block|{
name|int
name|titleHeight
init|=
literal|0
decl_stmt|;
name|QDockWidgetLayout
modifier|*
name|layout
init|=
name|qobject_cast
argument_list|<
name|QDockWidgetLayout
operator|*
argument_list|>
argument_list|(
name|widget
operator|->
name|layout
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|layout
operator|!=
literal|0
operator|&&
name|layout
operator|->
name|nativeWindowDeco
argument_list|()
condition|)
name|titleHeight
operator|=
name|layout
operator|->
name|titleHeight
argument_list|()
expr_stmt|;
name|QRect
name|result
init|=
name|widget
operator|->
name|geometry
argument_list|()
decl_stmt|;
name|result
operator|.
name|adjust
argument_list|(
literal|0
argument_list|,
operator|-
name|titleHeight
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
end_function
begin_function
DECL|function|insertGap
name|bool
name|QDockAreaLayoutInfo
operator|::
name|insertGap
parameter_list|(
specifier|const
name|QList
argument_list|<
name|int
argument_list|>
modifier|&
name|path
parameter_list|,
name|QLayoutItem
modifier|*
name|dockWidgetItem
parameter_list|)
block|{
name|Q_ASSERT
argument_list|(
operator|!
name|path
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|bool
name|insert_tabbed
init|=
literal|false
decl_stmt|;
name|int
name|index
init|=
name|path
operator|.
name|first
argument_list|()
decl_stmt|;
if|if
condition|(
name|index
operator|<
literal|0
condition|)
block|{
name|insert_tabbed
operator|=
literal|true
expr_stmt|;
name|index
operator|=
operator|-
name|index
operator|-
literal|1
expr_stmt|;
block|}
comment|//    dump(qDebug()<< "insertGap() before:"<< index<< tabIndex, *this, QString());
if|if
condition|(
name|path
operator|.
name|count
argument_list|()
operator|>
literal|1
condition|)
block|{
name|QDockAreaLayoutItem
modifier|&
name|item
init|=
name|item_list
index|[
name|index
index|]
decl_stmt|;
if|if
condition|(
name|item
operator|.
name|subinfo
operator|==
literal|0
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
operator|||
operator|(
name|item
operator|.
name|subinfo
operator|->
name|tabbed
operator|&&
operator|!
name|insert_tabbed
operator|)
endif|#
directive|endif
condition|)
block|{
comment|// this is not yet a nested layout - make it
name|QDockAreaLayoutInfo
modifier|*
name|subinfo
init|=
name|item
operator|.
name|subinfo
decl_stmt|;
name|QLayoutItem
modifier|*
name|widgetItem
init|=
name|item
operator|.
name|widgetItem
decl_stmt|;
name|QPlaceHolderItem
modifier|*
name|placeHolderItem
init|=
name|item
operator|.
name|placeHolderItem
decl_stmt|;
name|QRect
name|r
init|=
name|subinfo
operator|==
literal|0
condition|?
name|widgetItem
condition|?
name|dockedGeometry
argument_list|(
name|widgetItem
operator|->
name|widget
argument_list|()
argument_list|)
else|:
name|placeHolderItem
operator|->
name|topLevelRect
else|:
name|subinfo
operator|->
name|rect
decl_stmt|;
name|Qt
operator|::
name|Orientation
name|opposite
init|=
name|o
operator|==
name|Qt
operator|::
name|Horizontal
condition|?
name|Qt
operator|::
name|Vertical
else|:
name|Qt
operator|::
name|Horizontal
decl_stmt|;
ifdef|#
directive|ifdef
name|QT_NO_TABBAR
specifier|const
name|int
name|tabBarShape
init|=
literal|0
decl_stmt|;
endif|#
directive|endif
name|QDockAreaLayoutInfo
modifier|*
name|new_info
init|=
operator|new
name|QDockAreaLayoutInfo
argument_list|(
name|sep
argument_list|,
name|dockPos
argument_list|,
name|opposite
argument_list|,
name|tabBarShape
argument_list|,
name|mainWindow
argument_list|)
decl_stmt|;
comment|//item become a new top-level
name|item
operator|.
name|subinfo
operator|=
name|new_info
expr_stmt|;
name|item
operator|.
name|widgetItem
operator|=
literal|0
expr_stmt|;
name|item
operator|.
name|placeHolderItem
operator|=
literal|0
expr_stmt|;
name|QDockAreaLayoutItem
name|new_item
init|=
name|widgetItem
operator|==
literal|0
condition|?
name|QDockAreaLayoutItem
argument_list|(
name|subinfo
argument_list|)
else|:
name|widgetItem
condition|?
name|QDockAreaLayoutItem
argument_list|(
name|widgetItem
argument_list|)
else|:
name|QDockAreaLayoutItem
argument_list|(
name|placeHolderItem
argument_list|)
decl_stmt|;
name|new_item
operator|.
name|size
operator|=
name|pick
argument_list|(
name|opposite
argument_list|,
name|r
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|new_item
operator|.
name|pos
operator|=
name|pick
argument_list|(
name|opposite
argument_list|,
name|r
operator|.
name|topLeft
argument_list|()
argument_list|)
expr_stmt|;
name|new_info
operator|->
name|item_list
operator|.
name|append
argument_list|(
name|new_item
argument_list|)
expr_stmt|;
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
if|if
condition|(
name|insert_tabbed
condition|)
block|{
name|new_info
operator|->
name|tabbed
operator|=
literal|true
expr_stmt|;
block|}
endif|#
directive|endif
block|}
return|return
name|item
operator|.
name|subinfo
operator|->
name|insertGap
argument_list|(
name|path
operator|.
name|mid
argument_list|(
literal|1
argument_list|)
argument_list|,
name|dockWidgetItem
argument_list|)
return|;
block|}
comment|// create the gap item
name|QDockAreaLayoutItem
name|gap_item
decl_stmt|;
name|gap_item
operator|.
name|flags
operator||=
name|QDockAreaLayoutItem
operator|::
name|GapItem
expr_stmt|;
name|gap_item
operator|.
name|widgetItem
operator|=
name|dockWidgetItem
expr_stmt|;
comment|// so minimumSize(), maximumSize() and
comment|// sizeHint() will work
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
if|if
condition|(
operator|!
name|tabbed
condition|)
endif|#
directive|endif
block|{
name|int
name|prev
init|=
name|this
operator|->
name|prev
argument_list|(
name|index
argument_list|)
decl_stmt|;
name|int
name|next
init|=
name|this
operator|->
name|next
argument_list|(
name|index
operator|-
literal|1
argument_list|)
decl_stmt|;
comment|// find out how much space we have in the layout
name|int
name|space
init|=
literal|0
decl_stmt|;
if|if
condition|(
name|isEmpty
argument_list|()
condition|)
block|{
comment|// I am an empty dock area, therefore I am a top-level dock area.
switch|switch
condition|(
name|dockPos
condition|)
block|{
case|case
name|QInternal
operator|::
name|LeftDock
case|:
case|case
name|QInternal
operator|::
name|RightDock
case|:
if|if
condition|(
name|o
operator|==
name|Qt
operator|::
name|Vertical
condition|)
block|{
comment|// the "size" is the height of the dock area (remember we are empty)
name|space
operator|=
name|pick
argument_list|(
name|Qt
operator|::
name|Vertical
argument_list|,
name|rect
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|space
operator|=
name|pick
argument_list|(
name|Qt
operator|::
name|Horizontal
argument_list|,
name|dockWidgetItem
operator|->
name|widget
argument_list|()
operator|->
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|QInternal
operator|::
name|TopDock
case|:
case|case
name|QInternal
operator|::
name|BottomDock
case|:
default|default:
if|if
condition|(
name|o
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
block|{
comment|// the "size" is width of the dock area
name|space
operator|=
name|pick
argument_list|(
name|Qt
operator|::
name|Horizontal
argument_list|,
name|rect
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|space
operator|=
name|pick
argument_list|(
name|Qt
operator|::
name|Vertical
argument_list|,
name|dockWidgetItem
operator|->
name|widget
argument_list|()
operator|->
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
break|break;
block|}
block|}
else|else
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|item_list
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
specifier|const
name|QDockAreaLayoutItem
modifier|&
name|item
init|=
name|item_list
operator|.
name|at
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|item
operator|.
name|skip
argument_list|()
condition|)
continue|continue;
name|Q_ASSERT
argument_list|(
operator|!
operator|(
name|item
operator|.
name|flags
operator|&
name|QDockAreaLayoutItem
operator|::
name|GapItem
operator|)
argument_list|)
expr_stmt|;
name|space
operator|+=
name|item
operator|.
name|size
operator|-
name|pick
argument_list|(
name|o
argument_list|,
name|item
operator|.
name|minimumSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
comment|// find the actual size of the gap
name|int
name|gap_size
init|=
literal|0
decl_stmt|;
name|int
name|sep_size
init|=
literal|0
decl_stmt|;
if|if
condition|(
name|isEmpty
argument_list|()
condition|)
block|{
name|gap_size
operator|=
name|space
expr_stmt|;
name|sep_size
operator|=
literal|0
expr_stmt|;
block|}
else|else
block|{
name|QRect
name|r
init|=
name|dockedGeometry
argument_list|(
name|dockWidgetItem
operator|->
name|widget
argument_list|()
argument_list|)
decl_stmt|;
name|gap_size
operator|=
name|pick
argument_list|(
name|o
argument_list|,
name|r
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|prev
operator|!=
operator|-
literal|1
operator|&&
operator|!
operator|(
name|item_list
operator|.
name|at
argument_list|(
name|prev
argument_list|)
operator|.
name|flags
operator|&
name|QDockAreaLayoutItem
operator|::
name|GapItem
operator|)
condition|)
name|sep_size
operator|+=
operator|*
name|sep
expr_stmt|;
if|if
condition|(
name|next
operator|!=
operator|-
literal|1
operator|&&
operator|!
operator|(
name|item_list
operator|.
name|at
argument_list|(
name|next
argument_list|)
operator|.
name|flags
operator|&
name|QDockAreaLayoutItem
operator|::
name|GapItem
operator|)
condition|)
name|sep_size
operator|+=
operator|*
name|sep
expr_stmt|;
block|}
if|if
condition|(
name|gap_size
operator|+
name|sep_size
operator|>
name|space
condition|)
name|gap_size
operator|=
name|pick
argument_list|(
name|o
argument_list|,
name|gap_item
operator|.
name|minimumSize
argument_list|()
argument_list|)
expr_stmt|;
name|gap_item
operator|.
name|size
operator|=
name|gap_size
operator|+
name|sep_size
expr_stmt|;
block|}
comment|// finally, insert the gap
name|item_list
operator|.
name|insert
argument_list|(
name|index
argument_list|,
name|gap_item
argument_list|)
expr_stmt|;
comment|//    dump(qDebug()<< "insertGap() after:"<< index<< tabIndex, *this, QString());
return|return
literal|true
return|;
block|}
end_function
begin_function
DECL|function|info
name|QDockAreaLayoutInfo
modifier|*
name|QDockAreaLayoutInfo
operator|::
name|info
parameter_list|(
name|QWidget
modifier|*
name|widget
parameter_list|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|item_list
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
specifier|const
name|QDockAreaLayoutItem
modifier|&
name|item
init|=
name|item_list
operator|.
name|at
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|item
operator|.
name|skip
argument_list|()
condition|)
continue|continue;
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
if|if
condition|(
name|tabbed
operator|&&
name|widget
operator|==
name|tabBar
condition|)
return|return
name|this
return|;
endif|#
directive|endif
if|if
condition|(
name|item
operator|.
name|widgetItem
operator|!=
literal|0
operator|&&
name|item
operator|.
name|widgetItem
operator|->
name|widget
argument_list|()
operator|==
name|widget
condition|)
return|return
name|this
return|;
if|if
condition|(
name|item
operator|.
name|subinfo
operator|!=
literal|0
condition|)
block|{
if|if
condition|(
name|QDockAreaLayoutInfo
modifier|*
name|result
init|=
name|item
operator|.
name|subinfo
operator|->
name|info
argument_list|(
name|widget
argument_list|)
condition|)
return|return
name|result
return|;
block|}
block|}
return|return
literal|0
return|;
block|}
end_function
begin_function
DECL|function|info
name|QDockAreaLayoutInfo
modifier|*
name|QDockAreaLayoutInfo
operator|::
name|info
parameter_list|(
specifier|const
name|QList
argument_list|<
name|int
argument_list|>
modifier|&
name|path
parameter_list|)
block|{
name|int
name|index
init|=
name|path
operator|.
name|first
argument_list|()
decl_stmt|;
if|if
condition|(
name|index
operator|<
literal|0
condition|)
name|index
operator|=
operator|-
name|index
operator|-
literal|1
expr_stmt|;
if|if
condition|(
name|index
operator|>=
name|item_list
operator|.
name|count
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|path
operator|.
name|count
argument_list|()
operator|==
literal|1
operator|||
name|item_list
index|[
name|index
index|]
operator|.
name|subinfo
operator|==
literal|0
condition|)
return|return
name|this
return|;
return|return
name|item_list
index|[
name|index
index|]
operator|.
name|subinfo
operator|->
name|info
argument_list|(
name|path
operator|.
name|mid
argument_list|(
literal|1
argument_list|)
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|itemRect
name|QRect
name|QDockAreaLayoutInfo
operator|::
name|itemRect
parameter_list|(
name|int
name|index
parameter_list|)
specifier|const
block|{
specifier|const
name|QDockAreaLayoutItem
modifier|&
name|item
init|=
name|item_list
operator|.
name|at
argument_list|(
name|index
argument_list|)
decl_stmt|;
if|if
condition|(
name|item
operator|.
name|skip
argument_list|()
condition|)
return|return
name|QRect
argument_list|()
return|;
name|QRect
name|result
decl_stmt|;
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
if|if
condition|(
name|tabbed
condition|)
block|{
if|if
condition|(
name|tabId
argument_list|(
name|item
argument_list|)
operator|==
name|currentTabId
argument_list|()
condition|)
name|result
operator|=
name|tabContentRect
argument_list|()
expr_stmt|;
block|}
else|else
endif|#
directive|endif
block|{
name|QPoint
name|pos
decl_stmt|;
name|rpick
argument_list|(
name|o
argument_list|,
name|pos
argument_list|)
operator|=
name|item
operator|.
name|pos
expr_stmt|;
name|rperp
argument_list|(
name|o
argument_list|,
name|pos
argument_list|)
operator|=
name|perp
argument_list|(
name|o
argument_list|,
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|)
expr_stmt|;
name|QSize
name|s
decl_stmt|;
name|rpick
argument_list|(
name|o
argument_list|,
name|s
argument_list|)
operator|=
name|item
operator|.
name|size
expr_stmt|;
name|rperp
argument_list|(
name|o
argument_list|,
name|s
argument_list|)
operator|=
name|perp
argument_list|(
name|o
argument_list|,
name|rect
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
name|QRect
argument_list|(
name|pos
argument_list|,
name|s
argument_list|)
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
end_function
begin_function
DECL|function|itemRect
name|QRect
name|QDockAreaLayoutInfo
operator|::
name|itemRect
parameter_list|(
specifier|const
name|QList
argument_list|<
name|int
argument_list|>
modifier|&
name|path
parameter_list|)
specifier|const
block|{
name|Q_ASSERT
argument_list|(
operator|!
name|path
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
specifier|const
name|int
name|index
init|=
name|path
operator|.
name|first
argument_list|()
decl_stmt|;
if|if
condition|(
name|path
operator|.
name|count
argument_list|()
operator|>
literal|1
condition|)
block|{
specifier|const
name|QDockAreaLayoutItem
modifier|&
name|item
init|=
name|item_list
operator|.
name|at
argument_list|(
name|index
argument_list|)
decl_stmt|;
name|Q_ASSERT
argument_list|(
name|item
operator|.
name|subinfo
operator|!=
literal|0
argument_list|)
expr_stmt|;
return|return
name|item
operator|.
name|subinfo
operator|->
name|itemRect
argument_list|(
name|path
operator|.
name|mid
argument_list|(
literal|1
argument_list|)
argument_list|)
return|;
block|}
return|return
name|itemRect
argument_list|(
name|index
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|separatorRect
name|QRect
name|QDockAreaLayoutInfo
operator|::
name|separatorRect
parameter_list|(
name|int
name|index
parameter_list|)
specifier|const
block|{
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
if|if
condition|(
name|tabbed
condition|)
return|return
name|QRect
argument_list|()
return|;
endif|#
directive|endif
specifier|const
name|QDockAreaLayoutItem
modifier|&
name|item
init|=
name|item_list
operator|.
name|at
argument_list|(
name|index
argument_list|)
decl_stmt|;
if|if
condition|(
name|item
operator|.
name|skip
argument_list|()
condition|)
return|return
name|QRect
argument_list|()
return|;
name|QPoint
name|pos
init|=
name|rect
operator|.
name|topLeft
argument_list|()
decl_stmt|;
name|rpick
argument_list|(
name|o
argument_list|,
name|pos
argument_list|)
operator|=
name|item
operator|.
name|pos
operator|+
name|item
operator|.
name|size
expr_stmt|;
name|QSize
name|s
init|=
name|rect
operator|.
name|size
argument_list|()
decl_stmt|;
name|rpick
argument_list|(
name|o
argument_list|,
name|s
argument_list|)
operator|=
operator|*
name|sep
expr_stmt|;
return|return
name|QRect
argument_list|(
name|pos
argument_list|,
name|s
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|separatorRect
name|QRect
name|QDockAreaLayoutInfo
operator|::
name|separatorRect
parameter_list|(
specifier|const
name|QList
argument_list|<
name|int
argument_list|>
modifier|&
name|path
parameter_list|)
specifier|const
block|{
name|Q_ASSERT
argument_list|(
operator|!
name|path
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
specifier|const
name|int
name|index
init|=
name|path
operator|.
name|first
argument_list|()
decl_stmt|;
if|if
condition|(
name|path
operator|.
name|count
argument_list|()
operator|>
literal|1
condition|)
block|{
specifier|const
name|QDockAreaLayoutItem
modifier|&
name|item
init|=
name|item_list
operator|.
name|at
argument_list|(
name|index
argument_list|)
decl_stmt|;
name|Q_ASSERT
argument_list|(
name|item
operator|.
name|subinfo
operator|!=
literal|0
argument_list|)
expr_stmt|;
return|return
name|item
operator|.
name|subinfo
operator|->
name|separatorRect
argument_list|(
name|path
operator|.
name|mid
argument_list|(
literal|1
argument_list|)
argument_list|)
return|;
block|}
return|return
name|separatorRect
argument_list|(
name|index
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|findSeparator
name|QList
argument_list|<
name|int
argument_list|>
name|QDockAreaLayoutInfo
operator|::
name|findSeparator
parameter_list|(
specifier|const
name|QPoint
modifier|&
name|_pos
parameter_list|)
specifier|const
block|{
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
if|if
condition|(
name|tabbed
condition|)
return|return
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
return|;
endif|#
directive|endif
name|int
name|pos
init|=
name|pick
argument_list|(
name|o
argument_list|,
name|_pos
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|item_list
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
specifier|const
name|QDockAreaLayoutItem
modifier|&
name|item
init|=
name|item_list
operator|.
name|at
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|item
operator|.
name|skip
argument_list|()
operator|||
operator|(
name|item
operator|.
name|flags
operator|&
name|QDockAreaLayoutItem
operator|::
name|GapItem
operator|)
condition|)
continue|continue;
if|if
condition|(
name|item
operator|.
name|pos
operator|+
name|item
operator|.
name|size
operator|>
name|pos
condition|)
block|{
if|if
condition|(
name|item
operator|.
name|subinfo
operator|!=
literal|0
condition|)
block|{
name|QList
argument_list|<
name|int
argument_list|>
name|result
init|=
name|item
operator|.
name|subinfo
operator|->
name|findSeparator
argument_list|(
name|_pos
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|result
operator|.
name|prepend
argument_list|(
name|i
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
else|else
block|{
return|return
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
return|;
block|}
block|}
block|}
name|int
name|next
init|=
name|this
operator|->
name|next
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|next
operator|==
operator|-
literal|1
operator|||
operator|(
name|item_list
operator|.
name|at
argument_list|(
name|next
argument_list|)
operator|.
name|flags
operator|&
name|QDockAreaLayoutItem
operator|::
name|GapItem
operator|)
condition|)
continue|continue;
name|QRect
name|sepRect
init|=
name|separatorRect
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|sepRect
operator|.
name|isNull
argument_list|()
operator|&&
operator|*
name|sep
operator|==
literal|1
condition|)
name|sepRect
operator|.
name|adjust
argument_list|(
operator|-
literal|2
argument_list|,
operator|-
literal|2
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
comment|//we also make sure we don't find a separator that's not there
if|if
condition|(
name|sepRect
operator|.
name|contains
argument_list|(
name|_pos
argument_list|)
operator|&&
operator|!
name|item
operator|.
name|hasFixedSize
argument_list|(
name|o
argument_list|)
condition|)
block|{
return|return
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
name|i
return|;
block|}
block|}
return|return
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|indexOfPlaceHolder
name|QList
argument_list|<
name|int
argument_list|>
name|QDockAreaLayoutInfo
operator|::
name|indexOfPlaceHolder
parameter_list|(
specifier|const
name|QString
modifier|&
name|objectName
parameter_list|)
specifier|const
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|item_list
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
specifier|const
name|QDockAreaLayoutItem
modifier|&
name|item
init|=
name|item_list
operator|.
name|at
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|item
operator|.
name|subinfo
operator|!=
literal|0
condition|)
block|{
name|QList
argument_list|<
name|int
argument_list|>
name|result
init|=
name|item
operator|.
name|subinfo
operator|->
name|indexOfPlaceHolder
argument_list|(
name|objectName
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|result
operator|.
name|prepend
argument_list|(
name|i
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
continue|continue;
block|}
if|if
condition|(
name|item
operator|.
name|placeHolderItem
operator|!=
literal|0
operator|&&
name|item
operator|.
name|placeHolderItem
operator|->
name|objectName
operator|==
name|objectName
condition|)
block|{
name|QList
argument_list|<
name|int
argument_list|>
name|result
decl_stmt|;
name|result
operator|<<
name|i
expr_stmt|;
return|return
name|result
return|;
block|}
block|}
return|return
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|indexOf
name|QList
argument_list|<
name|int
argument_list|>
name|QDockAreaLayoutInfo
operator|::
name|indexOf
parameter_list|(
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|item_list
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
specifier|const
name|QDockAreaLayoutItem
modifier|&
name|item
init|=
name|item_list
operator|.
name|at
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|item
operator|.
name|placeHolderItem
operator|!=
literal|0
condition|)
continue|continue;
if|if
condition|(
name|item
operator|.
name|subinfo
operator|!=
literal|0
condition|)
block|{
name|QList
argument_list|<
name|int
argument_list|>
name|result
init|=
name|item
operator|.
name|subinfo
operator|->
name|indexOf
argument_list|(
name|widget
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|result
operator|.
name|prepend
argument_list|(
name|i
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
continue|continue;
block|}
if|if
condition|(
operator|!
operator|(
name|item
operator|.
name|flags
operator|&
name|QDockAreaLayoutItem
operator|::
name|GapItem
operator|)
operator|&&
name|item
operator|.
name|widgetItem
operator|->
name|widget
argument_list|()
operator|==
name|widget
condition|)
block|{
name|QList
argument_list|<
name|int
argument_list|>
name|result
decl_stmt|;
name|result
operator|<<
name|i
expr_stmt|;
return|return
name|result
return|;
block|}
block|}
return|return
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|mainWindowLayout
name|QMainWindowLayout
modifier|*
name|QDockAreaLayoutInfo
operator|::
name|mainWindowLayout
parameter_list|()
specifier|const
block|{
name|QMainWindowLayout
modifier|*
name|result
init|=
name|qt_mainwindow_layout
argument_list|(
name|mainWindow
argument_list|)
decl_stmt|;
name|Q_ASSERT
argument_list|(
name|result
operator|!=
literal|0
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
end_function
begin_function
DECL|function|hasFixedSize
name|bool
name|QDockAreaLayoutInfo
operator|::
name|hasFixedSize
parameter_list|()
specifier|const
block|{
return|return
name|perp
argument_list|(
name|o
argument_list|,
name|minimumSize
argument_list|()
argument_list|)
operator|==
name|perp
argument_list|(
name|o
argument_list|,
name|maximumSize
argument_list|()
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|apply
name|void
name|QDockAreaLayoutInfo
operator|::
name|apply
parameter_list|(
name|bool
name|animate
parameter_list|)
block|{
name|QWidgetAnimator
modifier|&
name|widgetAnimator
init|=
name|mainWindowLayout
argument_list|()
operator|->
name|widgetAnimator
decl_stmt|;
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
if|if
condition|(
name|tabbed
condition|)
block|{
name|QRect
name|tab_rect
decl_stmt|;
name|QSize
name|tbh
init|=
name|tabBarSizeHint
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|tbh
operator|.
name|isNull
argument_list|()
condition|)
block|{
switch|switch
condition|(
name|tabBarShape
condition|)
block|{
case|case
name|QTabBar
operator|::
name|RoundedNorth
case|:
case|case
name|QTabBar
operator|::
name|TriangularNorth
case|:
name|tab_rect
operator|=
name|QRect
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|rect
operator|.
name|width
argument_list|()
argument_list|,
name|tbh
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|QTabBar
operator|::
name|RoundedSouth
case|:
case|case
name|QTabBar
operator|::
name|TriangularSouth
case|:
name|tab_rect
operator|=
name|QRect
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
name|tbh
operator|.
name|height
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|width
argument_list|()
argument_list|,
name|tbh
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|QTabBar
operator|::
name|RoundedEast
case|:
case|case
name|QTabBar
operator|::
name|TriangularEast
case|:
name|tab_rect
operator|=
name|QRect
argument_list|(
name|rect
operator|.
name|right
argument_list|()
operator|-
name|tbh
operator|.
name|width
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|tbh
operator|.
name|width
argument_list|()
argument_list|,
name|rect
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|QTabBar
operator|::
name|RoundedWest
case|:
case|case
name|QTabBar
operator|::
name|TriangularWest
case|:
name|tab_rect
operator|=
name|QRect
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|tbh
operator|.
name|width
argument_list|()
argument_list|,
name|rect
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
break|break;
default|default:
break|break;
block|}
block|}
name|widgetAnimator
operator|.
name|animate
argument_list|(
name|tabBar
argument_list|,
name|tab_rect
argument_list|,
name|animate
argument_list|)
expr_stmt|;
block|}
endif|#
directive|endif
comment|// QT_NO_TABBAR
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|item_list
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|QDockAreaLayoutItem
modifier|&
name|item
init|=
name|item_list
index|[
name|i
index|]
decl_stmt|;
if|if
condition|(
name|item
operator|.
name|flags
operator|&
name|QDockAreaLayoutItem
operator|::
name|GapItem
condition|)
continue|continue;
if|if
condition|(
name|item
operator|.
name|subinfo
operator|!=
literal|0
condition|)
block|{
name|item
operator|.
name|subinfo
operator|->
name|apply
argument_list|(
name|animate
argument_list|)
expr_stmt|;
continue|continue;
block|}
if|if
condition|(
name|item
operator|.
name|skip
argument_list|()
condition|)
continue|continue;
name|Q_ASSERT
argument_list|(
name|item
operator|.
name|widgetItem
argument_list|)
expr_stmt|;
name|QRect
name|r
init|=
name|itemRect
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|QWidget
modifier|*
name|w
init|=
name|item
operator|.
name|widgetItem
operator|->
name|widget
argument_list|()
decl_stmt|;
name|QRect
name|geo
init|=
name|w
operator|->
name|geometry
argument_list|()
decl_stmt|;
name|widgetAnimator
operator|.
name|animate
argument_list|(
name|w
argument_list|,
name|r
argument_list|,
name|animate
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|w
operator|->
name|isHidden
argument_list|()
operator|&&
name|w
operator|->
name|window
argument_list|()
operator|->
name|isVisible
argument_list|()
condition|)
block|{
name|QDockWidget
modifier|*
name|dw
init|=
name|qobject_cast
argument_list|<
name|QDockWidget
operator|*
argument_list|>
argument_list|(
name|w
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|r
operator|.
name|isValid
argument_list|()
operator|&&
name|geo
operator|.
name|right
argument_list|()
operator|>=
literal|0
operator|&&
name|geo
operator|.
name|bottom
argument_list|()
operator|>=
literal|0
condition|)
block|{
name|dw
operator|->
name|lower
argument_list|()
expr_stmt|;
emit|emit
name|dw
operator|->
name|visibilityChanged
argument_list|(
literal|false
argument_list|)
emit|;
block|}
elseif|else
if|if
condition|(
name|r
operator|.
name|isValid
argument_list|()
operator|&&
operator|(
name|geo
operator|.
name|right
argument_list|()
operator|<
literal|0
operator|||
name|geo
operator|.
name|bottom
argument_list|()
operator|<
literal|0
operator|)
condition|)
block|{
emit|emit
name|dw
operator|->
name|visibilityChanged
argument_list|(
literal|true
argument_list|)
emit|;
block|}
block|}
block|}
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
if|if
condition|(
operator|*
name|sep
operator|==
literal|1
condition|)
name|updateSeparatorWidgets
argument_list|()
expr_stmt|;
endif|#
directive|endif
comment|//QT_NO_TABBAR
block|}
end_function
begin_function
DECL|function|paintSep
specifier|static
name|void
name|paintSep
parameter_list|(
name|QPainter
modifier|*
name|p
parameter_list|,
name|QWidget
modifier|*
name|w
parameter_list|,
specifier|const
name|QRect
modifier|&
name|r
parameter_list|,
name|Qt
operator|::
name|Orientation
name|o
parameter_list|,
name|bool
name|mouse_over
parameter_list|)
block|{
name|QStyleOption
name|opt
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|opt
operator|.
name|state
operator|=
name|QStyle
operator|::
name|State_None
expr_stmt|;
if|if
condition|(
name|w
operator|->
name|isEnabled
argument_list|()
condition|)
name|opt
operator|.
name|state
operator||=
name|QStyle
operator|::
name|State_Enabled
expr_stmt|;
if|if
condition|(
name|o
operator|!=
name|Qt
operator|::
name|Horizontal
condition|)
name|opt
operator|.
name|state
operator||=
name|QStyle
operator|::
name|State_Horizontal
expr_stmt|;
if|if
condition|(
name|mouse_over
condition|)
name|opt
operator|.
name|state
operator||=
name|QStyle
operator|::
name|State_MouseOver
expr_stmt|;
name|opt
operator|.
name|rect
operator|=
name|r
expr_stmt|;
name|opt
operator|.
name|palette
operator|=
name|w
operator|->
name|palette
argument_list|()
expr_stmt|;
name|w
operator|->
name|style
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|QStyle
operator|::
name|PE_IndicatorDockWidgetResizeHandle
argument_list|,
operator|&
name|opt
argument_list|,
name|p
argument_list|,
name|w
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|separatorRegion
name|QRegion
name|QDockAreaLayoutInfo
operator|::
name|separatorRegion
parameter_list|()
specifier|const
block|{
name|QRegion
name|result
decl_stmt|;
if|if
condition|(
name|isEmpty
argument_list|()
condition|)
return|return
name|result
return|;
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
if|if
condition|(
name|tabbed
condition|)
return|return
name|result
return|;
endif|#
directive|endif
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|item_list
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
specifier|const
name|QDockAreaLayoutItem
modifier|&
name|item
init|=
name|item_list
operator|.
name|at
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|item
operator|.
name|skip
argument_list|()
condition|)
continue|continue;
name|int
name|next
init|=
name|this
operator|->
name|next
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|item
operator|.
name|subinfo
condition|)
name|result
operator||=
name|item
operator|.
name|subinfo
operator|->
name|separatorRegion
argument_list|()
expr_stmt|;
if|if
condition|(
name|next
operator|==
operator|-
literal|1
condition|)
break|break;
name|result
operator||=
name|separatorRect
argument_list|(
name|i
argument_list|)
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
end_function
begin_function
DECL|function|paintSeparators
name|void
name|QDockAreaLayoutInfo
operator|::
name|paintSeparators
parameter_list|(
name|QPainter
modifier|*
name|p
parameter_list|,
name|QWidget
modifier|*
name|widget
parameter_list|,
specifier|const
name|QRegion
modifier|&
name|clip
parameter_list|,
specifier|const
name|QPoint
modifier|&
name|mouse
parameter_list|)
specifier|const
block|{
if|if
condition|(
name|isEmpty
argument_list|()
condition|)
return|return;
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
if|if
condition|(
name|tabbed
condition|)
return|return;
endif|#
directive|endif
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|item_list
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
specifier|const
name|QDockAreaLayoutItem
modifier|&
name|item
init|=
name|item_list
operator|.
name|at
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|item
operator|.
name|skip
argument_list|()
condition|)
continue|continue;
name|int
name|next
init|=
name|this
operator|->
name|next
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
operator|(
name|item
operator|.
name|flags
operator|&
name|QDockAreaLayoutItem
operator|::
name|GapItem
operator|)
operator|||
operator|(
name|next
operator|!=
operator|-
literal|1
operator|&&
operator|(
name|item_list
operator|.
name|at
argument_list|(
name|next
argument_list|)
operator|.
name|flags
operator|&
name|QDockAreaLayoutItem
operator|::
name|GapItem
operator|)
operator|)
condition|)
continue|continue;
if|if
condition|(
name|item
operator|.
name|subinfo
condition|)
block|{
if|if
condition|(
name|clip
operator|.
name|contains
argument_list|(
name|item
operator|.
name|subinfo
operator|->
name|rect
argument_list|)
condition|)
name|item
operator|.
name|subinfo
operator|->
name|paintSeparators
argument_list|(
name|p
argument_list|,
name|widget
argument_list|,
name|clip
argument_list|,
name|mouse
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|next
operator|==
operator|-
literal|1
condition|)
break|break;
name|QRect
name|r
init|=
name|separatorRect
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|clip
operator|.
name|contains
argument_list|(
name|r
argument_list|)
operator|&&
operator|!
name|item
operator|.
name|hasFixedSize
argument_list|(
name|o
argument_list|)
condition|)
name|paintSep
argument_list|(
name|p
argument_list|,
name|widget
argument_list|,
name|r
argument_list|,
name|o
argument_list|,
name|r
operator|.
name|contains
argument_list|(
name|mouse
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|next
name|int
name|QDockAreaLayoutInfo
operator|::
name|next
parameter_list|(
name|int
name|index
parameter_list|)
specifier|const
block|{
for|for
control|(
name|int
name|i
init|=
name|index
operator|+
literal|1
init|;
name|i
operator|<
name|item_list
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
if|if
condition|(
operator|!
name|item_list
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|.
name|skip
argument_list|()
condition|)
return|return
name|i
return|;
block|}
return|return
operator|-
literal|1
return|;
block|}
end_function
begin_function
DECL|function|prev
name|int
name|QDockAreaLayoutInfo
operator|::
name|prev
parameter_list|(
name|int
name|index
parameter_list|)
specifier|const
block|{
for|for
control|(
name|int
name|i
init|=
name|index
operator|-
literal|1
init|;
name|i
operator|>=
literal|0
condition|;
operator|--
name|i
control|)
block|{
if|if
condition|(
operator|!
name|item_list
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|.
name|skip
argument_list|()
condition|)
return|return
name|i
return|;
block|}
return|return
operator|-
literal|1
return|;
block|}
end_function
begin_function
DECL|function|tab
name|void
name|QDockAreaLayoutInfo
operator|::
name|tab
parameter_list|(
name|int
name|index
parameter_list|,
name|QLayoutItem
modifier|*
name|dockWidgetItem
parameter_list|)
block|{
ifdef|#
directive|ifdef
name|QT_NO_TABBAR
name|Q_UNUSED
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|dockWidgetItem
argument_list|)
expr_stmt|;
else|#
directive|else
if|if
condition|(
name|tabbed
condition|)
block|{
name|item_list
operator|.
name|append
argument_list|(
name|QDockAreaLayoutItem
argument_list|(
name|dockWidgetItem
argument_list|)
argument_list|)
expr_stmt|;
name|updateTabBar
argument_list|()
expr_stmt|;
name|setCurrentTab
argument_list|(
name|dockWidgetItem
operator|->
name|widget
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QDockAreaLayoutInfo
modifier|*
name|new_info
init|=
operator|new
name|QDockAreaLayoutInfo
argument_list|(
name|sep
argument_list|,
name|dockPos
argument_list|,
name|o
argument_list|,
name|tabBarShape
argument_list|,
name|mainWindow
argument_list|)
decl_stmt|;
name|item_list
index|[
name|index
index|]
operator|.
name|subinfo
operator|=
name|new_info
expr_stmt|;
name|new_info
operator|->
name|item_list
operator|.
name|append
argument_list|(
name|item_list
operator|.
name|at
argument_list|(
name|index
argument_list|)
operator|.
name|widgetItem
argument_list|)
expr_stmt|;
name|item_list
index|[
name|index
index|]
operator|.
name|widgetItem
operator|=
literal|0
expr_stmt|;
name|new_info
operator|->
name|item_list
operator|.
name|append
argument_list|(
name|dockWidgetItem
argument_list|)
expr_stmt|;
name|new_info
operator|->
name|tabbed
operator|=
literal|true
expr_stmt|;
name|new_info
operator|->
name|updateTabBar
argument_list|()
expr_stmt|;
name|new_info
operator|->
name|setCurrentTab
argument_list|(
name|dockWidgetItem
operator|->
name|widget
argument_list|()
argument_list|)
expr_stmt|;
block|}
endif|#
directive|endif
comment|// QT_NO_TABBAR
block|}
end_function
begin_function
DECL|function|split
name|void
name|QDockAreaLayoutInfo
operator|::
name|split
parameter_list|(
name|int
name|index
parameter_list|,
name|Qt
operator|::
name|Orientation
name|orientation
parameter_list|,
name|QLayoutItem
modifier|*
name|dockWidgetItem
parameter_list|)
block|{
if|if
condition|(
name|orientation
operator|==
name|o
condition|)
block|{
name|item_list
operator|.
name|insert
argument_list|(
name|index
operator|+
literal|1
argument_list|,
name|QDockAreaLayoutItem
argument_list|(
name|dockWidgetItem
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
ifdef|#
directive|ifdef
name|QT_NO_TABBAR
specifier|const
name|int
name|tabBarShape
init|=
literal|0
decl_stmt|;
endif|#
directive|endif
name|QDockAreaLayoutInfo
modifier|*
name|new_info
init|=
operator|new
name|QDockAreaLayoutInfo
argument_list|(
name|sep
argument_list|,
name|dockPos
argument_list|,
name|orientation
argument_list|,
name|tabBarShape
argument_list|,
name|mainWindow
argument_list|)
decl_stmt|;
name|item_list
index|[
name|index
index|]
operator|.
name|subinfo
operator|=
name|new_info
expr_stmt|;
name|new_info
operator|->
name|item_list
operator|.
name|append
argument_list|(
name|item_list
operator|.
name|at
argument_list|(
name|index
argument_list|)
operator|.
name|widgetItem
argument_list|)
expr_stmt|;
name|item_list
index|[
name|index
index|]
operator|.
name|widgetItem
operator|=
literal|0
expr_stmt|;
name|new_info
operator|->
name|item_list
operator|.
name|append
argument_list|(
name|dockWidgetItem
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|item
name|QDockAreaLayoutItem
modifier|&
name|QDockAreaLayoutInfo
operator|::
name|item
parameter_list|(
specifier|const
name|QList
argument_list|<
name|int
argument_list|>
modifier|&
name|path
parameter_list|)
block|{
name|Q_ASSERT
argument_list|(
operator|!
name|path
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
specifier|const
name|int
name|index
init|=
name|path
operator|.
name|first
argument_list|()
decl_stmt|;
if|if
condition|(
name|path
operator|.
name|count
argument_list|()
operator|>
literal|1
condition|)
block|{
specifier|const
name|QDockAreaLayoutItem
modifier|&
name|item
init|=
name|item_list
index|[
name|index
index|]
decl_stmt|;
name|Q_ASSERT
argument_list|(
name|item
operator|.
name|subinfo
operator|!=
literal|0
argument_list|)
expr_stmt|;
return|return
name|item
operator|.
name|subinfo
operator|->
name|item
argument_list|(
name|path
operator|.
name|mid
argument_list|(
literal|1
argument_list|)
argument_list|)
return|;
block|}
return|return
name|item_list
index|[
name|index
index|]
return|;
block|}
end_function
begin_function
DECL|function|itemAt
name|QLayoutItem
modifier|*
name|QDockAreaLayoutInfo
operator|::
name|itemAt
parameter_list|(
name|int
modifier|*
name|x
parameter_list|,
name|int
name|index
parameter_list|)
specifier|const
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|item_list
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
specifier|const
name|QDockAreaLayoutItem
modifier|&
name|item
init|=
name|item_list
operator|.
name|at
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|item
operator|.
name|placeHolderItem
operator|!=
literal|0
condition|)
continue|continue;
if|if
condition|(
name|item
operator|.
name|subinfo
condition|)
block|{
if|if
condition|(
name|QLayoutItem
modifier|*
name|ret
init|=
name|item
operator|.
name|subinfo
operator|->
name|itemAt
argument_list|(
name|x
argument_list|,
name|index
argument_list|)
condition|)
return|return
name|ret
return|;
block|}
elseif|else
if|if
condition|(
name|item
operator|.
name|widgetItem
condition|)
block|{
if|if
condition|(
operator|(
operator|*
name|x
operator|)
operator|++
operator|==
name|index
condition|)
return|return
name|item
operator|.
name|widgetItem
return|;
block|}
block|}
return|return
literal|0
return|;
block|}
end_function
begin_function
DECL|function|takeAt
name|QLayoutItem
modifier|*
name|QDockAreaLayoutInfo
operator|::
name|takeAt
parameter_list|(
name|int
modifier|*
name|x
parameter_list|,
name|int
name|index
parameter_list|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|item_list
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|QDockAreaLayoutItem
modifier|&
name|item
init|=
name|item_list
index|[
name|i
index|]
decl_stmt|;
if|if
condition|(
name|item
operator|.
name|placeHolderItem
operator|!=
literal|0
condition|)
continue|continue;
elseif|else
if|if
condition|(
name|item
operator|.
name|subinfo
condition|)
block|{
if|if
condition|(
name|QLayoutItem
modifier|*
name|ret
init|=
name|item
operator|.
name|subinfo
operator|->
name|takeAt
argument_list|(
name|x
argument_list|,
name|index
argument_list|)
condition|)
block|{
name|unnest
argument_list|(
name|i
argument_list|)
expr_stmt|;
return|return
name|ret
return|;
block|}
block|}
elseif|else
if|if
condition|(
name|item
operator|.
name|widgetItem
condition|)
block|{
if|if
condition|(
operator|(
operator|*
name|x
operator|)
operator|++
operator|==
name|index
condition|)
block|{
name|item
operator|.
name|placeHolderItem
operator|=
operator|new
name|QPlaceHolderItem
argument_list|(
name|item
operator|.
name|widgetItem
operator|->
name|widget
argument_list|()
argument_list|)
expr_stmt|;
name|QLayoutItem
modifier|*
name|ret
init|=
name|item
operator|.
name|widgetItem
decl_stmt|;
name|item
operator|.
name|widgetItem
operator|=
literal|0
expr_stmt|;
if|if
condition|(
name|item
operator|.
name|size
operator|!=
operator|-
literal|1
condition|)
name|item
operator|.
name|flags
operator||=
name|QDockAreaLayoutItem
operator|::
name|KeepSize
expr_stmt|;
return|return
name|ret
return|;
block|}
block|}
block|}
return|return
literal|0
return|;
block|}
end_function
begin_function
DECL|function|deleteAllLayoutItems
name|void
name|QDockAreaLayoutInfo
operator|::
name|deleteAllLayoutItems
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|item_list
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|QDockAreaLayoutItem
modifier|&
name|item
init|=
name|item_list
index|[
name|i
index|]
decl_stmt|;
if|if
condition|(
name|item
operator|.
name|subinfo
condition|)
block|{
name|item
operator|.
name|subinfo
operator|->
name|deleteAllLayoutItems
argument_list|()
expr_stmt|;
block|}
else|else
block|{
operator|delete
name|item
operator|.
name|widgetItem
expr_stmt|;
name|item
operator|.
name|widgetItem
operator|=
literal|0
expr_stmt|;
block|}
block|}
block|}
end_function
begin_function
DECL|function|saveState
name|void
name|QDockAreaLayoutInfo
operator|::
name|saveState
parameter_list|(
name|QDataStream
modifier|&
name|stream
parameter_list|)
specifier|const
block|{
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
if|if
condition|(
name|tabbed
condition|)
block|{
name|stream
operator|<<
operator|(
name|uchar
operator|)
name|TabMarker
expr_stmt|;
comment|// write the index in item_list of the widget that's currently on top.
name|quintptr
name|id
init|=
name|currentTabId
argument_list|()
decl_stmt|;
name|int
name|index
init|=
operator|-
literal|1
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|item_list
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
if|if
condition|(
name|tabId
argument_list|(
name|item_list
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
operator|==
name|id
condition|)
block|{
name|index
operator|=
name|i
expr_stmt|;
break|break;
block|}
block|}
name|stream
operator|<<
name|index
expr_stmt|;
block|}
else|else
endif|#
directive|endif
comment|// QT_NO_TABBAR
block|{
name|stream
operator|<<
operator|(
name|uchar
operator|)
name|SequenceMarker
expr_stmt|;
block|}
name|stream
operator|<<
operator|(
name|uchar
operator|)
name|o
operator|<<
name|item_list
operator|.
name|count
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|item_list
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
specifier|const
name|QDockAreaLayoutItem
modifier|&
name|item
init|=
name|item_list
operator|.
name|at
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|item
operator|.
name|widgetItem
operator|!=
literal|0
condition|)
block|{
name|stream
operator|<<
operator|(
name|uchar
operator|)
name|WidgetMarker
expr_stmt|;
name|QWidget
modifier|*
name|w
init|=
name|item
operator|.
name|widgetItem
operator|->
name|widget
argument_list|()
decl_stmt|;
name|QString
name|name
init|=
name|w
operator|->
name|objectName
argument_list|()
decl_stmt|;
if|if
condition|(
name|name
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|qWarning
argument_list|(
literal|"QMainWindow::saveState(): 'objectName' not set for QDockWidget %p '%s;"
argument_list|,
name|w
argument_list|,
name|qPrintable
argument_list|(
name|w
operator|->
name|windowTitle
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|stream
operator|<<
name|name
expr_stmt|;
name|uchar
name|flags
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|!
name|w
operator|->
name|isHidden
argument_list|()
condition|)
name|flags
operator||=
name|StateFlagVisible
expr_stmt|;
if|if
condition|(
name|w
operator|->
name|isWindow
argument_list|()
condition|)
name|flags
operator||=
name|StateFlagFloating
expr_stmt|;
name|stream
operator|<<
name|flags
expr_stmt|;
if|if
condition|(
name|w
operator|->
name|isWindow
argument_list|()
condition|)
block|{
name|stream
operator|<<
name|w
operator|->
name|x
argument_list|()
operator|<<
name|w
operator|->
name|y
argument_list|()
operator|<<
name|w
operator|->
name|width
argument_list|()
operator|<<
name|w
operator|->
name|height
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|stream
operator|<<
name|item
operator|.
name|pos
operator|<<
name|item
operator|.
name|size
operator|<<
name|pick
argument_list|(
name|o
argument_list|,
name|item
operator|.
name|minimumSize
argument_list|()
argument_list|)
operator|<<
name|pick
argument_list|(
name|o
argument_list|,
name|item
operator|.
name|maximumSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
elseif|else
if|if
condition|(
name|item
operator|.
name|placeHolderItem
operator|!=
literal|0
condition|)
block|{
name|stream
operator|<<
operator|(
name|uchar
operator|)
name|WidgetMarker
expr_stmt|;
name|stream
operator|<<
name|item
operator|.
name|placeHolderItem
operator|->
name|objectName
expr_stmt|;
name|uchar
name|flags
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|!
name|item
operator|.
name|placeHolderItem
operator|->
name|hidden
condition|)
name|flags
operator||=
name|StateFlagVisible
expr_stmt|;
if|if
condition|(
name|item
operator|.
name|placeHolderItem
operator|->
name|window
condition|)
name|flags
operator||=
name|StateFlagFloating
expr_stmt|;
name|stream
operator|<<
name|flags
expr_stmt|;
if|if
condition|(
name|item
operator|.
name|placeHolderItem
operator|->
name|window
condition|)
block|{
name|QRect
name|r
init|=
name|item
operator|.
name|placeHolderItem
operator|->
name|topLevelRect
decl_stmt|;
name|stream
operator|<<
name|r
operator|.
name|x
argument_list|()
operator|<<
name|r
operator|.
name|y
argument_list|()
operator|<<
name|r
operator|.
name|width
argument_list|()
operator|<<
name|r
operator|.
name|height
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|stream
operator|<<
name|item
operator|.
name|pos
operator|<<
name|item
operator|.
name|size
operator|<<
operator|(
name|int
operator|)
literal|0
operator|<<
operator|(
name|int
operator|)
literal|0
expr_stmt|;
block|}
block|}
elseif|else
if|if
condition|(
name|item
operator|.
name|subinfo
operator|!=
literal|0
condition|)
block|{
name|stream
operator|<<
operator|(
name|uchar
operator|)
name|SequenceMarker
operator|<<
name|item
operator|.
name|pos
operator|<<
name|item
operator|.
name|size
operator|<<
name|pick
argument_list|(
name|o
argument_list|,
name|item
operator|.
name|minimumSize
argument_list|()
argument_list|)
operator|<<
name|pick
argument_list|(
name|o
argument_list|,
name|item
operator|.
name|maximumSize
argument_list|()
argument_list|)
expr_stmt|;
name|item
operator|.
name|subinfo
operator|->
name|saveState
argument_list|(
name|stream
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_function
begin_function
DECL|function|toDockWidgetArea
specifier|static
name|Qt
operator|::
name|DockWidgetArea
name|toDockWidgetArea
parameter_list|(
name|QInternal
operator|::
name|DockPosition
name|pos
parameter_list|)
block|{
switch|switch
condition|(
name|pos
condition|)
block|{
case|case
name|QInternal
operator|::
name|LeftDock
case|:
return|return
name|Qt
operator|::
name|LeftDockWidgetArea
return|;
case|case
name|QInternal
operator|::
name|RightDock
case|:
return|return
name|Qt
operator|::
name|RightDockWidgetArea
return|;
case|case
name|QInternal
operator|::
name|TopDock
case|:
return|return
name|Qt
operator|::
name|TopDockWidgetArea
return|;
case|case
name|QInternal
operator|::
name|BottomDock
case|:
return|return
name|Qt
operator|::
name|BottomDockWidgetArea
return|;
default|default:
break|break;
block|}
return|return
name|Qt
operator|::
name|NoDockWidgetArea
return|;
block|}
end_function
begin_function
DECL|function|constrainedRect
specifier|static
name|QRect
name|constrainedRect
parameter_list|(
name|QRect
name|rect
parameter_list|,
specifier|const
name|QRect
modifier|&
name|desktop
parameter_list|)
block|{
if|if
condition|(
name|desktop
operator|.
name|isValid
argument_list|()
condition|)
block|{
name|rect
operator|.
name|setWidth
argument_list|(
name|qMin
argument_list|(
name|rect
operator|.
name|width
argument_list|()
argument_list|,
name|desktop
operator|.
name|width
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|rect
operator|.
name|setHeight
argument_list|(
name|qMin
argument_list|(
name|rect
operator|.
name|height
argument_list|()
argument_list|,
name|desktop
operator|.
name|height
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|rect
operator|.
name|moveLeft
argument_list|(
name|qMax
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|desktop
operator|.
name|left
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|rect
operator|.
name|moveTop
argument_list|(
name|qMax
argument_list|(
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|desktop
operator|.
name|top
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|rect
operator|.
name|moveRight
argument_list|(
name|qMin
argument_list|(
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|desktop
operator|.
name|right
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|rect
operator|.
name|moveBottom
argument_list|(
name|qMin
argument_list|(
name|rect
operator|.
name|bottom
argument_list|()
argument_list|,
name|desktop
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|rect
return|;
block|}
end_function
begin_function
DECL|function|restoreState
name|bool
name|QDockAreaLayoutInfo
operator|::
name|restoreState
parameter_list|(
name|QDataStream
modifier|&
name|stream
parameter_list|,
name|QList
argument_list|<
name|QDockWidget
modifier|*
argument_list|>
modifier|&
name|widgets
parameter_list|,
name|bool
name|testing
parameter_list|)
block|{
name|uchar
name|marker
decl_stmt|;
name|stream
operator|>>
name|marker
expr_stmt|;
if|if
condition|(
name|marker
operator|!=
name|TabMarker
operator|&&
name|marker
operator|!=
name|SequenceMarker
condition|)
return|return
literal|false
return|;
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
name|tabbed
operator|=
name|marker
operator|==
name|TabMarker
expr_stmt|;
name|int
name|index
init|=
operator|-
literal|1
decl_stmt|;
if|if
condition|(
name|tabbed
condition|)
name|stream
operator|>>
name|index
expr_stmt|;
endif|#
directive|endif
name|uchar
name|orientation
decl_stmt|;
name|stream
operator|>>
name|orientation
expr_stmt|;
name|o
operator|=
cast|static_cast
argument_list|<
name|Qt
operator|::
name|Orientation
argument_list|>
argument_list|(
name|orientation
argument_list|)
expr_stmt|;
name|int
name|cnt
decl_stmt|;
name|stream
operator|>>
name|cnt
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|cnt
condition|;
operator|++
name|i
control|)
block|{
name|uchar
name|nextMarker
decl_stmt|;
name|stream
operator|>>
name|nextMarker
expr_stmt|;
if|if
condition|(
name|nextMarker
operator|==
name|WidgetMarker
condition|)
block|{
name|QString
name|name
decl_stmt|;
name|uchar
name|flags
decl_stmt|;
name|stream
operator|>>
name|name
operator|>>
name|flags
expr_stmt|;
if|if
condition|(
name|name
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|int
name|dummy
decl_stmt|;
name|stream
operator|>>
name|dummy
operator|>>
name|dummy
operator|>>
name|dummy
operator|>>
name|dummy
expr_stmt|;
continue|continue;
block|}
name|QDockWidget
modifier|*
name|widget
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|widgets
operator|.
name|count
argument_list|()
condition|;
operator|++
name|j
control|)
block|{
if|if
condition|(
name|widgets
operator|.
name|at
argument_list|(
name|j
argument_list|)
operator|->
name|objectName
argument_list|()
operator|==
name|name
condition|)
block|{
name|widget
operator|=
name|widgets
operator|.
name|takeAt
argument_list|(
name|j
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
name|widget
operator|==
literal|0
condition|)
block|{
name|QPlaceHolderItem
modifier|*
name|placeHolder
init|=
operator|new
name|QPlaceHolderItem
decl_stmt|;
name|QDockAreaLayoutItem
name|item
argument_list|(
name|placeHolder
argument_list|)
decl_stmt|;
name|placeHolder
operator|->
name|objectName
operator|=
name|name
expr_stmt|;
name|placeHolder
operator|->
name|window
operator|=
name|flags
operator|&
name|StateFlagFloating
expr_stmt|;
name|placeHolder
operator|->
name|hidden
operator|=
operator|!
operator|(
name|flags
operator|&
name|StateFlagVisible
operator|)
expr_stmt|;
if|if
condition|(
name|placeHolder
operator|->
name|window
condition|)
block|{
name|int
name|x
decl_stmt|,
name|y
decl_stmt|,
name|w
decl_stmt|,
name|h
decl_stmt|;
name|stream
operator|>>
name|x
operator|>>
name|y
operator|>>
name|w
operator|>>
name|h
expr_stmt|;
name|placeHolder
operator|->
name|topLevelRect
operator|=
name|QRect
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|w
argument_list|,
name|h
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|int
name|dummy
decl_stmt|;
name|stream
operator|>>
name|item
operator|.
name|pos
operator|>>
name|item
operator|.
name|size
operator|>>
name|dummy
operator|>>
name|dummy
expr_stmt|;
block|}
if|if
condition|(
name|item
operator|.
name|size
operator|!=
operator|-
literal|1
condition|)
name|item
operator|.
name|flags
operator||=
name|QDockAreaLayoutItem
operator|::
name|KeepSize
expr_stmt|;
if|if
condition|(
operator|!
name|testing
condition|)
name|item_list
operator|.
name|append
argument_list|(
name|item
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QDockAreaLayoutItem
name|item
argument_list|(
operator|new
name|QDockWidgetItem
argument_list|(
name|widget
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|flags
operator|&
name|StateFlagFloating
condition|)
block|{
name|bool
name|drawer
init|=
literal|false
decl_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_MAC
comment|// drawer support
specifier|extern
name|bool
name|qt_mac_is_macdrawer
argument_list|(
specifier|const
name|QWidget
operator|*
argument_list|)
decl_stmt|;
comment|//qwidget_mac.cpp
specifier|extern
name|bool
name|qt_mac_set_drawer_preferred_edge
argument_list|(
name|QWidget
operator|*
argument_list|,
name|Qt
operator|::
name|DockWidgetArea
argument_list|)
decl_stmt|;
comment|//qwidget_mac.cpp
name|drawer
operator|=
name|qt_mac_is_macdrawer
argument_list|(
name|widget
argument_list|)
expr_stmt|;
endif|#
directive|endif
if|if
condition|(
operator|!
name|testing
condition|)
block|{
name|widget
operator|->
name|hide
argument_list|()
expr_stmt|;
if|if
condition|(
operator|!
name|drawer
condition|)
name|widget
operator|->
name|setFloating
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
name|int
name|x
decl_stmt|,
name|y
decl_stmt|,
name|w
decl_stmt|,
name|h
decl_stmt|;
name|stream
operator|>>
name|x
operator|>>
name|y
operator|>>
name|w
operator|>>
name|h
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_MAC
comment|// drawer support
if|if
condition|(
name|drawer
condition|)
block|{
name|mainWindow
operator|->
name|window
argument_list|()
operator|->
name|createWinId
argument_list|()
expr_stmt|;
name|widget
operator|->
name|window
argument_list|()
operator|->
name|createWinId
argument_list|()
expr_stmt|;
name|qt_mac_set_drawer_preferred_edge
argument_list|(
name|widget
argument_list|,
name|toDockWidgetArea
argument_list|(
name|dockPos
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
endif|#
directive|endif
if|if
condition|(
operator|!
name|testing
condition|)
block|{
name|QRect
name|r
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|w
argument_list|,
name|h
argument_list|)
decl_stmt|;
name|QDesktopWidget
modifier|*
name|desktop
init|=
name|QApplication
operator|::
name|desktop
argument_list|()
decl_stmt|;
if|if
condition|(
name|desktop
operator|->
name|isVirtualDesktop
argument_list|()
condition|)
name|r
operator|=
name|constrainedRect
argument_list|(
name|r
argument_list|,
name|desktop
operator|->
name|screenGeometry
argument_list|(
name|desktop
operator|->
name|screenNumber
argument_list|(
name|r
operator|.
name|topLeft
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|r
operator|=
name|constrainedRect
argument_list|(
name|r
argument_list|,
name|desktop
operator|->
name|screenGeometry
argument_list|(
name|widget
argument_list|)
argument_list|)
expr_stmt|;
name|widget
operator|->
name|move
argument_list|(
name|r
operator|.
name|topLeft
argument_list|()
argument_list|)
expr_stmt|;
name|widget
operator|->
name|resize
argument_list|(
name|r
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|testing
condition|)
block|{
name|widget
operator|->
name|setVisible
argument_list|(
name|flags
operator|&
name|StateFlagVisible
argument_list|)
expr_stmt|;
name|item_list
operator|.
name|append
argument_list|(
name|item
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|int
name|dummy
decl_stmt|;
name|stream
operator|>>
name|item
operator|.
name|pos
operator|>>
name|item
operator|.
name|size
operator|>>
name|dummy
operator|>>
name|dummy
expr_stmt|;
if|if
condition|(
operator|!
name|testing
condition|)
block|{
name|item_list
operator|.
name|append
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|widget
operator|->
name|setFloating
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|widget
operator|->
name|setVisible
argument_list|(
name|flags
operator|&
name|StateFlagVisible
argument_list|)
expr_stmt|;
emit|emit
name|widget
operator|->
name|dockLocationChanged
argument_list|(
name|toDockWidgetArea
argument_list|(
name|dockPos
argument_list|)
argument_list|)
emit|;
block|}
block|}
if|if
condition|(
name|testing
condition|)
block|{
comment|//was it is not really added to the layout, we need to delete the object here
operator|delete
name|item
operator|.
name|widgetItem
expr_stmt|;
block|}
block|}
block|}
elseif|else
if|if
condition|(
name|nextMarker
operator|==
name|SequenceMarker
condition|)
block|{
name|int
name|dummy
decl_stmt|;
ifdef|#
directive|ifdef
name|QT_NO_TABBAR
specifier|const
name|int
name|tabBarShape
init|=
literal|0
decl_stmt|;
endif|#
directive|endif
name|QDockAreaLayoutItem
name|item
argument_list|(
operator|new
name|QDockAreaLayoutInfo
argument_list|(
name|sep
argument_list|,
name|dockPos
argument_list|,
name|o
argument_list|,
name|tabBarShape
argument_list|,
name|mainWindow
argument_list|)
argument_list|)
decl_stmt|;
name|stream
operator|>>
name|item
operator|.
name|pos
operator|>>
name|item
operator|.
name|size
operator|>>
name|dummy
operator|>>
name|dummy
expr_stmt|;
comment|//we need to make sure the element is in the list so the dock widget can eventually be docked correctly
if|if
condition|(
operator|!
name|testing
condition|)
name|item_list
operator|.
name|append
argument_list|(
name|item
argument_list|)
expr_stmt|;
comment|//here we need to make sure we change the item in the item_list
name|QDockAreaLayoutItem
modifier|&
name|lastItem
init|=
name|testing
condition|?
name|item
else|:
name|item_list
operator|.
name|last
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|lastItem
operator|.
name|subinfo
operator|->
name|restoreState
argument_list|(
name|stream
argument_list|,
name|widgets
argument_list|,
name|testing
argument_list|)
condition|)
return|return
literal|false
return|;
block|}
else|else
block|{
return|return
literal|false
return|;
block|}
block|}
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
if|if
condition|(
operator|!
name|testing
operator|&&
name|tabbed
operator|&&
name|index
operator|>=
literal|0
operator|&&
name|index
operator|<
name|item_list
operator|.
name|count
argument_list|()
condition|)
block|{
name|updateTabBar
argument_list|()
expr_stmt|;
name|setCurrentTabId
argument_list|(
name|tabId
argument_list|(
name|item_list
operator|.
name|at
argument_list|(
name|index
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|testing
operator|&&
operator|*
name|sep
operator|==
literal|1
condition|)
name|updateSeparatorWidgets
argument_list|()
expr_stmt|;
endif|#
directive|endif
return|return
literal|true
return|;
block|}
end_function
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
end_ifndef
begin_function
DECL|function|updateSeparatorWidgets
name|void
name|QDockAreaLayoutInfo
operator|::
name|updateSeparatorWidgets
parameter_list|()
specifier|const
block|{
if|if
condition|(
name|tabbed
condition|)
block|{
name|separatorWidgets
operator|.
name|clear
argument_list|()
expr_stmt|;
return|return;
block|}
name|int
name|j
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|item_list
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
specifier|const
name|QDockAreaLayoutItem
modifier|&
name|item
init|=
name|item_list
operator|.
name|at
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|item
operator|.
name|skip
argument_list|()
condition|)
continue|continue;
name|int
name|next
init|=
name|this
operator|->
name|next
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
operator|(
name|item
operator|.
name|flags
operator|&
name|QDockAreaLayoutItem
operator|::
name|GapItem
operator|)
operator|||
operator|(
name|next
operator|!=
operator|-
literal|1
operator|&&
operator|(
name|item_list
operator|.
name|at
argument_list|(
name|next
argument_list|)
operator|.
name|flags
operator|&
name|QDockAreaLayoutItem
operator|::
name|GapItem
operator|)
operator|)
condition|)
continue|continue;
if|if
condition|(
name|item
operator|.
name|subinfo
condition|)
block|{
name|item
operator|.
name|subinfo
operator|->
name|updateSeparatorWidgets
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|next
operator|==
operator|-
literal|1
condition|)
break|break;
name|QWidget
modifier|*
name|sepWidget
decl_stmt|;
if|if
condition|(
name|j
operator|<
name|separatorWidgets
operator|.
name|size
argument_list|()
operator|&&
name|separatorWidgets
operator|.
name|at
argument_list|(
name|j
argument_list|)
condition|)
block|{
name|sepWidget
operator|=
name|separatorWidgets
operator|.
name|at
argument_list|(
name|j
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|sepWidget
operator|=
name|mainWindowLayout
argument_list|()
operator|->
name|getSeparatorWidget
argument_list|()
expr_stmt|;
name|separatorWidgets
operator|.
name|append
argument_list|(
name|sepWidget
argument_list|)
expr_stmt|;
block|}
name|j
operator|++
expr_stmt|;
ifndef|#
directive|ifndef
name|QT_MAC_USE_COCOA
name|sepWidget
operator|->
name|raise
argument_list|()
expr_stmt|;
endif|#
directive|endif
name|QRect
name|sepRect
init|=
name|separatorRect
argument_list|(
name|i
argument_list|)
operator|.
name|adjusted
argument_list|(
operator|-
literal|2
argument_list|,
operator|-
literal|2
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|sepWidget
operator|->
name|setGeometry
argument_list|(
name|sepRect
argument_list|)
expr_stmt|;
name|sepWidget
operator|->
name|setMask
argument_list|(
name|QRegion
argument_list|(
name|separatorRect
argument_list|(
name|i
argument_list|)
operator|.
name|translated
argument_list|(
operator|-
name|sepRect
operator|.
name|topLeft
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|sepWidget
operator|->
name|show
argument_list|()
expr_stmt|;
block|}
for|for
control|(
name|int
name|k
init|=
name|j
init|;
name|k
operator|<
name|separatorWidgets
operator|.
name|size
argument_list|()
condition|;
operator|++
name|k
control|)
block|{
name|separatorWidgets
index|[
name|k
index|]
operator|->
name|hide
argument_list|()
expr_stmt|;
block|}
name|separatorWidgets
operator|.
name|resize
argument_list|(
name|j
argument_list|)
expr_stmt|;
name|Q_ASSERT
argument_list|(
name|separatorWidgets
operator|.
name|size
argument_list|()
operator|==
name|j
argument_list|)
expr_stmt|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|//QT_NO_TABBAR
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
end_ifndef
begin_comment
comment|//returns whether the tabbar is visible or not
end_comment
begin_function
DECL|function|updateTabBar
name|bool
name|QDockAreaLayoutInfo
operator|::
name|updateTabBar
parameter_list|()
specifier|const
block|{
if|if
condition|(
operator|!
name|tabbed
condition|)
return|return
literal|false
return|;
name|QDockAreaLayoutInfo
modifier|*
name|that
init|=
cast|const_cast
argument_list|<
name|QDockAreaLayoutInfo
operator|*
argument_list|>
argument_list|(
name|this
argument_list|)
decl_stmt|;
if|if
condition|(
name|that
operator|->
name|tabBar
operator|==
literal|0
condition|)
block|{
name|that
operator|->
name|tabBar
operator|=
name|mainWindowLayout
argument_list|()
operator|->
name|getTabBar
argument_list|()
expr_stmt|;
name|that
operator|->
name|tabBar
operator|->
name|setShape
argument_list|(
cast|static_cast
argument_list|<
name|QTabBar
operator|::
name|Shape
argument_list|>
argument_list|(
name|tabBarShape
argument_list|)
argument_list|)
expr_stmt|;
name|that
operator|->
name|tabBar
operator|->
name|setDrawBase
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
name|bool
name|blocked
init|=
name|tabBar
operator|->
name|blockSignals
argument_list|(
literal|true
argument_list|)
decl_stmt|;
name|bool
name|gap
init|=
literal|false
decl_stmt|;
name|int
name|tab_idx
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|item_list
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
specifier|const
name|QDockAreaLayoutItem
modifier|&
name|item
init|=
name|item_list
operator|.
name|at
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|item
operator|.
name|skip
argument_list|()
condition|)
continue|continue;
if|if
condition|(
name|item
operator|.
name|flags
operator|&
name|QDockAreaLayoutItem
operator|::
name|GapItem
condition|)
block|{
name|gap
operator|=
literal|true
expr_stmt|;
continue|continue;
block|}
if|if
condition|(
name|item
operator|.
name|widgetItem
operator|==
literal|0
condition|)
continue|continue;
name|QDockWidget
modifier|*
name|dw
init|=
name|qobject_cast
argument_list|<
name|QDockWidget
operator|*
argument_list|>
argument_list|(
name|item
operator|.
name|widgetItem
operator|->
name|widget
argument_list|()
argument_list|)
decl_stmt|;
name|QString
name|title
init|=
name|dw
operator|->
name|d_func
argument_list|()
operator|->
name|fixedWindowTitle
decl_stmt|;
name|quintptr
name|id
init|=
name|tabId
argument_list|(
name|item
argument_list|)
decl_stmt|;
if|if
condition|(
name|tab_idx
operator|==
name|tabBar
operator|->
name|count
argument_list|()
condition|)
block|{
name|tabBar
operator|->
name|insertTab
argument_list|(
name|tab_idx
argument_list|,
name|title
argument_list|)
expr_stmt|;
ifndef|#
directive|ifndef
name|QT_NO_TOOLTIP
name|tabBar
operator|->
name|setTabToolTip
argument_list|(
name|tab_idx
argument_list|,
name|title
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|tabBar
operator|->
name|setTabData
argument_list|(
name|tab_idx
argument_list|,
name|id
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|qvariant_cast
argument_list|<
name|quintptr
argument_list|>
argument_list|(
name|tabBar
operator|->
name|tabData
argument_list|(
name|tab_idx
argument_list|)
argument_list|)
operator|!=
name|id
condition|)
block|{
if|if
condition|(
name|tab_idx
operator|+
literal|1
operator|<
name|tabBar
operator|->
name|count
argument_list|()
operator|&&
name|qvariant_cast
argument_list|<
name|quintptr
argument_list|>
argument_list|(
name|tabBar
operator|->
name|tabData
argument_list|(
name|tab_idx
operator|+
literal|1
argument_list|)
argument_list|)
operator|==
name|id
condition|)
name|tabBar
operator|->
name|removeTab
argument_list|(
name|tab_idx
argument_list|)
expr_stmt|;
else|else
block|{
name|tabBar
operator|->
name|insertTab
argument_list|(
name|tab_idx
argument_list|,
name|title
argument_list|)
expr_stmt|;
ifndef|#
directive|ifndef
name|QT_NO_TOOLTIP
name|tabBar
operator|->
name|setTabToolTip
argument_list|(
name|tab_idx
argument_list|,
name|title
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|tabBar
operator|->
name|setTabData
argument_list|(
name|tab_idx
argument_list|,
name|id
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|title
operator|!=
name|tabBar
operator|->
name|tabText
argument_list|(
name|tab_idx
argument_list|)
condition|)
block|{
name|tabBar
operator|->
name|setTabText
argument_list|(
name|tab_idx
argument_list|,
name|title
argument_list|)
expr_stmt|;
ifndef|#
directive|ifndef
name|QT_NO_TOOLTIP
name|tabBar
operator|->
name|setTabToolTip
argument_list|(
name|tab_idx
argument_list|,
name|title
argument_list|)
expr_stmt|;
endif|#
directive|endif
block|}
operator|++
name|tab_idx
expr_stmt|;
block|}
while|while
condition|(
name|tab_idx
operator|<
name|tabBar
operator|->
name|count
argument_list|()
condition|)
block|{
name|tabBar
operator|->
name|removeTab
argument_list|(
name|tab_idx
argument_list|)
expr_stmt|;
block|}
name|tabBar
operator|->
name|blockSignals
argument_list|(
name|blocked
argument_list|)
expr_stmt|;
comment|//returns if the tabbar is visible or not
return|return
operator|(
operator|(
name|gap
condition|?
literal|1
else|:
literal|0
operator|)
operator|+
name|tabBar
operator|->
name|count
argument_list|()
operator|)
operator|>
literal|1
return|;
block|}
end_function
begin_function
DECL|function|setTabBarShape
name|void
name|QDockAreaLayoutInfo
operator|::
name|setTabBarShape
parameter_list|(
name|int
name|shape
parameter_list|)
block|{
if|if
condition|(
name|shape
operator|==
name|tabBarShape
condition|)
return|return;
name|tabBarShape
operator|=
name|shape
expr_stmt|;
if|if
condition|(
name|tabBar
operator|!=
literal|0
condition|)
name|tabBar
operator|->
name|setShape
argument_list|(
cast|static_cast
argument_list|<
name|QTabBar
operator|::
name|Shape
argument_list|>
argument_list|(
name|shape
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|item_list
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|QDockAreaLayoutItem
modifier|&
name|item
init|=
name|item_list
index|[
name|i
index|]
decl_stmt|;
if|if
condition|(
name|item
operator|.
name|subinfo
operator|!=
literal|0
condition|)
name|item
operator|.
name|subinfo
operator|->
name|setTabBarShape
argument_list|(
name|shape
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|tabBarMinimumSize
name|QSize
name|QDockAreaLayoutInfo
operator|::
name|tabBarMinimumSize
parameter_list|()
specifier|const
block|{
if|if
condition|(
operator|!
name|updateTabBar
argument_list|()
condition|)
return|return
name|QSize
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
return|;
return|return
name|tabBar
operator|->
name|minimumSizeHint
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|tabBarSizeHint
name|QSize
name|QDockAreaLayoutInfo
operator|::
name|tabBarSizeHint
parameter_list|()
specifier|const
block|{
if|if
condition|(
operator|!
name|updateTabBar
argument_list|()
condition|)
return|return
name|QSize
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
return|;
return|return
name|tabBar
operator|->
name|sizeHint
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|usedTabBars
name|QSet
argument_list|<
name|QTabBar
modifier|*
argument_list|>
name|QDockAreaLayoutInfo
operator|::
name|usedTabBars
parameter_list|()
specifier|const
block|{
name|QSet
argument_list|<
name|QTabBar
modifier|*
argument_list|>
name|result
decl_stmt|;
if|if
condition|(
name|tabbed
condition|)
block|{
name|updateTabBar
argument_list|()
expr_stmt|;
name|result
operator|.
name|insert
argument_list|(
name|tabBar
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|item_list
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
specifier|const
name|QDockAreaLayoutItem
modifier|&
name|item
init|=
name|item_list
operator|.
name|at
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|item
operator|.
name|subinfo
operator|!=
literal|0
condition|)
name|result
operator|+=
name|item
operator|.
name|subinfo
operator|->
name|usedTabBars
argument_list|()
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
end_function
begin_comment
comment|// returns a set of all used separator widgets for this dockarelayout info
end_comment
begin_comment
comment|// and all subinfos
end_comment
begin_function
DECL|function|usedSeparatorWidgets
name|QSet
argument_list|<
name|QWidget
modifier|*
argument_list|>
name|QDockAreaLayoutInfo
operator|::
name|usedSeparatorWidgets
parameter_list|()
specifier|const
block|{
name|QSet
argument_list|<
name|QWidget
modifier|*
argument_list|>
name|result
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|separatorWidgets
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
name|result
operator|<<
name|separatorWidgets
operator|.
name|at
argument_list|(
name|i
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|item_list
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
specifier|const
name|QDockAreaLayoutItem
modifier|&
name|item
init|=
name|item_list
operator|.
name|at
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|item
operator|.
name|subinfo
operator|!=
literal|0
condition|)
name|result
operator|+=
name|item
operator|.
name|subinfo
operator|->
name|usedSeparatorWidgets
argument_list|()
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
end_function
begin_function
DECL|function|tabContentRect
name|QRect
name|QDockAreaLayoutInfo
operator|::
name|tabContentRect
parameter_list|()
specifier|const
block|{
if|if
condition|(
operator|!
name|tabbed
condition|)
return|return
name|QRect
argument_list|()
return|;
name|QRect
name|result
init|=
name|rect
decl_stmt|;
name|QSize
name|tbh
init|=
name|tabBarSizeHint
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|tbh
operator|.
name|isNull
argument_list|()
condition|)
block|{
switch|switch
condition|(
name|tabBarShape
condition|)
block|{
case|case
name|QTabBar
operator|::
name|RoundedNorth
case|:
case|case
name|QTabBar
operator|::
name|TriangularNorth
case|:
name|result
operator|.
name|adjust
argument_list|(
literal|0
argument_list|,
name|tbh
operator|.
name|height
argument_list|()
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
break|break;
case|case
name|QTabBar
operator|::
name|RoundedSouth
case|:
case|case
name|QTabBar
operator|::
name|TriangularSouth
case|:
name|result
operator|.
name|adjust
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
name|tbh
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|QTabBar
operator|::
name|RoundedEast
case|:
case|case
name|QTabBar
operator|::
name|TriangularEast
case|:
name|result
operator|.
name|adjust
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
name|tbh
operator|.
name|width
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
break|break;
case|case
name|QTabBar
operator|::
name|RoundedWest
case|:
case|case
name|QTabBar
operator|::
name|TriangularWest
case|:
name|result
operator|.
name|adjust
argument_list|(
name|tbh
operator|.
name|width
argument_list|()
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
break|break;
default|default:
break|break;
block|}
block|}
return|return
name|result
return|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_TABBAR
end_comment
begin_comment
comment|/****************************************************************************** ** QDockAreaLayout */
end_comment
begin_constructor
DECL|function|QDockAreaLayout
name|QDockAreaLayout
operator|::
name|QDockAreaLayout
parameter_list|(
name|QMainWindow
modifier|*
name|win
parameter_list|)
member_init_list|:
name|fallbackToSizeHints
argument_list|(
literal|true
argument_list|)
block|{
name|mainWindow
operator|=
name|win
expr_stmt|;
name|sep
operator|=
name|win
operator|->
name|style
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|QStyle
operator|::
name|PM_DockWidgetSeparatorExtent
argument_list|,
literal|0
argument_list|,
name|win
argument_list|)
expr_stmt|;
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
specifier|const
name|int
name|tabShape
init|=
name|QTabBar
operator|::
name|RoundedSouth
decl_stmt|;
else|#
directive|else
specifier|const
name|int
name|tabShape
init|=
literal|0
decl_stmt|;
endif|#
directive|endif
name|docks
index|[
name|QInternal
operator|::
name|LeftDock
index|]
operator|=
name|QDockAreaLayoutInfo
argument_list|(
operator|&
name|sep
argument_list|,
name|QInternal
operator|::
name|LeftDock
argument_list|,
name|Qt
operator|::
name|Vertical
argument_list|,
name|tabShape
argument_list|,
name|win
argument_list|)
expr_stmt|;
name|docks
index|[
name|QInternal
operator|::
name|RightDock
index|]
operator|=
name|QDockAreaLayoutInfo
argument_list|(
operator|&
name|sep
argument_list|,
name|QInternal
operator|::
name|RightDock
argument_list|,
name|Qt
operator|::
name|Vertical
argument_list|,
name|tabShape
argument_list|,
name|win
argument_list|)
expr_stmt|;
name|docks
index|[
name|QInternal
operator|::
name|TopDock
index|]
operator|=
name|QDockAreaLayoutInfo
argument_list|(
operator|&
name|sep
argument_list|,
name|QInternal
operator|::
name|TopDock
argument_list|,
name|Qt
operator|::
name|Horizontal
argument_list|,
name|tabShape
argument_list|,
name|win
argument_list|)
expr_stmt|;
name|docks
index|[
name|QInternal
operator|::
name|BottomDock
index|]
operator|=
name|QDockAreaLayoutInfo
argument_list|(
operator|&
name|sep
argument_list|,
name|QInternal
operator|::
name|BottomDock
argument_list|,
name|Qt
operator|::
name|Horizontal
argument_list|,
name|tabShape
argument_list|,
name|win
argument_list|)
expr_stmt|;
name|centralWidgetItem
operator|=
literal|0
expr_stmt|;
name|corners
index|[
name|Qt
operator|::
name|TopLeftCorner
index|]
operator|=
name|Qt
operator|::
name|TopDockWidgetArea
expr_stmt|;
name|corners
index|[
name|Qt
operator|::
name|TopRightCorner
index|]
operator|=
name|Qt
operator|::
name|TopDockWidgetArea
expr_stmt|;
name|corners
index|[
name|Qt
operator|::
name|BottomLeftCorner
index|]
operator|=
name|Qt
operator|::
name|BottomDockWidgetArea
expr_stmt|;
name|corners
index|[
name|Qt
operator|::
name|BottomRightCorner
index|]
operator|=
name|Qt
operator|::
name|BottomDockWidgetArea
expr_stmt|;
block|}
end_constructor
begin_function
DECL|function|isValid
name|bool
name|QDockAreaLayout
operator|::
name|isValid
parameter_list|()
specifier|const
block|{
return|return
name|rect
operator|.
name|isValid
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|saveState
name|void
name|QDockAreaLayout
operator|::
name|saveState
parameter_list|(
name|QDataStream
modifier|&
name|stream
parameter_list|)
specifier|const
block|{
name|stream
operator|<<
operator|(
name|uchar
operator|)
name|DockWidgetStateMarker
expr_stmt|;
name|int
name|cnt
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|QInternal
operator|::
name|DockCount
condition|;
operator|++
name|i
control|)
block|{
if|if
condition|(
operator|!
name|docks
index|[
name|i
index|]
operator|.
name|item_list
operator|.
name|isEmpty
argument_list|()
condition|)
operator|++
name|cnt
expr_stmt|;
block|}
name|stream
operator|<<
name|cnt
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|QInternal
operator|::
name|DockCount
condition|;
operator|++
name|i
control|)
block|{
if|if
condition|(
name|docks
index|[
name|i
index|]
operator|.
name|item_list
operator|.
name|isEmpty
argument_list|()
condition|)
continue|continue;
name|stream
operator|<<
name|i
operator|<<
name|docks
index|[
name|i
index|]
operator|.
name|rect
operator|.
name|size
argument_list|()
expr_stmt|;
name|docks
index|[
name|i
index|]
operator|.
name|saveState
argument_list|(
name|stream
argument_list|)
expr_stmt|;
block|}
name|stream
operator|<<
name|centralWidgetRect
operator|.
name|size
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|4
condition|;
operator|++
name|i
control|)
name|stream
operator|<<
cast|static_cast
argument_list|<
name|int
argument_list|>
argument_list|(
name|corners
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|restoreState
name|bool
name|QDockAreaLayout
operator|::
name|restoreState
parameter_list|(
name|QDataStream
modifier|&
name|stream
parameter_list|,
specifier|const
name|QList
argument_list|<
name|QDockWidget
modifier|*
argument_list|>
modifier|&
name|_dockwidgets
parameter_list|,
name|bool
name|testing
parameter_list|)
block|{
name|QList
argument_list|<
name|QDockWidget
modifier|*
argument_list|>
name|dockwidgets
init|=
name|_dockwidgets
decl_stmt|;
name|int
name|cnt
decl_stmt|;
name|stream
operator|>>
name|cnt
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|cnt
condition|;
operator|++
name|i
control|)
block|{
name|int
name|pos
decl_stmt|;
name|stream
operator|>>
name|pos
expr_stmt|;
name|QSize
name|size
decl_stmt|;
name|stream
operator|>>
name|size
expr_stmt|;
if|if
condition|(
operator|!
name|testing
condition|)
block|{
name|docks
index|[
name|pos
index|]
operator|.
name|rect
operator|=
name|QRect
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|size
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|docks
index|[
name|pos
index|]
operator|.
name|restoreState
argument_list|(
name|stream
argument_list|,
name|dockwidgets
argument_list|,
name|testing
argument_list|)
condition|)
block|{
name|stream
operator|.
name|setStatus
argument_list|(
name|QDataStream
operator|::
name|ReadCorruptData
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
name|QSize
name|size
decl_stmt|;
name|stream
operator|>>
name|size
expr_stmt|;
name|centralWidgetRect
operator|=
name|QRect
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|size
argument_list|)
expr_stmt|;
name|bool
name|ok
init|=
name|stream
operator|.
name|status
argument_list|()
operator|==
name|QDataStream
operator|::
name|Ok
decl_stmt|;
if|if
condition|(
name|ok
condition|)
block|{
name|int
name|cornerData
index|[
literal|4
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|4
condition|;
operator|++
name|i
control|)
name|stream
operator|>>
name|cornerData
index|[
name|i
index|]
expr_stmt|;
if|if
condition|(
name|stream
operator|.
name|status
argument_list|()
operator|==
name|QDataStream
operator|::
name|Ok
condition|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|4
condition|;
operator|++
name|i
control|)
name|corners
index|[
name|i
index|]
operator|=
cast|static_cast
argument_list|<
name|Qt
operator|::
name|DockWidgetArea
argument_list|>
argument_list|(
name|cornerData
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|testing
condition|)
name|fallbackToSizeHints
operator|=
literal|false
expr_stmt|;
block|}
return|return
name|ok
return|;
block|}
end_function
begin_function
DECL|function|indexOfPlaceHolder
name|QList
argument_list|<
name|int
argument_list|>
name|QDockAreaLayout
operator|::
name|indexOfPlaceHolder
parameter_list|(
specifier|const
name|QString
modifier|&
name|objectName
parameter_list|)
specifier|const
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|QInternal
operator|::
name|DockCount
condition|;
operator|++
name|i
control|)
block|{
name|QList
argument_list|<
name|int
argument_list|>
name|result
init|=
name|docks
index|[
name|i
index|]
operator|.
name|indexOfPlaceHolder
argument_list|(
name|objectName
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|result
operator|.
name|prepend
argument_list|(
name|i
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
block|}
return|return
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|indexOf
name|QList
argument_list|<
name|int
argument_list|>
name|QDockAreaLayout
operator|::
name|indexOf
parameter_list|(
name|QWidget
modifier|*
name|dockWidget
parameter_list|)
specifier|const
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|QInternal
operator|::
name|DockCount
condition|;
operator|++
name|i
control|)
block|{
name|QList
argument_list|<
name|int
argument_list|>
name|result
init|=
name|docks
index|[
name|i
index|]
operator|.
name|indexOf
argument_list|(
name|dockWidget
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|result
operator|.
name|prepend
argument_list|(
name|i
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
block|}
return|return
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|gapIndex
name|QList
argument_list|<
name|int
argument_list|>
name|QDockAreaLayout
operator|::
name|gapIndex
parameter_list|(
specifier|const
name|QPoint
modifier|&
name|pos
parameter_list|)
specifier|const
block|{
name|QMainWindow
operator|::
name|DockOptions
name|opts
init|=
name|mainWindow
operator|->
name|dockOptions
argument_list|()
decl_stmt|;
name|bool
name|nestingEnabled
init|=
name|opts
operator|&
name|QMainWindow
operator|::
name|AllowNestedDocks
decl_stmt|;
name|QDockAreaLayoutInfo
operator|::
name|TabMode
name|tabMode
init|=
name|QDockAreaLayoutInfo
operator|::
name|NoTabs
decl_stmt|;
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
if|if
condition|(
name|opts
operator|&
name|QMainWindow
operator|::
name|AllowTabbedDocks
operator|||
name|opts
operator|&
name|QMainWindow
operator|::
name|VerticalTabs
condition|)
name|tabMode
operator|=
name|QDockAreaLayoutInfo
operator|::
name|AllowTabs
expr_stmt|;
if|if
condition|(
name|opts
operator|&
name|QMainWindow
operator|::
name|ForceTabbedDocks
condition|)
name|tabMode
operator|=
name|QDockAreaLayoutInfo
operator|::
name|ForceTabs
expr_stmt|;
if|if
condition|(
name|tabMode
operator|==
name|QDockAreaLayoutInfo
operator|::
name|ForceTabs
condition|)
name|nestingEnabled
operator|=
literal|false
expr_stmt|;
endif|#
directive|endif
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|QInternal
operator|::
name|DockCount
condition|;
operator|++
name|i
control|)
block|{
specifier|const
name|QDockAreaLayoutInfo
modifier|&
name|info
init|=
name|docks
index|[
name|i
index|]
decl_stmt|;
if|if
condition|(
operator|!
name|info
operator|.
name|isEmpty
argument_list|()
operator|&&
name|info
operator|.
name|rect
operator|.
name|contains
argument_list|(
name|pos
argument_list|)
condition|)
block|{
name|QList
argument_list|<
name|int
argument_list|>
name|result
init|=
name|docks
index|[
name|i
index|]
operator|.
name|gapIndex
argument_list|(
name|pos
argument_list|,
name|nestingEnabled
argument_list|,
name|tabMode
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isEmpty
argument_list|()
condition|)
name|result
operator|.
name|prepend
argument_list|(
name|i
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|QInternal
operator|::
name|DockCount
condition|;
operator|++
name|i
control|)
block|{
specifier|const
name|QDockAreaLayoutInfo
modifier|&
name|info
init|=
name|docks
index|[
name|i
index|]
decl_stmt|;
if|if
condition|(
name|info
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|QRect
name|r
decl_stmt|;
switch|switch
condition|(
name|i
condition|)
block|{
case|case
name|QInternal
operator|::
name|LeftDock
case|:
name|r
operator|=
name|QRect
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|EmptyDropAreaSize
argument_list|,
name|rect
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|QInternal
operator|::
name|RightDock
case|:
name|r
operator|=
name|QRect
argument_list|(
name|rect
operator|.
name|right
argument_list|()
operator|-
name|EmptyDropAreaSize
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|EmptyDropAreaSize
argument_list|,
name|rect
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|QInternal
operator|::
name|TopDock
case|:
name|r
operator|=
name|QRect
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|rect
operator|.
name|width
argument_list|()
argument_list|,
name|EmptyDropAreaSize
argument_list|)
expr_stmt|;
break|break;
case|case
name|QInternal
operator|::
name|BottomDock
case|:
name|r
operator|=
name|QRect
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
name|EmptyDropAreaSize
argument_list|,
name|rect
operator|.
name|width
argument_list|()
argument_list|,
name|EmptyDropAreaSize
argument_list|)
expr_stmt|;
break|break;
block|}
if|if
condition|(
name|r
operator|.
name|contains
argument_list|(
name|pos
argument_list|)
condition|)
block|{
if|if
condition|(
name|opts
operator|&
name|QMainWindow
operator|::
name|ForceTabbedDocks
operator|&&
operator|!
name|info
operator|.
name|item_list
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
comment|//in case of ForceTabbedDocks, we pass -1 in order to force the gap to be tabbed
comment|//it mustn't be completely empty otherwise it won't work
return|return
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
name|i
operator|<<
operator|-
literal|1
operator|<<
literal|0
return|;
block|}
else|else
block|{
return|return
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
name|i
operator|<<
literal|0
return|;
block|}
block|}
block|}
block|}
return|return
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|findSeparator
name|QList
argument_list|<
name|int
argument_list|>
name|QDockAreaLayout
operator|::
name|findSeparator
parameter_list|(
specifier|const
name|QPoint
modifier|&
name|pos
parameter_list|)
specifier|const
block|{
name|QList
argument_list|<
name|int
argument_list|>
name|result
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|QInternal
operator|::
name|DockCount
condition|;
operator|++
name|i
control|)
block|{
specifier|const
name|QDockAreaLayoutInfo
modifier|&
name|info
init|=
name|docks
index|[
name|i
index|]
decl_stmt|;
if|if
condition|(
name|info
operator|.
name|isEmpty
argument_list|()
condition|)
continue|continue;
name|QRect
name|rect
init|=
name|separatorRect
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|rect
operator|.
name|isNull
argument_list|()
operator|&&
name|sep
operator|==
literal|1
condition|)
name|rect
operator|.
name|adjust
argument_list|(
operator|-
literal|2
argument_list|,
operator|-
literal|2
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
if|if
condition|(
name|rect
operator|.
name|contains
argument_list|(
name|pos
argument_list|)
operator|&&
operator|!
name|info
operator|.
name|hasFixedSize
argument_list|()
condition|)
block|{
name|result
operator|<<
name|i
expr_stmt|;
break|break;
block|}
elseif|else
if|if
condition|(
name|info
operator|.
name|rect
operator|.
name|contains
argument_list|(
name|pos
argument_list|)
condition|)
block|{
name|result
operator|=
name|docks
index|[
name|i
index|]
operator|.
name|findSeparator
argument_list|(
name|pos
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|result
operator|.
name|prepend
argument_list|(
name|i
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
return|return
name|result
return|;
block|}
end_function
begin_function
DECL|function|info
name|QDockAreaLayoutInfo
modifier|*
name|QDockAreaLayout
operator|::
name|info
parameter_list|(
name|QWidget
modifier|*
name|widget
parameter_list|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|QInternal
operator|::
name|DockCount
condition|;
operator|++
name|i
control|)
block|{
if|if
condition|(
name|QDockAreaLayoutInfo
modifier|*
name|result
init|=
name|docks
index|[
name|i
index|]
operator|.
name|info
argument_list|(
name|widget
argument_list|)
condition|)
return|return
name|result
return|;
block|}
return|return
literal|0
return|;
block|}
end_function
begin_function
DECL|function|info
name|QDockAreaLayoutInfo
modifier|*
name|QDockAreaLayout
operator|::
name|info
parameter_list|(
specifier|const
name|QList
argument_list|<
name|int
argument_list|>
modifier|&
name|path
parameter_list|)
block|{
name|Q_ASSERT
argument_list|(
operator|!
name|path
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
specifier|const
name|int
name|index
init|=
name|path
operator|.
name|first
argument_list|()
decl_stmt|;
name|Q_ASSERT
argument_list|(
name|index
operator|>=
literal|0
operator|&&
name|index
operator|<
name|QInternal
operator|::
name|DockCount
argument_list|)
expr_stmt|;
if|if
condition|(
name|path
operator|.
name|count
argument_list|()
operator|==
literal|1
condition|)
return|return
operator|&
name|docks
index|[
name|index
index|]
return|;
return|return
name|docks
index|[
name|index
index|]
operator|.
name|info
argument_list|(
name|path
operator|.
name|mid
argument_list|(
literal|1
argument_list|)
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|info
specifier|const
name|QDockAreaLayoutInfo
modifier|*
name|QDockAreaLayout
operator|::
name|info
parameter_list|(
specifier|const
name|QList
argument_list|<
name|int
argument_list|>
modifier|&
name|path
parameter_list|)
specifier|const
block|{
return|return
cast|const_cast
argument_list|<
name|QDockAreaLayout
operator|*
argument_list|>
argument_list|(
name|this
argument_list|)
operator|->
name|info
argument_list|(
name|path
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|item
name|QDockAreaLayoutItem
modifier|&
name|QDockAreaLayout
operator|::
name|item
parameter_list|(
specifier|const
name|QList
argument_list|<
name|int
argument_list|>
modifier|&
name|path
parameter_list|)
block|{
name|Q_ASSERT
argument_list|(
operator|!
name|path
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
specifier|const
name|int
name|index
init|=
name|path
operator|.
name|first
argument_list|()
decl_stmt|;
name|Q_ASSERT
argument_list|(
name|index
operator|>=
literal|0
operator|&&
name|index
operator|<
name|QInternal
operator|::
name|DockCount
argument_list|)
expr_stmt|;
return|return
name|docks
index|[
name|index
index|]
operator|.
name|item
argument_list|(
name|path
operator|.
name|mid
argument_list|(
literal|1
argument_list|)
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|itemRect
name|QRect
name|QDockAreaLayout
operator|::
name|itemRect
parameter_list|(
specifier|const
name|QList
argument_list|<
name|int
argument_list|>
modifier|&
name|path
parameter_list|)
specifier|const
block|{
name|Q_ASSERT
argument_list|(
operator|!
name|path
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
specifier|const
name|int
name|index
init|=
name|path
operator|.
name|first
argument_list|()
decl_stmt|;
name|Q_ASSERT
argument_list|(
name|index
operator|>=
literal|0
operator|&&
name|index
operator|<
name|QInternal
operator|::
name|DockCount
argument_list|)
expr_stmt|;
return|return
name|docks
index|[
name|index
index|]
operator|.
name|itemRect
argument_list|(
name|path
operator|.
name|mid
argument_list|(
literal|1
argument_list|)
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|separatorRect
name|QRect
name|QDockAreaLayout
operator|::
name|separatorRect
parameter_list|(
name|int
name|index
parameter_list|)
specifier|const
block|{
specifier|const
name|QDockAreaLayoutInfo
modifier|&
name|dock
init|=
name|docks
index|[
name|index
index|]
decl_stmt|;
if|if
condition|(
name|dock
operator|.
name|isEmpty
argument_list|()
condition|)
return|return
name|QRect
argument_list|()
return|;
name|QRect
name|r
init|=
name|dock
operator|.
name|rect
decl_stmt|;
switch|switch
condition|(
name|index
condition|)
block|{
case|case
name|QInternal
operator|::
name|LeftDock
case|:
return|return
name|QRect
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|+
literal|1
argument_list|,
name|r
operator|.
name|top
argument_list|()
argument_list|,
name|sep
argument_list|,
name|r
operator|.
name|height
argument_list|()
argument_list|)
return|;
case|case
name|QInternal
operator|::
name|RightDock
case|:
return|return
name|QRect
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|-
name|sep
argument_list|,
name|r
operator|.
name|top
argument_list|()
argument_list|,
name|sep
argument_list|,
name|r
operator|.
name|height
argument_list|()
argument_list|)
return|;
case|case
name|QInternal
operator|::
name|TopDock
case|:
return|return
name|QRect
argument_list|(
name|r
operator|.
name|left
argument_list|()
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|+
literal|1
argument_list|,
name|r
operator|.
name|width
argument_list|()
argument_list|,
name|sep
argument_list|)
return|;
case|case
name|QInternal
operator|::
name|BottomDock
case|:
return|return
name|QRect
argument_list|(
name|r
operator|.
name|left
argument_list|()
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|-
name|sep
argument_list|,
name|r
operator|.
name|width
argument_list|()
argument_list|,
name|sep
argument_list|)
return|;
default|default:
break|break;
block|}
return|return
name|QRect
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|separatorRect
name|QRect
name|QDockAreaLayout
operator|::
name|separatorRect
parameter_list|(
specifier|const
name|QList
argument_list|<
name|int
argument_list|>
modifier|&
name|path
parameter_list|)
specifier|const
block|{
name|Q_ASSERT
argument_list|(
operator|!
name|path
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
specifier|const
name|int
name|index
init|=
name|path
operator|.
name|first
argument_list|()
decl_stmt|;
name|Q_ASSERT
argument_list|(
name|index
operator|>=
literal|0
operator|&&
name|index
operator|<
name|QInternal
operator|::
name|DockCount
argument_list|)
expr_stmt|;
if|if
condition|(
name|path
operator|.
name|count
argument_list|()
operator|==
literal|1
condition|)
return|return
name|separatorRect
argument_list|(
name|index
argument_list|)
return|;
else|else
return|return
name|docks
index|[
name|index
index|]
operator|.
name|separatorRect
argument_list|(
name|path
operator|.
name|mid
argument_list|(
literal|1
argument_list|)
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|insertGap
name|bool
name|QDockAreaLayout
operator|::
name|insertGap
parameter_list|(
specifier|const
name|QList
argument_list|<
name|int
argument_list|>
modifier|&
name|path
parameter_list|,
name|QLayoutItem
modifier|*
name|dockWidgetItem
parameter_list|)
block|{
name|Q_ASSERT
argument_list|(
operator|!
name|path
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
specifier|const
name|int
name|index
init|=
name|path
operator|.
name|first
argument_list|()
decl_stmt|;
name|Q_ASSERT
argument_list|(
name|index
operator|>=
literal|0
operator|&&
name|index
operator|<
name|QInternal
operator|::
name|DockCount
argument_list|)
expr_stmt|;
return|return
name|docks
index|[
name|index
index|]
operator|.
name|insertGap
argument_list|(
name|path
operator|.
name|mid
argument_list|(
literal|1
argument_list|)
argument_list|,
name|dockWidgetItem
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|plug
name|QLayoutItem
modifier|*
name|QDockAreaLayout
operator|::
name|plug
parameter_list|(
specifier|const
name|QList
argument_list|<
name|int
argument_list|>
modifier|&
name|path
parameter_list|)
block|{
name|Q_ASSERT
argument_list|(
operator|!
name|path
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
specifier|const
name|int
name|index
init|=
name|path
operator|.
name|first
argument_list|()
decl_stmt|;
name|Q_ASSERT
argument_list|(
name|index
operator|>=
literal|0
operator|&&
name|index
operator|<
name|QInternal
operator|::
name|DockCount
argument_list|)
expr_stmt|;
return|return
name|docks
index|[
name|index
index|]
operator|.
name|plug
argument_list|(
name|path
operator|.
name|mid
argument_list|(
literal|1
argument_list|)
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|unplug
name|QLayoutItem
modifier|*
name|QDockAreaLayout
operator|::
name|unplug
parameter_list|(
specifier|const
name|QList
argument_list|<
name|int
argument_list|>
modifier|&
name|path
parameter_list|)
block|{
name|Q_ASSERT
argument_list|(
operator|!
name|path
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
specifier|const
name|int
name|index
init|=
name|path
operator|.
name|first
argument_list|()
decl_stmt|;
name|Q_ASSERT
argument_list|(
name|index
operator|>=
literal|0
operator|&&
name|index
operator|<
name|QInternal
operator|::
name|DockCount
argument_list|)
expr_stmt|;
return|return
name|docks
index|[
name|index
index|]
operator|.
name|unplug
argument_list|(
name|path
operator|.
name|mid
argument_list|(
literal|1
argument_list|)
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|remove
name|void
name|QDockAreaLayout
operator|::
name|remove
parameter_list|(
specifier|const
name|QList
argument_list|<
name|int
argument_list|>
modifier|&
name|path
parameter_list|)
block|{
name|Q_ASSERT
argument_list|(
operator|!
name|path
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
specifier|const
name|int
name|index
init|=
name|path
operator|.
name|first
argument_list|()
decl_stmt|;
name|Q_ASSERT
argument_list|(
name|index
operator|>=
literal|0
operator|&&
name|index
operator|<
name|QInternal
operator|::
name|DockCount
argument_list|)
expr_stmt|;
name|docks
index|[
name|index
index|]
operator|.
name|remove
argument_list|(
name|path
operator|.
name|mid
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|qMin
specifier|static
specifier|inline
name|int
name|qMin
parameter_list|(
name|int
name|i1
parameter_list|,
name|int
name|i2
parameter_list|,
name|int
name|i3
parameter_list|)
block|{
return|return
name|qMin
argument_list|(
name|i1
argument_list|,
name|qMin
argument_list|(
name|i2
argument_list|,
name|i3
argument_list|)
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|qMax
specifier|static
specifier|inline
name|int
name|qMax
parameter_list|(
name|int
name|i1
parameter_list|,
name|int
name|i2
parameter_list|,
name|int
name|i3
parameter_list|)
block|{
return|return
name|qMax
argument_list|(
name|i1
argument_list|,
name|qMax
argument_list|(
name|i2
argument_list|,
name|i3
argument_list|)
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getGrid
name|void
name|QDockAreaLayout
operator|::
name|getGrid
parameter_list|(
name|QVector
argument_list|<
name|QLayoutStruct
argument_list|>
modifier|*
name|_ver_struct_list
parameter_list|,
name|QVector
argument_list|<
name|QLayoutStruct
argument_list|>
modifier|*
name|_hor_struct_list
parameter_list|)
block|{
name|QSize
name|center_hint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QSize
name|center_min
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
specifier|const
name|bool
name|have_central
init|=
name|centralWidgetItem
operator|!=
literal|0
operator|&&
operator|!
name|centralWidgetItem
operator|->
name|isEmpty
argument_list|()
decl_stmt|;
if|if
condition|(
name|have_central
condition|)
block|{
name|center_hint
operator|=
name|centralWidgetRect
operator|.
name|size
argument_list|()
expr_stmt|;
if|if
condition|(
operator|!
name|center_hint
operator|.
name|isValid
argument_list|()
condition|)
name|center_hint
operator|=
name|centralWidgetItem
operator|->
name|sizeHint
argument_list|()
expr_stmt|;
name|center_min
operator|=
name|centralWidgetItem
operator|->
name|minimumSize
argument_list|()
expr_stmt|;
block|}
name|QRect
name|center_rect
init|=
name|rect
decl_stmt|;
if|if
condition|(
operator|!
name|docks
index|[
name|QInternal
operator|::
name|LeftDock
index|]
operator|.
name|isEmpty
argument_list|()
condition|)
name|center_rect
operator|.
name|setLeft
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
name|docks
index|[
name|QInternal
operator|::
name|LeftDock
index|]
operator|.
name|rect
operator|.
name|width
argument_list|()
operator|+
name|sep
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|docks
index|[
name|QInternal
operator|::
name|TopDock
index|]
operator|.
name|isEmpty
argument_list|()
condition|)
name|center_rect
operator|.
name|setTop
argument_list|(
name|rect
operator|.
name|top
argument_list|()
operator|+
name|docks
index|[
name|QInternal
operator|::
name|TopDock
index|]
operator|.
name|rect
operator|.
name|height
argument_list|()
operator|+
name|sep
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|docks
index|[
name|QInternal
operator|::
name|RightDock
index|]
operator|.
name|isEmpty
argument_list|()
condition|)
name|center_rect
operator|.
name|setRight
argument_list|(
name|rect
operator|.
name|right
argument_list|()
operator|-
name|docks
index|[
name|QInternal
operator|::
name|RightDock
index|]
operator|.
name|rect
operator|.
name|width
argument_list|()
operator|-
name|sep
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|docks
index|[
name|QInternal
operator|::
name|BottomDock
index|]
operator|.
name|isEmpty
argument_list|()
condition|)
name|center_rect
operator|.
name|setBottom
argument_list|(
name|rect
operator|.
name|bottom
argument_list|()
operator|-
name|docks
index|[
name|QInternal
operator|::
name|BottomDock
index|]
operator|.
name|rect
operator|.
name|height
argument_list|()
operator|-
name|sep
argument_list|)
expr_stmt|;
name|QSize
name|left_hint
init|=
name|docks
index|[
name|QInternal
operator|::
name|LeftDock
index|]
operator|.
name|size
argument_list|()
decl_stmt|;
if|if
condition|(
name|left_hint
operator|.
name|isNull
argument_list|()
operator|||
name|fallbackToSizeHints
condition|)
name|left_hint
operator|=
name|docks
index|[
name|QInternal
operator|::
name|LeftDock
index|]
operator|.
name|sizeHint
argument_list|()
expr_stmt|;
name|QSize
name|left_min
init|=
name|docks
index|[
name|QInternal
operator|::
name|LeftDock
index|]
operator|.
name|minimumSize
argument_list|()
decl_stmt|;
name|QSize
name|left_max
init|=
name|docks
index|[
name|QInternal
operator|::
name|LeftDock
index|]
operator|.
name|maximumSize
argument_list|()
decl_stmt|;
name|left_hint
operator|=
name|left_hint
operator|.
name|boundedTo
argument_list|(
name|left_max
argument_list|)
operator|.
name|expandedTo
argument_list|(
name|left_min
argument_list|)
expr_stmt|;
name|QSize
name|right_hint
init|=
name|docks
index|[
name|QInternal
operator|::
name|RightDock
index|]
operator|.
name|size
argument_list|()
decl_stmt|;
if|if
condition|(
name|right_hint
operator|.
name|isNull
argument_list|()
operator|||
name|fallbackToSizeHints
condition|)
name|right_hint
operator|=
name|docks
index|[
name|QInternal
operator|::
name|RightDock
index|]
operator|.
name|sizeHint
argument_list|()
expr_stmt|;
name|QSize
name|right_min
init|=
name|docks
index|[
name|QInternal
operator|::
name|RightDock
index|]
operator|.
name|minimumSize
argument_list|()
decl_stmt|;
name|QSize
name|right_max
init|=
name|docks
index|[
name|QInternal
operator|::
name|RightDock
index|]
operator|.
name|maximumSize
argument_list|()
decl_stmt|;
name|right_hint
operator|=
name|right_hint
operator|.
name|boundedTo
argument_list|(
name|right_max
argument_list|)
operator|.
name|expandedTo
argument_list|(
name|right_min
argument_list|)
expr_stmt|;
name|QSize
name|top_hint
init|=
name|docks
index|[
name|QInternal
operator|::
name|TopDock
index|]
operator|.
name|size
argument_list|()
decl_stmt|;
if|if
condition|(
name|top_hint
operator|.
name|isNull
argument_list|()
operator|||
name|fallbackToSizeHints
condition|)
name|top_hint
operator|=
name|docks
index|[
name|QInternal
operator|::
name|TopDock
index|]
operator|.
name|sizeHint
argument_list|()
expr_stmt|;
name|QSize
name|top_min
init|=
name|docks
index|[
name|QInternal
operator|::
name|TopDock
index|]
operator|.
name|minimumSize
argument_list|()
decl_stmt|;
name|QSize
name|top_max
init|=
name|docks
index|[
name|QInternal
operator|::
name|TopDock
index|]
operator|.
name|maximumSize
argument_list|()
decl_stmt|;
name|top_hint
operator|=
name|top_hint
operator|.
name|boundedTo
argument_list|(
name|top_max
argument_list|)
operator|.
name|expandedTo
argument_list|(
name|top_min
argument_list|)
expr_stmt|;
name|QSize
name|bottom_hint
init|=
name|docks
index|[
name|QInternal
operator|::
name|BottomDock
index|]
operator|.
name|size
argument_list|()
decl_stmt|;
if|if
condition|(
name|bottom_hint
operator|.
name|isNull
argument_list|()
operator|||
name|fallbackToSizeHints
condition|)
name|bottom_hint
operator|=
name|docks
index|[
name|QInternal
operator|::
name|BottomDock
index|]
operator|.
name|sizeHint
argument_list|()
expr_stmt|;
name|QSize
name|bottom_min
init|=
name|docks
index|[
name|QInternal
operator|::
name|BottomDock
index|]
operator|.
name|minimumSize
argument_list|()
decl_stmt|;
name|QSize
name|bottom_max
init|=
name|docks
index|[
name|QInternal
operator|::
name|BottomDock
index|]
operator|.
name|maximumSize
argument_list|()
decl_stmt|;
name|bottom_hint
operator|=
name|bottom_hint
operator|.
name|boundedTo
argument_list|(
name|bottom_max
argument_list|)
operator|.
name|expandedTo
argument_list|(
name|bottom_min
argument_list|)
expr_stmt|;
name|fallbackToSizeHints
operator|=
literal|false
expr_stmt|;
if|if
condition|(
name|_ver_struct_list
operator|!=
literal|0
condition|)
block|{
name|QVector
argument_list|<
name|QLayoutStruct
argument_list|>
modifier|&
name|ver_struct_list
init|=
operator|*
name|_ver_struct_list
decl_stmt|;
name|ver_struct_list
operator|.
name|resize
argument_list|(
literal|3
argument_list|)
expr_stmt|;
comment|// top --------------------------------------------------
name|ver_struct_list
index|[
literal|0
index|]
operator|.
name|init
argument_list|()
expr_stmt|;
name|ver_struct_list
index|[
literal|0
index|]
operator|.
name|stretch
operator|=
literal|0
expr_stmt|;
name|ver_struct_list
index|[
literal|0
index|]
operator|.
name|sizeHint
operator|=
name|top_hint
operator|.
name|height
argument_list|()
expr_stmt|;
name|ver_struct_list
index|[
literal|0
index|]
operator|.
name|minimumSize
operator|=
name|top_min
operator|.
name|height
argument_list|()
expr_stmt|;
name|ver_struct_list
index|[
literal|0
index|]
operator|.
name|maximumSize
operator|=
name|top_max
operator|.
name|height
argument_list|()
expr_stmt|;
name|ver_struct_list
index|[
literal|0
index|]
operator|.
name|expansive
operator|=
literal|false
expr_stmt|;
name|ver_struct_list
index|[
literal|0
index|]
operator|.
name|empty
operator|=
name|docks
index|[
name|QInternal
operator|::
name|TopDock
index|]
operator|.
name|isEmpty
argument_list|()
expr_stmt|;
name|ver_struct_list
index|[
literal|0
index|]
operator|.
name|pos
operator|=
name|docks
index|[
name|QInternal
operator|::
name|TopDock
index|]
operator|.
name|rect
operator|.
name|top
argument_list|()
expr_stmt|;
name|ver_struct_list
index|[
literal|0
index|]
operator|.
name|size
operator|=
name|docks
index|[
name|QInternal
operator|::
name|TopDock
index|]
operator|.
name|rect
operator|.
name|height
argument_list|()
expr_stmt|;
comment|// center --------------------------------------------------
name|ver_struct_list
index|[
literal|1
index|]
operator|.
name|init
argument_list|()
expr_stmt|;
name|ver_struct_list
index|[
literal|1
index|]
operator|.
name|stretch
operator|=
name|center_hint
operator|.
name|height
argument_list|()
expr_stmt|;
name|bool
name|tl_significant
init|=
name|corners
index|[
name|Qt
operator|::
name|TopLeftCorner
index|]
operator|==
name|Qt
operator|::
name|TopDockWidgetArea
operator|||
name|docks
index|[
name|QInternal
operator|::
name|TopDock
index|]
operator|.
name|isEmpty
argument_list|()
decl_stmt|;
name|bool
name|bl_significant
init|=
name|corners
index|[
name|Qt
operator|::
name|BottomLeftCorner
index|]
operator|==
name|Qt
operator|::
name|BottomDockWidgetArea
operator|||
name|docks
index|[
name|QInternal
operator|::
name|BottomDock
index|]
operator|.
name|isEmpty
argument_list|()
decl_stmt|;
name|bool
name|tr_significant
init|=
name|corners
index|[
name|Qt
operator|::
name|TopRightCorner
index|]
operator|==
name|Qt
operator|::
name|TopDockWidgetArea
operator|||
name|docks
index|[
name|QInternal
operator|::
name|TopDock
index|]
operator|.
name|isEmpty
argument_list|()
decl_stmt|;
name|bool
name|br_significant
init|=
name|corners
index|[
name|Qt
operator|::
name|BottomRightCorner
index|]
operator|==
name|Qt
operator|::
name|BottomDockWidgetArea
operator|||
name|docks
index|[
name|QInternal
operator|::
name|BottomDock
index|]
operator|.
name|isEmpty
argument_list|()
decl_stmt|;
name|int
name|left
init|=
operator|(
name|tl_significant
operator|&&
name|bl_significant
operator|)
condition|?
name|left_hint
operator|.
name|height
argument_list|()
else|:
literal|0
decl_stmt|;
name|int
name|right
init|=
operator|(
name|tr_significant
operator|&&
name|br_significant
operator|)
condition|?
name|right_hint
operator|.
name|height
argument_list|()
else|:
literal|0
decl_stmt|;
name|ver_struct_list
index|[
literal|1
index|]
operator|.
name|sizeHint
operator|=
name|qMax
argument_list|(
name|left
argument_list|,
name|center_hint
operator|.
name|height
argument_list|()
argument_list|,
name|right
argument_list|)
expr_stmt|;
name|left
operator|=
operator|(
name|tl_significant
operator|&&
name|bl_significant
operator|)
condition|?
name|left_min
operator|.
name|height
argument_list|()
else|:
literal|0
expr_stmt|;
name|right
operator|=
operator|(
name|tr_significant
operator|&&
name|br_significant
operator|)
condition|?
name|right_min
operator|.
name|height
argument_list|()
else|:
literal|0
expr_stmt|;
name|ver_struct_list
index|[
literal|1
index|]
operator|.
name|minimumSize
operator|=
name|qMax
argument_list|(
name|left
argument_list|,
name|center_min
operator|.
name|height
argument_list|()
argument_list|,
name|right
argument_list|)
expr_stmt|;
name|ver_struct_list
index|[
literal|1
index|]
operator|.
name|maximumSize
operator|=
name|have_central
condition|?
name|QWIDGETSIZE_MAX
else|:
literal|0
expr_stmt|;
name|ver_struct_list
index|[
literal|1
index|]
operator|.
name|expansive
operator|=
name|have_central
expr_stmt|;
name|ver_struct_list
index|[
literal|1
index|]
operator|.
name|empty
operator|=
name|docks
index|[
name|QInternal
operator|::
name|LeftDock
index|]
operator|.
name|isEmpty
argument_list|()
operator|&&
operator|!
name|have_central
operator|&&
name|docks
index|[
name|QInternal
operator|::
name|RightDock
index|]
operator|.
name|isEmpty
argument_list|()
expr_stmt|;
name|ver_struct_list
index|[
literal|1
index|]
operator|.
name|pos
operator|=
name|center_rect
operator|.
name|top
argument_list|()
expr_stmt|;
name|ver_struct_list
index|[
literal|1
index|]
operator|.
name|size
operator|=
name|center_rect
operator|.
name|height
argument_list|()
expr_stmt|;
comment|// bottom --------------------------------------------------
name|ver_struct_list
index|[
literal|2
index|]
operator|.
name|init
argument_list|()
expr_stmt|;
name|ver_struct_list
index|[
literal|2
index|]
operator|.
name|stretch
operator|=
literal|0
expr_stmt|;
name|ver_struct_list
index|[
literal|2
index|]
operator|.
name|sizeHint
operator|=
name|bottom_hint
operator|.
name|height
argument_list|()
expr_stmt|;
name|ver_struct_list
index|[
literal|2
index|]
operator|.
name|minimumSize
operator|=
name|bottom_min
operator|.
name|height
argument_list|()
expr_stmt|;
name|ver_struct_list
index|[
literal|2
index|]
operator|.
name|maximumSize
operator|=
name|bottom_max
operator|.
name|height
argument_list|()
expr_stmt|;
name|ver_struct_list
index|[
literal|2
index|]
operator|.
name|expansive
operator|=
literal|false
expr_stmt|;
name|ver_struct_list
index|[
literal|2
index|]
operator|.
name|empty
operator|=
name|docks
index|[
name|QInternal
operator|::
name|BottomDock
index|]
operator|.
name|isEmpty
argument_list|()
expr_stmt|;
name|ver_struct_list
index|[
literal|2
index|]
operator|.
name|pos
operator|=
name|docks
index|[
name|QInternal
operator|::
name|BottomDock
index|]
operator|.
name|rect
operator|.
name|top
argument_list|()
expr_stmt|;
name|ver_struct_list
index|[
literal|2
index|]
operator|.
name|size
operator|=
name|docks
index|[
name|QInternal
operator|::
name|BottomDock
index|]
operator|.
name|rect
operator|.
name|height
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|3
condition|;
operator|++
name|i
control|)
block|{
name|ver_struct_list
index|[
name|i
index|]
operator|.
name|sizeHint
operator|=
name|qMax
argument_list|(
name|ver_struct_list
index|[
name|i
index|]
operator|.
name|sizeHint
argument_list|,
name|ver_struct_list
index|[
name|i
index|]
operator|.
name|minimumSize
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|_hor_struct_list
operator|!=
literal|0
condition|)
block|{
name|QVector
argument_list|<
name|QLayoutStruct
argument_list|>
modifier|&
name|hor_struct_list
init|=
operator|*
name|_hor_struct_list
decl_stmt|;
name|hor_struct_list
operator|.
name|resize
argument_list|(
literal|3
argument_list|)
expr_stmt|;
comment|// left --------------------------------------------------
name|hor_struct_list
index|[
literal|0
index|]
operator|.
name|init
argument_list|()
expr_stmt|;
name|hor_struct_list
index|[
literal|0
index|]
operator|.
name|stretch
operator|=
literal|0
expr_stmt|;
name|hor_struct_list
index|[
literal|0
index|]
operator|.
name|sizeHint
operator|=
name|left_hint
operator|.
name|width
argument_list|()
expr_stmt|;
name|hor_struct_list
index|[
literal|0
index|]
operator|.
name|minimumSize
operator|=
name|left_min
operator|.
name|width
argument_list|()
expr_stmt|;
name|hor_struct_list
index|[
literal|0
index|]
operator|.
name|maximumSize
operator|=
name|left_max
operator|.
name|width
argument_list|()
expr_stmt|;
name|hor_struct_list
index|[
literal|0
index|]
operator|.
name|expansive
operator|=
literal|false
expr_stmt|;
name|hor_struct_list
index|[
literal|0
index|]
operator|.
name|empty
operator|=
name|docks
index|[
name|QInternal
operator|::
name|LeftDock
index|]
operator|.
name|isEmpty
argument_list|()
expr_stmt|;
name|hor_struct_list
index|[
literal|0
index|]
operator|.
name|pos
operator|=
name|docks
index|[
name|QInternal
operator|::
name|LeftDock
index|]
operator|.
name|rect
operator|.
name|left
argument_list|()
expr_stmt|;
name|hor_struct_list
index|[
literal|0
index|]
operator|.
name|size
operator|=
name|docks
index|[
name|QInternal
operator|::
name|LeftDock
index|]
operator|.
name|rect
operator|.
name|width
argument_list|()
expr_stmt|;
comment|// center --------------------------------------------------
name|hor_struct_list
index|[
literal|1
index|]
operator|.
name|init
argument_list|()
expr_stmt|;
name|hor_struct_list
index|[
literal|1
index|]
operator|.
name|stretch
operator|=
name|center_hint
operator|.
name|width
argument_list|()
expr_stmt|;
name|bool
name|tl_significant
init|=
name|corners
index|[
name|Qt
operator|::
name|TopLeftCorner
index|]
operator|==
name|Qt
operator|::
name|LeftDockWidgetArea
operator|||
name|docks
index|[
name|QInternal
operator|::
name|LeftDock
index|]
operator|.
name|isEmpty
argument_list|()
decl_stmt|;
name|bool
name|tr_significant
init|=
name|corners
index|[
name|Qt
operator|::
name|TopRightCorner
index|]
operator|==
name|Qt
operator|::
name|RightDockWidgetArea
operator|||
name|docks
index|[
name|QInternal
operator|::
name|RightDock
index|]
operator|.
name|isEmpty
argument_list|()
decl_stmt|;
name|bool
name|bl_significant
init|=
name|corners
index|[
name|Qt
operator|::
name|BottomLeftCorner
index|]
operator|==
name|Qt
operator|::
name|LeftDockWidgetArea
operator|||
name|docks
index|[
name|QInternal
operator|::
name|LeftDock
index|]
operator|.
name|isEmpty
argument_list|()
decl_stmt|;
name|bool
name|br_significant
init|=
name|corners
index|[
name|Qt
operator|::
name|BottomRightCorner
index|]
operator|==
name|Qt
operator|::
name|RightDockWidgetArea
operator|||
name|docks
index|[
name|QInternal
operator|::
name|RightDock
index|]
operator|.
name|isEmpty
argument_list|()
decl_stmt|;
name|int
name|top
init|=
operator|(
name|tl_significant
operator|&&
name|tr_significant
operator|)
condition|?
name|top_hint
operator|.
name|width
argument_list|()
else|:
literal|0
decl_stmt|;
name|int
name|bottom
init|=
operator|(
name|bl_significant
operator|&&
name|br_significant
operator|)
condition|?
name|bottom_hint
operator|.
name|width
argument_list|()
else|:
literal|0
decl_stmt|;
name|hor_struct_list
index|[
literal|1
index|]
operator|.
name|sizeHint
operator|=
name|qMax
argument_list|(
name|top
argument_list|,
name|center_hint
operator|.
name|width
argument_list|()
argument_list|,
name|bottom
argument_list|)
expr_stmt|;
name|top
operator|=
operator|(
name|tl_significant
operator|&&
name|tr_significant
operator|)
condition|?
name|top_min
operator|.
name|width
argument_list|()
else|:
literal|0
expr_stmt|;
name|bottom
operator|=
operator|(
name|bl_significant
operator|&&
name|br_significant
operator|)
condition|?
name|bottom_min
operator|.
name|width
argument_list|()
else|:
literal|0
expr_stmt|;
name|hor_struct_list
index|[
literal|1
index|]
operator|.
name|minimumSize
operator|=
name|qMax
argument_list|(
name|top
argument_list|,
name|center_min
operator|.
name|width
argument_list|()
argument_list|,
name|bottom
argument_list|)
expr_stmt|;
name|hor_struct_list
index|[
literal|1
index|]
operator|.
name|maximumSize
operator|=
name|have_central
condition|?
name|QWIDGETSIZE_MAX
else|:
literal|0
expr_stmt|;
name|hor_struct_list
index|[
literal|1
index|]
operator|.
name|expansive
operator|=
name|have_central
expr_stmt|;
name|hor_struct_list
index|[
literal|1
index|]
operator|.
name|empty
operator|=
operator|!
name|have_central
expr_stmt|;
name|hor_struct_list
index|[
literal|1
index|]
operator|.
name|pos
operator|=
name|center_rect
operator|.
name|left
argument_list|()
expr_stmt|;
name|hor_struct_list
index|[
literal|1
index|]
operator|.
name|size
operator|=
name|center_rect
operator|.
name|width
argument_list|()
expr_stmt|;
comment|// right --------------------------------------------------
name|hor_struct_list
index|[
literal|2
index|]
operator|.
name|init
argument_list|()
expr_stmt|;
name|hor_struct_list
index|[
literal|2
index|]
operator|.
name|stretch
operator|=
literal|0
expr_stmt|;
name|hor_struct_list
index|[
literal|2
index|]
operator|.
name|sizeHint
operator|=
name|right_hint
operator|.
name|width
argument_list|()
expr_stmt|;
name|hor_struct_list
index|[
literal|2
index|]
operator|.
name|minimumSize
operator|=
name|right_min
operator|.
name|width
argument_list|()
expr_stmt|;
name|hor_struct_list
index|[
literal|2
index|]
operator|.
name|maximumSize
operator|=
name|right_max
operator|.
name|width
argument_list|()
expr_stmt|;
name|hor_struct_list
index|[
literal|2
index|]
operator|.
name|expansive
operator|=
literal|false
expr_stmt|;
name|hor_struct_list
index|[
literal|2
index|]
operator|.
name|empty
operator|=
name|docks
index|[
name|QInternal
operator|::
name|RightDock
index|]
operator|.
name|isEmpty
argument_list|()
expr_stmt|;
name|hor_struct_list
index|[
literal|2
index|]
operator|.
name|pos
operator|=
name|docks
index|[
name|QInternal
operator|::
name|RightDock
index|]
operator|.
name|rect
operator|.
name|left
argument_list|()
expr_stmt|;
name|hor_struct_list
index|[
literal|2
index|]
operator|.
name|size
operator|=
name|docks
index|[
name|QInternal
operator|::
name|RightDock
index|]
operator|.
name|rect
operator|.
name|width
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|3
condition|;
operator|++
name|i
control|)
block|{
name|hor_struct_list
index|[
name|i
index|]
operator|.
name|sizeHint
operator|=
name|qMax
argument_list|(
name|hor_struct_list
index|[
name|i
index|]
operator|.
name|sizeHint
argument_list|,
name|hor_struct_list
index|[
name|i
index|]
operator|.
name|minimumSize
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_function
begin_function
DECL|function|setGrid
name|void
name|QDockAreaLayout
operator|::
name|setGrid
parameter_list|(
name|QVector
argument_list|<
name|QLayoutStruct
argument_list|>
modifier|*
name|ver_struct_list
parameter_list|,
name|QVector
argument_list|<
name|QLayoutStruct
argument_list|>
modifier|*
name|hor_struct_list
parameter_list|)
block|{
comment|// top ---------------------------------------------------
if|if
condition|(
operator|!
name|docks
index|[
name|QInternal
operator|::
name|TopDock
index|]
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|QRect
name|r
init|=
name|docks
index|[
name|QInternal
operator|::
name|TopDock
index|]
operator|.
name|rect
decl_stmt|;
if|if
condition|(
name|hor_struct_list
operator|!=
literal|0
condition|)
block|{
name|r
operator|.
name|setLeft
argument_list|(
name|corners
index|[
name|Qt
operator|::
name|TopLeftCorner
index|]
operator|==
name|Qt
operator|::
name|TopDockWidgetArea
operator|||
name|docks
index|[
name|QInternal
operator|::
name|LeftDock
index|]
operator|.
name|isEmpty
argument_list|()
condition|?
name|rect
operator|.
name|left
argument_list|()
else|:
name|hor_struct_list
operator|->
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|pos
argument_list|)
expr_stmt|;
name|r
operator|.
name|setRight
argument_list|(
name|corners
index|[
name|Qt
operator|::
name|TopRightCorner
index|]
operator|==
name|Qt
operator|::
name|TopDockWidgetArea
operator|||
name|docks
index|[
name|QInternal
operator|::
name|RightDock
index|]
operator|.
name|isEmpty
argument_list|()
condition|?
name|rect
operator|.
name|right
argument_list|()
else|:
name|hor_struct_list
operator|->
name|at
argument_list|(
literal|2
argument_list|)
operator|.
name|pos
operator|-
name|sep
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|ver_struct_list
operator|!=
literal|0
condition|)
block|{
name|r
operator|.
name|setTop
argument_list|(
name|rect
operator|.
name|top
argument_list|()
argument_list|)
expr_stmt|;
name|r
operator|.
name|setBottom
argument_list|(
name|ver_struct_list
operator|->
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|pos
operator|-
name|sep
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
name|docks
index|[
name|QInternal
operator|::
name|TopDock
index|]
operator|.
name|rect
operator|=
name|r
expr_stmt|;
name|docks
index|[
name|QInternal
operator|::
name|TopDock
index|]
operator|.
name|fitItems
argument_list|()
expr_stmt|;
block|}
comment|// bottom ---------------------------------------------------
if|if
condition|(
operator|!
name|docks
index|[
name|QInternal
operator|::
name|BottomDock
index|]
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|QRect
name|r
init|=
name|docks
index|[
name|QInternal
operator|::
name|BottomDock
index|]
operator|.
name|rect
decl_stmt|;
if|if
condition|(
name|hor_struct_list
operator|!=
literal|0
condition|)
block|{
name|r
operator|.
name|setLeft
argument_list|(
name|corners
index|[
name|Qt
operator|::
name|BottomLeftCorner
index|]
operator|==
name|Qt
operator|::
name|BottomDockWidgetArea
operator|||
name|docks
index|[
name|QInternal
operator|::
name|LeftDock
index|]
operator|.
name|isEmpty
argument_list|()
condition|?
name|rect
operator|.
name|left
argument_list|()
else|:
name|hor_struct_list
operator|->
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|pos
argument_list|)
expr_stmt|;
name|r
operator|.
name|setRight
argument_list|(
name|corners
index|[
name|Qt
operator|::
name|BottomRightCorner
index|]
operator|==
name|Qt
operator|::
name|BottomDockWidgetArea
operator|||
name|docks
index|[
name|QInternal
operator|::
name|RightDock
index|]
operator|.
name|isEmpty
argument_list|()
condition|?
name|rect
operator|.
name|right
argument_list|()
else|:
name|hor_struct_list
operator|->
name|at
argument_list|(
literal|2
argument_list|)
operator|.
name|pos
operator|-
name|sep
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|ver_struct_list
operator|!=
literal|0
condition|)
block|{
name|r
operator|.
name|setTop
argument_list|(
name|ver_struct_list
operator|->
name|at
argument_list|(
literal|2
argument_list|)
operator|.
name|pos
argument_list|)
expr_stmt|;
name|r
operator|.
name|setBottom
argument_list|(
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|docks
index|[
name|QInternal
operator|::
name|BottomDock
index|]
operator|.
name|rect
operator|=
name|r
expr_stmt|;
name|docks
index|[
name|QInternal
operator|::
name|BottomDock
index|]
operator|.
name|fitItems
argument_list|()
expr_stmt|;
block|}
comment|// left ---------------------------------------------------
if|if
condition|(
operator|!
name|docks
index|[
name|QInternal
operator|::
name|LeftDock
index|]
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|QRect
name|r
init|=
name|docks
index|[
name|QInternal
operator|::
name|LeftDock
index|]
operator|.
name|rect
decl_stmt|;
if|if
condition|(
name|hor_struct_list
operator|!=
literal|0
condition|)
block|{
name|r
operator|.
name|setLeft
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|)
expr_stmt|;
name|r
operator|.
name|setRight
argument_list|(
name|hor_struct_list
operator|->
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|pos
operator|-
name|sep
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|ver_struct_list
operator|!=
literal|0
condition|)
block|{
name|r
operator|.
name|setTop
argument_list|(
name|corners
index|[
name|Qt
operator|::
name|TopLeftCorner
index|]
operator|==
name|Qt
operator|::
name|LeftDockWidgetArea
operator|||
name|docks
index|[
name|QInternal
operator|::
name|TopDock
index|]
operator|.
name|isEmpty
argument_list|()
condition|?
name|rect
operator|.
name|top
argument_list|()
else|:
name|ver_struct_list
operator|->
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|pos
argument_list|)
expr_stmt|;
name|r
operator|.
name|setBottom
argument_list|(
name|corners
index|[
name|Qt
operator|::
name|BottomLeftCorner
index|]
operator|==
name|Qt
operator|::
name|LeftDockWidgetArea
operator|||
name|docks
index|[
name|QInternal
operator|::
name|BottomDock
index|]
operator|.
name|isEmpty
argument_list|()
condition|?
name|rect
operator|.
name|bottom
argument_list|()
else|:
name|ver_struct_list
operator|->
name|at
argument_list|(
literal|2
argument_list|)
operator|.
name|pos
operator|-
name|sep
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
name|docks
index|[
name|QInternal
operator|::
name|LeftDock
index|]
operator|.
name|rect
operator|=
name|r
expr_stmt|;
name|docks
index|[
name|QInternal
operator|::
name|LeftDock
index|]
operator|.
name|fitItems
argument_list|()
expr_stmt|;
block|}
comment|// right ---------------------------------------------------
if|if
condition|(
operator|!
name|docks
index|[
name|QInternal
operator|::
name|RightDock
index|]
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|QRect
name|r
init|=
name|docks
index|[
name|QInternal
operator|::
name|RightDock
index|]
operator|.
name|rect
decl_stmt|;
if|if
condition|(
name|hor_struct_list
operator|!=
literal|0
condition|)
block|{
name|r
operator|.
name|setLeft
argument_list|(
name|hor_struct_list
operator|->
name|at
argument_list|(
literal|2
argument_list|)
operator|.
name|pos
argument_list|)
expr_stmt|;
name|r
operator|.
name|setRight
argument_list|(
name|rect
operator|.
name|right
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|ver_struct_list
operator|!=
literal|0
condition|)
block|{
name|r
operator|.
name|setTop
argument_list|(
name|corners
index|[
name|Qt
operator|::
name|TopRightCorner
index|]
operator|==
name|Qt
operator|::
name|RightDockWidgetArea
operator|||
name|docks
index|[
name|QInternal
operator|::
name|TopDock
index|]
operator|.
name|isEmpty
argument_list|()
condition|?
name|rect
operator|.
name|top
argument_list|()
else|:
name|ver_struct_list
operator|->
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|pos
argument_list|)
expr_stmt|;
name|r
operator|.
name|setBottom
argument_list|(
name|corners
index|[
name|Qt
operator|::
name|BottomRightCorner
index|]
operator|==
name|Qt
operator|::
name|RightDockWidgetArea
operator|||
name|docks
index|[
name|QInternal
operator|::
name|BottomDock
index|]
operator|.
name|isEmpty
argument_list|()
condition|?
name|rect
operator|.
name|bottom
argument_list|()
else|:
name|ver_struct_list
operator|->
name|at
argument_list|(
literal|2
argument_list|)
operator|.
name|pos
operator|-
name|sep
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
name|docks
index|[
name|QInternal
operator|::
name|RightDock
index|]
operator|.
name|rect
operator|=
name|r
expr_stmt|;
name|docks
index|[
name|QInternal
operator|::
name|RightDock
index|]
operator|.
name|fitItems
argument_list|()
expr_stmt|;
block|}
comment|// center ---------------------------------------------------
if|if
condition|(
name|hor_struct_list
operator|!=
literal|0
condition|)
block|{
name|centralWidgetRect
operator|.
name|setLeft
argument_list|(
name|hor_struct_list
operator|->
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|pos
argument_list|)
expr_stmt|;
name|centralWidgetRect
operator|.
name|setWidth
argument_list|(
name|hor_struct_list
operator|->
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|size
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|ver_struct_list
operator|!=
literal|0
condition|)
block|{
name|centralWidgetRect
operator|.
name|setTop
argument_list|(
name|ver_struct_list
operator|->
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|pos
argument_list|)
expr_stmt|;
name|centralWidgetRect
operator|.
name|setHeight
argument_list|(
name|ver_struct_list
operator|->
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|size
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|fitLayout
name|void
name|QDockAreaLayout
operator|::
name|fitLayout
parameter_list|()
block|{
name|QVector
argument_list|<
name|QLayoutStruct
argument_list|>
name|ver_struct_list
argument_list|(
literal|3
argument_list|)
decl_stmt|;
name|QVector
argument_list|<
name|QLayoutStruct
argument_list|>
name|hor_struct_list
argument_list|(
literal|3
argument_list|)
decl_stmt|;
name|getGrid
argument_list|(
operator|&
name|ver_struct_list
argument_list|,
operator|&
name|hor_struct_list
argument_list|)
expr_stmt|;
name|qGeomCalc
argument_list|(
name|ver_struct_list
argument_list|,
literal|0
argument_list|,
literal|3
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|rect
operator|.
name|height
argument_list|()
argument_list|,
name|sep
argument_list|)
expr_stmt|;
name|qGeomCalc
argument_list|(
name|hor_struct_list
argument_list|,
literal|0
argument_list|,
literal|3
argument_list|,
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|width
argument_list|()
argument_list|,
name|sep
argument_list|)
expr_stmt|;
name|setGrid
argument_list|(
operator|&
name|ver_struct_list
argument_list|,
operator|&
name|hor_struct_list
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|clear
name|void
name|QDockAreaLayout
operator|::
name|clear
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|QInternal
operator|::
name|DockCount
condition|;
operator|++
name|i
control|)
name|docks
index|[
name|i
index|]
operator|.
name|clear
argument_list|()
expr_stmt|;
name|rect
operator|=
name|QRect
argument_list|()
expr_stmt|;
name|centralWidgetRect
operator|=
name|QRect
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|sizeHint
name|QSize
name|QDockAreaLayout
operator|::
name|sizeHint
parameter_list|()
specifier|const
block|{
name|int
name|left_sep
init|=
literal|0
decl_stmt|;
name|int
name|right_sep
init|=
literal|0
decl_stmt|;
name|int
name|top_sep
init|=
literal|0
decl_stmt|;
name|int
name|bottom_sep
init|=
literal|0
decl_stmt|;
if|if
condition|(
name|centralWidgetItem
operator|!=
literal|0
condition|)
block|{
name|left_sep
operator|=
name|docks
index|[
name|QInternal
operator|::
name|LeftDock
index|]
operator|.
name|isEmpty
argument_list|()
condition|?
literal|0
else|:
name|sep
expr_stmt|;
name|right_sep
operator|=
name|docks
index|[
name|QInternal
operator|::
name|RightDock
index|]
operator|.
name|isEmpty
argument_list|()
condition|?
literal|0
else|:
name|sep
expr_stmt|;
name|top_sep
operator|=
name|docks
index|[
name|QInternal
operator|::
name|TopDock
index|]
operator|.
name|isEmpty
argument_list|()
condition|?
literal|0
else|:
name|sep
expr_stmt|;
name|bottom_sep
operator|=
name|docks
index|[
name|QInternal
operator|::
name|BottomDock
index|]
operator|.
name|isEmpty
argument_list|()
condition|?
literal|0
else|:
name|sep
expr_stmt|;
block|}
name|QSize
name|left
init|=
name|docks
index|[
name|QInternal
operator|::
name|LeftDock
index|]
operator|.
name|sizeHint
argument_list|()
operator|+
name|QSize
argument_list|(
name|left_sep
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QSize
name|right
init|=
name|docks
index|[
name|QInternal
operator|::
name|RightDock
index|]
operator|.
name|sizeHint
argument_list|()
operator|+
name|QSize
argument_list|(
name|right_sep
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QSize
name|top
init|=
name|docks
index|[
name|QInternal
operator|::
name|TopDock
index|]
operator|.
name|sizeHint
argument_list|()
operator|+
name|QSize
argument_list|(
literal|0
argument_list|,
name|top_sep
argument_list|)
decl_stmt|;
name|QSize
name|bottom
init|=
name|docks
index|[
name|QInternal
operator|::
name|BottomDock
index|]
operator|.
name|sizeHint
argument_list|()
operator|+
name|QSize
argument_list|(
literal|0
argument_list|,
name|bottom_sep
argument_list|)
decl_stmt|;
name|QSize
name|center
init|=
name|centralWidgetItem
operator|==
literal|0
condition|?
name|QSize
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
else|:
name|centralWidgetItem
operator|->
name|sizeHint
argument_list|()
decl_stmt|;
name|int
name|row1
init|=
name|top
operator|.
name|width
argument_list|()
decl_stmt|;
name|int
name|row2
init|=
name|left
operator|.
name|width
argument_list|()
operator|+
name|center
operator|.
name|width
argument_list|()
operator|+
name|right
operator|.
name|width
argument_list|()
decl_stmt|;
name|int
name|row3
init|=
name|bottom
operator|.
name|width
argument_list|()
decl_stmt|;
name|int
name|col1
init|=
name|left
operator|.
name|height
argument_list|()
decl_stmt|;
name|int
name|col2
init|=
name|top
operator|.
name|height
argument_list|()
operator|+
name|center
operator|.
name|height
argument_list|()
operator|+
name|bottom
operator|.
name|height
argument_list|()
decl_stmt|;
name|int
name|col3
init|=
name|right
operator|.
name|height
argument_list|()
decl_stmt|;
if|if
condition|(
name|corners
index|[
name|Qt
operator|::
name|TopLeftCorner
index|]
operator|==
name|Qt
operator|::
name|LeftDockWidgetArea
condition|)
name|row1
operator|+=
name|left
operator|.
name|width
argument_list|()
expr_stmt|;
else|else
name|col1
operator|+=
name|top
operator|.
name|height
argument_list|()
expr_stmt|;
if|if
condition|(
name|corners
index|[
name|Qt
operator|::
name|TopRightCorner
index|]
operator|==
name|Qt
operator|::
name|RightDockWidgetArea
condition|)
name|row1
operator|+=
name|right
operator|.
name|width
argument_list|()
expr_stmt|;
else|else
name|col3
operator|+=
name|top
operator|.
name|height
argument_list|()
expr_stmt|;
if|if
condition|(
name|corners
index|[
name|Qt
operator|::
name|BottomLeftCorner
index|]
operator|==
name|Qt
operator|::
name|LeftDockWidgetArea
condition|)
name|row3
operator|+=
name|left
operator|.
name|width
argument_list|()
expr_stmt|;
else|else
name|col1
operator|+=
name|bottom
operator|.
name|height
argument_list|()
expr_stmt|;
if|if
condition|(
name|corners
index|[
name|Qt
operator|::
name|BottomRightCorner
index|]
operator|==
name|Qt
operator|::
name|RightDockWidgetArea
condition|)
name|row3
operator|+=
name|right
operator|.
name|width
argument_list|()
expr_stmt|;
else|else
name|col3
operator|+=
name|bottom
operator|.
name|height
argument_list|()
expr_stmt|;
return|return
name|QSize
argument_list|(
name|qMax
argument_list|(
name|row1
argument_list|,
name|row2
argument_list|,
name|row3
argument_list|)
argument_list|,
name|qMax
argument_list|(
name|col1
argument_list|,
name|col2
argument_list|,
name|col3
argument_list|)
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|minimumSize
name|QSize
name|QDockAreaLayout
operator|::
name|minimumSize
parameter_list|()
specifier|const
block|{
name|int
name|left_sep
init|=
literal|0
decl_stmt|;
name|int
name|right_sep
init|=
literal|0
decl_stmt|;
name|int
name|top_sep
init|=
literal|0
decl_stmt|;
name|int
name|bottom_sep
init|=
literal|0
decl_stmt|;
if|if
condition|(
name|centralWidgetItem
operator|!=
literal|0
condition|)
block|{
name|left_sep
operator|=
name|docks
index|[
name|QInternal
operator|::
name|LeftDock
index|]
operator|.
name|isEmpty
argument_list|()
condition|?
literal|0
else|:
name|sep
expr_stmt|;
name|right_sep
operator|=
name|docks
index|[
name|QInternal
operator|::
name|RightDock
index|]
operator|.
name|isEmpty
argument_list|()
condition|?
literal|0
else|:
name|sep
expr_stmt|;
name|top_sep
operator|=
name|docks
index|[
name|QInternal
operator|::
name|TopDock
index|]
operator|.
name|isEmpty
argument_list|()
condition|?
literal|0
else|:
name|sep
expr_stmt|;
name|bottom_sep
operator|=
name|docks
index|[
name|QInternal
operator|::
name|BottomDock
index|]
operator|.
name|isEmpty
argument_list|()
condition|?
literal|0
else|:
name|sep
expr_stmt|;
block|}
name|QSize
name|left
init|=
name|docks
index|[
name|QInternal
operator|::
name|LeftDock
index|]
operator|.
name|minimumSize
argument_list|()
operator|+
name|QSize
argument_list|(
name|left_sep
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QSize
name|right
init|=
name|docks
index|[
name|QInternal
operator|::
name|RightDock
index|]
operator|.
name|minimumSize
argument_list|()
operator|+
name|QSize
argument_list|(
name|right_sep
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QSize
name|top
init|=
name|docks
index|[
name|QInternal
operator|::
name|TopDock
index|]
operator|.
name|minimumSize
argument_list|()
operator|+
name|QSize
argument_list|(
literal|0
argument_list|,
name|top_sep
argument_list|)
decl_stmt|;
name|QSize
name|bottom
init|=
name|docks
index|[
name|QInternal
operator|::
name|BottomDock
index|]
operator|.
name|minimumSize
argument_list|()
operator|+
name|QSize
argument_list|(
literal|0
argument_list|,
name|bottom_sep
argument_list|)
decl_stmt|;
name|QSize
name|center
init|=
name|centralWidgetItem
operator|==
literal|0
condition|?
name|QSize
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
else|:
name|centralWidgetItem
operator|->
name|minimumSize
argument_list|()
decl_stmt|;
name|int
name|row1
init|=
name|top
operator|.
name|width
argument_list|()
decl_stmt|;
name|int
name|row2
init|=
name|left
operator|.
name|width
argument_list|()
operator|+
name|center
operator|.
name|width
argument_list|()
operator|+
name|right
operator|.
name|width
argument_list|()
decl_stmt|;
name|int
name|row3
init|=
name|bottom
operator|.
name|width
argument_list|()
decl_stmt|;
name|int
name|col1
init|=
name|left
operator|.
name|height
argument_list|()
decl_stmt|;
name|int
name|col2
init|=
name|top
operator|.
name|height
argument_list|()
operator|+
name|center
operator|.
name|height
argument_list|()
operator|+
name|bottom
operator|.
name|height
argument_list|()
decl_stmt|;
name|int
name|col3
init|=
name|right
operator|.
name|height
argument_list|()
decl_stmt|;
if|if
condition|(
name|corners
index|[
name|Qt
operator|::
name|TopLeftCorner
index|]
operator|==
name|Qt
operator|::
name|LeftDockWidgetArea
condition|)
name|row1
operator|+=
name|left
operator|.
name|width
argument_list|()
expr_stmt|;
else|else
name|col1
operator|+=
name|top
operator|.
name|height
argument_list|()
expr_stmt|;
if|if
condition|(
name|corners
index|[
name|Qt
operator|::
name|TopRightCorner
index|]
operator|==
name|Qt
operator|::
name|RightDockWidgetArea
condition|)
name|row1
operator|+=
name|right
operator|.
name|width
argument_list|()
expr_stmt|;
else|else
name|col3
operator|+=
name|top
operator|.
name|height
argument_list|()
expr_stmt|;
if|if
condition|(
name|corners
index|[
name|Qt
operator|::
name|BottomLeftCorner
index|]
operator|==
name|Qt
operator|::
name|LeftDockWidgetArea
condition|)
name|row3
operator|+=
name|left
operator|.
name|width
argument_list|()
expr_stmt|;
else|else
name|col1
operator|+=
name|bottom
operator|.
name|height
argument_list|()
expr_stmt|;
if|if
condition|(
name|corners
index|[
name|Qt
operator|::
name|BottomRightCorner
index|]
operator|==
name|Qt
operator|::
name|RightDockWidgetArea
condition|)
name|row3
operator|+=
name|right
operator|.
name|width
argument_list|()
expr_stmt|;
else|else
name|col3
operator|+=
name|bottom
operator|.
name|height
argument_list|()
expr_stmt|;
return|return
name|QSize
argument_list|(
name|qMax
argument_list|(
name|row1
argument_list|,
name|row2
argument_list|,
name|row3
argument_list|)
argument_list|,
name|qMax
argument_list|(
name|col1
argument_list|,
name|col2
argument_list|,
name|col3
argument_list|)
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|restoreDockWidget
name|bool
name|QDockAreaLayout
operator|::
name|restoreDockWidget
parameter_list|(
name|QDockWidget
modifier|*
name|dockWidget
parameter_list|)
block|{
name|QList
argument_list|<
name|int
argument_list|>
name|index
init|=
name|indexOfPlaceHolder
argument_list|(
name|dockWidget
operator|->
name|objectName
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|index
operator|.
name|isEmpty
argument_list|()
condition|)
return|return
literal|false
return|;
name|QDockAreaLayoutItem
modifier|&
name|item
init|=
name|this
operator|->
name|item
argument_list|(
name|index
argument_list|)
decl_stmt|;
name|QPlaceHolderItem
modifier|*
name|placeHolder
init|=
name|item
operator|.
name|placeHolderItem
decl_stmt|;
name|Q_ASSERT
argument_list|(
name|placeHolder
operator|!=
literal|0
argument_list|)
expr_stmt|;
name|item
operator|.
name|widgetItem
operator|=
operator|new
name|QDockWidgetItem
argument_list|(
name|dockWidget
argument_list|)
expr_stmt|;
if|if
condition|(
name|placeHolder
operator|->
name|window
condition|)
block|{
name|QDesktopWidget
name|desktop
decl_stmt|;
name|QRect
name|r
init|=
name|constrainedRect
argument_list|(
name|placeHolder
operator|->
name|topLevelRect
argument_list|,
name|desktop
operator|.
name|screenGeometry
argument_list|(
name|dockWidget
argument_list|)
argument_list|)
decl_stmt|;
name|dockWidget
operator|->
name|d_func
argument_list|()
operator|->
name|setWindowState
argument_list|(
literal|true
argument_list|,
literal|true
argument_list|,
name|r
argument_list|)
expr_stmt|;
block|}
name|dockWidget
operator|->
name|setVisible
argument_list|(
operator|!
name|placeHolder
operator|->
name|hidden
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_X11
if|if
condition|(
name|placeHolder
operator|->
name|window
condition|)
comment|// gets rid of the X11BypassWindowManager window flag
name|dockWidget
operator|->
name|d_func
argument_list|()
operator|->
name|setWindowState
argument_list|(
literal|true
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|item
operator|.
name|placeHolderItem
operator|=
literal|0
expr_stmt|;
operator|delete
name|placeHolder
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_function
DECL|function|addDockWidget
name|void
name|QDockAreaLayout
operator|::
name|addDockWidget
parameter_list|(
name|QInternal
operator|::
name|DockPosition
name|pos
parameter_list|,
name|QDockWidget
modifier|*
name|dockWidget
parameter_list|,
name|Qt
operator|::
name|Orientation
name|orientation
parameter_list|)
block|{
name|QLayoutItem
modifier|*
name|dockWidgetItem
init|=
operator|new
name|QDockWidgetItem
argument_list|(
name|dockWidget
argument_list|)
decl_stmt|;
name|QDockAreaLayoutInfo
modifier|&
name|info
init|=
name|docks
index|[
name|pos
index|]
decl_stmt|;
if|if
condition|(
name|orientation
operator|==
name|info
operator|.
name|o
operator|||
name|info
operator|.
name|item_list
operator|.
name|count
argument_list|()
operator|<=
literal|1
condition|)
block|{
comment|// empty dock areas, or dock areas containing exactly one widget can have their orientation
comment|// switched.
name|info
operator|.
name|o
operator|=
name|orientation
expr_stmt|;
name|QDockAreaLayoutItem
name|new_item
argument_list|(
name|dockWidgetItem
argument_list|)
decl_stmt|;
name|info
operator|.
name|item_list
operator|.
name|append
argument_list|(
name|new_item
argument_list|)
expr_stmt|;
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
if|if
condition|(
name|info
operator|.
name|tabbed
operator|&&
operator|!
name|new_item
operator|.
name|skip
argument_list|()
condition|)
block|{
name|info
operator|.
name|updateTabBar
argument_list|()
expr_stmt|;
name|info
operator|.
name|setCurrentTabId
argument_list|(
name|tabId
argument_list|(
name|new_item
argument_list|)
argument_list|)
expr_stmt|;
block|}
endif|#
directive|endif
block|}
else|else
block|{
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
name|int
name|tbshape
init|=
name|info
operator|.
name|tabBarShape
decl_stmt|;
else|#
directive|else
name|int
name|tbshape
init|=
literal|0
decl_stmt|;
endif|#
directive|endif
name|QDockAreaLayoutInfo
name|new_info
argument_list|(
operator|&
name|sep
argument_list|,
name|pos
argument_list|,
name|orientation
argument_list|,
name|tbshape
argument_list|,
name|mainWindow
argument_list|)
decl_stmt|;
name|new_info
operator|.
name|item_list
operator|.
name|append
argument_list|(
operator|new
name|QDockAreaLayoutInfo
argument_list|(
name|info
argument_list|)
argument_list|)
expr_stmt|;
name|new_info
operator|.
name|item_list
operator|.
name|append
argument_list|(
name|dockWidgetItem
argument_list|)
expr_stmt|;
name|info
operator|=
name|new_info
expr_stmt|;
block|}
name|QList
argument_list|<
name|int
argument_list|>
name|index
init|=
name|indexOfPlaceHolder
argument_list|(
name|dockWidget
operator|->
name|objectName
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|index
operator|.
name|isEmpty
argument_list|()
condition|)
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|tabifyDockWidget
name|void
name|QDockAreaLayout
operator|::
name|tabifyDockWidget
parameter_list|(
name|QDockWidget
modifier|*
name|first
parameter_list|,
name|QDockWidget
modifier|*
name|second
parameter_list|)
block|{
name|QList
argument_list|<
name|int
argument_list|>
name|path
init|=
name|indexOf
argument_list|(
name|first
argument_list|)
decl_stmt|;
if|if
condition|(
name|path
operator|.
name|isEmpty
argument_list|()
condition|)
return|return;
name|QDockAreaLayoutInfo
modifier|*
name|info
init|=
name|this
operator|->
name|info
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|Q_ASSERT
argument_list|(
name|info
operator|!=
literal|0
argument_list|)
expr_stmt|;
name|info
operator|->
name|tab
argument_list|(
name|path
operator|.
name|last
argument_list|()
argument_list|,
operator|new
name|QDockWidgetItem
argument_list|(
name|second
argument_list|)
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|int
argument_list|>
name|index
init|=
name|indexOfPlaceHolder
argument_list|(
name|second
operator|->
name|objectName
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|index
operator|.
name|isEmpty
argument_list|()
condition|)
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|splitDockWidget
name|void
name|QDockAreaLayout
operator|::
name|splitDockWidget
parameter_list|(
name|QDockWidget
modifier|*
name|after
parameter_list|,
name|QDockWidget
modifier|*
name|dockWidget
parameter_list|,
name|Qt
operator|::
name|Orientation
name|orientation
parameter_list|)
block|{
name|QList
argument_list|<
name|int
argument_list|>
name|path
init|=
name|indexOf
argument_list|(
name|after
argument_list|)
decl_stmt|;
if|if
condition|(
name|path
operator|.
name|isEmpty
argument_list|()
condition|)
return|return;
name|QDockAreaLayoutInfo
modifier|*
name|info
init|=
name|this
operator|->
name|info
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|Q_ASSERT
argument_list|(
name|info
operator|!=
literal|0
argument_list|)
expr_stmt|;
name|info
operator|->
name|split
argument_list|(
name|path
operator|.
name|last
argument_list|()
argument_list|,
name|orientation
argument_list|,
operator|new
name|QDockWidgetItem
argument_list|(
name|dockWidget
argument_list|)
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|int
argument_list|>
name|index
init|=
name|indexOfPlaceHolder
argument_list|(
name|dockWidget
operator|->
name|objectName
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|index
operator|.
name|isEmpty
argument_list|()
condition|)
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|apply
name|void
name|QDockAreaLayout
operator|::
name|apply
parameter_list|(
name|bool
name|animate
parameter_list|)
block|{
name|QWidgetAnimator
modifier|&
name|widgetAnimator
init|=
name|qt_mainwindow_layout
argument_list|(
name|mainWindow
argument_list|)
operator|->
name|widgetAnimator
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|QInternal
operator|::
name|DockCount
condition|;
operator|++
name|i
control|)
name|docks
index|[
name|i
index|]
operator|.
name|apply
argument_list|(
name|animate
argument_list|)
expr_stmt|;
if|if
condition|(
name|centralWidgetItem
operator|!=
literal|0
operator|&&
operator|!
name|centralWidgetItem
operator|->
name|isEmpty
argument_list|()
condition|)
block|{
name|widgetAnimator
operator|.
name|animate
argument_list|(
name|centralWidgetItem
operator|->
name|widget
argument_list|()
argument_list|,
name|centralWidgetRect
argument_list|,
name|animate
argument_list|)
expr_stmt|;
block|}
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
if|if
condition|(
name|sep
operator|==
literal|1
condition|)
name|updateSeparatorWidgets
argument_list|()
expr_stmt|;
endif|#
directive|endif
comment|//QT_NO_TABBAR
block|}
end_function
begin_function
DECL|function|paintSeparators
name|void
name|QDockAreaLayout
operator|::
name|paintSeparators
parameter_list|(
name|QPainter
modifier|*
name|p
parameter_list|,
name|QWidget
modifier|*
name|widget
parameter_list|,
specifier|const
name|QRegion
modifier|&
name|clip
parameter_list|,
specifier|const
name|QPoint
modifier|&
name|mouse
parameter_list|)
specifier|const
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|QInternal
operator|::
name|DockCount
condition|;
operator|++
name|i
control|)
block|{
specifier|const
name|QDockAreaLayoutInfo
modifier|&
name|dock
init|=
name|docks
index|[
name|i
index|]
decl_stmt|;
if|if
condition|(
name|dock
operator|.
name|isEmpty
argument_list|()
condition|)
continue|continue;
name|QRect
name|r
init|=
name|separatorRect
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|clip
operator|.
name|contains
argument_list|(
name|r
argument_list|)
operator|&&
operator|!
name|dock
operator|.
name|hasFixedSize
argument_list|()
condition|)
block|{
name|Qt
operator|::
name|Orientation
name|opposite
init|=
name|dock
operator|.
name|o
operator|==
name|Qt
operator|::
name|Horizontal
condition|?
name|Qt
operator|::
name|Vertical
else|:
name|Qt
operator|::
name|Horizontal
decl_stmt|;
name|paintSep
argument_list|(
name|p
argument_list|,
name|widget
argument_list|,
name|r
argument_list|,
name|opposite
argument_list|,
name|r
operator|.
name|contains
argument_list|(
name|mouse
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|clip
operator|.
name|contains
argument_list|(
name|dock
operator|.
name|rect
argument_list|)
condition|)
name|dock
operator|.
name|paintSeparators
argument_list|(
name|p
argument_list|,
name|widget
argument_list|,
name|clip
argument_list|,
name|mouse
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|separatorRegion
name|QRegion
name|QDockAreaLayout
operator|::
name|separatorRegion
parameter_list|()
specifier|const
block|{
name|QRegion
name|result
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|QInternal
operator|::
name|DockCount
condition|;
operator|++
name|i
control|)
block|{
specifier|const
name|QDockAreaLayoutInfo
modifier|&
name|dock
init|=
name|docks
index|[
name|i
index|]
decl_stmt|;
if|if
condition|(
name|dock
operator|.
name|isEmpty
argument_list|()
condition|)
continue|continue;
name|result
operator||=
name|separatorRect
argument_list|(
name|i
argument_list|)
expr_stmt|;
name|result
operator||=
name|dock
operator|.
name|separatorRegion
argument_list|()
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
end_function
begin_function
DECL|function|separatorMove
name|int
name|QDockAreaLayout
operator|::
name|separatorMove
parameter_list|(
specifier|const
name|QList
argument_list|<
name|int
argument_list|>
modifier|&
name|separator
parameter_list|,
specifier|const
name|QPoint
modifier|&
name|origin
parameter_list|,
specifier|const
name|QPoint
modifier|&
name|dest
parameter_list|)
block|{
name|int
name|delta
init|=
literal|0
decl_stmt|;
name|int
name|index
init|=
name|separator
operator|.
name|last
argument_list|()
decl_stmt|;
if|if
condition|(
name|separator
operator|.
name|count
argument_list|()
operator|>
literal|1
condition|)
block|{
name|QDockAreaLayoutInfo
modifier|*
name|info
init|=
name|this
operator|->
name|info
argument_list|(
name|separator
argument_list|)
decl_stmt|;
name|delta
operator|=
name|pick
argument_list|(
name|info
operator|->
name|o
argument_list|,
name|dest
operator|-
name|origin
argument_list|)
expr_stmt|;
if|if
condition|(
name|delta
operator|!=
literal|0
condition|)
name|delta
operator|=
name|info
operator|->
name|separatorMove
argument_list|(
name|index
argument_list|,
name|delta
argument_list|)
expr_stmt|;
name|info
operator|->
name|apply
argument_list|(
literal|false
argument_list|)
expr_stmt|;
return|return
name|delta
return|;
block|}
name|QVector
argument_list|<
name|QLayoutStruct
argument_list|>
name|list
decl_stmt|;
if|if
condition|(
name|index
operator|==
name|QInternal
operator|::
name|LeftDock
operator|||
name|index
operator|==
name|QInternal
operator|::
name|RightDock
condition|)
name|getGrid
argument_list|(
literal|0
argument_list|,
operator|&
name|list
argument_list|)
expr_stmt|;
else|else
name|getGrid
argument_list|(
operator|&
name|list
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|int
name|sep_index
init|=
name|index
operator|==
name|QInternal
operator|::
name|LeftDock
operator|||
name|index
operator|==
name|QInternal
operator|::
name|TopDock
condition|?
literal|0
else|:
literal|1
decl_stmt|;
name|Qt
operator|::
name|Orientation
name|o
init|=
name|index
operator|==
name|QInternal
operator|::
name|LeftDock
operator|||
name|index
operator|==
name|QInternal
operator|::
name|RightDock
condition|?
name|Qt
operator|::
name|Horizontal
else|:
name|Qt
operator|::
name|Vertical
decl_stmt|;
name|delta
operator|=
name|pick
argument_list|(
name|o
argument_list|,
name|dest
operator|-
name|origin
argument_list|)
expr_stmt|;
name|delta
operator|=
name|separatorMoveHelper
argument_list|(
name|list
argument_list|,
name|sep_index
argument_list|,
name|delta
argument_list|,
name|sep
argument_list|)
expr_stmt|;
if|if
condition|(
name|index
operator|==
name|QInternal
operator|::
name|LeftDock
operator|||
name|index
operator|==
name|QInternal
operator|::
name|RightDock
condition|)
name|setGrid
argument_list|(
literal|0
argument_list|,
operator|&
name|list
argument_list|)
expr_stmt|;
else|else
name|setGrid
argument_list|(
operator|&
name|list
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|apply
argument_list|(
literal|false
argument_list|)
expr_stmt|;
return|return
name|delta
return|;
block|}
end_function
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
end_ifndef
begin_comment
comment|// Sets the correct positions for the separator widgets
end_comment
begin_comment
comment|// Allocates new sepearator widgets with getSeparatorWidget
end_comment
begin_function
DECL|function|updateSeparatorWidgets
name|void
name|QDockAreaLayout
operator|::
name|updateSeparatorWidgets
parameter_list|()
specifier|const
block|{
name|int
name|j
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|QInternal
operator|::
name|DockCount
condition|;
operator|++
name|i
control|)
block|{
specifier|const
name|QDockAreaLayoutInfo
modifier|&
name|dock
init|=
name|docks
index|[
name|i
index|]
decl_stmt|;
if|if
condition|(
name|dock
operator|.
name|isEmpty
argument_list|()
condition|)
continue|continue;
name|QWidget
modifier|*
name|sepWidget
decl_stmt|;
if|if
condition|(
name|j
operator|<
name|separatorWidgets
operator|.
name|size
argument_list|()
condition|)
block|{
name|sepWidget
operator|=
name|separatorWidgets
operator|.
name|at
argument_list|(
name|j
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|sepWidget
operator|=
name|qt_mainwindow_layout
argument_list|(
name|mainWindow
argument_list|)
operator|->
name|getSeparatorWidget
argument_list|()
expr_stmt|;
name|separatorWidgets
operator|.
name|append
argument_list|(
name|sepWidget
argument_list|)
expr_stmt|;
block|}
name|j
operator|++
expr_stmt|;
ifndef|#
directive|ifndef
name|QT_MAC_USE_COCOA
name|sepWidget
operator|->
name|raise
argument_list|()
expr_stmt|;
endif|#
directive|endif
name|QRect
name|sepRect
init|=
name|separatorRect
argument_list|(
name|i
argument_list|)
operator|.
name|adjusted
argument_list|(
operator|-
literal|2
argument_list|,
operator|-
literal|2
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|sepWidget
operator|->
name|setGeometry
argument_list|(
name|sepRect
argument_list|)
expr_stmt|;
name|sepWidget
operator|->
name|setMask
argument_list|(
name|QRegion
argument_list|(
name|separatorRect
argument_list|(
name|i
argument_list|)
operator|.
name|translated
argument_list|(
operator|-
name|sepRect
operator|.
name|topLeft
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|sepWidget
operator|->
name|show
argument_list|()
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
name|j
init|;
name|i
operator|<
name|separatorWidgets
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
name|separatorWidgets
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|->
name|hide
argument_list|()
expr_stmt|;
name|separatorWidgets
operator|.
name|resize
argument_list|(
name|j
argument_list|)
expr_stmt|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|//QT_NO_TABBAR
end_comment
begin_function
DECL|function|itemAt
name|QLayoutItem
modifier|*
name|QDockAreaLayout
operator|::
name|itemAt
parameter_list|(
name|int
modifier|*
name|x
parameter_list|,
name|int
name|index
parameter_list|)
specifier|const
block|{
name|Q_ASSERT
argument_list|(
name|x
operator|!=
literal|0
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|QInternal
operator|::
name|DockCount
condition|;
operator|++
name|i
control|)
block|{
specifier|const
name|QDockAreaLayoutInfo
modifier|&
name|dock
init|=
name|docks
index|[
name|i
index|]
decl_stmt|;
if|if
condition|(
name|QLayoutItem
modifier|*
name|ret
init|=
name|dock
operator|.
name|itemAt
argument_list|(
name|x
argument_list|,
name|index
argument_list|)
condition|)
return|return
name|ret
return|;
block|}
if|if
condition|(
name|centralWidgetItem
operator|&&
operator|(
operator|*
name|x
operator|)
operator|++
operator|==
name|index
condition|)
return|return
name|centralWidgetItem
return|;
return|return
literal|0
return|;
block|}
end_function
begin_function
DECL|function|takeAt
name|QLayoutItem
modifier|*
name|QDockAreaLayout
operator|::
name|takeAt
parameter_list|(
name|int
modifier|*
name|x
parameter_list|,
name|int
name|index
parameter_list|)
block|{
name|Q_ASSERT
argument_list|(
name|x
operator|!=
literal|0
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|QInternal
operator|::
name|DockCount
condition|;
operator|++
name|i
control|)
block|{
name|QDockAreaLayoutInfo
modifier|&
name|dock
init|=
name|docks
index|[
name|i
index|]
decl_stmt|;
if|if
condition|(
name|QLayoutItem
modifier|*
name|ret
init|=
name|dock
operator|.
name|takeAt
argument_list|(
name|x
argument_list|,
name|index
argument_list|)
condition|)
return|return
name|ret
return|;
block|}
if|if
condition|(
name|centralWidgetItem
operator|&&
operator|(
operator|*
name|x
operator|)
operator|++
operator|==
name|index
condition|)
block|{
name|QLayoutItem
modifier|*
name|ret
init|=
name|centralWidgetItem
decl_stmt|;
name|centralWidgetItem
operator|=
literal|0
expr_stmt|;
return|return
name|ret
return|;
block|}
return|return
literal|0
return|;
block|}
end_function
begin_function
DECL|function|deleteAllLayoutItems
name|void
name|QDockAreaLayout
operator|::
name|deleteAllLayoutItems
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|QInternal
operator|::
name|DockCount
condition|;
operator|++
name|i
control|)
name|docks
index|[
name|i
index|]
operator|.
name|deleteAllLayoutItems
argument_list|()
expr_stmt|;
block|}
end_function
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
end_ifndef
begin_function
DECL|function|usedTabBars
name|QSet
argument_list|<
name|QTabBar
modifier|*
argument_list|>
name|QDockAreaLayout
operator|::
name|usedTabBars
parameter_list|()
specifier|const
block|{
name|QSet
argument_list|<
name|QTabBar
modifier|*
argument_list|>
name|result
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|QInternal
operator|::
name|DockCount
condition|;
operator|++
name|i
control|)
block|{
specifier|const
name|QDockAreaLayoutInfo
modifier|&
name|dock
init|=
name|docks
index|[
name|i
index|]
decl_stmt|;
name|result
operator|+=
name|dock
operator|.
name|usedTabBars
argument_list|()
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
end_function
begin_comment
comment|// Returns the set of all used separator widgets
end_comment
begin_function
DECL|function|usedSeparatorWidgets
name|QSet
argument_list|<
name|QWidget
modifier|*
argument_list|>
name|QDockAreaLayout
operator|::
name|usedSeparatorWidgets
parameter_list|()
specifier|const
block|{
name|QSet
argument_list|<
name|QWidget
modifier|*
argument_list|>
name|result
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|separatorWidgets
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
name|result
operator|<<
name|separatorWidgets
operator|.
name|at
argument_list|(
name|i
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|QInternal
operator|::
name|DockCount
condition|;
operator|++
name|i
control|)
block|{
specifier|const
name|QDockAreaLayoutInfo
modifier|&
name|dock
init|=
name|docks
index|[
name|i
index|]
decl_stmt|;
name|result
operator|+=
name|dock
operator|.
name|usedSeparatorWidgets
argument_list|()
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_function
DECL|function|gapRect
name|QRect
name|QDockAreaLayout
operator|::
name|gapRect
parameter_list|(
specifier|const
name|QList
argument_list|<
name|int
argument_list|>
modifier|&
name|path
parameter_list|)
specifier|const
block|{
specifier|const
name|QDockAreaLayoutInfo
modifier|*
name|info
init|=
name|this
operator|->
name|info
argument_list|(
name|path
argument_list|)
decl_stmt|;
if|if
condition|(
name|info
operator|==
literal|0
condition|)
return|return
name|QRect
argument_list|()
return|;
specifier|const
name|QList
argument_list|<
name|QDockAreaLayoutItem
argument_list|>
modifier|&
name|item_list
init|=
name|info
operator|->
name|item_list
decl_stmt|;
name|Qt
operator|::
name|Orientation
name|o
init|=
name|info
operator|->
name|o
decl_stmt|;
name|int
name|index
init|=
name|path
operator|.
name|last
argument_list|()
decl_stmt|;
if|if
condition|(
name|index
operator|<
literal|0
operator|||
name|index
operator|>=
name|item_list
operator|.
name|count
argument_list|()
condition|)
return|return
name|QRect
argument_list|()
return|;
specifier|const
name|QDockAreaLayoutItem
modifier|&
name|item
init|=
name|item_list
operator|.
name|at
argument_list|(
name|index
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|item
operator|.
name|flags
operator|&
name|QDockAreaLayoutItem
operator|::
name|GapItem
operator|)
condition|)
return|return
name|QRect
argument_list|()
return|;
name|QRect
name|result
decl_stmt|;
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
if|if
condition|(
name|info
operator|->
name|tabbed
condition|)
block|{
name|result
operator|=
name|info
operator|->
name|tabContentRect
argument_list|()
expr_stmt|;
block|}
else|else
endif|#
directive|endif
block|{
name|int
name|pos
init|=
name|item
operator|.
name|pos
decl_stmt|;
name|int
name|size
init|=
name|item
operator|.
name|size
decl_stmt|;
name|int
name|prev
init|=
name|info
operator|->
name|prev
argument_list|(
name|index
argument_list|)
decl_stmt|;
name|int
name|next
init|=
name|info
operator|->
name|next
argument_list|(
name|index
argument_list|)
decl_stmt|;
if|if
condition|(
name|prev
operator|!=
operator|-
literal|1
operator|&&
operator|!
operator|(
name|item_list
operator|.
name|at
argument_list|(
name|prev
argument_list|)
operator|.
name|flags
operator|&
name|QDockAreaLayoutItem
operator|::
name|GapItem
operator|)
condition|)
block|{
name|pos
operator|+=
name|sep
expr_stmt|;
name|size
operator|-=
name|sep
expr_stmt|;
block|}
if|if
condition|(
name|next
operator|!=
operator|-
literal|1
operator|&&
operator|!
operator|(
name|item_list
operator|.
name|at
argument_list|(
name|next
argument_list|)
operator|.
name|flags
operator|&
name|QDockAreaLayoutItem
operator|::
name|GapItem
operator|)
condition|)
name|size
operator|-=
name|sep
expr_stmt|;
name|QPoint
name|p
decl_stmt|;
name|rpick
argument_list|(
name|o
argument_list|,
name|p
argument_list|)
operator|=
name|pos
expr_stmt|;
name|rperp
argument_list|(
name|o
argument_list|,
name|p
argument_list|)
operator|=
name|perp
argument_list|(
name|o
argument_list|,
name|info
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|)
expr_stmt|;
name|QSize
name|s
decl_stmt|;
name|rpick
argument_list|(
name|o
argument_list|,
name|s
argument_list|)
operator|=
name|size
expr_stmt|;
name|rperp
argument_list|(
name|o
argument_list|,
name|s
argument_list|)
operator|=
name|perp
argument_list|(
name|o
argument_list|,
name|info
operator|->
name|rect
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
name|QRect
argument_list|(
name|p
argument_list|,
name|s
argument_list|)
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
end_function
begin_function
DECL|function|keepSize
name|void
name|QDockAreaLayout
operator|::
name|keepSize
parameter_list|(
name|QDockWidget
modifier|*
name|w
parameter_list|)
block|{
name|QList
argument_list|<
name|int
argument_list|>
name|path
init|=
name|indexOf
argument_list|(
name|w
argument_list|)
decl_stmt|;
if|if
condition|(
name|path
operator|.
name|isEmpty
argument_list|()
condition|)
return|return;
name|QDockAreaLayoutItem
modifier|&
name|item
init|=
name|this
operator|->
name|item
argument_list|(
name|path
argument_list|)
decl_stmt|;
if|if
condition|(
name|item
operator|.
name|size
operator|!=
operator|-
literal|1
condition|)
name|item
operator|.
name|flags
operator||=
name|QDockAreaLayoutItem
operator|::
name|KeepSize
expr_stmt|;
block|}
end_function
begin_function
DECL|function|styleChangedEvent
name|void
name|QDockAreaLayout
operator|::
name|styleChangedEvent
parameter_list|()
block|{
name|sep
operator|=
name|mainWindow
operator|->
name|style
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|QStyle
operator|::
name|PM_DockWidgetSeparatorExtent
argument_list|,
literal|0
argument_list|,
name|mainWindow
argument_list|)
expr_stmt|;
name|fitLayout
argument_list|()
expr_stmt|;
block|}
end_function
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_DOCKWIDGET
end_comment
end_unit
