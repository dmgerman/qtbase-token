begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the QtWidgets module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QWidgetItem>
end_include
begin_include
include|#
directive|include
file|<QToolBar>
end_include
begin_include
include|#
directive|include
file|<QStyleOption>
end_include
begin_include
include|#
directive|include
file|<QApplication>
end_include
begin_include
include|#
directive|include
file|<qdebug.h>
end_include
begin_include
include|#
directive|include
file|"qtoolbararealayout_p.h"
end_include
begin_include
include|#
directive|include
file|"qmainwindowlayout_p.h"
end_include
begin_include
include|#
directive|include
file|"qwidgetanimator_p.h"
end_include
begin_include
include|#
directive|include
file|"qtoolbarlayout_p.h"
end_include
begin_include
include|#
directive|include
file|"qtoolbar_p.h"
end_include
begin_comment
comment|/****************************************************************************** ** QToolBarAreaLayoutItem */
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_TOOLBAR
end_ifndef
begin_function_decl
name|QT_BEGIN_NAMESPACE
comment|// qmainwindow.cpp
specifier|extern
name|QMainWindowLayout
modifier|*
name|qt_mainwindow_layout
parameter_list|(
specifier|const
name|QMainWindow
modifier|*
name|mainWindow
parameter_list|)
function_decl|;
end_function_decl
begin_function
DECL|function|minimumSize
name|QSize
name|QToolBarAreaLayoutItem
operator|::
name|minimumSize
parameter_list|()
specifier|const
block|{
if|if
condition|(
name|skip
argument_list|()
condition|)
return|return
name|QSize
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
return|;
return|return
name|qSmartMinSize
argument_list|(
cast|static_cast
argument_list|<
name|QWidgetItem
operator|*
argument_list|>
argument_list|(
name|widgetItem
argument_list|)
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|sizeHint
name|QSize
name|QToolBarAreaLayoutItem
operator|::
name|sizeHint
parameter_list|()
specifier|const
block|{
if|if
condition|(
name|skip
argument_list|()
condition|)
return|return
name|QSize
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
return|;
return|return
name|realSizeHint
argument_list|()
return|;
block|}
end_function
begin_comment
comment|//returns the real size hint not taking into account the visibility of the widget
end_comment
begin_function
DECL|function|realSizeHint
name|QSize
name|QToolBarAreaLayoutItem
operator|::
name|realSizeHint
parameter_list|()
specifier|const
block|{
name|QWidget
modifier|*
name|wid
init|=
name|widgetItem
operator|->
name|widget
argument_list|()
decl_stmt|;
name|QSize
name|s
init|=
name|wid
operator|->
name|sizeHint
argument_list|()
operator|.
name|expandedTo
argument_list|(
name|wid
operator|->
name|minimumSizeHint
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|wid
operator|->
name|sizePolicy
argument_list|()
operator|.
name|horizontalPolicy
argument_list|()
operator|==
name|QSizePolicy
operator|::
name|Ignored
condition|)
name|s
operator|.
name|setWidth
argument_list|(
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
name|wid
operator|->
name|sizePolicy
argument_list|()
operator|.
name|verticalPolicy
argument_list|()
operator|==
name|QSizePolicy
operator|::
name|Ignored
condition|)
name|s
operator|.
name|setHeight
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|s
operator|=
name|s
operator|.
name|boundedTo
argument_list|(
name|wid
operator|->
name|maximumSize
argument_list|()
argument_list|)
operator|.
name|expandedTo
argument_list|(
name|wid
operator|->
name|minimumSize
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|s
return|;
block|}
end_function
begin_function
DECL|function|skip
name|bool
name|QToolBarAreaLayoutItem
operator|::
name|skip
parameter_list|()
specifier|const
block|{
if|if
condition|(
name|gap
condition|)
return|return
literal|false
return|;
return|return
name|widgetItem
operator|==
literal|0
operator|||
name|widgetItem
operator|->
name|isEmpty
argument_list|()
return|;
block|}
end_function
begin_comment
comment|/****************************************************************************** ** QToolBarAreaLayoutLine */
end_comment
begin_constructor
DECL|function|QToolBarAreaLayoutLine
name|QToolBarAreaLayoutLine
operator|::
name|QToolBarAreaLayoutLine
parameter_list|(
name|Qt
operator|::
name|Orientation
name|orientation
parameter_list|)
member_init_list|:
name|o
argument_list|(
name|orientation
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|sizeHint
name|QSize
name|QToolBarAreaLayoutLine
operator|::
name|sizeHint
parameter_list|()
specifier|const
block|{
name|int
name|a
init|=
literal|0
decl_stmt|,
name|b
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|toolBarItems
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
specifier|const
name|QToolBarAreaLayoutItem
modifier|&
name|item
init|=
name|toolBarItems
operator|.
name|at
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|item
operator|.
name|skip
argument_list|()
condition|)
continue|continue;
name|QSize
name|sh
init|=
name|item
operator|.
name|sizeHint
argument_list|()
decl_stmt|;
name|a
operator|+=
name|item
operator|.
name|preferredSize
operator|>
literal|0
condition|?
name|item
operator|.
name|preferredSize
else|:
name|pick
argument_list|(
name|o
argument_list|,
name|sh
argument_list|)
expr_stmt|;
name|b
operator|=
name|qMax
argument_list|(
name|b
argument_list|,
name|perp
argument_list|(
name|o
argument_list|,
name|sh
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QSize
name|result
decl_stmt|;
name|rpick
argument_list|(
name|o
argument_list|,
name|result
argument_list|)
operator|=
name|a
expr_stmt|;
name|rperp
argument_list|(
name|o
argument_list|,
name|result
argument_list|)
operator|=
name|b
expr_stmt|;
return|return
name|result
return|;
block|}
end_function
begin_function
DECL|function|minimumSize
name|QSize
name|QToolBarAreaLayoutLine
operator|::
name|minimumSize
parameter_list|()
specifier|const
block|{
name|int
name|a
init|=
literal|0
decl_stmt|,
name|b
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|toolBarItems
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
specifier|const
name|QToolBarAreaLayoutItem
modifier|&
name|item
init|=
name|toolBarItems
index|[
name|i
index|]
decl_stmt|;
if|if
condition|(
name|item
operator|.
name|skip
argument_list|()
condition|)
continue|continue;
name|QSize
name|ms
init|=
name|item
operator|.
name|minimumSize
argument_list|()
decl_stmt|;
name|a
operator|+=
name|pick
argument_list|(
name|o
argument_list|,
name|ms
argument_list|)
expr_stmt|;
name|b
operator|=
name|qMax
argument_list|(
name|b
argument_list|,
name|perp
argument_list|(
name|o
argument_list|,
name|ms
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QSize
name|result
decl_stmt|;
name|rpick
argument_list|(
name|o
argument_list|,
name|result
argument_list|)
operator|=
name|a
expr_stmt|;
name|rperp
argument_list|(
name|o
argument_list|,
name|result
argument_list|)
operator|=
name|b
expr_stmt|;
return|return
name|result
return|;
block|}
end_function
begin_function
DECL|function|fitLayout
name|void
name|QToolBarAreaLayoutLine
operator|::
name|fitLayout
parameter_list|()
block|{
name|int
name|last
init|=
operator|-
literal|1
decl_stmt|;
name|int
name|min
init|=
name|pick
argument_list|(
name|o
argument_list|,
name|minimumSize
argument_list|()
argument_list|)
decl_stmt|;
name|int
name|space
init|=
name|pick
argument_list|(
name|o
argument_list|,
name|rect
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
name|int
name|extra
init|=
name|qMax
argument_list|(
literal|0
argument_list|,
name|space
operator|-
name|min
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|toolBarItems
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|QToolBarAreaLayoutItem
modifier|&
name|item
init|=
name|toolBarItems
index|[
name|i
index|]
decl_stmt|;
if|if
condition|(
name|item
operator|.
name|skip
argument_list|()
condition|)
continue|continue;
if|if
condition|(
name|QToolBarLayout
modifier|*
name|tblayout
init|=
name|qobject_cast
argument_list|<
name|QToolBarLayout
operator|*
argument_list|>
argument_list|(
name|item
operator|.
name|widgetItem
operator|->
name|widget
argument_list|()
operator|->
name|layout
argument_list|()
argument_list|)
condition|)
name|tblayout
operator|->
name|checkUsePopupMenu
argument_list|()
expr_stmt|;
specifier|const
name|int
name|itemMin
init|=
name|pick
argument_list|(
name|o
argument_list|,
name|item
operator|.
name|minimumSize
argument_list|()
argument_list|)
decl_stmt|;
comment|//preferredSize is the default if it is set, otherwise, we take the sizehint
name|item
operator|.
name|size
operator|=
name|item
operator|.
name|preferredSize
operator|>
literal|0
condition|?
name|item
operator|.
name|preferredSize
else|:
name|pick
argument_list|(
name|o
argument_list|,
name|item
operator|.
name|sizeHint
argument_list|()
argument_list|)
expr_stmt|;
comment|//the extraspace is the space above the item minimum sizehint
specifier|const
name|int
name|extraSpace
init|=
name|qMin
argument_list|(
name|item
operator|.
name|size
operator|-
name|itemMin
argument_list|,
name|extra
argument_list|)
decl_stmt|;
name|item
operator|.
name|size
operator|=
name|itemMin
operator|+
name|extraSpace
expr_stmt|;
comment|//that is the real size
name|extra
operator|-=
name|extraSpace
expr_stmt|;
name|last
operator|=
name|i
expr_stmt|;
block|}
comment|// calculate the positions from the sizes
name|int
name|pos
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|toolBarItems
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|QToolBarAreaLayoutItem
modifier|&
name|item
init|=
name|toolBarItems
index|[
name|i
index|]
decl_stmt|;
if|if
condition|(
name|item
operator|.
name|skip
argument_list|()
condition|)
continue|continue;
name|item
operator|.
name|pos
operator|=
name|pos
expr_stmt|;
if|if
condition|(
name|i
operator|==
name|last
condition|)
comment|// stretch the last item to the end of the line
name|item
operator|.
name|size
operator|=
name|qMax
argument_list|(
literal|0
argument_list|,
name|pick
argument_list|(
name|o
argument_list|,
name|rect
operator|.
name|size
argument_list|()
argument_list|)
operator|-
name|item
operator|.
name|pos
argument_list|)
expr_stmt|;
name|pos
operator|+=
name|item
operator|.
name|size
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|skip
name|bool
name|QToolBarAreaLayoutLine
operator|::
name|skip
parameter_list|()
specifier|const
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|toolBarItems
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
if|if
condition|(
operator|!
name|toolBarItems
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|.
name|skip
argument_list|()
condition|)
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
end_function
begin_comment
comment|/****************************************************************************** ** QToolBarAreaLayoutInfo */
end_comment
begin_constructor
DECL|function|QToolBarAreaLayoutInfo
name|QToolBarAreaLayoutInfo
operator|::
name|QToolBarAreaLayoutInfo
parameter_list|(
name|QInternal
operator|::
name|DockPosition
name|pos
parameter_list|)
member_init_list|:
name|dockPos
argument_list|(
name|pos
argument_list|)
member_init_list|,
name|dirty
argument_list|(
literal|false
argument_list|)
block|{
switch|switch
condition|(
name|pos
condition|)
block|{
case|case
name|QInternal
operator|::
name|LeftDock
case|:
case|case
name|QInternal
operator|::
name|RightDock
case|:
name|o
operator|=
name|Qt
operator|::
name|Vertical
expr_stmt|;
break|break;
case|case
name|QInternal
operator|::
name|TopDock
case|:
case|case
name|QInternal
operator|::
name|BottomDock
case|:
name|o
operator|=
name|Qt
operator|::
name|Horizontal
expr_stmt|;
break|break;
default|default:
name|o
operator|=
name|Qt
operator|::
name|Horizontal
expr_stmt|;
break|break;
block|}
block|}
end_constructor
begin_function
DECL|function|sizeHint
name|QSize
name|QToolBarAreaLayoutInfo
operator|::
name|sizeHint
parameter_list|()
specifier|const
block|{
name|int
name|a
init|=
literal|0
decl_stmt|,
name|b
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|lines
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
specifier|const
name|QToolBarAreaLayoutLine
modifier|&
name|l
init|=
name|lines
operator|.
name|at
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|l
operator|.
name|skip
argument_list|()
condition|)
continue|continue;
name|QSize
name|hint
init|=
name|l
operator|.
name|sizeHint
argument_list|()
decl_stmt|;
name|a
operator|=
name|qMax
argument_list|(
name|a
argument_list|,
name|pick
argument_list|(
name|o
argument_list|,
name|hint
argument_list|)
argument_list|)
expr_stmt|;
name|b
operator|+=
name|perp
argument_list|(
name|o
argument_list|,
name|hint
argument_list|)
expr_stmt|;
block|}
name|QSize
name|result
decl_stmt|;
name|rpick
argument_list|(
name|o
argument_list|,
name|result
argument_list|)
operator|=
name|a
expr_stmt|;
name|rperp
argument_list|(
name|o
argument_list|,
name|result
argument_list|)
operator|=
name|b
expr_stmt|;
return|return
name|result
return|;
block|}
end_function
begin_function
DECL|function|minimumSize
name|QSize
name|QToolBarAreaLayoutInfo
operator|::
name|minimumSize
parameter_list|()
specifier|const
block|{
name|int
name|a
init|=
literal|0
decl_stmt|,
name|b
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|lines
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
specifier|const
name|QToolBarAreaLayoutLine
modifier|&
name|l
init|=
name|lines
operator|.
name|at
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|l
operator|.
name|skip
argument_list|()
condition|)
continue|continue;
name|QSize
name|m
init|=
name|l
operator|.
name|minimumSize
argument_list|()
decl_stmt|;
name|a
operator|=
name|qMax
argument_list|(
name|a
argument_list|,
name|pick
argument_list|(
name|o
argument_list|,
name|m
argument_list|)
argument_list|)
expr_stmt|;
name|b
operator|+=
name|perp
argument_list|(
name|o
argument_list|,
name|m
argument_list|)
expr_stmt|;
block|}
name|QSize
name|result
decl_stmt|;
name|rpick
argument_list|(
name|o
argument_list|,
name|result
argument_list|)
operator|=
name|a
expr_stmt|;
name|rperp
argument_list|(
name|o
argument_list|,
name|result
argument_list|)
operator|=
name|b
expr_stmt|;
return|return
name|result
return|;
block|}
end_function
begin_function
DECL|function|fitLayout
name|void
name|QToolBarAreaLayoutInfo
operator|::
name|fitLayout
parameter_list|()
block|{
name|dirty
operator|=
literal|false
expr_stmt|;
name|int
name|b
init|=
literal|0
decl_stmt|;
name|bool
name|reverse
init|=
name|dockPos
operator|==
name|QInternal
operator|::
name|RightDock
operator|||
name|dockPos
operator|==
name|QInternal
operator|::
name|BottomDock
decl_stmt|;
name|int
name|i
init|=
name|reverse
condition|?
name|lines
operator|.
name|count
argument_list|()
operator|-
literal|1
else|:
literal|0
decl_stmt|;
for|for
control|(
init|;
condition|;
control|)
block|{
if|if
condition|(
operator|(
name|reverse
operator|&&
name|i
operator|<
literal|0
operator|)
operator|||
operator|(
operator|!
name|reverse
operator|&&
name|i
operator|==
name|lines
operator|.
name|count
argument_list|()
operator|)
condition|)
break|break;
name|QToolBarAreaLayoutLine
modifier|&
name|l
init|=
name|lines
index|[
name|i
index|]
decl_stmt|;
if|if
condition|(
operator|!
name|l
operator|.
name|skip
argument_list|()
condition|)
block|{
if|if
condition|(
name|o
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
block|{
name|l
operator|.
name|rect
operator|.
name|setLeft
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|)
expr_stmt|;
name|l
operator|.
name|rect
operator|.
name|setRight
argument_list|(
name|rect
operator|.
name|right
argument_list|()
argument_list|)
expr_stmt|;
name|l
operator|.
name|rect
operator|.
name|setTop
argument_list|(
name|b
operator|+
name|rect
operator|.
name|top
argument_list|()
argument_list|)
expr_stmt|;
name|b
operator|+=
name|l
operator|.
name|sizeHint
argument_list|()
operator|.
name|height
argument_list|()
expr_stmt|;
name|l
operator|.
name|rect
operator|.
name|setBottom
argument_list|(
name|b
operator|-
literal|1
operator|+
name|rect
operator|.
name|top
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|l
operator|.
name|rect
operator|.
name|setTop
argument_list|(
name|rect
operator|.
name|top
argument_list|()
argument_list|)
expr_stmt|;
name|l
operator|.
name|rect
operator|.
name|setBottom
argument_list|(
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
name|l
operator|.
name|rect
operator|.
name|setLeft
argument_list|(
name|b
operator|+
name|rect
operator|.
name|left
argument_list|()
argument_list|)
expr_stmt|;
name|b
operator|+=
name|l
operator|.
name|sizeHint
argument_list|()
operator|.
name|width
argument_list|()
expr_stmt|;
name|l
operator|.
name|rect
operator|.
name|setRight
argument_list|(
name|b
operator|-
literal|1
operator|+
name|rect
operator|.
name|left
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|l
operator|.
name|fitLayout
argument_list|()
expr_stmt|;
block|}
name|i
operator|+=
name|reverse
condition|?
operator|-
literal|1
else|:
literal|1
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|insertToolBar
name|QLayoutItem
modifier|*
name|QToolBarAreaLayoutInfo
operator|::
name|insertToolBar
parameter_list|(
name|QToolBar
modifier|*
name|before
parameter_list|,
name|QToolBar
modifier|*
name|toolBar
parameter_list|)
block|{
name|toolBar
operator|->
name|setOrientation
argument_list|(
name|o
argument_list|)
expr_stmt|;
name|QLayoutItem
modifier|*
name|item
init|=
operator|new
name|QWidgetItemV2
argument_list|(
name|toolBar
argument_list|)
decl_stmt|;
name|insertItem
argument_list|(
name|before
argument_list|,
name|item
argument_list|)
expr_stmt|;
return|return
name|item
return|;
block|}
end_function
begin_function
DECL|function|insertItem
name|void
name|QToolBarAreaLayoutInfo
operator|::
name|insertItem
parameter_list|(
name|QToolBar
modifier|*
name|before
parameter_list|,
name|QLayoutItem
modifier|*
name|item
parameter_list|)
block|{
if|if
condition|(
name|before
operator|==
literal|0
condition|)
block|{
if|if
condition|(
name|lines
operator|.
name|isEmpty
argument_list|()
condition|)
name|lines
operator|.
name|append
argument_list|(
name|QToolBarAreaLayoutLine
argument_list|(
name|o
argument_list|)
argument_list|)
expr_stmt|;
name|lines
operator|.
name|last
argument_list|()
operator|.
name|toolBarItems
operator|.
name|append
argument_list|(
name|item
argument_list|)
expr_stmt|;
return|return;
block|}
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|lines
operator|.
name|count
argument_list|()
condition|;
operator|++
name|j
control|)
block|{
name|QToolBarAreaLayoutLine
modifier|&
name|line
init|=
name|lines
index|[
name|j
index|]
decl_stmt|;
for|for
control|(
name|int
name|k
init|=
literal|0
init|;
name|k
operator|<
name|line
operator|.
name|toolBarItems
operator|.
name|count
argument_list|()
condition|;
operator|++
name|k
control|)
block|{
if|if
condition|(
name|line
operator|.
name|toolBarItems
operator|.
name|at
argument_list|(
name|k
argument_list|)
operator|.
name|widgetItem
operator|->
name|widget
argument_list|()
operator|==
name|before
condition|)
block|{
name|line
operator|.
name|toolBarItems
operator|.
name|insert
argument_list|(
name|k
argument_list|,
name|item
argument_list|)
expr_stmt|;
return|return;
block|}
block|}
block|}
block|}
end_function
begin_function
DECL|function|removeToolBar
name|void
name|QToolBarAreaLayoutInfo
operator|::
name|removeToolBar
parameter_list|(
name|QToolBar
modifier|*
name|toolBar
parameter_list|)
block|{
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|lines
operator|.
name|count
argument_list|()
condition|;
operator|++
name|j
control|)
block|{
name|QToolBarAreaLayoutLine
modifier|&
name|line
init|=
name|lines
index|[
name|j
index|]
decl_stmt|;
for|for
control|(
name|int
name|k
init|=
literal|0
init|;
name|k
operator|<
name|line
operator|.
name|toolBarItems
operator|.
name|count
argument_list|()
condition|;
operator|++
name|k
control|)
block|{
name|QToolBarAreaLayoutItem
modifier|&
name|item
init|=
name|line
operator|.
name|toolBarItems
index|[
name|k
index|]
decl_stmt|;
if|if
condition|(
name|item
operator|.
name|widgetItem
operator|->
name|widget
argument_list|()
operator|==
name|toolBar
condition|)
block|{
operator|delete
name|item
operator|.
name|widgetItem
expr_stmt|;
name|item
operator|.
name|widgetItem
operator|=
literal|0
expr_stmt|;
name|line
operator|.
name|toolBarItems
operator|.
name|removeAt
argument_list|(
name|k
argument_list|)
expr_stmt|;
if|if
condition|(
name|line
operator|.
name|toolBarItems
operator|.
name|isEmpty
argument_list|()
operator|&&
name|j
operator|<
name|lines
operator|.
name|count
argument_list|()
operator|-
literal|1
condition|)
name|lines
operator|.
name|removeAt
argument_list|(
name|j
argument_list|)
expr_stmt|;
return|return;
block|}
block|}
block|}
block|}
end_function
begin_function
DECL|function|insertToolBarBreak
name|void
name|QToolBarAreaLayoutInfo
operator|::
name|insertToolBarBreak
parameter_list|(
name|QToolBar
modifier|*
name|before
parameter_list|)
block|{
if|if
condition|(
name|before
operator|==
literal|0
condition|)
block|{
if|if
condition|(
operator|!
name|lines
operator|.
name|isEmpty
argument_list|()
operator|&&
name|lines
operator|.
name|last
argument_list|()
operator|.
name|toolBarItems
operator|.
name|isEmpty
argument_list|()
condition|)
return|return;
name|lines
operator|.
name|append
argument_list|(
name|QToolBarAreaLayoutLine
argument_list|(
name|o
argument_list|)
argument_list|)
expr_stmt|;
return|return;
block|}
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|lines
operator|.
name|count
argument_list|()
condition|;
operator|++
name|j
control|)
block|{
name|QToolBarAreaLayoutLine
modifier|&
name|line
init|=
name|lines
index|[
name|j
index|]
decl_stmt|;
for|for
control|(
name|int
name|k
init|=
literal|0
init|;
name|k
operator|<
name|line
operator|.
name|toolBarItems
operator|.
name|count
argument_list|()
condition|;
operator|++
name|k
control|)
block|{
if|if
condition|(
name|line
operator|.
name|toolBarItems
operator|.
name|at
argument_list|(
name|k
argument_list|)
operator|.
name|widgetItem
operator|->
name|widget
argument_list|()
operator|==
name|before
condition|)
block|{
if|if
condition|(
name|k
operator|==
literal|0
condition|)
return|return;
name|QToolBarAreaLayoutLine
name|newLine
argument_list|(
name|o
argument_list|)
decl_stmt|;
name|newLine
operator|.
name|toolBarItems
operator|=
name|line
operator|.
name|toolBarItems
operator|.
name|mid
argument_list|(
name|k
argument_list|)
expr_stmt|;
name|line
operator|.
name|toolBarItems
operator|=
name|line
operator|.
name|toolBarItems
operator|.
name|mid
argument_list|(
literal|0
argument_list|,
name|k
argument_list|)
expr_stmt|;
name|lines
operator|.
name|insert
argument_list|(
name|j
operator|+
literal|1
argument_list|,
name|newLine
argument_list|)
expr_stmt|;
return|return;
block|}
block|}
block|}
block|}
end_function
begin_function
DECL|function|removeToolBarBreak
name|void
name|QToolBarAreaLayoutInfo
operator|::
name|removeToolBarBreak
parameter_list|(
name|QToolBar
modifier|*
name|before
parameter_list|)
block|{
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|lines
operator|.
name|count
argument_list|()
condition|;
operator|++
name|j
control|)
block|{
specifier|const
name|QToolBarAreaLayoutLine
modifier|&
name|line
init|=
name|lines
operator|.
name|at
argument_list|(
name|j
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|k
init|=
literal|0
init|;
name|k
operator|<
name|line
operator|.
name|toolBarItems
operator|.
name|count
argument_list|()
condition|;
operator|++
name|k
control|)
block|{
if|if
condition|(
name|line
operator|.
name|toolBarItems
operator|.
name|at
argument_list|(
name|k
argument_list|)
operator|.
name|widgetItem
operator|->
name|widget
argument_list|()
operator|==
name|before
condition|)
block|{
if|if
condition|(
name|k
operator|!=
literal|0
condition|)
return|return;
if|if
condition|(
name|j
operator|==
literal|0
condition|)
return|return;
name|lines
index|[
name|j
operator|-
literal|1
index|]
operator|.
name|toolBarItems
operator|+=
name|lines
index|[
name|j
index|]
operator|.
name|toolBarItems
expr_stmt|;
name|lines
operator|.
name|removeAt
argument_list|(
name|j
argument_list|)
expr_stmt|;
return|return;
block|}
block|}
block|}
block|}
end_function
begin_function
DECL|function|moveToolBar
name|void
name|QToolBarAreaLayoutInfo
operator|::
name|moveToolBar
parameter_list|(
name|QToolBar
modifier|*
name|toolbar
parameter_list|,
name|int
name|pos
parameter_list|)
block|{
if|if
condition|(
name|dirty
condition|)
name|fitLayout
argument_list|()
expr_stmt|;
name|dirty
operator|=
literal|true
expr_stmt|;
if|if
condition|(
name|o
operator|==
name|Qt
operator|::
name|Vertical
condition|)
name|pos
operator|-=
name|rect
operator|.
name|top
argument_list|()
expr_stmt|;
comment|//here we actually update the preferredSize for the line containing the toolbar so that we move it
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|lines
operator|.
name|count
argument_list|()
condition|;
operator|++
name|j
control|)
block|{
name|QToolBarAreaLayoutLine
modifier|&
name|line
init|=
name|lines
index|[
name|j
index|]
decl_stmt|;
name|int
name|previousIndex
init|=
operator|-
literal|1
decl_stmt|;
name|int
name|minPos
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|k
init|=
literal|0
init|;
name|k
operator|<
name|line
operator|.
name|toolBarItems
operator|.
name|count
argument_list|()
condition|;
operator|++
name|k
control|)
block|{
name|QToolBarAreaLayoutItem
modifier|&
name|current
init|=
name|line
operator|.
name|toolBarItems
index|[
name|k
index|]
decl_stmt|;
if|if
condition|(
name|current
operator|.
name|widgetItem
operator|->
name|widget
argument_list|()
operator|==
name|toolbar
condition|)
block|{
name|int
name|newPos
init|=
name|current
operator|.
name|pos
decl_stmt|;
if|if
condition|(
name|previousIndex
operator|>=
literal|0
condition|)
block|{
name|QToolBarAreaLayoutItem
modifier|&
name|previous
init|=
name|line
operator|.
name|toolBarItems
index|[
name|previousIndex
index|]
decl_stmt|;
if|if
condition|(
name|pos
operator|<
name|current
operator|.
name|pos
condition|)
block|{
name|newPos
operator|=
name|qMax
argument_list|(
name|pos
argument_list|,
name|minPos
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|//we check the max value for the position (until everything at the right is "compressed")
name|int
name|maxPos
init|=
name|pick
argument_list|(
name|o
argument_list|,
name|rect
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|l
init|=
name|k
init|;
name|l
operator|<
name|line
operator|.
name|toolBarItems
operator|.
name|count
argument_list|()
condition|;
operator|++
name|l
control|)
block|{
specifier|const
name|QToolBarAreaLayoutItem
modifier|&
name|item
init|=
name|line
operator|.
name|toolBarItems
operator|.
name|at
argument_list|(
name|l
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|item
operator|.
name|skip
argument_list|()
condition|)
block|{
name|maxPos
operator|-=
name|pick
argument_list|(
name|o
argument_list|,
name|item
operator|.
name|minimumSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|newPos
operator|=
name|qMin
argument_list|(
name|pos
argument_list|,
name|maxPos
argument_list|)
expr_stmt|;
block|}
comment|//extra is the number of pixels to add to the previous toolbar
name|int
name|extra
init|=
name|newPos
operator|-
name|current
operator|.
name|pos
decl_stmt|;
comment|//we check if the previous is near its size hint
comment|//in which case we try to stick to it
specifier|const
name|int
name|diff
init|=
name|pick
argument_list|(
name|o
argument_list|,
name|previous
operator|.
name|sizeHint
argument_list|()
argument_list|)
operator|-
operator|(
name|previous
operator|.
name|size
operator|+
name|extra
operator|)
decl_stmt|;
if|if
condition|(
name|qAbs
argument_list|(
name|diff
argument_list|)
operator|<
name|QApplication
operator|::
name|startDragDistance
argument_list|()
condition|)
block|{
comment|//we stick to the default place and size
name|extra
operator|+=
name|diff
expr_stmt|;
block|}
comment|//update for the current item
name|current
operator|.
name|extendSize
argument_list|(
name|line
operator|.
name|o
argument_list|,
operator|-
name|extra
argument_list|)
expr_stmt|;
if|if
condition|(
name|extra
operator|>=
literal|0
condition|)
block|{
name|previous
operator|.
name|extendSize
argument_list|(
name|line
operator|.
name|o
argument_list|,
name|extra
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|//we need to push the toolbars on the left starting with previous
name|extra
operator|=
operator|-
name|extra
expr_stmt|;
comment|// we just need to know the number of pixels
comment|///at this point we need to get extra pixels from the toolbars at the left
for|for
control|(
name|int
name|l
init|=
name|previousIndex
init|;
name|l
operator|>=
literal|0
condition|;
operator|--
name|l
control|)
block|{
name|QToolBarAreaLayoutItem
modifier|&
name|item
init|=
name|line
operator|.
name|toolBarItems
index|[
name|l
index|]
decl_stmt|;
if|if
condition|(
operator|!
name|item
operator|.
name|skip
argument_list|()
condition|)
block|{
specifier|const
name|int
name|minPreferredSize
init|=
name|pick
argument_list|(
name|o
argument_list|,
name|item
operator|.
name|minimumSize
argument_list|()
argument_list|)
decl_stmt|;
specifier|const
name|int
name|margin
init|=
name|item
operator|.
name|size
operator|-
name|minPreferredSize
decl_stmt|;
if|if
condition|(
name|margin
operator|<
name|extra
condition|)
block|{
name|item
operator|.
name|resize
argument_list|(
name|line
operator|.
name|o
argument_list|,
name|minPreferredSize
argument_list|)
expr_stmt|;
name|extra
operator|-=
name|margin
expr_stmt|;
block|}
else|else
block|{
name|item
operator|.
name|extendSize
argument_list|(
name|line
operator|.
name|o
argument_list|,
operator|-
name|extra
argument_list|)
expr_stmt|;
name|extra
operator|=
literal|0
expr_stmt|;
block|}
block|}
block|}
name|Q_ASSERT
argument_list|(
name|extra
operator|==
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
comment|//the item is the first one, it should be at position 0
block|}
return|return;
block|}
elseif|else
if|if
condition|(
operator|!
name|current
operator|.
name|skip
argument_list|()
condition|)
block|{
name|previousIndex
operator|=
name|k
expr_stmt|;
name|minPos
operator|+=
name|pick
argument_list|(
name|o
argument_list|,
name|current
operator|.
name|minimumSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_function
begin_function
DECL|function|gapIndex
name|QList
argument_list|<
name|int
argument_list|>
name|QToolBarAreaLayoutInfo
operator|::
name|gapIndex
parameter_list|(
specifier|const
name|QPoint
modifier|&
name|pos
parameter_list|,
name|int
modifier|*
name|minDistance
parameter_list|)
specifier|const
block|{
if|if
condition|(
name|rect
operator|.
name|contains
argument_list|(
name|pos
argument_list|)
condition|)
block|{
comment|//<pos> is in QToolBarAreaLayout coordinates.
comment|//<item.pos> is in local dockarea coordinates (see ~20 lines below)
comment|// Since we're comparing p with item.pos, we put them in the same coordinate system.
specifier|const
name|int
name|p
init|=
name|pick
argument_list|(
name|o
argument_list|,
name|pos
operator|-
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|lines
operator|.
name|count
argument_list|()
condition|;
operator|++
name|j
control|)
block|{
specifier|const
name|QToolBarAreaLayoutLine
modifier|&
name|line
init|=
name|lines
operator|.
name|at
argument_list|(
name|j
argument_list|)
decl_stmt|;
if|if
condition|(
name|line
operator|.
name|skip
argument_list|()
condition|)
continue|continue;
if|if
condition|(
operator|!
name|line
operator|.
name|rect
operator|.
name|contains
argument_list|(
name|pos
argument_list|)
condition|)
continue|continue;
name|int
name|k
init|=
literal|0
decl_stmt|;
for|for
control|(
init|;
name|k
operator|<
name|line
operator|.
name|toolBarItems
operator|.
name|count
argument_list|()
condition|;
operator|++
name|k
control|)
block|{
specifier|const
name|QToolBarAreaLayoutItem
modifier|&
name|item
init|=
name|line
operator|.
name|toolBarItems
operator|.
name|at
argument_list|(
name|k
argument_list|)
decl_stmt|;
if|if
condition|(
name|item
operator|.
name|skip
argument_list|()
condition|)
continue|continue;
name|int
name|size
init|=
name|qMin
argument_list|(
name|item
operator|.
name|size
argument_list|,
name|pick
argument_list|(
name|o
argument_list|,
name|item
operator|.
name|sizeHint
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|p
operator|>
name|item
operator|.
name|pos
operator|+
name|size
condition|)
continue|continue;
if|if
condition|(
name|p
operator|>
name|item
operator|.
name|pos
operator|+
name|size
operator|/
literal|2
condition|)
operator|++
name|k
expr_stmt|;
break|break;
block|}
name|QList
argument_list|<
name|int
argument_list|>
name|result
decl_stmt|;
name|result
operator|<<
name|j
operator|<<
name|k
expr_stmt|;
operator|*
name|minDistance
operator|=
literal|0
expr_stmt|;
comment|//we found a perfect match
return|return
name|result
return|;
block|}
block|}
else|else
block|{
specifier|const
name|int
name|dist
init|=
name|distance
argument_list|(
name|pos
argument_list|)
decl_stmt|;
comment|//it will only return a path if the minDistance is higher than the current distance
if|if
condition|(
name|dist
operator|>=
literal|0
operator|&&
operator|*
name|minDistance
operator|>
name|dist
condition|)
block|{
operator|*
name|minDistance
operator|=
name|dist
expr_stmt|;
name|QList
argument_list|<
name|int
argument_list|>
name|result
decl_stmt|;
name|result
operator|<<
name|lines
operator|.
name|count
argument_list|()
operator|<<
literal|0
expr_stmt|;
return|return
name|result
return|;
block|}
block|}
return|return
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|insertGap
name|bool
name|QToolBarAreaLayoutInfo
operator|::
name|insertGap
parameter_list|(
specifier|const
name|QList
argument_list|<
name|int
argument_list|>
modifier|&
name|path
parameter_list|,
name|QLayoutItem
modifier|*
name|item
parameter_list|)
block|{
name|Q_ASSERT
argument_list|(
name|path
operator|.
name|count
argument_list|()
operator|==
literal|2
argument_list|)
expr_stmt|;
name|int
name|j
init|=
name|path
operator|.
name|first
argument_list|()
decl_stmt|;
if|if
condition|(
name|j
operator|==
name|lines
operator|.
name|count
argument_list|()
condition|)
name|lines
operator|.
name|append
argument_list|(
name|QToolBarAreaLayoutLine
argument_list|(
name|o
argument_list|)
argument_list|)
expr_stmt|;
name|QToolBarAreaLayoutLine
modifier|&
name|line
init|=
name|lines
index|[
name|j
index|]
decl_stmt|;
specifier|const
name|int
name|k
init|=
name|path
operator|.
name|at
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|QToolBarAreaLayoutItem
name|gap_item
decl_stmt|;
name|gap_item
operator|.
name|gap
operator|=
literal|true
expr_stmt|;
name|gap_item
operator|.
name|widgetItem
operator|=
name|item
expr_stmt|;
comment|//update the previous item's preferred size
for|for
control|(
name|int
name|p
init|=
name|k
operator|-
literal|1
init|;
name|p
operator|>=
literal|0
condition|;
operator|--
name|p
control|)
block|{
name|QToolBarAreaLayoutItem
modifier|&
name|previous
init|=
name|line
operator|.
name|toolBarItems
index|[
name|p
index|]
decl_stmt|;
if|if
condition|(
operator|!
name|previous
operator|.
name|skip
argument_list|()
condition|)
block|{
comment|//we found the previous one
name|int
name|previousSizeHint
init|=
name|pick
argument_list|(
name|line
operator|.
name|o
argument_list|,
name|previous
operator|.
name|sizeHint
argument_list|()
argument_list|)
decl_stmt|;
name|int
name|previousExtraSpace
init|=
name|previous
operator|.
name|size
operator|-
name|previousSizeHint
decl_stmt|;
if|if
condition|(
name|previousExtraSpace
operator|>
literal|0
condition|)
block|{
comment|//in this case we reset the space
name|previous
operator|.
name|preferredSize
operator|=
operator|-
literal|1
expr_stmt|;
name|previous
operator|.
name|size
operator|=
name|previousSizeHint
expr_stmt|;
name|gap_item
operator|.
name|resize
argument_list|(
name|o
argument_list|,
name|previousExtraSpace
argument_list|)
expr_stmt|;
block|}
break|break;
block|}
block|}
name|line
operator|.
name|toolBarItems
operator|.
name|insert
argument_list|(
name|k
argument_list|,
name|gap_item
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_function
DECL|function|clear
name|void
name|QToolBarAreaLayoutInfo
operator|::
name|clear
parameter_list|()
block|{
name|lines
operator|.
name|clear
argument_list|()
expr_stmt|;
name|rect
operator|=
name|QRect
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|itemRect
name|QRect
name|QToolBarAreaLayoutInfo
operator|::
name|itemRect
parameter_list|(
specifier|const
name|QList
argument_list|<
name|int
argument_list|>
modifier|&
name|path
parameter_list|)
specifier|const
block|{
name|Q_ASSERT
argument_list|(
name|path
operator|.
name|count
argument_list|()
operator|==
literal|2
argument_list|)
expr_stmt|;
name|int
name|j
init|=
name|path
operator|.
name|at
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|int
name|k
init|=
name|path
operator|.
name|at
argument_list|(
literal|1
argument_list|)
decl_stmt|;
specifier|const
name|QToolBarAreaLayoutLine
modifier|&
name|line
init|=
name|lines
operator|.
name|at
argument_list|(
name|j
argument_list|)
decl_stmt|;
specifier|const
name|QToolBarAreaLayoutItem
modifier|&
name|item
init|=
name|line
operator|.
name|toolBarItems
operator|.
name|at
argument_list|(
name|k
argument_list|)
decl_stmt|;
name|QRect
name|result
init|=
name|line
operator|.
name|rect
decl_stmt|;
if|if
condition|(
name|o
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
block|{
name|result
operator|.
name|setLeft
argument_list|(
name|item
operator|.
name|pos
operator|+
name|line
operator|.
name|rect
operator|.
name|left
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|.
name|setWidth
argument_list|(
name|item
operator|.
name|size
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|setTop
argument_list|(
name|item
operator|.
name|pos
operator|+
name|line
operator|.
name|rect
operator|.
name|top
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|.
name|setHeight
argument_list|(
name|item
operator|.
name|size
argument_list|)
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
end_function
begin_function
DECL|function|distance
name|int
name|QToolBarAreaLayoutInfo
operator|::
name|distance
parameter_list|(
specifier|const
name|QPoint
modifier|&
name|pos
parameter_list|)
specifier|const
block|{
switch|switch
condition|(
name|dockPos
condition|)
block|{
case|case
name|QInternal
operator|::
name|LeftDock
case|:
if|if
condition|(
name|pos
operator|.
name|y
argument_list|()
operator|<
name|rect
operator|.
name|bottom
argument_list|()
condition|)
return|return
name|pos
operator|.
name|x
argument_list|()
operator|-
name|rect
operator|.
name|right
argument_list|()
return|;
case|case
name|QInternal
operator|::
name|RightDock
case|:
if|if
condition|(
name|pos
operator|.
name|y
argument_list|()
operator|<
name|rect
operator|.
name|bottom
argument_list|()
condition|)
return|return
name|rect
operator|.
name|left
argument_list|()
operator|-
name|pos
operator|.
name|x
argument_list|()
return|;
case|case
name|QInternal
operator|::
name|TopDock
case|:
if|if
condition|(
name|pos
operator|.
name|x
argument_list|()
operator|<
name|rect
operator|.
name|right
argument_list|()
condition|)
return|return
name|pos
operator|.
name|y
argument_list|()
operator|-
name|rect
operator|.
name|bottom
argument_list|()
return|;
case|case
name|QInternal
operator|::
name|BottomDock
case|:
if|if
condition|(
name|pos
operator|.
name|x
argument_list|()
operator|<
name|rect
operator|.
name|right
argument_list|()
condition|)
return|return
name|rect
operator|.
name|top
argument_list|()
operator|-
name|pos
operator|.
name|y
argument_list|()
return|;
default|default:
break|break;
block|}
return|return
operator|-
literal|1
return|;
block|}
end_function
begin_comment
comment|/****************************************************************************** ** QToolBarAreaLayout */
end_comment
begin_constructor
DECL|function|QToolBarAreaLayout
name|QToolBarAreaLayout
operator|::
name|QToolBarAreaLayout
parameter_list|(
specifier|const
name|QMainWindow
modifier|*
name|win
parameter_list|)
member_init_list|:
name|mainWindow
argument_list|(
name|win
argument_list|)
member_init_list|,
name|visible
argument_list|(
literal|true
argument_list|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|QInternal
operator|::
name|DockCount
condition|;
operator|++
name|i
control|)
block|{
name|QInternal
operator|::
name|DockPosition
name|pos
init|=
cast|static_cast
argument_list|<
name|QInternal
operator|::
name|DockPosition
argument_list|>
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|docks
index|[
name|i
index|]
operator|=
name|QToolBarAreaLayoutInfo
argument_list|(
name|pos
argument_list|)
expr_stmt|;
block|}
block|}
end_constructor
begin_function
DECL|function|fitLayout
name|QRect
name|QToolBarAreaLayout
operator|::
name|fitLayout
parameter_list|()
block|{
if|if
condition|(
operator|!
name|visible
condition|)
return|return
name|rect
return|;
name|QSize
name|left_hint
init|=
name|docks
index|[
name|QInternal
operator|::
name|LeftDock
index|]
operator|.
name|sizeHint
argument_list|()
decl_stmt|;
name|QSize
name|right_hint
init|=
name|docks
index|[
name|QInternal
operator|::
name|RightDock
index|]
operator|.
name|sizeHint
argument_list|()
decl_stmt|;
name|QSize
name|top_hint
init|=
name|docks
index|[
name|QInternal
operator|::
name|TopDock
index|]
operator|.
name|sizeHint
argument_list|()
decl_stmt|;
name|QSize
name|bottom_hint
init|=
name|docks
index|[
name|QInternal
operator|::
name|BottomDock
index|]
operator|.
name|sizeHint
argument_list|()
decl_stmt|;
name|QRect
name|center
init|=
name|rect
operator|.
name|adjusted
argument_list|(
name|left_hint
operator|.
name|width
argument_list|()
argument_list|,
name|top_hint
operator|.
name|height
argument_list|()
argument_list|,
operator|-
name|right_hint
operator|.
name|width
argument_list|()
argument_list|,
operator|-
name|bottom_hint
operator|.
name|height
argument_list|()
argument_list|)
decl_stmt|;
name|docks
index|[
name|QInternal
operator|::
name|TopDock
index|]
operator|.
name|rect
operator|=
name|QRect
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|rect
operator|.
name|width
argument_list|()
argument_list|,
name|top_hint
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
name|docks
index|[
name|QInternal
operator|::
name|LeftDock
index|]
operator|.
name|rect
operator|=
name|QRect
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|center
operator|.
name|top
argument_list|()
argument_list|,
name|left_hint
operator|.
name|width
argument_list|()
argument_list|,
name|center
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
name|docks
index|[
name|QInternal
operator|::
name|RightDock
index|]
operator|.
name|rect
operator|=
name|QRect
argument_list|(
name|center
operator|.
name|right
argument_list|()
operator|+
literal|1
argument_list|,
name|center
operator|.
name|top
argument_list|()
argument_list|,
name|right_hint
operator|.
name|width
argument_list|()
argument_list|,
name|center
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
name|docks
index|[
name|QInternal
operator|::
name|BottomDock
index|]
operator|.
name|rect
operator|=
name|QRect
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|center
operator|.
name|bottom
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|width
argument_list|()
argument_list|,
name|bottom_hint
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
name|docks
index|[
name|QInternal
operator|::
name|TopDock
index|]
operator|.
name|fitLayout
argument_list|()
expr_stmt|;
name|docks
index|[
name|QInternal
operator|::
name|LeftDock
index|]
operator|.
name|fitLayout
argument_list|()
expr_stmt|;
name|docks
index|[
name|QInternal
operator|::
name|RightDock
index|]
operator|.
name|fitLayout
argument_list|()
expr_stmt|;
name|docks
index|[
name|QInternal
operator|::
name|BottomDock
index|]
operator|.
name|fitLayout
argument_list|()
expr_stmt|;
return|return
name|center
return|;
block|}
end_function
begin_function
DECL|function|minimumSize
name|QSize
name|QToolBarAreaLayout
operator|::
name|minimumSize
parameter_list|(
specifier|const
name|QSize
modifier|&
name|centerMin
parameter_list|)
specifier|const
block|{
if|if
condition|(
operator|!
name|visible
condition|)
return|return
name|centerMin
return|;
name|QSize
name|result
init|=
name|centerMin
decl_stmt|;
name|QSize
name|left_min
init|=
name|docks
index|[
name|QInternal
operator|::
name|LeftDock
index|]
operator|.
name|minimumSize
argument_list|()
decl_stmt|;
name|QSize
name|right_min
init|=
name|docks
index|[
name|QInternal
operator|::
name|RightDock
index|]
operator|.
name|minimumSize
argument_list|()
decl_stmt|;
name|QSize
name|top_min
init|=
name|docks
index|[
name|QInternal
operator|::
name|TopDock
index|]
operator|.
name|minimumSize
argument_list|()
decl_stmt|;
name|QSize
name|bottom_min
init|=
name|docks
index|[
name|QInternal
operator|::
name|BottomDock
index|]
operator|.
name|minimumSize
argument_list|()
decl_stmt|;
name|result
operator|.
name|setWidth
argument_list|(
name|qMax
argument_list|(
name|top_min
operator|.
name|width
argument_list|()
argument_list|,
name|result
operator|.
name|width
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|result
operator|.
name|setWidth
argument_list|(
name|qMax
argument_list|(
name|bottom_min
operator|.
name|width
argument_list|()
argument_list|,
name|result
operator|.
name|width
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|result
operator|.
name|setHeight
argument_list|(
name|qMax
argument_list|(
name|left_min
operator|.
name|height
argument_list|()
argument_list|,
name|result
operator|.
name|height
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|result
operator|.
name|setHeight
argument_list|(
name|qMax
argument_list|(
name|right_min
operator|.
name|height
argument_list|()
argument_list|,
name|result
operator|.
name|height
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|result
operator|.
name|rwidth
argument_list|()
operator|+=
name|left_min
operator|.
name|width
argument_list|()
operator|+
name|right_min
operator|.
name|width
argument_list|()
expr_stmt|;
name|result
operator|.
name|rheight
argument_list|()
operator|+=
name|top_min
operator|.
name|height
argument_list|()
operator|+
name|bottom_min
operator|.
name|height
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
end_function
begin_function
DECL|function|sizeHint
name|QSize
name|QToolBarAreaLayout
operator|::
name|sizeHint
parameter_list|(
specifier|const
name|QSize
modifier|&
name|centerHint
parameter_list|)
specifier|const
block|{
if|if
condition|(
operator|!
name|visible
condition|)
return|return
name|centerHint
return|;
name|QSize
name|result
init|=
name|centerHint
decl_stmt|;
name|QSize
name|left_hint
init|=
name|docks
index|[
name|QInternal
operator|::
name|LeftDock
index|]
operator|.
name|sizeHint
argument_list|()
decl_stmt|;
name|QSize
name|right_hint
init|=
name|docks
index|[
name|QInternal
operator|::
name|RightDock
index|]
operator|.
name|sizeHint
argument_list|()
decl_stmt|;
name|QSize
name|top_hint
init|=
name|docks
index|[
name|QInternal
operator|::
name|TopDock
index|]
operator|.
name|sizeHint
argument_list|()
decl_stmt|;
name|QSize
name|bottom_hint
init|=
name|docks
index|[
name|QInternal
operator|::
name|BottomDock
index|]
operator|.
name|sizeHint
argument_list|()
decl_stmt|;
name|result
operator|.
name|setWidth
argument_list|(
name|qMax
argument_list|(
name|top_hint
operator|.
name|width
argument_list|()
argument_list|,
name|result
operator|.
name|width
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|result
operator|.
name|setWidth
argument_list|(
name|qMax
argument_list|(
name|bottom_hint
operator|.
name|width
argument_list|()
argument_list|,
name|result
operator|.
name|width
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|result
operator|.
name|setHeight
argument_list|(
name|qMax
argument_list|(
name|left_hint
operator|.
name|height
argument_list|()
argument_list|,
name|result
operator|.
name|height
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|result
operator|.
name|setHeight
argument_list|(
name|qMax
argument_list|(
name|right_hint
operator|.
name|height
argument_list|()
argument_list|,
name|result
operator|.
name|height
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|result
operator|.
name|rwidth
argument_list|()
operator|+=
name|left_hint
operator|.
name|width
argument_list|()
operator|+
name|right_hint
operator|.
name|width
argument_list|()
expr_stmt|;
name|result
operator|.
name|rheight
argument_list|()
operator|+=
name|top_hint
operator|.
name|height
argument_list|()
operator|+
name|bottom_hint
operator|.
name|height
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
end_function
begin_function
DECL|function|rectHint
name|QRect
name|QToolBarAreaLayout
operator|::
name|rectHint
parameter_list|(
specifier|const
name|QRect
modifier|&
name|r
parameter_list|)
specifier|const
block|{
name|int
name|coef
init|=
name|visible
condition|?
literal|1
else|:
operator|-
literal|1
decl_stmt|;
name|QRect
name|result
init|=
name|r
decl_stmt|;
name|QSize
name|left_hint
init|=
name|docks
index|[
name|QInternal
operator|::
name|LeftDock
index|]
operator|.
name|sizeHint
argument_list|()
decl_stmt|;
name|QSize
name|right_hint
init|=
name|docks
index|[
name|QInternal
operator|::
name|RightDock
index|]
operator|.
name|sizeHint
argument_list|()
decl_stmt|;
name|QSize
name|top_hint
init|=
name|docks
index|[
name|QInternal
operator|::
name|TopDock
index|]
operator|.
name|sizeHint
argument_list|()
decl_stmt|;
name|QSize
name|bottom_hint
init|=
name|docks
index|[
name|QInternal
operator|::
name|BottomDock
index|]
operator|.
name|sizeHint
argument_list|()
decl_stmt|;
name|result
operator|.
name|adjust
argument_list|(
operator|-
name|left_hint
operator|.
name|width
argument_list|()
operator|*
name|coef
argument_list|,
operator|-
name|top_hint
operator|.
name|height
argument_list|()
operator|*
name|coef
argument_list|,
name|right_hint
operator|.
name|width
argument_list|()
operator|*
name|coef
argument_list|,
name|bottom_hint
operator|.
name|height
argument_list|()
operator|*
name|coef
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
end_function
begin_function
DECL|function|itemAt
name|QLayoutItem
modifier|*
name|QToolBarAreaLayout
operator|::
name|itemAt
parameter_list|(
name|int
modifier|*
name|x
parameter_list|,
name|int
name|index
parameter_list|)
specifier|const
block|{
name|Q_ASSERT
argument_list|(
name|x
operator|!=
literal|0
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|QInternal
operator|::
name|DockCount
condition|;
operator|++
name|i
control|)
block|{
specifier|const
name|QToolBarAreaLayoutInfo
modifier|&
name|dock
init|=
name|docks
index|[
name|i
index|]
decl_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|dock
operator|.
name|lines
operator|.
name|count
argument_list|()
condition|;
operator|++
name|j
control|)
block|{
specifier|const
name|QToolBarAreaLayoutLine
modifier|&
name|line
init|=
name|dock
operator|.
name|lines
operator|.
name|at
argument_list|(
name|j
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|k
init|=
literal|0
init|;
name|k
operator|<
name|line
operator|.
name|toolBarItems
operator|.
name|count
argument_list|()
condition|;
operator|++
name|k
control|)
block|{
if|if
condition|(
operator|(
operator|*
name|x
operator|)
operator|++
operator|==
name|index
condition|)
return|return
name|line
operator|.
name|toolBarItems
operator|.
name|at
argument_list|(
name|k
argument_list|)
operator|.
name|widgetItem
return|;
block|}
block|}
block|}
return|return
literal|0
return|;
block|}
end_function
begin_function
DECL|function|takeAt
name|QLayoutItem
modifier|*
name|QToolBarAreaLayout
operator|::
name|takeAt
parameter_list|(
name|int
modifier|*
name|x
parameter_list|,
name|int
name|index
parameter_list|)
block|{
name|Q_ASSERT
argument_list|(
name|x
operator|!=
literal|0
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|QInternal
operator|::
name|DockCount
condition|;
operator|++
name|i
control|)
block|{
name|QToolBarAreaLayoutInfo
modifier|&
name|dock
init|=
name|docks
index|[
name|i
index|]
decl_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|dock
operator|.
name|lines
operator|.
name|count
argument_list|()
condition|;
operator|++
name|j
control|)
block|{
name|QToolBarAreaLayoutLine
modifier|&
name|line
init|=
name|dock
operator|.
name|lines
index|[
name|j
index|]
decl_stmt|;
for|for
control|(
name|int
name|k
init|=
literal|0
init|;
name|k
operator|<
name|line
operator|.
name|toolBarItems
operator|.
name|count
argument_list|()
condition|;
operator|++
name|k
control|)
block|{
if|if
condition|(
operator|(
operator|*
name|x
operator|)
operator|++
operator|==
name|index
condition|)
block|{
name|QLayoutItem
modifier|*
name|result
init|=
name|line
operator|.
name|toolBarItems
operator|.
name|takeAt
argument_list|(
name|k
argument_list|)
operator|.
name|widgetItem
decl_stmt|;
if|if
condition|(
name|line
operator|.
name|toolBarItems
operator|.
name|isEmpty
argument_list|()
condition|)
name|dock
operator|.
name|lines
operator|.
name|removeAt
argument_list|(
name|j
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
block|}
block|}
block|}
return|return
literal|0
return|;
block|}
end_function
begin_function
DECL|function|deleteAllLayoutItems
name|void
name|QToolBarAreaLayout
operator|::
name|deleteAllLayoutItems
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|QInternal
operator|::
name|DockCount
condition|;
operator|++
name|i
control|)
block|{
name|QToolBarAreaLayoutInfo
modifier|&
name|dock
init|=
name|docks
index|[
name|i
index|]
decl_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|dock
operator|.
name|lines
operator|.
name|count
argument_list|()
condition|;
operator|++
name|j
control|)
block|{
name|QToolBarAreaLayoutLine
modifier|&
name|line
init|=
name|dock
operator|.
name|lines
index|[
name|j
index|]
decl_stmt|;
for|for
control|(
name|int
name|k
init|=
literal|0
init|;
name|k
operator|<
name|line
operator|.
name|toolBarItems
operator|.
name|count
argument_list|()
condition|;
operator|++
name|k
control|)
block|{
name|QToolBarAreaLayoutItem
modifier|&
name|item
init|=
name|line
operator|.
name|toolBarItems
index|[
name|k
index|]
decl_stmt|;
if|if
condition|(
operator|!
name|item
operator|.
name|gap
condition|)
operator|delete
name|item
operator|.
name|widgetItem
expr_stmt|;
name|item
operator|.
name|widgetItem
operator|=
literal|0
expr_stmt|;
block|}
block|}
block|}
block|}
end_function
begin_function
DECL|function|findToolBar
name|QInternal
operator|::
name|DockPosition
name|QToolBarAreaLayout
operator|::
name|findToolBar
parameter_list|(
name|QToolBar
modifier|*
name|toolBar
parameter_list|)
specifier|const
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|QInternal
operator|::
name|DockCount
condition|;
operator|++
name|i
control|)
block|{
specifier|const
name|QToolBarAreaLayoutInfo
modifier|&
name|dock
init|=
name|docks
index|[
name|i
index|]
decl_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|dock
operator|.
name|lines
operator|.
name|count
argument_list|()
condition|;
operator|++
name|j
control|)
block|{
specifier|const
name|QToolBarAreaLayoutLine
modifier|&
name|line
init|=
name|dock
operator|.
name|lines
operator|.
name|at
argument_list|(
name|j
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|k
init|=
literal|0
init|;
name|k
operator|<
name|line
operator|.
name|toolBarItems
operator|.
name|count
argument_list|()
condition|;
operator|++
name|k
control|)
block|{
if|if
condition|(
name|line
operator|.
name|toolBarItems
operator|.
name|at
argument_list|(
name|k
argument_list|)
operator|.
name|widgetItem
operator|->
name|widget
argument_list|()
operator|==
name|toolBar
condition|)
return|return
cast|static_cast
argument_list|<
name|QInternal
operator|::
name|DockPosition
argument_list|>
argument_list|(
name|i
argument_list|)
return|;
block|}
block|}
block|}
return|return
name|QInternal
operator|::
name|DockCount
return|;
block|}
end_function
begin_function
DECL|function|insertToolBar
name|QLayoutItem
modifier|*
name|QToolBarAreaLayout
operator|::
name|insertToolBar
parameter_list|(
name|QToolBar
modifier|*
name|before
parameter_list|,
name|QToolBar
modifier|*
name|toolBar
parameter_list|)
block|{
name|QInternal
operator|::
name|DockPosition
name|pos
init|=
name|findToolBar
argument_list|(
name|before
argument_list|)
decl_stmt|;
if|if
condition|(
name|pos
operator|==
name|QInternal
operator|::
name|DockCount
condition|)
return|return
literal|0
return|;
return|return
name|docks
index|[
name|pos
index|]
operator|.
name|insertToolBar
argument_list|(
name|before
argument_list|,
name|toolBar
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|removeToolBar
name|void
name|QToolBarAreaLayout
operator|::
name|removeToolBar
parameter_list|(
name|QToolBar
modifier|*
name|toolBar
parameter_list|)
block|{
name|QInternal
operator|::
name|DockPosition
name|pos
init|=
name|findToolBar
argument_list|(
name|toolBar
argument_list|)
decl_stmt|;
if|if
condition|(
name|pos
operator|==
name|QInternal
operator|::
name|DockCount
condition|)
return|return;
name|docks
index|[
name|pos
index|]
operator|.
name|removeToolBar
argument_list|(
name|toolBar
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|addToolBar
name|QLayoutItem
modifier|*
name|QToolBarAreaLayout
operator|::
name|addToolBar
parameter_list|(
name|QInternal
operator|::
name|DockPosition
name|pos
parameter_list|,
name|QToolBar
modifier|*
name|toolBar
parameter_list|)
block|{
return|return
name|docks
index|[
name|pos
index|]
operator|.
name|insertToolBar
argument_list|(
literal|0
argument_list|,
name|toolBar
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|insertToolBarBreak
name|void
name|QToolBarAreaLayout
operator|::
name|insertToolBarBreak
parameter_list|(
name|QToolBar
modifier|*
name|before
parameter_list|)
block|{
name|QInternal
operator|::
name|DockPosition
name|pos
init|=
name|findToolBar
argument_list|(
name|before
argument_list|)
decl_stmt|;
if|if
condition|(
name|pos
operator|==
name|QInternal
operator|::
name|DockCount
condition|)
return|return;
name|docks
index|[
name|pos
index|]
operator|.
name|insertToolBarBreak
argument_list|(
name|before
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|removeToolBarBreak
name|void
name|QToolBarAreaLayout
operator|::
name|removeToolBarBreak
parameter_list|(
name|QToolBar
modifier|*
name|before
parameter_list|)
block|{
name|QInternal
operator|::
name|DockPosition
name|pos
init|=
name|findToolBar
argument_list|(
name|before
argument_list|)
decl_stmt|;
if|if
condition|(
name|pos
operator|==
name|QInternal
operator|::
name|DockCount
condition|)
return|return;
name|docks
index|[
name|pos
index|]
operator|.
name|removeToolBarBreak
argument_list|(
name|before
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|addToolBarBreak
name|void
name|QToolBarAreaLayout
operator|::
name|addToolBarBreak
parameter_list|(
name|QInternal
operator|::
name|DockPosition
name|pos
parameter_list|)
block|{
name|docks
index|[
name|pos
index|]
operator|.
name|insertToolBarBreak
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|moveToolBar
name|void
name|QToolBarAreaLayout
operator|::
name|moveToolBar
parameter_list|(
name|QToolBar
modifier|*
name|toolbar
parameter_list|,
name|int
name|p
parameter_list|)
block|{
name|QInternal
operator|::
name|DockPosition
name|pos
init|=
name|findToolBar
argument_list|(
name|toolbar
argument_list|)
decl_stmt|;
if|if
condition|(
name|pos
operator|==
name|QInternal
operator|::
name|DockCount
condition|)
return|return;
name|docks
index|[
name|pos
index|]
operator|.
name|moveToolBar
argument_list|(
name|toolbar
argument_list|,
name|p
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|insertItem
name|void
name|QToolBarAreaLayout
operator|::
name|insertItem
parameter_list|(
name|QInternal
operator|::
name|DockPosition
name|pos
parameter_list|,
name|QLayoutItem
modifier|*
name|item
parameter_list|)
block|{
if|if
condition|(
name|docks
index|[
name|pos
index|]
operator|.
name|lines
operator|.
name|isEmpty
argument_list|()
condition|)
name|docks
index|[
name|pos
index|]
operator|.
name|lines
operator|.
name|append
argument_list|(
name|QToolBarAreaLayoutLine
argument_list|(
name|docks
index|[
name|pos
index|]
operator|.
name|o
argument_list|)
argument_list|)
expr_stmt|;
name|docks
index|[
name|pos
index|]
operator|.
name|lines
operator|.
name|last
argument_list|()
operator|.
name|toolBarItems
operator|.
name|append
argument_list|(
name|item
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|insertItem
name|void
name|QToolBarAreaLayout
operator|::
name|insertItem
parameter_list|(
name|QToolBar
modifier|*
name|before
parameter_list|,
name|QLayoutItem
modifier|*
name|item
parameter_list|)
block|{
name|QInternal
operator|::
name|DockPosition
name|pos
init|=
name|findToolBar
argument_list|(
name|before
argument_list|)
decl_stmt|;
if|if
condition|(
name|pos
operator|==
name|QInternal
operator|::
name|DockCount
condition|)
return|return;
name|docks
index|[
name|pos
index|]
operator|.
name|insertItem
argument_list|(
name|before
argument_list|,
name|item
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|apply
name|void
name|QToolBarAreaLayout
operator|::
name|apply
parameter_list|(
name|bool
name|animate
parameter_list|)
block|{
name|QMainWindowLayout
modifier|*
name|layout
init|=
name|qt_mainwindow_layout
argument_list|(
name|mainWindow
argument_list|)
decl_stmt|;
name|Q_ASSERT
argument_list|(
name|layout
operator|!=
literal|0
argument_list|)
expr_stmt|;
name|Qt
operator|::
name|LayoutDirection
name|dir
init|=
name|mainWindow
operator|->
name|layoutDirection
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|QInternal
operator|::
name|DockCount
condition|;
operator|++
name|i
control|)
block|{
specifier|const
name|QToolBarAreaLayoutInfo
modifier|&
name|dock
init|=
name|docks
index|[
name|i
index|]
decl_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|dock
operator|.
name|lines
operator|.
name|count
argument_list|()
condition|;
operator|++
name|j
control|)
block|{
specifier|const
name|QToolBarAreaLayoutLine
modifier|&
name|line
init|=
name|dock
operator|.
name|lines
operator|.
name|at
argument_list|(
name|j
argument_list|)
decl_stmt|;
if|if
condition|(
name|line
operator|.
name|skip
argument_list|()
condition|)
continue|continue;
for|for
control|(
name|int
name|k
init|=
literal|0
init|;
name|k
operator|<
name|line
operator|.
name|toolBarItems
operator|.
name|count
argument_list|()
condition|;
operator|++
name|k
control|)
block|{
specifier|const
name|QToolBarAreaLayoutItem
modifier|&
name|item
init|=
name|line
operator|.
name|toolBarItems
operator|.
name|at
argument_list|(
name|k
argument_list|)
decl_stmt|;
if|if
condition|(
name|item
operator|.
name|skip
argument_list|()
operator|||
name|item
operator|.
name|gap
condition|)
continue|continue;
name|QRect
name|geo
decl_stmt|;
if|if
condition|(
name|visible
condition|)
block|{
if|if
condition|(
name|line
operator|.
name|o
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
block|{
name|geo
operator|.
name|setTop
argument_list|(
name|line
operator|.
name|rect
operator|.
name|top
argument_list|()
argument_list|)
expr_stmt|;
name|geo
operator|.
name|setBottom
argument_list|(
name|line
operator|.
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
name|geo
operator|.
name|setLeft
argument_list|(
name|line
operator|.
name|rect
operator|.
name|left
argument_list|()
operator|+
name|item
operator|.
name|pos
argument_list|)
expr_stmt|;
name|geo
operator|.
name|setRight
argument_list|(
name|line
operator|.
name|rect
operator|.
name|left
argument_list|()
operator|+
name|item
operator|.
name|pos
operator|+
name|item
operator|.
name|size
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|geo
operator|.
name|setLeft
argument_list|(
name|line
operator|.
name|rect
operator|.
name|left
argument_list|()
argument_list|)
expr_stmt|;
name|geo
operator|.
name|setRight
argument_list|(
name|line
operator|.
name|rect
operator|.
name|right
argument_list|()
argument_list|)
expr_stmt|;
name|geo
operator|.
name|setTop
argument_list|(
name|line
operator|.
name|rect
operator|.
name|top
argument_list|()
operator|+
name|item
operator|.
name|pos
argument_list|)
expr_stmt|;
name|geo
operator|.
name|setBottom
argument_list|(
name|line
operator|.
name|rect
operator|.
name|top
argument_list|()
operator|+
name|item
operator|.
name|pos
operator|+
name|item
operator|.
name|size
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
name|QWidget
modifier|*
name|widget
init|=
name|item
operator|.
name|widgetItem
operator|->
name|widget
argument_list|()
decl_stmt|;
if|if
condition|(
name|QToolBar
modifier|*
name|toolBar
init|=
name|qobject_cast
argument_list|<
name|QToolBar
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
condition|)
block|{
name|QToolBarLayout
modifier|*
name|tbl
init|=
name|qobject_cast
argument_list|<
name|QToolBarLayout
operator|*
argument_list|>
argument_list|(
name|toolBar
operator|->
name|layout
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|tbl
operator|->
name|expanded
condition|)
block|{
name|QPoint
name|tr
init|=
name|geo
operator|.
name|topRight
argument_list|()
decl_stmt|;
name|QSize
name|size
init|=
name|tbl
operator|->
name|expandedSize
argument_list|(
name|geo
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
name|geo
operator|.
name|setSize
argument_list|(
name|size
argument_list|)
expr_stmt|;
name|geo
operator|.
name|moveTopRight
argument_list|(
name|tr
argument_list|)
expr_stmt|;
if|if
condition|(
name|geo
operator|.
name|bottom
argument_list|()
operator|>
name|rect
operator|.
name|bottom
argument_list|()
condition|)
name|geo
operator|.
name|moveBottom
argument_list|(
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|geo
operator|.
name|right
argument_list|()
operator|>
name|rect
operator|.
name|right
argument_list|()
condition|)
name|geo
operator|.
name|moveRight
argument_list|(
name|rect
operator|.
name|right
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|geo
operator|.
name|left
argument_list|()
operator|<
literal|0
condition|)
name|geo
operator|.
name|moveLeft
argument_list|(
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
name|geo
operator|.
name|top
argument_list|()
operator|<
literal|0
condition|)
name|geo
operator|.
name|moveTop
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|visible
operator|&&
name|dock
operator|.
name|o
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
name|geo
operator|=
name|QStyle
operator|::
name|visualRect
argument_list|(
name|dir
argument_list|,
name|line
operator|.
name|rect
argument_list|,
name|geo
argument_list|)
expr_stmt|;
name|layout
operator|->
name|widgetAnimator
operator|.
name|animate
argument_list|(
name|widget
argument_list|,
name|geo
argument_list|,
name|animate
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_function
begin_function
DECL|function|toolBarBreak
name|bool
name|QToolBarAreaLayout
operator|::
name|toolBarBreak
parameter_list|(
name|QToolBar
modifier|*
name|toolBar
parameter_list|)
specifier|const
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|QInternal
operator|::
name|DockCount
condition|;
operator|++
name|i
control|)
block|{
specifier|const
name|QToolBarAreaLayoutInfo
modifier|&
name|dock
init|=
name|docks
index|[
name|i
index|]
decl_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|dock
operator|.
name|lines
operator|.
name|count
argument_list|()
condition|;
operator|++
name|j
control|)
block|{
specifier|const
name|QToolBarAreaLayoutLine
modifier|&
name|line
init|=
name|dock
operator|.
name|lines
operator|.
name|at
argument_list|(
name|j
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|k
init|=
literal|0
init|;
name|k
operator|<
name|line
operator|.
name|toolBarItems
operator|.
name|count
argument_list|()
condition|;
operator|++
name|k
control|)
block|{
if|if
condition|(
name|line
operator|.
name|toolBarItems
operator|.
name|at
argument_list|(
name|k
argument_list|)
operator|.
name|widgetItem
operator|->
name|widget
argument_list|()
operator|==
name|toolBar
condition|)
return|return
name|j
operator|>
literal|0
operator|&&
name|k
operator|==
literal|0
return|;
block|}
block|}
block|}
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|getStyleOptionInfo
name|void
name|QToolBarAreaLayout
operator|::
name|getStyleOptionInfo
parameter_list|(
name|QStyleOptionToolBar
modifier|*
name|option
parameter_list|,
name|QToolBar
modifier|*
name|toolBar
parameter_list|)
specifier|const
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|QInternal
operator|::
name|DockCount
condition|;
operator|++
name|i
control|)
block|{
specifier|const
name|QToolBarAreaLayoutInfo
modifier|&
name|dock
init|=
name|docks
index|[
name|i
index|]
decl_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|dock
operator|.
name|lines
operator|.
name|count
argument_list|()
condition|;
operator|++
name|j
control|)
block|{
specifier|const
name|QToolBarAreaLayoutLine
modifier|&
name|line
init|=
name|dock
operator|.
name|lines
operator|.
name|at
argument_list|(
name|j
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|k
init|=
literal|0
init|;
name|k
operator|<
name|line
operator|.
name|toolBarItems
operator|.
name|count
argument_list|()
condition|;
operator|++
name|k
control|)
block|{
if|if
condition|(
name|line
operator|.
name|toolBarItems
operator|.
name|at
argument_list|(
name|k
argument_list|)
operator|.
name|widgetItem
operator|->
name|widget
argument_list|()
operator|==
name|toolBar
condition|)
block|{
if|if
condition|(
name|line
operator|.
name|toolBarItems
operator|.
name|count
argument_list|()
operator|==
literal|1
condition|)
name|option
operator|->
name|positionWithinLine
operator|=
name|QStyleOptionToolBar
operator|::
name|OnlyOne
expr_stmt|;
elseif|else
if|if
condition|(
name|k
operator|==
literal|0
condition|)
name|option
operator|->
name|positionWithinLine
operator|=
name|QStyleOptionToolBar
operator|::
name|Beginning
expr_stmt|;
elseif|else
if|if
condition|(
name|k
operator|==
name|line
operator|.
name|toolBarItems
operator|.
name|count
argument_list|()
operator|-
literal|1
condition|)
name|option
operator|->
name|positionWithinLine
operator|=
name|QStyleOptionToolBar
operator|::
name|End
expr_stmt|;
else|else
name|option
operator|->
name|positionWithinLine
operator|=
name|QStyleOptionToolBar
operator|::
name|Middle
expr_stmt|;
if|if
condition|(
name|dock
operator|.
name|lines
operator|.
name|count
argument_list|()
operator|==
literal|1
condition|)
name|option
operator|->
name|positionOfLine
operator|=
name|QStyleOptionToolBar
operator|::
name|OnlyOne
expr_stmt|;
elseif|else
if|if
condition|(
name|j
operator|==
literal|0
condition|)
name|option
operator|->
name|positionOfLine
operator|=
name|QStyleOptionToolBar
operator|::
name|Beginning
expr_stmt|;
elseif|else
if|if
condition|(
name|j
operator|==
name|dock
operator|.
name|lines
operator|.
name|count
argument_list|()
operator|-
literal|1
condition|)
name|option
operator|->
name|positionOfLine
operator|=
name|QStyleOptionToolBar
operator|::
name|End
expr_stmt|;
else|else
name|option
operator|->
name|positionOfLine
operator|=
name|QStyleOptionToolBar
operator|::
name|Middle
expr_stmt|;
return|return;
block|}
block|}
block|}
block|}
block|}
end_function
begin_function
DECL|function|indexOf
name|QList
argument_list|<
name|int
argument_list|>
name|QToolBarAreaLayout
operator|::
name|indexOf
parameter_list|(
name|QWidget
modifier|*
name|toolBar
parameter_list|)
specifier|const
block|{
name|QList
argument_list|<
name|int
argument_list|>
name|result
decl_stmt|;
name|bool
name|found
init|=
literal|false
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|QInternal
operator|::
name|DockCount
condition|;
operator|++
name|i
control|)
block|{
specifier|const
name|QToolBarAreaLayoutInfo
modifier|&
name|dock
init|=
name|docks
index|[
name|i
index|]
decl_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|dock
operator|.
name|lines
operator|.
name|count
argument_list|()
condition|;
operator|++
name|j
control|)
block|{
specifier|const
name|QToolBarAreaLayoutLine
modifier|&
name|line
init|=
name|dock
operator|.
name|lines
operator|.
name|at
argument_list|(
name|j
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|k
init|=
literal|0
init|;
name|k
operator|<
name|line
operator|.
name|toolBarItems
operator|.
name|count
argument_list|()
condition|;
operator|++
name|k
control|)
block|{
specifier|const
name|QToolBarAreaLayoutItem
modifier|&
name|item
init|=
name|line
operator|.
name|toolBarItems
operator|.
name|at
argument_list|(
name|k
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|item
operator|.
name|gap
operator|&&
name|item
operator|.
name|widgetItem
operator|->
name|widget
argument_list|()
operator|==
name|toolBar
condition|)
block|{
name|found
operator|=
literal|true
expr_stmt|;
name|result
operator|.
name|prepend
argument_list|(
name|k
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
name|found
condition|)
block|{
name|result
operator|.
name|prepend
argument_list|(
name|j
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
name|found
condition|)
block|{
name|result
operator|.
name|prepend
argument_list|(
name|i
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
return|return
name|result
return|;
block|}
end_function
begin_comment
comment|//this functions returns the path to the possible gapindex for the position pos
end_comment
begin_function
DECL|function|gapIndex
name|QList
argument_list|<
name|int
argument_list|>
name|QToolBarAreaLayout
operator|::
name|gapIndex
parameter_list|(
specifier|const
name|QPoint
modifier|&
name|pos
parameter_list|)
specifier|const
block|{
name|Qt
operator|::
name|LayoutDirection
name|dir
init|=
name|mainWindow
operator|->
name|layoutDirection
argument_list|()
decl_stmt|;
name|int
name|minDistance
init|=
literal|80
decl_stmt|;
comment|// when a dock area is empty, how "wide" is it?
name|QList
argument_list|<
name|int
argument_list|>
name|ret
decl_stmt|;
comment|//return value
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|QInternal
operator|::
name|DockCount
condition|;
operator|++
name|i
control|)
block|{
name|QPoint
name|p
init|=
name|pos
decl_stmt|;
if|if
condition|(
name|docks
index|[
name|i
index|]
operator|.
name|o
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
name|p
operator|=
name|QStyle
operator|::
name|visualPos
argument_list|(
name|dir
argument_list|,
name|docks
index|[
name|i
index|]
operator|.
name|rect
argument_list|,
name|p
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|int
argument_list|>
name|result
init|=
name|docks
index|[
name|i
index|]
operator|.
name|gapIndex
argument_list|(
name|p
argument_list|,
operator|&
name|minDistance
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|result
operator|.
name|prepend
argument_list|(
name|i
argument_list|)
expr_stmt|;
name|ret
operator|=
name|result
expr_stmt|;
block|}
block|}
return|return
name|ret
return|;
block|}
end_function
begin_function
DECL|function|currentGapIndex
name|QList
argument_list|<
name|int
argument_list|>
name|QToolBarAreaLayout
operator|::
name|currentGapIndex
parameter_list|()
specifier|const
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|QInternal
operator|::
name|DockCount
condition|;
operator|++
name|i
control|)
block|{
specifier|const
name|QToolBarAreaLayoutInfo
modifier|&
name|dock
init|=
name|docks
index|[
name|i
index|]
decl_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|dock
operator|.
name|lines
operator|.
name|count
argument_list|()
condition|;
operator|++
name|j
control|)
block|{
specifier|const
name|QToolBarAreaLayoutLine
modifier|&
name|line
init|=
name|dock
operator|.
name|lines
index|[
name|j
index|]
decl_stmt|;
for|for
control|(
name|int
name|k
init|=
literal|0
init|;
name|k
operator|<
name|line
operator|.
name|toolBarItems
operator|.
name|count
argument_list|()
condition|;
name|k
operator|++
control|)
block|{
if|if
condition|(
name|line
operator|.
name|toolBarItems
index|[
name|k
index|]
operator|.
name|gap
condition|)
block|{
name|QList
argument_list|<
name|int
argument_list|>
name|result
decl_stmt|;
name|result
operator|<<
name|i
operator|<<
name|j
operator|<<
name|k
expr_stmt|;
return|return
name|result
return|;
block|}
block|}
block|}
block|}
return|return
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|insertGap
name|bool
name|QToolBarAreaLayout
operator|::
name|insertGap
parameter_list|(
specifier|const
name|QList
argument_list|<
name|int
argument_list|>
modifier|&
name|path
parameter_list|,
name|QLayoutItem
modifier|*
name|item
parameter_list|)
block|{
name|Q_ASSERT
argument_list|(
name|path
operator|.
name|count
argument_list|()
operator|==
literal|3
argument_list|)
expr_stmt|;
specifier|const
name|int
name|i
init|=
name|path
operator|.
name|first
argument_list|()
decl_stmt|;
name|Q_ASSERT
argument_list|(
name|i
operator|>=
literal|0
operator|&&
name|i
operator|<
name|QInternal
operator|::
name|DockCount
argument_list|)
expr_stmt|;
return|return
name|docks
index|[
name|i
index|]
operator|.
name|insertGap
argument_list|(
name|path
operator|.
name|mid
argument_list|(
literal|1
argument_list|)
argument_list|,
name|item
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|remove
name|void
name|QToolBarAreaLayout
operator|::
name|remove
parameter_list|(
specifier|const
name|QList
argument_list|<
name|int
argument_list|>
modifier|&
name|path
parameter_list|)
block|{
name|Q_ASSERT
argument_list|(
name|path
operator|.
name|count
argument_list|()
operator|==
literal|3
argument_list|)
expr_stmt|;
name|docks
index|[
name|path
operator|.
name|at
argument_list|(
literal|0
argument_list|)
index|]
operator|.
name|lines
index|[
name|path
operator|.
name|at
argument_list|(
literal|1
argument_list|)
index|]
operator|.
name|toolBarItems
operator|.
name|removeAt
argument_list|(
name|path
operator|.
name|at
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|remove
name|void
name|QToolBarAreaLayout
operator|::
name|remove
parameter_list|(
name|QLayoutItem
modifier|*
name|item
parameter_list|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|QInternal
operator|::
name|DockCount
condition|;
operator|++
name|i
control|)
block|{
name|QToolBarAreaLayoutInfo
modifier|&
name|dock
init|=
name|docks
index|[
name|i
index|]
decl_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|dock
operator|.
name|lines
operator|.
name|count
argument_list|()
condition|;
operator|++
name|j
control|)
block|{
name|QToolBarAreaLayoutLine
modifier|&
name|line
init|=
name|dock
operator|.
name|lines
index|[
name|j
index|]
decl_stmt|;
for|for
control|(
name|int
name|k
init|=
literal|0
init|;
name|k
operator|<
name|line
operator|.
name|toolBarItems
operator|.
name|count
argument_list|()
condition|;
name|k
operator|++
control|)
block|{
if|if
condition|(
name|line
operator|.
name|toolBarItems
index|[
name|k
index|]
operator|.
name|widgetItem
operator|==
name|item
condition|)
block|{
name|line
operator|.
name|toolBarItems
operator|.
name|removeAt
argument_list|(
name|k
argument_list|)
expr_stmt|;
if|if
condition|(
name|line
operator|.
name|toolBarItems
operator|.
name|isEmpty
argument_list|()
condition|)
name|dock
operator|.
name|lines
operator|.
name|removeAt
argument_list|(
name|j
argument_list|)
expr_stmt|;
return|return;
block|}
block|}
block|}
block|}
block|}
end_function
begin_function
DECL|function|clear
name|void
name|QToolBarAreaLayout
operator|::
name|clear
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|QInternal
operator|::
name|DockCount
condition|;
operator|++
name|i
control|)
name|docks
index|[
name|i
index|]
operator|.
name|clear
argument_list|()
expr_stmt|;
name|rect
operator|=
name|QRect
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|item
name|QToolBarAreaLayoutItem
modifier|*
name|QToolBarAreaLayout
operator|::
name|item
parameter_list|(
specifier|const
name|QList
argument_list|<
name|int
argument_list|>
modifier|&
name|path
parameter_list|)
block|{
name|Q_ASSERT
argument_list|(
name|path
operator|.
name|count
argument_list|()
operator|==
literal|3
argument_list|)
expr_stmt|;
if|if
condition|(
name|path
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|<
literal|0
operator|||
name|path
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|>=
name|QInternal
operator|::
name|DockCount
condition|)
return|return
literal|0
return|;
name|QToolBarAreaLayoutInfo
modifier|&
name|info
init|=
name|docks
index|[
name|path
operator|.
name|at
argument_list|(
literal|0
argument_list|)
index|]
decl_stmt|;
if|if
condition|(
name|path
operator|.
name|at
argument_list|(
literal|1
argument_list|)
operator|<
literal|0
operator|||
name|path
operator|.
name|at
argument_list|(
literal|1
argument_list|)
operator|>=
name|info
operator|.
name|lines
operator|.
name|count
argument_list|()
condition|)
return|return
literal|0
return|;
name|QToolBarAreaLayoutLine
modifier|&
name|line
init|=
name|info
operator|.
name|lines
index|[
name|path
operator|.
name|at
argument_list|(
literal|1
argument_list|)
index|]
decl_stmt|;
if|if
condition|(
name|path
operator|.
name|at
argument_list|(
literal|2
argument_list|)
operator|<
literal|0
operator|||
name|path
operator|.
name|at
argument_list|(
literal|2
argument_list|)
operator|>=
name|line
operator|.
name|toolBarItems
operator|.
name|count
argument_list|()
condition|)
return|return
literal|0
return|;
return|return
operator|&
operator|(
name|line
operator|.
name|toolBarItems
index|[
name|path
operator|.
name|at
argument_list|(
literal|2
argument_list|)
index|]
operator|)
return|;
block|}
end_function
begin_function
DECL|function|itemRect
name|QRect
name|QToolBarAreaLayout
operator|::
name|itemRect
parameter_list|(
specifier|const
name|QList
argument_list|<
name|int
argument_list|>
modifier|&
name|path
parameter_list|)
specifier|const
block|{
specifier|const
name|int
name|i
init|=
name|path
operator|.
name|first
argument_list|()
decl_stmt|;
name|QRect
name|r
init|=
name|docks
index|[
name|i
index|]
operator|.
name|itemRect
argument_list|(
name|path
operator|.
name|mid
argument_list|(
literal|1
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|docks
index|[
name|i
index|]
operator|.
name|o
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
name|r
operator|=
name|QStyle
operator|::
name|visualRect
argument_list|(
name|mainWindow
operator|->
name|layoutDirection
argument_list|()
argument_list|,
name|docks
index|[
name|i
index|]
operator|.
name|rect
argument_list|,
name|r
argument_list|)
expr_stmt|;
return|return
name|r
return|;
block|}
end_function
begin_function
DECL|function|plug
name|QLayoutItem
modifier|*
name|QToolBarAreaLayout
operator|::
name|plug
parameter_list|(
specifier|const
name|QList
argument_list|<
name|int
argument_list|>
modifier|&
name|path
parameter_list|)
block|{
name|QToolBarAreaLayoutItem
modifier|*
name|item
init|=
name|this
operator|->
name|item
argument_list|(
name|path
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|item
condition|)
block|{
name|qWarning
argument_list|()
operator|<<
name|Q_FUNC_INFO
operator|<<
literal|"No item at"
operator|<<
name|path
expr_stmt|;
return|return
literal|0
return|;
block|}
name|Q_ASSERT
argument_list|(
name|item
operator|->
name|gap
argument_list|)
expr_stmt|;
name|Q_ASSERT
argument_list|(
name|item
operator|->
name|widgetItem
operator|!=
literal|0
argument_list|)
expr_stmt|;
name|item
operator|->
name|gap
operator|=
literal|false
expr_stmt|;
return|return
name|item
operator|->
name|widgetItem
return|;
block|}
end_function
begin_function
DECL|function|unplug
name|QLayoutItem
modifier|*
name|QToolBarAreaLayout
operator|::
name|unplug
parameter_list|(
specifier|const
name|QList
argument_list|<
name|int
argument_list|>
modifier|&
name|path
parameter_list|,
name|QToolBarAreaLayout
modifier|*
name|other
parameter_list|)
block|{
comment|//other needs to be update as well
name|Q_ASSERT
argument_list|(
name|path
operator|.
name|count
argument_list|()
operator|==
literal|3
argument_list|)
expr_stmt|;
name|QToolBarAreaLayoutItem
modifier|*
name|item
init|=
name|this
operator|->
name|item
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|Q_ASSERT
argument_list|(
name|item
argument_list|)
expr_stmt|;
comment|//update the leading space here
name|QToolBarAreaLayoutInfo
modifier|&
name|info
init|=
name|docks
index|[
name|path
operator|.
name|at
argument_list|(
literal|0
argument_list|)
index|]
decl_stmt|;
name|QToolBarAreaLayoutLine
modifier|&
name|line
init|=
name|info
operator|.
name|lines
index|[
name|path
operator|.
name|at
argument_list|(
literal|1
argument_list|)
index|]
decl_stmt|;
if|if
condition|(
name|item
operator|->
name|size
operator|!=
name|pick
argument_list|(
name|line
operator|.
name|o
argument_list|,
name|item
operator|->
name|realSizeHint
argument_list|()
argument_list|)
condition|)
block|{
comment|//the item doesn't have its default size
comment|//so we'll give this to the next item
name|int
name|newExtraSpace
init|=
literal|0
decl_stmt|;
comment|//let's iterate over the siblings of the current item that pare placed before it
comment|//we need to find just the one before
for|for
control|(
name|int
name|i
init|=
name|path
operator|.
name|at
argument_list|(
literal|2
argument_list|)
operator|-
literal|1
init|;
name|i
operator|>=
literal|0
condition|;
operator|--
name|i
control|)
block|{
name|QToolBarAreaLayoutItem
modifier|&
name|previous
init|=
name|line
operator|.
name|toolBarItems
index|[
name|i
index|]
decl_stmt|;
if|if
condition|(
operator|!
name|previous
operator|.
name|skip
argument_list|()
condition|)
block|{
comment|//we need to check if it has a previous element and a next one
comment|//the previous will get its size changed
for|for
control|(
name|int
name|j
init|=
name|path
operator|.
name|at
argument_list|(
literal|2
argument_list|)
operator|+
literal|1
init|;
name|j
operator|<
name|line
operator|.
name|toolBarItems
operator|.
name|count
argument_list|()
condition|;
operator|++
name|j
control|)
block|{
specifier|const
name|QToolBarAreaLayoutItem
modifier|&
name|next
init|=
name|line
operator|.
name|toolBarItems
operator|.
name|at
argument_list|(
name|j
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|next
operator|.
name|skip
argument_list|()
condition|)
block|{
name|newExtraSpace
operator|=
name|next
operator|.
name|pos
operator|-
name|previous
operator|.
name|pos
operator|-
name|pick
argument_list|(
name|line
operator|.
name|o
argument_list|,
name|previous
operator|.
name|sizeHint
argument_list|()
argument_list|)
expr_stmt|;
name|previous
operator|.
name|resize
argument_list|(
name|line
operator|.
name|o
argument_list|,
name|next
operator|.
name|pos
operator|-
name|previous
operator|.
name|pos
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
break|break;
block|}
block|}
if|if
condition|(
name|other
condition|)
block|{
name|QToolBarAreaLayoutInfo
modifier|&
name|info
init|=
name|other
operator|->
name|docks
index|[
name|path
operator|.
name|at
argument_list|(
literal|0
argument_list|)
index|]
decl_stmt|;
name|QToolBarAreaLayoutLine
modifier|&
name|line
init|=
name|info
operator|.
name|lines
index|[
name|path
operator|.
name|at
argument_list|(
literal|1
argument_list|)
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
name|path
operator|.
name|at
argument_list|(
literal|2
argument_list|)
operator|-
literal|1
init|;
name|i
operator|>=
literal|0
condition|;
operator|--
name|i
control|)
block|{
name|QToolBarAreaLayoutItem
modifier|&
name|previous
init|=
name|line
operator|.
name|toolBarItems
index|[
name|i
index|]
decl_stmt|;
if|if
condition|(
operator|!
name|previous
operator|.
name|skip
argument_list|()
condition|)
block|{
name|previous
operator|.
name|resize
argument_list|(
name|line
operator|.
name|o
argument_list|,
name|pick
argument_list|(
name|line
operator|.
name|o
argument_list|,
name|previous
operator|.
name|sizeHint
argument_list|()
argument_list|)
operator|+
name|newExtraSpace
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
name|Q_ASSERT
argument_list|(
operator|!
name|item
operator|->
name|gap
argument_list|)
expr_stmt|;
name|item
operator|->
name|gap
operator|=
literal|true
expr_stmt|;
return|return
name|item
operator|->
name|widgetItem
return|;
block|}
end_function
begin_function
DECL|function|unpackRect
specifier|static
name|QRect
name|unpackRect
parameter_list|(
name|uint
name|geom0
parameter_list|,
name|uint
name|geom1
parameter_list|,
name|bool
modifier|*
name|floating
parameter_list|)
block|{
operator|*
name|floating
operator|=
name|geom0
operator|&
literal|1
expr_stmt|;
if|if
condition|(
operator|!
operator|*
name|floating
condition|)
return|return
name|QRect
argument_list|()
return|;
name|geom0
operator|>>=
literal|1
expr_stmt|;
name|int
name|x
init|=
call|(
name|int
call|)
argument_list|(
name|geom0
operator|&
literal|0x0000ffff
argument_list|)
operator|-
literal|0x7FFF
decl_stmt|;
name|int
name|y
init|=
call|(
name|int
call|)
argument_list|(
name|geom1
operator|&
literal|0x0000ffff
argument_list|)
operator|-
literal|0x7FFF
decl_stmt|;
name|geom0
operator|>>=
literal|16
expr_stmt|;
name|geom1
operator|>>=
literal|16
expr_stmt|;
name|int
name|w
init|=
name|geom0
operator|&
literal|0x0000ffff
decl_stmt|;
name|int
name|h
init|=
name|geom1
operator|&
literal|0x0000ffff
decl_stmt|;
return|return
name|QRect
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|w
argument_list|,
name|h
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|packRect
specifier|static
name|void
name|packRect
parameter_list|(
name|uint
modifier|*
name|geom0
parameter_list|,
name|uint
modifier|*
name|geom1
parameter_list|,
specifier|const
name|QRect
modifier|&
name|rect
parameter_list|,
name|bool
name|floating
parameter_list|)
block|{
operator|*
name|geom0
operator|=
literal|0
expr_stmt|;
operator|*
name|geom1
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|!
name|floating
condition|)
return|return;
comment|// The 0x7FFF is half of 0xFFFF. We add it so we can handle negative coordinates on
comment|// dual monitors. It's subtracted when unpacking.
operator|*
name|geom0
operator||=
name|qMax
argument_list|(
literal|0
argument_list|,
name|rect
operator|.
name|width
argument_list|()
argument_list|)
operator|&
literal|0x0000ffff
expr_stmt|;
operator|*
name|geom1
operator||=
name|qMax
argument_list|(
literal|0
argument_list|,
name|rect
operator|.
name|height
argument_list|()
argument_list|)
operator|&
literal|0x0000ffff
expr_stmt|;
operator|*
name|geom0
operator|<<=
literal|16
expr_stmt|;
operator|*
name|geom1
operator|<<=
literal|16
expr_stmt|;
operator|*
name|geom0
operator||=
name|qMax
argument_list|(
literal|0
argument_list|,
name|rect
operator|.
name|x
argument_list|()
operator|+
literal|0x7FFF
argument_list|)
operator|&
literal|0x0000ffff
expr_stmt|;
operator|*
name|geom1
operator||=
name|qMax
argument_list|(
literal|0
argument_list|,
name|rect
operator|.
name|y
argument_list|()
operator|+
literal|0x7FFF
argument_list|)
operator|&
literal|0x0000ffff
expr_stmt|;
comment|// yeah, we chop one bit off the width, but it still has a range up to 32512
operator|*
name|geom0
operator|<<=
literal|1
expr_stmt|;
operator|*
name|geom0
operator||=
literal|1
expr_stmt|;
block|}
end_function
begin_function
DECL|function|saveState
name|void
name|QToolBarAreaLayout
operator|::
name|saveState
parameter_list|(
name|QDataStream
modifier|&
name|stream
parameter_list|)
specifier|const
block|{
comment|// save toolbar state
name|stream
operator|<<
operator|(
name|uchar
operator|)
name|ToolBarStateMarkerEx
expr_stmt|;
name|int
name|lineCount
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|QInternal
operator|::
name|DockCount
condition|;
operator|++
name|i
control|)
name|lineCount
operator|+=
name|docks
index|[
name|i
index|]
operator|.
name|lines
operator|.
name|count
argument_list|()
expr_stmt|;
name|stream
operator|<<
name|lineCount
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|QInternal
operator|::
name|DockCount
condition|;
operator|++
name|i
control|)
block|{
specifier|const
name|QToolBarAreaLayoutInfo
modifier|&
name|dock
init|=
name|docks
index|[
name|i
index|]
decl_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|dock
operator|.
name|lines
operator|.
name|count
argument_list|()
condition|;
operator|++
name|j
control|)
block|{
specifier|const
name|QToolBarAreaLayoutLine
modifier|&
name|line
init|=
name|dock
operator|.
name|lines
operator|.
name|at
argument_list|(
name|j
argument_list|)
decl_stmt|;
name|stream
operator|<<
name|i
operator|<<
name|line
operator|.
name|toolBarItems
operator|.
name|count
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|k
init|=
literal|0
init|;
name|k
operator|<
name|line
operator|.
name|toolBarItems
operator|.
name|count
argument_list|()
condition|;
operator|++
name|k
control|)
block|{
specifier|const
name|QToolBarAreaLayoutItem
modifier|&
name|item
init|=
name|line
operator|.
name|toolBarItems
operator|.
name|at
argument_list|(
name|k
argument_list|)
decl_stmt|;
name|QWidget
modifier|*
name|widget
init|=
cast|const_cast
argument_list|<
name|QLayoutItem
operator|*
argument_list|>
argument_list|(
name|item
operator|.
name|widgetItem
argument_list|)
operator|->
name|widget
argument_list|()
decl_stmt|;
name|QString
name|objectName
init|=
name|widget
operator|->
name|objectName
argument_list|()
decl_stmt|;
if|if
condition|(
name|objectName
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|qWarning
argument_list|(
literal|"QMainWindow::saveState(): 'objectName' not set for QToolBar %p '%s'"
argument_list|,
name|widget
argument_list|,
name|widget
operator|->
name|windowTitle
argument_list|()
operator|.
name|toLocal8Bit
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|stream
operator|<<
name|objectName
expr_stmt|;
comment|// we store information as:
comment|// 1st bit: 1 if shown
comment|// 2nd bit: 1 if orientation is vertical (default is horizontal)
name|uchar
name|shownOrientation
init|=
operator|(
name|uchar
operator|)
operator|!
name|widget
operator|->
name|isHidden
argument_list|()
decl_stmt|;
if|if
condition|(
name|QToolBar
modifier|*
name|tb
init|=
name|qobject_cast
argument_list|<
name|QToolBar
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
condition|)
block|{
if|if
condition|(
name|tb
operator|->
name|orientation
argument_list|()
operator|==
name|Qt
operator|::
name|Vertical
condition|)
name|shownOrientation
operator||=
literal|2
expr_stmt|;
block|}
name|stream
operator|<<
name|shownOrientation
expr_stmt|;
name|stream
operator|<<
name|item
operator|.
name|pos
expr_stmt|;
comment|//we store the preferred size. If the use rdidn't resize the toolbars it will be -1
name|stream
operator|<<
name|item
operator|.
name|preferredSize
expr_stmt|;
name|uint
name|geom0
decl_stmt|,
name|geom1
decl_stmt|;
name|packRect
argument_list|(
operator|&
name|geom0
argument_list|,
operator|&
name|geom1
argument_list|,
name|widget
operator|->
name|geometry
argument_list|()
argument_list|,
name|widget
operator|->
name|isWindow
argument_list|()
argument_list|)
expr_stmt|;
name|stream
operator|<<
name|geom0
operator|<<
name|geom1
expr_stmt|;
block|}
block|}
block|}
block|}
end_function
begin_function
DECL|function|getInt
specifier|static
specifier|inline
name|int
name|getInt
parameter_list|(
name|QDataStream
modifier|&
name|stream
parameter_list|)
block|{
name|int
name|x
decl_stmt|;
name|stream
operator|>>
name|x
expr_stmt|;
return|return
name|x
return|;
block|}
end_function
begin_function
DECL|function|restoreState
name|bool
name|QToolBarAreaLayout
operator|::
name|restoreState
parameter_list|(
name|QDataStream
modifier|&
name|stream
parameter_list|,
specifier|const
name|QList
argument_list|<
name|QToolBar
modifier|*
argument_list|>
modifier|&
name|_toolBars
parameter_list|,
name|uchar
name|tmarker
parameter_list|,
name|bool
name|testing
parameter_list|)
block|{
name|QList
argument_list|<
name|QToolBar
modifier|*
argument_list|>
name|toolBars
init|=
name|_toolBars
decl_stmt|;
name|int
name|lines
decl_stmt|;
name|stream
operator|>>
name|lines
expr_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|lines
condition|;
operator|++
name|j
control|)
block|{
name|int
name|pos
decl_stmt|;
name|stream
operator|>>
name|pos
expr_stmt|;
if|if
condition|(
name|pos
operator|<
literal|0
operator|||
name|pos
operator|>=
name|QInternal
operator|::
name|DockCount
condition|)
return|return
literal|false
return|;
name|int
name|cnt
decl_stmt|;
name|stream
operator|>>
name|cnt
expr_stmt|;
name|QToolBarAreaLayoutInfo
modifier|&
name|dock
init|=
name|docks
index|[
name|pos
index|]
decl_stmt|;
specifier|const
name|bool
name|applyingLayout
init|=
operator|!
name|testing
decl_stmt|;
name|QToolBarAreaLayoutLine
name|line
argument_list|(
name|dock
operator|.
name|o
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|k
init|=
literal|0
init|;
name|k
operator|<
name|cnt
condition|;
operator|++
name|k
control|)
block|{
name|QToolBarAreaLayoutItem
name|item
decl_stmt|;
name|QString
name|objectName
decl_stmt|;
name|stream
operator|>>
name|objectName
expr_stmt|;
name|uchar
name|shown
decl_stmt|;
name|stream
operator|>>
name|shown
expr_stmt|;
name|item
operator|.
name|pos
operator|=
name|getInt
argument_list|(
name|stream
argument_list|)
expr_stmt|;
name|item
operator|.
name|size
operator|=
name|getInt
argument_list|(
name|stream
argument_list|)
expr_stmt|;
comment|/*                4.3.0 added floating toolbars, but failed to add the ability to restore them.                We need to store there geometry (four ints). We cannot change the format in a                patch release (4.3.1) by adding ToolBarStateMarkerEx2 to signal extra data. So                for now we'll pack it in the two legacy ints we no longer used in Qt4.3.0.                In 4.4, we should add ToolBarStateMarkerEx2 and fix this properly.             */
name|QRect
name|rect
decl_stmt|;
name|bool
name|floating
init|=
literal|false
decl_stmt|;
name|uint
name|geom0
decl_stmt|,
name|geom1
decl_stmt|;
name|geom0
operator|=
name|getInt
argument_list|(
name|stream
argument_list|)
expr_stmt|;
if|if
condition|(
name|tmarker
operator|==
name|ToolBarStateMarkerEx
condition|)
block|{
name|geom1
operator|=
name|getInt
argument_list|(
name|stream
argument_list|)
expr_stmt|;
name|rect
operator|=
name|unpackRect
argument_list|(
name|geom0
argument_list|,
name|geom1
argument_list|,
operator|&
name|floating
argument_list|)
expr_stmt|;
block|}
name|QToolBar
modifier|*
name|toolBar
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|x
init|=
literal|0
init|;
name|x
operator|<
name|toolBars
operator|.
name|count
argument_list|()
condition|;
operator|++
name|x
control|)
block|{
if|if
condition|(
name|toolBars
operator|.
name|at
argument_list|(
name|x
argument_list|)
operator|->
name|objectName
argument_list|()
operator|==
name|objectName
condition|)
block|{
name|toolBar
operator|=
name|toolBars
operator|.
name|takeAt
argument_list|(
name|x
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
name|toolBar
operator|==
literal|0
condition|)
block|{
continue|continue;
block|}
if|if
condition|(
name|applyingLayout
condition|)
block|{
name|item
operator|.
name|widgetItem
operator|=
operator|new
name|QWidgetItemV2
argument_list|(
name|toolBar
argument_list|)
expr_stmt|;
name|toolBar
operator|->
name|setOrientation
argument_list|(
name|floating
condition|?
operator|(
operator|(
name|shown
operator|&
literal|2
operator|)
condition|?
name|Qt
operator|::
name|Vertical
else|:
name|Qt
operator|::
name|Horizontal
operator|)
else|:
name|dock
operator|.
name|o
argument_list|)
expr_stmt|;
name|toolBar
operator|->
name|setVisible
argument_list|(
name|shown
operator|&
literal|1
argument_list|)
expr_stmt|;
name|toolBar
operator|->
name|d_func
argument_list|()
operator|->
name|setWindowState
argument_list|(
name|floating
argument_list|,
literal|true
argument_list|,
name|rect
argument_list|)
expr_stmt|;
name|item
operator|.
name|preferredSize
operator|=
name|item
operator|.
name|size
expr_stmt|;
name|line
operator|.
name|toolBarItems
operator|.
name|append
argument_list|(
name|item
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|applyingLayout
condition|)
block|{
name|dock
operator|.
name|lines
operator|.
name|append
argument_list|(
name|line
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|stream
operator|.
name|status
argument_list|()
operator|==
name|QDataStream
operator|::
name|Ok
return|;
block|}
end_function
begin_function
DECL|function|isEmpty
name|bool
name|QToolBarAreaLayout
operator|::
name|isEmpty
parameter_list|()
specifier|const
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|QInternal
operator|::
name|DockCount
condition|;
operator|++
name|i
control|)
block|{
if|if
condition|(
operator|!
name|docks
index|[
name|i
index|]
operator|.
name|lines
operator|.
name|isEmpty
argument_list|()
condition|)
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
end_function
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_TOOLBAR
end_comment
end_unit
