begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the QtWidgets module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QDOCKAREALAYOUT_P_H
end_ifndef
begin_define
DECL|macro|QDOCKAREALAYOUT_P_H
define|#
directive|define
name|QDOCKAREALAYOUT_P_H
end_define
begin_comment
comment|//
end_comment
begin_comment
comment|//  W A R N I N G
end_comment
begin_comment
comment|//  -------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// This file is not part of the Qt API.  It exists purely as an
end_comment
begin_comment
comment|// implementation detail.  This header file may change from version to
end_comment
begin_comment
comment|// version without notice, or even be removed.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// We mean it.
end_comment
begin_comment
comment|//
end_comment
begin_include
include|#
directive|include
file|"QtCore/qrect.h"
end_include
begin_include
include|#
directive|include
file|"QtCore/qpair.h"
end_include
begin_include
include|#
directive|include
file|"QtCore/qlist.h"
end_include
begin_include
include|#
directive|include
file|"QtCore/qvector.h"
end_include
begin_include
include|#
directive|include
file|"QtWidgets/qlayout.h"
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_DOCKWIDGET
end_ifndef
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
DECL|variable|QLayoutItem
name|class
name|QLayoutItem
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QWidget
name|class
name|QWidget
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QLayoutItem
name|class
name|QLayoutItem
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QDockAreaLayoutInfo
name|class
name|QDockAreaLayoutInfo
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QPlaceHolderItem
name|class
name|QPlaceHolderItem
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QDockWidget
name|class
name|QDockWidget
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QMainWindow
name|class
name|QMainWindow
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QWidgetAnimator
name|class
name|QWidgetAnimator
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QMainWindowLayout
name|class
name|QMainWindowLayout
decl_stmt|;
end_decl_stmt
begin_struct_decl
struct_decl|struct
name|QLayoutStruct
struct_decl|;
end_struct_decl
begin_decl_stmt
DECL|variable|QTabBar
name|class
name|QTabBar
decl_stmt|;
end_decl_stmt
begin_comment
comment|// The classes in this file represent the tree structure that represents all the docks
end_comment
begin_comment
comment|// Also see the wiki internal documentation
end_comment
begin_comment
comment|// At the root of the tree is: QDockAreaLayout, which handles all 4 sides, so there is only one.
end_comment
begin_comment
comment|// For each side it has one QDockAreaLayoutInfo child. (See QDockAreaLayout::docks.)
end_comment
begin_comment
comment|// The QDockAreaLayoutInfo have QDockAreaLayoutItems as children (See QDockAreaLayoutInfo::item_list),
end_comment
begin_comment
comment|// which then has one QDockAreaLayoutInfo as a child. (QDockAreaLayoutItem::subInfo) or
end_comment
begin_comment
comment|// a widgetItem if this is a node of the tree (QDockAreaLayoutItem::widgetItem)
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// A path indetifies uniquely one object in this tree, the first number being the side and all the following
end_comment
begin_comment
comment|// indexes into the QDockAreaLayoutInfo::item_list.
end_comment
begin_struct
DECL|struct|QDockAreaLayoutItem
struct|struct
name|QDockAreaLayoutItem
block|{
DECL|enum|ItemFlags
DECL|enumerator|NoFlags
DECL|enumerator|GapItem
DECL|enumerator|KeepSize
enum|enum
name|ItemFlags
block|{
name|NoFlags
init|=
literal|0
block|,
name|GapItem
init|=
literal|1
block|,
name|KeepSize
init|=
literal|2
block|}
enum|;
name|QDockAreaLayoutItem
argument_list|(
name|QLayoutItem
operator|*
name|_widgetItem
operator|=
literal|0
argument_list|)
expr_stmt|;
name|QDockAreaLayoutItem
argument_list|(
name|QDockAreaLayoutInfo
operator|*
name|_subinfo
argument_list|)
expr_stmt|;
name|QDockAreaLayoutItem
argument_list|(
name|QPlaceHolderItem
operator|*
name|_placeHolderItem
argument_list|)
expr_stmt|;
name|QDockAreaLayoutItem
argument_list|(
specifier|const
name|QDockAreaLayoutItem
operator|&
name|other
argument_list|)
expr_stmt|;
operator|~
name|QDockAreaLayoutItem
argument_list|()
expr_stmt|;
DECL|member|operator
name|QDockAreaLayoutItem
modifier|&
name|operator
init|=
operator|(
specifier|const
name|QDockAreaLayoutItem
operator|&
name|other
operator|)
decl_stmt|;
name|bool
name|skip
argument_list|()
specifier|const
expr_stmt|;
name|QSize
name|minimumSize
argument_list|()
specifier|const
expr_stmt|;
name|QSize
name|maximumSize
argument_list|()
specifier|const
expr_stmt|;
name|QSize
name|sizeHint
argument_list|()
specifier|const
expr_stmt|;
name|bool
name|expansive
argument_list|(
name|Qt
operator|::
name|Orientation
name|o
argument_list|)
decl|const
decl_stmt|;
name|bool
name|hasFixedSize
argument_list|(
name|Qt
operator|::
name|Orientation
name|o
argument_list|)
decl|const
decl_stmt|;
DECL|member|widgetItem
name|QLayoutItem
modifier|*
name|widgetItem
decl_stmt|;
DECL|member|subinfo
name|QDockAreaLayoutInfo
modifier|*
name|subinfo
decl_stmt|;
DECL|member|placeHolderItem
name|QPlaceHolderItem
modifier|*
name|placeHolderItem
decl_stmt|;
DECL|member|pos
name|int
name|pos
decl_stmt|;
DECL|member|size
name|int
name|size
decl_stmt|;
DECL|member|flags
name|uint
name|flags
decl_stmt|;
block|}
struct|;
end_struct
begin_decl_stmt
name|class
name|Q_AUTOTEST_EXPORT
name|QPlaceHolderItem
block|{
name|public
label|:
name|QPlaceHolderItem
argument_list|()
operator|:
name|hidden
argument_list|(
name|false
argument_list|)
operator|,
name|window
argument_list|(
argument|false
argument_list|)
block|{}
name|QPlaceHolderItem
argument_list|(
name|QWidget
operator|*
name|w
argument_list|)
expr_stmt|;
name|QString
name|objectName
decl_stmt|;
name|bool
name|hidden
decl_stmt|,
name|window
decl_stmt|;
name|QRect
name|topLevelRect
decl_stmt|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_decl_stmt
name|class
name|Q_AUTOTEST_EXPORT
name|QDockAreaLayoutInfo
block|{
name|public
label|:
name|QDockAreaLayoutInfo
argument_list|()
expr_stmt|;
name|QDockAreaLayoutInfo
argument_list|(
argument|const int *_sep
argument_list|,
argument|QInternal::DockPosition _dockPos
argument_list|,
argument|Qt::Orientation _o
argument_list|,
argument|int tbhape
argument_list|,
argument|QMainWindow *window
argument_list|)
empty_stmt|;
name|QSize
name|minimumSize
argument_list|()
specifier|const
expr_stmt|;
name|QSize
name|maximumSize
argument_list|()
specifier|const
expr_stmt|;
name|QSize
name|sizeHint
argument_list|()
specifier|const
expr_stmt|;
name|QSize
name|size
argument_list|()
specifier|const
expr_stmt|;
name|bool
name|insertGap
argument_list|(
specifier|const
name|QList
operator|<
name|int
operator|>
operator|&
name|path
argument_list|,
name|QLayoutItem
operator|*
name|dockWidgetItem
argument_list|)
decl_stmt|;
name|QLayoutItem
modifier|*
name|plug
argument_list|(
specifier|const
name|QList
operator|<
name|int
operator|>
operator|&
name|path
argument_list|)
decl_stmt|;
name|QLayoutItem
modifier|*
name|unplug
argument_list|(
specifier|const
name|QList
operator|<
name|int
operator|>
operator|&
name|path
argument_list|)
decl_stmt|;
enum|enum
name|TabMode
block|{
name|NoTabs
block|,
name|AllowTabs
block|,
name|ForceTabs
block|}
enum|;
name|QList
operator|<
name|int
operator|>
name|gapIndex
argument_list|(
argument|const QPoint&pos
argument_list|,
argument|bool nestingEnabled
argument_list|,
argument|TabMode tabMode
argument_list|)
specifier|const
expr_stmt|;
name|void
name|remove
argument_list|(
specifier|const
name|QList
operator|<
name|int
operator|>
operator|&
name|path
argument_list|)
decl_stmt|;
name|void
name|unnest
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
name|void
name|split
argument_list|(
name|int
name|index
argument_list|,
name|Qt
operator|::
name|Orientation
name|orientation
argument_list|,
name|QLayoutItem
operator|*
name|dockWidgetItem
argument_list|)
decl_stmt|;
name|void
name|tab
parameter_list|(
name|int
name|index
parameter_list|,
name|QLayoutItem
modifier|*
name|dockWidgetItem
parameter_list|)
function_decl|;
name|QDockAreaLayoutItem
modifier|&
name|item
argument_list|(
specifier|const
name|QList
operator|<
name|int
operator|>
operator|&
name|path
argument_list|)
decl_stmt|;
name|QDockAreaLayoutInfo
modifier|*
name|info
argument_list|(
specifier|const
name|QList
operator|<
name|int
operator|>
operator|&
name|path
argument_list|)
decl_stmt|;
name|QDockAreaLayoutInfo
modifier|*
name|info
parameter_list|(
name|QWidget
modifier|*
name|widget
parameter_list|)
function_decl|;
enum|enum
block|{
comment|// sentinel values used to validate state data
name|SequenceMarker
init|=
literal|0xfc
block|,
name|TabMarker
init|=
literal|0xfa
block|,
name|WidgetMarker
init|=
literal|0xfb
block|}
enum|;
name|void
name|saveState
argument_list|(
name|QDataStream
operator|&
name|stream
argument_list|)
decl|const
decl_stmt|;
name|bool
name|restoreState
argument_list|(
name|QDataStream
operator|&
name|stream
argument_list|,
name|QList
operator|<
name|QDockWidget
operator|*
operator|>
operator|&
name|widgets
argument_list|,
name|bool
name|testing
argument_list|)
decl_stmt|;
name|void
name|fitItems
parameter_list|()
function_decl|;
name|bool
name|expansive
argument_list|(
name|Qt
operator|::
name|Orientation
name|o
argument_list|)
decl|const
decl_stmt|;
name|int
name|changeSize
parameter_list|(
name|int
name|index
parameter_list|,
name|int
name|size
parameter_list|,
name|bool
name|below
parameter_list|)
function_decl|;
name|QRect
name|itemRect
argument_list|(
name|int
name|index
argument_list|)
decl|const
decl_stmt|;
name|QRect
name|itemRect
argument_list|(
specifier|const
name|QList
operator|<
name|int
operator|>
operator|&
name|path
argument_list|)
decl|const
decl_stmt|;
name|QRect
name|separatorRect
argument_list|(
name|int
name|index
argument_list|)
decl|const
decl_stmt|;
name|QRect
name|separatorRect
argument_list|(
specifier|const
name|QList
operator|<
name|int
operator|>
operator|&
name|path
argument_list|)
decl|const
decl_stmt|;
name|void
name|clear
parameter_list|()
function_decl|;
name|bool
name|isEmpty
argument_list|()
specifier|const
expr_stmt|;
name|bool
name|hasFixedSize
argument_list|()
specifier|const
expr_stmt|;
name|QList
operator|<
name|int
operator|>
name|findSeparator
argument_list|(
argument|const QPoint&pos
argument_list|)
specifier|const
expr_stmt|;
name|int
name|next
argument_list|(
name|int
name|idx
argument_list|)
decl|const
decl_stmt|;
name|int
name|prev
argument_list|(
name|int
name|idx
argument_list|)
decl|const
decl_stmt|;
name|QList
operator|<
name|int
operator|>
name|indexOf
argument_list|(
argument|QWidget *widget
argument_list|)
specifier|const
expr_stmt|;
name|QList
operator|<
name|int
operator|>
name|indexOfPlaceHolder
argument_list|(
argument|const QString&objectName
argument_list|)
specifier|const
expr_stmt|;
name|void
name|apply
parameter_list|(
name|bool
name|animate
parameter_list|)
function_decl|;
name|void
name|paintSeparators
argument_list|(
name|QPainter
operator|*
name|p
argument_list|,
name|QWidget
operator|*
name|widget
argument_list|,
specifier|const
name|QRegion
operator|&
name|clip
argument_list|,
specifier|const
name|QPoint
operator|&
name|mouse
argument_list|)
decl|const
decl_stmt|;
name|QRegion
name|separatorRegion
argument_list|()
specifier|const
expr_stmt|;
name|int
name|separatorMove
parameter_list|(
name|int
name|index
parameter_list|,
name|int
name|delta
parameter_list|)
function_decl|;
name|QLayoutItem
modifier|*
name|itemAt
argument_list|(
name|int
operator|*
name|x
argument_list|,
name|int
name|index
argument_list|)
decl|const
decl_stmt|;
name|QLayoutItem
modifier|*
name|takeAt
parameter_list|(
name|int
modifier|*
name|x
parameter_list|,
name|int
name|index
parameter_list|)
function_decl|;
name|void
name|deleteAllLayoutItems
parameter_list|()
function_decl|;
name|QMainWindowLayout
operator|*
name|mainWindowLayout
argument_list|()
specifier|const
expr_stmt|;
specifier|const
name|int
modifier|*
name|sep
decl_stmt|;
name|mutable
name|QVector
operator|<
name|QWidget
operator|*
operator|>
name|separatorWidgets
expr_stmt|;
name|QInternal
operator|::
name|DockPosition
name|dockPos
expr_stmt|;
name|Qt
operator|::
name|Orientation
name|o
expr_stmt|;
name|QRect
name|rect
decl_stmt|;
name|QMainWindow
modifier|*
name|mainWindow
decl_stmt|;
name|QList
operator|<
name|QDockAreaLayoutItem
operator|>
name|item_list
expr_stmt|;
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
name|void
name|updateSeparatorWidgets
argument_list|()
specifier|const
expr_stmt|;
name|QSet
operator|<
name|QWidget
operator|*
operator|>
name|usedSeparatorWidgets
argument_list|()
specifier|const
expr_stmt|;
endif|#
directive|endif
comment|//QT_NO_TABBAR
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
name|quintptr
name|currentTabId
argument_list|()
specifier|const
expr_stmt|;
name|void
name|setCurrentTab
parameter_list|(
name|QWidget
modifier|*
name|widget
parameter_list|)
function_decl|;
name|void
name|setCurrentTabId
parameter_list|(
name|quintptr
name|id
parameter_list|)
function_decl|;
name|QRect
name|tabContentRect
argument_list|()
specifier|const
expr_stmt|;
name|bool
name|tabbed
decl_stmt|;
name|QTabBar
modifier|*
name|tabBar
decl_stmt|;
name|int
name|tabBarShape
decl_stmt|;
name|bool
name|updateTabBar
argument_list|()
specifier|const
expr_stmt|;
name|void
name|setTabBarShape
parameter_list|(
name|int
name|shape
parameter_list|)
function_decl|;
name|QSize
name|tabBarMinimumSize
argument_list|()
specifier|const
expr_stmt|;
name|QSize
name|tabBarSizeHint
argument_list|()
specifier|const
expr_stmt|;
name|QSet
operator|<
name|QTabBar
operator|*
operator|>
name|usedTabBars
argument_list|()
specifier|const
expr_stmt|;
endif|#
directive|endif
comment|// QT_NO_TABBAR
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_decl_stmt
name|class
name|Q_AUTOTEST_EXPORT
name|QDockAreaLayout
block|{
name|public
label|:
enum|enum
block|{
name|EmptyDropAreaSize
init|=
literal|80
block|}
enum|;
comment|// when a dock area is empty, how "wide" is it?
name|Qt
operator|::
name|DockWidgetArea
name|corners
index|[
literal|4
index|]
expr_stmt|;
comment|// use a Qt::Corner for indexing
name|QRect
name|rect
decl_stmt|;
name|QLayoutItem
modifier|*
name|centralWidgetItem
decl_stmt|;
name|QMainWindow
modifier|*
name|mainWindow
decl_stmt|;
name|QRect
name|centralWidgetRect
decl_stmt|;
name|QDockAreaLayout
argument_list|(
name|QMainWindow
operator|*
name|win
argument_list|)
expr_stmt|;
name|QDockAreaLayoutInfo
name|docks
index|[
literal|4
index|]
decl_stmt|;
name|int
name|sep
decl_stmt|;
comment|// separator extent
name|bool
name|fallbackToSizeHints
decl_stmt|;
comment|//determines if we should use the sizehint for the dock areas (true until the layout is restored or the separator is moved by user)
name|mutable
name|QVector
operator|<
name|QWidget
operator|*
operator|>
name|separatorWidgets
expr_stmt|;
name|bool
name|isValid
argument_list|()
specifier|const
expr_stmt|;
enum|enum
block|{
name|DockWidgetStateMarker
init|=
literal|0xfd
block|}
enum|;
name|void
name|saveState
argument_list|(
name|QDataStream
operator|&
name|stream
argument_list|)
decl|const
decl_stmt|;
name|bool
name|restoreState
argument_list|(
name|QDataStream
operator|&
name|stream
argument_list|,
specifier|const
name|QList
operator|<
name|QDockWidget
operator|*
operator|>
operator|&
name|widgets
argument_list|,
name|bool
name|testing
operator|=
name|false
argument_list|)
decl_stmt|;
name|QList
operator|<
name|int
operator|>
name|indexOfPlaceHolder
argument_list|(
argument|const QString&objectName
argument_list|)
specifier|const
expr_stmt|;
name|QList
operator|<
name|int
operator|>
name|indexOf
argument_list|(
argument|QWidget *dockWidget
argument_list|)
specifier|const
expr_stmt|;
name|QList
operator|<
name|int
operator|>
name|gapIndex
argument_list|(
argument|const QPoint&pos
argument_list|)
specifier|const
expr_stmt|;
name|QList
operator|<
name|int
operator|>
name|findSeparator
argument_list|(
argument|const QPoint&pos
argument_list|)
specifier|const
expr_stmt|;
name|QDockAreaLayoutItem
modifier|&
name|item
argument_list|(
specifier|const
name|QList
operator|<
name|int
operator|>
operator|&
name|path
argument_list|)
decl_stmt|;
name|QDockAreaLayoutInfo
modifier|*
name|info
argument_list|(
specifier|const
name|QList
operator|<
name|int
operator|>
operator|&
name|path
argument_list|)
decl_stmt|;
specifier|const
name|QDockAreaLayoutInfo
modifier|*
name|info
argument_list|(
specifier|const
name|QList
operator|<
name|int
operator|>
operator|&
name|path
argument_list|)
decl|const
decl_stmt|;
name|QDockAreaLayoutInfo
modifier|*
name|info
parameter_list|(
name|QWidget
modifier|*
name|widget
parameter_list|)
function_decl|;
name|QRect
name|itemRect
argument_list|(
specifier|const
name|QList
operator|<
name|int
operator|>
operator|&
name|path
argument_list|)
decl|const
decl_stmt|;
name|QRect
name|separatorRect
argument_list|(
name|int
name|index
argument_list|)
decl|const
decl_stmt|;
name|QRect
name|separatorRect
argument_list|(
specifier|const
name|QList
operator|<
name|int
operator|>
operator|&
name|path
argument_list|)
decl|const
decl_stmt|;
name|bool
name|insertGap
argument_list|(
specifier|const
name|QList
operator|<
name|int
operator|>
operator|&
name|path
argument_list|,
name|QLayoutItem
operator|*
name|dockWidgetItem
argument_list|)
decl_stmt|;
name|QLayoutItem
modifier|*
name|plug
argument_list|(
specifier|const
name|QList
operator|<
name|int
operator|>
operator|&
name|path
argument_list|)
decl_stmt|;
name|QLayoutItem
modifier|*
name|unplug
argument_list|(
specifier|const
name|QList
operator|<
name|int
operator|>
operator|&
name|path
argument_list|)
decl_stmt|;
name|void
name|remove
argument_list|(
specifier|const
name|QList
operator|<
name|int
operator|>
operator|&
name|path
argument_list|)
decl_stmt|;
name|void
name|fitLayout
parameter_list|()
function_decl|;
name|void
name|clear
parameter_list|()
function_decl|;
name|QSize
name|sizeHint
argument_list|()
specifier|const
expr_stmt|;
name|QSize
name|minimumSize
argument_list|()
specifier|const
expr_stmt|;
name|void
name|addDockWidget
argument_list|(
name|QInternal
operator|::
name|DockPosition
name|pos
argument_list|,
name|QDockWidget
operator|*
name|dockWidget
argument_list|,
name|Qt
operator|::
name|Orientation
name|orientation
argument_list|)
decl_stmt|;
name|bool
name|restoreDockWidget
parameter_list|(
name|QDockWidget
modifier|*
name|dockWidget
parameter_list|)
function_decl|;
name|void
name|splitDockWidget
argument_list|(
name|QDockWidget
operator|*
name|after
argument_list|,
name|QDockWidget
operator|*
name|dockWidget
argument_list|,
name|Qt
operator|::
name|Orientation
name|orientation
argument_list|)
decl_stmt|;
name|void
name|tabifyDockWidget
parameter_list|(
name|QDockWidget
modifier|*
name|first
parameter_list|,
name|QDockWidget
modifier|*
name|second
parameter_list|)
function_decl|;
name|void
name|apply
parameter_list|(
name|bool
name|animate
parameter_list|)
function_decl|;
name|void
name|paintSeparators
argument_list|(
name|QPainter
operator|*
name|p
argument_list|,
name|QWidget
operator|*
name|widget
argument_list|,
specifier|const
name|QRegion
operator|&
name|clip
argument_list|,
specifier|const
name|QPoint
operator|&
name|mouse
argument_list|)
decl|const
decl_stmt|;
name|QRegion
name|separatorRegion
argument_list|()
specifier|const
expr_stmt|;
name|int
name|separatorMove
argument_list|(
specifier|const
name|QList
operator|<
name|int
operator|>
operator|&
name|separator
argument_list|,
specifier|const
name|QPoint
operator|&
name|origin
argument_list|,
specifier|const
name|QPoint
operator|&
name|dest
argument_list|)
decl_stmt|;
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
name|void
name|updateSeparatorWidgets
argument_list|()
specifier|const
expr_stmt|;
endif|#
directive|endif
comment|//QT_NO_TABBAR
name|QLayoutItem
modifier|*
name|itemAt
argument_list|(
name|int
operator|*
name|x
argument_list|,
name|int
name|index
argument_list|)
decl|const
decl_stmt|;
name|QLayoutItem
modifier|*
name|takeAt
parameter_list|(
name|int
modifier|*
name|x
parameter_list|,
name|int
name|index
parameter_list|)
function_decl|;
name|void
name|deleteAllLayoutItems
parameter_list|()
function_decl|;
name|void
name|getGrid
argument_list|(
name|QVector
operator|<
name|QLayoutStruct
operator|>
operator|*
name|ver_struct_list
argument_list|,
name|QVector
operator|<
name|QLayoutStruct
operator|>
operator|*
name|hor_struct_list
argument_list|)
decl_stmt|;
name|void
name|setGrid
argument_list|(
name|QVector
operator|<
name|QLayoutStruct
operator|>
operator|*
name|ver_struct_list
argument_list|,
name|QVector
operator|<
name|QLayoutStruct
operator|>
operator|*
name|hor_struct_list
argument_list|)
decl_stmt|;
name|QRect
name|gapRect
argument_list|(
specifier|const
name|QList
operator|<
name|int
operator|>
operator|&
name|path
argument_list|)
decl|const
decl_stmt|;
name|void
name|keepSize
parameter_list|(
name|QDockWidget
modifier|*
name|w
parameter_list|)
function_decl|;
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
name|QSet
operator|<
name|QTabBar
operator|*
operator|>
name|usedTabBars
argument_list|()
specifier|const
expr_stmt|;
name|QSet
operator|<
name|QWidget
operator|*
operator|>
name|usedSeparatorWidgets
argument_list|()
specifier|const
expr_stmt|;
endif|#
directive|endif
comment|//QT_NO_TABBAR
name|void
name|styleChangedEvent
parameter_list|()
function_decl|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_QDOCKWIDGET
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QDOCKAREALAYOUT_P_H
end_comment
end_unit
