begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QACCESSIBLEWIDGET_H
end_ifndef
begin_define
DECL|macro|QACCESSIBLEWIDGET_H
define|#
directive|define
name|QACCESSIBLEWIDGET_H
end_define
begin_include
include|#
directive|include
file|<QtGui/qaccessibleobject.h>
end_include
begin_include
include|#
directive|include
file|<QtGui/private/qaccessible2_p.h>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
ifndef|#
directive|ifndef
name|QT_NO_ACCESSIBILITY
DECL|variable|QAccessibleWidgetPrivate
name|class
name|QAccessibleWidgetPrivate
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QAccessibleObject
name|class
name|Q_WIDGETS_EXPORT
name|QAccessibleWidget
range|:
name|public
name|QAccessibleObject
decl_stmt|,
name|public
name|QAccessibleActionInterface
block|{
name|public
label|:
name|explicit
name|QAccessibleWidget
argument_list|(
name|QWidget
operator|*
name|o
argument_list|,
name|QAccessible
operator|::
name|Role
name|r
operator|=
name|QAccessible
operator|::
name|Client
argument_list|,
specifier|const
name|QString
operator|&
name|name
operator|=
name|QString
argument_list|()
argument_list|)
decl_stmt|;
name|QWindow
operator|*
name|window
argument_list|()
specifier|const
expr_stmt|;
name|int
name|childCount
argument_list|()
specifier|const
expr_stmt|;
name|int
name|indexOfChild
argument_list|(
specifier|const
name|QAccessibleInterface
operator|*
name|child
argument_list|)
decl|const
decl_stmt|;
name|QVector
operator|<
name|QPair
operator|<
name|QAccessibleInterface
operator|*
operator|,
name|QAccessible
operator|::
name|Relation
operator|>
expr|>
name|relations
argument_list|(
argument|QAccessible::Relation match = QAccessible::AllRelations
argument_list|)
specifier|const
expr_stmt|;
name|QAccessibleInterface
operator|*
name|focusChild
argument_list|()
specifier|const
expr_stmt|;
name|QRect
name|rect
argument_list|()
specifier|const
expr_stmt|;
name|QAccessibleInterface
operator|*
name|parent
argument_list|()
specifier|const
expr_stmt|;
name|QAccessibleInterface
modifier|*
name|child
argument_list|(
name|int
name|index
argument_list|)
decl|const
decl_stmt|;
name|QString
name|text
argument_list|(
name|QAccessible
operator|::
name|Text
name|t
argument_list|)
decl|const
decl_stmt|;
name|QAccessible
operator|::
name|Role
name|role
argument_list|()
specifier|const
expr_stmt|;
name|QAccessible
operator|::
name|State
name|state
argument_list|()
specifier|const
expr_stmt|;
name|QColor
name|foregroundColor
argument_list|()
specifier|const
expr_stmt|;
name|QColor
name|backgroundColor
argument_list|()
specifier|const
expr_stmt|;
name|void
modifier|*
name|interface_cast
argument_list|(
name|QAccessible
operator|::
name|InterfaceType
name|t
argument_list|)
decl_stmt|;
comment|// QAccessibleActionInterface
name|QStringList
name|actionNames
argument_list|()
specifier|const
expr_stmt|;
name|void
name|doAction
parameter_list|(
specifier|const
name|QString
modifier|&
name|actionName
parameter_list|)
function_decl|;
name|QStringList
name|keyBindingsForAction
argument_list|(
specifier|const
name|QString
operator|&
name|actionName
argument_list|)
decl|const
decl_stmt|;
name|protected
label|:
operator|~
name|QAccessibleWidget
argument_list|()
expr_stmt|;
name|QWidget
operator|*
name|widget
argument_list|()
specifier|const
expr_stmt|;
name|QObject
operator|*
name|parentObject
argument_list|()
specifier|const
expr_stmt|;
name|void
name|addControllingSignal
parameter_list|(
specifier|const
name|QString
modifier|&
name|signal
parameter_list|)
function_decl|;
name|private
label|:
name|QAccessibleWidgetPrivate
modifier|*
name|d
decl_stmt|;
name|Q_DISABLE_COPY
argument_list|(
argument|QAccessibleWidget
argument_list|)
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_ACCESSIBILITY
end_comment
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QACCESSIBLEWIDGET_H
end_comment
end_unit
