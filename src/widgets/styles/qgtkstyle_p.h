begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QGTKSTYLE_P_H
end_ifndef
begin_define
DECL|macro|QGTKSTYLE_P_H
define|#
directive|define
name|QGTKSTYLE_P_H
end_define
begin_comment
comment|//
end_comment
begin_comment
comment|//  W A R N I N G
end_comment
begin_comment
comment|//  -------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// This file is not part of the Qt API.  It exists purely as an
end_comment
begin_comment
comment|// implementation detail.  This header file may change from version to
end_comment
begin_comment
comment|// version without notice, or even be removed.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// We mean it.
end_comment
begin_comment
comment|//
end_comment
begin_include
include|#
directive|include
file|<QtCore/qglobal.h>
end_include
begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_NO_STYLE_GTK
argument_list|)
end_if
begin_include
include|#
directive|include
file|<QtCore/qstring.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qstringbuilder.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qcoreapplication.h>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/QFileDialog>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/QGtkStyle>
end_include
begin_include
include|#
directive|include
file|<private/qwindowsstyle_p.h>
end_include
begin_undef
DECL|macro|signals
undef|#
directive|undef
name|signals
end_undef
begin_comment
DECL|macro|signals
comment|// Collides with GTK symbols
end_comment
begin_include
include|#
directive|include
file|<gtk/gtk.h>
end_include
begin_typedef
DECL|typedef|XID
typedef|typedef
name|unsigned
name|long
name|XID
typedef|;
end_typedef
begin_undef
DECL|macro|GTK_OBJECT_FLAGS
undef|#
directive|undef
name|GTK_OBJECT_FLAGS
end_undef
begin_define
DECL|macro|GTK_OBJECT_FLAGS
define|#
directive|define
name|GTK_OBJECT_FLAGS
parameter_list|(
name|obj
parameter_list|)
value|(((GtkObject*)(obj))->flags)
end_define
begin_define
DECL|macro|Q_GTK_IS_WIDGET
define|#
directive|define
name|Q_GTK_IS_WIDGET
parameter_list|(
name|widget
parameter_list|)
value|widget&& GTK_CHECK_TYPE ((widget), QGtkStylePrivate::gtk_widget_get_type())
end_define
begin_define
DECL|macro|QLS
define|#
directive|define
name|QLS
parameter_list|(
name|x
parameter_list|)
value|QLatin1String(x)
end_define
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
name|class
name|QHashableLatin1Literal
block|{
name|public
label|:
name|int
name|size
argument_list|()
specifier|const
block|{
return|return
name|m_size
return|;
block|}
specifier|const
name|char
operator|*
name|data
argument_list|()
specifier|const
block|{
return|return
name|m_data
return|;
block|}
ifdef|#
directive|ifdef
name|__SUNPRO_CC
name|QHashableLatin1Literal
argument_list|(
specifier|const
name|char
operator|*
name|str
argument_list|)
operator|:
name|m_size
argument_list|(
name|strlen
argument_list|(
name|str
argument_list|)
argument_list|)
operator|,
name|m_data
argument_list|(
argument|str
argument_list|)
block|{}
else|#
directive|else
name|template
operator|<
name|int
name|N
operator|>
name|QHashableLatin1Literal
argument_list|(
specifier|const
name|char
argument_list|(
operator|&
name|str
argument_list|)
index|[
name|N
index|]
argument_list|)
operator|:
name|m_size
argument_list|(
name|N
operator|-
literal|1
argument_list|)
operator|,
name|m_data
argument_list|(
argument|str
argument_list|)
block|{}
endif|#
directive|endif
name|QHashableLatin1Literal
argument_list|(
specifier|const
name|QHashableLatin1Literal
operator|&
name|other
argument_list|)
operator|:
name|m_size
argument_list|(
name|other
operator|.
name|m_size
argument_list|)
operator|,
name|m_data
argument_list|(
argument|other.m_data
argument_list|)
block|{}
name|QHashableLatin1Literal
operator|&
name|operator
operator|=
operator|(
specifier|const
name|QHashableLatin1Literal
operator|&
name|other
operator|)
block|{
if|if
condition|(
name|this
operator|==
operator|&
name|other
condition|)
return|return
operator|*
name|this
return|;
operator|*
name|const_cast
operator|<
name|int
operator|*
operator|>
operator|(
operator|&
name|m_size
operator|)
operator|=
name|other
operator|.
name|m_size
expr_stmt|;
operator|*
name|const_cast
operator|<
name|char
operator|*
operator|*
operator|>
operator|(
operator|&
name|m_data
operator|)
operator|=
name|const_cast
operator|<
name|char
operator|*
operator|>
operator|(
name|other
operator|.
name|m_data
operator|)
expr_stmt|;
return|return
operator|*
name|this
return|;
block|}
end_decl_stmt
begin_expr_stmt
name|QString
name|toString
argument_list|()
specifier|const
block|{
return|return
name|QString
operator|::
name|fromLatin1
argument_list|(
name|m_data
argument_list|,
name|m_size
argument_list|)
return|;
block|}
end_expr_stmt
begin_function
specifier|static
name|QHashableLatin1Literal
name|fromData
parameter_list|(
specifier|const
name|char
modifier|*
name|str
parameter_list|)
block|{
return|return
name|QHashableLatin1Literal
argument_list|(
name|str
argument_list|,
name|qstrlen
argument_list|(
name|str
argument_list|)
argument_list|)
return|;
block|}
end_function
begin_label
name|private
label|:
end_label
begin_macro
name|QHashableLatin1Literal
argument_list|(
argument|const char *str
argument_list|,
argument|int length
argument_list|)
end_macro
begin_expr_stmt
unit|:
name|m_size
argument_list|(
name|length
argument_list|)
operator|,
name|m_data
argument_list|(
argument|str
argument_list|)
block|{}
specifier|const
name|int
name|m_size
expr_stmt|;
end_expr_stmt
begin_decl_stmt
specifier|const
name|char
modifier|*
name|m_data
decl_stmt|;
end_decl_stmt
begin_expr_stmt
unit|};
name|bool
name|operator
operator|==
operator|(
specifier|const
name|QHashableLatin1Literal
operator|&
name|l1
operator|,
specifier|const
name|QHashableLatin1Literal
operator|&
name|l2
operator|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
DECL|function|operator
specifier|inline
name|bool
name|operator
operator|!=
operator|(
specifier|const
name|QHashableLatin1Literal
operator|&
name|l1
operator|,
specifier|const
name|QHashableLatin1Literal
operator|&
name|l2
operator|)
block|{
return|return
operator|!
name|operator
operator|==
operator|(
name|l1
operator|,
name|l2
operator|)
return|;
block|}
end_expr_stmt
begin_function_decl
name|uint
name|qHash
parameter_list|(
specifier|const
name|QHashableLatin1Literal
modifier|&
name|key
parameter_list|)
function_decl|;
end_function_decl
begin_decl_stmt
name|QT_END_NAMESPACE
DECL|variable|GConf
name|class
name|GConf
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|GConfClient
name|class
name|GConfClient
decl_stmt|;
end_decl_stmt
begin_typedef
DECL|typedef|Display
typedef|typedef
name|struct
name|_XDisplay
name|Display
typedef|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gconf_client_get_default
typedef|typedef
name|GConfClient
modifier|*
function_decl|(
modifier|*
name|Ptr_gconf_client_get_default
function_decl|)
parameter_list|()
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gconf_client_get_string
typedef|typedef
name|char
modifier|*
function_decl|(
modifier|*
name|Ptr_gconf_client_get_string
function_decl|)
parameter_list|(
name|GConfClient
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|GError
modifier|*
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gconf_client_get_bool
typedef|typedef
name|bool
function_decl|(
modifier|*
name|Ptr_gconf_client_get_bool
function_decl|)
parameter_list|(
name|GConfClient
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|GError
modifier|*
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_init
typedef|typedef
name|void
function_decl|(
modifier|*
name|Ptr_gtk_init
function_decl|)
parameter_list|(
name|int
modifier|*
parameter_list|,
name|char
modifier|*
modifier|*
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_window_new
typedef|typedef
name|GtkWidget
modifier|*
function_decl|(
modifier|*
name|Ptr_gtk_window_new
function_decl|)
parameter_list|(
name|GtkWindowType
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_style_attach
typedef|typedef
name|GtkStyle
modifier|*
function_decl|(
modifier|*
name|Ptr_gtk_style_attach
function_decl|)
parameter_list|(
name|GtkStyle
modifier|*
parameter_list|,
name|GdkWindow
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_widget_destroy
typedef|typedef
name|void
function_decl|(
modifier|*
name|Ptr_gtk_widget_destroy
function_decl|)
parameter_list|(
name|GtkWidget
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_widget_realize
typedef|typedef
name|void
function_decl|(
modifier|*
name|Ptr_gtk_widget_realize
function_decl|)
parameter_list|(
name|GtkWidget
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_widget_set_default_direction
typedef|typedef
name|void
function_decl|(
modifier|*
name|Ptr_gtk_widget_set_default_direction
function_decl|)
parameter_list|(
name|GtkTextDirection
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_widget_modify_color
typedef|typedef
name|void
function_decl|(
modifier|*
name|Ptr_gtk_widget_modify_color
function_decl|)
parameter_list|(
name|GtkWidget
modifier|*
name|widget
parameter_list|,
name|GtkStateType
name|state
parameter_list|,
specifier|const
name|GdkColor
modifier|*
name|color
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_arrow_new
typedef|typedef
name|GtkWidget
modifier|*
function_decl|(
modifier|*
name|Ptr_gtk_arrow_new
function_decl|)
parameter_list|(
name|GtkArrowType
parameter_list|,
name|GtkShadowType
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_menu_item_new_with_label
typedef|typedef
name|GtkWidget
modifier|*
function_decl|(
modifier|*
name|Ptr_gtk_menu_item_new_with_label
function_decl|)
parameter_list|(
specifier|const
name|gchar
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_separator_menu_item_new
typedef|typedef
name|GtkWidget
modifier|*
function_decl|(
modifier|*
name|Ptr_gtk_separator_menu_item_new
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_check_menu_item_new_with_label
typedef|typedef
name|GtkWidget
modifier|*
function_decl|(
modifier|*
name|Ptr_gtk_check_menu_item_new_with_label
function_decl|)
parameter_list|(
specifier|const
name|gchar
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_menu_bar_new
typedef|typedef
name|GtkWidget
modifier|*
function_decl|(
modifier|*
name|Ptr_gtk_menu_bar_new
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_menu_new
typedef|typedef
name|GtkWidget
modifier|*
function_decl|(
modifier|*
name|Ptr_gtk_menu_new
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_combo_box_entry_new
typedef|typedef
name|GtkWidget
modifier|*
function_decl|(
modifier|*
name|Ptr_gtk_combo_box_entry_new
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_toolbar_new
typedef|typedef
name|GtkWidget
modifier|*
function_decl|(
modifier|*
name|Ptr_gtk_toolbar_new
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_spin_button_new
typedef|typedef
name|GtkWidget
modifier|*
function_decl|(
modifier|*
name|Ptr_gtk_spin_button_new
function_decl|)
parameter_list|(
name|GtkAdjustment
modifier|*
parameter_list|,
name|double
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_button_new
typedef|typedef
name|GtkWidget
modifier|*
function_decl|(
modifier|*
name|Ptr_gtk_button_new
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_tool_button_new
typedef|typedef
name|GtkWidget
modifier|*
function_decl|(
modifier|*
name|Ptr_gtk_tool_button_new
function_decl|)
parameter_list|(
name|GtkWidget
modifier|*
parameter_list|,
specifier|const
name|gchar
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_hbutton_box_new
typedef|typedef
name|GtkWidget
modifier|*
function_decl|(
modifier|*
name|Ptr_gtk_hbutton_box_new
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_check_button_new
typedef|typedef
name|GtkWidget
modifier|*
function_decl|(
modifier|*
name|Ptr_gtk_check_button_new
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_radio_button_new
typedef|typedef
name|GtkWidget
modifier|*
function_decl|(
modifier|*
name|Ptr_gtk_radio_button_new
function_decl|)
parameter_list|(
name|GSList
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_notebook_new
typedef|typedef
name|GtkWidget
modifier|*
function_decl|(
modifier|*
name|Ptr_gtk_notebook_new
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_progress_bar_new
typedef|typedef
name|GtkWidget
modifier|*
function_decl|(
modifier|*
name|Ptr_gtk_progress_bar_new
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_hscale_new
typedef|typedef
name|GtkWidget
modifier|*
function_decl|(
modifier|*
name|Ptr_gtk_hscale_new
function_decl|)
parameter_list|(
name|GtkAdjustment
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_vscale_new
typedef|typedef
name|GtkWidget
modifier|*
function_decl|(
modifier|*
name|Ptr_gtk_vscale_new
function_decl|)
parameter_list|(
name|GtkAdjustment
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_hscrollbar_new
typedef|typedef
name|GtkWidget
modifier|*
function_decl|(
modifier|*
name|Ptr_gtk_hscrollbar_new
function_decl|)
parameter_list|(
name|GtkAdjustment
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_vscrollbar_new
typedef|typedef
name|GtkWidget
modifier|*
function_decl|(
modifier|*
name|Ptr_gtk_vscrollbar_new
function_decl|)
parameter_list|(
name|GtkAdjustment
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_scrolled_window_new
typedef|typedef
name|GtkWidget
modifier|*
function_decl|(
modifier|*
name|Ptr_gtk_scrolled_window_new
function_decl|)
parameter_list|(
name|GtkAdjustment
modifier|*
parameter_list|,
name|GtkAdjustment
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_check_version
typedef|typedef
name|gchar
modifier|*
function_decl|(
modifier|*
name|Ptr_gtk_check_version
function_decl|)
parameter_list|(
name|guint
parameter_list|,
name|guint
parameter_list|,
name|guint
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_separator_tool_item_new
typedef|typedef
name|GtkToolItem
modifier|*
function_decl|(
modifier|*
name|Ptr_gtk_separator_tool_item_new
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_entry_new
typedef|typedef
name|GtkWidget
modifier|*
function_decl|(
modifier|*
name|Ptr_gtk_entry_new
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_tree_view_new
typedef|typedef
name|GtkWidget
modifier|*
function_decl|(
modifier|*
name|Ptr_gtk_tree_view_new
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_tree_view_get_column
typedef|typedef
name|GtkTreeViewColumn
modifier|*
function_decl|(
modifier|*
name|Ptr_gtk_tree_view_get_column
function_decl|)
parameter_list|(
name|GtkTreeView
modifier|*
parameter_list|,
name|gint
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_combo_box_new
typedef|typedef
name|GtkWidget
modifier|*
function_decl|(
modifier|*
name|Ptr_gtk_combo_box_new
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_frame_new
typedef|typedef
name|GtkWidget
modifier|*
function_decl|(
modifier|*
name|Ptr_gtk_frame_new
function_decl|)
parameter_list|(
specifier|const
name|gchar
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_expander_new
typedef|typedef
name|GtkWidget
modifier|*
function_decl|(
modifier|*
name|Ptr_gtk_expander_new
function_decl|)
parameter_list|(
specifier|const
name|gchar
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_statusbar_new
typedef|typedef
name|GtkWidget
modifier|*
function_decl|(
modifier|*
name|Ptr_gtk_statusbar_new
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_settings_get_default
typedef|typedef
name|GtkSettings
modifier|*
function_decl|(
modifier|*
name|Ptr_gtk_settings_get_default
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_range_get_adjustment
typedef|typedef
name|GtkAdjustment
modifier|*
function_decl|(
modifier|*
name|Ptr_gtk_range_get_adjustment
function_decl|)
parameter_list|(
name|GtkRange
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_range_set_adjustment
typedef|typedef
name|void
function_decl|(
modifier|*
name|Ptr_gtk_range_set_adjustment
function_decl|)
parameter_list|(
name|GtkRange
modifier|*
parameter_list|,
name|GtkAdjustment
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_progress_configure
typedef|typedef
name|void
function_decl|(
modifier|*
name|Ptr_gtk_progress_configure
function_decl|)
parameter_list|(
name|GtkProgress
modifier|*
parameter_list|,
name|double
parameter_list|,
name|double
parameter_list|,
name|double
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_range_set_inverted
typedef|typedef
name|void
function_decl|(
modifier|*
name|Ptr_gtk_range_set_inverted
function_decl|)
parameter_list|(
name|GtkRange
modifier|*
parameter_list|,
name|bool
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_container_add
typedef|typedef
name|void
function_decl|(
modifier|*
name|Ptr_gtk_container_add
function_decl|)
parameter_list|(
name|GtkContainer
modifier|*
name|container
parameter_list|,
name|GtkWidget
modifier|*
name|widget
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_icon_factory_lookup_default
typedef|typedef
name|GtkIconSet
modifier|*
function_decl|(
modifier|*
name|Ptr_gtk_icon_factory_lookup_default
function_decl|)
parameter_list|(
specifier|const
name|gchar
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_icon_theme_get_default
typedef|typedef
name|GtkIconTheme
modifier|*
function_decl|(
modifier|*
name|Ptr_gtk_icon_theme_get_default
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_widget_style_get
typedef|typedef
name|void
function_decl|(
modifier|*
name|Ptr_gtk_widget_style_get
function_decl|)
parameter_list|(
name|GtkWidget
modifier|*
parameter_list|,
specifier|const
name|gchar
modifier|*
name|first_property_name
parameter_list|,
modifier|...
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_tree_view_column_new
typedef|typedef
name|GtkTreeViewColumn
modifier|*
function_decl|(
modifier|*
name|Ptr_gtk_tree_view_column_new
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_fixed_new
typedef|typedef
name|GtkWidget
modifier|*
function_decl|(
modifier|*
name|Ptr_gtk_fixed_new
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_icon_set_render_icon
typedef|typedef
name|GdkPixbuf
modifier|*
function_decl|(
modifier|*
name|Ptr_gtk_icon_set_render_icon
function_decl|)
parameter_list|(
name|GtkIconSet
modifier|*
parameter_list|,
name|GtkStyle
modifier|*
parameter_list|,
name|GtkTextDirection
parameter_list|,
name|GtkStateType
parameter_list|,
name|GtkIconSize
parameter_list|,
name|GtkWidget
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_tree_view_append_column
typedef|typedef
name|void
function_decl|(
modifier|*
name|Ptr_gtk_tree_view_append_column
function_decl|)
parameter_list|(
name|GtkTreeView
modifier|*
parameter_list|,
name|GtkTreeViewColumn
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_paint_check
typedef|typedef
name|void
function_decl|(
modifier|*
name|Ptr_gtk_paint_check
function_decl|)
parameter_list|(
name|GtkStyle
modifier|*
parameter_list|,
name|GdkWindow
modifier|*
parameter_list|,
name|GtkStateType
parameter_list|,
name|GtkShadowType
parameter_list|,
specifier|const
name|GdkRectangle
modifier|*
parameter_list|,
name|GtkWidget
modifier|*
parameter_list|,
specifier|const
name|gchar
modifier|*
parameter_list|,
name|gint
parameter_list|,
name|gint
parameter_list|,
name|gint
parameter_list|,
name|gint
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_paint_box
typedef|typedef
name|void
function_decl|(
modifier|*
name|Ptr_gtk_paint_box
function_decl|)
parameter_list|(
name|GtkStyle
modifier|*
parameter_list|,
name|GdkWindow
modifier|*
parameter_list|,
name|GtkStateType
parameter_list|,
name|GtkShadowType
parameter_list|,
specifier|const
name|GdkRectangle
modifier|*
parameter_list|,
name|GtkWidget
modifier|*
parameter_list|,
specifier|const
name|gchar
modifier|*
parameter_list|,
name|gint
parameter_list|,
name|gint
parameter_list|,
name|gint
parameter_list|,
name|gint
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_paint_box_gap
typedef|typedef
name|void
function_decl|(
modifier|*
name|Ptr_gtk_paint_box_gap
function_decl|)
parameter_list|(
name|GtkStyle
modifier|*
parameter_list|,
name|GdkWindow
modifier|*
parameter_list|,
name|GtkStateType
parameter_list|,
name|GtkShadowType
parameter_list|,
specifier|const
name|GdkRectangle
modifier|*
parameter_list|,
name|GtkWidget
modifier|*
parameter_list|,
specifier|const
name|gchar
modifier|*
parameter_list|,
name|gint
parameter_list|,
name|gint
parameter_list|,
name|gint
parameter_list|,
name|gint
parameter_list|,
name|GtkPositionType
parameter_list|,
name|gint
name|gap_x
parameter_list|,
name|gint
name|gap_width
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_paint_resize_grip
typedef|typedef
name|void
function_decl|(
modifier|*
name|Ptr_gtk_paint_resize_grip
function_decl|)
parameter_list|(
name|GtkStyle
modifier|*
parameter_list|,
name|GdkWindow
modifier|*
parameter_list|,
name|GtkStateType
parameter_list|,
specifier|const
name|GdkRectangle
modifier|*
parameter_list|,
name|GtkWidget
modifier|*
parameter_list|,
specifier|const
name|gchar
modifier|*
parameter_list|,
name|GdkWindowEdge
parameter_list|,
name|gint
parameter_list|,
name|gint
parameter_list|,
name|gint
parameter_list|,
name|gint
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_paint_focus
typedef|typedef
name|void
function_decl|(
modifier|*
name|Ptr_gtk_paint_focus
function_decl|)
parameter_list|(
name|GtkStyle
modifier|*
parameter_list|,
name|GdkWindow
modifier|*
parameter_list|,
name|GtkStateType
parameter_list|,
specifier|const
name|GdkRectangle
modifier|*
parameter_list|,
name|GtkWidget
modifier|*
parameter_list|,
specifier|const
name|gchar
modifier|*
parameter_list|,
name|gint
parameter_list|,
name|gint
parameter_list|,
name|gint
parameter_list|,
name|gint
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_paint_shadow
typedef|typedef
name|void
function_decl|(
modifier|*
name|Ptr_gtk_paint_shadow
function_decl|)
parameter_list|(
name|GtkStyle
modifier|*
parameter_list|,
name|GdkWindow
modifier|*
parameter_list|,
name|GtkStateType
parameter_list|,
name|GtkShadowType
parameter_list|,
specifier|const
name|GdkRectangle
modifier|*
parameter_list|,
name|GtkWidget
modifier|*
parameter_list|,
specifier|const
name|gchar
modifier|*
parameter_list|,
name|gint
parameter_list|,
name|gint
parameter_list|,
name|gint
parameter_list|,
name|gint
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_paint_slider
typedef|typedef
name|void
function_decl|(
modifier|*
name|Ptr_gtk_paint_slider
function_decl|)
parameter_list|(
name|GtkStyle
modifier|*
parameter_list|,
name|GdkWindow
modifier|*
parameter_list|,
name|GtkStateType
parameter_list|,
name|GtkShadowType
parameter_list|,
specifier|const
name|GdkRectangle
modifier|*
parameter_list|,
name|GtkWidget
modifier|*
parameter_list|,
specifier|const
name|gchar
modifier|*
parameter_list|,
name|gint
parameter_list|,
name|gint
parameter_list|,
name|gint
parameter_list|,
name|gint
parameter_list|,
name|GtkOrientation
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_paint_expander
typedef|typedef
name|void
function_decl|(
modifier|*
name|Ptr_gtk_paint_expander
function_decl|)
parameter_list|(
name|GtkStyle
modifier|*
parameter_list|,
name|GdkWindow
modifier|*
parameter_list|,
name|GtkStateType
parameter_list|,
specifier|const
name|GdkRectangle
modifier|*
parameter_list|,
name|GtkWidget
modifier|*
parameter_list|,
specifier|const
name|gchar
modifier|*
parameter_list|,
name|gint
parameter_list|,
name|gint
parameter_list|,
name|GtkExpanderStyle
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_paint_handle
typedef|typedef
name|void
function_decl|(
modifier|*
name|Ptr_gtk_paint_handle
function_decl|)
parameter_list|(
name|GtkStyle
modifier|*
parameter_list|,
name|GdkWindow
modifier|*
parameter_list|,
name|GtkStateType
parameter_list|,
name|GtkShadowType
parameter_list|,
specifier|const
name|GdkRectangle
modifier|*
parameter_list|,
name|GtkWidget
modifier|*
parameter_list|,
specifier|const
name|gchar
modifier|*
parameter_list|,
name|gint
parameter_list|,
name|gint
parameter_list|,
name|gint
parameter_list|,
name|gint
parameter_list|,
name|GtkOrientation
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_paint_arrow
typedef|typedef
name|void
function_decl|(
modifier|*
name|Ptr_gtk_paint_arrow
function_decl|)
parameter_list|(
name|GtkStyle
modifier|*
parameter_list|,
name|GdkWindow
modifier|*
parameter_list|,
name|GtkStateType
parameter_list|,
name|GtkShadowType
parameter_list|,
specifier|const
name|GdkRectangle
modifier|*
parameter_list|,
name|GtkWidget
modifier|*
parameter_list|,
specifier|const
name|gchar
modifier|*
parameter_list|,
name|GtkArrowType
parameter_list|,
name|gboolean
parameter_list|,
name|gint
parameter_list|,
name|gint
parameter_list|,
name|gint
parameter_list|,
name|gint
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_paint_option
typedef|typedef
name|void
function_decl|(
modifier|*
name|Ptr_gtk_paint_option
function_decl|)
parameter_list|(
name|GtkStyle
modifier|*
parameter_list|,
name|GdkWindow
modifier|*
parameter_list|,
name|GtkStateType
parameter_list|,
name|GtkShadowType
parameter_list|,
specifier|const
name|GdkRectangle
modifier|*
parameter_list|,
name|GtkWidget
modifier|*
parameter_list|,
specifier|const
name|gchar
modifier|*
parameter_list|,
name|gint
parameter_list|,
name|gint
parameter_list|,
name|gint
parameter_list|,
name|gint
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_paint_flat_box
typedef|typedef
name|void
function_decl|(
modifier|*
name|Ptr_gtk_paint_flat_box
function_decl|)
parameter_list|(
name|GtkStyle
modifier|*
parameter_list|,
name|GdkWindow
modifier|*
parameter_list|,
name|GtkStateType
parameter_list|,
name|GtkShadowType
parameter_list|,
specifier|const
name|GdkRectangle
modifier|*
parameter_list|,
name|GtkWidget
modifier|*
parameter_list|,
specifier|const
name|gchar
modifier|*
parameter_list|,
name|gint
parameter_list|,
name|gint
parameter_list|,
name|gint
parameter_list|,
name|gint
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_paint_extension
typedef|typedef
name|void
function_decl|(
modifier|*
name|Ptr_gtk_paint_extension
function_decl|)
parameter_list|(
name|GtkStyle
modifier|*
parameter_list|,
name|GdkWindow
modifier|*
parameter_list|,
name|GtkStateType
parameter_list|,
name|GtkShadowType
parameter_list|,
specifier|const
name|GdkRectangle
modifier|*
parameter_list|,
name|GtkWidget
modifier|*
parameter_list|,
specifier|const
name|gchar
modifier|*
parameter_list|,
name|gint
parameter_list|,
name|gint
parameter_list|,
name|gint
parameter_list|,
name|gint
parameter_list|,
name|GtkPositionType
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_adjustment_configure
typedef|typedef
name|void
function_decl|(
modifier|*
name|Ptr_gtk_adjustment_configure
function_decl|)
parameter_list|(
name|GtkAdjustment
modifier|*
parameter_list|,
name|double
parameter_list|,
name|double
parameter_list|,
name|double
parameter_list|,
name|double
parameter_list|,
name|double
parameter_list|,
name|double
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_adjustment_new
typedef|typedef
name|GtkObject
modifier|*
function_decl|(
modifier|*
name|Ptr_gtk_adjustment_new
function_decl|)
parameter_list|(
name|double
parameter_list|,
name|double
parameter_list|,
name|double
parameter_list|,
name|double
parameter_list|,
name|double
parameter_list|,
name|double
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_paint_hline
typedef|typedef
name|void
function_decl|(
modifier|*
name|Ptr_gtk_paint_hline
function_decl|)
parameter_list|(
name|GtkStyle
modifier|*
parameter_list|,
name|GdkWindow
modifier|*
parameter_list|,
name|GtkStateType
parameter_list|,
specifier|const
name|GdkRectangle
modifier|*
parameter_list|,
name|GtkWidget
modifier|*
parameter_list|,
specifier|const
name|gchar
modifier|*
parameter_list|,
name|gint
parameter_list|,
name|gint
parameter_list|,
name|gint
name|y
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_paint_vline
typedef|typedef
name|void
function_decl|(
modifier|*
name|Ptr_gtk_paint_vline
function_decl|)
parameter_list|(
name|GtkStyle
modifier|*
parameter_list|,
name|GdkWindow
modifier|*
parameter_list|,
name|GtkStateType
parameter_list|,
specifier|const
name|GdkRectangle
modifier|*
parameter_list|,
name|GtkWidget
modifier|*
parameter_list|,
specifier|const
name|gchar
modifier|*
parameter_list|,
name|gint
parameter_list|,
name|gint
parameter_list|,
name|gint
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_menu_item_set_submenu
typedef|typedef
name|void
function_decl|(
modifier|*
name|Ptr_gtk_menu_item_set_submenu
function_decl|)
parameter_list|(
name|GtkMenuItem
modifier|*
parameter_list|,
name|GtkWidget
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_container_forall
typedef|typedef
name|void
function_decl|(
modifier|*
name|Ptr_gtk_container_forall
function_decl|)
parameter_list|(
name|GtkContainer
modifier|*
parameter_list|,
name|GtkCallback
parameter_list|,
name|gpointer
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_widget_size_allocate
typedef|typedef
name|void
function_decl|(
modifier|*
name|Ptr_gtk_widget_size_allocate
function_decl|)
parameter_list|(
name|GtkWidget
modifier|*
parameter_list|,
name|GtkAllocation
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_widget_size_request
typedef|typedef
name|void
function_decl|(
modifier|*
name|Ptr_gtk_widget_size_request
function_decl|)
parameter_list|(
name|GtkWidget
modifier|*
name|widget
parameter_list|,
name|GtkRequisition
modifier|*
name|requisition
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_widget_set_direction
typedef|typedef
name|void
function_decl|(
modifier|*
name|Ptr_gtk_widget_set_direction
function_decl|)
parameter_list|(
name|GtkWidget
modifier|*
parameter_list|,
name|GtkTextDirection
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_widget_path
typedef|typedef
name|void
function_decl|(
modifier|*
name|Ptr_gtk_widget_path
function_decl|)
parameter_list|(
name|GtkWidget
modifier|*
parameter_list|,
name|guint
modifier|*
parameter_list|,
name|gchar
modifier|*
modifier|*
parameter_list|,
name|gchar
modifier|*
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_toolbar_insert
typedef|typedef
name|void
function_decl|(
modifier|*
name|Ptr_gtk_toolbar_insert
function_decl|)
parameter_list|(
name|GtkToolbar
modifier|*
name|toolbar
parameter_list|,
name|GtkToolItem
modifier|*
name|item
parameter_list|,
name|int
name|pos
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_menu_shell_append
typedef|typedef
name|void
function_decl|(
modifier|*
name|Ptr_gtk_menu_shell_append
function_decl|)
parameter_list|(
name|GtkMenuShell
modifier|*
parameter_list|,
name|GtkWidget
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_container_get_type
typedef|typedef
name|GtkType
function_decl|(
modifier|*
name|Ptr_gtk_container_get_type
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_window_get_type
typedef|typedef
name|GtkType
function_decl|(
modifier|*
name|Ptr_gtk_window_get_type
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_widget_get_type
typedef|typedef
name|GtkType
function_decl|(
modifier|*
name|Ptr_gtk_widget_get_type
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_widget_get_parent
typedef|typedef
name|GtkWidget
modifier|*
function_decl|(
modifier|*
name|Ptr_gtk_widget_get_parent
function_decl|)
parameter_list|(
name|GtkWidget
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_widget_is_toplevel
typedef|typedef
name|gboolean
function_decl|(
modifier|*
name|Ptr_gtk_widget_is_toplevel
function_decl|)
parameter_list|(
name|GtkWidget
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_rc_get_style_by_paths
typedef|typedef
name|GtkStyle
modifier|*
function_decl|(
modifier|*
name|Ptr_gtk_rc_get_style_by_paths
function_decl|)
parameter_list|(
name|GtkSettings
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|,
name|GType
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_pango_font_description_get_size
typedef|typedef
name|gint
function_decl|(
modifier|*
name|Ptr_pango_font_description_get_size
function_decl|)
parameter_list|(
specifier|const
name|PangoFontDescription
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_pango_font_description_get_weight
typedef|typedef
name|PangoWeight
function_decl|(
modifier|*
name|Ptr_pango_font_description_get_weight
function_decl|)
parameter_list|(
specifier|const
name|PangoFontDescription
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_pango_font_description_get_family
typedef|typedef
specifier|const
name|char
modifier|*
function_decl|(
modifier|*
name|Ptr_pango_font_description_get_family
function_decl|)
parameter_list|(
specifier|const
name|PangoFontDescription
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_pango_font_description_get_style
typedef|typedef
name|PangoStyle
function_decl|(
modifier|*
name|Ptr_pango_font_description_get_style
function_decl|)
parameter_list|(
specifier|const
name|PangoFontDescription
modifier|*
name|desc
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_file_chooser_set_current_folder
typedef|typedef
name|gboolean
function_decl|(
modifier|*
name|Ptr_gtk_file_chooser_set_current_folder
function_decl|)
parameter_list|(
name|GtkFileChooser
modifier|*
parameter_list|,
specifier|const
name|gchar
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_file_filter_new
typedef|typedef
name|GtkFileFilter
modifier|*
function_decl|(
modifier|*
name|Ptr_gtk_file_filter_new
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_file_filter_set_name
typedef|typedef
name|void
function_decl|(
modifier|*
name|Ptr_gtk_file_filter_set_name
function_decl|)
parameter_list|(
name|GtkFileFilter
modifier|*
parameter_list|,
specifier|const
name|gchar
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_file_filter_add_pattern
typedef|typedef
name|void
function_decl|(
modifier|*
name|Ptr_gtk_file_filter_add_pattern
function_decl|)
parameter_list|(
name|GtkFileFilter
modifier|*
name|filter
parameter_list|,
specifier|const
name|gchar
modifier|*
name|pattern
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_file_chooser_add_filter
typedef|typedef
name|void
function_decl|(
modifier|*
name|Ptr_gtk_file_chooser_add_filter
function_decl|)
parameter_list|(
name|GtkFileChooser
modifier|*
name|chooser
parameter_list|,
name|GtkFileFilter
modifier|*
name|filter
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_file_chooser_set_filter
typedef|typedef
name|void
function_decl|(
modifier|*
name|Ptr_gtk_file_chooser_set_filter
function_decl|)
parameter_list|(
name|GtkFileChooser
modifier|*
name|chooser
parameter_list|,
name|GtkFileFilter
modifier|*
name|filter
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_file_chooser_get_filter
typedef|typedef
name|GtkFileFilter
modifier|*
function_decl|(
modifier|*
name|Ptr_gtk_file_chooser_get_filter
function_decl|)
parameter_list|(
name|GtkFileChooser
modifier|*
name|chooser
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_file_chooser_get_filename
typedef|typedef
name|gchar
modifier|*
function_decl|(
modifier|*
name|Ptr_gtk_file_chooser_get_filename
function_decl|)
parameter_list|(
name|GtkFileChooser
modifier|*
name|chooser
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_file_chooser_get_filenames
typedef|typedef
name|GSList
modifier|*
function_decl|(
modifier|*
name|Ptr_gtk_file_chooser_get_filenames
function_decl|)
parameter_list|(
name|GtkFileChooser
modifier|*
name|chooser
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_file_chooser_dialog_new
typedef|typedef
name|GtkWidget
modifier|*
function_decl|(
modifier|*
name|Ptr_gtk_file_chooser_dialog_new
function_decl|)
parameter_list|(
specifier|const
name|gchar
modifier|*
name|title
parameter_list|,
name|GtkWindow
modifier|*
name|parent
parameter_list|,
name|GtkFileChooserAction
name|action
parameter_list|,
specifier|const
name|gchar
modifier|*
name|first_button_text
parameter_list|,
modifier|...
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_file_chooser_set_current_name
typedef|typedef
name|void
function_decl|(
modifier|*
name|Ptr_gtk_file_chooser_set_current_name
function_decl|)
parameter_list|(
name|GtkFileChooser
modifier|*
parameter_list|,
specifier|const
name|gchar
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_file_chooser_set_filename
typedef|typedef
name|gboolean
function_decl|(
modifier|*
name|Ptr_gtk_file_chooser_set_filename
function_decl|)
parameter_list|(
name|GtkFileChooser
modifier|*
name|chooser
parameter_list|,
specifier|const
name|gchar
modifier|*
name|name
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_dialog_run
typedef|typedef
name|gint
function_decl|(
modifier|*
name|Ptr_gtk_dialog_run
function_decl|)
parameter_list|(
name|GtkDialog
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_border_free
typedef|typedef
name|void
function_decl|(
modifier|*
name|Ptr_gtk_border_free
function_decl|)
parameter_list|(
name|GtkBorder
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_widget_get_allocation
typedef|typedef
name|void
function_decl|(
modifier|*
name|Ptr_gtk_widget_get_allocation
function_decl|)
parameter_list|(
name|GtkWidget
modifier|*
parameter_list|,
name|GtkAllocation
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gtk_widget_set_allocation
typedef|typedef
name|void
function_decl|(
modifier|*
name|Ptr_gtk_widget_set_allocation
function_decl|)
parameter_list|(
name|GtkWidget
modifier|*
parameter_list|,
specifier|const
name|GtkAllocation
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gdk_pixbuf_get_pixels
typedef|typedef
name|guchar
modifier|*
function_decl|(
modifier|*
name|Ptr_gdk_pixbuf_get_pixels
function_decl|)
parameter_list|(
specifier|const
name|GdkPixbuf
modifier|*
name|pixbuf
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gdk_pixbuf_get_width
typedef|typedef
name|int
function_decl|(
modifier|*
name|Ptr_gdk_pixbuf_get_width
function_decl|)
parameter_list|(
specifier|const
name|GdkPixbuf
modifier|*
name|pixbuf
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gdk_color_free
typedef|typedef
name|void
function_decl|(
modifier|*
name|Ptr_gdk_color_free
function_decl|)
parameter_list|(
specifier|const
name|GdkColor
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gdk_pixbuf_get_height
typedef|typedef
name|int
function_decl|(
modifier|*
name|Ptr_gdk_pixbuf_get_height
function_decl|)
parameter_list|(
specifier|const
name|GdkPixbuf
modifier|*
name|pixbuf
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gdk_pixbuf_get_from_drawable
typedef|typedef
name|GdkPixbuf
modifier|*
function_decl|(
modifier|*
name|Ptr_gdk_pixbuf_get_from_drawable
function_decl|)
parameter_list|(
name|GdkPixbuf
modifier|*
name|dest
parameter_list|,
name|GdkDrawable
modifier|*
name|src
parameter_list|,
name|GdkColormap
modifier|*
name|cmap
parameter_list|,
name|int
name|src_x
parameter_list|,
name|int
name|src_y
parameter_list|,
name|int
name|dest_x
parameter_list|,
name|int
name|dest_y
parameter_list|,
name|int
name|width
parameter_list|,
name|int
name|height
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gdk_pixmap_new
typedef|typedef
name|GdkPixmap
modifier|*
function_decl|(
modifier|*
name|Ptr_gdk_pixmap_new
function_decl|)
parameter_list|(
name|GdkDrawable
modifier|*
name|drawable
parameter_list|,
name|gint
name|width
parameter_list|,
name|gint
name|height
parameter_list|,
name|gint
name|depth
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gdk_pixbuf_new
typedef|typedef
name|GdkPixbuf
modifier|*
function_decl|(
modifier|*
name|Ptr_gdk_pixbuf_new
function_decl|)
parameter_list|(
name|GdkColorspace
name|colorspace
parameter_list|,
name|gboolean
name|has_alpha
parameter_list|,
name|int
name|bits_per_sample
parameter_list|,
name|int
name|width
parameter_list|,
name|int
name|height
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gdk_draw_rectangle
typedef|typedef
name|void
function_decl|(
modifier|*
name|Ptr_gdk_draw_rectangle
function_decl|)
parameter_list|(
name|GdkDrawable
modifier|*
name|drawable
parameter_list|,
name|GdkGC
modifier|*
name|gc
parameter_list|,
name|gboolean
name|filled
parameter_list|,
name|gint
name|x
parameter_list|,
name|gint
name|y
parameter_list|,
name|gint
name|width
parameter_list|,
name|gint
name|height
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gdk_pixbuf_unref
typedef|typedef
name|void
function_decl|(
modifier|*
name|Ptr_gdk_pixbuf_unref
function_decl|)
parameter_list|(
name|GdkPixbuf
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gdk_drawable_unref
typedef|typedef
name|void
function_decl|(
modifier|*
name|Ptr_gdk_drawable_unref
function_decl|)
parameter_list|(
name|GdkDrawable
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gdk_x11_window_set_user_time
typedef|typedef
name|void
function_decl|(
modifier|*
name|Ptr_gdk_x11_window_set_user_time
function_decl|)
parameter_list|(
name|GdkWindow
modifier|*
name|window
parameter_list|,
name|guint32
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gdk_x11_drawable_get_xid
typedef|typedef
name|XID
function_decl|(
modifier|*
name|Ptr_gdk_x11_drawable_get_xid
function_decl|)
parameter_list|(
name|GdkDrawable
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gdk_x11_drawable_get_xdisplay
typedef|typedef
name|Display
modifier|*
function_decl|(
modifier|*
name|Ptr_gdk_x11_drawable_get_xdisplay
function_decl|)
parameter_list|(
name|GdkDrawable
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_macro
name|QT_BEGIN_NAMESPACE
end_macro
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_FILEDIALOG
end_ifndef
begin_typedef
DECL|typedef|_qt_filedialog_open_filenames_hook
typedef|typedef
name|QStringList
argument_list|(
argument|*_qt_filedialog_open_filenames_hook
argument_list|)
operator|(
name|QWidget
operator|*
name|parent
operator|,
specifier|const
name|QString
operator|&
name|caption
operator|,
specifier|const
name|QString
operator|&
name|dir
operator|,
specifier|const
name|QString
operator|&
name|filter
operator|,
name|QString
operator|*
name|selectedFilter
operator|,
name|QFileDialog
operator|::
name|Options
name|options
operator|)
expr_stmt|;
end_typedef
begin_typedef
DECL|typedef|_qt_filedialog_open_filename_hook
typedef|typedef
name|QString
argument_list|(
argument|*_qt_filedialog_open_filename_hook
argument_list|)
operator|(
name|QWidget
operator|*
name|parent
operator|,
specifier|const
name|QString
operator|&
name|caption
operator|,
specifier|const
name|QString
operator|&
name|dir
operator|,
specifier|const
name|QString
operator|&
name|filter
operator|,
name|QString
operator|*
name|selectedFilter
operator|,
name|QFileDialog
operator|::
name|Options
name|options
operator|)
expr_stmt|;
end_typedef
begin_typedef
DECL|typedef|_qt_filedialog_save_filename_hook
typedef|typedef
name|QString
argument_list|(
argument|*_qt_filedialog_save_filename_hook
argument_list|)
operator|(
name|QWidget
operator|*
name|parent
operator|,
specifier|const
name|QString
operator|&
name|caption
operator|,
specifier|const
name|QString
operator|&
name|dir
operator|,
specifier|const
name|QString
operator|&
name|filter
operator|,
name|QString
operator|*
name|selectedFilter
operator|,
name|QFileDialog
operator|::
name|Options
name|options
operator|)
expr_stmt|;
end_typedef
begin_typedef
DECL|typedef|_qt_filedialog_existing_directory_hook
typedef|typedef
name|QString
argument_list|(
argument|*_qt_filedialog_existing_directory_hook
argument_list|)
operator|(
name|QWidget
operator|*
name|parent
operator|,
specifier|const
name|QString
operator|&
name|caption
operator|,
specifier|const
name|QString
operator|&
name|dir
operator|,
name|QFileDialog
operator|::
name|Options
name|options
operator|)
expr_stmt|;
end_typedef
begin_decl_stmt
specifier|extern
name|Q_WIDGETS_EXPORT
name|_qt_filedialog_open_filename_hook
name|qt_filedialog_open_filename_hook
decl_stmt|;
end_decl_stmt
begin_decl_stmt
specifier|extern
name|Q_WIDGETS_EXPORT
name|_qt_filedialog_open_filenames_hook
name|qt_filedialog_open_filenames_hook
decl_stmt|;
end_decl_stmt
begin_decl_stmt
specifier|extern
name|Q_WIDGETS_EXPORT
name|_qt_filedialog_save_filename_hook
name|qt_filedialog_save_filename_hook
decl_stmt|;
end_decl_stmt
begin_decl_stmt
specifier|extern
name|Q_WIDGETS_EXPORT
name|_qt_filedialog_existing_directory_hook
name|qt_filedialog_existing_directory_hook
decl_stmt|;
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|//!QT_NO_FILEDIALOG
end_comment
begin_decl_stmt
DECL|variable|QGtkStylePrivate
name|class
name|QGtkStylePrivate
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|QGtkStyleFilter
range|:
name|public
name|QObject
block|{
name|public
operator|:
name|QGtkStyleFilter
argument_list|(
name|QGtkStylePrivate
operator|*
name|sp
argument_list|)
operator|:
name|stylePrivate
argument_list|(
argument|sp
argument_list|)
block|{}
name|private
operator|:
name|QGtkStylePrivate
operator|*
name|stylePrivate
block|;
name|bool
name|eventFilter
argument_list|(
name|QObject
operator|*
name|obj
argument_list|,
name|QEvent
operator|*
name|e
argument_list|)
block|; }
decl_stmt|;
end_decl_stmt
begin_typedef
typedef|typedef
enum|enum
block|{
DECL|enumerator|GNOME_ICON_LOOKUP_FLAGS_NONE
name|GNOME_ICON_LOOKUP_FLAGS_NONE
init|=
literal|0
block|,
DECL|enumerator|GNOME_ICON_LOOKUP_FLAGS_EMBEDDING_TEXT
name|GNOME_ICON_LOOKUP_FLAGS_EMBEDDING_TEXT
init|=
literal|1
operator|<<
literal|0
block|,
DECL|enumerator|GNOME_ICON_LOOKUP_FLAGS_SHOW_SMALL_IMAGES_AS_THEMSELVES
name|GNOME_ICON_LOOKUP_FLAGS_SHOW_SMALL_IMAGES_AS_THEMSELVES
init|=
literal|1
operator|<<
literal|1
block|,
DECL|enumerator|GNOME_ICON_LOOKUP_FLAGS_ALLOW_SVG_AS_THEMSELVES
name|GNOME_ICON_LOOKUP_FLAGS_ALLOW_SVG_AS_THEMSELVES
init|=
literal|1
operator|<<
literal|2
block|}
DECL|typedef|GnomeIconLookupFlags
name|GnomeIconLookupFlags
typedef|;
end_typedef
begin_typedef
typedef|typedef
enum|enum
block|{
DECL|enumerator|GNOME_ICON_LOOKUP_RESULT_FLAGS_NONE
name|GNOME_ICON_LOOKUP_RESULT_FLAGS_NONE
init|=
literal|0
block|,
DECL|enumerator|GNOME_ICON_LOOKUP_RESULT_FLAGS_THUMBNAIL
name|GNOME_ICON_LOOKUP_RESULT_FLAGS_THUMBNAIL
init|=
literal|1
operator|<<
literal|0
block|}
DECL|typedef|GnomeIconLookupResultFlags
name|GnomeIconLookupResultFlags
typedef|;
end_typedef
begin_struct_decl
struct_decl|struct
name|GnomeThumbnailFactory
struct_decl|;
end_struct_decl
begin_typedef
DECL|typedef|Ptr_gnome_vfs_init
typedef|typedef
name|gboolean
function_decl|(
modifier|*
name|Ptr_gnome_vfs_init
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|Ptr_gnome_icon_lookup_sync
typedef|typedef
name|char
modifier|*
function_decl|(
modifier|*
name|Ptr_gnome_icon_lookup_sync
function_decl|)
parameter_list|(
name|GtkIconTheme
modifier|*
name|icon_theme
parameter_list|,
name|GnomeThumbnailFactory
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
name|file_uri
parameter_list|,
specifier|const
name|char
modifier|*
name|custom_icon
parameter_list|,
name|GnomeIconLookupFlags
name|flags
parameter_list|,
name|GnomeIconLookupResultFlags
modifier|*
name|result
parameter_list|)
function_decl|;
end_typedef
begin_decl_stmt
name|class
name|QGtkStylePrivate
range|:
name|public
name|QWindowsStylePrivate
block|{
name|Q_DECLARE_PUBLIC
argument_list|(
argument|QGtkStyle
argument_list|)
name|public
operator|:
name|QGtkStylePrivate
argument_list|()
block|;
operator|~
name|QGtkStylePrivate
argument_list|()
block|;
name|QGtkStyleFilter
name|filter
block|;
specifier|static
name|GtkWidget
operator|*
name|gtkWidget
argument_list|(
specifier|const
name|QHashableLatin1Literal
operator|&
name|path
argument_list|)
block|;
specifier|static
name|GtkStyle
operator|*
name|gtkStyle
argument_list|(
specifier|const
name|QHashableLatin1Literal
operator|&
name|path
operator|=
name|QHashableLatin1Literal
argument_list|(
literal|"GtkWindow"
argument_list|)
argument_list|)
block|;
name|virtual
name|void
name|resolveGtk
argument_list|()
specifier|const
block|;
name|virtual
name|void
name|initGtkMenu
argument_list|()
specifier|const
block|;
name|virtual
name|void
name|initGtkTreeview
argument_list|()
specifier|const
block|;
name|virtual
name|void
name|initGtkWidgets
argument_list|()
specifier|const
block|;
specifier|static
name|void
name|cleanupGtkWidgets
argument_list|()
block|;
specifier|static
name|bool
name|isKDE4Session
argument_list|()
block|;
name|void
name|applyCustomPaletteHash
argument_list|()
block|;
specifier|static
name|QFont
name|getThemeFont
argument_list|()
block|;
specifier|static
name|bool
name|isThemeAvailable
argument_list|()
block|{
return|return
name|gtkStyle
argument_list|()
operator|!=
literal|0
return|;
block|}
specifier|static
name|bool
name|getGConfBool
argument_list|(
argument|const QString&key
argument_list|,
argument|bool fallback =
literal|0
argument_list|)
block|;
specifier|static
name|QString
name|getGConfString
argument_list|(
specifier|const
name|QString
operator|&
name|key
argument_list|,
specifier|const
name|QString
operator|&
name|fallback
operator|=
name|QString
argument_list|()
argument_list|)
block|;
specifier|static
name|QString
name|getThemeName
argument_list|()
block|;
name|virtual
name|int
name|getSpinboxArrowSize
argument_list|()
specifier|const
block|;
ifndef|#
directive|ifndef
name|QT_NO_FILEDIALOG
specifier|static
name|void
name|setupGtkFileChooser
argument_list|(
argument|GtkWidget* gtkFileChooser
argument_list|,
argument|QWidget *parent
argument_list|,
argument|const QString&dir
argument_list|,
argument|const QString&filter
argument_list|,
argument|QString *selectedFilter
argument_list|,
argument|QFileDialog::Options options
argument_list|,
argument|bool isSaveDialog = false
argument_list|,
argument|QHash<GtkFileFilter *
argument_list|,
argument|QString> *filterMap =
literal|0
argument_list|)
block|;
specifier|static
name|QString
name|openFilename
argument_list|(
argument|QWidget *parent
argument_list|,
argument|const QString&caption
argument_list|,
argument|const QString&dir
argument_list|,
argument|const QString&filter
argument_list|,
argument|QString *selectedFilter
argument_list|,
argument|QFileDialog::Options options
argument_list|)
block|;
specifier|static
name|QString
name|saveFilename
argument_list|(
argument|QWidget *parent
argument_list|,
argument|const QString&caption
argument_list|,
argument|const QString&dir
argument_list|,
argument|const QString&filter
argument_list|,
argument|QString *selectedFilter
argument_list|,
argument|QFileDialog::Options options
argument_list|)
block|;
specifier|static
name|QString
name|openDirectory
argument_list|(
argument|QWidget *parent
argument_list|,
argument|const QString&caption
argument_list|,
argument|const QString&dir
argument_list|,
argument|QFileDialog::Options options
argument_list|)
block|;
specifier|static
name|QStringList
name|openFilenames
argument_list|(
argument|QWidget *parent
argument_list|,
argument|const QString&caption
argument_list|,
argument|const QString&dir
argument_list|,
argument|const QString&filter
argument_list|,
argument|QString *selectedFilter
argument_list|,
argument|QFileDialog::Options options
argument_list|)
block|;
endif|#
directive|endif
specifier|static
name|QIcon
name|getFilesystemIcon
argument_list|(
specifier|const
name|QFileInfo
operator|&
argument_list|)
block|;
specifier|static
name|Ptr_gtk_container_forall
name|gtk_container_forall
block|;
specifier|static
name|Ptr_gtk_init
name|gtk_init
block|;
specifier|static
name|Ptr_gtk_style_attach
name|gtk_style_attach
block|;
specifier|static
name|Ptr_gtk_window_new
name|gtk_window_new
block|;
specifier|static
name|Ptr_gtk_widget_destroy
name|gtk_widget_destroy
block|;
specifier|static
name|Ptr_gtk_widget_realize
name|gtk_widget_realize
block|;
specifier|static
name|Ptr_gtk_widget_set_default_direction
name|gtk_widget_set_default_direction
block|;
specifier|static
name|Ptr_gtk_widget_modify_color
name|gtk_widget_modify_fg
block|;
specifier|static
name|Ptr_gtk_widget_modify_color
name|gtk_widget_modify_bg
block|;
specifier|static
name|Ptr_gtk_menu_item_new_with_label
name|gtk_menu_item_new_with_label
block|;
specifier|static
name|Ptr_gtk_arrow_new
name|gtk_arrow_new
block|;
specifier|static
name|Ptr_gtk_check_menu_item_new_with_label
name|gtk_check_menu_item_new_with_label
block|;
specifier|static
name|Ptr_gtk_menu_bar_new
name|gtk_menu_bar_new
block|;
specifier|static
name|Ptr_gtk_menu_new
name|gtk_menu_new
block|;
specifier|static
name|Ptr_gtk_expander_new
name|gtk_expander_new
block|;
specifier|static
name|Ptr_gtk_button_new
name|gtk_button_new
block|;
specifier|static
name|Ptr_gtk_tool_button_new
name|gtk_tool_button_new
block|;
specifier|static
name|Ptr_gtk_hbutton_box_new
name|gtk_hbutton_box_new
block|;
specifier|static
name|Ptr_gtk_check_button_new
name|gtk_check_button_new
block|;
specifier|static
name|Ptr_gtk_radio_button_new
name|gtk_radio_button_new
block|;
specifier|static
name|Ptr_gtk_spin_button_new
name|gtk_spin_button_new
block|;
specifier|static
name|Ptr_gtk_separator_tool_item_new
name|gtk_separator_tool_item_new
block|;
specifier|static
name|Ptr_gtk_toolbar_insert
name|gtk_toolbar_insert
block|;
specifier|static
name|Ptr_gtk_frame_new
name|gtk_frame_new
block|;
specifier|static
name|Ptr_gtk_statusbar_new
name|gtk_statusbar_new
block|;
specifier|static
name|Ptr_gtk_entry_new
name|gtk_entry_new
block|;
specifier|static
name|Ptr_gtk_hscale_new
name|gtk_hscale_new
block|;
specifier|static
name|Ptr_gtk_vscale_new
name|gtk_vscale_new
block|;
specifier|static
name|Ptr_gtk_hscrollbar_new
name|gtk_hscrollbar_new
block|;
specifier|static
name|Ptr_gtk_vscrollbar_new
name|gtk_vscrollbar_new
block|;
specifier|static
name|Ptr_gtk_scrolled_window_new
name|gtk_scrolled_window_new
block|;
specifier|static
name|Ptr_gtk_notebook_new
name|gtk_notebook_new
block|;
specifier|static
name|Ptr_gtk_toolbar_new
name|gtk_toolbar_new
block|;
specifier|static
name|Ptr_gtk_tree_view_new
name|gtk_tree_view_new
block|;
specifier|static
name|Ptr_gtk_tree_view_get_column
name|gtk_tree_view_get_column
block|;
specifier|static
name|Ptr_gtk_combo_box_new
name|gtk_combo_box_new
block|;
specifier|static
name|Ptr_gtk_combo_box_entry_new
name|gtk_combo_box_entry_new
block|;
specifier|static
name|Ptr_gtk_progress_bar_new
name|gtk_progress_bar_new
block|;
specifier|static
name|Ptr_gtk_container_add
name|gtk_container_add
block|;
specifier|static
name|Ptr_gtk_menu_shell_append
name|gtk_menu_shell_append
block|;
specifier|static
name|Ptr_gtk_progress_configure
name|gtk_progress_configure
block|;
specifier|static
name|Ptr_gtk_range_get_adjustment
name|gtk_range_get_adjustment
block|;
specifier|static
name|Ptr_gtk_range_set_adjustment
name|gtk_range_set_adjustment
block|;
specifier|static
name|Ptr_gtk_range_set_inverted
name|gtk_range_set_inverted
block|;
specifier|static
name|Ptr_gtk_icon_factory_lookup_default
name|gtk_icon_factory_lookup_default
block|;
specifier|static
name|Ptr_gtk_icon_theme_get_default
name|gtk_icon_theme_get_default
block|;
specifier|static
name|Ptr_gtk_widget_style_get
name|gtk_widget_style_get
block|;
specifier|static
name|Ptr_gtk_icon_set_render_icon
name|gtk_icon_set_render_icon
block|;
specifier|static
name|Ptr_gtk_fixed_new
name|gtk_fixed_new
block|;
specifier|static
name|Ptr_gtk_tree_view_column_new
name|gtk_tree_view_column_new
block|;
specifier|static
name|Ptr_gtk_tree_view_append_column
name|gtk_tree_view_append_column
block|;
specifier|static
name|Ptr_gtk_paint_check
name|gtk_paint_check
block|;
specifier|static
name|Ptr_gtk_paint_box
name|gtk_paint_box
block|;
specifier|static
name|Ptr_gtk_paint_box_gap
name|gtk_paint_box_gap
block|;
specifier|static
name|Ptr_gtk_paint_flat_box
name|gtk_paint_flat_box
block|;
specifier|static
name|Ptr_gtk_paint_option
name|gtk_paint_option
block|;
specifier|static
name|Ptr_gtk_paint_extension
name|gtk_paint_extension
block|;
specifier|static
name|Ptr_gtk_paint_slider
name|gtk_paint_slider
block|;
specifier|static
name|Ptr_gtk_paint_shadow
name|gtk_paint_shadow
block|;
specifier|static
name|Ptr_gtk_paint_resize_grip
name|gtk_paint_resize_grip
block|;
specifier|static
name|Ptr_gtk_paint_focus
name|gtk_paint_focus
block|;
specifier|static
name|Ptr_gtk_paint_arrow
name|gtk_paint_arrow
block|;
specifier|static
name|Ptr_gtk_paint_handle
name|gtk_paint_handle
block|;
specifier|static
name|Ptr_gtk_paint_expander
name|gtk_paint_expander
block|;
specifier|static
name|Ptr_gtk_adjustment_configure
name|gtk_adjustment_configure
block|;
specifier|static
name|Ptr_gtk_adjustment_new
name|gtk_adjustment_new
block|;
specifier|static
name|Ptr_gtk_paint_vline
name|gtk_paint_vline
block|;
specifier|static
name|Ptr_gtk_paint_hline
name|gtk_paint_hline
block|;
specifier|static
name|Ptr_gtk_menu_item_set_submenu
name|gtk_menu_item_set_submenu
block|;
specifier|static
name|Ptr_gtk_settings_get_default
name|gtk_settings_get_default
block|;
specifier|static
name|Ptr_gtk_separator_menu_item_new
name|gtk_separator_menu_item_new
block|;
specifier|static
name|Ptr_gtk_widget_size_allocate
name|gtk_widget_size_allocate
block|;
specifier|static
name|Ptr_gtk_widget_size_request
name|gtk_widget_size_request
block|;
specifier|static
name|Ptr_gtk_widget_set_direction
name|gtk_widget_set_direction
block|;
specifier|static
name|Ptr_gtk_widget_path
name|gtk_widget_path
block|;
specifier|static
name|Ptr_gtk_container_get_type
name|gtk_container_get_type
block|;
specifier|static
name|Ptr_gtk_window_get_type
name|gtk_window_get_type
block|;
specifier|static
name|Ptr_gtk_widget_get_type
name|gtk_widget_get_type
block|;
specifier|static
name|Ptr_gtk_widget_get_parent
name|gtk_widget_get_parent
block|;
specifier|static
name|Ptr_gtk_widget_is_toplevel
name|gtk_widget_is_toplevel
block|;
specifier|static
name|Ptr_gtk_rc_get_style_by_paths
name|gtk_rc_get_style_by_paths
block|;
specifier|static
name|Ptr_gtk_check_version
name|gtk_check_version
block|;
specifier|static
name|Ptr_gtk_border_free
name|gtk_border_free
block|;
specifier|static
name|Ptr_gtk_widget_get_allocation
name|gtk_widget_get_allocation
block|;
specifier|static
name|Ptr_gtk_widget_set_allocation
name|gtk_widget_set_allocation
block|;
specifier|static
name|Ptr_pango_font_description_get_size
name|pango_font_description_get_size
block|;
specifier|static
name|Ptr_pango_font_description_get_weight
name|pango_font_description_get_weight
block|;
specifier|static
name|Ptr_pango_font_description_get_family
name|pango_font_description_get_family
block|;
specifier|static
name|Ptr_pango_font_description_get_style
name|pango_font_description_get_style
block|;
specifier|static
name|Ptr_gtk_file_filter_new
name|gtk_file_filter_new
block|;
specifier|static
name|Ptr_gtk_file_filter_set_name
name|gtk_file_filter_set_name
block|;
specifier|static
name|Ptr_gtk_file_filter_add_pattern
name|gtk_file_filter_add_pattern
block|;
specifier|static
name|Ptr_gtk_file_chooser_add_filter
name|gtk_file_chooser_add_filter
block|;
specifier|static
name|Ptr_gtk_file_chooser_set_filter
name|gtk_file_chooser_set_filter
block|;
specifier|static
name|Ptr_gtk_file_chooser_get_filter
name|gtk_file_chooser_get_filter
block|;
specifier|static
name|Ptr_gtk_file_chooser_dialog_new
name|gtk_file_chooser_dialog_new
block|;
specifier|static
name|Ptr_gtk_file_chooser_set_current_folder
name|gtk_file_chooser_set_current_folder
block|;
specifier|static
name|Ptr_gtk_file_chooser_get_filename
name|gtk_file_chooser_get_filename
block|;
specifier|static
name|Ptr_gtk_file_chooser_get_filenames
name|gtk_file_chooser_get_filenames
block|;
specifier|static
name|Ptr_gtk_file_chooser_set_current_name
name|gtk_file_chooser_set_current_name
block|;
specifier|static
name|Ptr_gtk_dialog_run
name|gtk_dialog_run
block|;
specifier|static
name|Ptr_gtk_file_chooser_set_filename
name|gtk_file_chooser_set_filename
block|;
specifier|static
name|Ptr_gdk_pixbuf_get_pixels
name|gdk_pixbuf_get_pixels
block|;
specifier|static
name|Ptr_gdk_pixbuf_get_width
name|gdk_pixbuf_get_width
block|;
specifier|static
name|Ptr_gdk_pixbuf_get_height
name|gdk_pixbuf_get_height
block|;
specifier|static
name|Ptr_gdk_pixmap_new
name|gdk_pixmap_new
block|;
specifier|static
name|Ptr_gdk_pixbuf_new
name|gdk_pixbuf_new
block|;
specifier|static
name|Ptr_gdk_pixbuf_get_from_drawable
name|gdk_pixbuf_get_from_drawable
block|;
specifier|static
name|Ptr_gdk_draw_rectangle
name|gdk_draw_rectangle
block|;
specifier|static
name|Ptr_gdk_pixbuf_unref
name|gdk_pixbuf_unref
block|;
specifier|static
name|Ptr_gdk_drawable_unref
name|gdk_drawable_unref
block|;
specifier|static
name|Ptr_gdk_color_free
name|gdk_color_free
block|;
specifier|static
name|Ptr_gdk_x11_window_set_user_time
name|gdk_x11_window_set_user_time
block|;
specifier|static
name|Ptr_gdk_x11_drawable_get_xid
name|gdk_x11_drawable_get_xid
block|;
specifier|static
name|Ptr_gdk_x11_drawable_get_xdisplay
name|gdk_x11_drawable_get_xdisplay
block|;
specifier|static
name|Ptr_gconf_client_get_default
name|gconf_client_get_default
block|;
specifier|static
name|Ptr_gconf_client_get_string
name|gconf_client_get_string
block|;
specifier|static
name|Ptr_gconf_client_get_bool
name|gconf_client_get_bool
block|;
specifier|static
name|Ptr_gnome_icon_lookup_sync
name|gnome_icon_lookup_sync
block|;
specifier|static
name|Ptr_gnome_vfs_init
name|gnome_vfs_init
block|;
name|virtual
name|QPalette
name|gtkWidgetPalette
argument_list|(
argument|const QHashableLatin1Literal&gtkWidgetName
argument_list|)
specifier|const
block|;
name|protected
operator|:
typedef|typedef
name|QHash
operator|<
name|QHashableLatin1Literal
operator|,
name|GtkWidget
operator|*
operator|>
name|WidgetMap
expr_stmt|;
specifier|static
specifier|inline
name|void
name|destroyWidgetMap
argument_list|()
block|{
name|cleanupGtkWidgets
argument_list|()
block|;
name|delete
name|widgetMap
block|;
name|widgetMap
operator|=
literal|0
block|;     }
specifier|static
specifier|inline
name|WidgetMap
operator|*
name|gtkWidgetMap
argument_list|()
block|{
if|if
condition|(
operator|!
name|widgetMap
condition|)
block|{
name|widgetMap
operator|=
name|new
name|WidgetMap
argument_list|()
expr_stmt|;
name|qAddPostRoutine
argument_list|(
name|destroyWidgetMap
argument_list|)
expr_stmt|;
block|}
return|return
name|widgetMap
return|;
block|}
end_decl_stmt
begin_function_decl
specifier|static
name|QStringList
name|extract_filter
parameter_list|(
specifier|const
name|QString
modifier|&
name|rawFilter
parameter_list|)
function_decl|;
end_function_decl
begin_expr_stmt
name|virtual
name|GtkWidget
operator|*
name|getTextColorWidget
argument_list|()
specifier|const
expr_stmt|;
end_expr_stmt
begin_function_decl
specifier|static
name|void
name|setupGtkWidget
parameter_list|(
name|GtkWidget
modifier|*
name|widget
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
specifier|static
name|void
name|addWidgetToMap
parameter_list|(
name|GtkWidget
modifier|*
name|widget
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
specifier|static
name|void
name|addAllSubWidgets
parameter_list|(
name|GtkWidget
modifier|*
name|widget
parameter_list|,
name|gpointer
name|v
init|=
literal|0
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
specifier|static
name|void
name|addWidget
parameter_list|(
name|GtkWidget
modifier|*
name|widget
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
specifier|static
name|void
name|removeWidgetFromMap
parameter_list|(
specifier|const
name|QHashableLatin1Literal
modifier|&
name|path
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|virtual
name|void
name|init
parameter_list|()
function_decl|;
end_function_decl
begin_label
name|private
label|:
end_label
begin_expr_stmt
specifier|static
name|QList
operator|<
name|QGtkStylePrivate
operator|*
operator|>
name|instances
expr_stmt|;
end_expr_stmt
begin_decl_stmt
specifier|static
name|WidgetMap
modifier|*
name|widgetMap
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|friend
name|class
name|QGtkStyleUpdateScheduler
decl_stmt|;
end_decl_stmt
begin_comment
unit|};
comment|// Helper to ensure that we have polished all our gtk widgets
end_comment
begin_comment
comment|// before updating our own palettes
end_comment
begin_decl_stmt
name|class
name|QGtkStyleUpdateScheduler
range|:
name|public
name|QObject
block|{
name|Q_OBJECT
name|public
name|slots
operator|:
name|void
name|updateTheme
argument_list|()
block|; }
decl_stmt|;
end_decl_stmt
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// !QT_NO_STYLE_GTK
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QGTKSTYLE_P_H
end_comment
end_unit
