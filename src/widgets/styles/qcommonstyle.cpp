begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the QtWidgets module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"qcommonstyle.h"
end_include
begin_include
include|#
directive|include
file|"qcommonstyle_p.h"
end_include
begin_include
include|#
directive|include
file|<qfile.h>
end_include
begin_include
include|#
directive|include
file|<qapplication.h>
end_include
begin_include
include|#
directive|include
file|<private/qguiapplication_p.h>
end_include
begin_include
include|#
directive|include
file|<qpa/qplatformtheme.h>
end_include
begin_include
include|#
directive|include
file|<qbitmap.h>
end_include
begin_include
include|#
directive|include
file|<qcache.h>
end_include
begin_include
include|#
directive|include
file|<qdockwidget.h>
end_include
begin_include
include|#
directive|include
file|<qdrawutil.h>
end_include
begin_include
include|#
directive|include
file|<qdialogbuttonbox.h>
end_include
begin_include
include|#
directive|include
file|<qformlayout.h>
end_include
begin_include
include|#
directive|include
file|<qgroupbox.h>
end_include
begin_include
include|#
directive|include
file|<qmath.h>
end_include
begin_include
include|#
directive|include
file|<qmenu.h>
end_include
begin_include
include|#
directive|include
file|<qpainter.h>
end_include
begin_include
include|#
directive|include
file|<qpaintengine.h>
end_include
begin_include
include|#
directive|include
file|<qpainterpath.h>
end_include
begin_include
include|#
directive|include
file|<qslider.h>
end_include
begin_include
include|#
directive|include
file|<qstyleoption.h>
end_include
begin_include
include|#
directive|include
file|<qtabbar.h>
end_include
begin_include
include|#
directive|include
file|<qtabwidget.h>
end_include
begin_include
include|#
directive|include
file|<qtoolbar.h>
end_include
begin_include
include|#
directive|include
file|<qtoolbutton.h>
end_include
begin_include
include|#
directive|include
file|<qrubberband.h>
end_include
begin_include
include|#
directive|include
file|"qtreeview.h"
end_include
begin_include
include|#
directive|include
file|<private/qcommonstylepixmaps_p.h>
end_include
begin_include
include|#
directive|include
file|<private/qmath_p.h>
end_include
begin_include
include|#
directive|include
file|<qdebug.h>
end_include
begin_include
include|#
directive|include
file|<qtextformat.h>
end_include
begin_include
include|#
directive|include
file|<qwizard.h>
end_include
begin_include
include|#
directive|include
file|<qfileinfo.h>
end_include
begin_include
include|#
directive|include
file|<qdir.h>
end_include
begin_include
include|#
directive|include
file|<qsettings.h>
end_include
begin_include
include|#
directive|include
file|<qvariant.h>
end_include
begin_include
include|#
directive|include
file|<qpixmapcache.h>
end_include
begin_include
include|#
directive|include
file|<private/qstyleanimation_p.h>
end_include
begin_include
include|#
directive|include
file|<limits.h>
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_ITEMVIEWS
end_ifndef
begin_include
include|#
directive|include
file|"private/qtextengine_p.h"
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_include
include|#
directive|include
file|<private/qstylehelper_p.h>
end_include
begin_function
name|QT_BEGIN_NAMESPACE
DECL|function|qt_getWindow
specifier|static
name|QWindow
modifier|*
name|qt_getWindow
parameter_list|(
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
block|{
return|return
name|widget
condition|?
name|widget
operator|->
name|window
argument_list|()
operator|->
name|windowHandle
argument_list|()
else|:
literal|0
return|;
block|}
end_function
begin_comment
comment|/*!     \class QCommonStyle     \brief The QCommonStyle class encapsulates the common Look and Feel of a GUI.      \ingroup appearance     \inmodule QtWidgets      This abstract class implements some of the widget's look and feel     that is common to all GUI styles provided and shipped as part of     Qt.      Since QCommonStyle inherits QStyle, all of its functions are fully documented     in the QStyle documentation.     \omit     , although the     extra functions that QCommonStyle provides, e.g.     drawComplexControl(), drawControl(), drawPrimitive(),     hitTestComplexControl(), subControlRect(), sizeFromContents(), and     subElementRect() are documented here.     \endomit      \sa QStyle, QProxyStyle */
end_comment
begin_comment
comment|/*!     Constructs a QCommonStyle. */
end_comment
begin_constructor
DECL|function|QCommonStyle
name|QCommonStyle
operator|::
name|QCommonStyle
parameter_list|()
member_init_list|:
name|QStyle
argument_list|(
operator|*
operator|new
name|QCommonStylePrivate
argument_list|)
block|{ }
end_constructor
begin_comment
comment|/*! \internal */
end_comment
begin_constructor
DECL|function|QCommonStyle
name|QCommonStyle
operator|::
name|QCommonStyle
parameter_list|(
name|QCommonStylePrivate
modifier|&
name|dd
parameter_list|)
member_init_list|:
name|QStyle
argument_list|(
name|dd
argument_list|)
block|{ }
end_constructor
begin_comment
comment|/*!     Destroys the style. */
end_comment
begin_destructor
DECL|function|~QCommonStyle
name|QCommonStyle
operator|::
name|~
name|QCommonStyle
parameter_list|()
block|{ }
end_destructor
begin_comment
comment|/*!     \reimp */
end_comment
begin_function
DECL|function|drawPrimitive
name|void
name|QCommonStyle
operator|::
name|drawPrimitive
parameter_list|(
name|PrimitiveElement
name|pe
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|opt
parameter_list|,
name|QPainter
modifier|*
name|p
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
name|Q_D
argument_list|(
specifier|const
name|QCommonStyle
argument_list|)
expr_stmt|;
switch|switch
condition|(
name|pe
condition|)
block|{
case|case
name|PE_FrameButtonBevel
case|:
case|case
name|PE_FrameButtonTool
case|:
name|qDrawShadeRect
argument_list|(
name|p
argument_list|,
name|opt
operator|->
name|rect
argument_list|,
name|opt
operator|->
name|palette
argument_list|,
name|opt
operator|->
name|state
operator|&
operator|(
name|State_Sunken
operator||
name|State_On
operator|)
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
break|break;
case|case
name|PE_PanelButtonCommand
case|:
case|case
name|PE_PanelButtonBevel
case|:
case|case
name|PE_PanelButtonTool
case|:
case|case
name|PE_IndicatorButtonDropDown
case|:
name|qDrawShadePanel
argument_list|(
name|p
argument_list|,
name|opt
operator|->
name|rect
argument_list|,
name|opt
operator|->
name|palette
argument_list|,
name|opt
operator|->
name|state
operator|&
operator|(
name|State_Sunken
operator||
name|State_On
operator|)
argument_list|,
literal|1
argument_list|,
operator|&
name|opt
operator|->
name|palette
operator|.
name|brush
argument_list|(
name|QPalette
operator|::
name|Button
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|PE_IndicatorViewItemCheck
case|:
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_IndicatorCheckBox
argument_list|,
name|opt
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
break|break;
case|case
name|PE_IndicatorCheckBox
case|:
if|if
condition|(
name|opt
operator|->
name|state
operator|&
name|State_NoChange
condition|)
block|{
name|p
operator|->
name|setPen
argument_list|(
name|opt
operator|->
name|palette
operator|.
name|foreground
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|->
name|fillRect
argument_list|(
name|opt
operator|->
name|rect
argument_list|,
name|opt
operator|->
name|palette
operator|.
name|brush
argument_list|(
name|QPalette
operator|::
name|Button
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawRect
argument_list|(
name|opt
operator|->
name|rect
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|opt
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|qDrawShadePanel
argument_list|(
name|p
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|x
argument_list|()
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|y
argument_list|()
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|width
argument_list|()
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|height
argument_list|()
argument_list|,
name|opt
operator|->
name|palette
argument_list|,
name|opt
operator|->
name|state
operator|&
operator|(
name|State_Sunken
operator||
name|State_On
operator|)
argument_list|,
literal|1
argument_list|,
operator|&
name|opt
operator|->
name|palette
operator|.
name|brush
argument_list|(
name|QPalette
operator|::
name|Button
argument_list|)
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|PE_IndicatorRadioButton
case|:
block|{
name|QRect
name|ir
init|=
name|opt
operator|->
name|rect
decl_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|opt
operator|->
name|palette
operator|.
name|dark
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawArc
argument_list|(
name|opt
operator|->
name|rect
argument_list|,
literal|0
argument_list|,
literal|5760
argument_list|)
expr_stmt|;
if|if
condition|(
name|opt
operator|->
name|state
operator|&
operator|(
name|State_Sunken
operator||
name|State_On
operator|)
condition|)
block|{
name|ir
operator|.
name|adjust
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
operator|-
literal|2
argument_list|,
operator|-
literal|2
argument_list|)
expr_stmt|;
name|p
operator|->
name|setBrush
argument_list|(
name|opt
operator|->
name|palette
operator|.
name|foreground
argument_list|()
argument_list|)
expr_stmt|;
name|bool
name|oldQt4CompatiblePainting
init|=
name|p
operator|->
name|testRenderHint
argument_list|(
name|QPainter
operator|::
name|Qt4CompatiblePainting
argument_list|)
decl_stmt|;
name|p
operator|->
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Qt4CompatiblePainting
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawEllipse
argument_list|(
name|ir
argument_list|)
expr_stmt|;
name|p
operator|->
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Qt4CompatiblePainting
argument_list|,
name|oldQt4CompatiblePainting
argument_list|)
expr_stmt|;
block|}
break|break;
block|}
case|case
name|PE_FrameFocusRect
case|:
if|if
condition|(
specifier|const
name|QStyleOptionFocusRect
modifier|*
name|fropt
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionFocusRect
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|QColor
name|bg
init|=
name|fropt
operator|->
name|backgroundColor
decl_stmt|;
name|QPen
name|oldPen
init|=
name|p
operator|->
name|pen
argument_list|()
decl_stmt|;
if|if
condition|(
name|bg
operator|.
name|isValid
argument_list|()
condition|)
block|{
name|int
name|h
decl_stmt|,
name|s
decl_stmt|,
name|v
decl_stmt|;
name|bg
operator|.
name|getHsv
argument_list|(
operator|&
name|h
argument_list|,
operator|&
name|s
argument_list|,
operator|&
name|v
argument_list|)
expr_stmt|;
if|if
condition|(
name|v
operator|>=
literal|128
condition|)
name|p
operator|->
name|setPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
else|else
name|p
operator|->
name|setPen
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|p
operator|->
name|setPen
argument_list|(
name|opt
operator|->
name|palette
operator|.
name|foreground
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|QRect
name|focusRect
init|=
name|opt
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
decl_stmt|;
name|p
operator|->
name|drawRect
argument_list|(
name|focusRect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|//draw pen inclusive
name|p
operator|->
name|setPen
argument_list|(
name|oldPen
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|PE_IndicatorMenuCheckMark
case|:
block|{
specifier|const
name|int
name|markW
init|=
name|opt
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|>
literal|7
condition|?
literal|7
else|:
name|opt
operator|->
name|rect
operator|.
name|width
argument_list|()
decl_stmt|;
specifier|const
name|int
name|markH
init|=
name|markW
decl_stmt|;
name|int
name|posX
init|=
name|opt
operator|->
name|rect
operator|.
name|x
argument_list|()
operator|+
operator|(
name|opt
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|-
name|markW
operator|)
operator|/
literal|2
operator|+
literal|1
decl_stmt|;
name|int
name|posY
init|=
name|opt
operator|->
name|rect
operator|.
name|y
argument_list|()
operator|+
operator|(
name|opt
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
name|markH
operator|)
operator|/
literal|2
decl_stmt|;
name|QVector
argument_list|<
name|QLineF
argument_list|>
name|a
decl_stmt|;
name|a
operator|.
name|reserve
argument_list|(
name|markH
argument_list|)
expr_stmt|;
name|int
name|i
decl_stmt|,
name|xx
decl_stmt|,
name|yy
decl_stmt|;
name|xx
operator|=
name|posX
expr_stmt|;
name|yy
operator|=
literal|3
operator|+
name|posY
expr_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
name|markW
operator|/
literal|2
condition|;
operator|++
name|i
control|)
block|{
name|a
operator|<<
name|QLineF
argument_list|(
name|xx
argument_list|,
name|yy
argument_list|,
name|xx
argument_list|,
name|yy
operator|+
literal|2
argument_list|)
expr_stmt|;
operator|++
name|xx
expr_stmt|;
operator|++
name|yy
expr_stmt|;
block|}
name|yy
operator|-=
literal|2
expr_stmt|;
for|for
control|(
init|;
name|i
operator|<
name|markH
condition|;
operator|++
name|i
control|)
block|{
name|a
operator|<<
name|QLineF
argument_list|(
name|xx
argument_list|,
name|yy
argument_list|,
name|xx
argument_list|,
name|yy
operator|+
literal|2
argument_list|)
expr_stmt|;
operator|++
name|xx
expr_stmt|;
operator|--
name|yy
expr_stmt|;
block|}
if|if
condition|(
operator|!
operator|(
name|opt
operator|->
name|state
operator|&
name|State_Enabled
operator|)
operator|&&
operator|!
operator|(
name|opt
operator|->
name|state
operator|&
name|State_On
operator|)
condition|)
block|{
name|p
operator|->
name|save
argument_list|()
expr_stmt|;
name|p
operator|->
name|translate
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|opt
operator|->
name|palette
operator|.
name|light
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLines
argument_list|(
name|a
argument_list|)
expr_stmt|;
name|p
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
name|p
operator|->
name|setPen
argument_list|(
operator|(
name|opt
operator|->
name|state
operator|&
name|State_On
operator|)
condition|?
name|opt
operator|->
name|palette
operator|.
name|highlightedText
argument_list|()
operator|.
name|color
argument_list|()
else|:
name|opt
operator|->
name|palette
operator|.
name|text
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLines
argument_list|(
name|a
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|PE_Frame
case|:
case|case
name|PE_FrameMenu
case|:
if|if
condition|(
specifier|const
name|QStyleOptionFrame
modifier|*
name|frame
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionFrame
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
if|if
condition|(
name|pe
operator|==
name|PE_FrameMenu
operator|||
operator|(
name|frame
operator|->
name|state
operator|&
name|State_Sunken
operator|)
operator|||
operator|(
name|frame
operator|->
name|state
operator|&
name|State_Raised
operator|)
condition|)
block|{
name|qDrawShadePanel
argument_list|(
name|p
argument_list|,
name|frame
operator|->
name|rect
argument_list|,
name|frame
operator|->
name|palette
argument_list|,
name|frame
operator|->
name|state
operator|&
name|State_Sunken
argument_list|,
name|frame
operator|->
name|lineWidth
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|qDrawPlainRect
argument_list|(
name|p
argument_list|,
name|frame
operator|->
name|rect
argument_list|,
name|frame
operator|->
name|palette
operator|.
name|foreground
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
name|frame
operator|->
name|lineWidth
argument_list|)
expr_stmt|;
block|}
block|}
break|break;
ifndef|#
directive|ifndef
name|QT_NO_TOOLBAR
case|case
name|PE_PanelMenuBar
case|:
if|if
condition|(
name|widget
operator|&&
name|qobject_cast
argument_list|<
name|QToolBar
operator|*
argument_list|>
argument_list|(
name|widget
operator|->
name|parentWidget
argument_list|()
argument_list|)
condition|)
break|break;
if|if
condition|(
specifier|const
name|QStyleOptionFrame
modifier|*
name|frame
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionFrame
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|qDrawShadePanel
argument_list|(
name|p
argument_list|,
name|frame
operator|->
name|rect
argument_list|,
name|frame
operator|->
name|palette
argument_list|,
literal|false
argument_list|,
name|frame
operator|->
name|lineWidth
argument_list|,
operator|&
name|frame
operator|->
name|palette
operator|.
name|brush
argument_list|(
name|QPalette
operator|::
name|Button
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
specifier|const
name|QStyleOptionToolBar
modifier|*
name|frame
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionToolBar
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|qDrawShadePanel
argument_list|(
name|p
argument_list|,
name|frame
operator|->
name|rect
argument_list|,
name|frame
operator|->
name|palette
argument_list|,
literal|false
argument_list|,
name|frame
operator|->
name|lineWidth
argument_list|,
operator|&
name|frame
operator|->
name|palette
operator|.
name|brush
argument_list|(
name|QPalette
operator|::
name|Button
argument_list|)
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|PE_PanelMenu
case|:
break|break;
case|case
name|PE_PanelToolBar
case|:
break|break;
endif|#
directive|endif
comment|// QT_NO_TOOLBAR
ifndef|#
directive|ifndef
name|QT_NO_PROGRESSBAR
case|case
name|PE_IndicatorProgressChunk
case|:
block|{
name|bool
name|vertical
init|=
literal|false
decl_stmt|;
if|if
condition|(
specifier|const
name|QStyleOptionProgressBar
modifier|*
name|pb
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionProgressBar
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
name|vertical
operator|=
name|pb
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Vertical
expr_stmt|;
if|if
condition|(
operator|!
name|vertical
condition|)
block|{
name|p
operator|->
name|fillRect
argument_list|(
name|opt
operator|->
name|rect
operator|.
name|x
argument_list|()
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|y
argument_list|()
operator|+
literal|3
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|-
literal|2
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
literal|6
argument_list|,
name|opt
operator|->
name|palette
operator|.
name|brush
argument_list|(
name|QPalette
operator|::
name|Highlight
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|p
operator|->
name|fillRect
argument_list|(
name|opt
operator|->
name|rect
operator|.
name|x
argument_list|()
operator|+
literal|2
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|y
argument_list|()
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|-
literal|6
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
literal|2
argument_list|,
name|opt
operator|->
name|palette
operator|.
name|brush
argument_list|(
name|QPalette
operator|::
name|Highlight
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_PROGRESSBAR
case|case
name|PE_IndicatorBranch
case|:
block|{
specifier|static
specifier|const
name|int
name|decoration_size
init|=
literal|9
decl_stmt|;
name|int
name|mid_h
init|=
name|opt
operator|->
name|rect
operator|.
name|x
argument_list|()
operator|+
name|opt
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|/
literal|2
decl_stmt|;
name|int
name|mid_v
init|=
name|opt
operator|->
name|rect
operator|.
name|y
argument_list|()
operator|+
name|opt
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|/
literal|2
decl_stmt|;
name|int
name|bef_h
init|=
name|mid_h
decl_stmt|;
name|int
name|bef_v
init|=
name|mid_v
decl_stmt|;
name|int
name|aft_h
init|=
name|mid_h
decl_stmt|;
name|int
name|aft_v
init|=
name|mid_v
decl_stmt|;
if|if
condition|(
name|opt
operator|->
name|state
operator|&
name|State_Children
condition|)
block|{
name|int
name|delta
init|=
name|decoration_size
operator|/
literal|2
decl_stmt|;
name|bef_h
operator|-=
name|delta
expr_stmt|;
name|bef_v
operator|-=
name|delta
expr_stmt|;
name|aft_h
operator|+=
name|delta
expr_stmt|;
name|aft_v
operator|+=
name|delta
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|bef_h
operator|+
literal|2
argument_list|,
name|bef_v
operator|+
literal|4
argument_list|,
name|bef_h
operator|+
literal|6
argument_list|,
name|bef_v
operator|+
literal|4
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
operator|(
name|opt
operator|->
name|state
operator|&
name|State_Open
operator|)
condition|)
name|p
operator|->
name|drawLine
argument_list|(
name|bef_h
operator|+
literal|4
argument_list|,
name|bef_v
operator|+
literal|2
argument_list|,
name|bef_h
operator|+
literal|4
argument_list|,
name|bef_v
operator|+
literal|6
argument_list|)
expr_stmt|;
name|QPen
name|oldPen
init|=
name|p
operator|->
name|pen
argument_list|()
decl_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|opt
operator|->
name|palette
operator|.
name|dark
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawRect
argument_list|(
name|bef_h
argument_list|,
name|bef_v
argument_list|,
name|decoration_size
operator|-
literal|1
argument_list|,
name|decoration_size
operator|-
literal|1
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|oldPen
argument_list|)
expr_stmt|;
block|}
name|QBrush
name|brush
argument_list|(
name|opt
operator|->
name|palette
operator|.
name|dark
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
name|Qt
operator|::
name|Dense4Pattern
argument_list|)
decl_stmt|;
if|if
condition|(
name|opt
operator|->
name|state
operator|&
name|State_Item
condition|)
block|{
if|if
condition|(
name|opt
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
condition|)
name|p
operator|->
name|fillRect
argument_list|(
name|opt
operator|->
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|mid_v
argument_list|,
name|bef_h
operator|-
name|opt
operator|->
name|rect
operator|.
name|left
argument_list|()
argument_list|,
literal|1
argument_list|,
name|brush
argument_list|)
expr_stmt|;
else|else
name|p
operator|->
name|fillRect
argument_list|(
name|aft_h
argument_list|,
name|mid_v
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
name|aft_h
operator|+
literal|1
argument_list|,
literal|1
argument_list|,
name|brush
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|opt
operator|->
name|state
operator|&
name|State_Sibling
condition|)
name|p
operator|->
name|fillRect
argument_list|(
name|mid_h
argument_list|,
name|aft_v
argument_list|,
literal|1
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|bottom
argument_list|()
operator|-
name|aft_v
operator|+
literal|1
argument_list|,
name|brush
argument_list|)
expr_stmt|;
if|if
condition|(
name|opt
operator|->
name|state
operator|&
operator|(
name|State_Open
operator||
name|State_Children
operator||
name|State_Item
operator||
name|State_Sibling
operator|)
condition|)
name|p
operator|->
name|fillRect
argument_list|(
name|mid_h
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|y
argument_list|()
argument_list|,
literal|1
argument_list|,
name|bef_v
operator|-
name|opt
operator|->
name|rect
operator|.
name|y
argument_list|()
argument_list|,
name|brush
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|PE_FrameStatusBarItem
case|:
name|qDrawShadeRect
argument_list|(
name|p
argument_list|,
name|opt
operator|->
name|rect
argument_list|,
name|opt
operator|->
name|palette
argument_list|,
literal|true
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
break|break;
case|case
name|PE_IndicatorHeaderArrow
case|:
if|if
condition|(
specifier|const
name|QStyleOptionHeader
modifier|*
name|header
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionHeader
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|QPen
name|oldPen
init|=
name|p
operator|->
name|pen
argument_list|()
decl_stmt|;
if|if
condition|(
name|header
operator|->
name|sortIndicator
operator|&
name|QStyleOptionHeader
operator|::
name|SortUp
condition|)
block|{
name|p
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|opt
operator|->
name|palette
operator|.
name|light
argument_list|()
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|opt
operator|->
name|rect
operator|.
name|x
argument_list|()
operator|+
name|opt
operator|->
name|rect
operator|.
name|width
argument_list|()
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|y
argument_list|()
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|x
argument_list|()
operator|+
name|opt
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|/
literal|2
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|y
argument_list|()
operator|+
name|opt
operator|->
name|rect
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|opt
operator|->
name|palette
operator|.
name|dark
argument_list|()
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
specifier|const
name|QPoint
name|points
index|[]
init|=
block|{
name|QPoint
argument_list|(
name|opt
operator|->
name|rect
operator|.
name|x
argument_list|()
operator|+
name|opt
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|/
literal|2
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|y
argument_list|()
operator|+
name|opt
operator|->
name|rect
operator|.
name|height
argument_list|()
argument_list|)
block|,
name|QPoint
argument_list|(
name|opt
operator|->
name|rect
operator|.
name|x
argument_list|()
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|y
argument_list|()
argument_list|)
block|,
name|QPoint
argument_list|(
name|opt
operator|->
name|rect
operator|.
name|x
argument_list|()
operator|+
name|opt
operator|->
name|rect
operator|.
name|width
argument_list|()
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|y
argument_list|()
argument_list|)
block|,                 }
decl_stmt|;
name|p
operator|->
name|drawPolyline
argument_list|(
name|points
argument_list|,
sizeof|sizeof
name|points
operator|/
sizeof|sizeof
expr|*
name|points
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|header
operator|->
name|sortIndicator
operator|&
name|QStyleOptionHeader
operator|::
name|SortDown
condition|)
block|{
name|p
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|opt
operator|->
name|palette
operator|.
name|light
argument_list|()
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
specifier|const
name|QPoint
name|points
index|[]
init|=
block|{
name|QPoint
argument_list|(
name|opt
operator|->
name|rect
operator|.
name|x
argument_list|()
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|y
argument_list|()
operator|+
name|opt
operator|->
name|rect
operator|.
name|height
argument_list|()
argument_list|)
block|,
name|QPoint
argument_list|(
name|opt
operator|->
name|rect
operator|.
name|x
argument_list|()
operator|+
name|opt
operator|->
name|rect
operator|.
name|width
argument_list|()
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|y
argument_list|()
operator|+
name|opt
operator|->
name|rect
operator|.
name|height
argument_list|()
argument_list|)
block|,
name|QPoint
argument_list|(
name|opt
operator|->
name|rect
operator|.
name|x
argument_list|()
operator|+
name|opt
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|/
literal|2
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|y
argument_list|()
argument_list|)
block|,                 }
decl_stmt|;
name|p
operator|->
name|drawPolyline
argument_list|(
name|points
argument_list|,
sizeof|sizeof
name|points
operator|/
sizeof|sizeof
expr|*
name|points
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|opt
operator|->
name|palette
operator|.
name|dark
argument_list|()
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|opt
operator|->
name|rect
operator|.
name|x
argument_list|()
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|y
argument_list|()
operator|+
name|opt
operator|->
name|rect
operator|.
name|height
argument_list|()
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|x
argument_list|()
operator|+
name|opt
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|/
literal|2
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|y
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|p
operator|->
name|setPen
argument_list|(
name|oldPen
argument_list|)
expr_stmt|;
block|}
break|break;
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
case|case
name|PE_FrameTabBarBase
case|:
if|if
condition|(
specifier|const
name|QStyleOptionTabBarBase
modifier|*
name|tbb
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionTabBarBase
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|p
operator|->
name|save
argument_list|()
expr_stmt|;
switch|switch
condition|(
name|tbb
operator|->
name|shape
condition|)
block|{
case|case
name|QTabBar
operator|::
name|RoundedNorth
case|:
case|case
name|QTabBar
operator|::
name|TriangularNorth
case|:
name|p
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|tbb
operator|->
name|palette
operator|.
name|light
argument_list|()
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|tbb
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|tbb
operator|->
name|rect
operator|.
name|topRight
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|QTabBar
operator|::
name|RoundedWest
case|:
case|case
name|QTabBar
operator|::
name|TriangularWest
case|:
name|p
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|tbb
operator|->
name|palette
operator|.
name|light
argument_list|()
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|tbb
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|tbb
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|QTabBar
operator|::
name|RoundedSouth
case|:
case|case
name|QTabBar
operator|::
name|TriangularSouth
case|:
name|p
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|tbb
operator|->
name|palette
operator|.
name|shadow
argument_list|()
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|tbb
operator|->
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|tbb
operator|->
name|rect
operator|.
name|bottom
argument_list|()
argument_list|,
name|tbb
operator|->
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|tbb
operator|->
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|tbb
operator|->
name|palette
operator|.
name|dark
argument_list|()
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|tbb
operator|->
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|tbb
operator|->
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|,
name|tbb
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|tbb
operator|->
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
break|break;
case|case
name|QTabBar
operator|::
name|RoundedEast
case|:
case|case
name|QTabBar
operator|::
name|TriangularEast
case|:
name|p
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|tbb
operator|->
name|palette
operator|.
name|dark
argument_list|()
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|tbb
operator|->
name|rect
operator|.
name|topRight
argument_list|()
argument_list|,
name|tbb
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
argument_list|)
expr_stmt|;
break|break;
block|}
name|p
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
break|break;
case|case
name|PE_IndicatorTabClose
case|:
block|{
if|if
condition|(
name|d
operator|->
name|tabBarcloseButtonIcon
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|d
operator|->
name|tabBarcloseButtonIcon
operator|.
name|addPixmap
argument_list|(
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/standardbutton-closetab-16.png"
argument_list|)
argument_list|)
argument_list|,
name|QIcon
operator|::
name|Normal
argument_list|,
name|QIcon
operator|::
name|Off
argument_list|)
expr_stmt|;
name|d
operator|->
name|tabBarcloseButtonIcon
operator|.
name|addPixmap
argument_list|(
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/standardbutton-closetab-down-16.png"
argument_list|)
argument_list|)
argument_list|,
name|QIcon
operator|::
name|Normal
argument_list|,
name|QIcon
operator|::
name|On
argument_list|)
expr_stmt|;
name|d
operator|->
name|tabBarcloseButtonIcon
operator|.
name|addPixmap
argument_list|(
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/standardbutton-closetab-hover-16.png"
argument_list|)
argument_list|)
argument_list|,
name|QIcon
operator|::
name|Active
argument_list|,
name|QIcon
operator|::
name|Off
argument_list|)
expr_stmt|;
block|}
name|int
name|size
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|QStyle
operator|::
name|PM_SmallIconSize
argument_list|)
decl_stmt|;
name|QIcon
operator|::
name|Mode
name|mode
init|=
name|opt
operator|->
name|state
operator|&
name|State_Enabled
condition|?
operator|(
name|opt
operator|->
name|state
operator|&
name|State_Raised
condition|?
name|QIcon
operator|::
name|Active
else|:
name|QIcon
operator|::
name|Normal
operator|)
else|:
name|QIcon
operator|::
name|Disabled
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|opt
operator|->
name|state
operator|&
name|State_Raised
operator|)
operator|&&
operator|!
operator|(
name|opt
operator|->
name|state
operator|&
name|State_Sunken
operator|)
operator|&&
operator|!
operator|(
name|opt
operator|->
name|state
operator|&
name|QStyle
operator|::
name|State_Selected
operator|)
condition|)
name|mode
operator|=
name|QIcon
operator|::
name|Disabled
expr_stmt|;
name|QIcon
operator|::
name|State
name|state
init|=
name|opt
operator|->
name|state
operator|&
name|State_Sunken
condition|?
name|QIcon
operator|::
name|On
else|:
name|QIcon
operator|::
name|Off
decl_stmt|;
name|QPixmap
name|pixmap
init|=
name|d
operator|->
name|tabBarcloseButtonIcon
operator|.
name|pixmap
argument_list|(
name|qt_getWindow
argument_list|(
name|widget
argument_list|)
argument_list|,
name|QSize
argument_list|(
name|size
argument_list|,
name|size
argument_list|)
argument_list|,
name|mode
argument_list|,
name|state
argument_list|)
decl_stmt|;
name|proxy
argument_list|()
operator|->
name|drawItemPixmap
argument_list|(
name|p
argument_list|,
name|opt
operator|->
name|rect
argument_list|,
name|Qt
operator|::
name|AlignCenter
argument_list|,
name|pixmap
argument_list|)
expr_stmt|;
break|break;
block|}
endif|#
directive|endif
comment|// QT_NO_TABBAR
case|case
name|PE_FrameTabWidget
case|:
case|case
name|PE_FrameWindow
case|:
name|qDrawWinPanel
argument_list|(
name|p
argument_list|,
name|opt
operator|->
name|rect
argument_list|,
name|opt
operator|->
name|palette
argument_list|,
literal|false
argument_list|,
literal|0
argument_list|)
expr_stmt|;
break|break;
case|case
name|PE_FrameLineEdit
case|:
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_Frame
argument_list|,
name|opt
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
break|break;
ifndef|#
directive|ifndef
name|QT_NO_GROUPBOX
case|case
name|PE_FrameGroupBox
case|:
if|if
condition|(
specifier|const
name|QStyleOptionFrame
modifier|*
name|frame
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionFrame
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
if|if
condition|(
name|frame
operator|->
name|features
operator|&
name|QStyleOptionFrame
operator|::
name|Flat
condition|)
block|{
name|QRect
name|fr
init|=
name|frame
operator|->
name|rect
decl_stmt|;
name|QPoint
name|p1
argument_list|(
name|fr
operator|.
name|x
argument_list|()
argument_list|,
name|fr
operator|.
name|y
argument_list|()
operator|+
literal|1
argument_list|)
decl_stmt|;
name|QPoint
name|p2
argument_list|(
name|fr
operator|.
name|x
argument_list|()
operator|+
name|fr
operator|.
name|width
argument_list|()
argument_list|,
name|p1
operator|.
name|y
argument_list|()
argument_list|)
decl_stmt|;
name|qDrawShadeLine
argument_list|(
name|p
argument_list|,
name|p1
argument_list|,
name|p2
argument_list|,
name|frame
operator|->
name|palette
argument_list|,
literal|true
argument_list|,
name|frame
operator|->
name|lineWidth
argument_list|,
name|frame
operator|->
name|midLineWidth
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|qDrawShadeRect
argument_list|(
name|p
argument_list|,
name|frame
operator|->
name|rect
operator|.
name|x
argument_list|()
argument_list|,
name|frame
operator|->
name|rect
operator|.
name|y
argument_list|()
argument_list|,
name|frame
operator|->
name|rect
operator|.
name|width
argument_list|()
argument_list|,
name|frame
operator|->
name|rect
operator|.
name|height
argument_list|()
argument_list|,
name|frame
operator|->
name|palette
argument_list|,
literal|true
argument_list|,
name|frame
operator|->
name|lineWidth
argument_list|,
name|frame
operator|->
name|midLineWidth
argument_list|)
expr_stmt|;
block|}
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_GROUPBOX
ifndef|#
directive|ifndef
name|QT_NO_DOCKWIDGET
case|case
name|PE_FrameDockWidget
case|:
if|if
condition|(
specifier|const
name|QStyleOptionFrame
modifier|*
name|frame
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionFrame
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|int
name|lw
init|=
name|frame
operator|->
name|lineWidth
decl_stmt|;
if|if
condition|(
name|lw
operator|<=
literal|0
condition|)
name|lw
operator|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_DockWidgetFrameWidth
argument_list|)
expr_stmt|;
name|qDrawShadePanel
argument_list|(
name|p
argument_list|,
name|frame
operator|->
name|rect
argument_list|,
name|frame
operator|->
name|palette
argument_list|,
literal|false
argument_list|,
name|lw
argument_list|)
expr_stmt|;
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_DOCKWIDGET
ifndef|#
directive|ifndef
name|QT_NO_TOOLBAR
case|case
name|PE_IndicatorToolBarHandle
case|:
name|p
operator|->
name|save
argument_list|()
expr_stmt|;
name|p
operator|->
name|translate
argument_list|(
name|opt
operator|->
name|rect
operator|.
name|x
argument_list|()
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|y
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|opt
operator|->
name|state
operator|&
name|State_Horizontal
condition|)
block|{
name|int
name|x
init|=
name|opt
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|/
literal|3
decl_stmt|;
if|if
condition|(
name|opt
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
condition|)
name|x
operator|-=
literal|2
expr_stmt|;
if|if
condition|(
name|opt
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|>
literal|4
condition|)
block|{
name|qDrawShadePanel
argument_list|(
name|p
argument_list|,
name|x
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
literal|4
argument_list|,
name|opt
operator|->
name|palette
argument_list|,
literal|false
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|qDrawShadePanel
argument_list|(
name|p
argument_list|,
name|x
operator|+
literal|3
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
literal|4
argument_list|,
name|opt
operator|->
name|palette
argument_list|,
literal|false
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
name|opt
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|>
literal|4
condition|)
block|{
name|int
name|y
init|=
name|opt
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|/
literal|3
decl_stmt|;
name|qDrawShadePanel
argument_list|(
name|p
argument_list|,
literal|2
argument_list|,
name|y
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|-
literal|4
argument_list|,
literal|3
argument_list|,
name|opt
operator|->
name|palette
argument_list|,
literal|false
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|qDrawShadePanel
argument_list|(
name|p
argument_list|,
literal|2
argument_list|,
name|y
operator|+
literal|3
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|-
literal|4
argument_list|,
literal|3
argument_list|,
name|opt
operator|->
name|palette
argument_list|,
literal|false
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
name|p
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
case|case
name|PE_IndicatorToolBarSeparator
case|:
block|{
name|QPoint
name|p1
decl_stmt|,
name|p2
decl_stmt|;
if|if
condition|(
name|opt
operator|->
name|state
operator|&
name|State_Horizontal
condition|)
block|{
name|p1
operator|=
name|QPoint
argument_list|(
name|opt
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|/
literal|2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|p2
operator|=
name|QPoint
argument_list|(
name|p1
operator|.
name|x
argument_list|()
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|p1
operator|=
name|QPoint
argument_list|(
literal|0
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|/
literal|2
argument_list|)
expr_stmt|;
name|p2
operator|=
name|QPoint
argument_list|(
name|opt
operator|->
name|rect
operator|.
name|width
argument_list|()
argument_list|,
name|p1
operator|.
name|y
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|qDrawShadeLine
argument_list|(
name|p
argument_list|,
name|p1
argument_list|,
name|p2
argument_list|,
name|opt
operator|->
name|palette
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
break|break;
block|}
endif|#
directive|endif
comment|// QT_NO_TOOLBAR
ifndef|#
directive|ifndef
name|QT_NO_SPINBOX
case|case
name|PE_IndicatorSpinPlus
case|:
case|case
name|PE_IndicatorSpinMinus
case|:
block|{
name|QRect
name|r
init|=
name|opt
operator|->
name|rect
decl_stmt|;
name|int
name|fw
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_DefaultFrameWidth
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|QRect
name|br
init|=
name|r
operator|.
name|adjusted
argument_list|(
name|fw
argument_list|,
name|fw
argument_list|,
operator|-
name|fw
argument_list|,
operator|-
name|fw
argument_list|)
decl_stmt|;
name|int
name|offset
init|=
operator|(
name|opt
operator|->
name|state
operator|&
name|State_Sunken
operator|)
condition|?
literal|1
else|:
literal|0
decl_stmt|;
name|int
name|step
init|=
operator|(
name|br
operator|.
name|width
argument_list|()
operator|+
literal|4
operator|)
operator|/
literal|5
decl_stmt|;
name|p
operator|->
name|fillRect
argument_list|(
name|br
operator|.
name|x
argument_list|()
operator|+
name|offset
argument_list|,
name|br
operator|.
name|y
argument_list|()
operator|+
name|offset
operator|+
name|br
operator|.
name|height
argument_list|()
operator|/
literal|2
operator|-
name|step
operator|/
literal|2
argument_list|,
name|br
operator|.
name|width
argument_list|()
argument_list|,
name|step
argument_list|,
name|opt
operator|->
name|palette
operator|.
name|buttonText
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|pe
operator|==
name|PE_IndicatorSpinPlus
condition|)
name|p
operator|->
name|fillRect
argument_list|(
name|br
operator|.
name|x
argument_list|()
operator|+
name|br
operator|.
name|width
argument_list|()
operator|/
literal|2
operator|-
name|step
operator|/
literal|2
operator|+
name|offset
argument_list|,
name|br
operator|.
name|y
argument_list|()
operator|+
name|offset
argument_list|,
name|step
argument_list|,
name|br
operator|.
name|height
argument_list|()
argument_list|,
name|opt
operator|->
name|palette
operator|.
name|buttonText
argument_list|()
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|PE_IndicatorSpinUp
case|:
case|case
name|PE_IndicatorSpinDown
case|:
block|{
name|QRect
name|r
init|=
name|opt
operator|->
name|rect
decl_stmt|;
name|int
name|fw
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_DefaultFrameWidth
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
decl_stmt|;
comment|// QRect br = r.adjusted(fw, fw, -fw, -fw);
name|int
name|x
init|=
name|r
operator|.
name|x
argument_list|()
decl_stmt|,
name|y
init|=
name|r
operator|.
name|y
argument_list|()
decl_stmt|,
name|w
init|=
name|r
operator|.
name|width
argument_list|()
decl_stmt|,
name|h
init|=
name|r
operator|.
name|height
argument_list|()
decl_stmt|;
name|int
name|sw
init|=
name|w
operator|-
literal|4
decl_stmt|;
if|if
condition|(
name|sw
operator|<
literal|3
condition|)
break|break;
elseif|else
if|if
condition|(
operator|!
operator|(
name|sw
operator|&
literal|1
operator|)
condition|)
name|sw
operator|--
expr_stmt|;
name|sw
operator|-=
operator|(
name|sw
operator|/
literal|7
operator|)
operator|*
literal|2
expr_stmt|;
comment|// Empty border
name|int
name|sh
init|=
name|sw
operator|/
literal|2
operator|+
literal|2
decl_stmt|;
comment|// Must have empty row at foot of arrow
name|int
name|sx
init|=
name|x
operator|+
name|w
operator|/
literal|2
operator|-
name|sw
operator|/
literal|2
decl_stmt|;
name|int
name|sy
init|=
name|y
operator|+
name|h
operator|/
literal|2
operator|-
name|sh
operator|/
literal|2
decl_stmt|;
if|if
condition|(
name|pe
operator|==
name|PE_IndicatorSpinUp
operator|&&
name|fw
condition|)
operator|--
name|sy
expr_stmt|;
name|int
name|bsx
init|=
literal|0
decl_stmt|;
name|int
name|bsy
init|=
literal|0
decl_stmt|;
if|if
condition|(
name|opt
operator|->
name|state
operator|&
name|State_Sunken
condition|)
block|{
name|bsx
operator|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_ButtonShiftHorizontal
argument_list|)
expr_stmt|;
name|bsy
operator|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_ButtonShiftVertical
argument_list|)
expr_stmt|;
block|}
name|p
operator|->
name|save
argument_list|()
expr_stmt|;
name|p
operator|->
name|translate
argument_list|(
name|sx
operator|+
name|bsx
argument_list|,
name|sy
operator|+
name|bsy
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|opt
operator|->
name|palette
operator|.
name|buttonText
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|->
name|setBrush
argument_list|(
name|opt
operator|->
name|palette
operator|.
name|buttonText
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|->
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Qt4CompatiblePainting
argument_list|)
expr_stmt|;
if|if
condition|(
name|pe
operator|==
name|PE_IndicatorSpinDown
condition|)
block|{
specifier|const
name|QPoint
name|points
index|[]
init|=
block|{
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
name|sw
operator|-
literal|1
argument_list|,
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
argument|sh-
literal|2
argument_list|,
argument|sh-
literal|1
argument_list|)
block|}
decl_stmt|;
name|p
operator|->
name|drawPolygon
argument_list|(
name|points
argument_list|,
sizeof|sizeof
name|points
operator|/
sizeof|sizeof
expr|*
name|points
argument_list|)
expr_stmt|;
block|}
else|else
block|{
specifier|const
name|QPoint
name|points
index|[]
init|=
block|{
name|QPoint
argument_list|(
literal|0
argument_list|,
name|sh
operator|-
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
name|sw
operator|-
literal|1
argument_list|,
name|sh
operator|-
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
argument|sh-
literal|2
argument_list|,
literal|1
argument_list|)
block|}
decl_stmt|;
name|p
operator|->
name|drawPolygon
argument_list|(
name|points
argument_list|,
sizeof|sizeof
name|points
operator|/
sizeof|sizeof
expr|*
name|points
argument_list|)
expr_stmt|;
block|}
name|p
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
block|}
endif|#
directive|endif
comment|// QT_NO_SPINBOX
case|case
name|PE_PanelTipLabel
case|:
block|{
name|QBrush
name|oldBrush
init|=
name|p
operator|->
name|brush
argument_list|()
decl_stmt|;
name|QPen
name|oldPen
init|=
name|p
operator|->
name|pen
argument_list|()
decl_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|opt
operator|->
name|palette
operator|.
name|toolTipText
argument_list|()
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|setBrush
argument_list|(
name|opt
operator|->
name|palette
operator|.
name|toolTipBase
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawRect
argument_list|(
name|opt
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|oldPen
argument_list|)
expr_stmt|;
name|p
operator|->
name|setBrush
argument_list|(
name|oldBrush
argument_list|)
expr_stmt|;
break|break;
block|}
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
case|case
name|PE_IndicatorTabTear
case|:
if|if
condition|(
specifier|const
name|QStyleOptionTab
modifier|*
name|tab
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionTab
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|bool
name|rtl
init|=
name|tab
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
decl_stmt|;
name|QRect
name|rect
init|=
name|tab
operator|->
name|rect
decl_stmt|;
name|QPainterPath
name|path
decl_stmt|;
name|rect
operator|.
name|setTop
argument_list|(
name|rect
operator|.
name|top
argument_list|()
operator|+
operator|(
operator|(
name|tab
operator|->
name|state
operator|&
name|State_Selected
operator|)
condition|?
literal|1
else|:
literal|3
operator|)
argument_list|)
expr_stmt|;
name|rect
operator|.
name|setBottom
argument_list|(
name|rect
operator|.
name|bottom
argument_list|()
operator|-
operator|(
operator|(
name|tab
operator|->
name|state
operator|&
name|State_Selected
operator|)
condition|?
literal|0
else|:
literal|2
operator|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|moveTo
argument_list|(
name|QPoint
argument_list|(
name|rtl
condition|?
name|rect
operator|.
name|right
argument_list|()
else|:
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|count
init|=
literal|4
decl_stmt|;
for|for
control|(
name|int
name|jags
init|=
literal|1
init|;
name|jags
operator|<=
name|count
condition|;
operator|++
name|jags
operator|,
name|rtl
operator|=
operator|!
name|rtl
control|)
name|path
operator|.
name|lineTo
argument_list|(
name|QPoint
argument_list|(
name|rtl
condition|?
name|rect
operator|.
name|left
argument_list|()
else|:
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
name|jags
operator|*
name|rect
operator|.
name|height
argument_list|()
operator|/
name|count
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|tab
operator|->
name|palette
operator|.
name|light
argument_list|()
argument_list|,
name|qreal
argument_list|(
literal|.8
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|setBrush
argument_list|(
name|tab
operator|->
name|palette
operator|.
name|background
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|->
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawPath
argument_list|(
name|path
argument_list|)
expr_stmt|;
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_TABBAR
ifndef|#
directive|ifndef
name|QT_NO_LINEEDIT
case|case
name|PE_PanelLineEdit
case|:
if|if
condition|(
specifier|const
name|QStyleOptionFrame
modifier|*
name|panel
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionFrame
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|p
operator|->
name|fillRect
argument_list|(
name|panel
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
name|panel
operator|->
name|lineWidth
argument_list|,
name|panel
operator|->
name|lineWidth
argument_list|,
operator|-
name|panel
operator|->
name|lineWidth
argument_list|,
operator|-
name|panel
operator|->
name|lineWidth
argument_list|)
argument_list|,
name|panel
operator|->
name|palette
operator|.
name|brush
argument_list|(
name|QPalette
operator|::
name|Base
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|panel
operator|->
name|lineWidth
operator|>
literal|0
condition|)
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_FrameLineEdit
argument_list|,
name|panel
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_LINEEDIT
ifndef|#
directive|ifndef
name|QT_NO_COLUMNVIEW
case|case
name|PE_IndicatorColumnViewArrow
case|:
block|{
if|if
condition|(
specifier|const
name|QStyleOptionViewItem
modifier|*
name|viewOpt
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionViewItem
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|bool
name|reverse
init|=
operator|(
name|viewOpt
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
operator|)
decl_stmt|;
name|p
operator|->
name|save
argument_list|()
expr_stmt|;
name|QPainterPath
name|path
decl_stmt|;
name|int
name|x
init|=
name|viewOpt
operator|->
name|rect
operator|.
name|x
argument_list|()
operator|+
literal|1
decl_stmt|;
name|int
name|offset
init|=
operator|(
name|viewOpt
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|/
literal|3
operator|)
decl_stmt|;
name|int
name|height
init|=
operator|(
name|viewOpt
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|)
operator|-
name|offset
operator|*
literal|2
decl_stmt|;
if|if
condition|(
name|height
operator|%
literal|2
operator|==
literal|1
condition|)
operator|--
name|height
expr_stmt|;
name|int
name|x2
init|=
name|x
operator|+
name|height
operator|-
literal|1
decl_stmt|;
if|if
condition|(
name|reverse
condition|)
block|{
name|x
operator|=
name|viewOpt
operator|->
name|rect
operator|.
name|x
argument_list|()
operator|+
name|viewOpt
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|-
literal|1
expr_stmt|;
name|x2
operator|=
name|x
operator|-
name|height
operator|+
literal|1
expr_stmt|;
block|}
name|path
operator|.
name|moveTo
argument_list|(
name|x
argument_list|,
name|viewOpt
operator|->
name|rect
operator|.
name|y
argument_list|()
operator|+
name|offset
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|x
argument_list|,
name|viewOpt
operator|->
name|rect
operator|.
name|y
argument_list|()
operator|+
name|offset
operator|+
name|height
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|x2
argument_list|,
name|viewOpt
operator|->
name|rect
operator|.
name|y
argument_list|()
operator|+
name|offset
operator|+
name|height
operator|/
literal|2
argument_list|)
expr_stmt|;
name|path
operator|.
name|closeSubpath
argument_list|()
expr_stmt|;
if|if
condition|(
name|viewOpt
operator|->
name|state
operator|&
name|QStyle
operator|::
name|State_Selected
condition|)
block|{
if|if
condition|(
name|viewOpt
operator|->
name|showDecorationSelected
condition|)
block|{
name|QColor
name|color
init|=
name|viewOpt
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Active
argument_list|,
name|QPalette
operator|::
name|HighlightedText
argument_list|)
decl_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|color
argument_list|)
expr_stmt|;
name|p
operator|->
name|setBrush
argument_list|(
name|color
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QColor
name|color
init|=
name|viewOpt
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Active
argument_list|,
name|QPalette
operator|::
name|WindowText
argument_list|)
decl_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|color
argument_list|)
expr_stmt|;
name|p
operator|->
name|setBrush
argument_list|(
name|color
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|QColor
name|color
init|=
name|viewOpt
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Active
argument_list|,
name|QPalette
operator|::
name|Mid
argument_list|)
decl_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|color
argument_list|)
expr_stmt|;
name|p
operator|->
name|setBrush
argument_list|(
name|color
argument_list|)
expr_stmt|;
block|}
name|p
operator|->
name|drawPath
argument_list|(
name|path
argument_list|)
expr_stmt|;
comment|// draw the vertical and top triangle line
if|if
condition|(
operator|!
operator|(
name|viewOpt
operator|->
name|state
operator|&
name|QStyle
operator|::
name|State_Selected
operator|)
condition|)
block|{
name|QPainterPath
name|lines
decl_stmt|;
name|lines
operator|.
name|moveTo
argument_list|(
name|x
argument_list|,
name|viewOpt
operator|->
name|rect
operator|.
name|y
argument_list|()
operator|+
name|offset
argument_list|)
expr_stmt|;
name|lines
operator|.
name|lineTo
argument_list|(
name|x
argument_list|,
name|viewOpt
operator|->
name|rect
operator|.
name|y
argument_list|()
operator|+
name|offset
operator|+
name|height
argument_list|)
expr_stmt|;
name|lines
operator|.
name|moveTo
argument_list|(
name|x
argument_list|,
name|viewOpt
operator|->
name|rect
operator|.
name|y
argument_list|()
operator|+
name|offset
argument_list|)
expr_stmt|;
name|lines
operator|.
name|lineTo
argument_list|(
name|x2
argument_list|,
name|viewOpt
operator|->
name|rect
operator|.
name|y
argument_list|()
operator|+
name|offset
operator|+
name|height
operator|/
literal|2
argument_list|)
expr_stmt|;
name|QColor
name|color
init|=
name|viewOpt
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Active
argument_list|,
name|QPalette
operator|::
name|Dark
argument_list|)
decl_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|color
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawPath
argument_list|(
name|lines
argument_list|)
expr_stmt|;
block|}
name|p
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
break|break;
block|}
endif|#
directive|endif
comment|//QT_NO_COLUMNVIEW
case|case
name|PE_IndicatorItemViewItemDrop
case|:
block|{
name|QRect
name|rect
init|=
name|opt
operator|->
name|rect
decl_stmt|;
if|if
condition|(
name|opt
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|==
literal|0
condition|)
name|p
operator|->
name|drawLine
argument_list|(
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|rect
operator|.
name|topRight
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|p
operator|->
name|drawRect
argument_list|(
name|rect
argument_list|)
expr_stmt|;
break|break;
block|}
ifndef|#
directive|ifndef
name|QT_NO_ITEMVIEWS
case|case
name|PE_PanelItemViewRow
case|:
if|if
condition|(
specifier|const
name|QStyleOptionViewItem
modifier|*
name|vopt
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionViewItem
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|QPalette
operator|::
name|ColorGroup
name|cg
init|=
operator|(
name|widget
condition|?
name|widget
operator|->
name|isEnabled
argument_list|()
else|:
operator|(
name|vopt
operator|->
name|state
operator|&
name|QStyle
operator|::
name|State_Enabled
operator|)
operator|)
condition|?
name|QPalette
operator|::
name|Normal
else|:
name|QPalette
operator|::
name|Disabled
decl_stmt|;
if|if
condition|(
name|cg
operator|==
name|QPalette
operator|::
name|Normal
operator|&&
operator|!
operator|(
name|vopt
operator|->
name|state
operator|&
name|QStyle
operator|::
name|State_Active
operator|)
condition|)
name|cg
operator|=
name|QPalette
operator|::
name|Inactive
expr_stmt|;
if|if
condition|(
operator|(
name|vopt
operator|->
name|state
operator|&
name|QStyle
operator|::
name|State_Selected
operator|)
operator|&&
name|proxy
argument_list|()
operator|->
name|styleHint
argument_list|(
name|QStyle
operator|::
name|SH_ItemView_ShowDecorationSelected
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
condition|)
name|p
operator|->
name|fillRect
argument_list|(
name|vopt
operator|->
name|rect
argument_list|,
name|vopt
operator|->
name|palette
operator|.
name|brush
argument_list|(
name|cg
argument_list|,
name|QPalette
operator|::
name|Highlight
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|vopt
operator|->
name|features
operator|&
name|QStyleOptionViewItem
operator|::
name|Alternate
condition|)
name|p
operator|->
name|fillRect
argument_list|(
name|vopt
operator|->
name|rect
argument_list|,
name|vopt
operator|->
name|palette
operator|.
name|brush
argument_list|(
name|cg
argument_list|,
name|QPalette
operator|::
name|AlternateBase
argument_list|)
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|PE_PanelItemViewItem
case|:
if|if
condition|(
specifier|const
name|QStyleOptionViewItem
modifier|*
name|vopt
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionViewItem
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|QPalette
operator|::
name|ColorGroup
name|cg
init|=
operator|(
name|widget
condition|?
name|widget
operator|->
name|isEnabled
argument_list|()
else|:
operator|(
name|vopt
operator|->
name|state
operator|&
name|QStyle
operator|::
name|State_Enabled
operator|)
operator|)
condition|?
name|QPalette
operator|::
name|Normal
else|:
name|QPalette
operator|::
name|Disabled
decl_stmt|;
if|if
condition|(
name|cg
operator|==
name|QPalette
operator|::
name|Normal
operator|&&
operator|!
operator|(
name|vopt
operator|->
name|state
operator|&
name|QStyle
operator|::
name|State_Active
operator|)
condition|)
name|cg
operator|=
name|QPalette
operator|::
name|Inactive
expr_stmt|;
if|if
condition|(
name|vopt
operator|->
name|showDecorationSelected
operator|&&
operator|(
name|vopt
operator|->
name|state
operator|&
name|QStyle
operator|::
name|State_Selected
operator|)
condition|)
block|{
name|p
operator|->
name|fillRect
argument_list|(
name|vopt
operator|->
name|rect
argument_list|,
name|vopt
operator|->
name|palette
operator|.
name|brush
argument_list|(
name|cg
argument_list|,
name|QPalette
operator|::
name|Highlight
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|vopt
operator|->
name|backgroundBrush
operator|.
name|style
argument_list|()
operator|!=
name|Qt
operator|::
name|NoBrush
condition|)
block|{
name|QPointF
name|oldBO
init|=
name|p
operator|->
name|brushOrigin
argument_list|()
decl_stmt|;
name|p
operator|->
name|setBrushOrigin
argument_list|(
name|vopt
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|->
name|fillRect
argument_list|(
name|vopt
operator|->
name|rect
argument_list|,
name|vopt
operator|->
name|backgroundBrush
argument_list|)
expr_stmt|;
name|p
operator|->
name|setBrushOrigin
argument_list|(
name|oldBO
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|vopt
operator|->
name|state
operator|&
name|QStyle
operator|::
name|State_Selected
condition|)
block|{
name|QRect
name|textRect
init|=
name|subElementRect
argument_list|(
name|QStyle
operator|::
name|SE_ItemViewItemText
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|p
operator|->
name|fillRect
argument_list|(
name|textRect
argument_list|,
name|vopt
operator|->
name|palette
operator|.
name|brush
argument_list|(
name|cg
argument_list|,
name|QPalette
operator|::
name|Highlight
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
break|break;
endif|#
directive|endif
comment|//QT_NO_ITEMVIEWS
case|case
name|PE_PanelScrollAreaCorner
case|:
block|{
specifier|const
name|QBrush
name|brush
argument_list|(
name|opt
operator|->
name|palette
operator|.
name|brush
argument_list|(
name|QPalette
operator|::
name|Window
argument_list|)
argument_list|)
decl_stmt|;
name|p
operator|->
name|fillRect
argument_list|(
name|opt
operator|->
name|rect
argument_list|,
name|brush
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|PE_IndicatorArrowUp
case|:
case|case
name|PE_IndicatorArrowDown
case|:
case|case
name|PE_IndicatorArrowRight
case|:
case|case
name|PE_IndicatorArrowLeft
case|:
block|{
if|if
condition|(
name|opt
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|<=
literal|1
operator|||
name|opt
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|<=
literal|1
condition|)
break|break;
name|QRect
name|r
init|=
name|opt
operator|->
name|rect
decl_stmt|;
name|int
name|size
init|=
name|qMin
argument_list|(
name|r
operator|.
name|height
argument_list|()
argument_list|,
name|r
operator|.
name|width
argument_list|()
argument_list|)
decl_stmt|;
name|QPixmap
name|pixmap
decl_stmt|;
name|QString
name|pixmapName
init|=
name|QStyleHelper
operator|::
name|uniqueName
argument_list|(
name|QLatin1String
argument_list|(
literal|"$qt_ia-"
argument_list|)
operator|%
name|QLatin1String
argument_list|(
name|metaObject
argument_list|()
operator|->
name|className
argument_list|()
argument_list|)
argument_list|,
name|opt
argument_list|,
name|QSize
argument_list|(
name|size
argument_list|,
name|size
argument_list|)
argument_list|)
operator|%
name|HexString
argument_list|<
name|uint
argument_list|>
argument_list|(
name|pe
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|QPixmapCache
operator|::
name|find
argument_list|(
name|pixmapName
argument_list|,
name|pixmap
argument_list|)
condition|)
block|{
name|int
name|border
init|=
name|size
operator|/
literal|5
decl_stmt|;
name|int
name|sqsize
init|=
literal|2
operator|*
operator|(
name|size
operator|/
literal|2
operator|)
decl_stmt|;
name|QImage
name|image
argument_list|(
name|sqsize
argument_list|,
name|sqsize
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|image
operator|.
name|fill
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QPainter
name|imagePainter
argument_list|(
operator|&
name|image
argument_list|)
decl_stmt|;
name|QPolygon
name|a
decl_stmt|;
switch|switch
condition|(
name|pe
condition|)
block|{
case|case
name|PE_IndicatorArrowUp
case|:
name|a
operator|.
name|setPoints
argument_list|(
literal|3
argument_list|,
name|border
argument_list|,
name|sqsize
operator|/
literal|2
argument_list|,
name|sqsize
operator|/
literal|2
argument_list|,
name|border
argument_list|,
name|sqsize
operator|-
name|border
argument_list|,
name|sqsize
operator|/
literal|2
argument_list|)
expr_stmt|;
break|break;
case|case
name|PE_IndicatorArrowDown
case|:
name|a
operator|.
name|setPoints
argument_list|(
literal|3
argument_list|,
name|border
argument_list|,
name|sqsize
operator|/
literal|2
argument_list|,
name|sqsize
operator|/
literal|2
argument_list|,
name|sqsize
operator|-
name|border
argument_list|,
name|sqsize
operator|-
name|border
argument_list|,
name|sqsize
operator|/
literal|2
argument_list|)
expr_stmt|;
break|break;
case|case
name|PE_IndicatorArrowRight
case|:
name|a
operator|.
name|setPoints
argument_list|(
literal|3
argument_list|,
name|sqsize
operator|-
name|border
argument_list|,
name|sqsize
operator|/
literal|2
argument_list|,
name|sqsize
operator|/
literal|2
argument_list|,
name|border
argument_list|,
name|sqsize
operator|/
literal|2
argument_list|,
name|sqsize
operator|-
name|border
argument_list|)
expr_stmt|;
break|break;
case|case
name|PE_IndicatorArrowLeft
case|:
name|a
operator|.
name|setPoints
argument_list|(
literal|3
argument_list|,
name|border
argument_list|,
name|sqsize
operator|/
literal|2
argument_list|,
name|sqsize
operator|/
literal|2
argument_list|,
name|border
argument_list|,
name|sqsize
operator|/
literal|2
argument_list|,
name|sqsize
operator|-
name|border
argument_list|)
expr_stmt|;
break|break;
default|default:
break|break;
block|}
name|int
name|bsx
init|=
literal|0
decl_stmt|;
name|int
name|bsy
init|=
literal|0
decl_stmt|;
if|if
condition|(
name|opt
operator|->
name|state
operator|&
name|State_Sunken
condition|)
block|{
name|bsx
operator|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_ButtonShiftHorizontal
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|bsy
operator|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_ButtonShiftVertical
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
name|QRect
name|bounds
init|=
name|a
operator|.
name|boundingRect
argument_list|()
decl_stmt|;
name|int
name|sx
init|=
name|sqsize
operator|/
literal|2
operator|-
name|bounds
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|-
literal|1
decl_stmt|;
name|int
name|sy
init|=
name|sqsize
operator|/
literal|2
operator|-
name|bounds
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|-
literal|1
decl_stmt|;
name|imagePainter
operator|.
name|translate
argument_list|(
name|sx
operator|+
name|bsx
argument_list|,
name|sy
operator|+
name|bsy
argument_list|)
expr_stmt|;
name|imagePainter
operator|.
name|setPen
argument_list|(
name|opt
operator|->
name|palette
operator|.
name|buttonText
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|imagePainter
operator|.
name|setBrush
argument_list|(
name|opt
operator|->
name|palette
operator|.
name|buttonText
argument_list|()
argument_list|)
expr_stmt|;
name|imagePainter
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Qt4CompatiblePainting
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
operator|(
name|opt
operator|->
name|state
operator|&
name|State_Enabled
operator|)
condition|)
block|{
name|imagePainter
operator|.
name|translate
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|imagePainter
operator|.
name|setBrush
argument_list|(
name|opt
operator|->
name|palette
operator|.
name|light
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|imagePainter
operator|.
name|setPen
argument_list|(
name|opt
operator|->
name|palette
operator|.
name|light
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|imagePainter
operator|.
name|drawPolygon
argument_list|(
name|a
argument_list|)
expr_stmt|;
name|imagePainter
operator|.
name|translate
argument_list|(
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|imagePainter
operator|.
name|setBrush
argument_list|(
name|opt
operator|->
name|palette
operator|.
name|mid
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|imagePainter
operator|.
name|setPen
argument_list|(
name|opt
operator|->
name|palette
operator|.
name|mid
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|imagePainter
operator|.
name|drawPolygon
argument_list|(
name|a
argument_list|)
expr_stmt|;
name|imagePainter
operator|.
name|end
argument_list|()
expr_stmt|;
name|pixmap
operator|=
name|QPixmap
operator|::
name|fromImage
argument_list|(
name|image
argument_list|)
expr_stmt|;
name|QPixmapCache
operator|::
name|insert
argument_list|(
name|pixmapName
argument_list|,
name|pixmap
argument_list|)
expr_stmt|;
block|}
name|int
name|xOffset
init|=
name|r
operator|.
name|x
argument_list|()
operator|+
operator|(
name|r
operator|.
name|width
argument_list|()
operator|-
name|size
operator|)
operator|/
literal|2
decl_stmt|;
name|int
name|yOffset
init|=
name|r
operator|.
name|y
argument_list|()
operator|+
operator|(
name|r
operator|.
name|height
argument_list|()
operator|-
name|size
operator|)
operator|/
literal|2
decl_stmt|;
name|p
operator|->
name|drawPixmap
argument_list|(
name|xOffset
argument_list|,
name|yOffset
argument_list|,
name|pixmap
argument_list|)
expr_stmt|;
block|}
break|break;
default|default:
break|break;
block|}
block|}
end_function
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_TOOLBUTTON
end_ifndef
begin_function
DECL|function|drawArrow
specifier|static
name|void
name|drawArrow
parameter_list|(
specifier|const
name|QStyle
modifier|*
name|style
parameter_list|,
specifier|const
name|QStyleOptionToolButton
modifier|*
name|toolbutton
parameter_list|,
specifier|const
name|QRect
modifier|&
name|rect
parameter_list|,
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
init|=
literal|0
parameter_list|)
block|{
name|QStyle
operator|::
name|PrimitiveElement
name|pe
decl_stmt|;
switch|switch
condition|(
name|toolbutton
operator|->
name|arrowType
condition|)
block|{
case|case
name|Qt
operator|::
name|LeftArrow
case|:
name|pe
operator|=
name|QStyle
operator|::
name|PE_IndicatorArrowLeft
expr_stmt|;
break|break;
case|case
name|Qt
operator|::
name|RightArrow
case|:
name|pe
operator|=
name|QStyle
operator|::
name|PE_IndicatorArrowRight
expr_stmt|;
break|break;
case|case
name|Qt
operator|::
name|UpArrow
case|:
name|pe
operator|=
name|QStyle
operator|::
name|PE_IndicatorArrowUp
expr_stmt|;
break|break;
case|case
name|Qt
operator|::
name|DownArrow
case|:
name|pe
operator|=
name|QStyle
operator|::
name|PE_IndicatorArrowDown
expr_stmt|;
break|break;
default|default:
return|return;
block|}
name|QStyleOption
name|arrowOpt
decl_stmt|;
name|arrowOpt
operator|.
name|rect
operator|=
name|rect
expr_stmt|;
name|arrowOpt
operator|.
name|palette
operator|=
name|toolbutton
operator|->
name|palette
expr_stmt|;
name|arrowOpt
operator|.
name|state
operator|=
name|toolbutton
operator|->
name|state
expr_stmt|;
name|style
operator|->
name|drawPrimitive
argument_list|(
name|pe
argument_list|,
operator|&
name|arrowOpt
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_TOOLBUTTON
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_ITEMVIEWS
end_ifndef
begin_function
DECL|function|viewItemTextLayout
specifier|static
name|QSizeF
name|viewItemTextLayout
parameter_list|(
name|QTextLayout
modifier|&
name|textLayout
parameter_list|,
name|int
name|lineWidth
parameter_list|)
block|{
name|qreal
name|height
init|=
literal|0
decl_stmt|;
name|qreal
name|widthUsed
init|=
literal|0
decl_stmt|;
name|textLayout
operator|.
name|beginLayout
argument_list|()
expr_stmt|;
while|while
condition|(
literal|true
condition|)
block|{
name|QTextLine
name|line
init|=
name|textLayout
operator|.
name|createLine
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|line
operator|.
name|isValid
argument_list|()
condition|)
break|break;
name|line
operator|.
name|setLineWidth
argument_list|(
name|lineWidth
argument_list|)
expr_stmt|;
name|line
operator|.
name|setPosition
argument_list|(
name|QPointF
argument_list|(
literal|0
argument_list|,
name|height
argument_list|)
argument_list|)
expr_stmt|;
name|height
operator|+=
name|line
operator|.
name|height
argument_list|()
expr_stmt|;
name|widthUsed
operator|=
name|qMax
argument_list|(
name|widthUsed
argument_list|,
name|line
operator|.
name|naturalTextWidth
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|textLayout
operator|.
name|endLayout
argument_list|()
expr_stmt|;
return|return
name|QSizeF
argument_list|(
name|widthUsed
argument_list|,
name|height
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|viewItemSize
name|QSize
name|QCommonStylePrivate
operator|::
name|viewItemSize
parameter_list|(
specifier|const
name|QStyleOptionViewItem
modifier|*
name|option
parameter_list|,
name|int
name|role
parameter_list|)
specifier|const
block|{
specifier|const
name|QWidget
modifier|*
name|widget
init|=
name|option
operator|->
name|widget
decl_stmt|;
switch|switch
condition|(
name|role
condition|)
block|{
case|case
name|Qt
operator|::
name|CheckStateRole
case|:
if|if
condition|(
name|option
operator|->
name|features
operator|&
name|QStyleOptionViewItem
operator|::
name|HasCheckIndicator
condition|)
return|return
name|QSize
argument_list|(
name|proxyStyle
operator|->
name|pixelMetric
argument_list|(
name|QStyle
operator|::
name|PM_IndicatorWidth
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
argument_list|,
name|proxyStyle
operator|->
name|pixelMetric
argument_list|(
name|QStyle
operator|::
name|PM_IndicatorHeight
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
argument_list|)
return|;
break|break;
case|case
name|Qt
operator|::
name|DisplayRole
case|:
if|if
condition|(
name|option
operator|->
name|features
operator|&
name|QStyleOptionViewItem
operator|::
name|HasDisplay
condition|)
block|{
name|QTextOption
name|textOption
decl_stmt|;
name|textOption
operator|.
name|setWrapMode
argument_list|(
name|QTextOption
operator|::
name|WordWrap
argument_list|)
expr_stmt|;
name|QTextLayout
name|textLayout
argument_list|(
name|option
operator|->
name|text
argument_list|,
name|option
operator|->
name|font
argument_list|)
decl_stmt|;
name|textLayout
operator|.
name|setTextOption
argument_list|(
name|textOption
argument_list|)
expr_stmt|;
specifier|const
name|bool
name|wrapText
init|=
name|option
operator|->
name|features
operator|&
name|QStyleOptionViewItem
operator|::
name|WrapText
decl_stmt|;
specifier|const
name|int
name|textMargin
init|=
name|proxyStyle
operator|->
name|pixelMetric
argument_list|(
name|QStyle
operator|::
name|PM_FocusFrameHMargin
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
operator|+
literal|1
decl_stmt|;
name|QRect
name|bounds
init|=
name|option
operator|->
name|rect
decl_stmt|;
switch|switch
condition|(
name|option
operator|->
name|decorationPosition
condition|)
block|{
case|case
name|QStyleOptionViewItem
operator|::
name|Left
case|:
case|case
name|QStyleOptionViewItem
operator|::
name|Right
case|:
name|bounds
operator|.
name|setWidth
argument_list|(
name|wrapText
operator|&&
name|bounds
operator|.
name|isValid
argument_list|()
condition|?
name|bounds
operator|.
name|width
argument_list|()
operator|-
literal|2
operator|*
name|textMargin
else|:
name|QFIXED_MAX
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyleOptionViewItem
operator|::
name|Top
case|:
case|case
name|QStyleOptionViewItem
operator|::
name|Bottom
case|:
if|if
condition|(
name|wrapText
condition|)
name|bounds
operator|.
name|setWidth
argument_list|(
name|bounds
operator|.
name|isValid
argument_list|()
condition|?
name|bounds
operator|.
name|width
argument_list|()
operator|-
literal|2
operator|*
name|textMargin
else|:
name|option
operator|->
name|decorationSize
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|bounds
operator|.
name|setWidth
argument_list|(
name|QFIXED_MAX
argument_list|)
expr_stmt|;
break|break;
default|default:
break|break;
block|}
specifier|const
name|int
name|lineWidth
init|=
name|bounds
operator|.
name|width
argument_list|()
decl_stmt|;
specifier|const
name|QSizeF
name|size
init|=
name|viewItemTextLayout
argument_list|(
name|textLayout
argument_list|,
name|lineWidth
argument_list|)
decl_stmt|;
return|return
name|QSize
argument_list|(
name|qCeil
argument_list|(
name|size
operator|.
name|width
argument_list|()
argument_list|)
operator|+
literal|2
operator|*
name|textMargin
argument_list|,
name|qCeil
argument_list|(
name|size
operator|.
name|height
argument_list|()
argument_list|)
argument_list|)
return|;
block|}
break|break;
case|case
name|Qt
operator|::
name|DecorationRole
case|:
if|if
condition|(
name|option
operator|->
name|features
operator|&
name|QStyleOptionViewItem
operator|::
name|HasDecoration
condition|)
block|{
return|return
name|option
operator|->
name|decorationSize
return|;
block|}
break|break;
default|default:
break|break;
block|}
return|return
name|QSize
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|viewItemDrawText
name|void
name|QCommonStylePrivate
operator|::
name|viewItemDrawText
parameter_list|(
name|QPainter
modifier|*
name|p
parameter_list|,
specifier|const
name|QStyleOptionViewItem
modifier|*
name|option
parameter_list|,
specifier|const
name|QRect
modifier|&
name|rect
parameter_list|)
specifier|const
block|{
specifier|const
name|QWidget
modifier|*
name|widget
init|=
name|option
operator|->
name|widget
decl_stmt|;
specifier|const
name|int
name|textMargin
init|=
name|proxyStyle
operator|->
name|pixelMetric
argument_list|(
name|QStyle
operator|::
name|PM_FocusFrameHMargin
argument_list|,
literal|0
argument_list|,
name|widget
argument_list|)
operator|+
literal|1
decl_stmt|;
name|QRect
name|textRect
init|=
name|rect
operator|.
name|adjusted
argument_list|(
name|textMargin
argument_list|,
literal|0
argument_list|,
operator|-
name|textMargin
argument_list|,
literal|0
argument_list|)
decl_stmt|;
comment|// remove width padding
specifier|const
name|bool
name|wrapText
init|=
name|option
operator|->
name|features
operator|&
name|QStyleOptionViewItem
operator|::
name|WrapText
decl_stmt|;
name|QTextOption
name|textOption
decl_stmt|;
name|textOption
operator|.
name|setWrapMode
argument_list|(
name|wrapText
condition|?
name|QTextOption
operator|::
name|WordWrap
else|:
name|QTextOption
operator|::
name|ManualWrap
argument_list|)
expr_stmt|;
name|textOption
operator|.
name|setTextDirection
argument_list|(
name|option
operator|->
name|direction
argument_list|)
expr_stmt|;
name|textOption
operator|.
name|setAlignment
argument_list|(
name|QStyle
operator|::
name|visualAlignment
argument_list|(
name|option
operator|->
name|direction
argument_list|,
name|option
operator|->
name|displayAlignment
argument_list|)
argument_list|)
expr_stmt|;
name|QTextLayout
name|textLayout
argument_list|(
name|option
operator|->
name|text
argument_list|,
name|option
operator|->
name|font
argument_list|)
decl_stmt|;
name|textLayout
operator|.
name|setTextOption
argument_list|(
name|textOption
argument_list|)
expr_stmt|;
name|viewItemTextLayout
argument_list|(
name|textLayout
argument_list|,
name|textRect
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
name|QString
name|elidedText
decl_stmt|;
name|qreal
name|height
init|=
literal|0
decl_stmt|;
name|qreal
name|width
init|=
literal|0
decl_stmt|;
name|int
name|elidedIndex
init|=
operator|-
literal|1
decl_stmt|;
specifier|const
name|int
name|lineCount
init|=
name|textLayout
operator|.
name|lineCount
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|lineCount
condition|;
operator|++
name|j
control|)
block|{
specifier|const
name|QTextLine
name|line
init|=
name|textLayout
operator|.
name|lineAt
argument_list|(
name|j
argument_list|)
decl_stmt|;
if|if
condition|(
name|j
operator|+
literal|1
operator|<=
name|lineCount
operator|-
literal|1
condition|)
block|{
specifier|const
name|QTextLine
name|nextLine
init|=
name|textLayout
operator|.
name|lineAt
argument_list|(
name|j
operator|+
literal|1
argument_list|)
decl_stmt|;
if|if
condition|(
operator|(
name|nextLine
operator|.
name|y
argument_list|()
operator|+
name|nextLine
operator|.
name|height
argument_list|()
operator|)
operator|>
name|textRect
operator|.
name|height
argument_list|()
condition|)
block|{
name|int
name|start
init|=
name|line
operator|.
name|textStart
argument_list|()
decl_stmt|;
name|int
name|length
init|=
name|line
operator|.
name|textLength
argument_list|()
operator|+
name|nextLine
operator|.
name|textLength
argument_list|()
decl_stmt|;
specifier|const
name|QStackTextEngine
name|engine
argument_list|(
name|textLayout
operator|.
name|text
argument_list|()
operator|.
name|mid
argument_list|(
name|start
argument_list|,
name|length
argument_list|)
argument_list|,
name|option
operator|->
name|font
argument_list|)
decl_stmt|;
name|elidedText
operator|=
name|engine
operator|.
name|elidedText
argument_list|(
name|option
operator|->
name|textElideMode
argument_list|,
name|textRect
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
name|height
operator|+=
name|line
operator|.
name|height
argument_list|()
expr_stmt|;
name|width
operator|=
name|textRect
operator|.
name|width
argument_list|()
expr_stmt|;
name|elidedIndex
operator|=
name|j
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
name|line
operator|.
name|naturalTextWidth
argument_list|()
operator|>
name|textRect
operator|.
name|width
argument_list|()
condition|)
block|{
name|int
name|start
init|=
name|line
operator|.
name|textStart
argument_list|()
decl_stmt|;
name|int
name|length
init|=
name|line
operator|.
name|textLength
argument_list|()
decl_stmt|;
specifier|const
name|QStackTextEngine
name|engine
argument_list|(
name|textLayout
operator|.
name|text
argument_list|()
operator|.
name|mid
argument_list|(
name|start
argument_list|,
name|length
argument_list|)
argument_list|,
name|option
operator|->
name|font
argument_list|)
decl_stmt|;
name|elidedText
operator|=
name|engine
operator|.
name|elidedText
argument_list|(
name|option
operator|->
name|textElideMode
argument_list|,
name|textRect
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
name|height
operator|+=
name|line
operator|.
name|height
argument_list|()
expr_stmt|;
name|width
operator|=
name|textRect
operator|.
name|width
argument_list|()
expr_stmt|;
name|elidedIndex
operator|=
name|j
expr_stmt|;
break|break;
block|}
name|width
operator|=
name|qMax
argument_list|<
name|qreal
argument_list|>
argument_list|(
name|width
argument_list|,
name|line
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
name|height
operator|+=
name|line
operator|.
name|height
argument_list|()
expr_stmt|;
block|}
specifier|const
name|QRect
name|layoutRect
init|=
name|QStyle
operator|::
name|alignedRect
argument_list|(
name|option
operator|->
name|direction
argument_list|,
name|option
operator|->
name|displayAlignment
argument_list|,
name|QSize
argument_list|(
name|int
argument_list|(
name|width
argument_list|)
argument_list|,
name|int
argument_list|(
name|height
argument_list|)
argument_list|)
argument_list|,
name|textRect
argument_list|)
decl_stmt|;
specifier|const
name|QPointF
name|position
init|=
name|layoutRect
operator|.
name|topLeft
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|lineCount
condition|;
operator|++
name|i
control|)
block|{
specifier|const
name|QTextLine
name|line
init|=
name|textLayout
operator|.
name|lineAt
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|i
operator|==
name|elidedIndex
condition|)
block|{
name|qreal
name|x
init|=
name|position
operator|.
name|x
argument_list|()
operator|+
name|line
operator|.
name|x
argument_list|()
decl_stmt|;
name|qreal
name|y
init|=
name|position
operator|.
name|y
argument_list|()
operator|+
name|line
operator|.
name|y
argument_list|()
operator|+
name|line
operator|.
name|ascent
argument_list|()
decl_stmt|;
name|p
operator|->
name|save
argument_list|()
expr_stmt|;
name|p
operator|->
name|setFont
argument_list|(
name|option
operator|->
name|font
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawText
argument_list|(
name|QPointF
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
argument_list|,
name|elidedText
argument_list|)
expr_stmt|;
name|p
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
block|}
name|line
operator|.
name|draw
argument_list|(
name|p
argument_list|,
name|position
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_comment
comment|/*! \internal     compute the position for the different component of an item (pixmap, text, checkbox)      Set sizehint to false to layout the elements inside opt->rect. Set sizehint to true to ignore    opt->rect and return rectangles in infinite space      Code duplicated in QItemDelegate::doLayout */
end_comment
begin_function
DECL|function|viewItemLayout
name|void
name|QCommonStylePrivate
operator|::
name|viewItemLayout
parameter_list|(
specifier|const
name|QStyleOptionViewItem
modifier|*
name|opt
parameter_list|,
name|QRect
modifier|*
name|checkRect
parameter_list|,
name|QRect
modifier|*
name|pixmapRect
parameter_list|,
name|QRect
modifier|*
name|textRect
parameter_list|,
name|bool
name|sizehint
parameter_list|)
specifier|const
block|{
name|Q_ASSERT
argument_list|(
name|checkRect
operator|&&
name|pixmapRect
operator|&&
name|textRect
argument_list|)
expr_stmt|;
operator|*
name|pixmapRect
operator|=
name|QRect
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|viewItemSize
argument_list|(
name|opt
argument_list|,
name|Qt
operator|::
name|DecorationRole
argument_list|)
argument_list|)
expr_stmt|;
operator|*
name|textRect
operator|=
name|QRect
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|viewItemSize
argument_list|(
name|opt
argument_list|,
name|Qt
operator|::
name|DisplayRole
argument_list|)
argument_list|)
expr_stmt|;
operator|*
name|checkRect
operator|=
name|QRect
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|viewItemSize
argument_list|(
name|opt
argument_list|,
name|Qt
operator|::
name|CheckStateRole
argument_list|)
argument_list|)
expr_stmt|;
specifier|const
name|QWidget
modifier|*
name|widget
init|=
name|opt
operator|->
name|widget
decl_stmt|;
specifier|const
name|bool
name|hasCheck
init|=
name|checkRect
operator|->
name|isValid
argument_list|()
decl_stmt|;
specifier|const
name|bool
name|hasPixmap
init|=
name|pixmapRect
operator|->
name|isValid
argument_list|()
decl_stmt|;
specifier|const
name|bool
name|hasText
init|=
name|textRect
operator|->
name|isValid
argument_list|()
decl_stmt|;
specifier|const
name|int
name|textMargin
init|=
name|hasText
condition|?
name|proxyStyle
operator|->
name|pixelMetric
argument_list|(
name|QStyle
operator|::
name|PM_FocusFrameHMargin
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
operator|+
literal|1
else|:
literal|0
decl_stmt|;
specifier|const
name|int
name|pixmapMargin
init|=
name|hasPixmap
condition|?
name|proxyStyle
operator|->
name|pixelMetric
argument_list|(
name|QStyle
operator|::
name|PM_FocusFrameHMargin
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
operator|+
literal|1
else|:
literal|0
decl_stmt|;
specifier|const
name|int
name|checkMargin
init|=
name|hasCheck
condition|?
name|proxyStyle
operator|->
name|pixelMetric
argument_list|(
name|QStyle
operator|::
name|PM_FocusFrameHMargin
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
operator|+
literal|1
else|:
literal|0
decl_stmt|;
name|int
name|x
init|=
name|opt
operator|->
name|rect
operator|.
name|left
argument_list|()
decl_stmt|;
name|int
name|y
init|=
name|opt
operator|->
name|rect
operator|.
name|top
argument_list|()
decl_stmt|;
name|int
name|w
decl_stmt|,
name|h
decl_stmt|;
if|if
condition|(
name|textRect
operator|->
name|height
argument_list|()
operator|==
literal|0
operator|&&
operator|(
operator|!
name|hasPixmap
operator|||
operator|!
name|sizehint
operator|)
condition|)
block|{
comment|//if there is no text, we still want to have a decent height for the item sizeHint and the editor size
name|textRect
operator|->
name|setHeight
argument_list|(
name|opt
operator|->
name|fontMetrics
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|QSize
name|pm
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
if|if
condition|(
name|hasPixmap
condition|)
block|{
name|pm
operator|=
name|pixmapRect
operator|->
name|size
argument_list|()
expr_stmt|;
name|pm
operator|.
name|rwidth
argument_list|()
operator|+=
literal|2
operator|*
name|pixmapMargin
expr_stmt|;
block|}
if|if
condition|(
name|sizehint
condition|)
block|{
name|h
operator|=
name|qMax
argument_list|(
name|checkRect
operator|->
name|height
argument_list|()
argument_list|,
name|qMax
argument_list|(
name|textRect
operator|->
name|height
argument_list|()
argument_list|,
name|pm
operator|.
name|height
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|opt
operator|->
name|decorationPosition
operator|==
name|QStyleOptionViewItem
operator|::
name|Left
operator|||
name|opt
operator|->
name|decorationPosition
operator|==
name|QStyleOptionViewItem
operator|::
name|Right
condition|)
block|{
name|w
operator|=
name|textRect
operator|->
name|width
argument_list|()
operator|+
name|pm
operator|.
name|width
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|w
operator|=
name|qMax
argument_list|(
name|textRect
operator|->
name|width
argument_list|()
argument_list|,
name|pm
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|w
operator|=
name|opt
operator|->
name|rect
operator|.
name|width
argument_list|()
expr_stmt|;
name|h
operator|=
name|opt
operator|->
name|rect
operator|.
name|height
argument_list|()
expr_stmt|;
block|}
name|int
name|cw
init|=
literal|0
decl_stmt|;
name|QRect
name|check
decl_stmt|;
if|if
condition|(
name|hasCheck
condition|)
block|{
name|cw
operator|=
name|checkRect
operator|->
name|width
argument_list|()
operator|+
literal|2
operator|*
name|checkMargin
expr_stmt|;
if|if
condition|(
name|sizehint
condition|)
name|w
operator|+=
name|cw
expr_stmt|;
if|if
condition|(
name|opt
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
condition|)
block|{
name|check
operator|.
name|setRect
argument_list|(
name|x
operator|+
name|w
operator|-
name|cw
argument_list|,
name|y
argument_list|,
name|cw
argument_list|,
name|h
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|check
operator|.
name|setRect
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|cw
argument_list|,
name|h
argument_list|)
expr_stmt|;
block|}
block|}
name|QRect
name|display
decl_stmt|;
name|QRect
name|decoration
decl_stmt|;
switch|switch
condition|(
name|opt
operator|->
name|decorationPosition
condition|)
block|{
case|case
name|QStyleOptionViewItem
operator|::
name|Top
case|:
block|{
if|if
condition|(
name|hasPixmap
condition|)
name|pm
operator|.
name|setHeight
argument_list|(
name|pm
operator|.
name|height
argument_list|()
operator|+
name|pixmapMargin
argument_list|)
expr_stmt|;
comment|// add space
name|h
operator|=
name|sizehint
condition|?
name|textRect
operator|->
name|height
argument_list|()
else|:
name|h
operator|-
name|pm
operator|.
name|height
argument_list|()
expr_stmt|;
if|if
condition|(
name|opt
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
condition|)
block|{
name|decoration
operator|.
name|setRect
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|w
operator|-
name|cw
argument_list|,
name|pm
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
name|display
operator|.
name|setRect
argument_list|(
name|x
argument_list|,
name|y
operator|+
name|pm
operator|.
name|height
argument_list|()
argument_list|,
name|w
operator|-
name|cw
argument_list|,
name|h
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|decoration
operator|.
name|setRect
argument_list|(
name|x
operator|+
name|cw
argument_list|,
name|y
argument_list|,
name|w
operator|-
name|cw
argument_list|,
name|pm
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
name|display
operator|.
name|setRect
argument_list|(
name|x
operator|+
name|cw
argument_list|,
name|y
operator|+
name|pm
operator|.
name|height
argument_list|()
argument_list|,
name|w
operator|-
name|cw
argument_list|,
name|h
argument_list|)
expr_stmt|;
block|}
break|break;
block|}
case|case
name|QStyleOptionViewItem
operator|::
name|Bottom
case|:
block|{
if|if
condition|(
name|hasText
condition|)
name|textRect
operator|->
name|setHeight
argument_list|(
name|textRect
operator|->
name|height
argument_list|()
operator|+
name|textMargin
argument_list|)
expr_stmt|;
comment|// add space
name|h
operator|=
name|sizehint
condition|?
name|textRect
operator|->
name|height
argument_list|()
operator|+
name|pm
operator|.
name|height
argument_list|()
else|:
name|h
expr_stmt|;
if|if
condition|(
name|opt
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
condition|)
block|{
name|display
operator|.
name|setRect
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|w
operator|-
name|cw
argument_list|,
name|textRect
operator|->
name|height
argument_list|()
argument_list|)
expr_stmt|;
name|decoration
operator|.
name|setRect
argument_list|(
name|x
argument_list|,
name|y
operator|+
name|textRect
operator|->
name|height
argument_list|()
argument_list|,
name|w
operator|-
name|cw
argument_list|,
name|h
operator|-
name|textRect
operator|->
name|height
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|display
operator|.
name|setRect
argument_list|(
name|x
operator|+
name|cw
argument_list|,
name|y
argument_list|,
name|w
operator|-
name|cw
argument_list|,
name|textRect
operator|->
name|height
argument_list|()
argument_list|)
expr_stmt|;
name|decoration
operator|.
name|setRect
argument_list|(
name|x
operator|+
name|cw
argument_list|,
name|y
operator|+
name|textRect
operator|->
name|height
argument_list|()
argument_list|,
name|w
operator|-
name|cw
argument_list|,
name|h
operator|-
name|textRect
operator|->
name|height
argument_list|()
argument_list|)
expr_stmt|;
block|}
break|break;
block|}
case|case
name|QStyleOptionViewItem
operator|::
name|Left
case|:
block|{
if|if
condition|(
name|opt
operator|->
name|direction
operator|==
name|Qt
operator|::
name|LeftToRight
condition|)
block|{
name|decoration
operator|.
name|setRect
argument_list|(
name|x
operator|+
name|cw
argument_list|,
name|y
argument_list|,
name|pm
operator|.
name|width
argument_list|()
argument_list|,
name|h
argument_list|)
expr_stmt|;
name|display
operator|.
name|setRect
argument_list|(
name|decoration
operator|.
name|right
argument_list|()
operator|+
literal|1
argument_list|,
name|y
argument_list|,
name|w
operator|-
name|pm
operator|.
name|width
argument_list|()
operator|-
name|cw
argument_list|,
name|h
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|display
operator|.
name|setRect
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|w
operator|-
name|pm
operator|.
name|width
argument_list|()
operator|-
name|cw
argument_list|,
name|h
argument_list|)
expr_stmt|;
name|decoration
operator|.
name|setRect
argument_list|(
name|display
operator|.
name|right
argument_list|()
operator|+
literal|1
argument_list|,
name|y
argument_list|,
name|pm
operator|.
name|width
argument_list|()
argument_list|,
name|h
argument_list|)
expr_stmt|;
block|}
break|break;
block|}
case|case
name|QStyleOptionViewItem
operator|::
name|Right
case|:
block|{
if|if
condition|(
name|opt
operator|->
name|direction
operator|==
name|Qt
operator|::
name|LeftToRight
condition|)
block|{
name|display
operator|.
name|setRect
argument_list|(
name|x
operator|+
name|cw
argument_list|,
name|y
argument_list|,
name|w
operator|-
name|pm
operator|.
name|width
argument_list|()
operator|-
name|cw
argument_list|,
name|h
argument_list|)
expr_stmt|;
name|decoration
operator|.
name|setRect
argument_list|(
name|display
operator|.
name|right
argument_list|()
operator|+
literal|1
argument_list|,
name|y
argument_list|,
name|pm
operator|.
name|width
argument_list|()
argument_list|,
name|h
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|decoration
operator|.
name|setRect
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|pm
operator|.
name|width
argument_list|()
argument_list|,
name|h
argument_list|)
expr_stmt|;
name|display
operator|.
name|setRect
argument_list|(
name|decoration
operator|.
name|right
argument_list|()
operator|+
literal|1
argument_list|,
name|y
argument_list|,
name|w
operator|-
name|pm
operator|.
name|width
argument_list|()
operator|-
name|cw
argument_list|,
name|h
argument_list|)
expr_stmt|;
block|}
break|break;
block|}
default|default:
name|qWarning
argument_list|(
literal|"doLayout: decoration position is invalid"
argument_list|)
expr_stmt|;
name|decoration
operator|=
operator|*
name|pixmapRect
expr_stmt|;
break|break;
block|}
if|if
condition|(
operator|!
name|sizehint
condition|)
block|{
comment|// we only need to do the internal layout if we are going to paint
operator|*
name|checkRect
operator|=
name|QStyle
operator|::
name|alignedRect
argument_list|(
name|opt
operator|->
name|direction
argument_list|,
name|Qt
operator|::
name|AlignCenter
argument_list|,
name|checkRect
operator|->
name|size
argument_list|()
argument_list|,
name|check
argument_list|)
expr_stmt|;
operator|*
name|pixmapRect
operator|=
name|QStyle
operator|::
name|alignedRect
argument_list|(
name|opt
operator|->
name|direction
argument_list|,
name|opt
operator|->
name|decorationAlignment
argument_list|,
name|pixmapRect
operator|->
name|size
argument_list|()
argument_list|,
name|decoration
argument_list|)
expr_stmt|;
comment|// the text takes up all available space, unless the decoration is not shown as selected
if|if
condition|(
name|opt
operator|->
name|showDecorationSelected
condition|)
operator|*
name|textRect
operator|=
name|display
expr_stmt|;
else|else
operator|*
name|textRect
operator|=
name|QStyle
operator|::
name|alignedRect
argument_list|(
name|opt
operator|->
name|direction
argument_list|,
name|opt
operator|->
name|displayAlignment
argument_list|,
name|textRect
operator|->
name|size
argument_list|()
operator|.
name|boundedTo
argument_list|(
name|display
operator|.
name|size
argument_list|()
argument_list|)
argument_list|,
name|display
argument_list|)
expr_stmt|;
block|}
else|else
block|{
operator|*
name|checkRect
operator|=
name|check
expr_stmt|;
operator|*
name|pixmapRect
operator|=
name|decoration
expr_stmt|;
operator|*
name|textRect
operator|=
name|display
expr_stmt|;
block|}
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_ITEMVIEWS
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
end_ifndef
begin_comment
comment|/*! \internal     Compute the textRect and the pixmapRect from the opt rect      Uses the same computation than in QTabBar::tabSizeHint  */
end_comment
begin_function
DECL|function|tabLayout
name|void
name|QCommonStylePrivate
operator|::
name|tabLayout
parameter_list|(
specifier|const
name|QStyleOptionTab
modifier|*
name|opt
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|,
name|QRect
modifier|*
name|textRect
parameter_list|,
name|QRect
modifier|*
name|iconRect
parameter_list|)
specifier|const
block|{
name|Q_ASSERT
argument_list|(
name|textRect
argument_list|)
expr_stmt|;
name|Q_ASSERT
argument_list|(
name|iconRect
argument_list|)
expr_stmt|;
name|QRect
name|tr
init|=
name|opt
operator|->
name|rect
decl_stmt|;
name|bool
name|verticalTabs
init|=
name|opt
operator|->
name|shape
operator|==
name|QTabBar
operator|::
name|RoundedEast
operator|||
name|opt
operator|->
name|shape
operator|==
name|QTabBar
operator|::
name|RoundedWest
operator|||
name|opt
operator|->
name|shape
operator|==
name|QTabBar
operator|::
name|TriangularEast
operator|||
name|opt
operator|->
name|shape
operator|==
name|QTabBar
operator|::
name|TriangularWest
decl_stmt|;
if|if
condition|(
name|verticalTabs
condition|)
name|tr
operator|.
name|setRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|tr
operator|.
name|height
argument_list|()
argument_list|,
name|tr
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
comment|//0, 0 as we will have a translate transform
name|int
name|verticalShift
init|=
name|proxyStyle
operator|->
name|pixelMetric
argument_list|(
name|QStyle
operator|::
name|PM_TabBarTabShiftVertical
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|int
name|horizontalShift
init|=
name|proxyStyle
operator|->
name|pixelMetric
argument_list|(
name|QStyle
operator|::
name|PM_TabBarTabShiftHorizontal
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|int
name|hpadding
init|=
name|proxyStyle
operator|->
name|pixelMetric
argument_list|(
name|QStyle
operator|::
name|PM_TabBarTabHSpace
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
operator|/
literal|2
decl_stmt|;
name|int
name|vpadding
init|=
name|proxyStyle
operator|->
name|pixelMetric
argument_list|(
name|QStyle
operator|::
name|PM_TabBarTabVSpace
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
operator|/
literal|2
decl_stmt|;
if|if
condition|(
name|opt
operator|->
name|shape
operator|==
name|QTabBar
operator|::
name|RoundedSouth
operator|||
name|opt
operator|->
name|shape
operator|==
name|QTabBar
operator|::
name|TriangularSouth
condition|)
name|verticalShift
operator|=
operator|-
name|verticalShift
expr_stmt|;
name|tr
operator|.
name|adjust
argument_list|(
name|hpadding
argument_list|,
name|verticalShift
operator|-
name|vpadding
argument_list|,
name|horizontalShift
operator|-
name|hpadding
argument_list|,
name|vpadding
argument_list|)
expr_stmt|;
name|bool
name|selected
init|=
name|opt
operator|->
name|state
operator|&
name|QStyle
operator|::
name|State_Selected
decl_stmt|;
if|if
condition|(
name|selected
condition|)
block|{
name|tr
operator|.
name|setTop
argument_list|(
name|tr
operator|.
name|top
argument_list|()
operator|-
name|verticalShift
argument_list|)
expr_stmt|;
name|tr
operator|.
name|setRight
argument_list|(
name|tr
operator|.
name|right
argument_list|()
operator|-
name|horizontalShift
argument_list|)
expr_stmt|;
block|}
comment|// left widget
if|if
condition|(
operator|!
name|opt
operator|->
name|leftButtonSize
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|tr
operator|.
name|setLeft
argument_list|(
name|tr
operator|.
name|left
argument_list|()
operator|+
literal|4
operator|+
operator|(
name|verticalTabs
condition|?
name|opt
operator|->
name|leftButtonSize
operator|.
name|height
argument_list|()
else|:
name|opt
operator|->
name|leftButtonSize
operator|.
name|width
argument_list|()
operator|)
argument_list|)
expr_stmt|;
block|}
comment|// right widget
if|if
condition|(
operator|!
name|opt
operator|->
name|rightButtonSize
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|tr
operator|.
name|setRight
argument_list|(
name|tr
operator|.
name|right
argument_list|()
operator|-
literal|4
operator|-
operator|(
name|verticalTabs
condition|?
name|opt
operator|->
name|rightButtonSize
operator|.
name|height
argument_list|()
else|:
name|opt
operator|->
name|rightButtonSize
operator|.
name|width
argument_list|()
operator|)
argument_list|)
expr_stmt|;
block|}
comment|// icon
if|if
condition|(
operator|!
name|opt
operator|->
name|icon
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|QSize
name|iconSize
init|=
name|opt
operator|->
name|iconSize
decl_stmt|;
if|if
condition|(
operator|!
name|iconSize
operator|.
name|isValid
argument_list|()
condition|)
block|{
name|int
name|iconExtent
init|=
name|proxyStyle
operator|->
name|pixelMetric
argument_list|(
name|QStyle
operator|::
name|PM_SmallIconSize
argument_list|)
decl_stmt|;
name|iconSize
operator|=
name|QSize
argument_list|(
name|iconExtent
argument_list|,
name|iconExtent
argument_list|)
expr_stmt|;
block|}
name|QSize
name|tabIconSize
init|=
name|opt
operator|->
name|icon
operator|.
name|actualSize
argument_list|(
name|iconSize
argument_list|,
operator|(
name|opt
operator|->
name|state
operator|&
name|QStyle
operator|::
name|State_Enabled
operator|)
condition|?
name|QIcon
operator|::
name|Normal
else|:
name|QIcon
operator|::
name|Disabled
argument_list|,
operator|(
name|opt
operator|->
name|state
operator|&
name|QStyle
operator|::
name|State_Selected
operator|)
condition|?
name|QIcon
operator|::
name|On
else|:
name|QIcon
operator|::
name|Off
argument_list|)
decl_stmt|;
comment|// High-dpi icons do not need adjustmet; make sure tabIconSize is not larger than iconSize
name|tabIconSize
operator|=
name|QSize
argument_list|(
name|qMin
argument_list|(
name|tabIconSize
operator|.
name|width
argument_list|()
argument_list|,
name|iconSize
operator|.
name|width
argument_list|()
argument_list|)
argument_list|,
name|qMin
argument_list|(
name|tabIconSize
operator|.
name|height
argument_list|()
argument_list|,
name|iconSize
operator|.
name|height
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
operator|*
name|iconRect
operator|=
name|QRect
argument_list|(
name|tr
operator|.
name|left
argument_list|()
argument_list|,
name|tr
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|-
name|tabIconSize
operator|.
name|height
argument_list|()
operator|/
literal|2
argument_list|,
name|tabIconSize
operator|.
name|width
argument_list|()
argument_list|,
name|tabIconSize
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|verticalTabs
condition|)
operator|*
name|iconRect
operator|=
name|proxyStyle
operator|->
name|visualRect
argument_list|(
name|opt
operator|->
name|direction
argument_list|,
name|opt
operator|->
name|rect
argument_list|,
operator|*
name|iconRect
argument_list|)
expr_stmt|;
name|tr
operator|.
name|setLeft
argument_list|(
name|tr
operator|.
name|left
argument_list|()
operator|+
name|tabIconSize
operator|.
name|width
argument_list|()
operator|+
literal|4
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|verticalTabs
condition|)
name|tr
operator|=
name|proxyStyle
operator|->
name|visualRect
argument_list|(
name|opt
operator|->
name|direction
argument_list|,
name|opt
operator|->
name|rect
argument_list|,
name|tr
argument_list|)
expr_stmt|;
operator|*
name|textRect
operator|=
name|tr
expr_stmt|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|//QT_NO_TABBAR
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_ANIMATION
end_ifndef
begin_comment
comment|/*! \internal */
end_comment
begin_function
DECL|function|animationTargets
name|QList
argument_list|<
specifier|const
name|QObject
modifier|*
argument_list|>
name|QCommonStylePrivate
operator|::
name|animationTargets
parameter_list|()
specifier|const
block|{
return|return
name|animations
operator|.
name|keys
argument_list|()
return|;
block|}
end_function
begin_comment
comment|/*! \internal */
end_comment
begin_function
DECL|function|animation
name|QStyleAnimation
modifier|*
name|QCommonStylePrivate
operator|::
name|animation
parameter_list|(
specifier|const
name|QObject
modifier|*
name|target
parameter_list|)
specifier|const
block|{
return|return
name|animations
operator|.
name|value
argument_list|(
name|target
argument_list|)
return|;
block|}
end_function
begin_comment
comment|/*! \internal */
end_comment
begin_function
DECL|function|startAnimation
name|void
name|QCommonStylePrivate
operator|::
name|startAnimation
parameter_list|(
name|QStyleAnimation
modifier|*
name|animation
parameter_list|)
specifier|const
block|{
name|Q_Q
argument_list|(
specifier|const
name|QCommonStyle
argument_list|)
expr_stmt|;
name|stopAnimation
argument_list|(
name|animation
operator|->
name|target
argument_list|()
argument_list|)
expr_stmt|;
name|q
operator|->
name|connect
argument_list|(
name|animation
argument_list|,
name|SIGNAL
argument_list|(
name|destroyed
argument_list|()
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|_q_removeAnimation
argument_list|()
argument_list|)
argument_list|,
name|Qt
operator|::
name|UniqueConnection
argument_list|)
expr_stmt|;
name|animations
operator|.
name|insert
argument_list|(
name|animation
operator|->
name|target
argument_list|()
argument_list|,
name|animation
argument_list|)
expr_stmt|;
name|animation
operator|->
name|start
argument_list|()
expr_stmt|;
block|}
end_function
begin_comment
comment|/*! \internal */
end_comment
begin_function
DECL|function|stopAnimation
name|void
name|QCommonStylePrivate
operator|::
name|stopAnimation
parameter_list|(
specifier|const
name|QObject
modifier|*
name|target
parameter_list|)
specifier|const
block|{
name|QStyleAnimation
modifier|*
name|animation
init|=
name|animations
operator|.
name|take
argument_list|(
name|target
argument_list|)
decl_stmt|;
if|if
condition|(
name|animation
condition|)
block|{
name|animation
operator|->
name|stop
argument_list|()
expr_stmt|;
operator|delete
name|animation
expr_stmt|;
block|}
block|}
end_function
begin_comment
comment|/*! \internal */
end_comment
begin_function
DECL|function|_q_removeAnimation
name|void
name|QCommonStylePrivate
operator|::
name|_q_removeAnimation
parameter_list|()
block|{
name|Q_Q
argument_list|(
name|QCommonStyle
argument_list|)
expr_stmt|;
name|QObject
modifier|*
name|animation
init|=
name|q
operator|->
name|sender
argument_list|()
decl_stmt|;
if|if
condition|(
name|animation
condition|)
name|animations
operator|.
name|remove
argument_list|(
name|animation
operator|->
name|parent
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/*!   \reimp */
end_comment
begin_function
DECL|function|drawControl
name|void
name|QCommonStyle
operator|::
name|drawControl
parameter_list|(
name|ControlElement
name|element
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|opt
parameter_list|,
name|QPainter
modifier|*
name|p
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
name|Q_D
argument_list|(
specifier|const
name|QCommonStyle
argument_list|)
expr_stmt|;
switch|switch
condition|(
name|element
condition|)
block|{
case|case
name|CE_PushButton
case|:
if|if
condition|(
specifier|const
name|QStyleOptionButton
modifier|*
name|btn
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionButton
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|proxy
argument_list|()
operator|->
name|drawControl
argument_list|(
name|CE_PushButtonBevel
argument_list|,
name|btn
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|QStyleOptionButton
name|subopt
init|=
operator|*
name|btn
decl_stmt|;
name|subopt
operator|.
name|rect
operator|=
name|subElementRect
argument_list|(
name|SE_PushButtonContents
argument_list|,
name|btn
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawControl
argument_list|(
name|CE_PushButtonLabel
argument_list|,
operator|&
name|subopt
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
if|if
condition|(
name|btn
operator|->
name|state
operator|&
name|State_HasFocus
condition|)
block|{
name|QStyleOptionFocusRect
name|fropt
decl_stmt|;
name|fropt
operator|.
name|QStyleOption
operator|::
name|operator
name|=
argument_list|(
operator|*
name|btn
argument_list|)
expr_stmt|;
name|fropt
operator|.
name|rect
operator|=
name|subElementRect
argument_list|(
name|SE_PushButtonFocusRect
argument_list|,
name|btn
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_FrameFocusRect
argument_list|,
operator|&
name|fropt
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
block|}
break|break;
case|case
name|CE_PushButtonBevel
case|:
if|if
condition|(
specifier|const
name|QStyleOptionButton
modifier|*
name|btn
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionButton
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|QRect
name|br
init|=
name|btn
operator|->
name|rect
decl_stmt|;
name|int
name|dbi
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_ButtonDefaultIndicator
argument_list|,
name|btn
argument_list|,
name|widget
argument_list|)
decl_stmt|;
if|if
condition|(
name|btn
operator|->
name|features
operator|&
name|QStyleOptionButton
operator|::
name|DefaultButton
condition|)
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_FrameDefaultButton
argument_list|,
name|opt
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
if|if
condition|(
name|btn
operator|->
name|features
operator|&
name|QStyleOptionButton
operator|::
name|AutoDefaultButton
condition|)
name|br
operator|.
name|setCoords
argument_list|(
name|br
operator|.
name|left
argument_list|()
operator|+
name|dbi
argument_list|,
name|br
operator|.
name|top
argument_list|()
operator|+
name|dbi
argument_list|,
name|br
operator|.
name|right
argument_list|()
operator|-
name|dbi
argument_list|,
name|br
operator|.
name|bottom
argument_list|()
operator|-
name|dbi
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
operator|(
name|btn
operator|->
name|features
operator|&
operator|(
name|QStyleOptionButton
operator|::
name|Flat
operator||
name|QStyleOptionButton
operator|::
name|CommandLinkButton
operator|)
operator|)
operator|||
name|btn
operator|->
name|state
operator|&
operator|(
name|State_Sunken
operator||
name|State_On
operator|)
operator|||
operator|(
name|btn
operator|->
name|features
operator|&
name|QStyleOptionButton
operator|::
name|CommandLinkButton
operator|&&
name|btn
operator|->
name|state
operator|&
name|State_MouseOver
operator|)
condition|)
block|{
name|QStyleOptionButton
name|tmpBtn
init|=
operator|*
name|btn
decl_stmt|;
name|tmpBtn
operator|.
name|rect
operator|=
name|br
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_PanelButtonCommand
argument_list|,
operator|&
name|tmpBtn
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|btn
operator|->
name|features
operator|&
name|QStyleOptionButton
operator|::
name|HasMenu
condition|)
block|{
name|int
name|mbi
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_MenuButtonIndicator
argument_list|,
name|btn
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|QRect
name|ir
init|=
name|btn
operator|->
name|rect
decl_stmt|;
name|QStyleOptionButton
name|newBtn
init|=
operator|*
name|btn
decl_stmt|;
name|newBtn
operator|.
name|rect
operator|=
name|QRect
argument_list|(
name|ir
operator|.
name|right
argument_list|()
operator|-
name|mbi
operator|+
literal|2
argument_list|,
name|ir
operator|.
name|height
argument_list|()
operator|/
literal|2
operator|-
name|mbi
operator|/
literal|2
operator|+
literal|3
argument_list|,
name|mbi
operator|-
literal|6
argument_list|,
name|mbi
operator|-
literal|6
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_IndicatorArrowDown
argument_list|,
operator|&
name|newBtn
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
block|}
break|break;
case|case
name|CE_PushButtonLabel
case|:
if|if
condition|(
specifier|const
name|QStyleOptionButton
modifier|*
name|button
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionButton
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|QRect
name|textRect
init|=
name|button
operator|->
name|rect
decl_stmt|;
name|uint
name|tf
init|=
name|Qt
operator|::
name|AlignVCenter
operator||
name|Qt
operator|::
name|TextShowMnemonic
decl_stmt|;
if|if
condition|(
operator|!
name|proxy
argument_list|()
operator|->
name|styleHint
argument_list|(
name|SH_UnderlineShortcut
argument_list|,
name|button
argument_list|,
name|widget
argument_list|)
condition|)
name|tf
operator||=
name|Qt
operator|::
name|TextHideMnemonic
expr_stmt|;
if|if
condition|(
operator|!
name|button
operator|->
name|icon
operator|.
name|isNull
argument_list|()
condition|)
block|{
comment|//Center both icon and text
name|QRect
name|iconRect
decl_stmt|;
name|QIcon
operator|::
name|Mode
name|mode
init|=
name|button
operator|->
name|state
operator|&
name|State_Enabled
condition|?
name|QIcon
operator|::
name|Normal
else|:
name|QIcon
operator|::
name|Disabled
decl_stmt|;
if|if
condition|(
name|mode
operator|==
name|QIcon
operator|::
name|Normal
operator|&&
name|button
operator|->
name|state
operator|&
name|State_HasFocus
condition|)
name|mode
operator|=
name|QIcon
operator|::
name|Active
expr_stmt|;
name|QIcon
operator|::
name|State
name|state
init|=
name|QIcon
operator|::
name|Off
decl_stmt|;
if|if
condition|(
name|button
operator|->
name|state
operator|&
name|State_On
condition|)
name|state
operator|=
name|QIcon
operator|::
name|On
expr_stmt|;
name|QPixmap
name|pixmap
init|=
name|button
operator|->
name|icon
operator|.
name|pixmap
argument_list|(
name|qt_getWindow
argument_list|(
name|widget
argument_list|)
argument_list|,
name|button
operator|->
name|iconSize
argument_list|,
name|mode
argument_list|,
name|state
argument_list|)
decl_stmt|;
name|int
name|pixmapWidth
init|=
name|pixmap
operator|.
name|width
argument_list|()
operator|/
name|pixmap
operator|.
name|devicePixelRatio
argument_list|()
decl_stmt|;
name|int
name|pixmapHeight
init|=
name|pixmap
operator|.
name|height
argument_list|()
operator|/
name|pixmap
operator|.
name|devicePixelRatio
argument_list|()
decl_stmt|;
name|int
name|labelWidth
init|=
name|pixmapWidth
decl_stmt|;
name|int
name|labelHeight
init|=
name|pixmapHeight
decl_stmt|;
name|int
name|iconSpacing
init|=
literal|4
decl_stmt|;
comment|//### 4 is currently hardcoded in QPushButton::sizeHint()
name|int
name|textWidth
init|=
name|button
operator|->
name|fontMetrics
operator|.
name|boundingRect
argument_list|(
name|opt
operator|->
name|rect
argument_list|,
name|tf
argument_list|,
name|button
operator|->
name|text
argument_list|)
operator|.
name|width
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|button
operator|->
name|text
operator|.
name|isEmpty
argument_list|()
condition|)
name|labelWidth
operator|+=
operator|(
name|textWidth
operator|+
name|iconSpacing
operator|)
expr_stmt|;
name|iconRect
operator|=
name|QRect
argument_list|(
name|textRect
operator|.
name|x
argument_list|()
operator|+
operator|(
name|textRect
operator|.
name|width
argument_list|()
operator|-
name|labelWidth
operator|)
operator|/
literal|2
argument_list|,
name|textRect
operator|.
name|y
argument_list|()
operator|+
operator|(
name|textRect
operator|.
name|height
argument_list|()
operator|-
name|labelHeight
operator|)
operator|/
literal|2
argument_list|,
name|pixmapWidth
argument_list|,
name|pixmapHeight
argument_list|)
expr_stmt|;
name|iconRect
operator|=
name|visualRect
argument_list|(
name|button
operator|->
name|direction
argument_list|,
name|textRect
argument_list|,
name|iconRect
argument_list|)
expr_stmt|;
name|tf
operator||=
name|Qt
operator|::
name|AlignLeft
expr_stmt|;
comment|//left align, we adjust the text-rect instead
if|if
condition|(
name|button
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
condition|)
name|textRect
operator|.
name|setRight
argument_list|(
name|iconRect
operator|.
name|left
argument_list|()
operator|-
name|iconSpacing
argument_list|)
expr_stmt|;
else|else
name|textRect
operator|.
name|setLeft
argument_list|(
name|iconRect
operator|.
name|left
argument_list|()
operator|+
name|iconRect
operator|.
name|width
argument_list|()
operator|+
name|iconSpacing
argument_list|)
expr_stmt|;
if|if
condition|(
name|button
operator|->
name|state
operator|&
operator|(
name|State_On
operator||
name|State_Sunken
operator|)
condition|)
name|iconRect
operator|.
name|translate
argument_list|(
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_ButtonShiftHorizontal
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
argument_list|,
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_ButtonShiftVertical
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawPixmap
argument_list|(
name|iconRect
argument_list|,
name|pixmap
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|tf
operator||=
name|Qt
operator|::
name|AlignHCenter
expr_stmt|;
block|}
if|if
condition|(
name|button
operator|->
name|state
operator|&
operator|(
name|State_On
operator||
name|State_Sunken
operator|)
condition|)
name|textRect
operator|.
name|translate
argument_list|(
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_ButtonShiftHorizontal
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
argument_list|,
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_ButtonShiftVertical
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|button
operator|->
name|features
operator|&
name|QStyleOptionButton
operator|::
name|HasMenu
condition|)
block|{
name|int
name|indicatorSize
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_MenuButtonIndicator
argument_list|,
name|button
argument_list|,
name|widget
argument_list|)
decl_stmt|;
if|if
condition|(
name|button
operator|->
name|direction
operator|==
name|Qt
operator|::
name|LeftToRight
condition|)
name|textRect
operator|=
name|textRect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
name|indicatorSize
argument_list|,
literal|0
argument_list|)
expr_stmt|;
else|else
name|textRect
operator|=
name|textRect
operator|.
name|adjusted
argument_list|(
name|indicatorSize
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
name|proxy
argument_list|()
operator|->
name|drawItemText
argument_list|(
name|p
argument_list|,
name|textRect
argument_list|,
name|tf
argument_list|,
name|button
operator|->
name|palette
argument_list|,
operator|(
name|button
operator|->
name|state
operator|&
name|State_Enabled
operator|)
argument_list|,
name|button
operator|->
name|text
argument_list|,
name|QPalette
operator|::
name|ButtonText
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|CE_RadioButton
case|:
case|case
name|CE_CheckBox
case|:
if|if
condition|(
specifier|const
name|QStyleOptionButton
modifier|*
name|btn
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionButton
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|bool
name|isRadio
init|=
operator|(
name|element
operator|==
name|CE_RadioButton
operator|)
decl_stmt|;
name|QStyleOptionButton
name|subopt
init|=
operator|*
name|btn
decl_stmt|;
name|subopt
operator|.
name|rect
operator|=
name|subElementRect
argument_list|(
name|isRadio
condition|?
name|SE_RadioButtonIndicator
else|:
name|SE_CheckBoxIndicator
argument_list|,
name|btn
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|isRadio
condition|?
name|PE_IndicatorRadioButton
else|:
name|PE_IndicatorCheckBox
argument_list|,
operator|&
name|subopt
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|subopt
operator|.
name|rect
operator|=
name|subElementRect
argument_list|(
name|isRadio
condition|?
name|SE_RadioButtonContents
else|:
name|SE_CheckBoxContents
argument_list|,
name|btn
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawControl
argument_list|(
name|isRadio
condition|?
name|CE_RadioButtonLabel
else|:
name|CE_CheckBoxLabel
argument_list|,
operator|&
name|subopt
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
if|if
condition|(
name|btn
operator|->
name|state
operator|&
name|State_HasFocus
condition|)
block|{
name|QStyleOptionFocusRect
name|fropt
decl_stmt|;
name|fropt
operator|.
name|QStyleOption
operator|::
name|operator
name|=
argument_list|(
operator|*
name|btn
argument_list|)
expr_stmt|;
name|fropt
operator|.
name|rect
operator|=
name|subElementRect
argument_list|(
name|isRadio
condition|?
name|SE_RadioButtonFocusRect
else|:
name|SE_CheckBoxFocusRect
argument_list|,
name|btn
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_FrameFocusRect
argument_list|,
operator|&
name|fropt
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
block|}
break|break;
case|case
name|CE_RadioButtonLabel
case|:
case|case
name|CE_CheckBoxLabel
case|:
if|if
condition|(
specifier|const
name|QStyleOptionButton
modifier|*
name|btn
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionButton
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|uint
name|alignment
init|=
name|visualAlignment
argument_list|(
name|btn
operator|->
name|direction
argument_list|,
name|Qt
operator|::
name|AlignLeft
operator||
name|Qt
operator|::
name|AlignVCenter
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|proxy
argument_list|()
operator|->
name|styleHint
argument_list|(
name|SH_UnderlineShortcut
argument_list|,
name|btn
argument_list|,
name|widget
argument_list|)
condition|)
name|alignment
operator||=
name|Qt
operator|::
name|TextHideMnemonic
expr_stmt|;
name|QPixmap
name|pix
decl_stmt|;
name|QRect
name|textRect
init|=
name|btn
operator|->
name|rect
decl_stmt|;
if|if
condition|(
operator|!
name|btn
operator|->
name|icon
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|pix
operator|=
name|btn
operator|->
name|icon
operator|.
name|pixmap
argument_list|(
name|qt_getWindow
argument_list|(
name|widget
argument_list|)
argument_list|,
name|btn
operator|->
name|iconSize
argument_list|,
name|btn
operator|->
name|state
operator|&
name|State_Enabled
condition|?
name|QIcon
operator|::
name|Normal
else|:
name|QIcon
operator|::
name|Disabled
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawItemPixmap
argument_list|(
name|p
argument_list|,
name|btn
operator|->
name|rect
argument_list|,
name|alignment
argument_list|,
name|pix
argument_list|)
expr_stmt|;
if|if
condition|(
name|btn
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
condition|)
name|textRect
operator|.
name|setRight
argument_list|(
name|textRect
operator|.
name|right
argument_list|()
operator|-
name|btn
operator|->
name|iconSize
operator|.
name|width
argument_list|()
operator|-
literal|4
argument_list|)
expr_stmt|;
else|else
name|textRect
operator|.
name|setLeft
argument_list|(
name|textRect
operator|.
name|left
argument_list|()
operator|+
name|btn
operator|->
name|iconSize
operator|.
name|width
argument_list|()
operator|+
literal|4
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|btn
operator|->
name|text
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|proxy
argument_list|()
operator|->
name|drawItemText
argument_list|(
name|p
argument_list|,
name|textRect
argument_list|,
name|alignment
operator||
name|Qt
operator|::
name|TextShowMnemonic
argument_list|,
name|btn
operator|->
name|palette
argument_list|,
name|btn
operator|->
name|state
operator|&
name|State_Enabled
argument_list|,
name|btn
operator|->
name|text
argument_list|,
name|QPalette
operator|::
name|WindowText
argument_list|)
expr_stmt|;
block|}
block|}
break|break;
ifndef|#
directive|ifndef
name|QT_NO_MENU
case|case
name|CE_MenuScroller
case|:
block|{
name|QStyleOption
name|arrowOpt
init|=
operator|*
name|opt
decl_stmt|;
name|arrowOpt
operator|.
name|state
operator||=
name|State_Enabled
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
operator|(
operator|(
name|opt
operator|->
name|state
operator|&
name|State_DownArrow
operator|)
condition|?
name|PE_IndicatorArrowDown
else|:
name|PE_IndicatorArrowUp
operator|)
argument_list|,
operator|&
name|arrowOpt
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|CE_MenuTearoff
case|:
if|if
condition|(
name|opt
operator|->
name|state
operator|&
name|State_Selected
condition|)
name|p
operator|->
name|fillRect
argument_list|(
name|opt
operator|->
name|rect
argument_list|,
name|opt
operator|->
name|palette
operator|.
name|brush
argument_list|(
name|QPalette
operator|::
name|Highlight
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|p
operator|->
name|fillRect
argument_list|(
name|opt
operator|->
name|rect
argument_list|,
name|opt
operator|->
name|palette
operator|.
name|brush
argument_list|(
name|QPalette
operator|::
name|Button
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|opt
operator|->
name|palette
operator|.
name|dark
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
literal|1
argument_list|,
name|Qt
operator|::
name|DashLine
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|opt
operator|->
name|rect
operator|.
name|x
argument_list|()
operator|+
literal|2
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|y
argument_list|()
operator|+
name|opt
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|/
literal|2
operator|-
literal|1
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|x
argument_list|()
operator|+
name|opt
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|-
literal|4
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|y
argument_list|()
operator|+
name|opt
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|/
literal|2
operator|-
literal|1
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|opt
operator|->
name|palette
operator|.
name|light
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
literal|1
argument_list|,
name|Qt
operator|::
name|DashLine
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|opt
operator|->
name|rect
operator|.
name|x
argument_list|()
operator|+
literal|2
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|y
argument_list|()
operator|+
name|opt
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|/
literal|2
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|x
argument_list|()
operator|+
name|opt
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|-
literal|4
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|y
argument_list|()
operator|+
name|opt
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|/
literal|2
argument_list|)
expr_stmt|;
break|break;
endif|#
directive|endif
comment|// QT_NO_MENU
ifndef|#
directive|ifndef
name|QT_NO_MENUBAR
case|case
name|CE_MenuBarItem
case|:
if|if
condition|(
specifier|const
name|QStyleOptionMenuItem
modifier|*
name|mbi
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionMenuItem
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|uint
name|alignment
init|=
name|Qt
operator|::
name|AlignCenter
operator||
name|Qt
operator|::
name|TextShowMnemonic
operator||
name|Qt
operator|::
name|TextDontClip
operator||
name|Qt
operator|::
name|TextSingleLine
decl_stmt|;
if|if
condition|(
operator|!
name|proxy
argument_list|()
operator|->
name|styleHint
argument_list|(
name|SH_UnderlineShortcut
argument_list|,
name|mbi
argument_list|,
name|widget
argument_list|)
condition|)
name|alignment
operator||=
name|Qt
operator|::
name|TextHideMnemonic
expr_stmt|;
name|int
name|iconExtent
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_SmallIconSize
argument_list|)
decl_stmt|;
name|QPixmap
name|pix
init|=
name|mbi
operator|->
name|icon
operator|.
name|pixmap
argument_list|(
name|qt_getWindow
argument_list|(
name|widget
argument_list|)
argument_list|,
name|QSize
argument_list|(
name|iconExtent
argument_list|,
name|iconExtent
argument_list|)
argument_list|,
operator|(
name|mbi
operator|->
name|state
operator|&
name|State_Enabled
operator|)
condition|?
name|QIcon
operator|::
name|Normal
else|:
name|QIcon
operator|::
name|Disabled
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|pix
operator|.
name|isNull
argument_list|()
condition|)
name|proxy
argument_list|()
operator|->
name|drawItemPixmap
argument_list|(
name|p
argument_list|,
name|mbi
operator|->
name|rect
argument_list|,
name|alignment
argument_list|,
name|pix
argument_list|)
expr_stmt|;
else|else
name|proxy
argument_list|()
operator|->
name|drawItemText
argument_list|(
name|p
argument_list|,
name|mbi
operator|->
name|rect
argument_list|,
name|alignment
argument_list|,
name|mbi
operator|->
name|palette
argument_list|,
name|mbi
operator|->
name|state
operator|&
name|State_Enabled
argument_list|,
name|mbi
operator|->
name|text
argument_list|,
name|QPalette
operator|::
name|ButtonText
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|CE_MenuBarEmptyArea
case|:
if|if
condition|(
name|widget
operator|&&
operator|!
name|widget
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_NoSystemBackground
argument_list|)
condition|)
name|p
operator|->
name|eraseRect
argument_list|(
name|opt
operator|->
name|rect
argument_list|)
expr_stmt|;
break|break;
endif|#
directive|endif
comment|// QT_NO_MENUBAR
ifndef|#
directive|ifndef
name|QT_NO_PROGRESSBAR
case|case
name|CE_ProgressBar
case|:
if|if
condition|(
specifier|const
name|QStyleOptionProgressBar
modifier|*
name|pb
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionProgressBar
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|QStyleOptionProgressBar
name|subopt
init|=
operator|*
name|pb
decl_stmt|;
name|subopt
operator|.
name|rect
operator|=
name|subElementRect
argument_list|(
name|SE_ProgressBarGroove
argument_list|,
name|pb
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawControl
argument_list|(
name|CE_ProgressBarGroove
argument_list|,
operator|&
name|subopt
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|subopt
operator|.
name|rect
operator|=
name|subElementRect
argument_list|(
name|SE_ProgressBarContents
argument_list|,
name|pb
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawControl
argument_list|(
name|CE_ProgressBarContents
argument_list|,
operator|&
name|subopt
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
if|if
condition|(
name|pb
operator|->
name|textVisible
condition|)
block|{
name|subopt
operator|.
name|rect
operator|=
name|subElementRect
argument_list|(
name|SE_ProgressBarLabel
argument_list|,
name|pb
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawControl
argument_list|(
name|CE_ProgressBarLabel
argument_list|,
operator|&
name|subopt
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
block|}
break|break;
case|case
name|CE_ProgressBarGroove
case|:
if|if
condition|(
name|opt
operator|->
name|rect
operator|.
name|isValid
argument_list|()
condition|)
name|qDrawShadePanel
argument_list|(
name|p
argument_list|,
name|opt
operator|->
name|rect
argument_list|,
name|opt
operator|->
name|palette
argument_list|,
literal|true
argument_list|,
literal|1
argument_list|,
operator|&
name|opt
operator|->
name|palette
operator|.
name|brush
argument_list|(
name|QPalette
operator|::
name|Window
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|CE_ProgressBarLabel
case|:
if|if
condition|(
specifier|const
name|QStyleOptionProgressBar
modifier|*
name|pb
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionProgressBar
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
specifier|const
name|bool
name|vertical
init|=
name|pb
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Vertical
decl_stmt|;
if|if
condition|(
operator|!
name|vertical
condition|)
block|{
name|QPalette
operator|::
name|ColorRole
name|textRole
init|=
name|QPalette
operator|::
name|NoRole
decl_stmt|;
if|if
condition|(
operator|(
name|pb
operator|->
name|textAlignment
operator|&
name|Qt
operator|::
name|AlignCenter
operator|)
operator|&&
name|pb
operator|->
name|textVisible
operator|&&
operator|(
operator|(
name|qint64
argument_list|(
name|pb
operator|->
name|progress
argument_list|)
operator|-
name|qint64
argument_list|(
name|pb
operator|->
name|minimum
argument_list|)
operator|)
operator|*
literal|2
operator|>=
operator|(
name|qint64
argument_list|(
name|pb
operator|->
name|maximum
argument_list|)
operator|-
name|qint64
argument_list|(
name|pb
operator|->
name|minimum
argument_list|)
operator|)
operator|)
condition|)
block|{
name|textRole
operator|=
name|QPalette
operator|::
name|HighlightedText
expr_stmt|;
comment|//Draw text shadow, This will increase readability when the background of same color
name|QRect
name|shadowRect
argument_list|(
name|pb
operator|->
name|rect
argument_list|)
decl_stmt|;
name|shadowRect
operator|.
name|translate
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QColor
name|shadowColor
init|=
operator|(
name|pb
operator|->
name|palette
operator|.
name|color
argument_list|(
name|textRole
argument_list|)
operator|.
name|value
argument_list|()
operator|<=
literal|128
operator|)
condition|?
name|QColor
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|,
literal|160
argument_list|)
else|:
name|QColor
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|160
argument_list|)
decl_stmt|;
name|QPalette
name|shadowPalette
init|=
name|pb
operator|->
name|palette
decl_stmt|;
name|shadowPalette
operator|.
name|setColor
argument_list|(
name|textRole
argument_list|,
name|shadowColor
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawItemText
argument_list|(
name|p
argument_list|,
name|shadowRect
argument_list|,
name|Qt
operator|::
name|AlignCenter
operator||
name|Qt
operator|::
name|TextSingleLine
argument_list|,
name|shadowPalette
argument_list|,
name|pb
operator|->
name|state
operator|&
name|State_Enabled
argument_list|,
name|pb
operator|->
name|text
argument_list|,
name|textRole
argument_list|)
expr_stmt|;
block|}
name|proxy
argument_list|()
operator|->
name|drawItemText
argument_list|(
name|p
argument_list|,
name|pb
operator|->
name|rect
argument_list|,
name|Qt
operator|::
name|AlignCenter
operator||
name|Qt
operator|::
name|TextSingleLine
argument_list|,
name|pb
operator|->
name|palette
argument_list|,
name|pb
operator|->
name|state
operator|&
name|State_Enabled
argument_list|,
name|pb
operator|->
name|text
argument_list|,
name|textRole
argument_list|)
expr_stmt|;
block|}
block|}
break|break;
case|case
name|CE_ProgressBarContents
case|:
if|if
condition|(
specifier|const
name|QStyleOptionProgressBar
modifier|*
name|pb
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionProgressBar
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|QRect
name|rect
init|=
name|pb
operator|->
name|rect
decl_stmt|;
specifier|const
name|bool
name|vertical
init|=
name|pb
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Vertical
decl_stmt|;
specifier|const
name|bool
name|inverted
init|=
name|pb
operator|->
name|invertedAppearance
decl_stmt|;
name|qint64
name|minimum
init|=
name|qint64
argument_list|(
name|pb
operator|->
name|minimum
argument_list|)
decl_stmt|;
name|qint64
name|maximum
init|=
name|qint64
argument_list|(
name|pb
operator|->
name|maximum
argument_list|)
decl_stmt|;
name|qint64
name|progress
init|=
name|qint64
argument_list|(
name|pb
operator|->
name|progress
argument_list|)
decl_stmt|;
name|QMatrix
name|m
decl_stmt|;
if|if
condition|(
name|vertical
condition|)
block|{
name|rect
operator|=
name|QRect
argument_list|(
name|rect
operator|.
name|y
argument_list|()
argument_list|,
name|rect
operator|.
name|x
argument_list|()
argument_list|,
name|rect
operator|.
name|height
argument_list|()
argument_list|,
name|rect
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
comment|// flip width and height
name|m
operator|.
name|rotate
argument_list|(
literal|90
argument_list|)
expr_stmt|;
name|m
operator|.
name|translate
argument_list|(
literal|0
argument_list|,
operator|-
operator|(
name|rect
operator|.
name|height
argument_list|()
operator|+
name|rect
operator|.
name|y
argument_list|()
operator|*
literal|2
operator|)
argument_list|)
expr_stmt|;
block|}
name|QPalette
name|pal2
init|=
name|pb
operator|->
name|palette
decl_stmt|;
comment|// Correct the highlight color if it is the same as the background
if|if
condition|(
name|pal2
operator|.
name|highlight
argument_list|()
operator|==
name|pal2
operator|.
name|background
argument_list|()
condition|)
name|pal2
operator|.
name|setColor
argument_list|(
name|QPalette
operator|::
name|Highlight
argument_list|,
name|pb
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Active
argument_list|,
name|QPalette
operator|::
name|Highlight
argument_list|)
argument_list|)
expr_stmt|;
name|bool
name|reverse
init|=
operator|(
operator|(
operator|!
name|vertical
operator|&&
operator|(
name|pb
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
operator|)
operator|)
operator|||
name|vertical
operator|)
decl_stmt|;
if|if
condition|(
name|inverted
condition|)
name|reverse
operator|=
operator|!
name|reverse
expr_stmt|;
name|int
name|w
init|=
name|rect
operator|.
name|width
argument_list|()
decl_stmt|;
if|if
condition|(
name|pb
operator|->
name|minimum
operator|==
literal|0
operator|&&
name|pb
operator|->
name|maximum
operator|==
literal|0
condition|)
block|{
comment|// draw busy indicator
name|int
name|x
init|=
operator|(
name|progress
operator|-
name|minimum
operator|)
operator|%
operator|(
name|w
operator|*
literal|2
operator|)
decl_stmt|;
if|if
condition|(
name|x
operator|>
name|w
condition|)
name|x
operator|=
literal|2
operator|*
name|w
operator|-
name|x
expr_stmt|;
name|x
operator|=
name|reverse
condition|?
name|rect
operator|.
name|right
argument_list|()
operator|-
name|x
else|:
name|x
operator|+
name|rect
operator|.
name|x
argument_list|()
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|pal2
operator|.
name|highlight
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|x
argument_list|,
name|rect
operator|.
name|y
argument_list|()
argument_list|,
name|x
argument_list|,
name|rect
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
specifier|const
name|int
name|unit_width
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_ProgressBarChunkWidth
argument_list|,
name|pb
argument_list|,
name|widget
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|unit_width
condition|)
return|return;
name|int
name|u
decl_stmt|;
if|if
condition|(
name|unit_width
operator|>
literal|1
condition|)
name|u
operator|=
operator|(
operator|(
name|rect
operator|.
name|width
argument_list|()
operator|+
name|unit_width
operator|)
operator|/
name|unit_width
operator|)
expr_stmt|;
else|else
name|u
operator|=
name|w
operator|/
name|unit_width
expr_stmt|;
name|qint64
name|p_v
init|=
name|progress
operator|-
name|minimum
decl_stmt|;
name|qint64
name|t_s
init|=
operator|(
name|maximum
operator|-
name|minimum
operator|)
condition|?
operator|(
name|maximum
operator|-
name|minimum
operator|)
else|:
name|qint64
argument_list|(
literal|1
argument_list|)
decl_stmt|;
if|if
condition|(
name|u
operator|>
literal|0
operator|&&
name|p_v
operator|>=
name|INT_MAX
operator|/
name|u
operator|&&
name|t_s
operator|>=
name|u
condition|)
block|{
comment|// scale down to something usable.
name|p_v
operator|/=
name|u
expr_stmt|;
name|t_s
operator|/=
name|u
expr_stmt|;
block|}
comment|// nu< tnu, if last chunk is only a partial chunk
name|int
name|tnu
decl_stmt|,
name|nu
decl_stmt|;
name|tnu
operator|=
name|nu
operator|=
name|p_v
operator|*
name|u
operator|/
name|t_s
expr_stmt|;
if|if
condition|(
name|nu
operator|*
name|unit_width
operator|>
name|w
condition|)
operator|--
name|nu
expr_stmt|;
comment|// Draw nu units out of a possible u of unit_width
comment|// width, each a rectangle bordered by background
comment|// color, all in a sunken panel with a percentage text
comment|// display at the end.
name|int
name|x
init|=
literal|0
decl_stmt|;
name|int
name|x0
init|=
name|reverse
condition|?
name|rect
operator|.
name|right
argument_list|()
operator|-
operator|(
operator|(
name|unit_width
operator|>
literal|1
operator|)
condition|?
name|unit_width
else|:
literal|0
operator|)
else|:
name|rect
operator|.
name|x
argument_list|()
decl_stmt|;
name|QStyleOptionProgressBar
name|pbBits
init|=
operator|*
name|pb
decl_stmt|;
name|pbBits
operator|.
name|rect
operator|=
name|rect
expr_stmt|;
name|pbBits
operator|.
name|palette
operator|=
name|pal2
expr_stmt|;
name|int
name|myY
init|=
name|pbBits
operator|.
name|rect
operator|.
name|y
argument_list|()
decl_stmt|;
name|int
name|myHeight
init|=
name|pbBits
operator|.
name|rect
operator|.
name|height
argument_list|()
decl_stmt|;
name|pbBits
operator|.
name|state
operator|=
name|State_None
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|nu
condition|;
operator|++
name|i
control|)
block|{
name|pbBits
operator|.
name|rect
operator|.
name|setRect
argument_list|(
name|x0
operator|+
name|x
argument_list|,
name|myY
argument_list|,
name|unit_width
argument_list|,
name|myHeight
argument_list|)
expr_stmt|;
name|pbBits
operator|.
name|rect
operator|=
name|m
operator|.
name|mapRect
argument_list|(
name|QRectF
argument_list|(
name|pbBits
operator|.
name|rect
argument_list|)
argument_list|)
operator|.
name|toRect
argument_list|()
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_IndicatorProgressChunk
argument_list|,
operator|&
name|pbBits
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|x
operator|+=
name|reverse
condition|?
operator|-
name|unit_width
else|:
name|unit_width
expr_stmt|;
block|}
comment|// Draw the last partial chunk to fill up the
comment|// progress bar entirely
if|if
condition|(
name|nu
operator|<
name|tnu
condition|)
block|{
name|int
name|pixels_left
init|=
name|w
operator|-
operator|(
name|nu
operator|*
name|unit_width
operator|)
decl_stmt|;
name|int
name|offset
init|=
name|reverse
condition|?
name|x0
operator|+
name|x
operator|+
name|unit_width
operator|-
name|pixels_left
else|:
name|x0
operator|+
name|x
decl_stmt|;
name|pbBits
operator|.
name|rect
operator|.
name|setRect
argument_list|(
name|offset
argument_list|,
name|myY
argument_list|,
name|pixels_left
argument_list|,
name|myHeight
argument_list|)
expr_stmt|;
name|pbBits
operator|.
name|rect
operator|=
name|m
operator|.
name|mapRect
argument_list|(
name|QRectF
argument_list|(
name|pbBits
operator|.
name|rect
argument_list|)
argument_list|)
operator|.
name|toRect
argument_list|()
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_IndicatorProgressChunk
argument_list|,
operator|&
name|pbBits
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
block|}
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_PROGRESSBAR
case|case
name|CE_HeaderLabel
case|:
if|if
condition|(
specifier|const
name|QStyleOptionHeader
modifier|*
name|header
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionHeader
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|QRect
name|rect
init|=
name|header
operator|->
name|rect
decl_stmt|;
if|if
condition|(
operator|!
name|header
operator|->
name|icon
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|int
name|iconExtent
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_SmallIconSize
argument_list|)
decl_stmt|;
name|QPixmap
name|pixmap
init|=
name|header
operator|->
name|icon
operator|.
name|pixmap
argument_list|(
name|qt_getWindow
argument_list|(
name|widget
argument_list|)
argument_list|,
name|QSize
argument_list|(
name|iconExtent
argument_list|,
name|iconExtent
argument_list|)
argument_list|,
operator|(
name|header
operator|->
name|state
operator|&
name|State_Enabled
operator|)
condition|?
name|QIcon
operator|::
name|Normal
else|:
name|QIcon
operator|::
name|Disabled
argument_list|)
decl_stmt|;
name|int
name|pixw
init|=
name|pixmap
operator|.
name|width
argument_list|()
operator|/
name|pixmap
operator|.
name|devicePixelRatio
argument_list|()
decl_stmt|;
name|QRect
name|aligned
init|=
name|alignedRect
argument_list|(
name|header
operator|->
name|direction
argument_list|,
name|QFlag
argument_list|(
name|header
operator|->
name|iconAlignment
argument_list|)
argument_list|,
name|pixmap
operator|.
name|size
argument_list|()
operator|/
name|pixmap
operator|.
name|devicePixelRatio
argument_list|()
argument_list|,
name|rect
argument_list|)
decl_stmt|;
name|QRect
name|inter
init|=
name|aligned
operator|.
name|intersected
argument_list|(
name|rect
argument_list|)
decl_stmt|;
name|p
operator|->
name|drawPixmap
argument_list|(
name|inter
operator|.
name|x
argument_list|()
argument_list|,
name|inter
operator|.
name|y
argument_list|()
argument_list|,
name|pixmap
argument_list|,
name|inter
operator|.
name|x
argument_list|()
operator|-
name|aligned
operator|.
name|x
argument_list|()
argument_list|,
name|inter
operator|.
name|y
argument_list|()
operator|-
name|aligned
operator|.
name|y
argument_list|()
argument_list|,
name|aligned
operator|.
name|width
argument_list|()
operator|*
name|pixmap
operator|.
name|devicePixelRatio
argument_list|()
argument_list|,
name|pixmap
operator|.
name|height
argument_list|()
operator|*
name|pixmap
operator|.
name|devicePixelRatio
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|header
operator|->
name|direction
operator|==
name|Qt
operator|::
name|LeftToRight
condition|)
name|rect
operator|.
name|setLeft
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
name|pixw
operator|+
literal|2
argument_list|)
expr_stmt|;
else|else
name|rect
operator|.
name|setRight
argument_list|(
name|rect
operator|.
name|right
argument_list|()
operator|-
name|pixw
operator|-
literal|2
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|header
operator|->
name|state
operator|&
name|QStyle
operator|::
name|State_On
condition|)
block|{
name|QFont
name|fnt
init|=
name|p
operator|->
name|font
argument_list|()
decl_stmt|;
name|fnt
operator|.
name|setBold
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|p
operator|->
name|setFont
argument_list|(
name|fnt
argument_list|)
expr_stmt|;
block|}
name|proxy
argument_list|()
operator|->
name|drawItemText
argument_list|(
name|p
argument_list|,
name|rect
argument_list|,
name|header
operator|->
name|textAlignment
argument_list|,
name|header
operator|->
name|palette
argument_list|,
operator|(
name|header
operator|->
name|state
operator|&
name|State_Enabled
operator|)
argument_list|,
name|header
operator|->
name|text
argument_list|,
name|QPalette
operator|::
name|ButtonText
argument_list|)
expr_stmt|;
block|}
break|break;
ifndef|#
directive|ifndef
name|QT_NO_TOOLBUTTON
case|case
name|CE_ToolButtonLabel
case|:
if|if
condition|(
specifier|const
name|QStyleOptionToolButton
modifier|*
name|toolbutton
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionToolButton
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|QRect
name|rect
init|=
name|toolbutton
operator|->
name|rect
decl_stmt|;
name|int
name|shiftX
init|=
literal|0
decl_stmt|;
name|int
name|shiftY
init|=
literal|0
decl_stmt|;
if|if
condition|(
name|toolbutton
operator|->
name|state
operator|&
operator|(
name|State_Sunken
operator||
name|State_On
operator|)
condition|)
block|{
name|shiftX
operator|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_ButtonShiftHorizontal
argument_list|,
name|toolbutton
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|shiftY
operator|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_ButtonShiftVertical
argument_list|,
name|toolbutton
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
comment|// Arrow type always overrules and is always shown
name|bool
name|hasArrow
init|=
name|toolbutton
operator|->
name|features
operator|&
name|QStyleOptionToolButton
operator|::
name|Arrow
decl_stmt|;
if|if
condition|(
operator|(
operator|(
operator|!
name|hasArrow
operator|&&
name|toolbutton
operator|->
name|icon
operator|.
name|isNull
argument_list|()
operator|)
operator|&&
operator|!
name|toolbutton
operator|->
name|text
operator|.
name|isEmpty
argument_list|()
operator|)
operator|||
name|toolbutton
operator|->
name|toolButtonStyle
operator|==
name|Qt
operator|::
name|ToolButtonTextOnly
condition|)
block|{
name|int
name|alignment
init|=
name|Qt
operator|::
name|AlignCenter
operator||
name|Qt
operator|::
name|TextShowMnemonic
decl_stmt|;
if|if
condition|(
operator|!
name|proxy
argument_list|()
operator|->
name|styleHint
argument_list|(
name|SH_UnderlineShortcut
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
condition|)
name|alignment
operator||=
name|Qt
operator|::
name|TextHideMnemonic
expr_stmt|;
name|rect
operator|.
name|translate
argument_list|(
name|shiftX
argument_list|,
name|shiftY
argument_list|)
expr_stmt|;
name|p
operator|->
name|setFont
argument_list|(
name|toolbutton
operator|->
name|font
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawItemText
argument_list|(
name|p
argument_list|,
name|rect
argument_list|,
name|alignment
argument_list|,
name|toolbutton
operator|->
name|palette
argument_list|,
name|opt
operator|->
name|state
operator|&
name|State_Enabled
argument_list|,
name|toolbutton
operator|->
name|text
argument_list|,
name|QPalette
operator|::
name|ButtonText
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QPixmap
name|pm
decl_stmt|;
name|QSize
name|pmSize
init|=
name|toolbutton
operator|->
name|iconSize
decl_stmt|;
if|if
condition|(
operator|!
name|toolbutton
operator|->
name|icon
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|QIcon
operator|::
name|State
name|state
init|=
name|toolbutton
operator|->
name|state
operator|&
name|State_On
condition|?
name|QIcon
operator|::
name|On
else|:
name|QIcon
operator|::
name|Off
decl_stmt|;
name|QIcon
operator|::
name|Mode
name|mode
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|toolbutton
operator|->
name|state
operator|&
name|State_Enabled
operator|)
condition|)
name|mode
operator|=
name|QIcon
operator|::
name|Disabled
expr_stmt|;
elseif|else
if|if
condition|(
operator|(
name|opt
operator|->
name|state
operator|&
name|State_MouseOver
operator|)
operator|&&
operator|(
name|opt
operator|->
name|state
operator|&
name|State_AutoRaise
operator|)
condition|)
name|mode
operator|=
name|QIcon
operator|::
name|Active
expr_stmt|;
else|else
name|mode
operator|=
name|QIcon
operator|::
name|Normal
expr_stmt|;
name|pm
operator|=
name|toolbutton
operator|->
name|icon
operator|.
name|pixmap
argument_list|(
name|qt_getWindow
argument_list|(
name|widget
argument_list|)
argument_list|,
name|toolbutton
operator|->
name|rect
operator|.
name|size
argument_list|()
operator|.
name|boundedTo
argument_list|(
name|toolbutton
operator|->
name|iconSize
argument_list|)
argument_list|,
name|mode
argument_list|,
name|state
argument_list|)
expr_stmt|;
name|pmSize
operator|=
name|pm
operator|.
name|size
argument_list|()
operator|/
name|pm
operator|.
name|devicePixelRatio
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|toolbutton
operator|->
name|toolButtonStyle
operator|!=
name|Qt
operator|::
name|ToolButtonIconOnly
condition|)
block|{
name|p
operator|->
name|setFont
argument_list|(
name|toolbutton
operator|->
name|font
argument_list|)
expr_stmt|;
name|QRect
name|pr
init|=
name|rect
decl_stmt|,
name|tr
init|=
name|rect
decl_stmt|;
name|int
name|alignment
init|=
name|Qt
operator|::
name|TextShowMnemonic
decl_stmt|;
if|if
condition|(
operator|!
name|proxy
argument_list|()
operator|->
name|styleHint
argument_list|(
name|SH_UnderlineShortcut
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
condition|)
name|alignment
operator||=
name|Qt
operator|::
name|TextHideMnemonic
expr_stmt|;
if|if
condition|(
name|toolbutton
operator|->
name|toolButtonStyle
operator|==
name|Qt
operator|::
name|ToolButtonTextUnderIcon
condition|)
block|{
name|pr
operator|.
name|setHeight
argument_list|(
name|pmSize
operator|.
name|height
argument_list|()
operator|+
literal|6
argument_list|)
expr_stmt|;
name|tr
operator|.
name|adjust
argument_list|(
literal|0
argument_list|,
name|pr
operator|.
name|height
argument_list|()
operator|-
literal|1
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|pr
operator|.
name|translate
argument_list|(
name|shiftX
argument_list|,
name|shiftY
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|hasArrow
condition|)
block|{
name|proxy
argument_list|()
operator|->
name|drawItemPixmap
argument_list|(
name|p
argument_list|,
name|pr
argument_list|,
name|Qt
operator|::
name|AlignCenter
argument_list|,
name|pm
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|drawArrow
argument_list|(
name|this
argument_list|,
name|toolbutton
argument_list|,
name|pr
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
name|alignment
operator||=
name|Qt
operator|::
name|AlignCenter
expr_stmt|;
block|}
else|else
block|{
name|pr
operator|.
name|setWidth
argument_list|(
name|pmSize
operator|.
name|width
argument_list|()
operator|+
literal|8
argument_list|)
expr_stmt|;
name|tr
operator|.
name|adjust
argument_list|(
name|pr
operator|.
name|width
argument_list|()
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|pr
operator|.
name|translate
argument_list|(
name|shiftX
argument_list|,
name|shiftY
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|hasArrow
condition|)
block|{
name|proxy
argument_list|()
operator|->
name|drawItemPixmap
argument_list|(
name|p
argument_list|,
name|QStyle
operator|::
name|visualRect
argument_list|(
name|opt
operator|->
name|direction
argument_list|,
name|rect
argument_list|,
name|pr
argument_list|)
argument_list|,
name|Qt
operator|::
name|AlignCenter
argument_list|,
name|pm
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|drawArrow
argument_list|(
name|this
argument_list|,
name|toolbutton
argument_list|,
name|pr
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
name|alignment
operator||=
name|Qt
operator|::
name|AlignLeft
operator||
name|Qt
operator|::
name|AlignVCenter
expr_stmt|;
block|}
name|tr
operator|.
name|translate
argument_list|(
name|shiftX
argument_list|,
name|shiftY
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawItemText
argument_list|(
name|p
argument_list|,
name|QStyle
operator|::
name|visualRect
argument_list|(
name|opt
operator|->
name|direction
argument_list|,
name|rect
argument_list|,
name|tr
argument_list|)
argument_list|,
name|alignment
argument_list|,
name|toolbutton
operator|->
name|palette
argument_list|,
name|toolbutton
operator|->
name|state
operator|&
name|State_Enabled
argument_list|,
name|toolbutton
operator|->
name|text
argument_list|,
name|QPalette
operator|::
name|ButtonText
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|rect
operator|.
name|translate
argument_list|(
name|shiftX
argument_list|,
name|shiftY
argument_list|)
expr_stmt|;
if|if
condition|(
name|hasArrow
condition|)
block|{
name|drawArrow
argument_list|(
name|this
argument_list|,
name|toolbutton
argument_list|,
name|rect
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|proxy
argument_list|()
operator|->
name|drawItemPixmap
argument_list|(
name|p
argument_list|,
name|rect
argument_list|,
name|Qt
operator|::
name|AlignCenter
argument_list|,
name|pm
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_TOOLBUTTON
ifndef|#
directive|ifndef
name|QT_NO_TOOLBOX
case|case
name|CE_ToolBoxTab
case|:
if|if
condition|(
specifier|const
name|QStyleOptionToolBox
modifier|*
name|tb
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionToolBox
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|proxy
argument_list|()
operator|->
name|drawControl
argument_list|(
name|CE_ToolBoxTabShape
argument_list|,
name|tb
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawControl
argument_list|(
name|CE_ToolBoxTabLabel
argument_list|,
name|tb
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|CE_ToolBoxTabShape
case|:
if|if
condition|(
specifier|const
name|QStyleOptionToolBox
modifier|*
name|tb
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionToolBox
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|p
operator|->
name|setPen
argument_list|(
name|tb
operator|->
name|palette
operator|.
name|mid
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|150
argument_list|)
argument_list|)
expr_stmt|;
name|bool
name|oldQt4CompatiblePainting
init|=
name|p
operator|->
name|testRenderHint
argument_list|(
name|QPainter
operator|::
name|Qt4CompatiblePainting
argument_list|)
decl_stmt|;
name|p
operator|->
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Qt4CompatiblePainting
argument_list|)
expr_stmt|;
name|int
name|d
init|=
literal|20
operator|+
name|tb
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
literal|3
decl_stmt|;
if|if
condition|(
name|tb
operator|->
name|direction
operator|!=
name|Qt
operator|::
name|RightToLeft
condition|)
block|{
specifier|const
name|QPoint
name|points
index|[]
init|=
block|{
name|QPoint
argument_list|(
operator|-
literal|1
argument_list|,
name|tb
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|+
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
operator|-
literal|1
argument_list|,
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
name|tb
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|-
name|d
argument_list|,
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
name|tb
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|-
literal|20
argument_list|,
name|tb
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
literal|2
argument_list|)
block|,
name|QPoint
argument_list|(
name|tb
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|-
literal|1
argument_list|,
name|tb
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
literal|2
argument_list|)
block|,
name|QPoint
argument_list|(
name|tb
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|-
literal|1
argument_list|,
name|tb
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|+
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
operator|-
literal|1
argument_list|,
name|tb
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|+
literal|1
argument_list|)
block|,                 }
decl_stmt|;
name|p
operator|->
name|drawPolygon
argument_list|(
name|points
argument_list|,
sizeof|sizeof
name|points
operator|/
sizeof|sizeof
expr|*
name|points
argument_list|)
expr_stmt|;
block|}
else|else
block|{
specifier|const
name|QPoint
name|points
index|[]
init|=
block|{
name|QPoint
argument_list|(
name|tb
operator|->
name|rect
operator|.
name|width
argument_list|()
argument_list|,
name|tb
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|+
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
name|tb
operator|->
name|rect
operator|.
name|width
argument_list|()
argument_list|,
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
name|d
operator|-
literal|1
argument_list|,
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
literal|20
operator|-
literal|1
argument_list|,
name|tb
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
literal|2
argument_list|)
block|,
name|QPoint
argument_list|(
literal|0
argument_list|,
name|tb
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
literal|2
argument_list|)
block|,
name|QPoint
argument_list|(
literal|0
argument_list|,
name|tb
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|+
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
name|tb
operator|->
name|rect
operator|.
name|width
argument_list|()
argument_list|,
name|tb
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|+
literal|1
argument_list|)
block|,                 }
decl_stmt|;
name|p
operator|->
name|drawPolygon
argument_list|(
name|points
argument_list|,
sizeof|sizeof
name|points
operator|/
sizeof|sizeof
expr|*
name|points
argument_list|)
expr_stmt|;
block|}
name|p
operator|->
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Qt4CompatiblePainting
argument_list|,
name|oldQt4CompatiblePainting
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|tb
operator|->
name|palette
operator|.
name|light
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|tb
operator|->
name|direction
operator|!=
name|Qt
operator|::
name|RightToLeft
condition|)
block|{
name|p
operator|->
name|drawLine
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|,
name|tb
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|-
name|d
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|tb
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|-
name|d
operator|-
literal|1
argument_list|,
literal|2
argument_list|,
name|tb
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|-
literal|21
argument_list|,
name|tb
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|tb
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|-
literal|20
argument_list|,
name|tb
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
literal|1
argument_list|,
name|tb
operator|->
name|rect
operator|.
name|width
argument_list|()
argument_list|,
name|tb
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|p
operator|->
name|drawLine
argument_list|(
name|tb
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|-
literal|1
argument_list|,
literal|2
argument_list|,
name|d
operator|-
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|d
argument_list|,
literal|2
argument_list|,
literal|20
argument_list|,
name|tb
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
literal|19
argument_list|,
name|tb
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
name|tb
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
name|p
operator|->
name|setBrush
argument_list|(
name|Qt
operator|::
name|NoBrush
argument_list|)
expr_stmt|;
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_TOOLBOX
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
case|case
name|CE_TabBarTab
case|:
if|if
condition|(
specifier|const
name|QStyleOptionTab
modifier|*
name|tab
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionTab
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|proxy
argument_list|()
operator|->
name|drawControl
argument_list|(
name|CE_TabBarTabShape
argument_list|,
name|tab
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawControl
argument_list|(
name|CE_TabBarTabLabel
argument_list|,
name|tab
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|CE_TabBarTabShape
case|:
if|if
condition|(
specifier|const
name|QStyleOptionTab
modifier|*
name|tab
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionTab
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|p
operator|->
name|save
argument_list|()
expr_stmt|;
name|QRect
name|rect
argument_list|(
name|tab
operator|->
name|rect
argument_list|)
decl_stmt|;
name|bool
name|selected
init|=
name|tab
operator|->
name|state
operator|&
name|State_Selected
decl_stmt|;
name|bool
name|onlyOne
init|=
name|tab
operator|->
name|position
operator|==
name|QStyleOptionTab
operator|::
name|OnlyOneTab
decl_stmt|;
name|int
name|tabOverlap
init|=
name|onlyOne
condition|?
literal|0
else|:
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_TabBarTabOverlap
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|selected
condition|)
block|{
switch|switch
condition|(
name|tab
operator|->
name|shape
condition|)
block|{
case|case
name|QTabBar
operator|::
name|TriangularNorth
case|:
name|rect
operator|.
name|adjust
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
name|tabOverlap
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|selected
condition|)
name|rect
operator|.
name|adjust
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
break|break;
case|case
name|QTabBar
operator|::
name|TriangularSouth
case|:
name|rect
operator|.
name|adjust
argument_list|(
literal|0
argument_list|,
name|tabOverlap
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|selected
condition|)
name|rect
operator|.
name|adjust
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
break|break;
case|case
name|QTabBar
operator|::
name|TriangularEast
case|:
name|rect
operator|.
name|adjust
argument_list|(
name|tabOverlap
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|selected
condition|)
name|rect
operator|.
name|adjust
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
break|break;
case|case
name|QTabBar
operator|::
name|TriangularWest
case|:
name|rect
operator|.
name|adjust
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
name|tabOverlap
argument_list|,
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|selected
condition|)
name|rect
operator|.
name|adjust
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
break|break;
default|default:
break|break;
block|}
block|}
name|p
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|tab
operator|->
name|palette
operator|.
name|foreground
argument_list|()
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|selected
condition|)
block|{
name|p
operator|->
name|setBrush
argument_list|(
name|tab
operator|->
name|palette
operator|.
name|base
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|widget
operator|&&
name|widget
operator|->
name|parentWidget
argument_list|()
condition|)
name|p
operator|->
name|setBrush
argument_list|(
name|widget
operator|->
name|parentWidget
argument_list|()
operator|->
name|palette
argument_list|()
operator|.
name|background
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|p
operator|->
name|setBrush
argument_list|(
name|tab
operator|->
name|palette
operator|.
name|background
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|int
name|y
decl_stmt|;
name|int
name|x
decl_stmt|;
name|QPolygon
name|a
argument_list|(
literal|10
argument_list|)
decl_stmt|;
switch|switch
condition|(
name|tab
operator|->
name|shape
condition|)
block|{
case|case
name|QTabBar
operator|::
name|TriangularNorth
case|:
case|case
name|QTabBar
operator|::
name|TriangularSouth
case|:
block|{
name|a
operator|.
name|setPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|a
operator|.
name|setPoint
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|y
operator|=
name|rect
operator|.
name|height
argument_list|()
operator|-
literal|2
expr_stmt|;
name|x
operator|=
name|y
operator|/
literal|3
expr_stmt|;
name|a
operator|.
name|setPoint
argument_list|(
literal|2
argument_list|,
name|x
operator|++
argument_list|,
name|y
operator|-
literal|1
argument_list|)
expr_stmt|;
operator|++
name|x
expr_stmt|;
name|a
operator|.
name|setPoint
argument_list|(
literal|3
argument_list|,
name|x
operator|++
argument_list|,
name|y
operator|++
argument_list|)
expr_stmt|;
name|a
operator|.
name|setPoint
argument_list|(
literal|4
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
expr_stmt|;
name|int
name|i
decl_stmt|;
name|int
name|right
init|=
name|rect
operator|.
name|width
argument_list|()
operator|-
literal|1
decl_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
literal|5
condition|;
operator|++
name|i
control|)
name|a
operator|.
name|setPoint
argument_list|(
literal|9
operator|-
name|i
argument_list|,
name|right
operator|-
name|a
operator|.
name|point
argument_list|(
name|i
argument_list|)
operator|.
name|x
argument_list|()
argument_list|,
name|a
operator|.
name|point
argument_list|(
name|i
argument_list|)
operator|.
name|y
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|tab
operator|->
name|shape
operator|==
name|QTabBar
operator|::
name|TriangularNorth
condition|)
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
operator|++
name|i
control|)
name|a
operator|.
name|setPoint
argument_list|(
name|i
argument_list|,
name|a
operator|.
name|point
argument_list|(
name|i
argument_list|)
operator|.
name|x
argument_list|()
argument_list|,
name|rect
operator|.
name|height
argument_list|()
operator|-
literal|1
operator|-
name|a
operator|.
name|point
argument_list|(
name|i
argument_list|)
operator|.
name|y
argument_list|()
argument_list|)
expr_stmt|;
name|a
operator|.
name|translate
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|->
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|)
expr_stmt|;
name|p
operator|->
name|translate
argument_list|(
literal|0
argument_list|,
literal|0.5
argument_list|)
expr_stmt|;
name|QPainterPath
name|path
decl_stmt|;
name|path
operator|.
name|addPolygon
argument_list|(
name|a
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawPath
argument_list|(
name|path
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|QTabBar
operator|::
name|TriangularEast
case|:
case|case
name|QTabBar
operator|::
name|TriangularWest
case|:
block|{
name|a
operator|.
name|setPoint
argument_list|(
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|a
operator|.
name|setPoint
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|x
operator|=
name|rect
operator|.
name|width
argument_list|()
operator|-
literal|2
expr_stmt|;
name|y
operator|=
name|x
operator|/
literal|3
expr_stmt|;
name|a
operator|.
name|setPoint
argument_list|(
literal|2
argument_list|,
name|x
operator|-
literal|1
argument_list|,
name|y
operator|++
argument_list|)
expr_stmt|;
operator|++
name|y
expr_stmt|;
name|a
operator|.
name|setPoint
argument_list|(
literal|3
argument_list|,
name|x
operator|++
argument_list|,
name|y
operator|++
argument_list|)
expr_stmt|;
name|a
operator|.
name|setPoint
argument_list|(
literal|4
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
expr_stmt|;
name|int
name|i
decl_stmt|;
name|int
name|bottom
init|=
name|rect
operator|.
name|height
argument_list|()
operator|-
literal|1
decl_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
literal|5
condition|;
operator|++
name|i
control|)
name|a
operator|.
name|setPoint
argument_list|(
literal|9
operator|-
name|i
argument_list|,
name|a
operator|.
name|point
argument_list|(
name|i
argument_list|)
operator|.
name|x
argument_list|()
argument_list|,
name|bottom
operator|-
name|a
operator|.
name|point
argument_list|(
name|i
argument_list|)
operator|.
name|y
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|tab
operator|->
name|shape
operator|==
name|QTabBar
operator|::
name|TriangularWest
condition|)
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
operator|++
name|i
control|)
name|a
operator|.
name|setPoint
argument_list|(
name|i
argument_list|,
name|rect
operator|.
name|width
argument_list|()
operator|-
literal|1
operator|-
name|a
operator|.
name|point
argument_list|(
name|i
argument_list|)
operator|.
name|x
argument_list|()
argument_list|,
name|a
operator|.
name|point
argument_list|(
name|i
argument_list|)
operator|.
name|y
argument_list|()
argument_list|)
expr_stmt|;
name|a
operator|.
name|translate
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|->
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|)
expr_stmt|;
name|p
operator|->
name|translate
argument_list|(
literal|0.5
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QPainterPath
name|path
decl_stmt|;
name|path
operator|.
name|addPolygon
argument_list|(
name|a
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawPath
argument_list|(
name|path
argument_list|)
expr_stmt|;
break|break;
block|}
default|default:
break|break;
block|}
name|p
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
break|break;
case|case
name|CE_ToolBoxTabLabel
case|:
if|if
condition|(
specifier|const
name|QStyleOptionToolBox
modifier|*
name|tb
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionToolBox
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|bool
name|enabled
init|=
name|tb
operator|->
name|state
operator|&
name|State_Enabled
decl_stmt|;
name|bool
name|selected
init|=
name|tb
operator|->
name|state
operator|&
name|State_Selected
decl_stmt|;
name|int
name|iconExtent
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|QStyle
operator|::
name|PM_SmallIconSize
argument_list|,
name|tb
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|QPixmap
name|pm
init|=
name|tb
operator|->
name|icon
operator|.
name|pixmap
argument_list|(
name|qt_getWindow
argument_list|(
name|widget
argument_list|)
argument_list|,
name|QSize
argument_list|(
name|iconExtent
argument_list|,
name|iconExtent
argument_list|)
argument_list|,
name|enabled
condition|?
name|QIcon
operator|::
name|Normal
else|:
name|QIcon
operator|::
name|Disabled
argument_list|)
decl_stmt|;
name|QRect
name|cr
init|=
name|subElementRect
argument_list|(
name|QStyle
operator|::
name|SE_ToolBoxTabContents
argument_list|,
name|tb
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|QRect
name|tr
decl_stmt|,
name|ir
decl_stmt|;
name|int
name|ih
init|=
literal|0
decl_stmt|;
if|if
condition|(
name|pm
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|tr
operator|=
name|cr
expr_stmt|;
name|tr
operator|.
name|adjust
argument_list|(
literal|4
argument_list|,
literal|0
argument_list|,
operator|-
literal|8
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|int
name|iw
init|=
name|pm
operator|.
name|width
argument_list|()
operator|/
name|pm
operator|.
name|devicePixelRatio
argument_list|()
operator|+
literal|4
decl_stmt|;
name|ih
operator|=
name|pm
operator|.
name|height
argument_list|()
operator|/
name|pm
operator|.
name|devicePixelRatio
argument_list|()
expr_stmt|;
name|ir
operator|=
name|QRect
argument_list|(
name|cr
operator|.
name|left
argument_list|()
operator|+
literal|4
argument_list|,
name|cr
operator|.
name|top
argument_list|()
argument_list|,
name|iw
operator|+
literal|2
argument_list|,
name|ih
argument_list|)
expr_stmt|;
name|tr
operator|=
name|QRect
argument_list|(
name|ir
operator|.
name|right
argument_list|()
argument_list|,
name|cr
operator|.
name|top
argument_list|()
argument_list|,
name|cr
operator|.
name|width
argument_list|()
operator|-
name|ir
operator|.
name|right
argument_list|()
operator|-
literal|4
argument_list|,
name|cr
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|selected
operator|&&
name|proxy
argument_list|()
operator|->
name|styleHint
argument_list|(
name|QStyle
operator|::
name|SH_ToolBox_SelectedPageTitleBold
argument_list|,
name|tb
argument_list|,
name|widget
argument_list|)
condition|)
block|{
name|QFont
name|f
argument_list|(
name|p
operator|->
name|font
argument_list|()
argument_list|)
decl_stmt|;
name|f
operator|.
name|setBold
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|p
operator|->
name|setFont
argument_list|(
name|f
argument_list|)
expr_stmt|;
block|}
name|QString
name|txt
init|=
name|tb
operator|->
name|fontMetrics
operator|.
name|elidedText
argument_list|(
name|tb
operator|->
name|text
argument_list|,
name|Qt
operator|::
name|ElideRight
argument_list|,
name|tr
operator|.
name|width
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|ih
condition|)
name|p
operator|->
name|drawPixmap
argument_list|(
name|ir
operator|.
name|left
argument_list|()
argument_list|,
operator|(
name|tb
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
name|ih
operator|)
operator|/
literal|2
argument_list|,
name|pm
argument_list|)
expr_stmt|;
name|int
name|alignment
init|=
name|Qt
operator|::
name|AlignLeft
operator||
name|Qt
operator|::
name|AlignVCenter
operator||
name|Qt
operator|::
name|TextShowMnemonic
decl_stmt|;
if|if
condition|(
operator|!
name|proxy
argument_list|()
operator|->
name|styleHint
argument_list|(
name|QStyle
operator|::
name|SH_UnderlineShortcut
argument_list|,
name|tb
argument_list|,
name|widget
argument_list|)
condition|)
name|alignment
operator||=
name|Qt
operator|::
name|TextHideMnemonic
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawItemText
argument_list|(
name|p
argument_list|,
name|tr
argument_list|,
name|alignment
argument_list|,
name|tb
operator|->
name|palette
argument_list|,
name|enabled
argument_list|,
name|txt
argument_list|,
name|QPalette
operator|::
name|ButtonText
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|txt
operator|.
name|isEmpty
argument_list|()
operator|&&
name|opt
operator|->
name|state
operator|&
name|State_HasFocus
condition|)
block|{
name|QStyleOptionFocusRect
name|opt
decl_stmt|;
name|opt
operator|.
name|rect
operator|=
name|tr
expr_stmt|;
name|opt
operator|.
name|palette
operator|=
name|tb
operator|->
name|palette
expr_stmt|;
name|opt
operator|.
name|state
operator|=
name|QStyle
operator|::
name|State_None
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|QStyle
operator|::
name|PE_FrameFocusRect
argument_list|,
operator|&
name|opt
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
block|}
break|break;
case|case
name|CE_TabBarTabLabel
case|:
if|if
condition|(
specifier|const
name|QStyleOptionTab
modifier|*
name|tab
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionTab
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|QRect
name|tr
init|=
name|tab
operator|->
name|rect
decl_stmt|;
name|bool
name|verticalTabs
init|=
name|tab
operator|->
name|shape
operator|==
name|QTabBar
operator|::
name|RoundedEast
operator|||
name|tab
operator|->
name|shape
operator|==
name|QTabBar
operator|::
name|RoundedWest
operator|||
name|tab
operator|->
name|shape
operator|==
name|QTabBar
operator|::
name|TriangularEast
operator|||
name|tab
operator|->
name|shape
operator|==
name|QTabBar
operator|::
name|TriangularWest
decl_stmt|;
name|int
name|alignment
init|=
name|Qt
operator|::
name|AlignCenter
operator||
name|Qt
operator|::
name|TextShowMnemonic
decl_stmt|;
if|if
condition|(
operator|!
name|proxy
argument_list|()
operator|->
name|styleHint
argument_list|(
name|SH_UnderlineShortcut
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
condition|)
name|alignment
operator||=
name|Qt
operator|::
name|TextHideMnemonic
expr_stmt|;
if|if
condition|(
name|verticalTabs
condition|)
block|{
name|p
operator|->
name|save
argument_list|()
expr_stmt|;
name|int
name|newX
decl_stmt|,
name|newY
decl_stmt|,
name|newRot
decl_stmt|;
if|if
condition|(
name|tab
operator|->
name|shape
operator|==
name|QTabBar
operator|::
name|RoundedEast
operator|||
name|tab
operator|->
name|shape
operator|==
name|QTabBar
operator|::
name|TriangularEast
condition|)
block|{
name|newX
operator|=
name|tr
operator|.
name|width
argument_list|()
operator|+
name|tr
operator|.
name|x
argument_list|()
expr_stmt|;
name|newY
operator|=
name|tr
operator|.
name|y
argument_list|()
expr_stmt|;
name|newRot
operator|=
literal|90
expr_stmt|;
block|}
else|else
block|{
name|newX
operator|=
name|tr
operator|.
name|x
argument_list|()
expr_stmt|;
name|newY
operator|=
name|tr
operator|.
name|y
argument_list|()
operator|+
name|tr
operator|.
name|height
argument_list|()
expr_stmt|;
name|newRot
operator|=
operator|-
literal|90
expr_stmt|;
block|}
name|QTransform
name|m
init|=
name|QTransform
operator|::
name|fromTranslate
argument_list|(
name|newX
argument_list|,
name|newY
argument_list|)
decl_stmt|;
name|m
operator|.
name|rotate
argument_list|(
name|newRot
argument_list|)
expr_stmt|;
name|p
operator|->
name|setTransform
argument_list|(
name|m
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
name|QRect
name|iconRect
decl_stmt|;
name|d
operator|->
name|tabLayout
argument_list|(
name|tab
argument_list|,
name|widget
argument_list|,
operator|&
name|tr
argument_list|,
operator|&
name|iconRect
argument_list|)
expr_stmt|;
name|tr
operator|=
name|proxy
argument_list|()
operator|->
name|subElementRect
argument_list|(
name|SE_TabBarTabText
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
expr_stmt|;
comment|//we compute tr twice because the style may override subElementRect
if|if
condition|(
operator|!
name|tab
operator|->
name|icon
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|QPixmap
name|tabIcon
init|=
name|tab
operator|->
name|icon
operator|.
name|pixmap
argument_list|(
name|qt_getWindow
argument_list|(
name|widget
argument_list|)
argument_list|,
name|tab
operator|->
name|iconSize
argument_list|,
operator|(
name|tab
operator|->
name|state
operator|&
name|State_Enabled
operator|)
condition|?
name|QIcon
operator|::
name|Normal
else|:
name|QIcon
operator|::
name|Disabled
argument_list|,
operator|(
name|tab
operator|->
name|state
operator|&
name|State_Selected
operator|)
condition|?
name|QIcon
operator|::
name|On
else|:
name|QIcon
operator|::
name|Off
argument_list|)
decl_stmt|;
name|p
operator|->
name|drawPixmap
argument_list|(
name|iconRect
operator|.
name|x
argument_list|()
argument_list|,
name|iconRect
operator|.
name|y
argument_list|()
argument_list|,
name|tabIcon
argument_list|)
expr_stmt|;
block|}
name|proxy
argument_list|()
operator|->
name|drawItemText
argument_list|(
name|p
argument_list|,
name|tr
argument_list|,
name|alignment
argument_list|,
name|tab
operator|->
name|palette
argument_list|,
name|tab
operator|->
name|state
operator|&
name|State_Enabled
argument_list|,
name|tab
operator|->
name|text
argument_list|,
name|QPalette
operator|::
name|WindowText
argument_list|)
expr_stmt|;
if|if
condition|(
name|verticalTabs
condition|)
name|p
operator|->
name|restore
argument_list|()
expr_stmt|;
if|if
condition|(
name|tab
operator|->
name|state
operator|&
name|State_HasFocus
condition|)
block|{
specifier|const
name|int
name|OFFSET
init|=
literal|1
operator|+
name|pixelMetric
argument_list|(
name|PM_DefaultFrameWidth
argument_list|)
decl_stmt|;
name|int
name|x1
decl_stmt|,
name|x2
decl_stmt|;
name|x1
operator|=
name|tab
operator|->
name|rect
operator|.
name|left
argument_list|()
expr_stmt|;
name|x2
operator|=
name|tab
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
expr_stmt|;
name|QStyleOptionFocusRect
name|fropt
decl_stmt|;
name|fropt
operator|.
name|QStyleOption
operator|::
name|operator
name|=
argument_list|(
operator|*
name|tab
argument_list|)
expr_stmt|;
name|fropt
operator|.
name|rect
operator|.
name|setRect
argument_list|(
name|x1
operator|+
literal|1
operator|+
name|OFFSET
argument_list|,
name|tab
operator|->
name|rect
operator|.
name|y
argument_list|()
operator|+
name|OFFSET
argument_list|,
name|x2
operator|-
name|x1
operator|-
literal|2
operator|*
name|OFFSET
argument_list|,
name|tab
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
literal|2
operator|*
name|OFFSET
argument_list|)
expr_stmt|;
name|drawPrimitive
argument_list|(
name|PE_FrameFocusRect
argument_list|,
operator|&
name|fropt
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_TABBAR
ifndef|#
directive|ifndef
name|QT_NO_SIZEGRIP
case|case
name|CE_SizeGrip
case|:
block|{
name|p
operator|->
name|save
argument_list|()
expr_stmt|;
name|int
name|x
decl_stmt|,
name|y
decl_stmt|,
name|w
decl_stmt|,
name|h
decl_stmt|;
name|opt
operator|->
name|rect
operator|.
name|getRect
argument_list|(
operator|&
name|x
argument_list|,
operator|&
name|y
argument_list|,
operator|&
name|w
argument_list|,
operator|&
name|h
argument_list|)
expr_stmt|;
name|int
name|sw
init|=
name|qMin
argument_list|(
name|h
argument_list|,
name|w
argument_list|)
decl_stmt|;
if|if
condition|(
name|h
operator|>
name|w
condition|)
name|p
operator|->
name|translate
argument_list|(
literal|0
argument_list|,
name|h
operator|-
name|w
argument_list|)
expr_stmt|;
else|else
name|p
operator|->
name|translate
argument_list|(
name|w
operator|-
name|h
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|int
name|sx
init|=
name|x
decl_stmt|;
name|int
name|sy
init|=
name|y
decl_stmt|;
name|int
name|s
init|=
name|sw
operator|/
literal|3
decl_stmt|;
name|Qt
operator|::
name|Corner
name|corner
decl_stmt|;
if|if
condition|(
specifier|const
name|QStyleOptionSizeGrip
modifier|*
name|sgOpt
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSizeGrip
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
name|corner
operator|=
name|sgOpt
operator|->
name|corner
expr_stmt|;
elseif|else
if|if
condition|(
name|opt
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
condition|)
name|corner
operator|=
name|Qt
operator|::
name|BottomLeftCorner
expr_stmt|;
else|else
name|corner
operator|=
name|Qt
operator|::
name|BottomRightCorner
expr_stmt|;
if|if
condition|(
name|corner
operator|==
name|Qt
operator|::
name|BottomLeftCorner
condition|)
block|{
name|sx
operator|=
name|x
operator|+
name|sw
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|4
condition|;
operator|++
name|i
control|)
block|{
name|p
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|opt
operator|->
name|palette
operator|.
name|light
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|x
argument_list|,
name|sy
operator|-
literal|1
argument_list|,
name|sx
operator|+
literal|1
argument_list|,
name|sw
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|opt
operator|->
name|palette
operator|.
name|dark
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|x
argument_list|,
name|sy
argument_list|,
name|sx
argument_list|,
name|sw
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|opt
operator|->
name|palette
operator|.
name|dark
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|x
argument_list|,
name|sy
operator|+
literal|1
argument_list|,
name|sx
operator|-
literal|1
argument_list|,
name|sw
argument_list|)
expr_stmt|;
name|sx
operator|-=
name|s
expr_stmt|;
name|sy
operator|+=
name|s
expr_stmt|;
block|}
block|}
elseif|else
if|if
condition|(
name|corner
operator|==
name|Qt
operator|::
name|BottomRightCorner
condition|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|4
condition|;
operator|++
name|i
control|)
block|{
name|p
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|opt
operator|->
name|palette
operator|.
name|light
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|sx
operator|-
literal|1
argument_list|,
name|sw
argument_list|,
name|sw
argument_list|,
name|sy
operator|-
literal|1
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|opt
operator|->
name|palette
operator|.
name|dark
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|sx
argument_list|,
name|sw
argument_list|,
name|sw
argument_list|,
name|sy
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|opt
operator|->
name|palette
operator|.
name|dark
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|sx
operator|+
literal|1
argument_list|,
name|sw
argument_list|,
name|sw
argument_list|,
name|sy
operator|+
literal|1
argument_list|)
expr_stmt|;
name|sx
operator|+=
name|s
expr_stmt|;
name|sy
operator|+=
name|s
expr_stmt|;
block|}
block|}
elseif|else
if|if
condition|(
name|corner
operator|==
name|Qt
operator|::
name|TopRightCorner
condition|)
block|{
name|sy
operator|=
name|y
operator|+
name|sw
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|4
condition|;
operator|++
name|i
control|)
block|{
name|p
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|opt
operator|->
name|palette
operator|.
name|light
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|sx
operator|-
literal|1
argument_list|,
name|y
argument_list|,
name|sw
argument_list|,
name|sy
operator|+
literal|1
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|opt
operator|->
name|palette
operator|.
name|dark
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|sx
argument_list|,
name|y
argument_list|,
name|sw
argument_list|,
name|sy
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|opt
operator|->
name|palette
operator|.
name|dark
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|sx
operator|+
literal|1
argument_list|,
name|y
argument_list|,
name|sw
argument_list|,
name|sy
operator|-
literal|1
argument_list|)
expr_stmt|;
name|sx
operator|+=
name|s
expr_stmt|;
name|sy
operator|-=
name|s
expr_stmt|;
block|}
block|}
elseif|else
if|if
condition|(
name|corner
operator|==
name|Qt
operator|::
name|TopLeftCorner
condition|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|4
condition|;
operator|++
name|i
control|)
block|{
name|p
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|opt
operator|->
name|palette
operator|.
name|light
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|x
argument_list|,
name|sy
operator|-
literal|1
argument_list|,
name|sx
operator|-
literal|1
argument_list|,
name|y
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|opt
operator|->
name|palette
operator|.
name|dark
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|x
argument_list|,
name|sy
argument_list|,
name|sx
argument_list|,
name|y
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|opt
operator|->
name|palette
operator|.
name|dark
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|x
argument_list|,
name|sy
operator|+
literal|1
argument_list|,
name|sx
operator|+
literal|1
argument_list|,
name|y
argument_list|)
expr_stmt|;
name|sx
operator|+=
name|s
expr_stmt|;
name|sy
operator|+=
name|s
expr_stmt|;
block|}
block|}
name|p
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
block|}
endif|#
directive|endif
comment|// QT_NO_SIZEGRIP
ifndef|#
directive|ifndef
name|QT_NO_RUBBERBAND
case|case
name|CE_RubberBand
case|:
block|{
if|if
condition|(
specifier|const
name|QStyleOptionRubberBand
modifier|*
name|rbOpt
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionRubberBand
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|QPixmap
name|tiledPixmap
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
decl_stmt|;
name|QPainter
name|pixmapPainter
argument_list|(
operator|&
name|tiledPixmap
argument_list|)
decl_stmt|;
name|pixmapPainter
operator|.
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|pixmapPainter
operator|.
name|setBrush
argument_list|(
name|Qt
operator|::
name|Dense4Pattern
argument_list|)
expr_stmt|;
name|pixmapPainter
operator|.
name|setBackground
argument_list|(
name|QBrush
argument_list|(
name|opt
operator|->
name|palette
operator|.
name|base
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|pixmapPainter
operator|.
name|setBackgroundMode
argument_list|(
name|Qt
operator|::
name|OpaqueMode
argument_list|)
expr_stmt|;
name|pixmapPainter
operator|.
name|drawRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|tiledPixmap
operator|.
name|width
argument_list|()
argument_list|,
name|tiledPixmap
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
name|pixmapPainter
operator|.
name|end
argument_list|()
expr_stmt|;
comment|// ### workaround for borked XRENDER
name|tiledPixmap
operator|=
name|QPixmap
operator|::
name|fromImage
argument_list|(
name|tiledPixmap
operator|.
name|toImage
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|->
name|save
argument_list|()
expr_stmt|;
name|QRect
name|r
init|=
name|opt
operator|->
name|rect
decl_stmt|;
name|QStyleHintReturnMask
name|mask
decl_stmt|;
if|if
condition|(
name|proxy
argument_list|()
operator|->
name|styleHint
argument_list|(
name|QStyle
operator|::
name|SH_RubberBand_Mask
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|,
operator|&
name|mask
argument_list|)
condition|)
name|p
operator|->
name|setClipRegion
argument_list|(
name|mask
operator|.
name|region
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawTiledPixmap
argument_list|(
name|r
operator|.
name|x
argument_list|()
argument_list|,
name|r
operator|.
name|y
argument_list|()
argument_list|,
name|r
operator|.
name|width
argument_list|()
argument_list|,
name|r
operator|.
name|height
argument_list|()
argument_list|,
name|tiledPixmap
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|opt
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Active
argument_list|,
name|QPalette
operator|::
name|WindowText
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|setBrush
argument_list|(
name|Qt
operator|::
name|NoBrush
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawRect
argument_list|(
name|r
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|rbOpt
operator|->
name|shape
operator|==
name|QRubberBand
operator|::
name|Rectangle
condition|)
name|p
operator|->
name|drawRect
argument_list|(
name|r
operator|.
name|adjusted
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|,
operator|-
literal|4
argument_list|,
operator|-
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
break|break;
block|}
endif|#
directive|endif
comment|// QT_NO_RUBBERBAND
ifndef|#
directive|ifndef
name|QT_NO_DOCKWIDGET
case|case
name|CE_DockWidgetTitle
case|:
if|if
condition|(
specifier|const
name|QStyleOptionDockWidget
modifier|*
name|dwOpt
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionDockWidget
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|QRect
name|r
init|=
name|dwOpt
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
decl_stmt|;
if|if
condition|(
name|dwOpt
operator|->
name|movable
condition|)
block|{
name|p
operator|->
name|setPen
argument_list|(
name|dwOpt
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Dark
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawRect
argument_list|(
name|r
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|dwOpt
operator|->
name|title
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
specifier|const
name|bool
name|verticalTitleBar
init|=
name|dwOpt
operator|->
name|verticalTitleBar
decl_stmt|;
if|if
condition|(
name|verticalTitleBar
condition|)
block|{
name|r
operator|.
name|setSize
argument_list|(
name|r
operator|.
name|size
argument_list|()
operator|.
name|transposed
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|->
name|save
argument_list|()
expr_stmt|;
name|p
operator|->
name|translate
argument_list|(
name|r
operator|.
name|left
argument_list|()
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
name|r
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|->
name|rotate
argument_list|(
operator|-
literal|90
argument_list|)
expr_stmt|;
name|p
operator|->
name|translate
argument_list|(
operator|-
name|r
operator|.
name|left
argument_list|()
argument_list|,
operator|-
name|r
operator|.
name|top
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|const
name|int
name|indent
init|=
name|p
operator|->
name|fontMetrics
argument_list|()
operator|.
name|descent
argument_list|()
decl_stmt|;
name|proxy
argument_list|()
operator|->
name|drawItemText
argument_list|(
name|p
argument_list|,
name|r
operator|.
name|adjusted
argument_list|(
name|indent
operator|+
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
name|indent
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|Qt
operator|::
name|AlignLeft
operator||
name|Qt
operator|::
name|AlignVCenter
operator||
name|Qt
operator|::
name|TextShowMnemonic
argument_list|,
name|dwOpt
operator|->
name|palette
argument_list|,
name|dwOpt
operator|->
name|state
operator|&
name|State_Enabled
argument_list|,
name|dwOpt
operator|->
name|title
argument_list|,
name|QPalette
operator|::
name|WindowText
argument_list|)
expr_stmt|;
if|if
condition|(
name|verticalTitleBar
condition|)
name|p
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_DOCKWIDGET
case|case
name|CE_Header
case|:
if|if
condition|(
specifier|const
name|QStyleOptionHeader
modifier|*
name|header
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionHeader
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|QRegion
name|clipRegion
init|=
name|p
operator|->
name|clipRegion
argument_list|()
decl_stmt|;
name|p
operator|->
name|setClipRect
argument_list|(
name|opt
operator|->
name|rect
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawControl
argument_list|(
name|CE_HeaderSection
argument_list|,
name|header
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|QStyleOptionHeader
name|subopt
init|=
operator|*
name|header
decl_stmt|;
name|subopt
operator|.
name|rect
operator|=
name|subElementRect
argument_list|(
name|SE_HeaderLabel
argument_list|,
name|header
argument_list|,
name|widget
argument_list|)
expr_stmt|;
if|if
condition|(
name|subopt
operator|.
name|rect
operator|.
name|isValid
argument_list|()
condition|)
name|proxy
argument_list|()
operator|->
name|drawControl
argument_list|(
name|CE_HeaderLabel
argument_list|,
operator|&
name|subopt
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
if|if
condition|(
name|header
operator|->
name|sortIndicator
operator|!=
name|QStyleOptionHeader
operator|::
name|None
condition|)
block|{
name|subopt
operator|.
name|rect
operator|=
name|subElementRect
argument_list|(
name|SE_HeaderArrow
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_IndicatorHeaderArrow
argument_list|,
operator|&
name|subopt
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
name|p
operator|->
name|setClipRegion
argument_list|(
name|clipRegion
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|CE_FocusFrame
case|:
name|p
operator|->
name|fillRect
argument_list|(
name|opt
operator|->
name|rect
argument_list|,
name|opt
operator|->
name|palette
operator|.
name|foreground
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|CE_HeaderSection
case|:
name|qDrawShadePanel
argument_list|(
name|p
argument_list|,
name|opt
operator|->
name|rect
argument_list|,
name|opt
operator|->
name|palette
argument_list|,
name|opt
operator|->
name|state
operator|&
name|State_Sunken
argument_list|,
literal|1
argument_list|,
operator|&
name|opt
operator|->
name|palette
operator|.
name|brush
argument_list|(
name|QPalette
operator|::
name|Button
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|CE_HeaderEmptyArea
case|:
name|p
operator|->
name|fillRect
argument_list|(
name|opt
operator|->
name|rect
argument_list|,
name|opt
operator|->
name|palette
operator|.
name|background
argument_list|()
argument_list|)
expr_stmt|;
break|break;
ifndef|#
directive|ifndef
name|QT_NO_COMBOBOX
case|case
name|CE_ComboBoxLabel
case|:
if|if
condition|(
specifier|const
name|QStyleOptionComboBox
modifier|*
name|cb
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionComboBox
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|QRect
name|editRect
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_ComboBox
argument_list|,
name|cb
argument_list|,
name|SC_ComboBoxEditField
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|p
operator|->
name|save
argument_list|()
expr_stmt|;
name|p
operator|->
name|setClipRect
argument_list|(
name|editRect
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|cb
operator|->
name|currentIcon
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|QIcon
operator|::
name|Mode
name|mode
init|=
name|cb
operator|->
name|state
operator|&
name|State_Enabled
condition|?
name|QIcon
operator|::
name|Normal
else|:
name|QIcon
operator|::
name|Disabled
decl_stmt|;
name|QPixmap
name|pixmap
init|=
name|cb
operator|->
name|currentIcon
operator|.
name|pixmap
argument_list|(
name|qt_getWindow
argument_list|(
name|widget
argument_list|)
argument_list|,
name|cb
operator|->
name|iconSize
argument_list|,
name|mode
argument_list|)
decl_stmt|;
name|QRect
name|iconRect
argument_list|(
name|editRect
argument_list|)
decl_stmt|;
name|iconRect
operator|.
name|setWidth
argument_list|(
name|cb
operator|->
name|iconSize
operator|.
name|width
argument_list|()
operator|+
literal|4
argument_list|)
expr_stmt|;
name|iconRect
operator|=
name|alignedRect
argument_list|(
name|cb
operator|->
name|direction
argument_list|,
name|Qt
operator|::
name|AlignLeft
operator||
name|Qt
operator|::
name|AlignVCenter
argument_list|,
name|iconRect
operator|.
name|size
argument_list|()
argument_list|,
name|editRect
argument_list|)
expr_stmt|;
if|if
condition|(
name|cb
operator|->
name|editable
condition|)
name|p
operator|->
name|fillRect
argument_list|(
name|iconRect
argument_list|,
name|opt
operator|->
name|palette
operator|.
name|brush
argument_list|(
name|QPalette
operator|::
name|Base
argument_list|)
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawItemPixmap
argument_list|(
name|p
argument_list|,
name|iconRect
argument_list|,
name|Qt
operator|::
name|AlignCenter
argument_list|,
name|pixmap
argument_list|)
expr_stmt|;
if|if
condition|(
name|cb
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
condition|)
name|editRect
operator|.
name|translate
argument_list|(
operator|-
literal|4
operator|-
name|cb
operator|->
name|iconSize
operator|.
name|width
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
else|else
name|editRect
operator|.
name|translate
argument_list|(
name|cb
operator|->
name|iconSize
operator|.
name|width
argument_list|()
operator|+
literal|4
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|cb
operator|->
name|currentText
operator|.
name|isEmpty
argument_list|()
operator|&&
operator|!
name|cb
operator|->
name|editable
condition|)
block|{
name|proxy
argument_list|()
operator|->
name|drawItemText
argument_list|(
name|p
argument_list|,
name|editRect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|,
name|visualAlignment
argument_list|(
name|cb
operator|->
name|direction
argument_list|,
name|Qt
operator|::
name|AlignLeft
operator||
name|Qt
operator|::
name|AlignVCenter
argument_list|)
argument_list|,
name|cb
operator|->
name|palette
argument_list|,
name|cb
operator|->
name|state
operator|&
name|State_Enabled
argument_list|,
name|cb
operator|->
name|currentText
argument_list|)
expr_stmt|;
block|}
name|p
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_COMBOBOX
ifndef|#
directive|ifndef
name|QT_NO_TOOLBAR
case|case
name|CE_ToolBar
case|:
if|if
condition|(
specifier|const
name|QStyleOptionToolBar
modifier|*
name|toolBar
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionToolBar
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
comment|// Compatibility with styles that use PE_PanelToolBar
name|QStyleOptionFrame
name|frame
decl_stmt|;
name|frame
operator|.
name|QStyleOption
operator|::
name|operator
name|=
argument_list|(
operator|*
name|toolBar
argument_list|)
expr_stmt|;
name|frame
operator|.
name|lineWidth
operator|=
name|toolBar
operator|->
name|lineWidth
expr_stmt|;
name|frame
operator|.
name|midLineWidth
operator|=
name|toolBar
operator|->
name|midLineWidth
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_PanelToolBar
argument_list|,
name|opt
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
if|if
condition|(
name|widget
operator|&&
name|qobject_cast
argument_list|<
name|QToolBar
operator|*
argument_list|>
argument_list|(
name|widget
operator|->
name|parentWidget
argument_list|()
argument_list|)
condition|)
break|break;
name|qDrawShadePanel
argument_list|(
name|p
argument_list|,
name|toolBar
operator|->
name|rect
argument_list|,
name|toolBar
operator|->
name|palette
argument_list|,
literal|false
argument_list|,
name|toolBar
operator|->
name|lineWidth
argument_list|,
operator|&
name|toolBar
operator|->
name|palette
operator|.
name|brush
argument_list|(
name|QPalette
operator|::
name|Button
argument_list|)
argument_list|)
expr_stmt|;
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_TOOLBAR
case|case
name|CE_ColumnViewGrip
case|:
block|{
comment|// draw background gradients
name|QLinearGradient
name|g
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|width
argument_list|()
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|g
operator|.
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|opt
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Active
argument_list|,
name|QPalette
operator|::
name|Mid
argument_list|)
argument_list|)
expr_stmt|;
name|g
operator|.
name|setColorAt
argument_list|(
literal|0.5
argument_list|,
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|p
operator|->
name|fillRect
argument_list|(
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|width
argument_list|()
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|height
argument_list|()
argument_list|)
argument_list|,
name|g
argument_list|)
expr_stmt|;
comment|// draw the two lines
name|QPen
name|pen
argument_list|(
name|p
operator|->
name|pen
argument_list|()
argument_list|)
decl_stmt|;
name|pen
operator|.
name|setWidth
argument_list|(
name|opt
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|/
literal|20
argument_list|)
expr_stmt|;
name|pen
operator|.
name|setColor
argument_list|(
name|opt
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Active
argument_list|,
name|QPalette
operator|::
name|Dark
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|pen
argument_list|)
expr_stmt|;
name|int
name|line1starting
init|=
name|opt
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|*
literal|8
operator|/
literal|20
decl_stmt|;
name|int
name|line2starting
init|=
name|opt
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|*
literal|13
operator|/
literal|20
decl_stmt|;
name|int
name|top
init|=
name|opt
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|*
literal|20
operator|/
literal|75
decl_stmt|;
name|int
name|bottom
init|=
name|opt
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
literal|1
operator|-
name|top
decl_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|line1starting
argument_list|,
name|top
argument_list|,
name|line1starting
argument_list|,
name|bottom
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|line2starting
argument_list|,
name|top
argument_list|,
name|line2starting
argument_list|,
name|bottom
argument_list|)
expr_stmt|;
block|}
break|break;
ifndef|#
directive|ifndef
name|QT_NO_ITEMVIEWS
case|case
name|CE_ItemViewItem
case|:
if|if
condition|(
specifier|const
name|QStyleOptionViewItem
modifier|*
name|vopt
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionViewItem
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|p
operator|->
name|save
argument_list|()
expr_stmt|;
name|p
operator|->
name|setClipRect
argument_list|(
name|opt
operator|->
name|rect
argument_list|)
expr_stmt|;
name|QRect
name|checkRect
init|=
name|proxy
argument_list|()
operator|->
name|subElementRect
argument_list|(
name|SE_ItemViewItemCheckIndicator
argument_list|,
name|vopt
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|QRect
name|iconRect
init|=
name|proxy
argument_list|()
operator|->
name|subElementRect
argument_list|(
name|SE_ItemViewItemDecoration
argument_list|,
name|vopt
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|QRect
name|textRect
init|=
name|proxy
argument_list|()
operator|->
name|subElementRect
argument_list|(
name|SE_ItemViewItemText
argument_list|,
name|vopt
argument_list|,
name|widget
argument_list|)
decl_stmt|;
comment|// draw the background
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_PanelItemViewItem
argument_list|,
name|opt
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
comment|// draw the check mark
if|if
condition|(
name|vopt
operator|->
name|features
operator|&
name|QStyleOptionViewItem
operator|::
name|HasCheckIndicator
condition|)
block|{
name|QStyleOptionViewItem
name|option
argument_list|(
operator|*
name|vopt
argument_list|)
decl_stmt|;
name|option
operator|.
name|rect
operator|=
name|checkRect
expr_stmt|;
name|option
operator|.
name|state
operator|=
name|option
operator|.
name|state
operator|&
operator|~
name|QStyle
operator|::
name|State_HasFocus
expr_stmt|;
switch|switch
condition|(
name|vopt
operator|->
name|checkState
condition|)
block|{
case|case
name|Qt
operator|::
name|Unchecked
case|:
name|option
operator|.
name|state
operator||=
name|QStyle
operator|::
name|State_Off
expr_stmt|;
break|break;
case|case
name|Qt
operator|::
name|PartiallyChecked
case|:
name|option
operator|.
name|state
operator||=
name|QStyle
operator|::
name|State_NoChange
expr_stmt|;
break|break;
case|case
name|Qt
operator|::
name|Checked
case|:
name|option
operator|.
name|state
operator||=
name|QStyle
operator|::
name|State_On
expr_stmt|;
break|break;
block|}
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|QStyle
operator|::
name|PE_IndicatorViewItemCheck
argument_list|,
operator|&
name|option
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
comment|// draw the icon
name|QIcon
operator|::
name|Mode
name|mode
init|=
name|QIcon
operator|::
name|Normal
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|vopt
operator|->
name|state
operator|&
name|QStyle
operator|::
name|State_Enabled
operator|)
condition|)
name|mode
operator|=
name|QIcon
operator|::
name|Disabled
expr_stmt|;
elseif|else
if|if
condition|(
name|vopt
operator|->
name|state
operator|&
name|QStyle
operator|::
name|State_Selected
condition|)
name|mode
operator|=
name|QIcon
operator|::
name|Selected
expr_stmt|;
name|QIcon
operator|::
name|State
name|state
init|=
name|vopt
operator|->
name|state
operator|&
name|QStyle
operator|::
name|State_Open
condition|?
name|QIcon
operator|::
name|On
else|:
name|QIcon
operator|::
name|Off
decl_stmt|;
name|vopt
operator|->
name|icon
operator|.
name|paint
argument_list|(
name|p
argument_list|,
name|iconRect
argument_list|,
name|vopt
operator|->
name|decorationAlignment
argument_list|,
name|mode
argument_list|,
name|state
argument_list|)
expr_stmt|;
comment|// draw the text
if|if
condition|(
operator|!
name|vopt
operator|->
name|text
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|QPalette
operator|::
name|ColorGroup
name|cg
init|=
name|vopt
operator|->
name|state
operator|&
name|QStyle
operator|::
name|State_Enabled
condition|?
name|QPalette
operator|::
name|Normal
else|:
name|QPalette
operator|::
name|Disabled
decl_stmt|;
if|if
condition|(
name|cg
operator|==
name|QPalette
operator|::
name|Normal
operator|&&
operator|!
operator|(
name|vopt
operator|->
name|state
operator|&
name|QStyle
operator|::
name|State_Active
operator|)
condition|)
name|cg
operator|=
name|QPalette
operator|::
name|Inactive
expr_stmt|;
if|if
condition|(
name|vopt
operator|->
name|state
operator|&
name|QStyle
operator|::
name|State_Selected
condition|)
block|{
name|p
operator|->
name|setPen
argument_list|(
name|vopt
operator|->
name|palette
operator|.
name|color
argument_list|(
name|cg
argument_list|,
name|QPalette
operator|::
name|HighlightedText
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|p
operator|->
name|setPen
argument_list|(
name|vopt
operator|->
name|palette
operator|.
name|color
argument_list|(
name|cg
argument_list|,
name|QPalette
operator|::
name|Text
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|vopt
operator|->
name|state
operator|&
name|QStyle
operator|::
name|State_Editing
condition|)
block|{
name|p
operator|->
name|setPen
argument_list|(
name|vopt
operator|->
name|palette
operator|.
name|color
argument_list|(
name|cg
argument_list|,
name|QPalette
operator|::
name|Text
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawRect
argument_list|(
name|textRect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|d
operator|->
name|viewItemDrawText
argument_list|(
name|p
argument_list|,
name|vopt
argument_list|,
name|textRect
argument_list|)
expr_stmt|;
block|}
comment|// draw the focus rect
if|if
condition|(
name|vopt
operator|->
name|state
operator|&
name|QStyle
operator|::
name|State_HasFocus
condition|)
block|{
name|QStyleOptionFocusRect
name|o
decl_stmt|;
name|o
operator|.
name|QStyleOption
operator|::
name|operator
name|=
argument_list|(
operator|*
name|vopt
argument_list|)
expr_stmt|;
name|o
operator|.
name|rect
operator|=
name|proxy
argument_list|()
operator|->
name|subElementRect
argument_list|(
name|SE_ItemViewItemFocusRect
argument_list|,
name|vopt
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|o
operator|.
name|state
operator||=
name|QStyle
operator|::
name|State_KeyboardFocusChange
expr_stmt|;
name|o
operator|.
name|state
operator||=
name|QStyle
operator|::
name|State_Item
expr_stmt|;
name|QPalette
operator|::
name|ColorGroup
name|cg
init|=
operator|(
name|vopt
operator|->
name|state
operator|&
name|QStyle
operator|::
name|State_Enabled
operator|)
condition|?
name|QPalette
operator|::
name|Normal
else|:
name|QPalette
operator|::
name|Disabled
decl_stmt|;
name|o
operator|.
name|backgroundColor
operator|=
name|vopt
operator|->
name|palette
operator|.
name|color
argument_list|(
name|cg
argument_list|,
operator|(
name|vopt
operator|->
name|state
operator|&
name|QStyle
operator|::
name|State_Selected
operator|)
condition|?
name|QPalette
operator|::
name|Highlight
else|:
name|QPalette
operator|::
name|Window
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|QStyle
operator|::
name|PE_FrameFocusRect
argument_list|,
operator|&
name|o
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
name|p
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_ITEMVIEWS
ifndef|#
directive|ifndef
name|QT_NO_FRAME
case|case
name|CE_ShapedFrame
case|:
if|if
condition|(
specifier|const
name|QStyleOptionFrame
modifier|*
name|f
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionFrame
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|int
name|frameShape
init|=
name|f
operator|->
name|frameShape
decl_stmt|;
name|int
name|frameShadow
init|=
name|QFrame
operator|::
name|Plain
decl_stmt|;
if|if
condition|(
name|f
operator|->
name|state
operator|&
name|QStyle
operator|::
name|State_Sunken
condition|)
block|{
name|frameShadow
operator|=
name|QFrame
operator|::
name|Sunken
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|f
operator|->
name|state
operator|&
name|QStyle
operator|::
name|State_Raised
condition|)
block|{
name|frameShadow
operator|=
name|QFrame
operator|::
name|Raised
expr_stmt|;
block|}
name|int
name|lw
init|=
name|f
operator|->
name|lineWidth
decl_stmt|;
name|int
name|mlw
init|=
name|f
operator|->
name|midLineWidth
decl_stmt|;
name|QPalette
operator|::
name|ColorRole
name|foregroundRole
init|=
name|QPalette
operator|::
name|WindowText
decl_stmt|;
if|if
condition|(
name|widget
condition|)
name|foregroundRole
operator|=
name|widget
operator|->
name|foregroundRole
argument_list|()
expr_stmt|;
switch|switch
condition|(
name|frameShape
condition|)
block|{
case|case
name|QFrame
operator|::
name|Box
case|:
if|if
condition|(
name|frameShadow
operator|==
name|QFrame
operator|::
name|Plain
condition|)
block|{
name|qDrawPlainRect
argument_list|(
name|p
argument_list|,
name|f
operator|->
name|rect
argument_list|,
name|f
operator|->
name|palette
operator|.
name|color
argument_list|(
name|foregroundRole
argument_list|)
argument_list|,
name|lw
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|qDrawShadeRect
argument_list|(
name|p
argument_list|,
name|f
operator|->
name|rect
argument_list|,
name|f
operator|->
name|palette
argument_list|,
name|frameShadow
operator|==
name|QFrame
operator|::
name|Sunken
argument_list|,
name|lw
argument_list|,
name|mlw
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|QFrame
operator|::
name|StyledPanel
case|:
comment|//keep the compatibility with Qt 4.4 if there is a proxy style.
comment|//be sure to call drawPrimitive(QStyle::PE_Frame) on the proxy style
if|if
condition|(
name|widget
condition|)
block|{
name|widget
operator|->
name|style
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|QStyle
operator|::
name|PE_Frame
argument_list|,
name|opt
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|QStyle
operator|::
name|PE_Frame
argument_list|,
name|opt
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|QFrame
operator|::
name|Panel
case|:
if|if
condition|(
name|frameShadow
operator|==
name|QFrame
operator|::
name|Plain
condition|)
block|{
name|qDrawPlainRect
argument_list|(
name|p
argument_list|,
name|f
operator|->
name|rect
argument_list|,
name|f
operator|->
name|palette
operator|.
name|color
argument_list|(
name|foregroundRole
argument_list|)
argument_list|,
name|lw
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|qDrawShadePanel
argument_list|(
name|p
argument_list|,
name|f
operator|->
name|rect
argument_list|,
name|f
operator|->
name|palette
argument_list|,
name|frameShadow
operator|==
name|QFrame
operator|::
name|Sunken
argument_list|,
name|lw
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|QFrame
operator|::
name|WinPanel
case|:
if|if
condition|(
name|frameShadow
operator|==
name|QFrame
operator|::
name|Plain
condition|)
block|{
name|qDrawPlainRect
argument_list|(
name|p
argument_list|,
name|f
operator|->
name|rect
argument_list|,
name|f
operator|->
name|palette
operator|.
name|color
argument_list|(
name|foregroundRole
argument_list|)
argument_list|,
name|lw
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|qDrawWinPanel
argument_list|(
name|p
argument_list|,
name|f
operator|->
name|rect
argument_list|,
name|f
operator|->
name|palette
argument_list|,
name|frameShadow
operator|==
name|QFrame
operator|::
name|Sunken
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|QFrame
operator|::
name|HLine
case|:
case|case
name|QFrame
operator|::
name|VLine
case|:
block|{
name|QPoint
name|p1
decl_stmt|,
name|p2
decl_stmt|;
if|if
condition|(
name|frameShape
operator|==
name|QFrame
operator|::
name|HLine
condition|)
block|{
name|p1
operator|=
name|QPoint
argument_list|(
name|opt
operator|->
name|rect
operator|.
name|x
argument_list|()
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|y
argument_list|()
operator|+
name|opt
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|/
literal|2
argument_list|)
expr_stmt|;
name|p2
operator|=
name|QPoint
argument_list|(
name|opt
operator|->
name|rect
operator|.
name|x
argument_list|()
operator|+
name|opt
operator|->
name|rect
operator|.
name|width
argument_list|()
argument_list|,
name|p1
operator|.
name|y
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|p1
operator|=
name|QPoint
argument_list|(
name|opt
operator|->
name|rect
operator|.
name|x
argument_list|()
operator|+
name|opt
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|/
literal|2
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|y
argument_list|()
argument_list|)
expr_stmt|;
name|p2
operator|=
name|QPoint
argument_list|(
name|p1
operator|.
name|x
argument_list|()
argument_list|,
name|p1
operator|.
name|y
argument_list|()
operator|+
name|opt
operator|->
name|rect
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|frameShadow
operator|==
name|QFrame
operator|::
name|Plain
condition|)
block|{
name|QPen
name|oldPen
init|=
name|p
operator|->
name|pen
argument_list|()
decl_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|opt
operator|->
name|palette
operator|.
name|brush
argument_list|(
name|foregroundRole
argument_list|)
argument_list|,
name|lw
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|p1
argument_list|,
name|p2
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|oldPen
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|qDrawShadeLine
argument_list|(
name|p
argument_list|,
name|p1
argument_list|,
name|p2
argument_list|,
name|f
operator|->
name|palette
argument_list|,
name|frameShadow
operator|==
name|QFrame
operator|::
name|Sunken
argument_list|,
name|lw
argument_list|,
name|mlw
argument_list|)
expr_stmt|;
block|}
break|break;
block|}
block|}
block|}
break|break;
endif|#
directive|endif
default|default:
break|break;
block|}
block|}
end_function
begin_comment
comment|/*!   \reimp */
end_comment
begin_function
DECL|function|subElementRect
name|QRect
name|QCommonStyle
operator|::
name|subElementRect
parameter_list|(
name|SubElement
name|sr
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|opt
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
name|Q_D
argument_list|(
specifier|const
name|QCommonStyle
argument_list|)
expr_stmt|;
name|QRect
name|r
decl_stmt|;
switch|switch
condition|(
name|sr
condition|)
block|{
case|case
name|SE_PushButtonContents
case|:
if|if
condition|(
specifier|const
name|QStyleOptionButton
modifier|*
name|btn
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionButton
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|int
name|dx1
decl_stmt|,
name|dx2
decl_stmt|;
name|dx1
operator|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_DefaultFrameWidth
argument_list|,
name|btn
argument_list|,
name|widget
argument_list|)
expr_stmt|;
if|if
condition|(
name|btn
operator|->
name|features
operator|&
name|QStyleOptionButton
operator|::
name|AutoDefaultButton
condition|)
name|dx1
operator|+=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_ButtonDefaultIndicator
argument_list|,
name|btn
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|dx2
operator|=
name|dx1
operator|*
literal|2
expr_stmt|;
name|r
operator|.
name|setRect
argument_list|(
name|opt
operator|->
name|rect
operator|.
name|x
argument_list|()
operator|+
name|dx1
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|y
argument_list|()
operator|+
name|dx1
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|-
name|dx2
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
name|dx2
argument_list|)
expr_stmt|;
name|r
operator|=
name|visualRect
argument_list|(
name|opt
operator|->
name|direction
argument_list|,
name|opt
operator|->
name|rect
argument_list|,
name|r
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|SE_PushButtonFocusRect
case|:
if|if
condition|(
specifier|const
name|QStyleOptionButton
modifier|*
name|btn
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionButton
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|int
name|dbw1
init|=
literal|0
decl_stmt|,
name|dbw2
init|=
literal|0
decl_stmt|;
if|if
condition|(
name|btn
operator|->
name|features
operator|&
name|QStyleOptionButton
operator|::
name|AutoDefaultButton
condition|)
block|{
name|dbw1
operator|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_ButtonDefaultIndicator
argument_list|,
name|btn
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|dbw2
operator|=
name|dbw1
operator|*
literal|2
expr_stmt|;
block|}
name|int
name|dfw1
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_DefaultFrameWidth
argument_list|,
name|btn
argument_list|,
name|widget
argument_list|)
operator|+
literal|1
decl_stmt|,
name|dfw2
init|=
name|dfw1
operator|*
literal|2
decl_stmt|;
name|r
operator|.
name|setRect
argument_list|(
name|btn
operator|->
name|rect
operator|.
name|x
argument_list|()
operator|+
name|dfw1
operator|+
name|dbw1
argument_list|,
name|btn
operator|->
name|rect
operator|.
name|y
argument_list|()
operator|+
name|dfw1
operator|+
name|dbw1
argument_list|,
name|btn
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|-
name|dfw2
operator|-
name|dbw2
argument_list|,
name|btn
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
name|dfw2
operator|-
name|dbw2
argument_list|)
expr_stmt|;
name|r
operator|=
name|visualRect
argument_list|(
name|opt
operator|->
name|direction
argument_list|,
name|opt
operator|->
name|rect
argument_list|,
name|r
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|SE_CheckBoxIndicator
case|:
block|{
name|int
name|h
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_IndicatorHeight
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|r
operator|.
name|setRect
argument_list|(
name|opt
operator|->
name|rect
operator|.
name|x
argument_list|()
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|y
argument_list|()
operator|+
operator|(
operator|(
name|opt
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
name|h
operator|)
operator|/
literal|2
operator|)
argument_list|,
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_IndicatorWidth
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
argument_list|,
name|h
argument_list|)
expr_stmt|;
name|r
operator|=
name|visualRect
argument_list|(
name|opt
operator|->
name|direction
argument_list|,
name|opt
operator|->
name|rect
argument_list|,
name|r
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|SE_CheckBoxContents
case|:
block|{
comment|// Deal with the logical first, then convert it back to screen coords.
name|QRect
name|ir
init|=
name|visualRect
argument_list|(
name|opt
operator|->
name|direction
argument_list|,
name|opt
operator|->
name|rect
argument_list|,
name|subElementRect
argument_list|(
name|SE_CheckBoxIndicator
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
argument_list|)
decl_stmt|;
name|int
name|spacing
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_CheckBoxLabelSpacing
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|r
operator|.
name|setRect
argument_list|(
name|ir
operator|.
name|right
argument_list|()
operator|+
name|spacing
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|y
argument_list|()
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|-
name|ir
operator|.
name|width
argument_list|()
operator|-
name|spacing
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
name|r
operator|=
name|visualRect
argument_list|(
name|opt
operator|->
name|direction
argument_list|,
name|opt
operator|->
name|rect
argument_list|,
name|r
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|SE_CheckBoxFocusRect
case|:
if|if
condition|(
specifier|const
name|QStyleOptionButton
modifier|*
name|btn
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionButton
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
if|if
condition|(
name|btn
operator|->
name|icon
operator|.
name|isNull
argument_list|()
operator|&&
name|btn
operator|->
name|text
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|r
operator|=
name|subElementRect
argument_list|(
name|SE_CheckBoxIndicator
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|r
operator|.
name|adjust
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
break|break;
block|}
comment|// As above, deal with the logical first, then convert it back to screen coords.
name|QRect
name|cr
init|=
name|visualRect
argument_list|(
name|btn
operator|->
name|direction
argument_list|,
name|btn
operator|->
name|rect
argument_list|,
name|subElementRect
argument_list|(
name|SE_CheckBoxContents
argument_list|,
name|btn
argument_list|,
name|widget
argument_list|)
argument_list|)
decl_stmt|;
name|QRect
name|iconRect
decl_stmt|,
name|textRect
decl_stmt|;
if|if
condition|(
operator|!
name|btn
operator|->
name|text
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|textRect
operator|=
name|itemTextRect
argument_list|(
name|opt
operator|->
name|fontMetrics
argument_list|,
name|cr
argument_list|,
name|Qt
operator|::
name|AlignAbsolute
operator||
name|Qt
operator|::
name|AlignLeft
operator||
name|Qt
operator|::
name|AlignVCenter
operator||
name|Qt
operator|::
name|TextShowMnemonic
argument_list|,
name|btn
operator|->
name|state
operator|&
name|State_Enabled
argument_list|,
name|btn
operator|->
name|text
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|btn
operator|->
name|icon
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|iconRect
operator|=
name|itemPixmapRect
argument_list|(
name|cr
argument_list|,
name|Qt
operator|::
name|AlignAbsolute
operator||
name|Qt
operator|::
name|AlignLeft
operator||
name|Qt
operator|::
name|AlignVCenter
operator||
name|Qt
operator|::
name|TextShowMnemonic
argument_list|,
name|btn
operator|->
name|icon
operator|.
name|pixmap
argument_list|(
name|qt_getWindow
argument_list|(
name|widget
argument_list|)
argument_list|,
name|btn
operator|->
name|iconSize
argument_list|,
name|QIcon
operator|::
name|Normal
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|textRect
operator|.
name|isEmpty
argument_list|()
condition|)
name|textRect
operator|.
name|translate
argument_list|(
name|iconRect
operator|.
name|right
argument_list|()
operator|+
literal|4
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
name|r
operator|=
name|iconRect
operator||
name|textRect
expr_stmt|;
name|r
operator|.
name|adjust
argument_list|(
operator|-
literal|3
argument_list|,
operator|-
literal|2
argument_list|,
literal|3
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|r
operator|=
name|r
operator|.
name|intersected
argument_list|(
name|btn
operator|->
name|rect
argument_list|)
expr_stmt|;
name|r
operator|=
name|visualRect
argument_list|(
name|btn
operator|->
name|direction
argument_list|,
name|btn
operator|->
name|rect
argument_list|,
name|r
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|SE_RadioButtonIndicator
case|:
block|{
name|int
name|h
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_ExclusiveIndicatorHeight
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|r
operator|.
name|setRect
argument_list|(
name|opt
operator|->
name|rect
operator|.
name|x
argument_list|()
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|y
argument_list|()
operator|+
operator|(
operator|(
name|opt
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
name|h
operator|)
operator|/
literal|2
operator|)
argument_list|,
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_ExclusiveIndicatorWidth
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
argument_list|,
name|h
argument_list|)
expr_stmt|;
name|r
operator|=
name|visualRect
argument_list|(
name|opt
operator|->
name|direction
argument_list|,
name|opt
operator|->
name|rect
argument_list|,
name|r
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|SE_RadioButtonContents
case|:
block|{
name|QRect
name|ir
init|=
name|visualRect
argument_list|(
name|opt
operator|->
name|direction
argument_list|,
name|opt
operator|->
name|rect
argument_list|,
name|subElementRect
argument_list|(
name|SE_RadioButtonIndicator
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
argument_list|)
decl_stmt|;
name|int
name|spacing
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_RadioButtonLabelSpacing
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|r
operator|.
name|setRect
argument_list|(
name|ir
operator|.
name|left
argument_list|()
operator|+
name|ir
operator|.
name|width
argument_list|()
operator|+
name|spacing
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|y
argument_list|()
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|-
name|ir
operator|.
name|width
argument_list|()
operator|-
name|spacing
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
name|r
operator|=
name|visualRect
argument_list|(
name|opt
operator|->
name|direction
argument_list|,
name|opt
operator|->
name|rect
argument_list|,
name|r
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|SE_RadioButtonFocusRect
case|:
if|if
condition|(
specifier|const
name|QStyleOptionButton
modifier|*
name|btn
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionButton
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
if|if
condition|(
name|btn
operator|->
name|icon
operator|.
name|isNull
argument_list|()
operator|&&
name|btn
operator|->
name|text
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|r
operator|=
name|subElementRect
argument_list|(
name|SE_RadioButtonIndicator
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|r
operator|.
name|adjust
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
break|break;
block|}
name|QRect
name|cr
init|=
name|visualRect
argument_list|(
name|btn
operator|->
name|direction
argument_list|,
name|btn
operator|->
name|rect
argument_list|,
name|subElementRect
argument_list|(
name|SE_RadioButtonContents
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
argument_list|)
decl_stmt|;
name|QRect
name|iconRect
decl_stmt|,
name|textRect
decl_stmt|;
if|if
condition|(
operator|!
name|btn
operator|->
name|text
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|textRect
operator|=
name|itemTextRect
argument_list|(
name|opt
operator|->
name|fontMetrics
argument_list|,
name|cr
argument_list|,
name|Qt
operator|::
name|AlignAbsolute
operator||
name|Qt
operator|::
name|AlignLeft
operator||
name|Qt
operator|::
name|AlignVCenter
operator||
name|Qt
operator|::
name|TextShowMnemonic
argument_list|,
name|btn
operator|->
name|state
operator|&
name|State_Enabled
argument_list|,
name|btn
operator|->
name|text
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|btn
operator|->
name|icon
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|iconRect
operator|=
name|itemPixmapRect
argument_list|(
name|cr
argument_list|,
name|Qt
operator|::
name|AlignAbsolute
operator||
name|Qt
operator|::
name|AlignLeft
operator||
name|Qt
operator|::
name|AlignVCenter
operator||
name|Qt
operator|::
name|TextShowMnemonic
argument_list|,
name|btn
operator|->
name|icon
operator|.
name|pixmap
argument_list|(
name|qt_getWindow
argument_list|(
name|widget
argument_list|)
argument_list|,
name|btn
operator|->
name|iconSize
argument_list|,
name|QIcon
operator|::
name|Normal
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|textRect
operator|.
name|isEmpty
argument_list|()
condition|)
name|textRect
operator|.
name|translate
argument_list|(
name|iconRect
operator|.
name|right
argument_list|()
operator|+
literal|4
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
name|r
operator|=
name|iconRect
operator||
name|textRect
expr_stmt|;
name|r
operator|.
name|adjust
argument_list|(
operator|-
literal|3
argument_list|,
operator|-
literal|2
argument_list|,
literal|3
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|r
operator|=
name|r
operator|.
name|intersected
argument_list|(
name|btn
operator|->
name|rect
argument_list|)
expr_stmt|;
name|r
operator|=
name|visualRect
argument_list|(
name|btn
operator|->
name|direction
argument_list|,
name|btn
operator|->
name|rect
argument_list|,
name|r
argument_list|)
expr_stmt|;
block|}
break|break;
ifndef|#
directive|ifndef
name|QT_NO_SLIDER
case|case
name|SE_SliderFocusRect
case|:
if|if
condition|(
specifier|const
name|QStyleOptionSlider
modifier|*
name|slider
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSlider
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|int
name|tickOffset
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_SliderTickmarkOffset
argument_list|,
name|slider
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|int
name|thickness
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_SliderControlThickness
argument_list|,
name|slider
argument_list|,
name|widget
argument_list|)
decl_stmt|;
if|if
condition|(
name|slider
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
name|r
operator|.
name|setRect
argument_list|(
literal|0
argument_list|,
name|tickOffset
operator|-
literal|1
argument_list|,
name|slider
operator|->
name|rect
operator|.
name|width
argument_list|()
argument_list|,
name|thickness
operator|+
literal|2
argument_list|)
expr_stmt|;
else|else
name|r
operator|.
name|setRect
argument_list|(
name|tickOffset
operator|-
literal|1
argument_list|,
literal|0
argument_list|,
name|thickness
operator|+
literal|2
argument_list|,
name|slider
operator|->
name|rect
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
name|r
operator|=
name|r
operator|.
name|intersected
argument_list|(
name|slider
operator|->
name|rect
argument_list|)
expr_stmt|;
name|r
operator|=
name|visualRect
argument_list|(
name|opt
operator|->
name|direction
argument_list|,
name|opt
operator|->
name|rect
argument_list|,
name|r
argument_list|)
expr_stmt|;
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_SLIDER
ifndef|#
directive|ifndef
name|QT_NO_PROGRESSBAR
case|case
name|SE_ProgressBarGroove
case|:
case|case
name|SE_ProgressBarContents
case|:
case|case
name|SE_ProgressBarLabel
case|:
if|if
condition|(
specifier|const
name|QStyleOptionProgressBar
modifier|*
name|pb
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionProgressBar
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|int
name|textw
init|=
literal|0
decl_stmt|;
specifier|const
name|bool
name|vertical
init|=
name|pb
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Vertical
decl_stmt|;
if|if
condition|(
operator|!
name|vertical
condition|)
block|{
if|if
condition|(
name|pb
operator|->
name|textVisible
condition|)
name|textw
operator|=
name|qMax
argument_list|(
name|pb
operator|->
name|fontMetrics
operator|.
name|width
argument_list|(
name|pb
operator|->
name|text
argument_list|)
argument_list|,
name|pb
operator|->
name|fontMetrics
operator|.
name|width
argument_list|(
name|QLatin1String
argument_list|(
literal|"100%"
argument_list|)
argument_list|)
argument_list|)
operator|+
literal|6
expr_stmt|;
block|}
if|if
condition|(
operator|(
name|pb
operator|->
name|textAlignment
operator|&
name|Qt
operator|::
name|AlignCenter
operator|)
operator|==
literal|0
condition|)
block|{
if|if
condition|(
name|sr
operator|!=
name|SE_ProgressBarLabel
condition|)
name|r
operator|.
name|setCoords
argument_list|(
name|pb
operator|->
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|pb
operator|->
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|pb
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
name|textw
argument_list|,
name|pb
operator|->
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|r
operator|.
name|setCoords
argument_list|(
name|pb
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
name|textw
argument_list|,
name|pb
operator|->
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|pb
operator|->
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|pb
operator|->
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|r
operator|=
name|pb
operator|->
name|rect
expr_stmt|;
block|}
name|r
operator|=
name|visualRect
argument_list|(
name|pb
operator|->
name|direction
argument_list|,
name|pb
operator|->
name|rect
argument_list|,
name|r
argument_list|)
expr_stmt|;
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_PROGRESSBAR
ifndef|#
directive|ifndef
name|QT_NO_COMBOBOX
case|case
name|SE_ComboBoxFocusRect
case|:
if|if
condition|(
specifier|const
name|QStyleOptionComboBox
modifier|*
name|cb
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionComboBox
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|int
name|margin
init|=
name|cb
operator|->
name|frame
condition|?
literal|3
else|:
literal|0
decl_stmt|;
name|r
operator|.
name|setRect
argument_list|(
name|opt
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
name|margin
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
name|margin
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|-
literal|2
operator|*
name|margin
operator|-
literal|16
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
literal|2
operator|*
name|margin
argument_list|)
expr_stmt|;
name|r
operator|=
name|visualRect
argument_list|(
name|opt
operator|->
name|direction
argument_list|,
name|opt
operator|->
name|rect
argument_list|,
name|r
argument_list|)
expr_stmt|;
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_COMBOBOX
ifndef|#
directive|ifndef
name|QT_NO_TOOLBOX
case|case
name|SE_ToolBoxTabContents
case|:
name|r
operator|=
name|opt
operator|->
name|rect
expr_stmt|;
name|r
operator|.
name|adjust
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|30
argument_list|,
literal|0
argument_list|)
expr_stmt|;
break|break;
endif|#
directive|endif
comment|// QT_NO_TOOLBOX
case|case
name|SE_HeaderLabel
case|:
block|{
name|int
name|margin
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|QStyle
operator|::
name|PM_HeaderMargin
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|r
operator|.
name|setRect
argument_list|(
name|opt
operator|->
name|rect
operator|.
name|x
argument_list|()
operator|+
name|margin
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|y
argument_list|()
operator|+
name|margin
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|-
name|margin
operator|*
literal|2
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
name|margin
operator|*
literal|2
argument_list|)
expr_stmt|;
if|if
condition|(
specifier|const
name|QStyleOptionHeader
modifier|*
name|header
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionHeader
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
comment|// Subtract width needed for arrow, if there is one
if|if
condition|(
name|header
operator|->
name|sortIndicator
operator|!=
name|QStyleOptionHeader
operator|::
name|None
condition|)
block|{
if|if
condition|(
name|opt
operator|->
name|state
operator|&
name|State_Horizontal
condition|)
name|r
operator|.
name|setWidth
argument_list|(
name|r
operator|.
name|width
argument_list|()
operator|-
operator|(
name|opt
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|/
literal|2
operator|)
operator|-
operator|(
name|margin
operator|*
literal|2
operator|)
argument_list|)
expr_stmt|;
else|else
name|r
operator|.
name|setHeight
argument_list|(
name|r
operator|.
name|height
argument_list|()
operator|-
operator|(
name|opt
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|/
literal|2
operator|)
operator|-
operator|(
name|margin
operator|*
literal|2
operator|)
argument_list|)
expr_stmt|;
block|}
block|}
name|r
operator|=
name|visualRect
argument_list|(
name|opt
operator|->
name|direction
argument_list|,
name|opt
operator|->
name|rect
argument_list|,
name|r
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|SE_HeaderArrow
case|:
block|{
name|int
name|h
init|=
name|opt
operator|->
name|rect
operator|.
name|height
argument_list|()
decl_stmt|;
name|int
name|w
init|=
name|opt
operator|->
name|rect
operator|.
name|width
argument_list|()
decl_stmt|;
name|int
name|x
init|=
name|opt
operator|->
name|rect
operator|.
name|x
argument_list|()
decl_stmt|;
name|int
name|y
init|=
name|opt
operator|->
name|rect
operator|.
name|y
argument_list|()
decl_stmt|;
name|int
name|margin
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|QStyle
operator|::
name|PM_HeaderMargin
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
decl_stmt|;
if|if
condition|(
name|opt
operator|->
name|state
operator|&
name|State_Horizontal
condition|)
block|{
name|int
name|horiz_size
init|=
name|h
operator|/
literal|2
decl_stmt|;
name|r
operator|.
name|setRect
argument_list|(
name|x
operator|+
name|w
operator|-
name|margin
operator|*
literal|2
operator|-
name|horiz_size
argument_list|,
name|y
operator|+
literal|5
argument_list|,
name|horiz_size
argument_list|,
name|h
operator|-
name|margin
operator|*
literal|2
operator|-
literal|5
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|int
name|vert_size
init|=
name|w
operator|/
literal|2
decl_stmt|;
name|r
operator|.
name|setRect
argument_list|(
name|x
operator|+
literal|5
argument_list|,
name|y
operator|+
name|h
operator|-
name|margin
operator|*
literal|2
operator|-
name|vert_size
argument_list|,
name|w
operator|-
name|margin
operator|*
literal|2
operator|-
literal|5
argument_list|,
name|vert_size
argument_list|)
expr_stmt|;
block|}
name|r
operator|=
name|visualRect
argument_list|(
name|opt
operator|->
name|direction
argument_list|,
name|opt
operator|->
name|rect
argument_list|,
name|r
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|SE_RadioButtonClickRect
case|:
name|r
operator|=
name|subElementRect
argument_list|(
name|SE_RadioButtonFocusRect
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|r
operator||=
name|subElementRect
argument_list|(
name|SE_RadioButtonIndicator
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
expr_stmt|;
break|break;
case|case
name|SE_CheckBoxClickRect
case|:
name|r
operator|=
name|subElementRect
argument_list|(
name|SE_CheckBoxFocusRect
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|r
operator||=
name|subElementRect
argument_list|(
name|SE_CheckBoxIndicator
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
expr_stmt|;
break|break;
ifndef|#
directive|ifndef
name|QT_NO_TABWIDGET
case|case
name|SE_TabWidgetTabBar
case|:
if|if
condition|(
specifier|const
name|QStyleOptionTabWidgetFrame
modifier|*
name|twf
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionTabWidgetFrame
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|r
operator|.
name|setSize
argument_list|(
name|twf
operator|->
name|tabBarSize
argument_list|)
expr_stmt|;
specifier|const
name|uint
name|alingMask
init|=
name|Qt
operator|::
name|AlignLeft
operator||
name|Qt
operator|::
name|AlignRight
operator||
name|Qt
operator|::
name|AlignHCenter
decl_stmt|;
switch|switch
condition|(
name|twf
operator|->
name|shape
condition|)
block|{
case|case
name|QTabBar
operator|::
name|RoundedNorth
case|:
case|case
name|QTabBar
operator|::
name|TriangularNorth
case|:
comment|// Constrain the size now, otherwise, center could get off the page
comment|// This of course repeated for all the other directions
name|r
operator|.
name|setWidth
argument_list|(
name|qMin
argument_list|(
name|r
operator|.
name|width
argument_list|()
argument_list|,
name|twf
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|-
name|twf
operator|->
name|leftCornerWidgetSize
operator|.
name|width
argument_list|()
operator|-
name|twf
operator|->
name|rightCornerWidgetSize
operator|.
name|width
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
switch|switch
condition|(
name|proxy
argument_list|()
operator|->
name|styleHint
argument_list|(
name|SH_TabBar_Alignment
argument_list|,
name|twf
argument_list|,
name|widget
argument_list|)
operator|&
name|alingMask
condition|)
block|{
default|default:
case|case
name|Qt
operator|::
name|AlignLeft
case|:
name|r
operator|.
name|moveTopLeft
argument_list|(
name|QPoint
argument_list|(
name|twf
operator|->
name|leftCornerWidgetSize
operator|.
name|width
argument_list|()
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|Qt
operator|::
name|AlignHCenter
case|:
name|r
operator|.
name|moveTopLeft
argument_list|(
name|QPoint
argument_list|(
name|twf
operator|->
name|rect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|-
name|qRound
argument_list|(
name|r
operator|.
name|width
argument_list|()
operator|/
literal|2.0f
argument_list|)
operator|+
operator|(
name|twf
operator|->
name|leftCornerWidgetSize
operator|.
name|width
argument_list|()
operator|/
literal|2
operator|)
operator|-
operator|(
name|twf
operator|->
name|rightCornerWidgetSize
operator|.
name|width
argument_list|()
operator|/
literal|2
operator|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|Qt
operator|::
name|AlignRight
case|:
name|r
operator|.
name|moveTopLeft
argument_list|(
name|QPoint
argument_list|(
name|twf
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|-
name|twf
operator|->
name|tabBarSize
operator|.
name|width
argument_list|()
operator|-
name|twf
operator|->
name|rightCornerWidgetSize
operator|.
name|width
argument_list|()
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
name|r
operator|=
name|visualRect
argument_list|(
name|twf
operator|->
name|direction
argument_list|,
name|twf
operator|->
name|rect
argument_list|,
name|r
argument_list|)
expr_stmt|;
break|break;
case|case
name|QTabBar
operator|::
name|RoundedSouth
case|:
case|case
name|QTabBar
operator|::
name|TriangularSouth
case|:
name|r
operator|.
name|setWidth
argument_list|(
name|qMin
argument_list|(
name|r
operator|.
name|width
argument_list|()
argument_list|,
name|twf
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|-
name|twf
operator|->
name|leftCornerWidgetSize
operator|.
name|width
argument_list|()
operator|-
name|twf
operator|->
name|rightCornerWidgetSize
operator|.
name|width
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
switch|switch
condition|(
name|proxy
argument_list|()
operator|->
name|styleHint
argument_list|(
name|SH_TabBar_Alignment
argument_list|,
name|twf
argument_list|,
name|widget
argument_list|)
operator|&
name|alingMask
condition|)
block|{
default|default:
case|case
name|Qt
operator|::
name|AlignLeft
case|:
name|r
operator|.
name|moveTopLeft
argument_list|(
name|QPoint
argument_list|(
name|twf
operator|->
name|leftCornerWidgetSize
operator|.
name|width
argument_list|()
argument_list|,
name|twf
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
name|twf
operator|->
name|tabBarSize
operator|.
name|height
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|Qt
operator|::
name|AlignHCenter
case|:
name|r
operator|.
name|moveTopLeft
argument_list|(
name|QPoint
argument_list|(
name|twf
operator|->
name|rect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|-
name|qRound
argument_list|(
name|r
operator|.
name|width
argument_list|()
operator|/
literal|2.0f
argument_list|)
operator|+
operator|(
name|twf
operator|->
name|leftCornerWidgetSize
operator|.
name|width
argument_list|()
operator|/
literal|2
operator|)
operator|-
operator|(
name|twf
operator|->
name|rightCornerWidgetSize
operator|.
name|width
argument_list|()
operator|/
literal|2
operator|)
argument_list|,
name|twf
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
name|twf
operator|->
name|tabBarSize
operator|.
name|height
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|Qt
operator|::
name|AlignRight
case|:
name|r
operator|.
name|moveTopLeft
argument_list|(
name|QPoint
argument_list|(
name|twf
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|-
name|twf
operator|->
name|tabBarSize
operator|.
name|width
argument_list|()
operator|-
name|twf
operator|->
name|rightCornerWidgetSize
operator|.
name|width
argument_list|()
argument_list|,
name|twf
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
name|twf
operator|->
name|tabBarSize
operator|.
name|height
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
name|r
operator|=
name|visualRect
argument_list|(
name|twf
operator|->
name|direction
argument_list|,
name|twf
operator|->
name|rect
argument_list|,
name|r
argument_list|)
expr_stmt|;
break|break;
case|case
name|QTabBar
operator|::
name|RoundedEast
case|:
case|case
name|QTabBar
operator|::
name|TriangularEast
case|:
name|r
operator|.
name|setHeight
argument_list|(
name|qMin
argument_list|(
name|r
operator|.
name|height
argument_list|()
argument_list|,
name|twf
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
name|twf
operator|->
name|leftCornerWidgetSize
operator|.
name|height
argument_list|()
operator|-
name|twf
operator|->
name|rightCornerWidgetSize
operator|.
name|height
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
switch|switch
condition|(
name|proxy
argument_list|()
operator|->
name|styleHint
argument_list|(
name|SH_TabBar_Alignment
argument_list|,
name|twf
argument_list|,
name|widget
argument_list|)
operator|&
name|alingMask
condition|)
block|{
default|default:
case|case
name|Qt
operator|::
name|AlignLeft
case|:
name|r
operator|.
name|moveTopLeft
argument_list|(
name|QPoint
argument_list|(
name|twf
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|-
name|twf
operator|->
name|tabBarSize
operator|.
name|width
argument_list|()
argument_list|,
name|twf
operator|->
name|leftCornerWidgetSize
operator|.
name|height
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|Qt
operator|::
name|AlignHCenter
case|:
name|r
operator|.
name|moveTopLeft
argument_list|(
name|QPoint
argument_list|(
name|twf
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|-
name|twf
operator|->
name|tabBarSize
operator|.
name|width
argument_list|()
argument_list|,
name|twf
operator|->
name|rect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|-
name|r
operator|.
name|height
argument_list|()
operator|/
literal|2
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|Qt
operator|::
name|AlignRight
case|:
name|r
operator|.
name|moveTopLeft
argument_list|(
name|QPoint
argument_list|(
name|twf
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|-
name|twf
operator|->
name|tabBarSize
operator|.
name|width
argument_list|()
argument_list|,
name|twf
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
name|twf
operator|->
name|tabBarSize
operator|.
name|height
argument_list|()
operator|-
name|twf
operator|->
name|rightCornerWidgetSize
operator|.
name|height
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
break|break;
case|case
name|QTabBar
operator|::
name|RoundedWest
case|:
case|case
name|QTabBar
operator|::
name|TriangularWest
case|:
name|r
operator|.
name|setHeight
argument_list|(
name|qMin
argument_list|(
name|r
operator|.
name|height
argument_list|()
argument_list|,
name|twf
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
name|twf
operator|->
name|leftCornerWidgetSize
operator|.
name|height
argument_list|()
operator|-
name|twf
operator|->
name|rightCornerWidgetSize
operator|.
name|height
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
switch|switch
condition|(
name|proxy
argument_list|()
operator|->
name|styleHint
argument_list|(
name|SH_TabBar_Alignment
argument_list|,
name|twf
argument_list|,
name|widget
argument_list|)
operator|&
name|alingMask
condition|)
block|{
default|default:
case|case
name|Qt
operator|::
name|AlignLeft
case|:
name|r
operator|.
name|moveTopLeft
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
name|twf
operator|->
name|leftCornerWidgetSize
operator|.
name|height
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|Qt
operator|::
name|AlignHCenter
case|:
name|r
operator|.
name|moveTopLeft
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
name|twf
operator|->
name|rect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|-
name|r
operator|.
name|height
argument_list|()
operator|/
literal|2
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|Qt
operator|::
name|AlignRight
case|:
name|r
operator|.
name|moveTopLeft
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
name|twf
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
name|twf
operator|->
name|tabBarSize
operator|.
name|height
argument_list|()
operator|-
name|twf
operator|->
name|rightCornerWidgetSize
operator|.
name|height
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
break|break;
block|}
block|}
break|break;
case|case
name|SE_TabWidgetTabPane
case|:
case|case
name|SE_TabWidgetTabContents
case|:
if|if
condition|(
specifier|const
name|QStyleOptionTabWidgetFrame
modifier|*
name|twf
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionTabWidgetFrame
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|QStyleOptionTab
name|tabopt
decl_stmt|;
name|tabopt
operator|.
name|shape
operator|=
name|twf
operator|->
name|shape
expr_stmt|;
name|int
name|overlap
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_TabBarBaseOverlap
argument_list|,
operator|&
name|tabopt
argument_list|,
name|widget
argument_list|)
decl_stmt|;
if|if
condition|(
name|twf
operator|->
name|lineWidth
operator|==
literal|0
condition|)
name|overlap
operator|=
literal|0
expr_stmt|;
switch|switch
condition|(
name|twf
operator|->
name|shape
condition|)
block|{
case|case
name|QTabBar
operator|::
name|RoundedNorth
case|:
case|case
name|QTabBar
operator|::
name|TriangularNorth
case|:
name|r
operator|=
name|QRect
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
name|qMax
argument_list|(
name|twf
operator|->
name|tabBarSize
operator|.
name|height
argument_list|()
operator|-
name|overlap
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|,
name|QSize
argument_list|(
name|twf
operator|->
name|rect
operator|.
name|width
argument_list|()
argument_list|,
name|qMin
argument_list|(
name|twf
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
name|twf
operator|->
name|tabBarSize
operator|.
name|height
argument_list|()
operator|+
name|overlap
argument_list|,
name|twf
operator|->
name|rect
operator|.
name|height
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QTabBar
operator|::
name|RoundedSouth
case|:
case|case
name|QTabBar
operator|::
name|TriangularSouth
case|:
name|r
operator|=
name|QRect
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|QSize
argument_list|(
name|twf
operator|->
name|rect
operator|.
name|width
argument_list|()
argument_list|,
name|qMin
argument_list|(
name|twf
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
name|twf
operator|->
name|tabBarSize
operator|.
name|height
argument_list|()
operator|+
name|overlap
argument_list|,
name|twf
operator|->
name|rect
operator|.
name|height
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QTabBar
operator|::
name|RoundedEast
case|:
case|case
name|QTabBar
operator|::
name|TriangularEast
case|:
name|r
operator|=
name|QRect
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|QSize
argument_list|(
name|qMin
argument_list|(
name|twf
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|-
name|twf
operator|->
name|tabBarSize
operator|.
name|width
argument_list|()
operator|+
name|overlap
argument_list|,
name|twf
operator|->
name|rect
operator|.
name|width
argument_list|()
argument_list|)
argument_list|,
name|twf
operator|->
name|rect
operator|.
name|height
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QTabBar
operator|::
name|RoundedWest
case|:
case|case
name|QTabBar
operator|::
name|TriangularWest
case|:
name|r
operator|=
name|QRect
argument_list|(
name|QPoint
argument_list|(
name|qMax
argument_list|(
name|twf
operator|->
name|tabBarSize
operator|.
name|width
argument_list|()
operator|-
name|overlap
argument_list|,
literal|0
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|,
name|QSize
argument_list|(
name|qMin
argument_list|(
name|twf
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|-
name|twf
operator|->
name|tabBarSize
operator|.
name|width
argument_list|()
operator|+
name|overlap
argument_list|,
name|twf
operator|->
name|rect
operator|.
name|width
argument_list|()
argument_list|)
argument_list|,
name|twf
operator|->
name|rect
operator|.
name|height
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
if|if
condition|(
name|sr
operator|==
name|SE_TabWidgetTabContents
operator|&&
name|twf
operator|->
name|lineWidth
operator|>
literal|0
condition|)
name|r
operator|.
name|adjust
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
operator|-
literal|2
argument_list|,
operator|-
literal|2
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|SE_TabWidgetLeftCorner
case|:
if|if
condition|(
specifier|const
name|QStyleOptionTabWidgetFrame
modifier|*
name|twf
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionTabWidgetFrame
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|QRect
name|paneRect
init|=
name|subElementRect
argument_list|(
name|SE_TabWidgetTabPane
argument_list|,
name|twf
argument_list|,
name|widget
argument_list|)
decl_stmt|;
switch|switch
condition|(
name|twf
operator|->
name|shape
condition|)
block|{
case|case
name|QTabBar
operator|::
name|RoundedNorth
case|:
case|case
name|QTabBar
operator|::
name|TriangularNorth
case|:
name|r
operator|=
name|QRect
argument_list|(
name|QPoint
argument_list|(
name|paneRect
operator|.
name|x
argument_list|()
argument_list|,
name|paneRect
operator|.
name|y
argument_list|()
operator|-
name|twf
operator|->
name|leftCornerWidgetSize
operator|.
name|height
argument_list|()
argument_list|)
argument_list|,
name|twf
operator|->
name|leftCornerWidgetSize
argument_list|)
expr_stmt|;
break|break;
case|case
name|QTabBar
operator|::
name|RoundedSouth
case|:
case|case
name|QTabBar
operator|::
name|TriangularSouth
case|:
name|r
operator|=
name|QRect
argument_list|(
name|QPoint
argument_list|(
name|paneRect
operator|.
name|x
argument_list|()
argument_list|,
name|paneRect
operator|.
name|height
argument_list|()
argument_list|)
argument_list|,
name|twf
operator|->
name|leftCornerWidgetSize
argument_list|)
expr_stmt|;
break|break;
default|default:
break|break;
block|}
name|r
operator|=
name|visualRect
argument_list|(
name|twf
operator|->
name|direction
argument_list|,
name|twf
operator|->
name|rect
argument_list|,
name|r
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|SE_TabWidgetRightCorner
case|:
if|if
condition|(
specifier|const
name|QStyleOptionTabWidgetFrame
modifier|*
name|twf
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionTabWidgetFrame
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|QRect
name|paneRect
init|=
name|subElementRect
argument_list|(
name|SE_TabWidgetTabPane
argument_list|,
name|twf
argument_list|,
name|widget
argument_list|)
decl_stmt|;
switch|switch
condition|(
name|twf
operator|->
name|shape
condition|)
block|{
case|case
name|QTabBar
operator|::
name|RoundedNorth
case|:
case|case
name|QTabBar
operator|::
name|TriangularNorth
case|:
name|r
operator|=
name|QRect
argument_list|(
name|QPoint
argument_list|(
name|paneRect
operator|.
name|width
argument_list|()
operator|-
name|twf
operator|->
name|rightCornerWidgetSize
operator|.
name|width
argument_list|()
argument_list|,
name|paneRect
operator|.
name|y
argument_list|()
operator|-
name|twf
operator|->
name|rightCornerWidgetSize
operator|.
name|height
argument_list|()
argument_list|)
argument_list|,
name|twf
operator|->
name|rightCornerWidgetSize
argument_list|)
expr_stmt|;
break|break;
case|case
name|QTabBar
operator|::
name|RoundedSouth
case|:
case|case
name|QTabBar
operator|::
name|TriangularSouth
case|:
name|r
operator|=
name|QRect
argument_list|(
name|QPoint
argument_list|(
name|paneRect
operator|.
name|width
argument_list|()
operator|-
name|twf
operator|->
name|rightCornerWidgetSize
operator|.
name|width
argument_list|()
argument_list|,
name|paneRect
operator|.
name|height
argument_list|()
argument_list|)
argument_list|,
name|twf
operator|->
name|rightCornerWidgetSize
argument_list|)
expr_stmt|;
break|break;
default|default:
break|break;
block|}
name|r
operator|=
name|visualRect
argument_list|(
name|twf
operator|->
name|direction
argument_list|,
name|twf
operator|->
name|rect
argument_list|,
name|r
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|SE_TabBarTabText
case|:
if|if
condition|(
specifier|const
name|QStyleOptionTab
modifier|*
name|tab
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionTab
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|QRect
name|dummyIconRect
decl_stmt|;
name|d
operator|->
name|tabLayout
argument_list|(
name|tab
argument_list|,
name|widget
argument_list|,
operator|&
name|r
argument_list|,
operator|&
name|dummyIconRect
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|SE_TabBarTabLeftButton
case|:
case|case
name|SE_TabBarTabRightButton
case|:
if|if
condition|(
specifier|const
name|QStyleOptionTab
modifier|*
name|tab
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionTab
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|bool
name|selected
init|=
name|tab
operator|->
name|state
operator|&
name|State_Selected
decl_stmt|;
name|int
name|verticalShift
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|QStyle
operator|::
name|PM_TabBarTabShiftVertical
argument_list|,
name|tab
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|int
name|horizontalShift
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|QStyle
operator|::
name|PM_TabBarTabShiftHorizontal
argument_list|,
name|tab
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|int
name|hpadding
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|QStyle
operator|::
name|PM_TabBarTabHSpace
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
operator|/
literal|2
decl_stmt|;
name|hpadding
operator|=
name|qMax
argument_list|(
name|hpadding
argument_list|,
literal|4
argument_list|)
expr_stmt|;
comment|//workaround KStyle returning 0 because they workaround an old bug in Qt
name|bool
name|verticalTabs
init|=
name|tab
operator|->
name|shape
operator|==
name|QTabBar
operator|::
name|RoundedEast
operator|||
name|tab
operator|->
name|shape
operator|==
name|QTabBar
operator|::
name|RoundedWest
operator|||
name|tab
operator|->
name|shape
operator|==
name|QTabBar
operator|::
name|TriangularEast
operator|||
name|tab
operator|->
name|shape
operator|==
name|QTabBar
operator|::
name|TriangularWest
decl_stmt|;
name|QRect
name|tr
init|=
name|tab
operator|->
name|rect
decl_stmt|;
if|if
condition|(
name|tab
operator|->
name|shape
operator|==
name|QTabBar
operator|::
name|RoundedSouth
operator|||
name|tab
operator|->
name|shape
operator|==
name|QTabBar
operator|::
name|TriangularSouth
condition|)
name|verticalShift
operator|=
operator|-
name|verticalShift
expr_stmt|;
if|if
condition|(
name|verticalTabs
condition|)
block|{
name|qSwap
argument_list|(
name|horizontalShift
argument_list|,
name|verticalShift
argument_list|)
expr_stmt|;
name|horizontalShift
operator|*=
operator|-
literal|1
expr_stmt|;
name|verticalShift
operator|*=
operator|-
literal|1
expr_stmt|;
block|}
if|if
condition|(
name|tab
operator|->
name|shape
operator|==
name|QTabBar
operator|::
name|RoundedWest
operator|||
name|tab
operator|->
name|shape
operator|==
name|QTabBar
operator|::
name|TriangularWest
condition|)
name|horizontalShift
operator|=
operator|-
name|horizontalShift
expr_stmt|;
name|tr
operator|.
name|adjust
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|horizontalShift
argument_list|,
name|verticalShift
argument_list|)
expr_stmt|;
if|if
condition|(
name|selected
condition|)
block|{
name|tr
operator|.
name|setBottom
argument_list|(
name|tr
operator|.
name|bottom
argument_list|()
operator|-
name|verticalShift
argument_list|)
expr_stmt|;
name|tr
operator|.
name|setRight
argument_list|(
name|tr
operator|.
name|right
argument_list|()
operator|-
name|horizontalShift
argument_list|)
expr_stmt|;
block|}
name|QSize
name|size
init|=
operator|(
name|sr
operator|==
name|SE_TabBarTabLeftButton
operator|)
condition|?
name|tab
operator|->
name|leftButtonSize
else|:
name|tab
operator|->
name|rightButtonSize
decl_stmt|;
name|int
name|w
init|=
name|size
operator|.
name|width
argument_list|()
decl_stmt|;
name|int
name|h
init|=
name|size
operator|.
name|height
argument_list|()
decl_stmt|;
name|int
name|midHeight
init|=
cast|static_cast
argument_list|<
name|int
argument_list|>
argument_list|(
name|qCeil
argument_list|(
name|float
argument_list|(
name|tr
operator|.
name|height
argument_list|()
operator|-
name|h
argument_list|)
operator|/
literal|2
argument_list|)
argument_list|)
decl_stmt|;
name|int
name|midWidth
init|=
operator|(
operator|(
name|tr
operator|.
name|width
argument_list|()
operator|-
name|w
operator|)
operator|/
literal|2
operator|)
decl_stmt|;
name|bool
name|atTheTop
init|=
literal|true
decl_stmt|;
switch|switch
condition|(
name|tab
operator|->
name|shape
condition|)
block|{
case|case
name|QTabBar
operator|::
name|RoundedWest
case|:
case|case
name|QTabBar
operator|::
name|TriangularWest
case|:
name|atTheTop
operator|=
operator|(
name|sr
operator|==
name|SE_TabBarTabLeftButton
operator|)
expr_stmt|;
break|break;
case|case
name|QTabBar
operator|::
name|RoundedEast
case|:
case|case
name|QTabBar
operator|::
name|TriangularEast
case|:
name|atTheTop
operator|=
operator|(
name|sr
operator|==
name|SE_TabBarTabRightButton
operator|)
expr_stmt|;
break|break;
default|default:
if|if
condition|(
name|sr
operator|==
name|SE_TabBarTabLeftButton
condition|)
name|r
operator|=
name|QRect
argument_list|(
name|tab
operator|->
name|rect
operator|.
name|x
argument_list|()
operator|+
name|hpadding
argument_list|,
name|midHeight
argument_list|,
name|w
argument_list|,
name|h
argument_list|)
expr_stmt|;
else|else
name|r
operator|=
name|QRect
argument_list|(
name|tab
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
name|w
operator|-
name|hpadding
argument_list|,
name|midHeight
argument_list|,
name|w
argument_list|,
name|h
argument_list|)
expr_stmt|;
name|r
operator|=
name|visualRect
argument_list|(
name|tab
operator|->
name|direction
argument_list|,
name|tab
operator|->
name|rect
argument_list|,
name|r
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|verticalTabs
condition|)
block|{
if|if
condition|(
name|atTheTop
condition|)
name|r
operator|=
name|QRect
argument_list|(
name|midWidth
argument_list|,
name|tr
operator|.
name|y
argument_list|()
operator|+
name|tab
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
name|hpadding
operator|-
name|h
argument_list|,
name|w
argument_list|,
name|h
argument_list|)
expr_stmt|;
else|else
name|r
operator|=
name|QRect
argument_list|(
name|midWidth
argument_list|,
name|tr
operator|.
name|y
argument_list|()
operator|+
name|hpadding
argument_list|,
name|w
argument_list|,
name|h
argument_list|)
expr_stmt|;
block|}
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_TABWIDGET
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
case|case
name|SE_TabBarTearIndicator
case|:
if|if
condition|(
specifier|const
name|QStyleOptionTab
modifier|*
name|tab
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionTab
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
switch|switch
condition|(
name|tab
operator|->
name|shape
condition|)
block|{
case|case
name|QTabBar
operator|::
name|RoundedNorth
case|:
case|case
name|QTabBar
operator|::
name|TriangularNorth
case|:
case|case
name|QTabBar
operator|::
name|RoundedSouth
case|:
case|case
name|QTabBar
operator|::
name|TriangularSouth
case|:
name|r
operator|.
name|setRect
argument_list|(
name|tab
operator|->
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|tab
operator|->
name|rect
operator|.
name|top
argument_list|()
argument_list|,
literal|4
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|QTabBar
operator|::
name|RoundedWest
case|:
case|case
name|QTabBar
operator|::
name|TriangularWest
case|:
case|case
name|QTabBar
operator|::
name|RoundedEast
case|:
case|case
name|QTabBar
operator|::
name|TriangularEast
case|:
name|r
operator|.
name|setRect
argument_list|(
name|tab
operator|->
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|tab
operator|->
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|width
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
break|break;
default|default:
break|break;
block|}
name|r
operator|=
name|visualRect
argument_list|(
name|opt
operator|->
name|direction
argument_list|,
name|opt
operator|->
name|rect
argument_list|,
name|r
argument_list|)
expr_stmt|;
block|}
break|break;
endif|#
directive|endif
case|case
name|SE_TreeViewDisclosureItem
case|:
name|r
operator|=
name|opt
operator|->
name|rect
expr_stmt|;
break|break;
case|case
name|SE_LineEditContents
case|:
if|if
condition|(
specifier|const
name|QStyleOptionFrame
modifier|*
name|f
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionFrame
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|r
operator|=
name|f
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
name|f
operator|->
name|lineWidth
argument_list|,
name|f
operator|->
name|lineWidth
argument_list|,
operator|-
name|f
operator|->
name|lineWidth
argument_list|,
operator|-
name|f
operator|->
name|lineWidth
argument_list|)
expr_stmt|;
name|r
operator|=
name|visualRect
argument_list|(
name|opt
operator|->
name|direction
argument_list|,
name|opt
operator|->
name|rect
argument_list|,
name|r
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|SE_FrameContents
case|:
if|if
condition|(
specifier|const
name|QStyleOptionFrame
modifier|*
name|f
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionFrame
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|int
name|fw
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_DefaultFrameWidth
argument_list|,
name|f
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|r
operator|=
name|opt
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
name|fw
argument_list|,
name|fw
argument_list|,
operator|-
name|fw
argument_list|,
operator|-
name|fw
argument_list|)
expr_stmt|;
name|r
operator|=
name|visualRect
argument_list|(
name|opt
operator|->
name|direction
argument_list|,
name|opt
operator|->
name|rect
argument_list|,
name|r
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|SE_ShapedFrameContents
case|:
if|if
condition|(
specifier|const
name|QStyleOptionFrame
modifier|*
name|f
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionFrame
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|int
name|frameShape
init|=
name|f
operator|->
name|frameShape
decl_stmt|;
name|int
name|frameShadow
init|=
name|QFrame
operator|::
name|Plain
decl_stmt|;
if|if
condition|(
name|f
operator|->
name|state
operator|&
name|QStyle
operator|::
name|State_Sunken
condition|)
block|{
name|frameShadow
operator|=
name|QFrame
operator|::
name|Sunken
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|f
operator|->
name|state
operator|&
name|QStyle
operator|::
name|State_Raised
condition|)
block|{
name|frameShadow
operator|=
name|QFrame
operator|::
name|Raised
expr_stmt|;
block|}
name|int
name|frameWidth
init|=
literal|0
decl_stmt|;
switch|switch
condition|(
name|frameShape
condition|)
block|{
case|case
name|QFrame
operator|::
name|NoFrame
case|:
name|frameWidth
operator|=
literal|0
expr_stmt|;
break|break;
case|case
name|QFrame
operator|::
name|Box
case|:
case|case
name|QFrame
operator|::
name|HLine
case|:
case|case
name|QFrame
operator|::
name|VLine
case|:
switch|switch
condition|(
name|frameShadow
condition|)
block|{
case|case
name|QFrame
operator|::
name|Plain
case|:
name|frameWidth
operator|=
name|f
operator|->
name|lineWidth
expr_stmt|;
break|break;
case|case
name|QFrame
operator|::
name|Raised
case|:
case|case
name|QFrame
operator|::
name|Sunken
case|:
name|frameWidth
operator|=
call|(
name|short
call|)
argument_list|(
name|f
operator|->
name|lineWidth
operator|*
literal|2
operator|+
name|f
operator|->
name|midLineWidth
argument_list|)
expr_stmt|;
break|break;
block|}
break|break;
case|case
name|QFrame
operator|::
name|StyledPanel
case|:
comment|//keep the compatibility with Qt 4.4 if there is a proxy style.
comment|//be sure to call drawPrimitive(QStyle::SE_FrameContents) on the proxy style
if|if
condition|(
name|widget
condition|)
return|return
name|widget
operator|->
name|style
argument_list|()
operator|->
name|subElementRect
argument_list|(
name|QStyle
operator|::
name|SE_FrameContents
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
return|;
else|else
return|return
name|subElementRect
argument_list|(
name|QStyle
operator|::
name|SE_FrameContents
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
return|;
case|case
name|QFrame
operator|::
name|WinPanel
case|:
name|frameWidth
operator|=
literal|2
expr_stmt|;
break|break;
case|case
name|QFrame
operator|::
name|Panel
case|:
switch|switch
condition|(
name|frameShadow
condition|)
block|{
case|case
name|QFrame
operator|::
name|Plain
case|:
case|case
name|QFrame
operator|::
name|Raised
case|:
case|case
name|QFrame
operator|::
name|Sunken
case|:
name|frameWidth
operator|=
name|f
operator|->
name|lineWidth
expr_stmt|;
break|break;
block|}
break|break;
block|}
name|r
operator|=
name|f
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
name|frameWidth
argument_list|,
name|frameWidth
argument_list|,
operator|-
name|frameWidth
argument_list|,
operator|-
name|frameWidth
argument_list|)
expr_stmt|;
block|}
break|break;
ifndef|#
directive|ifndef
name|QT_NO_DOCKWIDGET
case|case
name|SE_DockWidgetCloseButton
case|:
case|case
name|SE_DockWidgetFloatButton
case|:
case|case
name|SE_DockWidgetTitleBarText
case|:
case|case
name|SE_DockWidgetIcon
case|:
block|{
name|int
name|iconSize
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_SmallIconSize
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|int
name|buttonMargin
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_DockWidgetTitleBarButtonMargin
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|int
name|margin
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|QStyle
operator|::
name|PM_DockWidgetTitleMargin
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|QRect
name|rect
init|=
name|opt
operator|->
name|rect
decl_stmt|;
specifier|const
name|QStyleOptionDockWidget
modifier|*
name|dwOpt
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionDockWidget
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
decl_stmt|;
name|bool
name|canClose
init|=
name|dwOpt
operator|==
literal|0
condition|?
literal|true
else|:
name|dwOpt
operator|->
name|closable
decl_stmt|;
name|bool
name|canFloat
init|=
name|dwOpt
operator|==
literal|0
condition|?
literal|false
else|:
name|dwOpt
operator|->
name|floatable
decl_stmt|;
specifier|const
name|bool
name|verticalTitleBar
init|=
name|dwOpt
operator|&&
name|dwOpt
operator|->
name|verticalTitleBar
decl_stmt|;
comment|// If this is a vertical titlebar, we transpose and work as if it was
comment|// horizontal, then transpose again.
if|if
condition|(
name|verticalTitleBar
condition|)
name|rect
operator|.
name|setSize
argument_list|(
name|rect
operator|.
name|size
argument_list|()
operator|.
name|transposed
argument_list|()
argument_list|)
expr_stmt|;
do|do
block|{
name|int
name|right
init|=
name|rect
operator|.
name|right
argument_list|()
decl_stmt|;
name|int
name|left
init|=
name|rect
operator|.
name|left
argument_list|()
decl_stmt|;
name|QRect
name|closeRect
decl_stmt|;
if|if
condition|(
name|canClose
condition|)
block|{
name|QSize
name|sz
init|=
name|proxy
argument_list|()
operator|->
name|standardIcon
argument_list|(
name|QStyle
operator|::
name|SP_TitleBarCloseButton
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
operator|.
name|actualSize
argument_list|(
name|QSize
argument_list|(
name|iconSize
argument_list|,
name|iconSize
argument_list|)
argument_list|)
decl_stmt|;
name|sz
operator|+=
name|QSize
argument_list|(
name|buttonMargin
argument_list|,
name|buttonMargin
argument_list|)
expr_stmt|;
if|if
condition|(
name|verticalTitleBar
condition|)
name|sz
operator|=
name|sz
operator|.
name|transposed
argument_list|()
expr_stmt|;
name|closeRect
operator|=
name|QRect
argument_list|(
name|right
operator|-
name|sz
operator|.
name|width
argument_list|()
argument_list|,
name|rect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|-
name|sz
operator|.
name|height
argument_list|()
operator|/
literal|2
argument_list|,
name|sz
operator|.
name|width
argument_list|()
argument_list|,
name|sz
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
name|right
operator|=
name|closeRect
operator|.
name|left
argument_list|()
operator|-
literal|1
expr_stmt|;
block|}
if|if
condition|(
name|sr
operator|==
name|SE_DockWidgetCloseButton
condition|)
block|{
name|r
operator|=
name|closeRect
expr_stmt|;
break|break;
block|}
name|QRect
name|floatRect
decl_stmt|;
if|if
condition|(
name|canFloat
condition|)
block|{
name|QSize
name|sz
init|=
name|proxy
argument_list|()
operator|->
name|standardIcon
argument_list|(
name|QStyle
operator|::
name|SP_TitleBarNormalButton
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
operator|.
name|actualSize
argument_list|(
name|QSize
argument_list|(
name|iconSize
argument_list|,
name|iconSize
argument_list|)
argument_list|)
decl_stmt|;
name|sz
operator|+=
name|QSize
argument_list|(
name|buttonMargin
argument_list|,
name|buttonMargin
argument_list|)
expr_stmt|;
if|if
condition|(
name|verticalTitleBar
condition|)
name|sz
operator|=
name|sz
operator|.
name|transposed
argument_list|()
expr_stmt|;
name|floatRect
operator|=
name|QRect
argument_list|(
name|right
operator|-
name|sz
operator|.
name|width
argument_list|()
argument_list|,
name|rect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|-
name|sz
operator|.
name|height
argument_list|()
operator|/
literal|2
argument_list|,
name|sz
operator|.
name|width
argument_list|()
argument_list|,
name|sz
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
name|right
operator|=
name|floatRect
operator|.
name|left
argument_list|()
operator|-
literal|1
expr_stmt|;
block|}
if|if
condition|(
name|sr
operator|==
name|SE_DockWidgetFloatButton
condition|)
block|{
name|r
operator|=
name|floatRect
expr_stmt|;
break|break;
block|}
name|QRect
name|iconRect
decl_stmt|;
if|if
condition|(
specifier|const
name|QDockWidget
modifier|*
name|dw
init|=
name|qobject_cast
argument_list|<
specifier|const
name|QDockWidget
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
condition|)
block|{
name|QIcon
name|icon
decl_stmt|;
if|if
condition|(
name|dw
operator|->
name|isFloating
argument_list|()
condition|)
name|icon
operator|=
name|dw
operator|->
name|windowIcon
argument_list|()
expr_stmt|;
if|if
condition|(
operator|!
name|icon
operator|.
name|isNull
argument_list|()
operator|&&
name|icon
operator|.
name|cacheKey
argument_list|()
operator|!=
name|QApplication
operator|::
name|windowIcon
argument_list|()
operator|.
name|cacheKey
argument_list|()
condition|)
block|{
name|QSize
name|sz
init|=
name|icon
operator|.
name|actualSize
argument_list|(
name|QSize
argument_list|(
name|r
operator|.
name|height
argument_list|()
argument_list|,
name|r
operator|.
name|height
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|verticalTitleBar
condition|)
name|sz
operator|=
name|sz
operator|.
name|transposed
argument_list|()
expr_stmt|;
name|iconRect
operator|=
name|QRect
argument_list|(
name|left
argument_list|,
name|rect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|-
name|sz
operator|.
name|height
argument_list|()
operator|/
literal|2
argument_list|,
name|sz
operator|.
name|width
argument_list|()
argument_list|,
name|sz
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
name|left
operator|=
name|iconRect
operator|.
name|right
argument_list|()
operator|+
name|margin
expr_stmt|;
block|}
block|}
if|if
condition|(
name|sr
operator|==
name|SE_DockWidgetIcon
condition|)
block|{
name|r
operator|=
name|iconRect
expr_stmt|;
break|break;
block|}
name|QRect
name|textRect
init|=
name|QRect
argument_list|(
name|left
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|right
operator|-
name|left
argument_list|,
name|rect
operator|.
name|height
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|sr
operator|==
name|SE_DockWidgetTitleBarText
condition|)
block|{
name|r
operator|=
name|textRect
expr_stmt|;
break|break;
block|}
block|}
do|while
condition|(
literal|false
condition|)
do|;
if|if
condition|(
name|verticalTitleBar
condition|)
block|{
name|r
operator|=
name|QRect
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
name|r
operator|.
name|top
argument_list|()
operator|-
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
name|rect
operator|.
name|right
argument_list|()
operator|-
name|r
operator|.
name|right
argument_list|()
argument_list|,
name|r
operator|.
name|height
argument_list|()
argument_list|,
name|r
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|r
operator|=
name|visualRect
argument_list|(
name|opt
operator|->
name|direction
argument_list|,
name|rect
argument_list|,
name|r
argument_list|)
expr_stmt|;
block|}
break|break;
block|}
endif|#
directive|endif
ifndef|#
directive|ifndef
name|QT_NO_ITEMVIEWS
case|case
name|SE_ItemViewItemCheckIndicator
case|:
if|if
condition|(
operator|!
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionViewItem
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|r
operator|=
name|subElementRect
argument_list|(
name|SE_CheckBoxIndicator
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|SE_ItemViewItemDecoration
case|:
case|case
name|SE_ItemViewItemText
case|:
case|case
name|SE_ItemViewItemFocusRect
case|:
if|if
condition|(
specifier|const
name|QStyleOptionViewItem
modifier|*
name|vopt
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionViewItem
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
if|if
condition|(
operator|!
name|d
operator|->
name|isViewItemCached
argument_list|(
operator|*
name|vopt
argument_list|)
condition|)
block|{
name|d
operator|->
name|viewItemLayout
argument_list|(
name|vopt
argument_list|,
operator|&
name|d
operator|->
name|checkRect
argument_list|,
operator|&
name|d
operator|->
name|decorationRect
argument_list|,
operator|&
name|d
operator|->
name|displayRect
argument_list|,
literal|false
argument_list|)
expr_stmt|;
if|if
condition|(
name|d
operator|->
name|cachedOption
condition|)
block|{
operator|delete
name|d
operator|->
name|cachedOption
expr_stmt|;
name|d
operator|->
name|cachedOption
operator|=
literal|0
expr_stmt|;
block|}
name|d
operator|->
name|cachedOption
operator|=
operator|new
name|QStyleOptionViewItem
argument_list|(
operator|*
name|vopt
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|sr
operator|==
name|SE_ViewItemCheckIndicator
condition|)
name|r
operator|=
name|d
operator|->
name|checkRect
expr_stmt|;
elseif|else
if|if
condition|(
name|sr
operator|==
name|SE_ItemViewItemDecoration
condition|)
name|r
operator|=
name|d
operator|->
name|decorationRect
expr_stmt|;
elseif|else
if|if
condition|(
name|sr
operator|==
name|SE_ItemViewItemText
operator|||
name|sr
operator|==
name|SE_ItemViewItemFocusRect
condition|)
name|r
operator|=
name|d
operator|->
name|displayRect
expr_stmt|;
block|}
break|break;
endif|#
directive|endif
comment|//QT_NO_ITEMVIEWS
ifndef|#
directive|ifndef
name|QT_NO_TOOLBAR
case|case
name|SE_ToolBarHandle
case|:
if|if
condition|(
specifier|const
name|QStyleOptionToolBar
modifier|*
name|tbopt
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionToolBar
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
if|if
condition|(
name|tbopt
operator|->
name|features
operator|&
name|QStyleOptionToolBar
operator|::
name|Movable
condition|)
block|{
comment|///we need to access the widget here because the style option doesn't
comment|//have all the information we need (ie. the layout's margin)
specifier|const
name|QToolBar
modifier|*
name|tb
init|=
name|qobject_cast
argument_list|<
specifier|const
name|QToolBar
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
decl_stmt|;
specifier|const
name|int
name|margin
init|=
name|tb
operator|&&
name|tb
operator|->
name|layout
argument_list|()
condition|?
name|tb
operator|->
name|layout
argument_list|()
operator|->
name|margin
argument_list|()
else|:
literal|2
decl_stmt|;
specifier|const
name|int
name|handleExtent
init|=
name|pixelMetric
argument_list|(
name|QStyle
operator|::
name|PM_ToolBarHandleExtent
argument_list|,
name|opt
argument_list|,
name|tb
argument_list|)
decl_stmt|;
if|if
condition|(
name|tbopt
operator|->
name|state
operator|&
name|QStyle
operator|::
name|State_Horizontal
condition|)
block|{
name|r
operator|=
name|QRect
argument_list|(
name|margin
argument_list|,
name|margin
argument_list|,
name|handleExtent
argument_list|,
name|tbopt
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
literal|2
operator|*
name|margin
argument_list|)
expr_stmt|;
name|r
operator|=
name|QStyle
operator|::
name|visualRect
argument_list|(
name|tbopt
operator|->
name|direction
argument_list|,
name|tbopt
operator|->
name|rect
argument_list|,
name|r
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|r
operator|=
name|QRect
argument_list|(
name|margin
argument_list|,
name|margin
argument_list|,
name|tbopt
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|-
literal|2
operator|*
name|margin
argument_list|,
name|handleExtent
argument_list|)
expr_stmt|;
block|}
block|}
block|}
break|break;
endif|#
directive|endif
comment|//QT_NO_TOOLBAR
default|default:
break|break;
block|}
return|return
name|r
return|;
block|}
end_function
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_DIAL
end_ifndef
begin_comment
comment|// in lieu of std::array, minimal API
end_comment
begin_struct
template|template
parameter_list|<
name|int
name|N
parameter_list|>
struct|struct
DECL|struct|StaticPolygonF
name|StaticPolygonF
block|{
DECL|member|data
name|QPointF
name|data
index|[
name|N
index|]
decl_stmt|;
DECL|function|size
name|Q_DECL_CONSTEXPR
name|int
name|size
parameter_list|()
specifier|const
block|{
return|return
name|N
return|;
block|}
DECL|function|cbegin
name|Q_DECL_CONSTEXPR
specifier|const
name|QPointF
modifier|*
name|cbegin
parameter_list|()
specifier|const
block|{
return|return
name|data
return|;
block|}
DECL|function|operator []
name|Q_DECL_CONSTEXPR
specifier|const
name|QPointF
modifier|&
name|operator
name|[]
parameter_list|(
name|int
name|idx
parameter_list|)
specifier|const
block|{
return|return
name|data
index|[
name|idx
index|]
return|;
block|}
block|}
struct|;
end_struct
begin_function
DECL|function|calcArrow
specifier|static
name|StaticPolygonF
argument_list|<
literal|3
argument_list|>
name|calcArrow
parameter_list|(
specifier|const
name|QStyleOptionSlider
modifier|*
name|dial
parameter_list|,
name|qreal
modifier|&
name|a
parameter_list|)
block|{
name|int
name|width
init|=
name|dial
operator|->
name|rect
operator|.
name|width
argument_list|()
decl_stmt|;
name|int
name|height
init|=
name|dial
operator|->
name|rect
operator|.
name|height
argument_list|()
decl_stmt|;
name|int
name|r
init|=
name|qMin
argument_list|(
name|width
argument_list|,
name|height
argument_list|)
operator|/
literal|2
decl_stmt|;
name|int
name|currentSliderPosition
init|=
name|dial
operator|->
name|upsideDown
condition|?
name|dial
operator|->
name|sliderPosition
else|:
operator|(
name|dial
operator|->
name|maximum
operator|-
name|dial
operator|->
name|sliderPosition
operator|)
decl_stmt|;
if|if
condition|(
name|dial
operator|->
name|maximum
operator|==
name|dial
operator|->
name|minimum
condition|)
name|a
operator|=
name|Q_PI
operator|/
literal|2
expr_stmt|;
elseif|else
if|if
condition|(
name|dial
operator|->
name|dialWrapping
condition|)
name|a
operator|=
name|Q_PI
operator|*
literal|3
operator|/
literal|2
operator|-
operator|(
name|currentSliderPosition
operator|-
name|dial
operator|->
name|minimum
operator|)
operator|*
literal|2
operator|*
name|Q_PI
operator|/
operator|(
name|dial
operator|->
name|maximum
operator|-
name|dial
operator|->
name|minimum
operator|)
expr_stmt|;
else|else
name|a
operator|=
operator|(
name|Q_PI
operator|*
literal|8
operator|-
operator|(
name|currentSliderPosition
operator|-
name|dial
operator|->
name|minimum
operator|)
operator|*
literal|10
operator|*
name|Q_PI
operator|/
operator|(
name|dial
operator|->
name|maximum
operator|-
name|dial
operator|->
name|minimum
operator|)
operator|)
operator|/
literal|6
expr_stmt|;
name|int
name|xc
init|=
name|width
operator|/
literal|2
decl_stmt|;
name|int
name|yc
init|=
name|height
operator|/
literal|2
decl_stmt|;
name|int
name|len
init|=
name|r
operator|-
name|QStyleHelper
operator|::
name|calcBigLineSize
argument_list|(
name|r
argument_list|)
operator|-
literal|5
decl_stmt|;
if|if
condition|(
name|len
operator|<
literal|5
condition|)
name|len
operator|=
literal|5
expr_stmt|;
name|int
name|back
init|=
name|len
operator|/
literal|2
decl_stmt|;
name|StaticPolygonF
argument_list|<
literal|3
argument_list|>
name|arrow
init|=
block|{
block|{
name|QPointF
argument_list|(
literal|0.5
operator|+
name|xc
operator|+
name|len
operator|*
name|qCos
argument_list|(
name|a
argument_list|)
argument_list|,
literal|0.5
operator|+
name|yc
operator|-
name|len
operator|*
name|qSin
argument_list|(
name|a
argument_list|)
argument_list|)
block|,
name|QPointF
argument_list|(
literal|0.5
operator|+
name|xc
operator|+
name|back
operator|*
name|qCos
argument_list|(
name|a
operator|+
name|Q_PI
operator|*
literal|5
operator|/
literal|6
argument_list|)
argument_list|,
literal|0.5
operator|+
name|yc
operator|-
name|back
operator|*
name|qSin
argument_list|(
name|a
operator|+
name|Q_PI
operator|*
literal|5
operator|/
literal|6
argument_list|)
argument_list|)
block|,
name|QPointF
argument_list|(
literal|0.5
operator|+
name|xc
operator|+
name|back
operator|*
name|qCos
argument_list|(
name|a
operator|-
name|Q_PI
operator|*
literal|5
operator|/
literal|6
argument_list|)
argument_list|,
literal|0.5
operator|+
name|yc
operator|-
name|back
operator|*
name|qSin
argument_list|(
name|a
operator|-
name|Q_PI
operator|*
literal|5
operator|/
literal|6
argument_list|)
argument_list|)
block|,     }
block|}
decl_stmt|;
return|return
name|arrow
return|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_DIAL
end_comment
begin_comment
comment|/*!   \reimp */
end_comment
begin_function
DECL|function|drawComplexControl
name|void
name|QCommonStyle
operator|::
name|drawComplexControl
parameter_list|(
name|ComplexControl
name|cc
parameter_list|,
specifier|const
name|QStyleOptionComplex
modifier|*
name|opt
parameter_list|,
name|QPainter
modifier|*
name|p
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
switch|switch
condition|(
name|cc
condition|)
block|{
ifndef|#
directive|ifndef
name|QT_NO_SLIDER
case|case
name|CC_Slider
case|:
if|if
condition|(
specifier|const
name|QStyleOptionSlider
modifier|*
name|slider
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSlider
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
if|if
condition|(
name|slider
operator|->
name|subControls
operator|==
name|SC_SliderTickmarks
condition|)
block|{
name|int
name|tickOffset
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_SliderTickmarkOffset
argument_list|,
name|slider
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|int
name|ticks
init|=
name|slider
operator|->
name|tickPosition
decl_stmt|;
name|int
name|thickness
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_SliderControlThickness
argument_list|,
name|slider
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|int
name|len
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_SliderLength
argument_list|,
name|slider
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|int
name|available
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_SliderSpaceAvailable
argument_list|,
name|slider
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|int
name|interval
init|=
name|slider
operator|->
name|tickInterval
decl_stmt|;
if|if
condition|(
name|interval
operator|<=
literal|0
condition|)
block|{
name|interval
operator|=
name|slider
operator|->
name|singleStep
expr_stmt|;
if|if
condition|(
name|QStyle
operator|::
name|sliderPositionFromValue
argument_list|(
name|slider
operator|->
name|minimum
argument_list|,
name|slider
operator|->
name|maximum
argument_list|,
name|interval
argument_list|,
name|available
argument_list|)
operator|-
name|QStyle
operator|::
name|sliderPositionFromValue
argument_list|(
name|slider
operator|->
name|minimum
argument_list|,
name|slider
operator|->
name|maximum
argument_list|,
literal|0
argument_list|,
name|available
argument_list|)
operator|<
literal|3
condition|)
name|interval
operator|=
name|slider
operator|->
name|pageStep
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|interval
condition|)
name|interval
operator|=
literal|1
expr_stmt|;
name|int
name|fudge
init|=
name|len
operator|/
literal|2
decl_stmt|;
name|int
name|pos
decl_stmt|;
comment|// Since there is no subrect for tickmarks do a translation here.
name|p
operator|->
name|save
argument_list|()
expr_stmt|;
name|p
operator|->
name|translate
argument_list|(
name|slider
operator|->
name|rect
operator|.
name|x
argument_list|()
argument_list|,
name|slider
operator|->
name|rect
operator|.
name|y
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|slider
operator|->
name|palette
operator|.
name|foreground
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|int
name|v
init|=
name|slider
operator|->
name|minimum
decl_stmt|;
while|while
condition|(
name|v
operator|<=
name|slider
operator|->
name|maximum
operator|+
literal|1
condition|)
block|{
if|if
condition|(
name|v
operator|==
name|slider
operator|->
name|maximum
operator|+
literal|1
operator|&&
name|interval
operator|==
literal|1
condition|)
break|break;
specifier|const
name|int
name|v_
init|=
name|qMin
argument_list|(
name|v
argument_list|,
name|slider
operator|->
name|maximum
argument_list|)
decl_stmt|;
name|pos
operator|=
name|QStyle
operator|::
name|sliderPositionFromValue
argument_list|(
name|slider
operator|->
name|minimum
argument_list|,
name|slider
operator|->
name|maximum
argument_list|,
name|v_
argument_list|,
name|available
argument_list|)
operator|+
name|fudge
expr_stmt|;
if|if
condition|(
name|slider
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
block|{
if|if
condition|(
name|ticks
operator|&
name|QSlider
operator|::
name|TicksAbove
condition|)
name|p
operator|->
name|drawLine
argument_list|(
name|pos
argument_list|,
literal|0
argument_list|,
name|pos
argument_list|,
name|tickOffset
operator|-
literal|2
argument_list|)
expr_stmt|;
if|if
condition|(
name|ticks
operator|&
name|QSlider
operator|::
name|TicksBelow
condition|)
name|p
operator|->
name|drawLine
argument_list|(
name|pos
argument_list|,
name|tickOffset
operator|+
name|thickness
operator|+
literal|1
argument_list|,
name|pos
argument_list|,
name|slider
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|ticks
operator|&
name|QSlider
operator|::
name|TicksAbove
condition|)
name|p
operator|->
name|drawLine
argument_list|(
literal|0
argument_list|,
name|pos
argument_list|,
name|tickOffset
operator|-
literal|2
argument_list|,
name|pos
argument_list|)
expr_stmt|;
if|if
condition|(
name|ticks
operator|&
name|QSlider
operator|::
name|TicksBelow
condition|)
name|p
operator|->
name|drawLine
argument_list|(
name|tickOffset
operator|+
name|thickness
operator|+
literal|1
argument_list|,
name|pos
argument_list|,
name|slider
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|-
literal|1
argument_list|,
name|pos
argument_list|)
expr_stmt|;
block|}
comment|// in the case where maximum is max int
name|int
name|nextInterval
init|=
name|v
operator|+
name|interval
decl_stmt|;
if|if
condition|(
name|nextInterval
operator|<
name|v
condition|)
break|break;
name|v
operator|=
name|nextInterval
expr_stmt|;
block|}
name|p
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_SLIDER
ifndef|#
directive|ifndef
name|QT_NO_SCROLLBAR
case|case
name|CC_ScrollBar
case|:
if|if
condition|(
specifier|const
name|QStyleOptionSlider
modifier|*
name|scrollbar
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSlider
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
comment|// Make a copy here and reset it for each primitive.
name|QStyleOptionSlider
name|newScrollbar
init|=
operator|*
name|scrollbar
decl_stmt|;
name|State
name|saveFlags
init|=
name|scrollbar
operator|->
name|state
decl_stmt|;
if|if
condition|(
name|scrollbar
operator|->
name|subControls
operator|&
name|SC_ScrollBarSubLine
condition|)
block|{
name|newScrollbar
operator|.
name|state
operator|=
name|saveFlags
expr_stmt|;
name|newScrollbar
operator|.
name|rect
operator|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|cc
argument_list|,
operator|&
name|newScrollbar
argument_list|,
name|SC_ScrollBarSubLine
argument_list|,
name|widget
argument_list|)
expr_stmt|;
if|if
condition|(
name|newScrollbar
operator|.
name|rect
operator|.
name|isValid
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
operator|(
name|scrollbar
operator|->
name|activeSubControls
operator|&
name|SC_ScrollBarSubLine
operator|)
condition|)
name|newScrollbar
operator|.
name|state
operator|&=
operator|~
operator|(
name|State_Sunken
operator||
name|State_MouseOver
operator|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawControl
argument_list|(
name|CE_ScrollBarSubLine
argument_list|,
operator|&
name|newScrollbar
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|scrollbar
operator|->
name|subControls
operator|&
name|SC_ScrollBarAddLine
condition|)
block|{
name|newScrollbar
operator|.
name|rect
operator|=
name|scrollbar
operator|->
name|rect
expr_stmt|;
name|newScrollbar
operator|.
name|state
operator|=
name|saveFlags
expr_stmt|;
name|newScrollbar
operator|.
name|rect
operator|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|cc
argument_list|,
operator|&
name|newScrollbar
argument_list|,
name|SC_ScrollBarAddLine
argument_list|,
name|widget
argument_list|)
expr_stmt|;
if|if
condition|(
name|newScrollbar
operator|.
name|rect
operator|.
name|isValid
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
operator|(
name|scrollbar
operator|->
name|activeSubControls
operator|&
name|SC_ScrollBarAddLine
operator|)
condition|)
name|newScrollbar
operator|.
name|state
operator|&=
operator|~
operator|(
name|State_Sunken
operator||
name|State_MouseOver
operator|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawControl
argument_list|(
name|CE_ScrollBarAddLine
argument_list|,
operator|&
name|newScrollbar
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|scrollbar
operator|->
name|subControls
operator|&
name|SC_ScrollBarSubPage
condition|)
block|{
name|newScrollbar
operator|.
name|rect
operator|=
name|scrollbar
operator|->
name|rect
expr_stmt|;
name|newScrollbar
operator|.
name|state
operator|=
name|saveFlags
expr_stmt|;
name|newScrollbar
operator|.
name|rect
operator|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|cc
argument_list|,
operator|&
name|newScrollbar
argument_list|,
name|SC_ScrollBarSubPage
argument_list|,
name|widget
argument_list|)
expr_stmt|;
if|if
condition|(
name|newScrollbar
operator|.
name|rect
operator|.
name|isValid
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
operator|(
name|scrollbar
operator|->
name|activeSubControls
operator|&
name|SC_ScrollBarSubPage
operator|)
condition|)
name|newScrollbar
operator|.
name|state
operator|&=
operator|~
operator|(
name|State_Sunken
operator||
name|State_MouseOver
operator|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawControl
argument_list|(
name|CE_ScrollBarSubPage
argument_list|,
operator|&
name|newScrollbar
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|scrollbar
operator|->
name|subControls
operator|&
name|SC_ScrollBarAddPage
condition|)
block|{
name|newScrollbar
operator|.
name|rect
operator|=
name|scrollbar
operator|->
name|rect
expr_stmt|;
name|newScrollbar
operator|.
name|state
operator|=
name|saveFlags
expr_stmt|;
name|newScrollbar
operator|.
name|rect
operator|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|cc
argument_list|,
operator|&
name|newScrollbar
argument_list|,
name|SC_ScrollBarAddPage
argument_list|,
name|widget
argument_list|)
expr_stmt|;
if|if
condition|(
name|newScrollbar
operator|.
name|rect
operator|.
name|isValid
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
operator|(
name|scrollbar
operator|->
name|activeSubControls
operator|&
name|SC_ScrollBarAddPage
operator|)
condition|)
name|newScrollbar
operator|.
name|state
operator|&=
operator|~
operator|(
name|State_Sunken
operator||
name|State_MouseOver
operator|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawControl
argument_list|(
name|CE_ScrollBarAddPage
argument_list|,
operator|&
name|newScrollbar
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|scrollbar
operator|->
name|subControls
operator|&
name|SC_ScrollBarFirst
condition|)
block|{
name|newScrollbar
operator|.
name|rect
operator|=
name|scrollbar
operator|->
name|rect
expr_stmt|;
name|newScrollbar
operator|.
name|state
operator|=
name|saveFlags
expr_stmt|;
name|newScrollbar
operator|.
name|rect
operator|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|cc
argument_list|,
operator|&
name|newScrollbar
argument_list|,
name|SC_ScrollBarFirst
argument_list|,
name|widget
argument_list|)
expr_stmt|;
if|if
condition|(
name|newScrollbar
operator|.
name|rect
operator|.
name|isValid
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
operator|(
name|scrollbar
operator|->
name|activeSubControls
operator|&
name|SC_ScrollBarFirst
operator|)
condition|)
name|newScrollbar
operator|.
name|state
operator|&=
operator|~
operator|(
name|State_Sunken
operator||
name|State_MouseOver
operator|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawControl
argument_list|(
name|CE_ScrollBarFirst
argument_list|,
operator|&
name|newScrollbar
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|scrollbar
operator|->
name|subControls
operator|&
name|SC_ScrollBarLast
condition|)
block|{
name|newScrollbar
operator|.
name|rect
operator|=
name|scrollbar
operator|->
name|rect
expr_stmt|;
name|newScrollbar
operator|.
name|state
operator|=
name|saveFlags
expr_stmt|;
name|newScrollbar
operator|.
name|rect
operator|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|cc
argument_list|,
operator|&
name|newScrollbar
argument_list|,
name|SC_ScrollBarLast
argument_list|,
name|widget
argument_list|)
expr_stmt|;
if|if
condition|(
name|newScrollbar
operator|.
name|rect
operator|.
name|isValid
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
operator|(
name|scrollbar
operator|->
name|activeSubControls
operator|&
name|SC_ScrollBarLast
operator|)
condition|)
name|newScrollbar
operator|.
name|state
operator|&=
operator|~
operator|(
name|State_Sunken
operator||
name|State_MouseOver
operator|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawControl
argument_list|(
name|CE_ScrollBarLast
argument_list|,
operator|&
name|newScrollbar
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|scrollbar
operator|->
name|subControls
operator|&
name|SC_ScrollBarSlider
condition|)
block|{
name|newScrollbar
operator|.
name|rect
operator|=
name|scrollbar
operator|->
name|rect
expr_stmt|;
name|newScrollbar
operator|.
name|state
operator|=
name|saveFlags
expr_stmt|;
name|newScrollbar
operator|.
name|rect
operator|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|cc
argument_list|,
operator|&
name|newScrollbar
argument_list|,
name|SC_ScrollBarSlider
argument_list|,
name|widget
argument_list|)
expr_stmt|;
if|if
condition|(
name|newScrollbar
operator|.
name|rect
operator|.
name|isValid
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
operator|(
name|scrollbar
operator|->
name|activeSubControls
operator|&
name|SC_ScrollBarSlider
operator|)
condition|)
name|newScrollbar
operator|.
name|state
operator|&=
operator|~
operator|(
name|State_Sunken
operator||
name|State_MouseOver
operator|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawControl
argument_list|(
name|CE_ScrollBarSlider
argument_list|,
operator|&
name|newScrollbar
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
if|if
condition|(
name|scrollbar
operator|->
name|state
operator|&
name|State_HasFocus
condition|)
block|{
name|QStyleOptionFocusRect
name|fropt
decl_stmt|;
name|fropt
operator|.
name|QStyleOption
operator|::
name|operator
name|=
parameter_list|(
name|newScrollbar
parameter_list|)
function_decl|;
name|fropt
operator|.
name|rect
operator|.
name|setRect
argument_list|(
name|newScrollbar
operator|.
name|rect
operator|.
name|x
argument_list|()
operator|+
literal|2
argument_list|,
name|newScrollbar
operator|.
name|rect
operator|.
name|y
argument_list|()
operator|+
literal|2
argument_list|,
name|newScrollbar
operator|.
name|rect
operator|.
name|width
argument_list|()
operator|-
literal|5
argument_list|,
name|newScrollbar
operator|.
name|rect
operator|.
name|height
argument_list|()
operator|-
literal|5
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_FrameFocusRect
argument_list|,
operator|&
name|fropt
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_SCROLLBAR
ifndef|#
directive|ifndef
name|QT_NO_SPINBOX
case|case
name|CC_SpinBox
case|:
if|if
condition|(
specifier|const
name|QStyleOptionSpinBox
modifier|*
name|sb
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSpinBox
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|QStyleOptionSpinBox
name|copy
init|=
operator|*
name|sb
decl_stmt|;
name|PrimitiveElement
name|pe
decl_stmt|;
if|if
condition|(
name|sb
operator|->
name|frame
operator|&&
operator|(
name|sb
operator|->
name|subControls
operator|&
name|SC_SpinBoxFrame
operator|)
condition|)
block|{
name|QRect
name|r
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_SpinBox
argument_list|,
name|sb
argument_list|,
name|SC_SpinBoxFrame
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|qDrawWinPanel
argument_list|(
name|p
argument_list|,
name|r
argument_list|,
name|sb
operator|->
name|palette
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|sb
operator|->
name|subControls
operator|&
name|SC_SpinBoxUp
condition|)
block|{
name|copy
operator|.
name|subControls
operator|=
name|SC_SpinBoxUp
expr_stmt|;
name|QPalette
name|pal2
init|=
name|sb
operator|->
name|palette
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|sb
operator|->
name|stepEnabled
operator|&
name|QAbstractSpinBox
operator|::
name|StepUpEnabled
operator|)
condition|)
block|{
name|pal2
operator|.
name|setCurrentColorGroup
argument_list|(
name|QPalette
operator|::
name|Disabled
argument_list|)
expr_stmt|;
name|copy
operator|.
name|state
operator|&=
operator|~
name|State_Enabled
expr_stmt|;
block|}
name|copy
operator|.
name|palette
operator|=
name|pal2
expr_stmt|;
if|if
condition|(
name|sb
operator|->
name|activeSubControls
operator|==
name|SC_SpinBoxUp
operator|&&
operator|(
name|sb
operator|->
name|state
operator|&
name|State_Sunken
operator|)
condition|)
block|{
name|copy
operator|.
name|state
operator||=
name|State_On
expr_stmt|;
name|copy
operator|.
name|state
operator||=
name|State_Sunken
expr_stmt|;
block|}
else|else
block|{
name|copy
operator|.
name|state
operator||=
name|State_Raised
expr_stmt|;
name|copy
operator|.
name|state
operator|&=
operator|~
name|State_Sunken
expr_stmt|;
block|}
name|pe
operator|=
operator|(
name|sb
operator|->
name|buttonSymbols
operator|==
name|QAbstractSpinBox
operator|::
name|PlusMinus
condition|?
name|PE_IndicatorSpinPlus
else|:
name|PE_IndicatorSpinUp
operator|)
expr_stmt|;
name|copy
operator|.
name|rect
operator|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_SpinBox
argument_list|,
name|sb
argument_list|,
name|SC_SpinBoxUp
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_PanelButtonBevel
argument_list|,
operator|&
name|copy
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|copy
operator|.
name|rect
operator|.
name|adjust
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|,
operator|-
literal|4
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|pe
argument_list|,
operator|&
name|copy
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|sb
operator|->
name|subControls
operator|&
name|SC_SpinBoxDown
condition|)
block|{
name|copy
operator|.
name|subControls
operator|=
name|SC_SpinBoxDown
expr_stmt|;
name|copy
operator|.
name|state
operator|=
name|sb
operator|->
name|state
expr_stmt|;
name|QPalette
name|pal2
init|=
name|sb
operator|->
name|palette
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|sb
operator|->
name|stepEnabled
operator|&
name|QAbstractSpinBox
operator|::
name|StepDownEnabled
operator|)
condition|)
block|{
name|pal2
operator|.
name|setCurrentColorGroup
argument_list|(
name|QPalette
operator|::
name|Disabled
argument_list|)
expr_stmt|;
name|copy
operator|.
name|state
operator|&=
operator|~
name|State_Enabled
expr_stmt|;
block|}
name|copy
operator|.
name|palette
operator|=
name|pal2
expr_stmt|;
if|if
condition|(
name|sb
operator|->
name|activeSubControls
operator|==
name|SC_SpinBoxDown
operator|&&
operator|(
name|sb
operator|->
name|state
operator|&
name|State_Sunken
operator|)
condition|)
block|{
name|copy
operator|.
name|state
operator||=
name|State_On
expr_stmt|;
name|copy
operator|.
name|state
operator||=
name|State_Sunken
expr_stmt|;
block|}
else|else
block|{
name|copy
operator|.
name|state
operator||=
name|State_Raised
expr_stmt|;
name|copy
operator|.
name|state
operator|&=
operator|~
name|State_Sunken
expr_stmt|;
block|}
name|pe
operator|=
operator|(
name|sb
operator|->
name|buttonSymbols
operator|==
name|QAbstractSpinBox
operator|::
name|PlusMinus
condition|?
name|PE_IndicatorSpinMinus
else|:
name|PE_IndicatorSpinDown
operator|)
expr_stmt|;
name|copy
operator|.
name|rect
operator|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_SpinBox
argument_list|,
name|sb
argument_list|,
name|SC_SpinBoxDown
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_PanelButtonBevel
argument_list|,
operator|&
name|copy
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|copy
operator|.
name|rect
operator|.
name|adjust
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|,
operator|-
literal|4
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|pe
argument_list|,
operator|&
name|copy
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_SPINBOX
ifndef|#
directive|ifndef
name|QT_NO_TOOLBUTTON
case|case
name|CC_ToolButton
case|:
if|if
condition|(
specifier|const
name|QStyleOptionToolButton
modifier|*
name|toolbutton
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionToolButton
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|QRect
name|button
decl_stmt|,
name|menuarea
decl_stmt|;
name|button
operator|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|cc
argument_list|,
name|toolbutton
argument_list|,
name|SC_ToolButton
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|menuarea
operator|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|cc
argument_list|,
name|toolbutton
argument_list|,
name|SC_ToolButtonMenu
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|State
name|bflags
init|=
name|toolbutton
operator|->
name|state
operator|&
operator|~
name|State_Sunken
decl_stmt|;
if|if
condition|(
name|bflags
operator|&
name|State_AutoRaise
condition|)
block|{
if|if
condition|(
operator|!
operator|(
name|bflags
operator|&
name|State_MouseOver
operator|)
operator|||
operator|!
operator|(
name|bflags
operator|&
name|State_Enabled
operator|)
condition|)
block|{
name|bflags
operator|&=
operator|~
name|State_Raised
expr_stmt|;
block|}
block|}
name|State
name|mflags
init|=
name|bflags
decl_stmt|;
if|if
condition|(
name|toolbutton
operator|->
name|state
operator|&
name|State_Sunken
condition|)
block|{
if|if
condition|(
name|toolbutton
operator|->
name|activeSubControls
operator|&
name|SC_ToolButton
condition|)
name|bflags
operator||=
name|State_Sunken
expr_stmt|;
name|mflags
operator||=
name|State_Sunken
expr_stmt|;
block|}
name|QStyleOption
name|tool
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|tool
operator|.
name|palette
operator|=
name|toolbutton
operator|->
name|palette
expr_stmt|;
if|if
condition|(
name|toolbutton
operator|->
name|subControls
operator|&
name|SC_ToolButton
condition|)
block|{
if|if
condition|(
name|bflags
operator|&
operator|(
name|State_Sunken
operator||
name|State_On
operator||
name|State_Raised
operator|)
condition|)
block|{
name|tool
operator|.
name|rect
operator|=
name|button
expr_stmt|;
name|tool
operator|.
name|state
operator|=
name|bflags
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_PanelButtonTool
argument_list|,
operator|&
name|tool
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|toolbutton
operator|->
name|state
operator|&
name|State_HasFocus
condition|)
block|{
name|QStyleOptionFocusRect
name|fr
decl_stmt|;
name|fr
operator|.
name|QStyleOption
operator|::
name|operator
name|=
argument_list|(
operator|*
name|toolbutton
argument_list|)
expr_stmt|;
name|fr
operator|.
name|rect
operator|.
name|adjust
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|,
operator|-
literal|3
argument_list|,
operator|-
literal|3
argument_list|)
expr_stmt|;
if|if
condition|(
name|toolbutton
operator|->
name|features
operator|&
name|QStyleOptionToolButton
operator|::
name|MenuButtonPopup
condition|)
name|fr
operator|.
name|rect
operator|.
name|adjust
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|QStyle
operator|::
name|PM_MenuButtonIndicator
argument_list|,
name|toolbutton
argument_list|,
name|widget
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_FrameFocusRect
argument_list|,
operator|&
name|fr
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
name|QStyleOptionToolButton
name|label
init|=
operator|*
name|toolbutton
decl_stmt|;
name|label
operator|.
name|state
operator|=
name|bflags
expr_stmt|;
name|int
name|fw
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_DefaultFrameWidth
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|label
operator|.
name|rect
operator|=
name|button
operator|.
name|adjusted
argument_list|(
name|fw
argument_list|,
name|fw
argument_list|,
operator|-
name|fw
argument_list|,
operator|-
name|fw
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawControl
argument_list|(
name|CE_ToolButtonLabel
argument_list|,
operator|&
name|label
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
if|if
condition|(
name|toolbutton
operator|->
name|subControls
operator|&
name|SC_ToolButtonMenu
condition|)
block|{
name|tool
operator|.
name|rect
operator|=
name|menuarea
expr_stmt|;
name|tool
operator|.
name|state
operator|=
name|mflags
expr_stmt|;
if|if
condition|(
name|mflags
operator|&
operator|(
name|State_Sunken
operator||
name|State_On
operator||
name|State_Raised
operator|)
condition|)
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_IndicatorButtonDropDown
argument_list|,
operator|&
name|tool
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_IndicatorArrowDown
argument_list|,
operator|&
name|tool
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|toolbutton
operator|->
name|features
operator|&
name|QStyleOptionToolButton
operator|::
name|HasMenu
condition|)
block|{
name|int
name|mbi
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_MenuButtonIndicator
argument_list|,
name|toolbutton
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|QRect
name|ir
init|=
name|toolbutton
operator|->
name|rect
decl_stmt|;
name|QStyleOptionToolButton
name|newBtn
init|=
operator|*
name|toolbutton
decl_stmt|;
name|newBtn
operator|.
name|rect
operator|=
name|QRect
argument_list|(
name|ir
operator|.
name|right
argument_list|()
operator|+
literal|5
operator|-
name|mbi
argument_list|,
name|ir
operator|.
name|y
argument_list|()
operator|+
name|ir
operator|.
name|height
argument_list|()
operator|-
name|mbi
operator|+
literal|4
argument_list|,
name|mbi
operator|-
literal|6
argument_list|,
name|mbi
operator|-
literal|6
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_IndicatorArrowDown
argument_list|,
operator|&
name|newBtn
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_TOOLBUTTON
case|case
name|CC_TitleBar
case|:
if|if
condition|(
specifier|const
name|QStyleOptionTitleBar
modifier|*
name|tb
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionTitleBar
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|QRect
name|ir
decl_stmt|;
if|if
condition|(
name|opt
operator|->
name|subControls
operator|&
name|SC_TitleBarLabel
condition|)
block|{
name|QColor
name|left
init|=
name|tb
operator|->
name|palette
operator|.
name|highlight
argument_list|()
operator|.
name|color
argument_list|()
decl_stmt|;
name|QColor
name|right
init|=
name|tb
operator|->
name|palette
operator|.
name|base
argument_list|()
operator|.
name|color
argument_list|()
decl_stmt|;
name|QBrush
name|fillBrush
argument_list|(
name|left
argument_list|)
decl_stmt|;
if|if
condition|(
name|left
operator|!=
name|right
condition|)
block|{
name|QPoint
name|p1
argument_list|(
name|tb
operator|->
name|rect
operator|.
name|x
argument_list|()
argument_list|,
name|tb
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
name|tb
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|/
literal|2
argument_list|)
decl_stmt|;
name|QPoint
name|p2
argument_list|(
name|tb
operator|->
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|tb
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
name|tb
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|/
literal|2
argument_list|)
decl_stmt|;
name|QLinearGradient
name|lg
argument_list|(
name|p1
argument_list|,
name|p2
argument_list|)
decl_stmt|;
name|lg
operator|.
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|left
argument_list|)
expr_stmt|;
name|lg
operator|.
name|setColorAt
argument_list|(
literal|1
argument_list|,
name|right
argument_list|)
expr_stmt|;
name|fillBrush
operator|=
name|lg
expr_stmt|;
block|}
name|p
operator|->
name|fillRect
argument_list|(
name|opt
operator|->
name|rect
argument_list|,
name|fillBrush
argument_list|)
expr_stmt|;
name|ir
operator|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_TitleBar
argument_list|,
name|tb
argument_list|,
name|SC_TitleBarLabel
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|tb
operator|->
name|palette
operator|.
name|highlightedText
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawText
argument_list|(
name|ir
operator|.
name|x
argument_list|()
operator|+
literal|2
argument_list|,
name|ir
operator|.
name|y
argument_list|()
argument_list|,
name|ir
operator|.
name|width
argument_list|()
operator|-
literal|2
argument_list|,
name|ir
operator|.
name|height
argument_list|()
argument_list|,
name|Qt
operator|::
name|AlignLeft
operator||
name|Qt
operator|::
name|AlignVCenter
operator||
name|Qt
operator|::
name|TextSingleLine
argument_list|,
name|tb
operator|->
name|text
argument_list|)
expr_stmt|;
block|}
name|bool
name|down
init|=
literal|false
decl_stmt|;
name|QPixmap
name|pm
decl_stmt|;
name|QStyleOption
name|tool
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|tool
operator|.
name|palette
operator|=
name|tb
operator|->
name|palette
expr_stmt|;
if|if
condition|(
name|tb
operator|->
name|subControls
operator|&
name|SC_TitleBarCloseButton
operator|&&
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowSystemMenuHint
condition|)
block|{
name|ir
operator|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_TitleBar
argument_list|,
name|tb
argument_list|,
name|SC_TitleBarCloseButton
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|down
operator|=
name|tb
operator|->
name|activeSubControls
operator|&
name|SC_TitleBarCloseButton
operator|&&
operator|(
name|opt
operator|->
name|state
operator|&
name|State_Sunken
operator|)
expr_stmt|;
if|if
condition|(
operator|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowType_Mask
operator|)
operator|==
name|Qt
operator|::
name|Tool
ifndef|#
directive|ifndef
name|QT_NO_DOCKWIDGET
operator|||
name|qobject_cast
argument_list|<
specifier|const
name|QDockWidget
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
endif|#
directive|endif
condition|)
name|pm
operator|=
name|proxy
argument_list|()
operator|->
name|standardIcon
argument_list|(
name|SP_DockWidgetCloseButton
argument_list|,
operator|&
name|tool
argument_list|,
name|widget
argument_list|)
operator|.
name|pixmap
argument_list|(
name|qt_getWindow
argument_list|(
name|widget
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|pm
operator|=
name|proxy
argument_list|()
operator|->
name|standardIcon
argument_list|(
name|SP_TitleBarCloseButton
argument_list|,
operator|&
name|tool
argument_list|,
name|widget
argument_list|)
operator|.
name|pixmap
argument_list|(
name|qt_getWindow
argument_list|(
name|widget
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|tool
operator|.
name|rect
operator|=
name|ir
expr_stmt|;
name|tool
operator|.
name|state
operator|=
name|down
condition|?
name|State_Sunken
else|:
name|State_Raised
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_PanelButtonTool
argument_list|,
operator|&
name|tool
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|p
operator|->
name|save
argument_list|()
expr_stmt|;
if|if
condition|(
name|down
condition|)
name|p
operator|->
name|translate
argument_list|(
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_ButtonShiftHorizontal
argument_list|,
name|tb
argument_list|,
name|widget
argument_list|)
argument_list|,
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_ButtonShiftVertical
argument_list|,
name|tb
argument_list|,
name|widget
argument_list|)
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawItemPixmap
argument_list|(
name|p
argument_list|,
name|ir
argument_list|,
name|Qt
operator|::
name|AlignCenter
argument_list|,
name|pm
argument_list|)
expr_stmt|;
name|p
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|tb
operator|->
name|subControls
operator|&
name|SC_TitleBarMaxButton
operator|&&
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowMaximizeButtonHint
operator|&&
operator|!
operator|(
name|tb
operator|->
name|titleBarState
operator|&
name|Qt
operator|::
name|WindowMaximized
operator|)
condition|)
block|{
name|ir
operator|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_TitleBar
argument_list|,
name|tb
argument_list|,
name|SC_TitleBarMaxButton
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|down
operator|=
name|tb
operator|->
name|activeSubControls
operator|&
name|SC_TitleBarMaxButton
operator|&&
operator|(
name|opt
operator|->
name|state
operator|&
name|State_Sunken
operator|)
expr_stmt|;
name|pm
operator|=
name|proxy
argument_list|()
operator|->
name|standardIcon
argument_list|(
name|SP_TitleBarMaxButton
argument_list|,
operator|&
name|tool
argument_list|,
name|widget
argument_list|)
operator|.
name|pixmap
argument_list|(
name|qt_getWindow
argument_list|(
name|widget
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|tool
operator|.
name|rect
operator|=
name|ir
expr_stmt|;
name|tool
operator|.
name|state
operator|=
name|down
condition|?
name|State_Sunken
else|:
name|State_Raised
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_PanelButtonTool
argument_list|,
operator|&
name|tool
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|p
operator|->
name|save
argument_list|()
expr_stmt|;
if|if
condition|(
name|down
condition|)
name|p
operator|->
name|translate
argument_list|(
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_ButtonShiftHorizontal
argument_list|,
name|tb
argument_list|,
name|widget
argument_list|)
argument_list|,
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_ButtonShiftVertical
argument_list|,
name|tb
argument_list|,
name|widget
argument_list|)
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawItemPixmap
argument_list|(
name|p
argument_list|,
name|ir
argument_list|,
name|Qt
operator|::
name|AlignCenter
argument_list|,
name|pm
argument_list|)
expr_stmt|;
name|p
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|tb
operator|->
name|subControls
operator|&
name|SC_TitleBarMinButton
operator|&&
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowMinimizeButtonHint
operator|&&
operator|!
operator|(
name|tb
operator|->
name|titleBarState
operator|&
name|Qt
operator|::
name|WindowMinimized
operator|)
condition|)
block|{
name|ir
operator|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_TitleBar
argument_list|,
name|tb
argument_list|,
name|SC_TitleBarMinButton
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|down
operator|=
name|tb
operator|->
name|activeSubControls
operator|&
name|SC_TitleBarMinButton
operator|&&
operator|(
name|opt
operator|->
name|state
operator|&
name|State_Sunken
operator|)
expr_stmt|;
name|pm
operator|=
name|proxy
argument_list|()
operator|->
name|standardIcon
argument_list|(
name|SP_TitleBarMinButton
argument_list|,
operator|&
name|tool
argument_list|,
name|widget
argument_list|)
operator|.
name|pixmap
argument_list|(
name|qt_getWindow
argument_list|(
name|widget
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|tool
operator|.
name|rect
operator|=
name|ir
expr_stmt|;
name|tool
operator|.
name|state
operator|=
name|down
condition|?
name|State_Sunken
else|:
name|State_Raised
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_PanelButtonTool
argument_list|,
operator|&
name|tool
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|p
operator|->
name|save
argument_list|()
expr_stmt|;
if|if
condition|(
name|down
condition|)
name|p
operator|->
name|translate
argument_list|(
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_ButtonShiftHorizontal
argument_list|,
name|tb
argument_list|,
name|widget
argument_list|)
argument_list|,
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_ButtonShiftVertical
argument_list|,
name|tb
argument_list|,
name|widget
argument_list|)
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawItemPixmap
argument_list|(
name|p
argument_list|,
name|ir
argument_list|,
name|Qt
operator|::
name|AlignCenter
argument_list|,
name|pm
argument_list|)
expr_stmt|;
name|p
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
name|bool
name|drawNormalButton
init|=
operator|(
name|tb
operator|->
name|subControls
operator|&
name|SC_TitleBarNormalButton
operator|)
operator|&&
operator|(
operator|(
operator|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowMinimizeButtonHint
operator|)
operator|&&
operator|(
name|tb
operator|->
name|titleBarState
operator|&
name|Qt
operator|::
name|WindowMinimized
operator|)
operator|)
operator|||
operator|(
operator|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowMaximizeButtonHint
operator|)
operator|&&
operator|(
name|tb
operator|->
name|titleBarState
operator|&
name|Qt
operator|::
name|WindowMaximized
operator|)
operator|)
operator|)
decl_stmt|;
if|if
condition|(
name|drawNormalButton
condition|)
block|{
name|ir
operator|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_TitleBar
argument_list|,
name|tb
argument_list|,
name|SC_TitleBarNormalButton
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|down
operator|=
name|tb
operator|->
name|activeSubControls
operator|&
name|SC_TitleBarNormalButton
operator|&&
operator|(
name|opt
operator|->
name|state
operator|&
name|State_Sunken
operator|)
expr_stmt|;
name|pm
operator|=
name|proxy
argument_list|()
operator|->
name|standardIcon
argument_list|(
name|SP_TitleBarNormalButton
argument_list|,
operator|&
name|tool
argument_list|,
name|widget
argument_list|)
operator|.
name|pixmap
argument_list|(
name|qt_getWindow
argument_list|(
name|widget
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|tool
operator|.
name|rect
operator|=
name|ir
expr_stmt|;
name|tool
operator|.
name|state
operator|=
name|down
condition|?
name|State_Sunken
else|:
name|State_Raised
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_PanelButtonTool
argument_list|,
operator|&
name|tool
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|p
operator|->
name|save
argument_list|()
expr_stmt|;
if|if
condition|(
name|down
condition|)
name|p
operator|->
name|translate
argument_list|(
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_ButtonShiftHorizontal
argument_list|,
name|tb
argument_list|,
name|widget
argument_list|)
argument_list|,
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_ButtonShiftVertical
argument_list|,
name|tb
argument_list|,
name|widget
argument_list|)
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawItemPixmap
argument_list|(
name|p
argument_list|,
name|ir
argument_list|,
name|Qt
operator|::
name|AlignCenter
argument_list|,
name|pm
argument_list|)
expr_stmt|;
name|p
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|tb
operator|->
name|subControls
operator|&
name|SC_TitleBarShadeButton
operator|&&
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowShadeButtonHint
operator|&&
operator|!
operator|(
name|tb
operator|->
name|titleBarState
operator|&
name|Qt
operator|::
name|WindowMinimized
operator|)
condition|)
block|{
name|ir
operator|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_TitleBar
argument_list|,
name|tb
argument_list|,
name|SC_TitleBarShadeButton
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|down
operator|=
operator|(
name|tb
operator|->
name|activeSubControls
operator|&
name|SC_TitleBarShadeButton
operator|&&
operator|(
name|opt
operator|->
name|state
operator|&
name|State_Sunken
operator|)
operator|)
expr_stmt|;
name|pm
operator|=
name|proxy
argument_list|()
operator|->
name|standardIcon
argument_list|(
name|SP_TitleBarShadeButton
argument_list|,
operator|&
name|tool
argument_list|,
name|widget
argument_list|)
operator|.
name|pixmap
argument_list|(
name|qt_getWindow
argument_list|(
name|widget
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|tool
operator|.
name|rect
operator|=
name|ir
expr_stmt|;
name|tool
operator|.
name|state
operator|=
name|down
condition|?
name|State_Sunken
else|:
name|State_Raised
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_PanelButtonTool
argument_list|,
operator|&
name|tool
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|p
operator|->
name|save
argument_list|()
expr_stmt|;
if|if
condition|(
name|down
condition|)
name|p
operator|->
name|translate
argument_list|(
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_ButtonShiftHorizontal
argument_list|,
name|tb
argument_list|,
name|widget
argument_list|)
argument_list|,
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_ButtonShiftVertical
argument_list|,
name|tb
argument_list|,
name|widget
argument_list|)
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawItemPixmap
argument_list|(
name|p
argument_list|,
name|ir
argument_list|,
name|Qt
operator|::
name|AlignCenter
argument_list|,
name|pm
argument_list|)
expr_stmt|;
name|p
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|tb
operator|->
name|subControls
operator|&
name|SC_TitleBarUnshadeButton
operator|&&
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowShadeButtonHint
operator|&&
name|tb
operator|->
name|titleBarState
operator|&
name|Qt
operator|::
name|WindowMinimized
condition|)
block|{
name|ir
operator|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_TitleBar
argument_list|,
name|tb
argument_list|,
name|SC_TitleBarUnshadeButton
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|down
operator|=
name|tb
operator|->
name|activeSubControls
operator|&
name|SC_TitleBarUnshadeButton
operator|&&
operator|(
name|opt
operator|->
name|state
operator|&
name|State_Sunken
operator|)
expr_stmt|;
name|pm
operator|=
name|proxy
argument_list|()
operator|->
name|standardIcon
argument_list|(
name|SP_TitleBarUnshadeButton
argument_list|,
operator|&
name|tool
argument_list|,
name|widget
argument_list|)
operator|.
name|pixmap
argument_list|(
name|qt_getWindow
argument_list|(
name|widget
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|tool
operator|.
name|rect
operator|=
name|ir
expr_stmt|;
name|tool
operator|.
name|state
operator|=
name|down
condition|?
name|State_Sunken
else|:
name|State_Raised
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_PanelButtonTool
argument_list|,
operator|&
name|tool
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|p
operator|->
name|save
argument_list|()
expr_stmt|;
if|if
condition|(
name|down
condition|)
name|p
operator|->
name|translate
argument_list|(
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_ButtonShiftHorizontal
argument_list|,
name|tb
argument_list|,
name|widget
argument_list|)
argument_list|,
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_ButtonShiftVertical
argument_list|,
name|tb
argument_list|,
name|widget
argument_list|)
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawItemPixmap
argument_list|(
name|p
argument_list|,
name|ir
argument_list|,
name|Qt
operator|::
name|AlignCenter
argument_list|,
name|pm
argument_list|)
expr_stmt|;
name|p
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|tb
operator|->
name|subControls
operator|&
name|SC_TitleBarContextHelpButton
operator|&&
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowContextHelpButtonHint
condition|)
block|{
name|ir
operator|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_TitleBar
argument_list|,
name|tb
argument_list|,
name|SC_TitleBarContextHelpButton
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|down
operator|=
name|tb
operator|->
name|activeSubControls
operator|&
name|SC_TitleBarContextHelpButton
operator|&&
operator|(
name|opt
operator|->
name|state
operator|&
name|State_Sunken
operator|)
expr_stmt|;
name|pm
operator|=
name|proxy
argument_list|()
operator|->
name|standardIcon
argument_list|(
name|SP_TitleBarContextHelpButton
argument_list|,
operator|&
name|tool
argument_list|,
name|widget
argument_list|)
operator|.
name|pixmap
argument_list|(
name|qt_getWindow
argument_list|(
name|widget
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|tool
operator|.
name|rect
operator|=
name|ir
expr_stmt|;
name|tool
operator|.
name|state
operator|=
name|down
condition|?
name|State_Sunken
else|:
name|State_Raised
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_PanelButtonTool
argument_list|,
operator|&
name|tool
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|p
operator|->
name|save
argument_list|()
expr_stmt|;
if|if
condition|(
name|down
condition|)
name|p
operator|->
name|translate
argument_list|(
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_ButtonShiftHorizontal
argument_list|,
name|tb
argument_list|,
name|widget
argument_list|)
argument_list|,
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_ButtonShiftVertical
argument_list|,
name|tb
argument_list|,
name|widget
argument_list|)
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawItemPixmap
argument_list|(
name|p
argument_list|,
name|ir
argument_list|,
name|Qt
operator|::
name|AlignCenter
argument_list|,
name|pm
argument_list|)
expr_stmt|;
name|p
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|tb
operator|->
name|subControls
operator|&
name|SC_TitleBarSysMenu
operator|&&
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowSystemMenuHint
condition|)
block|{
name|ir
operator|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_TitleBar
argument_list|,
name|tb
argument_list|,
name|SC_TitleBarSysMenu
argument_list|,
name|widget
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|tb
operator|->
name|icon
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|tb
operator|->
name|icon
operator|.
name|paint
argument_list|(
name|p
argument_list|,
name|ir
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|int
name|iconSize
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_SmallIconSize
argument_list|,
name|tb
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|pm
operator|=
name|proxy
argument_list|()
operator|->
name|standardIcon
argument_list|(
name|SP_TitleBarMenuButton
argument_list|,
operator|&
name|tool
argument_list|,
name|widget
argument_list|)
operator|.
name|pixmap
argument_list|(
name|qt_getWindow
argument_list|(
name|widget
argument_list|)
argument_list|,
name|QSize
argument_list|(
name|iconSize
argument_list|,
name|iconSize
argument_list|)
argument_list|)
expr_stmt|;
name|tool
operator|.
name|rect
operator|=
name|ir
expr_stmt|;
name|p
operator|->
name|save
argument_list|()
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawItemPixmap
argument_list|(
name|p
argument_list|,
name|ir
argument_list|,
name|Qt
operator|::
name|AlignCenter
argument_list|,
name|pm
argument_list|)
expr_stmt|;
name|p
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
block|}
block|}
break|break;
ifndef|#
directive|ifndef
name|QT_NO_DIAL
case|case
name|CC_Dial
case|:
if|if
condition|(
specifier|const
name|QStyleOptionSlider
modifier|*
name|dial
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSlider
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
comment|// OK, this is more a port of things over
name|p
operator|->
name|save
argument_list|()
expr_stmt|;
comment|// avoid dithering
if|if
condition|(
name|p
operator|->
name|paintEngine
argument_list|()
operator|->
name|hasFeature
argument_list|(
name|QPaintEngine
operator|::
name|Antialiasing
argument_list|)
condition|)
name|p
operator|->
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|)
expr_stmt|;
name|int
name|width
init|=
name|dial
operator|->
name|rect
operator|.
name|width
argument_list|()
decl_stmt|;
name|int
name|height
init|=
name|dial
operator|->
name|rect
operator|.
name|height
argument_list|()
decl_stmt|;
name|qreal
name|r
init|=
name|qMin
argument_list|(
name|width
argument_list|,
name|height
argument_list|)
operator|/
literal|2
decl_stmt|;
name|qreal
name|d_
init|=
name|r
operator|/
literal|6
decl_stmt|;
name|qreal
name|dx
init|=
name|dial
operator|->
name|rect
operator|.
name|x
argument_list|()
operator|+
name|d_
operator|+
operator|(
name|width
operator|-
literal|2
operator|*
name|r
operator|)
operator|/
literal|2
operator|+
literal|1
decl_stmt|;
name|qreal
name|dy
init|=
name|dial
operator|->
name|rect
operator|.
name|y
argument_list|()
operator|+
name|d_
operator|+
operator|(
name|height
operator|-
literal|2
operator|*
name|r
operator|)
operator|/
literal|2
operator|+
literal|1
decl_stmt|;
name|QRect
name|br
init|=
name|QRect
argument_list|(
name|int
argument_list|(
name|dx
argument_list|)
argument_list|,
name|int
argument_list|(
name|dy
argument_list|)
argument_list|,
name|int
argument_list|(
name|r
operator|*
literal|2
operator|-
literal|2
operator|*
name|d_
operator|-
literal|2
argument_list|)
argument_list|,
name|int
argument_list|(
name|r
operator|*
literal|2
operator|-
literal|2
operator|*
name|d_
operator|-
literal|2
argument_list|)
argument_list|)
decl_stmt|;
name|QPalette
name|pal
init|=
name|opt
operator|->
name|palette
decl_stmt|;
comment|// draw notches
if|if
condition|(
name|dial
operator|->
name|subControls
operator|&
name|QStyle
operator|::
name|SC_DialTickmarks
condition|)
block|{
name|p
operator|->
name|setPen
argument_list|(
name|pal
operator|.
name|foreground
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLines
argument_list|(
name|QStyleHelper
operator|::
name|calcLines
argument_list|(
name|dial
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|dial
operator|->
name|state
operator|&
name|State_Enabled
condition|)
block|{
name|p
operator|->
name|setBrush
argument_list|(
name|pal
operator|.
name|brush
argument_list|(
name|QPalette
operator|::
name|ColorRole
argument_list|(
name|proxy
argument_list|()
operator|->
name|styleHint
argument_list|(
name|SH_Dial_BackgroundRole
argument_list|,
name|dial
argument_list|,
name|widget
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawEllipse
argument_list|(
name|br
argument_list|)
expr_stmt|;
name|p
operator|->
name|setBrush
argument_list|(
name|Qt
operator|::
name|NoBrush
argument_list|)
expr_stmt|;
block|}
name|p
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|pal
operator|.
name|dark
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawArc
argument_list|(
name|br
argument_list|,
literal|60
operator|*
literal|16
argument_list|,
literal|180
operator|*
literal|16
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|pal
operator|.
name|light
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawArc
argument_list|(
name|br
argument_list|,
literal|240
operator|*
literal|16
argument_list|,
literal|180
operator|*
literal|16
argument_list|)
expr_stmt|;
name|qreal
name|a
decl_stmt|;
specifier|const
name|StaticPolygonF
argument_list|<
literal|3
argument_list|>
name|arrow
init|=
name|calcArrow
argument_list|(
name|dial
argument_list|,
name|a
argument_list|)
decl_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|p
operator|->
name|setBrush
argument_list|(
name|pal
operator|.
name|button
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|->
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Qt4CompatiblePainting
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawPolygon
argument_list|(
name|arrow
operator|.
name|cbegin
argument_list|()
argument_list|,
name|arrow
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|a
operator|=
name|QStyleHelper
operator|::
name|angle
argument_list|(
name|QPointF
argument_list|(
name|width
operator|/
literal|2
argument_list|,
name|height
operator|/
literal|2
argument_list|)
argument_list|,
name|arrow
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|p
operator|->
name|setBrush
argument_list|(
name|Qt
operator|::
name|NoBrush
argument_list|)
expr_stmt|;
if|if
condition|(
name|a
operator|<=
literal|0
operator|||
name|a
operator|>
literal|200
condition|)
block|{
name|p
operator|->
name|setPen
argument_list|(
name|pal
operator|.
name|light
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|arrow
index|[
literal|2
index|]
argument_list|,
name|arrow
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|arrow
index|[
literal|1
index|]
argument_list|,
name|arrow
index|[
literal|2
index|]
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|pal
operator|.
name|dark
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|arrow
index|[
literal|0
index|]
argument_list|,
name|arrow
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|a
operator|>
literal|0
operator|&&
name|a
operator|<
literal|45
condition|)
block|{
name|p
operator|->
name|setPen
argument_list|(
name|pal
operator|.
name|light
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|arrow
index|[
literal|2
index|]
argument_list|,
name|arrow
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|pal
operator|.
name|dark
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|arrow
index|[
literal|1
index|]
argument_list|,
name|arrow
index|[
literal|2
index|]
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|arrow
index|[
literal|0
index|]
argument_list|,
name|arrow
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|a
operator|>=
literal|45
operator|&&
name|a
operator|<
literal|135
condition|)
block|{
name|p
operator|->
name|setPen
argument_list|(
name|pal
operator|.
name|dark
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|arrow
index|[
literal|2
index|]
argument_list|,
name|arrow
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|arrow
index|[
literal|1
index|]
argument_list|,
name|arrow
index|[
literal|2
index|]
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|pal
operator|.
name|light
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|arrow
index|[
literal|0
index|]
argument_list|,
name|arrow
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|a
operator|>=
literal|135
operator|&&
name|a
operator|<
literal|200
condition|)
block|{
name|p
operator|->
name|setPen
argument_list|(
name|pal
operator|.
name|dark
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|arrow
index|[
literal|2
index|]
argument_list|,
name|arrow
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|pal
operator|.
name|light
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|arrow
index|[
literal|0
index|]
argument_list|,
name|arrow
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|arrow
index|[
literal|1
index|]
argument_list|,
name|arrow
index|[
literal|2
index|]
argument_list|)
expr_stmt|;
block|}
comment|// draw focus rect around the dial
name|QStyleOptionFocusRect
name|fropt
decl_stmt|;
name|fropt
operator|.
name|rect
operator|=
name|dial
operator|->
name|rect
expr_stmt|;
name|fropt
operator|.
name|state
operator|=
name|dial
operator|->
name|state
expr_stmt|;
name|fropt
operator|.
name|palette
operator|=
name|dial
operator|->
name|palette
expr_stmt|;
if|if
condition|(
name|fropt
operator|.
name|state
operator|&
name|QStyle
operator|::
name|State_HasFocus
condition|)
block|{
name|br
operator|.
name|adjust
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
if|if
condition|(
name|dial
operator|->
name|subControls
operator|&
name|SC_DialTickmarks
condition|)
block|{
name|int
name|r
init|=
name|qMin
argument_list|(
name|width
argument_list|,
name|height
argument_list|)
operator|/
literal|2
decl_stmt|;
name|br
operator|.
name|translate
argument_list|(
operator|-
name|r
operator|/
literal|6
argument_list|,
operator|-
name|r
operator|/
literal|6
argument_list|)
expr_stmt|;
name|br
operator|.
name|setWidth
argument_list|(
name|br
operator|.
name|width
argument_list|()
operator|+
name|r
operator|/
literal|3
argument_list|)
expr_stmt|;
name|br
operator|.
name|setHeight
argument_list|(
name|br
operator|.
name|height
argument_list|()
operator|+
name|r
operator|/
literal|3
argument_list|)
expr_stmt|;
block|}
name|fropt
operator|.
name|rect
operator|=
name|br
operator|.
name|adjusted
argument_list|(
operator|-
literal|2
argument_list|,
operator|-
literal|2
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|QStyle
operator|::
name|PE_FrameFocusRect
argument_list|,
operator|&
name|fropt
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
name|p
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_DIAL
ifndef|#
directive|ifndef
name|QT_NO_GROUPBOX
case|case
name|CC_GroupBox
case|:
if|if
condition|(
specifier|const
name|QStyleOptionGroupBox
modifier|*
name|groupBox
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionGroupBox
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
comment|// Draw frame
name|QRect
name|textRect
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_GroupBox
argument_list|,
name|opt
argument_list|,
name|SC_GroupBoxLabel
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|QRect
name|checkBoxRect
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_GroupBox
argument_list|,
name|opt
argument_list|,
name|SC_GroupBoxCheckBox
argument_list|,
name|widget
argument_list|)
decl_stmt|;
if|if
condition|(
name|groupBox
operator|->
name|subControls
operator|&
name|QStyle
operator|::
name|SC_GroupBoxFrame
condition|)
block|{
name|QStyleOptionFrame
name|frame
decl_stmt|;
name|frame
operator|.
name|QStyleOption
operator|::
name|operator
name|=
argument_list|(
operator|*
name|groupBox
argument_list|)
expr_stmt|;
name|frame
operator|.
name|features
operator|=
name|groupBox
operator|->
name|features
expr_stmt|;
name|frame
operator|.
name|lineWidth
operator|=
name|groupBox
operator|->
name|lineWidth
expr_stmt|;
name|frame
operator|.
name|midLineWidth
operator|=
name|groupBox
operator|->
name|midLineWidth
expr_stmt|;
name|frame
operator|.
name|rect
operator|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_GroupBox
argument_list|,
name|opt
argument_list|,
name|SC_GroupBoxFrame
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|p
operator|->
name|save
argument_list|()
expr_stmt|;
name|QRegion
name|region
argument_list|(
name|groupBox
operator|->
name|rect
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|groupBox
operator|->
name|text
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|bool
name|ltr
init|=
name|groupBox
operator|->
name|direction
operator|==
name|Qt
operator|::
name|LeftToRight
decl_stmt|;
name|QRect
name|finalRect
decl_stmt|;
if|if
condition|(
name|groupBox
operator|->
name|subControls
operator|&
name|QStyle
operator|::
name|SC_GroupBoxCheckBox
condition|)
block|{
name|finalRect
operator|=
name|checkBoxRect
operator|.
name|united
argument_list|(
name|textRect
argument_list|)
expr_stmt|;
name|finalRect
operator|.
name|adjust
argument_list|(
name|ltr
condition|?
operator|-
literal|4
else|:
literal|0
argument_list|,
literal|0
argument_list|,
name|ltr
condition|?
literal|0
else|:
literal|4
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|finalRect
operator|=
name|textRect
expr_stmt|;
block|}
name|region
operator|-=
name|finalRect
expr_stmt|;
block|}
name|p
operator|->
name|setClipRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_FrameGroupBox
argument_list|,
operator|&
name|frame
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|p
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
comment|// Draw title
if|if
condition|(
operator|(
name|groupBox
operator|->
name|subControls
operator|&
name|QStyle
operator|::
name|SC_GroupBoxLabel
operator|)
operator|&&
operator|!
name|groupBox
operator|->
name|text
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|QColor
name|textColor
init|=
name|groupBox
operator|->
name|textColor
decl_stmt|;
if|if
condition|(
name|textColor
operator|.
name|isValid
argument_list|()
condition|)
name|p
operator|->
name|setPen
argument_list|(
name|textColor
argument_list|)
expr_stmt|;
name|int
name|alignment
init|=
name|int
argument_list|(
name|groupBox
operator|->
name|textAlignment
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|proxy
argument_list|()
operator|->
name|styleHint
argument_list|(
name|QStyle
operator|::
name|SH_UnderlineShortcut
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
condition|)
name|alignment
operator||=
name|Qt
operator|::
name|TextHideMnemonic
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawItemText
argument_list|(
name|p
argument_list|,
name|textRect
argument_list|,
name|Qt
operator|::
name|TextShowMnemonic
operator||
name|Qt
operator|::
name|AlignHCenter
operator||
name|alignment
argument_list|,
name|groupBox
operator|->
name|palette
argument_list|,
name|groupBox
operator|->
name|state
operator|&
name|State_Enabled
argument_list|,
name|groupBox
operator|->
name|text
argument_list|,
name|textColor
operator|.
name|isValid
argument_list|()
condition|?
name|QPalette
operator|::
name|NoRole
else|:
name|QPalette
operator|::
name|WindowText
argument_list|)
expr_stmt|;
if|if
condition|(
name|groupBox
operator|->
name|state
operator|&
name|State_HasFocus
condition|)
block|{
name|QStyleOptionFocusRect
name|fropt
decl_stmt|;
name|fropt
operator|.
name|QStyleOption
operator|::
name|operator
name|=
argument_list|(
operator|*
name|groupBox
argument_list|)
expr_stmt|;
name|fropt
operator|.
name|rect
operator|=
name|textRect
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_FrameFocusRect
argument_list|,
operator|&
name|fropt
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
block|}
comment|// Draw checkbox
if|if
condition|(
name|groupBox
operator|->
name|subControls
operator|&
name|SC_GroupBoxCheckBox
condition|)
block|{
name|QStyleOptionButton
name|box
decl_stmt|;
name|box
operator|.
name|QStyleOption
operator|::
name|operator
name|=
argument_list|(
operator|*
name|groupBox
argument_list|)
expr_stmt|;
name|box
operator|.
name|rect
operator|=
name|checkBoxRect
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_IndicatorCheckBox
argument_list|,
operator|&
name|box
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_GROUPBOX
ifndef|#
directive|ifndef
name|QT_NO_MDIAREA
case|case
name|CC_MdiControls
case|:
block|{
name|QStyleOptionButton
name|btnOpt
decl_stmt|;
name|btnOpt
operator|.
name|QStyleOption
operator|::
name|operator
name|=
argument_list|(
operator|*
name|opt
argument_list|)
expr_stmt|;
name|btnOpt
operator|.
name|state
operator|&=
operator|~
name|State_MouseOver
expr_stmt|;
name|int
name|bsx
init|=
literal|0
decl_stmt|;
name|int
name|bsy
init|=
literal|0
decl_stmt|;
if|if
condition|(
name|opt
operator|->
name|subControls
operator|&
name|QStyle
operator|::
name|SC_MdiCloseButton
condition|)
block|{
if|if
condition|(
name|opt
operator|->
name|activeSubControls
operator|&
name|QStyle
operator|::
name|SC_MdiCloseButton
operator|&&
operator|(
name|opt
operator|->
name|state
operator|&
name|State_Sunken
operator|)
condition|)
block|{
name|btnOpt
operator|.
name|state
operator||=
name|State_Sunken
expr_stmt|;
name|btnOpt
operator|.
name|state
operator|&=
operator|~
name|State_Raised
expr_stmt|;
name|bsx
operator|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_ButtonShiftHorizontal
argument_list|)
expr_stmt|;
name|bsy
operator|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_ButtonShiftVertical
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|btnOpt
operator|.
name|state
operator||=
name|State_Raised
expr_stmt|;
name|btnOpt
operator|.
name|state
operator|&=
operator|~
name|State_Sunken
expr_stmt|;
name|bsx
operator|=
literal|0
expr_stmt|;
name|bsy
operator|=
literal|0
expr_stmt|;
block|}
name|btnOpt
operator|.
name|rect
operator|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_MdiControls
argument_list|,
name|opt
argument_list|,
name|SC_MdiCloseButton
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_PanelButtonCommand
argument_list|,
operator|&
name|btnOpt
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|QPixmap
name|pm
init|=
name|proxy
argument_list|()
operator|->
name|standardIcon
argument_list|(
name|SP_TitleBarCloseButton
argument_list|)
operator|.
name|pixmap
argument_list|(
name|qt_getWindow
argument_list|(
name|widget
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
decl_stmt|;
name|proxy
argument_list|()
operator|->
name|drawItemPixmap
argument_list|(
name|p
argument_list|,
name|btnOpt
operator|.
name|rect
operator|.
name|translated
argument_list|(
name|bsx
argument_list|,
name|bsy
argument_list|)
argument_list|,
name|Qt
operator|::
name|AlignCenter
argument_list|,
name|pm
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|opt
operator|->
name|subControls
operator|&
name|QStyle
operator|::
name|SC_MdiNormalButton
condition|)
block|{
if|if
condition|(
name|opt
operator|->
name|activeSubControls
operator|&
name|QStyle
operator|::
name|SC_MdiNormalButton
operator|&&
operator|(
name|opt
operator|->
name|state
operator|&
name|State_Sunken
operator|)
condition|)
block|{
name|btnOpt
operator|.
name|state
operator||=
name|State_Sunken
expr_stmt|;
name|btnOpt
operator|.
name|state
operator|&=
operator|~
name|State_Raised
expr_stmt|;
name|bsx
operator|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_ButtonShiftHorizontal
argument_list|)
expr_stmt|;
name|bsy
operator|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_ButtonShiftVertical
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|btnOpt
operator|.
name|state
operator||=
name|State_Raised
expr_stmt|;
name|btnOpt
operator|.
name|state
operator|&=
operator|~
name|State_Sunken
expr_stmt|;
name|bsx
operator|=
literal|0
expr_stmt|;
name|bsy
operator|=
literal|0
expr_stmt|;
block|}
name|btnOpt
operator|.
name|rect
operator|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_MdiControls
argument_list|,
name|opt
argument_list|,
name|SC_MdiNormalButton
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_PanelButtonCommand
argument_list|,
operator|&
name|btnOpt
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|QPixmap
name|pm
init|=
name|proxy
argument_list|()
operator|->
name|standardIcon
argument_list|(
name|SP_TitleBarNormalButton
argument_list|)
operator|.
name|pixmap
argument_list|(
name|qt_getWindow
argument_list|(
name|widget
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
decl_stmt|;
name|proxy
argument_list|()
operator|->
name|drawItemPixmap
argument_list|(
name|p
argument_list|,
name|btnOpt
operator|.
name|rect
operator|.
name|translated
argument_list|(
name|bsx
argument_list|,
name|bsy
argument_list|)
argument_list|,
name|Qt
operator|::
name|AlignCenter
argument_list|,
name|pm
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|opt
operator|->
name|subControls
operator|&
name|QStyle
operator|::
name|SC_MdiMinButton
condition|)
block|{
if|if
condition|(
name|opt
operator|->
name|activeSubControls
operator|&
name|QStyle
operator|::
name|SC_MdiMinButton
operator|&&
operator|(
name|opt
operator|->
name|state
operator|&
name|State_Sunken
operator|)
condition|)
block|{
name|btnOpt
operator|.
name|state
operator||=
name|State_Sunken
expr_stmt|;
name|btnOpt
operator|.
name|state
operator|&=
operator|~
name|State_Raised
expr_stmt|;
name|bsx
operator|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_ButtonShiftHorizontal
argument_list|)
expr_stmt|;
name|bsy
operator|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_ButtonShiftVertical
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|btnOpt
operator|.
name|state
operator||=
name|State_Raised
expr_stmt|;
name|btnOpt
operator|.
name|state
operator|&=
operator|~
name|State_Sunken
expr_stmt|;
name|bsx
operator|=
literal|0
expr_stmt|;
name|bsy
operator|=
literal|0
expr_stmt|;
block|}
name|btnOpt
operator|.
name|rect
operator|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_MdiControls
argument_list|,
name|opt
argument_list|,
name|SC_MdiMinButton
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_PanelButtonCommand
argument_list|,
operator|&
name|btnOpt
argument_list|,
name|p
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|QPixmap
name|pm
init|=
name|proxy
argument_list|()
operator|->
name|standardIcon
argument_list|(
name|SP_TitleBarMinButton
argument_list|)
operator|.
name|pixmap
argument_list|(
name|qt_getWindow
argument_list|(
name|widget
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
decl_stmt|;
name|proxy
argument_list|()
operator|->
name|drawItemPixmap
argument_list|(
name|p
argument_list|,
name|btnOpt
operator|.
name|rect
operator|.
name|translated
argument_list|(
name|bsx
argument_list|,
name|bsy
argument_list|)
argument_list|,
name|Qt
operator|::
name|AlignCenter
argument_list|,
name|pm
argument_list|)
expr_stmt|;
block|}
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_MDIAREA
default|default:
name|qWarning
argument_list|(
literal|"QCommonStyle::drawComplexControl: Control %d not handled"
argument_list|,
name|cc
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_comment
comment|/*!     \reimp */
end_comment
begin_function
DECL|function|hitTestComplexControl
name|QStyle
operator|::
name|SubControl
name|QCommonStyle
operator|::
name|hitTestComplexControl
parameter_list|(
name|ComplexControl
name|cc
parameter_list|,
specifier|const
name|QStyleOptionComplex
modifier|*
name|opt
parameter_list|,
specifier|const
name|QPoint
modifier|&
name|pt
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
name|SubControl
name|sc
init|=
name|SC_None
decl_stmt|;
switch|switch
condition|(
name|cc
condition|)
block|{
ifndef|#
directive|ifndef
name|QT_NO_SLIDER
case|case
name|CC_Slider
case|:
if|if
condition|(
specifier|const
name|QStyleOptionSlider
modifier|*
name|slider
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSlider
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|QRect
name|r
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|cc
argument_list|,
name|slider
argument_list|,
name|SC_SliderHandle
argument_list|,
name|widget
argument_list|)
decl_stmt|;
if|if
condition|(
name|r
operator|.
name|isValid
argument_list|()
operator|&&
name|r
operator|.
name|contains
argument_list|(
name|pt
argument_list|)
condition|)
block|{
name|sc
operator|=
name|SC_SliderHandle
expr_stmt|;
block|}
else|else
block|{
name|r
operator|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|cc
argument_list|,
name|slider
argument_list|,
name|SC_SliderGroove
argument_list|,
name|widget
argument_list|)
expr_stmt|;
if|if
condition|(
name|r
operator|.
name|isValid
argument_list|()
operator|&&
name|r
operator|.
name|contains
argument_list|(
name|pt
argument_list|)
condition|)
name|sc
operator|=
name|SC_SliderGroove
expr_stmt|;
block|}
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_SLIDER
ifndef|#
directive|ifndef
name|QT_NO_SCROLLBAR
case|case
name|CC_ScrollBar
case|:
if|if
condition|(
specifier|const
name|QStyleOptionSlider
modifier|*
name|scrollbar
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSlider
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|QRect
name|r
decl_stmt|;
name|uint
name|ctrl
init|=
name|SC_ScrollBarAddLine
decl_stmt|;
while|while
condition|(
name|ctrl
operator|<=
name|SC_ScrollBarGroove
condition|)
block|{
name|r
operator|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|cc
argument_list|,
name|scrollbar
argument_list|,
name|QStyle
operator|::
name|SubControl
argument_list|(
name|ctrl
argument_list|)
argument_list|,
name|widget
argument_list|)
expr_stmt|;
if|if
condition|(
name|r
operator|.
name|isValid
argument_list|()
operator|&&
name|r
operator|.
name|contains
argument_list|(
name|pt
argument_list|)
condition|)
block|{
name|sc
operator|=
name|QStyle
operator|::
name|SubControl
argument_list|(
name|ctrl
argument_list|)
expr_stmt|;
break|break;
block|}
name|ctrl
operator|<<=
literal|1
expr_stmt|;
block|}
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_SCROLLBAR
ifndef|#
directive|ifndef
name|QT_NO_TOOLBUTTON
case|case
name|CC_ToolButton
case|:
if|if
condition|(
specifier|const
name|QStyleOptionToolButton
modifier|*
name|toolbutton
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionToolButton
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|QRect
name|r
decl_stmt|;
name|uint
name|ctrl
init|=
name|SC_ToolButton
decl_stmt|;
while|while
condition|(
name|ctrl
operator|<=
name|SC_ToolButtonMenu
condition|)
block|{
name|r
operator|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|cc
argument_list|,
name|toolbutton
argument_list|,
name|QStyle
operator|::
name|SubControl
argument_list|(
name|ctrl
argument_list|)
argument_list|,
name|widget
argument_list|)
expr_stmt|;
if|if
condition|(
name|r
operator|.
name|isValid
argument_list|()
operator|&&
name|r
operator|.
name|contains
argument_list|(
name|pt
argument_list|)
condition|)
block|{
name|sc
operator|=
name|QStyle
operator|::
name|SubControl
argument_list|(
name|ctrl
argument_list|)
expr_stmt|;
break|break;
block|}
name|ctrl
operator|<<=
literal|1
expr_stmt|;
block|}
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_TOOLBUTTON
ifndef|#
directive|ifndef
name|QT_NO_SPINBOX
case|case
name|CC_SpinBox
case|:
if|if
condition|(
specifier|const
name|QStyleOptionSpinBox
modifier|*
name|spinbox
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSpinBox
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|QRect
name|r
decl_stmt|;
name|uint
name|ctrl
init|=
name|SC_SpinBoxUp
decl_stmt|;
while|while
condition|(
name|ctrl
operator|<=
name|SC_SpinBoxEditField
condition|)
block|{
name|r
operator|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|cc
argument_list|,
name|spinbox
argument_list|,
name|QStyle
operator|::
name|SubControl
argument_list|(
name|ctrl
argument_list|)
argument_list|,
name|widget
argument_list|)
expr_stmt|;
if|if
condition|(
name|r
operator|.
name|isValid
argument_list|()
operator|&&
name|r
operator|.
name|contains
argument_list|(
name|pt
argument_list|)
condition|)
block|{
name|sc
operator|=
name|QStyle
operator|::
name|SubControl
argument_list|(
name|ctrl
argument_list|)
expr_stmt|;
break|break;
block|}
name|ctrl
operator|<<=
literal|1
expr_stmt|;
block|}
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_SPINBOX
case|case
name|CC_TitleBar
case|:
if|if
condition|(
specifier|const
name|QStyleOptionTitleBar
modifier|*
name|tb
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionTitleBar
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|QRect
name|r
decl_stmt|;
name|uint
name|ctrl
init|=
name|SC_TitleBarSysMenu
decl_stmt|;
while|while
condition|(
name|ctrl
operator|<=
name|SC_TitleBarLabel
condition|)
block|{
name|r
operator|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|cc
argument_list|,
name|tb
argument_list|,
name|QStyle
operator|::
name|SubControl
argument_list|(
name|ctrl
argument_list|)
argument_list|,
name|widget
argument_list|)
expr_stmt|;
if|if
condition|(
name|r
operator|.
name|isValid
argument_list|()
operator|&&
name|r
operator|.
name|contains
argument_list|(
name|pt
argument_list|)
condition|)
block|{
name|sc
operator|=
name|QStyle
operator|::
name|SubControl
argument_list|(
name|ctrl
argument_list|)
expr_stmt|;
break|break;
block|}
name|ctrl
operator|<<=
literal|1
expr_stmt|;
block|}
block|}
break|break;
ifndef|#
directive|ifndef
name|QT_NO_COMBOBOX
case|case
name|CC_ComboBox
case|:
if|if
condition|(
specifier|const
name|QStyleOptionComboBox
modifier|*
name|cb
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionComboBox
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|QRect
name|r
decl_stmt|;
name|uint
name|ctrl
init|=
name|SC_ComboBoxArrow
decl_stmt|;
comment|// Start here and go down.
while|while
condition|(
name|ctrl
operator|>
literal|0
condition|)
block|{
name|r
operator|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|cc
argument_list|,
name|cb
argument_list|,
name|QStyle
operator|::
name|SubControl
argument_list|(
name|ctrl
argument_list|)
argument_list|,
name|widget
argument_list|)
expr_stmt|;
if|if
condition|(
name|r
operator|.
name|isValid
argument_list|()
operator|&&
name|r
operator|.
name|contains
argument_list|(
name|pt
argument_list|)
condition|)
block|{
name|sc
operator|=
name|QStyle
operator|::
name|SubControl
argument_list|(
name|ctrl
argument_list|)
expr_stmt|;
break|break;
block|}
name|ctrl
operator|>>=
literal|1
expr_stmt|;
block|}
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_COMBOBOX
ifndef|#
directive|ifndef
name|QT_NO_GROUPBOX
case|case
name|CC_GroupBox
case|:
if|if
condition|(
specifier|const
name|QStyleOptionGroupBox
modifier|*
name|groupBox
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionGroupBox
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|QRect
name|r
decl_stmt|;
name|uint
name|ctrl
init|=
name|SC_GroupBoxCheckBox
decl_stmt|;
while|while
condition|(
name|ctrl
operator|<=
name|SC_GroupBoxFrame
condition|)
block|{
name|r
operator|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|cc
argument_list|,
name|groupBox
argument_list|,
name|QStyle
operator|::
name|SubControl
argument_list|(
name|ctrl
argument_list|)
argument_list|,
name|widget
argument_list|)
expr_stmt|;
if|if
condition|(
name|r
operator|.
name|isValid
argument_list|()
operator|&&
name|r
operator|.
name|contains
argument_list|(
name|pt
argument_list|)
condition|)
block|{
name|sc
operator|=
name|QStyle
operator|::
name|SubControl
argument_list|(
name|ctrl
argument_list|)
expr_stmt|;
break|break;
block|}
name|ctrl
operator|<<=
literal|1
expr_stmt|;
block|}
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_GROUPBOX
case|case
name|CC_MdiControls
case|:
block|{
name|QRect
name|r
decl_stmt|;
name|uint
name|ctrl
init|=
name|SC_MdiMinButton
decl_stmt|;
while|while
condition|(
name|ctrl
operator|<=
name|SC_MdiCloseButton
condition|)
block|{
name|r
operator|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_MdiControls
argument_list|,
name|opt
argument_list|,
name|QStyle
operator|::
name|SubControl
argument_list|(
name|ctrl
argument_list|)
argument_list|,
name|widget
argument_list|)
expr_stmt|;
if|if
condition|(
name|r
operator|.
name|isValid
argument_list|()
operator|&&
name|r
operator|.
name|contains
argument_list|(
name|pt
argument_list|)
operator|&&
operator|(
name|opt
operator|->
name|subControls
operator|&
name|ctrl
operator|)
condition|)
block|{
name|sc
operator|=
name|QStyle
operator|::
name|SubControl
argument_list|(
name|ctrl
argument_list|)
expr_stmt|;
return|return
name|sc
return|;
block|}
name|ctrl
operator|<<=
literal|1
expr_stmt|;
block|}
block|}
break|break;
default|default:
name|qWarning
argument_list|(
literal|"QCommonStyle::hitTestComplexControl: Case %d not handled"
argument_list|,
name|cc
argument_list|)
expr_stmt|;
block|}
return|return
name|sc
return|;
block|}
end_function
begin_comment
comment|/*!     \reimp */
end_comment
begin_function
DECL|function|subControlRect
name|QRect
name|QCommonStyle
operator|::
name|subControlRect
parameter_list|(
name|ComplexControl
name|cc
parameter_list|,
specifier|const
name|QStyleOptionComplex
modifier|*
name|opt
parameter_list|,
name|SubControl
name|sc
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
name|QRect
name|ret
decl_stmt|;
switch|switch
condition|(
name|cc
condition|)
block|{
ifndef|#
directive|ifndef
name|QT_NO_SLIDER
case|case
name|CC_Slider
case|:
if|if
condition|(
specifier|const
name|QStyleOptionSlider
modifier|*
name|slider
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSlider
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|int
name|tickOffset
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_SliderTickmarkOffset
argument_list|,
name|slider
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|int
name|thickness
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_SliderControlThickness
argument_list|,
name|slider
argument_list|,
name|widget
argument_list|)
decl_stmt|;
switch|switch
condition|(
name|sc
condition|)
block|{
case|case
name|SC_SliderHandle
case|:
block|{
name|int
name|sliderPos
init|=
literal|0
decl_stmt|;
name|int
name|len
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_SliderLength
argument_list|,
name|slider
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|bool
name|horizontal
init|=
name|slider
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
decl_stmt|;
name|sliderPos
operator|=
name|sliderPositionFromValue
argument_list|(
name|slider
operator|->
name|minimum
argument_list|,
name|slider
operator|->
name|maximum
argument_list|,
name|slider
operator|->
name|sliderPosition
argument_list|,
operator|(
name|horizontal
condition|?
name|slider
operator|->
name|rect
operator|.
name|width
argument_list|()
else|:
name|slider
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|)
operator|-
name|len
argument_list|,
name|slider
operator|->
name|upsideDown
argument_list|)
expr_stmt|;
if|if
condition|(
name|horizontal
condition|)
name|ret
operator|.
name|setRect
argument_list|(
name|slider
operator|->
name|rect
operator|.
name|x
argument_list|()
operator|+
name|sliderPos
argument_list|,
name|slider
operator|->
name|rect
operator|.
name|y
argument_list|()
operator|+
name|tickOffset
argument_list|,
name|len
argument_list|,
name|thickness
argument_list|)
expr_stmt|;
else|else
name|ret
operator|.
name|setRect
argument_list|(
name|slider
operator|->
name|rect
operator|.
name|x
argument_list|()
operator|+
name|tickOffset
argument_list|,
name|slider
operator|->
name|rect
operator|.
name|y
argument_list|()
operator|+
name|sliderPos
argument_list|,
name|thickness
argument_list|,
name|len
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|SC_SliderGroove
case|:
if|if
condition|(
name|slider
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
name|ret
operator|.
name|setRect
argument_list|(
name|slider
operator|->
name|rect
operator|.
name|x
argument_list|()
argument_list|,
name|slider
operator|->
name|rect
operator|.
name|y
argument_list|()
operator|+
name|tickOffset
argument_list|,
name|slider
operator|->
name|rect
operator|.
name|width
argument_list|()
argument_list|,
name|thickness
argument_list|)
expr_stmt|;
else|else
name|ret
operator|.
name|setRect
argument_list|(
name|slider
operator|->
name|rect
operator|.
name|x
argument_list|()
operator|+
name|tickOffset
argument_list|,
name|slider
operator|->
name|rect
operator|.
name|y
argument_list|()
argument_list|,
name|thickness
argument_list|,
name|slider
operator|->
name|rect
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
break|break;
default|default:
break|break;
block|}
name|ret
operator|=
name|visualRect
argument_list|(
name|slider
operator|->
name|direction
argument_list|,
name|slider
operator|->
name|rect
argument_list|,
name|ret
argument_list|)
expr_stmt|;
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_SLIDER
ifndef|#
directive|ifndef
name|QT_NO_SCROLLBAR
case|case
name|CC_ScrollBar
case|:
if|if
condition|(
specifier|const
name|QStyleOptionSlider
modifier|*
name|scrollbar
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSlider
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
specifier|const
name|QRect
name|scrollBarRect
init|=
name|scrollbar
operator|->
name|rect
decl_stmt|;
name|int
name|sbextent
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|!
name|proxy
argument_list|()
operator|->
name|styleHint
argument_list|(
name|SH_ScrollBar_Transient
argument_list|,
name|scrollbar
argument_list|,
name|widget
argument_list|)
condition|)
name|sbextent
operator|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_ScrollBarExtent
argument_list|,
name|scrollbar
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|int
name|maxlen
init|=
operator|(
operator|(
name|scrollbar
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
operator|)
condition|?
name|scrollBarRect
operator|.
name|width
argument_list|()
else|:
name|scrollBarRect
operator|.
name|height
argument_list|()
operator|)
operator|-
operator|(
name|sbextent
operator|*
literal|2
operator|)
decl_stmt|;
name|int
name|sliderlen
decl_stmt|;
comment|// calculate slider length
if|if
condition|(
name|scrollbar
operator|->
name|maximum
operator|!=
name|scrollbar
operator|->
name|minimum
condition|)
block|{
name|uint
name|range
init|=
name|scrollbar
operator|->
name|maximum
operator|-
name|scrollbar
operator|->
name|minimum
decl_stmt|;
name|sliderlen
operator|=
operator|(
name|qint64
argument_list|(
name|scrollbar
operator|->
name|pageStep
argument_list|)
operator|*
name|maxlen
operator|)
operator|/
operator|(
name|range
operator|+
name|scrollbar
operator|->
name|pageStep
operator|)
expr_stmt|;
name|int
name|slidermin
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_ScrollBarSliderMin
argument_list|,
name|scrollbar
argument_list|,
name|widget
argument_list|)
decl_stmt|;
if|if
condition|(
name|sliderlen
argument_list|<
name|slidermin
operator|||
name|range
argument_list|>
name|INT_MAX
operator|/
literal|2
condition|)
name|sliderlen
operator|=
name|slidermin
expr_stmt|;
if|if
condition|(
name|sliderlen
operator|>
name|maxlen
condition|)
name|sliderlen
operator|=
name|maxlen
expr_stmt|;
block|}
else|else
block|{
name|sliderlen
operator|=
name|maxlen
expr_stmt|;
block|}
name|int
name|sliderstart
init|=
name|sbextent
operator|+
name|sliderPositionFromValue
argument_list|(
name|scrollbar
operator|->
name|minimum
argument_list|,
name|scrollbar
operator|->
name|maximum
argument_list|,
name|scrollbar
operator|->
name|sliderPosition
argument_list|,
name|maxlen
operator|-
name|sliderlen
argument_list|,
name|scrollbar
operator|->
name|upsideDown
argument_list|)
decl_stmt|;
switch|switch
condition|(
name|sc
condition|)
block|{
case|case
name|SC_ScrollBarSubLine
case|:
comment|// top/left button
if|if
condition|(
name|scrollbar
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
block|{
name|int
name|buttonWidth
init|=
name|qMin
argument_list|(
name|scrollBarRect
operator|.
name|width
argument_list|()
operator|/
literal|2
argument_list|,
name|sbextent
argument_list|)
decl_stmt|;
name|ret
operator|.
name|setRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|buttonWidth
argument_list|,
name|scrollBarRect
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|int
name|buttonHeight
init|=
name|qMin
argument_list|(
name|scrollBarRect
operator|.
name|height
argument_list|()
operator|/
literal|2
argument_list|,
name|sbextent
argument_list|)
decl_stmt|;
name|ret
operator|.
name|setRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|scrollBarRect
operator|.
name|width
argument_list|()
argument_list|,
name|buttonHeight
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|SC_ScrollBarAddLine
case|:
comment|// bottom/right button
if|if
condition|(
name|scrollbar
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
block|{
name|int
name|buttonWidth
init|=
name|qMin
argument_list|(
name|scrollBarRect
operator|.
name|width
argument_list|()
operator|/
literal|2
argument_list|,
name|sbextent
argument_list|)
decl_stmt|;
name|ret
operator|.
name|setRect
argument_list|(
name|scrollBarRect
operator|.
name|width
argument_list|()
operator|-
name|buttonWidth
argument_list|,
literal|0
argument_list|,
name|buttonWidth
argument_list|,
name|scrollBarRect
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|int
name|buttonHeight
init|=
name|qMin
argument_list|(
name|scrollBarRect
operator|.
name|height
argument_list|()
operator|/
literal|2
argument_list|,
name|sbextent
argument_list|)
decl_stmt|;
name|ret
operator|.
name|setRect
argument_list|(
literal|0
argument_list|,
name|scrollBarRect
operator|.
name|height
argument_list|()
operator|-
name|buttonHeight
argument_list|,
name|scrollBarRect
operator|.
name|width
argument_list|()
argument_list|,
name|buttonHeight
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|SC_ScrollBarSubPage
case|:
comment|// between top/left button and slider
if|if
condition|(
name|scrollbar
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
name|ret
operator|.
name|setRect
argument_list|(
name|sbextent
argument_list|,
literal|0
argument_list|,
name|sliderstart
operator|-
name|sbextent
argument_list|,
name|scrollBarRect
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|ret
operator|.
name|setRect
argument_list|(
literal|0
argument_list|,
name|sbextent
argument_list|,
name|scrollBarRect
operator|.
name|width
argument_list|()
argument_list|,
name|sliderstart
operator|-
name|sbextent
argument_list|)
expr_stmt|;
break|break;
case|case
name|SC_ScrollBarAddPage
case|:
comment|// between bottom/right button and slider
if|if
condition|(
name|scrollbar
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
name|ret
operator|.
name|setRect
argument_list|(
name|sliderstart
operator|+
name|sliderlen
argument_list|,
literal|0
argument_list|,
name|maxlen
operator|-
name|sliderstart
operator|-
name|sliderlen
operator|+
name|sbextent
argument_list|,
name|scrollBarRect
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|ret
operator|.
name|setRect
argument_list|(
literal|0
argument_list|,
name|sliderstart
operator|+
name|sliderlen
argument_list|,
name|scrollBarRect
operator|.
name|width
argument_list|()
argument_list|,
name|maxlen
operator|-
name|sliderstart
operator|-
name|sliderlen
operator|+
name|sbextent
argument_list|)
expr_stmt|;
break|break;
case|case
name|SC_ScrollBarGroove
case|:
if|if
condition|(
name|scrollbar
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
name|ret
operator|.
name|setRect
argument_list|(
name|sbextent
argument_list|,
literal|0
argument_list|,
name|scrollBarRect
operator|.
name|width
argument_list|()
operator|-
name|sbextent
operator|*
literal|2
argument_list|,
name|scrollBarRect
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|ret
operator|.
name|setRect
argument_list|(
literal|0
argument_list|,
name|sbextent
argument_list|,
name|scrollBarRect
operator|.
name|width
argument_list|()
argument_list|,
name|scrollBarRect
operator|.
name|height
argument_list|()
operator|-
name|sbextent
operator|*
literal|2
argument_list|)
expr_stmt|;
break|break;
case|case
name|SC_ScrollBarSlider
case|:
if|if
condition|(
name|scrollbar
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
name|ret
operator|.
name|setRect
argument_list|(
name|sliderstart
argument_list|,
literal|0
argument_list|,
name|sliderlen
argument_list|,
name|scrollBarRect
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|ret
operator|.
name|setRect
argument_list|(
literal|0
argument_list|,
name|sliderstart
argument_list|,
name|scrollBarRect
operator|.
name|width
argument_list|()
argument_list|,
name|sliderlen
argument_list|)
expr_stmt|;
break|break;
default|default:
break|break;
block|}
name|ret
operator|=
name|visualRect
argument_list|(
name|scrollbar
operator|->
name|direction
argument_list|,
name|scrollBarRect
argument_list|,
name|ret
argument_list|)
expr_stmt|;
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_SCROLLBAR
ifndef|#
directive|ifndef
name|QT_NO_SPINBOX
case|case
name|CC_SpinBox
case|:
if|if
condition|(
specifier|const
name|QStyleOptionSpinBox
modifier|*
name|spinbox
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSpinBox
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|QSize
name|bs
decl_stmt|;
name|int
name|fw
init|=
name|spinbox
operator|->
name|frame
condition|?
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_SpinBoxFrameWidth
argument_list|,
name|spinbox
argument_list|,
name|widget
argument_list|)
else|:
literal|0
decl_stmt|;
name|bs
operator|.
name|setHeight
argument_list|(
name|qMax
argument_list|(
literal|8
argument_list|,
name|spinbox
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|/
literal|2
operator|-
name|fw
argument_list|)
argument_list|)
expr_stmt|;
comment|// 1.6 -approximate golden mean
name|bs
operator|.
name|setWidth
argument_list|(
name|qMax
argument_list|(
literal|16
argument_list|,
name|qMin
argument_list|(
name|bs
operator|.
name|height
argument_list|()
operator|*
literal|8
operator|/
literal|5
argument_list|,
name|spinbox
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|/
literal|4
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|bs
operator|=
name|bs
operator|.
name|expandedTo
argument_list|(
name|QApplication
operator|::
name|globalStrut
argument_list|()
argument_list|)
expr_stmt|;
name|int
name|y
init|=
name|fw
operator|+
name|spinbox
operator|->
name|rect
operator|.
name|y
argument_list|()
decl_stmt|;
name|int
name|x
decl_stmt|,
name|lx
decl_stmt|,
name|rx
decl_stmt|;
name|x
operator|=
name|spinbox
operator|->
name|rect
operator|.
name|x
argument_list|()
operator|+
name|spinbox
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|-
name|fw
operator|-
name|bs
operator|.
name|width
argument_list|()
expr_stmt|;
name|lx
operator|=
name|fw
expr_stmt|;
name|rx
operator|=
name|x
operator|-
name|fw
expr_stmt|;
switch|switch
condition|(
name|sc
condition|)
block|{
case|case
name|SC_SpinBoxUp
case|:
if|if
condition|(
name|spinbox
operator|->
name|buttonSymbols
operator|==
name|QAbstractSpinBox
operator|::
name|NoButtons
condition|)
return|return
name|QRect
argument_list|()
return|;
name|ret
operator|=
name|QRect
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|bs
operator|.
name|width
argument_list|()
argument_list|,
name|bs
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|SC_SpinBoxDown
case|:
if|if
condition|(
name|spinbox
operator|->
name|buttonSymbols
operator|==
name|QAbstractSpinBox
operator|::
name|NoButtons
condition|)
return|return
name|QRect
argument_list|()
return|;
name|ret
operator|=
name|QRect
argument_list|(
name|x
argument_list|,
name|y
operator|+
name|bs
operator|.
name|height
argument_list|()
argument_list|,
name|bs
operator|.
name|width
argument_list|()
argument_list|,
name|bs
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|SC_SpinBoxEditField
case|:
if|if
condition|(
name|spinbox
operator|->
name|buttonSymbols
operator|==
name|QAbstractSpinBox
operator|::
name|NoButtons
condition|)
block|{
name|ret
operator|=
name|QRect
argument_list|(
name|lx
argument_list|,
name|fw
argument_list|,
name|spinbox
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|-
literal|2
operator|*
name|fw
argument_list|,
name|spinbox
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
literal|2
operator|*
name|fw
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|ret
operator|=
name|QRect
argument_list|(
name|lx
argument_list|,
name|fw
argument_list|,
name|rx
argument_list|,
name|spinbox
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
literal|2
operator|*
name|fw
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|SC_SpinBoxFrame
case|:
name|ret
operator|=
name|spinbox
operator|->
name|rect
expr_stmt|;
default|default:
break|break;
block|}
name|ret
operator|=
name|visualRect
argument_list|(
name|spinbox
operator|->
name|direction
argument_list|,
name|spinbox
operator|->
name|rect
argument_list|,
name|ret
argument_list|)
expr_stmt|;
block|}
break|break;
endif|#
directive|endif
comment|// Qt_NO_SPINBOX
ifndef|#
directive|ifndef
name|QT_NO_TOOLBUTTON
case|case
name|CC_ToolButton
case|:
if|if
condition|(
specifier|const
name|QStyleOptionToolButton
modifier|*
name|tb
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionToolButton
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|int
name|mbi
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_MenuButtonIndicator
argument_list|,
name|tb
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|ret
operator|=
name|tb
operator|->
name|rect
expr_stmt|;
switch|switch
condition|(
name|sc
condition|)
block|{
case|case
name|SC_ToolButton
case|:
if|if
condition|(
operator|(
name|tb
operator|->
name|features
operator|&
operator|(
name|QStyleOptionToolButton
operator|::
name|MenuButtonPopup
operator||
name|QStyleOptionToolButton
operator|::
name|PopupDelay
operator|)
operator|)
operator|==
name|QStyleOptionToolButton
operator|::
name|MenuButtonPopup
condition|)
name|ret
operator|.
name|adjust
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
name|mbi
argument_list|,
literal|0
argument_list|)
expr_stmt|;
break|break;
case|case
name|SC_ToolButtonMenu
case|:
if|if
condition|(
operator|(
name|tb
operator|->
name|features
operator|&
operator|(
name|QStyleOptionToolButton
operator|::
name|MenuButtonPopup
operator||
name|QStyleOptionToolButton
operator|::
name|PopupDelay
operator|)
operator|)
operator|==
name|QStyleOptionToolButton
operator|::
name|MenuButtonPopup
condition|)
name|ret
operator|.
name|adjust
argument_list|(
name|ret
operator|.
name|width
argument_list|()
operator|-
name|mbi
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
break|break;
default|default:
break|break;
block|}
name|ret
operator|=
name|visualRect
argument_list|(
name|tb
operator|->
name|direction
argument_list|,
name|tb
operator|->
name|rect
argument_list|,
name|ret
argument_list|)
expr_stmt|;
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_TOOLBUTTON
ifndef|#
directive|ifndef
name|QT_NO_COMBOBOX
case|case
name|CC_ComboBox
case|:
if|if
condition|(
specifier|const
name|QStyleOptionComboBox
modifier|*
name|cb
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionComboBox
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|int
name|x
init|=
name|cb
operator|->
name|rect
operator|.
name|x
argument_list|()
decl_stmt|,
name|y
init|=
name|cb
operator|->
name|rect
operator|.
name|y
argument_list|()
decl_stmt|,
name|wi
init|=
name|cb
operator|->
name|rect
operator|.
name|width
argument_list|()
decl_stmt|,
name|he
init|=
name|cb
operator|->
name|rect
operator|.
name|height
argument_list|()
decl_stmt|;
name|int
name|xpos
init|=
name|x
decl_stmt|;
name|int
name|margin
init|=
name|cb
operator|->
name|frame
condition|?
literal|3
else|:
literal|0
decl_stmt|;
name|int
name|bmarg
init|=
name|cb
operator|->
name|frame
condition|?
literal|2
else|:
literal|0
decl_stmt|;
name|xpos
operator|+=
name|wi
operator|-
name|bmarg
operator|-
literal|16
expr_stmt|;
switch|switch
condition|(
name|sc
condition|)
block|{
case|case
name|SC_ComboBoxFrame
case|:
name|ret
operator|=
name|cb
operator|->
name|rect
expr_stmt|;
break|break;
case|case
name|SC_ComboBoxArrow
case|:
name|ret
operator|.
name|setRect
argument_list|(
name|xpos
argument_list|,
name|y
operator|+
name|bmarg
argument_list|,
literal|16
argument_list|,
name|he
operator|-
literal|2
operator|*
name|bmarg
argument_list|)
expr_stmt|;
break|break;
case|case
name|SC_ComboBoxEditField
case|:
name|ret
operator|.
name|setRect
argument_list|(
name|x
operator|+
name|margin
argument_list|,
name|y
operator|+
name|margin
argument_list|,
name|wi
operator|-
literal|2
operator|*
name|margin
operator|-
literal|16
argument_list|,
name|he
operator|-
literal|2
operator|*
name|margin
argument_list|)
expr_stmt|;
break|break;
case|case
name|SC_ComboBoxListBoxPopup
case|:
name|ret
operator|=
name|cb
operator|->
name|rect
expr_stmt|;
break|break;
default|default:
break|break;
block|}
name|ret
operator|=
name|visualRect
argument_list|(
name|cb
operator|->
name|direction
argument_list|,
name|cb
operator|->
name|rect
argument_list|,
name|ret
argument_list|)
expr_stmt|;
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_COMBOBOX
case|case
name|CC_TitleBar
case|:
if|if
condition|(
specifier|const
name|QStyleOptionTitleBar
modifier|*
name|tb
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionTitleBar
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
specifier|const
name|int
name|controlMargin
init|=
literal|2
decl_stmt|;
specifier|const
name|int
name|controlHeight
init|=
name|tb
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
name|controlMargin
operator|*
literal|2
decl_stmt|;
specifier|const
name|int
name|delta
init|=
name|controlHeight
operator|+
name|controlMargin
decl_stmt|;
name|int
name|offset
init|=
literal|0
decl_stmt|;
name|bool
name|isMinimized
init|=
name|tb
operator|->
name|titleBarState
operator|&
name|Qt
operator|::
name|WindowMinimized
decl_stmt|;
name|bool
name|isMaximized
init|=
name|tb
operator|->
name|titleBarState
operator|&
name|Qt
operator|::
name|WindowMaximized
decl_stmt|;
switch|switch
condition|(
name|sc
condition|)
block|{
case|case
name|SC_TitleBarLabel
case|:
if|if
condition|(
name|tb
operator|->
name|titleBarFlags
operator|&
operator|(
name|Qt
operator|::
name|WindowTitleHint
operator||
name|Qt
operator|::
name|WindowSystemMenuHint
operator|)
condition|)
block|{
name|ret
operator|=
name|tb
operator|->
name|rect
expr_stmt|;
if|if
condition|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowSystemMenuHint
condition|)
name|ret
operator|.
name|adjust
argument_list|(
name|delta
argument_list|,
literal|0
argument_list|,
operator|-
name|delta
argument_list|,
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowMinimizeButtonHint
condition|)
name|ret
operator|.
name|adjust
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
name|delta
argument_list|,
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowMaximizeButtonHint
condition|)
name|ret
operator|.
name|adjust
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
name|delta
argument_list|,
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowShadeButtonHint
condition|)
name|ret
operator|.
name|adjust
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
name|delta
argument_list|,
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowContextHelpButtonHint
condition|)
name|ret
operator|.
name|adjust
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
name|delta
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|SC_TitleBarContextHelpButton
case|:
if|if
condition|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowContextHelpButtonHint
condition|)
name|offset
operator|+=
name|delta
expr_stmt|;
case|case
name|SC_TitleBarMinButton
case|:
if|if
condition|(
operator|!
name|isMinimized
operator|&&
operator|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowMinimizeButtonHint
operator|)
condition|)
name|offset
operator|+=
name|delta
expr_stmt|;
elseif|else
if|if
condition|(
name|sc
operator|==
name|SC_TitleBarMinButton
condition|)
break|break;
case|case
name|SC_TitleBarNormalButton
case|:
if|if
condition|(
name|isMinimized
operator|&&
operator|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowMinimizeButtonHint
operator|)
condition|)
name|offset
operator|+=
name|delta
expr_stmt|;
elseif|else
if|if
condition|(
name|isMaximized
operator|&&
operator|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowMaximizeButtonHint
operator|)
condition|)
name|offset
operator|+=
name|delta
expr_stmt|;
elseif|else
if|if
condition|(
name|sc
operator|==
name|SC_TitleBarNormalButton
condition|)
break|break;
case|case
name|SC_TitleBarMaxButton
case|:
if|if
condition|(
operator|!
name|isMaximized
operator|&&
operator|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowMaximizeButtonHint
operator|)
condition|)
name|offset
operator|+=
name|delta
expr_stmt|;
elseif|else
if|if
condition|(
name|sc
operator|==
name|SC_TitleBarMaxButton
condition|)
break|break;
case|case
name|SC_TitleBarShadeButton
case|:
if|if
condition|(
operator|!
name|isMinimized
operator|&&
operator|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowShadeButtonHint
operator|)
condition|)
name|offset
operator|+=
name|delta
expr_stmt|;
elseif|else
if|if
condition|(
name|sc
operator|==
name|SC_TitleBarShadeButton
condition|)
break|break;
case|case
name|SC_TitleBarUnshadeButton
case|:
if|if
condition|(
name|isMinimized
operator|&&
operator|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowShadeButtonHint
operator|)
condition|)
name|offset
operator|+=
name|delta
expr_stmt|;
elseif|else
if|if
condition|(
name|sc
operator|==
name|SC_TitleBarUnshadeButton
condition|)
break|break;
case|case
name|SC_TitleBarCloseButton
case|:
if|if
condition|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowSystemMenuHint
condition|)
name|offset
operator|+=
name|delta
expr_stmt|;
elseif|else
if|if
condition|(
name|sc
operator|==
name|SC_TitleBarCloseButton
condition|)
break|break;
name|ret
operator|.
name|setRect
argument_list|(
name|tb
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
name|offset
argument_list|,
name|tb
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
name|controlMargin
argument_list|,
name|controlHeight
argument_list|,
name|controlHeight
argument_list|)
expr_stmt|;
break|break;
case|case
name|SC_TitleBarSysMenu
case|:
if|if
condition|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowSystemMenuHint
condition|)
block|{
name|ret
operator|.
name|setRect
argument_list|(
name|tb
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
name|controlMargin
argument_list|,
name|tb
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
name|controlMargin
argument_list|,
name|controlHeight
argument_list|,
name|controlHeight
argument_list|)
expr_stmt|;
block|}
break|break;
default|default:
break|break;
block|}
name|ret
operator|=
name|visualRect
argument_list|(
name|tb
operator|->
name|direction
argument_list|,
name|tb
operator|->
name|rect
argument_list|,
name|ret
argument_list|)
expr_stmt|;
block|}
break|break;
ifndef|#
directive|ifndef
name|QT_NO_GROUPBOX
case|case
name|CC_GroupBox
case|:
block|{
if|if
condition|(
specifier|const
name|QStyleOptionGroupBox
modifier|*
name|groupBox
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionGroupBox
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
switch|switch
condition|(
name|sc
condition|)
block|{
case|case
name|SC_GroupBoxFrame
case|:
comment|// FALL THROUGH
case|case
name|SC_GroupBoxContents
case|:
block|{
name|int
name|topMargin
init|=
literal|0
decl_stmt|;
name|int
name|topHeight
init|=
literal|0
decl_stmt|;
name|int
name|verticalAlignment
init|=
name|proxy
argument_list|()
operator|->
name|styleHint
argument_list|(
name|SH_GroupBox_TextLabelVerticalAlignment
argument_list|,
name|groupBox
argument_list|,
name|widget
argument_list|)
decl_stmt|;
if|if
condition|(
name|groupBox
operator|->
name|text
operator|.
name|size
argument_list|()
operator|||
operator|(
name|groupBox
operator|->
name|subControls
operator|&
name|QStyle
operator|::
name|SC_GroupBoxCheckBox
operator|)
condition|)
block|{
name|topHeight
operator|=
name|groupBox
operator|->
name|fontMetrics
operator|.
name|height
argument_list|()
expr_stmt|;
if|if
condition|(
name|verticalAlignment
operator|&
name|Qt
operator|::
name|AlignVCenter
condition|)
name|topMargin
operator|=
name|topHeight
operator|/
literal|2
expr_stmt|;
elseif|else
if|if
condition|(
name|verticalAlignment
operator|&
name|Qt
operator|::
name|AlignTop
condition|)
name|topMargin
operator|=
name|topHeight
expr_stmt|;
block|}
name|QRect
name|frameRect
init|=
name|groupBox
operator|->
name|rect
decl_stmt|;
name|frameRect
operator|.
name|setTop
argument_list|(
name|topMargin
argument_list|)
expr_stmt|;
if|if
condition|(
name|sc
operator|==
name|SC_GroupBoxFrame
condition|)
block|{
name|ret
operator|=
name|frameRect
expr_stmt|;
break|break;
block|}
name|int
name|frameWidth
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
name|groupBox
operator|->
name|features
operator|&
name|QStyleOptionFrame
operator|::
name|Flat
operator|)
operator|==
literal|0
condition|)
name|frameWidth
operator|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_DefaultFrameWidth
argument_list|,
name|groupBox
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|ret
operator|=
name|frameRect
operator|.
name|adjusted
argument_list|(
name|frameWidth
argument_list|,
name|frameWidth
operator|+
name|topHeight
operator|-
name|topMargin
argument_list|,
operator|-
name|frameWidth
argument_list|,
operator|-
name|frameWidth
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|SC_GroupBoxCheckBox
case|:
comment|// FALL THROUGH
case|case
name|SC_GroupBoxLabel
case|:
block|{
name|QFontMetrics
name|fontMetrics
init|=
name|groupBox
operator|->
name|fontMetrics
decl_stmt|;
name|int
name|h
init|=
name|fontMetrics
operator|.
name|height
argument_list|()
decl_stmt|;
name|int
name|tw
init|=
name|fontMetrics
operator|.
name|size
argument_list|(
name|Qt
operator|::
name|TextShowMnemonic
argument_list|,
name|groupBox
operator|->
name|text
operator|+
name|QLatin1Char
argument_list|(
literal|' '
argument_list|)
argument_list|)
operator|.
name|width
argument_list|()
decl_stmt|;
name|int
name|marg
init|=
operator|(
name|groupBox
operator|->
name|features
operator|&
name|QStyleOptionFrame
operator|::
name|Flat
operator|)
condition|?
literal|0
else|:
literal|8
decl_stmt|;
name|ret
operator|=
name|groupBox
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
name|marg
argument_list|,
literal|0
argument_list|,
operator|-
name|marg
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|ret
operator|.
name|setHeight
argument_list|(
name|h
argument_list|)
expr_stmt|;
name|int
name|indicatorWidth
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_IndicatorWidth
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|int
name|indicatorSpace
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_CheckBoxLabelSpacing
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
operator|-
literal|1
decl_stmt|;
name|bool
name|hasCheckBox
init|=
name|groupBox
operator|->
name|subControls
operator|&
name|QStyle
operator|::
name|SC_GroupBoxCheckBox
decl_stmt|;
name|int
name|checkBoxSize
init|=
name|hasCheckBox
condition|?
operator|(
name|indicatorWidth
operator|+
name|indicatorSpace
operator|)
else|:
literal|0
decl_stmt|;
comment|// Adjusted rect for label + indicatorWidth + indicatorSpace
name|QRect
name|totalRect
init|=
name|alignedRect
argument_list|(
name|groupBox
operator|->
name|direction
argument_list|,
name|groupBox
operator|->
name|textAlignment
argument_list|,
name|QSize
argument_list|(
name|tw
operator|+
name|checkBoxSize
argument_list|,
name|h
argument_list|)
argument_list|,
name|ret
argument_list|)
decl_stmt|;
comment|// Adjust totalRect if checkbox is set
if|if
condition|(
name|hasCheckBox
condition|)
block|{
name|bool
name|ltr
init|=
name|groupBox
operator|->
name|direction
operator|==
name|Qt
operator|::
name|LeftToRight
decl_stmt|;
name|int
name|left
init|=
literal|0
decl_stmt|;
comment|// Adjust for check box
if|if
condition|(
name|sc
operator|==
name|SC_GroupBoxCheckBox
condition|)
block|{
name|int
name|indicatorHeight
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_IndicatorHeight
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|left
operator|=
name|ltr
condition|?
name|totalRect
operator|.
name|left
argument_list|()
else|:
operator|(
name|totalRect
operator|.
name|right
argument_list|()
operator|-
name|indicatorWidth
operator|)
expr_stmt|;
name|int
name|top
init|=
name|totalRect
operator|.
name|top
argument_list|()
operator|+
name|qMax
argument_list|(
literal|0
argument_list|,
name|fontMetrics
operator|.
name|height
argument_list|()
operator|-
name|indicatorHeight
argument_list|)
operator|/
literal|2
decl_stmt|;
name|totalRect
operator|.
name|setRect
argument_list|(
name|left
argument_list|,
name|top
argument_list|,
name|indicatorWidth
argument_list|,
name|indicatorHeight
argument_list|)
expr_stmt|;
comment|// Adjust for label
block|}
else|else
block|{
name|left
operator|=
name|ltr
condition|?
operator|(
name|totalRect
operator|.
name|left
argument_list|()
operator|+
name|checkBoxSize
operator|-
literal|2
operator|)
else|:
name|totalRect
operator|.
name|left
argument_list|()
expr_stmt|;
name|totalRect
operator|.
name|setRect
argument_list|(
name|left
argument_list|,
name|totalRect
operator|.
name|top
argument_list|()
argument_list|,
name|totalRect
operator|.
name|width
argument_list|()
operator|-
name|checkBoxSize
argument_list|,
name|totalRect
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|ret
operator|=
name|totalRect
expr_stmt|;
break|break;
block|}
default|default:
break|break;
block|}
block|}
break|break;
block|}
endif|#
directive|endif
comment|// QT_NO_GROUPBOX
ifndef|#
directive|ifndef
name|QT_NO_MDIAREA
case|case
name|CC_MdiControls
case|:
block|{
name|int
name|numSubControls
init|=
literal|0
decl_stmt|;
if|if
condition|(
name|opt
operator|->
name|subControls
operator|&
name|SC_MdiCloseButton
condition|)
operator|++
name|numSubControls
expr_stmt|;
if|if
condition|(
name|opt
operator|->
name|subControls
operator|&
name|SC_MdiMinButton
condition|)
operator|++
name|numSubControls
expr_stmt|;
if|if
condition|(
name|opt
operator|->
name|subControls
operator|&
name|SC_MdiNormalButton
condition|)
operator|++
name|numSubControls
expr_stmt|;
if|if
condition|(
name|numSubControls
operator|==
literal|0
condition|)
break|break;
name|int
name|buttonWidth
init|=
name|opt
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|/
name|numSubControls
operator|-
literal|1
decl_stmt|;
name|int
name|offset
init|=
literal|0
decl_stmt|;
switch|switch
condition|(
name|sc
condition|)
block|{
case|case
name|SC_MdiCloseButton
case|:
comment|// Only one sub control, no offset needed.
if|if
condition|(
name|numSubControls
operator|==
literal|1
condition|)
break|break;
name|offset
operator|+=
name|buttonWidth
operator|+
literal|2
expr_stmt|;
comment|//FALL THROUGH
case|case
name|SC_MdiNormalButton
case|:
comment|// No offset needed if
comment|// 1) There's only one sub control
comment|// 2) We have a close button and a normal button (offset already added in SC_MdiClose)
if|if
condition|(
name|numSubControls
operator|==
literal|1
operator|||
operator|(
name|numSubControls
operator|==
literal|2
operator|&&
operator|!
operator|(
name|opt
operator|->
name|subControls
operator|&
name|SC_MdiMinButton
operator|)
operator|)
condition|)
break|break;
if|if
condition|(
name|opt
operator|->
name|subControls
operator|&
name|SC_MdiNormalButton
condition|)
name|offset
operator|+=
name|buttonWidth
expr_stmt|;
break|break;
default|default:
break|break;
block|}
comment|// Subtract one pixel if we only have one sub control. At this point
comment|// buttonWidth is the actual width + 1 pixel margin, but we don't want the
comment|// margin when there are no other controllers.
if|if
condition|(
name|numSubControls
operator|==
literal|1
condition|)
operator|--
name|buttonWidth
expr_stmt|;
name|ret
operator|=
name|QRect
argument_list|(
name|offset
argument_list|,
literal|0
argument_list|,
name|buttonWidth
argument_list|,
name|opt
operator|->
name|rect
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
break|break;
block|}
endif|#
directive|endif
comment|// QT_NO_MDIAREA
default|default:
name|qWarning
argument_list|(
literal|"QCommonStyle::subControlRect: Case %d not handled"
argument_list|,
name|cc
argument_list|)
expr_stmt|;
block|}
return|return
name|ret
return|;
block|}
end_function
begin_comment
comment|/*! \reimp */
end_comment
begin_function
DECL|function|pixelMetric
name|int
name|QCommonStyle
operator|::
name|pixelMetric
parameter_list|(
name|PixelMetric
name|m
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|opt
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
name|int
name|ret
decl_stmt|;
switch|switch
condition|(
name|m
condition|)
block|{
case|case
name|PM_FocusFrameVMargin
case|:
case|case
name|PM_FocusFrameHMargin
case|:
name|ret
operator|=
literal|2
expr_stmt|;
break|break;
case|case
name|PM_MenuBarVMargin
case|:
case|case
name|PM_MenuBarHMargin
case|:
name|ret
operator|=
literal|0
expr_stmt|;
break|break;
case|case
name|PM_DialogButtonsSeparator
case|:
name|ret
operator|=
name|int
argument_list|(
name|QStyleHelper
operator|::
name|dpiScaled
argument_list|(
literal|5.
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|PM_DialogButtonsButtonWidth
case|:
name|ret
operator|=
name|int
argument_list|(
name|QStyleHelper
operator|::
name|dpiScaled
argument_list|(
literal|70.
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|PM_DialogButtonsButtonHeight
case|:
name|ret
operator|=
name|int
argument_list|(
name|QStyleHelper
operator|::
name|dpiScaled
argument_list|(
literal|30.
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|PM_TitleBarHeight
case|:
block|{
if|if
condition|(
specifier|const
name|QStyleOptionTitleBar
modifier|*
name|tb
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionTitleBar
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
if|if
condition|(
operator|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowType_Mask
operator|)
operator|==
name|Qt
operator|::
name|Tool
condition|)
block|{
name|ret
operator|=
name|qMax
argument_list|(
name|widget
condition|?
name|widget
operator|->
name|fontMetrics
argument_list|()
operator|.
name|height
argument_list|()
else|:
name|opt
operator|->
name|fontMetrics
operator|.
name|height
argument_list|()
argument_list|,
literal|16
argument_list|)
expr_stmt|;
ifndef|#
directive|ifndef
name|QT_NO_DOCKWIDGET
block|}
elseif|else
if|if
condition|(
name|qobject_cast
argument_list|<
specifier|const
name|QDockWidget
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
condition|)
block|{
name|ret
operator|=
name|qMax
argument_list|(
name|widget
operator|->
name|fontMetrics
argument_list|()
operator|.
name|height
argument_list|()
argument_list|,
name|int
argument_list|(
name|QStyleHelper
operator|::
name|dpiScaled
argument_list|(
literal|13
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
endif|#
directive|endif
block|}
else|else
block|{
name|ret
operator|=
name|qMax
argument_list|(
name|widget
condition|?
name|widget
operator|->
name|fontMetrics
argument_list|()
operator|.
name|height
argument_list|()
else|:
name|opt
operator|->
name|fontMetrics
operator|.
name|height
argument_list|()
argument_list|,
literal|18
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|ret
operator|=
name|int
argument_list|(
name|QStyleHelper
operator|::
name|dpiScaled
argument_list|(
literal|18.
argument_list|)
argument_list|)
expr_stmt|;
block|}
break|break;
block|}
case|case
name|PM_ScrollBarSliderMin
case|:
name|ret
operator|=
name|int
argument_list|(
name|QStyleHelper
operator|::
name|dpiScaled
argument_list|(
literal|9.
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|PM_ButtonMargin
case|:
name|ret
operator|=
name|int
argument_list|(
name|QStyleHelper
operator|::
name|dpiScaled
argument_list|(
literal|6.
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|PM_DockWidgetTitleBarButtonMargin
case|:
name|ret
operator|=
name|int
argument_list|(
name|QStyleHelper
operator|::
name|dpiScaled
argument_list|(
literal|2.
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|PM_ButtonDefaultIndicator
case|:
name|ret
operator|=
literal|0
expr_stmt|;
break|break;
case|case
name|PM_MenuButtonIndicator
case|:
name|ret
operator|=
name|int
argument_list|(
name|QStyleHelper
operator|::
name|dpiScaled
argument_list|(
literal|12.
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|PM_ButtonShiftHorizontal
case|:
case|case
name|PM_ButtonShiftVertical
case|:
case|case
name|PM_DefaultFrameWidth
case|:
name|ret
operator|=
literal|2
expr_stmt|;
break|break;
case|case
name|PM_ComboBoxFrameWidth
case|:
case|case
name|PM_SpinBoxFrameWidth
case|:
case|case
name|PM_MenuPanelWidth
case|:
case|case
name|PM_TabBarBaseOverlap
case|:
case|case
name|PM_TabBarBaseHeight
case|:
name|ret
operator|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_DefaultFrameWidth
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
expr_stmt|;
break|break;
case|case
name|PM_MdiSubWindowFrameWidth
case|:
name|ret
operator|=
name|int
argument_list|(
name|QStyleHelper
operator|::
name|dpiScaled
argument_list|(
literal|4.
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|PM_MdiSubWindowMinimizedWidth
case|:
name|ret
operator|=
name|int
argument_list|(
name|QStyleHelper
operator|::
name|dpiScaled
argument_list|(
literal|196.
argument_list|)
argument_list|)
expr_stmt|;
break|break;
ifndef|#
directive|ifndef
name|QT_NO_SCROLLBAR
case|case
name|PM_ScrollBarExtent
case|:
if|if
condition|(
specifier|const
name|QStyleOptionSlider
modifier|*
name|sb
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSlider
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|int
name|s
init|=
name|sb
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
condition|?
name|QApplication
operator|::
name|globalStrut
argument_list|()
operator|.
name|height
argument_list|()
else|:
name|QApplication
operator|::
name|globalStrut
argument_list|()
operator|.
name|width
argument_list|()
decl_stmt|;
name|ret
operator|=
name|qMax
argument_list|(
literal|16
argument_list|,
name|s
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|ret
operator|=
name|int
argument_list|(
name|QStyleHelper
operator|::
name|dpiScaled
argument_list|(
literal|16.
argument_list|)
argument_list|)
expr_stmt|;
block|}
break|break;
endif|#
directive|endif
case|case
name|PM_MaximumDragDistance
case|:
name|ret
operator|=
name|QGuiApplicationPrivate
operator|::
name|platformTheme
argument_list|()
operator|->
name|themeHint
argument_list|(
name|QPlatformTheme
operator|::
name|MaximumScrollBarDragDistance
argument_list|)
operator|.
name|toInt
argument_list|()
expr_stmt|;
break|break;
ifndef|#
directive|ifndef
name|QT_NO_SLIDER
case|case
name|PM_SliderThickness
case|:
name|ret
operator|=
name|int
argument_list|(
name|QStyleHelper
operator|::
name|dpiScaled
argument_list|(
literal|16.
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|PM_SliderTickmarkOffset
case|:
if|if
condition|(
specifier|const
name|QStyleOptionSlider
modifier|*
name|sl
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSlider
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|int
name|space
init|=
operator|(
name|sl
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
operator|)
condition|?
name|sl
operator|->
name|rect
operator|.
name|height
argument_list|()
else|:
name|sl
operator|->
name|rect
operator|.
name|width
argument_list|()
decl_stmt|;
name|int
name|thickness
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_SliderControlThickness
argument_list|,
name|sl
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|int
name|ticks
init|=
name|sl
operator|->
name|tickPosition
decl_stmt|;
if|if
condition|(
name|ticks
operator|==
name|QSlider
operator|::
name|TicksBothSides
condition|)
name|ret
operator|=
operator|(
name|space
operator|-
name|thickness
operator|)
operator|/
literal|2
expr_stmt|;
elseif|else
if|if
condition|(
name|ticks
operator|==
name|QSlider
operator|::
name|TicksAbove
condition|)
name|ret
operator|=
name|space
operator|-
name|thickness
expr_stmt|;
else|else
name|ret
operator|=
literal|0
expr_stmt|;
block|}
else|else
block|{
name|ret
operator|=
literal|0
expr_stmt|;
block|}
break|break;
case|case
name|PM_SliderSpaceAvailable
case|:
if|if
condition|(
specifier|const
name|QStyleOptionSlider
modifier|*
name|sl
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSlider
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
if|if
condition|(
name|sl
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
name|ret
operator|=
name|sl
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|-
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_SliderLength
argument_list|,
name|sl
argument_list|,
name|widget
argument_list|)
expr_stmt|;
else|else
name|ret
operator|=
name|sl
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_SliderLength
argument_list|,
name|sl
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|ret
operator|=
literal|0
expr_stmt|;
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_SLIDER
ifndef|#
directive|ifndef
name|QT_NO_DOCKWIDGET
case|case
name|PM_DockWidgetSeparatorExtent
case|:
name|ret
operator|=
name|int
argument_list|(
name|QStyleHelper
operator|::
name|dpiScaled
argument_list|(
literal|6.
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|PM_DockWidgetHandleExtent
case|:
name|ret
operator|=
name|int
argument_list|(
name|QStyleHelper
operator|::
name|dpiScaled
argument_list|(
literal|8.
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|PM_DockWidgetTitleMargin
case|:
name|ret
operator|=
literal|0
expr_stmt|;
break|break;
case|case
name|PM_DockWidgetFrameWidth
case|:
name|ret
operator|=
literal|1
expr_stmt|;
break|break;
endif|#
directive|endif
comment|// QT_NO_DOCKWIDGET
case|case
name|PM_SpinBoxSliderHeight
case|:
case|case
name|PM_MenuBarPanelWidth
case|:
name|ret
operator|=
literal|2
expr_stmt|;
break|break;
case|case
name|PM_MenuBarItemSpacing
case|:
name|ret
operator|=
literal|0
expr_stmt|;
break|break;
ifndef|#
directive|ifndef
name|QT_NO_TOOLBAR
case|case
name|PM_ToolBarFrameWidth
case|:
name|ret
operator|=
literal|1
expr_stmt|;
break|break;
case|case
name|PM_ToolBarItemMargin
case|:
name|ret
operator|=
literal|0
expr_stmt|;
break|break;
case|case
name|PM_ToolBarItemSpacing
case|:
name|ret
operator|=
name|int
argument_list|(
name|QStyleHelper
operator|::
name|dpiScaled
argument_list|(
literal|4.
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|PM_ToolBarHandleExtent
case|:
name|ret
operator|=
name|int
argument_list|(
name|QStyleHelper
operator|::
name|dpiScaled
argument_list|(
literal|8.
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|PM_ToolBarSeparatorExtent
case|:
name|ret
operator|=
name|int
argument_list|(
name|QStyleHelper
operator|::
name|dpiScaled
argument_list|(
literal|6.
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|PM_ToolBarExtensionExtent
case|:
name|ret
operator|=
name|int
argument_list|(
name|QStyleHelper
operator|::
name|dpiScaled
argument_list|(
literal|12.
argument_list|)
argument_list|)
expr_stmt|;
break|break;
endif|#
directive|endif
comment|// QT_NO_TOOLBAR
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
case|case
name|PM_TabBarTabOverlap
case|:
name|ret
operator|=
literal|3
expr_stmt|;
break|break;
case|case
name|PM_TabBarTabHSpace
case|:
name|ret
operator|=
name|int
argument_list|(
name|QStyleHelper
operator|::
name|dpiScaled
argument_list|(
literal|24.
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|PM_TabBarTabShiftHorizontal
case|:
name|ret
operator|=
literal|0
expr_stmt|;
break|break;
case|case
name|PM_TabBarTabShiftVertical
case|:
name|ret
operator|=
literal|2
expr_stmt|;
break|break;
case|case
name|PM_TabBarTabVSpace
case|:
block|{
specifier|const
name|QStyleOptionTab
modifier|*
name|tb
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionTab
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
decl_stmt|;
if|if
condition|(
name|tb
operator|&&
operator|(
name|tb
operator|->
name|shape
operator|==
name|QTabBar
operator|::
name|RoundedNorth
operator|||
name|tb
operator|->
name|shape
operator|==
name|QTabBar
operator|::
name|RoundedSouth
operator|||
name|tb
operator|->
name|shape
operator|==
name|QTabBar
operator|::
name|RoundedWest
operator|||
name|tb
operator|->
name|shape
operator|==
name|QTabBar
operator|::
name|RoundedEast
operator|)
condition|)
name|ret
operator|=
literal|8
expr_stmt|;
elseif|else
if|if
condition|(
name|tb
operator|&&
operator|(
name|tb
operator|->
name|shape
operator|==
name|QTabBar
operator|::
name|TriangularWest
operator|||
name|tb
operator|->
name|shape
operator|==
name|QTabBar
operator|::
name|TriangularEast
operator|)
condition|)
name|ret
operator|=
literal|3
expr_stmt|;
else|else
name|ret
operator|=
literal|2
expr_stmt|;
break|break;
block|}
endif|#
directive|endif
case|case
name|PM_ProgressBarChunkWidth
case|:
name|ret
operator|=
literal|9
expr_stmt|;
break|break;
case|case
name|PM_IndicatorWidth
case|:
name|ret
operator|=
name|int
argument_list|(
name|QStyleHelper
operator|::
name|dpiScaled
argument_list|(
literal|13.
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|PM_IndicatorHeight
case|:
name|ret
operator|=
name|int
argument_list|(
name|QStyleHelper
operator|::
name|dpiScaled
argument_list|(
literal|13.
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|PM_ExclusiveIndicatorWidth
case|:
name|ret
operator|=
name|int
argument_list|(
name|QStyleHelper
operator|::
name|dpiScaled
argument_list|(
literal|12.
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|PM_ExclusiveIndicatorHeight
case|:
name|ret
operator|=
name|int
argument_list|(
name|QStyleHelper
operator|::
name|dpiScaled
argument_list|(
literal|12.
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|PM_MenuTearoffHeight
case|:
name|ret
operator|=
name|int
argument_list|(
name|QStyleHelper
operator|::
name|dpiScaled
argument_list|(
literal|10.
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|PM_MenuScrollerHeight
case|:
name|ret
operator|=
name|int
argument_list|(
name|QStyleHelper
operator|::
name|dpiScaled
argument_list|(
literal|10.
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|PM_MenuDesktopFrameWidth
case|:
case|case
name|PM_MenuHMargin
case|:
case|case
name|PM_MenuVMargin
case|:
name|ret
operator|=
literal|0
expr_stmt|;
break|break;
case|case
name|PM_HeaderMargin
case|:
name|ret
operator|=
name|int
argument_list|(
name|QStyleHelper
operator|::
name|dpiScaled
argument_list|(
literal|4.
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|PM_HeaderMarkSize
case|:
name|ret
operator|=
name|int
argument_list|(
name|QStyleHelper
operator|::
name|dpiScaled
argument_list|(
literal|16.
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|PM_HeaderGripMargin
case|:
name|ret
operator|=
name|int
argument_list|(
name|QStyleHelper
operator|::
name|dpiScaled
argument_list|(
literal|4.
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|PM_HeaderDefaultSectionSizeHorizontal
case|:
name|ret
operator|=
name|int
argument_list|(
name|QStyleHelper
operator|::
name|dpiScaled
argument_list|(
literal|100.
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|PM_HeaderDefaultSectionSizeVertical
case|:
name|ret
operator|=
name|int
argument_list|(
name|QStyleHelper
operator|::
name|dpiScaled
argument_list|(
literal|30.
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|PM_TabBarScrollButtonWidth
case|:
name|ret
operator|=
name|int
argument_list|(
name|QStyleHelper
operator|::
name|dpiScaled
argument_list|(
literal|16.
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|PM_LayoutLeftMargin
case|:
case|case
name|PM_LayoutTopMargin
case|:
case|case
name|PM_LayoutRightMargin
case|:
case|case
name|PM_LayoutBottomMargin
case|:
block|{
name|bool
name|isWindow
init|=
literal|false
decl_stmt|;
if|if
condition|(
name|opt
condition|)
block|{
name|isWindow
operator|=
operator|(
name|opt
operator|->
name|state
operator|&
name|State_Window
operator|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|widget
condition|)
block|{
name|isWindow
operator|=
name|widget
operator|->
name|isWindow
argument_list|()
expr_stmt|;
block|}
name|ret
operator|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|isWindow
condition|?
name|PM_DefaultTopLevelMargin
else|:
name|PM_DefaultChildMargin
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|PM_LayoutHorizontalSpacing
case|:
case|case
name|PM_LayoutVerticalSpacing
case|:
name|ret
operator|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_DefaultLayoutSpacing
argument_list|)
expr_stmt|;
break|break;
case|case
name|PM_DefaultTopLevelMargin
case|:
name|ret
operator|=
name|int
argument_list|(
name|QStyleHelper
operator|::
name|dpiScaled
argument_list|(
literal|11.
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|PM_DefaultChildMargin
case|:
name|ret
operator|=
name|int
argument_list|(
name|QStyleHelper
operator|::
name|dpiScaled
argument_list|(
literal|9.
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|PM_DefaultLayoutSpacing
case|:
name|ret
operator|=
name|int
argument_list|(
name|QStyleHelper
operator|::
name|dpiScaled
argument_list|(
literal|6.
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|PM_ToolBarIconSize
case|:
name|ret
operator|=
literal|0
expr_stmt|;
if|if
condition|(
specifier|const
name|QPlatformTheme
modifier|*
name|theme
init|=
name|QGuiApplicationPrivate
operator|::
name|platformTheme
argument_list|()
condition|)
name|ret
operator|=
name|theme
operator|->
name|themeHint
argument_list|(
name|QPlatformTheme
operator|::
name|ToolBarIconSize
argument_list|)
operator|.
name|toInt
argument_list|()
expr_stmt|;
if|if
condition|(
name|ret
operator|<=
literal|0
condition|)
name|ret
operator|=
name|int
argument_list|(
name|QStyleHelper
operator|::
name|dpiScaled
argument_list|(
literal|24.
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|PM_TabBarIconSize
case|:
case|case
name|PM_ListViewIconSize
case|:
name|ret
operator|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_SmallIconSize
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
expr_stmt|;
break|break;
case|case
name|PM_ButtonIconSize
case|:
case|case
name|PM_SmallIconSize
case|:
name|ret
operator|=
name|int
argument_list|(
name|QStyleHelper
operator|::
name|dpiScaled
argument_list|(
literal|16.
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|PM_IconViewIconSize
case|:
name|ret
operator|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_LargeIconSize
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
expr_stmt|;
break|break;
case|case
name|PM_LargeIconSize
case|:
name|ret
operator|=
name|int
argument_list|(
name|QStyleHelper
operator|::
name|dpiScaled
argument_list|(
literal|32.
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|PM_ToolTipLabelFrameWidth
case|:
name|ret
operator|=
literal|1
expr_stmt|;
break|break;
case|case
name|PM_CheckBoxLabelSpacing
case|:
case|case
name|PM_RadioButtonLabelSpacing
case|:
name|ret
operator|=
name|int
argument_list|(
name|QStyleHelper
operator|::
name|dpiScaled
argument_list|(
literal|6.
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|PM_SizeGripSize
case|:
name|ret
operator|=
name|int
argument_list|(
name|QStyleHelper
operator|::
name|dpiScaled
argument_list|(
literal|13.
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|PM_MessageBoxIconSize
case|:
ifdef|#
directive|ifdef
name|Q_OS_MAC
if|if
condition|(
name|QApplication
operator|::
name|desktopSettingsAware
argument_list|()
condition|)
block|{
name|ret
operator|=
literal|64
expr_stmt|;
comment|// No DPI scaling, it's handled elsewhere.
block|}
else|else
endif|#
directive|endif
block|{
name|ret
operator|=
name|int
argument_list|(
name|QStyleHelper
operator|::
name|dpiScaled
argument_list|(
literal|32.
argument_list|)
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|PM_TextCursorWidth
case|:
name|ret
operator|=
name|QGuiApplicationPrivate
operator|::
name|platformTheme
argument_list|()
operator|->
name|themeHint
argument_list|(
name|QPlatformTheme
operator|::
name|TextCursorWidth
argument_list|)
operator|.
name|toInt
argument_list|()
expr_stmt|;
break|break;
case|case
name|PM_TabBar_ScrollButtonOverlap
case|:
name|ret
operator|=
literal|1
expr_stmt|;
break|break;
case|case
name|PM_TabCloseIndicatorWidth
case|:
case|case
name|PM_TabCloseIndicatorHeight
case|:
name|ret
operator|=
name|int
argument_list|(
name|QStyleHelper
operator|::
name|dpiScaled
argument_list|(
literal|16.
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|PM_ScrollView_ScrollBarSpacing
case|:
name|ret
operator|=
literal|2
operator|*
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_DefaultFrameWidth
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
expr_stmt|;
break|break;
case|case
name|PM_ScrollView_ScrollBarOverlap
case|:
name|ret
operator|=
literal|0
expr_stmt|;
break|break;
case|case
name|PM_SubMenuOverlap
case|:
name|ret
operator|=
operator|-
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|QStyle
operator|::
name|PM_MenuPanelWidth
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
expr_stmt|;
break|break;
case|case
name|PM_TreeViewIndentation
case|:
name|ret
operator|=
name|int
argument_list|(
name|QStyleHelper
operator|::
name|dpiScaled
argument_list|(
literal|20.
argument_list|)
argument_list|)
expr_stmt|;
break|break;
default|default:
name|ret
operator|=
literal|0
expr_stmt|;
break|break;
block|}
return|return
name|ret
return|;
block|}
end_function
begin_comment
comment|/*!     \reimp */
end_comment
begin_function
DECL|function|sizeFromContents
name|QSize
name|QCommonStyle
operator|::
name|sizeFromContents
parameter_list|(
name|ContentsType
name|ct
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|opt
parameter_list|,
specifier|const
name|QSize
modifier|&
name|csz
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
name|Q_D
argument_list|(
specifier|const
name|QCommonStyle
argument_list|)
expr_stmt|;
name|QSize
name|sz
argument_list|(
name|csz
argument_list|)
decl_stmt|;
switch|switch
condition|(
name|ct
condition|)
block|{
case|case
name|CT_PushButton
case|:
if|if
condition|(
specifier|const
name|QStyleOptionButton
modifier|*
name|btn
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionButton
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|int
name|w
init|=
name|csz
operator|.
name|width
argument_list|()
decl_stmt|,
name|h
init|=
name|csz
operator|.
name|height
argument_list|()
decl_stmt|,
name|bm
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_ButtonMargin
argument_list|,
name|btn
argument_list|,
name|widget
argument_list|)
decl_stmt|,
name|fw
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_DefaultFrameWidth
argument_list|,
name|btn
argument_list|,
name|widget
argument_list|)
operator|*
literal|2
decl_stmt|;
name|w
operator|+=
name|bm
operator|+
name|fw
expr_stmt|;
name|h
operator|+=
name|bm
operator|+
name|fw
expr_stmt|;
if|if
condition|(
name|btn
operator|->
name|features
operator|&
name|QStyleOptionButton
operator|::
name|AutoDefaultButton
condition|)
block|{
name|int
name|dbw
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_ButtonDefaultIndicator
argument_list|,
name|btn
argument_list|,
name|widget
argument_list|)
operator|*
literal|2
decl_stmt|;
name|w
operator|+=
name|dbw
expr_stmt|;
name|h
operator|+=
name|dbw
expr_stmt|;
block|}
name|sz
operator|=
name|QSize
argument_list|(
name|w
argument_list|,
name|h
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|CT_RadioButton
case|:
case|case
name|CT_CheckBox
case|:
if|if
condition|(
specifier|const
name|QStyleOptionButton
modifier|*
name|btn
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionButton
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|bool
name|isRadio
init|=
operator|(
name|ct
operator|==
name|CT_RadioButton
operator|)
decl_stmt|;
name|int
name|w
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|isRadio
condition|?
name|PM_ExclusiveIndicatorWidth
else|:
name|PM_IndicatorWidth
argument_list|,
name|btn
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|int
name|h
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|isRadio
condition|?
name|PM_ExclusiveIndicatorHeight
else|:
name|PM_IndicatorHeight
argument_list|,
name|btn
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|int
name|margins
init|=
literal|0
decl_stmt|;
comment|// we add 4 pixels for label margins
if|if
condition|(
operator|!
name|btn
operator|->
name|icon
operator|.
name|isNull
argument_list|()
operator|||
operator|!
name|btn
operator|->
name|text
operator|.
name|isEmpty
argument_list|()
condition|)
name|margins
operator|=
literal|4
operator|+
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|isRadio
condition|?
name|PM_RadioButtonLabelSpacing
else|:
name|PM_CheckBoxLabelSpacing
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|sz
operator|+=
name|QSize
argument_list|(
name|w
operator|+
name|margins
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|sz
operator|.
name|setHeight
argument_list|(
name|qMax
argument_list|(
name|sz
operator|.
name|height
argument_list|()
argument_list|,
name|h
argument_list|)
argument_list|)
expr_stmt|;
block|}
break|break;
ifndef|#
directive|ifndef
name|QT_NO_MENU
case|case
name|CT_MenuItem
case|:
if|if
condition|(
specifier|const
name|QStyleOptionMenuItem
modifier|*
name|mi
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionMenuItem
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|bool
name|checkable
init|=
name|mi
operator|->
name|menuHasCheckableItems
decl_stmt|;
name|int
name|maxpmw
init|=
name|mi
operator|->
name|maxIconWidth
decl_stmt|;
name|int
name|w
init|=
name|sz
operator|.
name|width
argument_list|()
decl_stmt|,
name|h
init|=
name|sz
operator|.
name|height
argument_list|()
decl_stmt|;
if|if
condition|(
name|mi
operator|->
name|menuItemType
operator|==
name|QStyleOptionMenuItem
operator|::
name|Separator
condition|)
block|{
name|w
operator|=
literal|10
expr_stmt|;
name|h
operator|=
literal|2
expr_stmt|;
block|}
else|else
block|{
name|h
operator|=
name|mi
operator|->
name|fontMetrics
operator|.
name|height
argument_list|()
operator|+
literal|8
expr_stmt|;
if|if
condition|(
operator|!
name|mi
operator|->
name|icon
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|int
name|iconExtent
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_SmallIconSize
argument_list|)
decl_stmt|;
name|h
operator|=
name|qMax
argument_list|(
name|h
argument_list|,
name|mi
operator|->
name|icon
operator|.
name|actualSize
argument_list|(
name|QSize
argument_list|(
name|iconExtent
argument_list|,
name|iconExtent
argument_list|)
argument_list|)
operator|.
name|height
argument_list|()
operator|+
literal|4
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|mi
operator|->
name|text
operator|.
name|contains
argument_list|(
name|QLatin1Char
argument_list|(
literal|'\t'
argument_list|)
argument_list|)
condition|)
name|w
operator|+=
literal|12
expr_stmt|;
if|if
condition|(
name|maxpmw
operator|>
literal|0
condition|)
name|w
operator|+=
name|maxpmw
operator|+
literal|6
expr_stmt|;
if|if
condition|(
name|checkable
operator|&&
name|maxpmw
operator|<
literal|20
condition|)
name|w
operator|+=
literal|20
operator|-
name|maxpmw
expr_stmt|;
if|if
condition|(
name|checkable
operator|||
name|maxpmw
operator|>
literal|0
condition|)
name|w
operator|+=
literal|2
expr_stmt|;
name|w
operator|+=
literal|12
expr_stmt|;
name|sz
operator|=
name|QSize
argument_list|(
name|w
argument_list|,
name|h
argument_list|)
expr_stmt|;
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_MENU
ifndef|#
directive|ifndef
name|QT_NO_TOOLBUTTON
case|case
name|CT_ToolButton
case|:
name|sz
operator|=
name|QSize
argument_list|(
name|sz
operator|.
name|width
argument_list|()
operator|+
literal|6
argument_list|,
name|sz
operator|.
name|height
argument_list|()
operator|+
literal|5
argument_list|)
expr_stmt|;
break|break;
endif|#
directive|endif
comment|// QT_NO_TOOLBUTTON
ifndef|#
directive|ifndef
name|QT_NO_COMBOBOX
case|case
name|CT_ComboBox
case|:
if|if
condition|(
specifier|const
name|QStyleOptionComboBox
modifier|*
name|cmb
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionComboBox
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|int
name|fw
init|=
name|cmb
operator|->
name|frame
condition|?
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_ComboBoxFrameWidth
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
operator|*
literal|2
else|:
literal|0
decl_stmt|;
specifier|const
name|int
name|textMargins
init|=
literal|2
operator|*
operator|(
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_FocusFrameHMargin
argument_list|)
operator|+
literal|1
operator|)
decl_stmt|;
comment|// QItemDelegate::sizeHint expands the textMargins two times, thus the 2*textMargins...
name|int
name|other
init|=
name|qMax
argument_list|(
literal|23
argument_list|,
literal|2
operator|*
name|textMargins
operator|+
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|QStyle
operator|::
name|PM_ScrollBarExtent
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
argument_list|)
decl_stmt|;
name|sz
operator|=
name|QSize
argument_list|(
name|sz
operator|.
name|width
argument_list|()
operator|+
name|fw
operator|+
name|other
argument_list|,
name|sz
operator|.
name|height
argument_list|()
operator|+
name|fw
argument_list|)
expr_stmt|;
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_COMBOBOX
case|case
name|CT_HeaderSection
case|:
if|if
condition|(
specifier|const
name|QStyleOptionHeader
modifier|*
name|hdr
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionHeader
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|bool
name|nullIcon
init|=
name|hdr
operator|->
name|icon
operator|.
name|isNull
argument_list|()
decl_stmt|;
name|int
name|margin
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|QStyle
operator|::
name|PM_HeaderMargin
argument_list|,
name|hdr
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|int
name|iconSize
init|=
name|nullIcon
condition|?
literal|0
else|:
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|QStyle
operator|::
name|PM_SmallIconSize
argument_list|,
name|hdr
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|QSize
name|txt
init|=
name|hdr
operator|->
name|fontMetrics
operator|.
name|size
argument_list|(
literal|0
argument_list|,
name|hdr
operator|->
name|text
argument_list|)
decl_stmt|;
name|sz
operator|.
name|setHeight
argument_list|(
name|margin
operator|+
name|qMax
argument_list|(
name|iconSize
argument_list|,
name|txt
operator|.
name|height
argument_list|()
argument_list|)
operator|+
name|margin
argument_list|)
expr_stmt|;
name|sz
operator|.
name|setWidth
argument_list|(
operator|(
name|nullIcon
condition|?
literal|0
else|:
name|margin
operator|)
operator|+
name|iconSize
operator|+
operator|(
name|hdr
operator|->
name|text
operator|.
name|isNull
argument_list|()
condition|?
literal|0
else|:
name|margin
operator|)
operator|+
name|txt
operator|.
name|width
argument_list|()
operator|+
name|margin
argument_list|)
expr_stmt|;
if|if
condition|(
name|hdr
operator|->
name|sortIndicator
operator|!=
name|QStyleOptionHeader
operator|::
name|None
condition|)
block|{
name|int
name|margin
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|QStyle
operator|::
name|PM_HeaderMargin
argument_list|,
name|hdr
argument_list|,
name|widget
argument_list|)
decl_stmt|;
if|if
condition|(
name|hdr
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
name|sz
operator|.
name|rwidth
argument_list|()
operator|+=
name|sz
operator|.
name|height
argument_list|()
operator|+
name|margin
expr_stmt|;
else|else
name|sz
operator|.
name|rheight
argument_list|()
operator|+=
name|sz
operator|.
name|width
argument_list|()
operator|+
name|margin
expr_stmt|;
block|}
block|}
break|break;
case|case
name|CT_TabWidget
case|:
name|sz
operator|+=
name|QSize
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|)
expr_stmt|;
break|break;
case|case
name|CT_LineEdit
case|:
if|if
condition|(
specifier|const
name|QStyleOptionFrame
modifier|*
name|f
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionFrame
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
name|sz
operator|+=
name|QSize
argument_list|(
literal|2
operator|*
name|f
operator|->
name|lineWidth
argument_list|,
literal|2
operator|*
name|f
operator|->
name|lineWidth
argument_list|)
expr_stmt|;
break|break;
ifndef|#
directive|ifndef
name|QT_NO_GROUPBOX
case|case
name|CT_GroupBox
case|:
if|if
condition|(
specifier|const
name|QGroupBox
modifier|*
name|grb
init|=
cast|static_cast
argument_list|<
specifier|const
name|QGroupBox
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
condition|)
name|sz
operator|+=
name|QSize
argument_list|(
operator|!
name|grb
operator|->
name|isFlat
argument_list|()
condition|?
literal|16
else|:
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
break|break;
endif|#
directive|endif
comment|// QT_NO_GROUPBOX
case|case
name|CT_MdiControls
case|:
if|if
condition|(
specifier|const
name|QStyleOptionComplex
modifier|*
name|styleOpt
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionComplex
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|int
name|width
init|=
literal|1
decl_stmt|;
if|if
condition|(
name|styleOpt
operator|->
name|subControls
operator|&
name|SC_MdiMinButton
condition|)
name|width
operator|+=
literal|16
operator|+
literal|1
expr_stmt|;
if|if
condition|(
name|styleOpt
operator|->
name|subControls
operator|&
name|SC_MdiNormalButton
condition|)
name|width
operator|+=
literal|16
operator|+
literal|1
expr_stmt|;
if|if
condition|(
name|styleOpt
operator|->
name|subControls
operator|&
name|SC_MdiCloseButton
condition|)
name|width
operator|+=
literal|16
operator|+
literal|1
expr_stmt|;
name|sz
operator|=
name|QSize
argument_list|(
name|width
argument_list|,
literal|16
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|sz
operator|=
name|QSize
argument_list|(
literal|52
argument_list|,
literal|16
argument_list|)
expr_stmt|;
block|}
break|break;
ifndef|#
directive|ifndef
name|QT_NO_ITEMVIEWS
case|case
name|CT_ItemViewItem
case|:
if|if
condition|(
specifier|const
name|QStyleOptionViewItem
modifier|*
name|vopt
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionViewItem
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|QRect
name|decorationRect
decl_stmt|,
name|displayRect
decl_stmt|,
name|checkRect
decl_stmt|;
name|d
operator|->
name|viewItemLayout
argument_list|(
name|vopt
argument_list|,
operator|&
name|checkRect
argument_list|,
operator|&
name|decorationRect
argument_list|,
operator|&
name|displayRect
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|sz
operator|=
operator|(
name|decorationRect
operator||
name|displayRect
operator||
name|checkRect
operator|)
operator|.
name|size
argument_list|()
expr_stmt|;
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_ITEMVIEWS
ifndef|#
directive|ifndef
name|QT_NO_SPINBOX
case|case
name|CT_SpinBox
case|:
if|if
condition|(
specifier|const
name|QStyleOptionSpinBox
modifier|*
name|vopt
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSpinBox
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
comment|// Add button + frame widths
name|int
name|buttonWidth
init|=
literal|20
decl_stmt|;
name|int
name|fw
init|=
name|vopt
operator|->
name|frame
condition|?
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_SpinBoxFrameWidth
argument_list|,
name|vopt
argument_list|,
name|widget
argument_list|)
else|:
literal|0
decl_stmt|;
name|sz
operator|+=
name|QSize
argument_list|(
name|buttonWidth
operator|+
literal|2
operator|*
name|fw
argument_list|,
literal|2
operator|*
name|fw
argument_list|)
expr_stmt|;
block|}
break|break;
endif|#
directive|endif
case|case
name|CT_ScrollBar
case|:
case|case
name|CT_MenuBar
case|:
case|case
name|CT_Menu
case|:
case|case
name|CT_MenuBarItem
case|:
case|case
name|CT_Slider
case|:
case|case
name|CT_ProgressBar
case|:
case|case
name|CT_TabBarTab
case|:
comment|// just return the contentsSize for now
comment|// fall through intended
default|default:
break|break;
block|}
return|return
name|sz
return|;
block|}
end_function
begin_comment
comment|/*! \reimp */
end_comment
begin_function
DECL|function|styleHint
name|int
name|QCommonStyle
operator|::
name|styleHint
parameter_list|(
name|StyleHint
name|sh
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|opt
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|,
name|QStyleHintReturn
modifier|*
name|hret
parameter_list|)
specifier|const
block|{
name|int
name|ret
init|=
literal|0
decl_stmt|;
switch|switch
condition|(
name|sh
condition|)
block|{
case|case
name|SH_Menu_KeyboardSearch
case|:
name|ret
operator|=
literal|false
expr_stmt|;
break|break;
case|case
name|SH_Slider_AbsoluteSetButtons
case|:
name|ret
operator|=
name|Qt
operator|::
name|MidButton
expr_stmt|;
break|break;
case|case
name|SH_Slider_PageSetButtons
case|:
name|ret
operator|=
name|Qt
operator|::
name|LeftButton
expr_stmt|;
break|break;
case|case
name|SH_ScrollBar_ContextMenu
case|:
name|ret
operator|=
literal|true
expr_stmt|;
break|break;
case|case
name|SH_DialogButtons_DefaultButton
case|:
comment|// This value not used anywhere.
name|ret
operator|=
name|QDialogButtonBox
operator|::
name|AcceptRole
expr_stmt|;
break|break;
ifndef|#
directive|ifndef
name|QT_NO_GROUPBOX
case|case
name|SH_GroupBox_TextLabelVerticalAlignment
case|:
name|ret
operator|=
name|Qt
operator|::
name|AlignVCenter
expr_stmt|;
break|break;
case|case
name|SH_GroupBox_TextLabelColor
case|:
name|ret
operator|=
name|opt
condition|?
name|int
argument_list|(
name|opt
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Text
argument_list|)
operator|.
name|rgba
argument_list|()
argument_list|)
else|:
literal|0
expr_stmt|;
break|break;
endif|#
directive|endif
comment|// QT_NO_GROUPBOX
case|case
name|SH_ListViewExpand_SelectMouseType
case|:
case|case
name|SH_TabBar_SelectMouseType
case|:
name|ret
operator|=
name|QEvent
operator|::
name|MouseButtonPress
expr_stmt|;
break|break;
case|case
name|SH_TabBar_Alignment
case|:
name|ret
operator|=
name|Qt
operator|::
name|AlignLeft
expr_stmt|;
break|break;
case|case
name|SH_Header_ArrowAlignment
case|:
name|ret
operator|=
name|Qt
operator|::
name|AlignRight
operator||
name|Qt
operator|::
name|AlignVCenter
expr_stmt|;
break|break;
case|case
name|SH_TitleBar_AutoRaise
case|:
name|ret
operator|=
literal|false
expr_stmt|;
break|break;
case|case
name|SH_Menu_SubMenuPopupDelay
case|:
name|ret
operator|=
literal|256
expr_stmt|;
break|break;
case|case
name|SH_Menu_SloppySubMenus
case|:
name|ret
operator|=
literal|true
expr_stmt|;
break|break;
case|case
name|SH_Menu_SubMenuUniDirection
case|:
name|ret
operator|=
literal|false
expr_stmt|;
break|break;
case|case
name|SH_Menu_SubMenuUniDirectionFailCount
case|:
name|ret
operator|=
literal|1
expr_stmt|;
break|break;
case|case
name|SH_Menu_SubMenuSloppySelectOtherActions
case|:
name|ret
operator|=
literal|true
expr_stmt|;
break|break;
case|case
name|SH_Menu_SubMenuSloppyCloseTimeout
case|:
name|ret
operator|=
literal|1000
expr_stmt|;
break|break;
case|case
name|SH_Menu_SubMenuResetWhenReenteringParent
case|:
name|ret
operator|=
literal|false
expr_stmt|;
break|break;
case|case
name|SH_Menu_SubMenuDontStartSloppyOnLeave
case|:
name|ret
operator|=
literal|false
expr_stmt|;
break|break;
case|case
name|SH_ProgressDialog_TextLabelAlignment
case|:
name|ret
operator|=
name|Qt
operator|::
name|AlignCenter
expr_stmt|;
break|break;
case|case
name|SH_BlinkCursorWhenTextSelected
case|:
name|ret
operator|=
literal|1
expr_stmt|;
break|break;
case|case
name|SH_Table_GridLineColor
case|:
if|if
condition|(
name|opt
condition|)
name|ret
operator|=
name|opt
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Mid
argument_list|)
operator|.
name|rgb
argument_list|()
expr_stmt|;
else|else
name|ret
operator|=
operator|-
literal|1
expr_stmt|;
break|break;
case|case
name|SH_LineEdit_PasswordCharacter
case|:
block|{
specifier|const
name|QPlatformTheme
modifier|*
name|theme
init|=
name|QGuiApplicationPrivate
operator|::
name|platformTheme
argument_list|()
decl_stmt|;
specifier|const
name|QPlatformTheme
operator|::
name|ThemeHint
name|hintType
init|=
name|QPlatformTheme
operator|::
name|PasswordMaskCharacter
decl_stmt|;
specifier|const
name|QVariant
name|hint
init|=
name|theme
condition|?
name|theme
operator|->
name|themeHint
argument_list|(
name|hintType
argument_list|)
else|:
name|QPlatformTheme
operator|::
name|defaultThemeHint
argument_list|(
name|hintType
argument_list|)
decl_stmt|;
name|ret
operator|=
name|hint
operator|.
name|toChar
argument_list|()
operator|.
name|unicode
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
name|SH_LineEdit_PasswordMaskDelay
case|:
name|ret
operator|=
name|QGuiApplicationPrivate
operator|::
name|platformTheme
argument_list|()
operator|->
name|themeHint
argument_list|(
name|QPlatformTheme
operator|::
name|PasswordMaskDelay
argument_list|)
operator|.
name|toInt
argument_list|()
expr_stmt|;
break|break;
case|case
name|SH_ToolBox_SelectedPageTitleBold
case|:
name|ret
operator|=
literal|1
expr_stmt|;
break|break;
case|case
name|SH_UnderlineShortcut
case|:
name|ret
operator|=
literal|1
expr_stmt|;
break|break;
case|case
name|SH_SpinBox_ClickAutoRepeatRate
case|:
name|ret
operator|=
literal|150
expr_stmt|;
break|break;
case|case
name|SH_SpinBox_ClickAutoRepeatThreshold
case|:
name|ret
operator|=
literal|500
expr_stmt|;
break|break;
case|case
name|SH_SpinBox_KeyPressAutoRepeatRate
case|:
name|ret
operator|=
literal|75
expr_stmt|;
break|break;
case|case
name|SH_Menu_SelectionWrap
case|:
name|ret
operator|=
literal|true
expr_stmt|;
break|break;
case|case
name|SH_Menu_FillScreenWithScroll
case|:
name|ret
operator|=
literal|true
expr_stmt|;
break|break;
case|case
name|SH_ToolTipLabel_Opacity
case|:
name|ret
operator|=
literal|255
expr_stmt|;
break|break;
case|case
name|SH_Button_FocusPolicy
case|:
name|ret
operator|=
name|Qt
operator|::
name|StrongFocus
expr_stmt|;
break|break;
case|case
name|SH_MessageBox_UseBorderForButtonSpacing
case|:
name|ret
operator|=
literal|0
expr_stmt|;
break|break;
case|case
name|SH_ToolButton_PopupDelay
case|:
name|ret
operator|=
literal|600
expr_stmt|;
break|break;
case|case
name|SH_FocusFrame_Mask
case|:
name|ret
operator|=
literal|1
expr_stmt|;
if|if
condition|(
name|widget
condition|)
block|{
if|if
condition|(
name|QStyleHintReturnMask
modifier|*
name|mask
init|=
name|qstyleoption_cast
argument_list|<
name|QStyleHintReturnMask
operator|*
argument_list|>
argument_list|(
name|hret
argument_list|)
condition|)
block|{
name|mask
operator|->
name|region
operator|=
name|widget
operator|->
name|rect
argument_list|()
expr_stmt|;
name|int
name|vmargin
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|QStyle
operator|::
name|PM_FocusFrameVMargin
argument_list|)
decl_stmt|,
name|hmargin
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|QStyle
operator|::
name|PM_FocusFrameHMargin
argument_list|)
decl_stmt|;
name|mask
operator|->
name|region
operator|-=
name|QRect
argument_list|(
name|widget
operator|->
name|rect
argument_list|()
operator|.
name|adjusted
argument_list|(
name|hmargin
argument_list|,
name|vmargin
argument_list|,
operator|-
name|hmargin
argument_list|,
operator|-
name|vmargin
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
break|break;
ifndef|#
directive|ifndef
name|QT_NO_RUBBERBAND
case|case
name|SH_RubberBand_Mask
case|:
if|if
condition|(
specifier|const
name|QStyleOptionRubberBand
modifier|*
name|rbOpt
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionRubberBand
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|ret
operator|=
literal|0
expr_stmt|;
if|if
condition|(
name|rbOpt
operator|->
name|shape
operator|==
name|QRubberBand
operator|::
name|Rectangle
condition|)
block|{
name|ret
operator|=
literal|true
expr_stmt|;
if|if
condition|(
name|QStyleHintReturnMask
modifier|*
name|mask
init|=
name|qstyleoption_cast
argument_list|<
name|QStyleHintReturnMask
operator|*
argument_list|>
argument_list|(
name|hret
argument_list|)
condition|)
block|{
name|mask
operator|->
name|region
operator|=
name|opt
operator|->
name|rect
expr_stmt|;
name|int
name|margin
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_DefaultFrameWidth
argument_list|)
operator|*
literal|2
decl_stmt|;
name|mask
operator|->
name|region
operator|-=
name|opt
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
name|margin
argument_list|,
name|margin
argument_list|,
operator|-
name|margin
argument_list|,
operator|-
name|margin
argument_list|)
expr_stmt|;
block|}
block|}
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_RUBBERBAND
case|case
name|SH_SpinControls_DisableOnBounds
case|:
name|ret
operator|=
literal|1
expr_stmt|;
break|break;
case|case
name|SH_Dial_BackgroundRole
case|:
name|ret
operator|=
name|QPalette
operator|::
name|Window
expr_stmt|;
break|break;
case|case
name|SH_ComboBox_LayoutDirection
case|:
name|ret
operator|=
name|opt
condition|?
name|opt
operator|->
name|direction
else|:
name|Qt
operator|::
name|LeftToRight
expr_stmt|;
break|break;
case|case
name|SH_ItemView_EllipsisLocation
case|:
name|ret
operator|=
name|Qt
operator|::
name|AlignTrailing
expr_stmt|;
break|break;
case|case
name|SH_ItemView_ShowDecorationSelected
case|:
name|ret
operator|=
literal|false
expr_stmt|;
break|break;
case|case
name|SH_ItemView_ActivateItemOnSingleClick
case|:
name|ret
operator|=
literal|0
expr_stmt|;
if|if
condition|(
specifier|const
name|QPlatformTheme
modifier|*
name|theme
init|=
name|QGuiApplicationPrivate
operator|::
name|platformTheme
argument_list|()
condition|)
name|ret
operator|=
name|theme
operator|->
name|themeHint
argument_list|(
name|QPlatformTheme
operator|::
name|ItemViewActivateItemOnSingleClick
argument_list|)
operator|.
name|toBool
argument_list|()
condition|?
literal|1
else|:
literal|0
expr_stmt|;
break|break;
case|case
name|SH_TitleBar_ModifyNotification
case|:
name|ret
operator|=
literal|true
expr_stmt|;
break|break;
case|case
name|SH_ScrollBar_RollBetweenButtons
case|:
name|ret
operator|=
literal|false
expr_stmt|;
break|break;
case|case
name|SH_TabBar_ElideMode
case|:
name|ret
operator|=
name|Qt
operator|::
name|ElideNone
expr_stmt|;
break|break;
case|case
name|SH_DialogButtonLayout
case|:
name|ret
operator|=
name|QDialogButtonBox
operator|::
name|WinLayout
expr_stmt|;
if|if
condition|(
specifier|const
name|QPlatformTheme
modifier|*
name|theme
init|=
name|QGuiApplicationPrivate
operator|::
name|platformTheme
argument_list|()
condition|)
name|ret
operator|=
name|theme
operator|->
name|themeHint
argument_list|(
name|QPlatformTheme
operator|::
name|DialogButtonBoxLayout
argument_list|)
operator|.
name|toInt
argument_list|()
expr_stmt|;
break|break;
case|case
name|SH_ComboBox_PopupFrameStyle
case|:
name|ret
operator|=
name|QFrame
operator|::
name|StyledPanel
operator||
name|QFrame
operator|::
name|Plain
expr_stmt|;
break|break;
case|case
name|SH_MessageBox_TextInteractionFlags
case|:
name|ret
operator|=
name|Qt
operator|::
name|LinksAccessibleByMouse
expr_stmt|;
break|break;
case|case
name|SH_DialogButtonBox_ButtonsHaveIcons
case|:
name|ret
operator|=
literal|0
expr_stmt|;
if|if
condition|(
specifier|const
name|QPlatformTheme
modifier|*
name|theme
init|=
name|QGuiApplicationPrivate
operator|::
name|platformTheme
argument_list|()
condition|)
name|ret
operator|=
name|theme
operator|->
name|themeHint
argument_list|(
name|QPlatformTheme
operator|::
name|DialogButtonBoxButtonsHaveIcons
argument_list|)
operator|.
name|toBool
argument_list|()
condition|?
literal|1
else|:
literal|0
expr_stmt|;
break|break;
case|case
name|SH_SpellCheckUnderlineStyle
case|:
name|ret
operator|=
name|QTextCharFormat
operator|::
name|WaveUnderline
expr_stmt|;
break|break;
case|case
name|SH_MessageBox_CenterButtons
case|:
name|ret
operator|=
literal|true
expr_stmt|;
break|break;
case|case
name|SH_ItemView_MovementWithoutUpdatingSelection
case|:
name|ret
operator|=
literal|true
expr_stmt|;
break|break;
case|case
name|SH_FocusFrame_AboveWidget
case|:
name|ret
operator|=
literal|false
expr_stmt|;
break|break;
ifndef|#
directive|ifndef
name|QT_NO_TABWIDGET
case|case
name|SH_TabWidget_DefaultTabPosition
case|:
name|ret
operator|=
name|QTabWidget
operator|::
name|North
expr_stmt|;
break|break;
endif|#
directive|endif
case|case
name|SH_ToolBar_Movable
case|:
name|ret
operator|=
literal|true
expr_stmt|;
break|break;
case|case
name|SH_TextControl_FocusIndicatorTextCharFormat
case|:
name|ret
operator|=
literal|true
expr_stmt|;
if|if
condition|(
name|QStyleHintReturnVariant
modifier|*
name|vret
init|=
name|qstyleoption_cast
argument_list|<
name|QStyleHintReturnVariant
operator|*
argument_list|>
argument_list|(
name|hret
argument_list|)
condition|)
block|{
name|QPen
name|outline
argument_list|(
name|opt
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Text
argument_list|)
argument_list|,
literal|1
argument_list|,
name|Qt
operator|::
name|DotLine
argument_list|)
decl_stmt|;
name|QTextCharFormat
name|fmt
decl_stmt|;
name|fmt
operator|.
name|setProperty
argument_list|(
name|QTextFormat
operator|::
name|OutlinePen
argument_list|,
name|outline
argument_list|)
expr_stmt|;
name|vret
operator|->
name|variant
operator|=
name|fmt
expr_stmt|;
block|}
break|break;
ifndef|#
directive|ifndef
name|QT_NO_WIZARD
case|case
name|SH_WizardStyle
case|:
name|ret
operator|=
name|QWizard
operator|::
name|ClassicStyle
expr_stmt|;
break|break;
endif|#
directive|endif
case|case
name|SH_FormLayoutWrapPolicy
case|:
name|ret
operator|=
name|QFormLayout
operator|::
name|DontWrapRows
expr_stmt|;
break|break;
case|case
name|SH_FormLayoutFieldGrowthPolicy
case|:
name|ret
operator|=
name|QFormLayout
operator|::
name|AllNonFixedFieldsGrow
expr_stmt|;
break|break;
case|case
name|SH_FormLayoutFormAlignment
case|:
name|ret
operator|=
name|Qt
operator|::
name|AlignLeft
operator||
name|Qt
operator|::
name|AlignTop
expr_stmt|;
break|break;
case|case
name|SH_FormLayoutLabelAlignment
case|:
name|ret
operator|=
name|Qt
operator|::
name|AlignLeft
expr_stmt|;
break|break;
case|case
name|SH_ItemView_ArrowKeysNavigateIntoChildren
case|:
name|ret
operator|=
literal|false
expr_stmt|;
break|break;
case|case
name|SH_ItemView_DrawDelegateFrame
case|:
name|ret
operator|=
literal|0
expr_stmt|;
break|break;
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
case|case
name|SH_TabBar_CloseButtonPosition
case|:
name|ret
operator|=
name|QTabBar
operator|::
name|RightSide
expr_stmt|;
break|break;
case|case
name|SH_TabBar_ChangeCurrentDelay
case|:
name|ret
operator|=
literal|500
expr_stmt|;
break|break;
endif|#
directive|endif
case|case
name|SH_DockWidget_ButtonsHaveFrame
case|:
name|ret
operator|=
literal|true
expr_stmt|;
break|break;
case|case
name|SH_ToolButtonStyle
case|:
name|ret
operator|=
literal|0
expr_stmt|;
if|if
condition|(
specifier|const
name|QPlatformTheme
modifier|*
name|theme
init|=
name|QGuiApplicationPrivate
operator|::
name|platformTheme
argument_list|()
condition|)
name|ret
operator|=
name|theme
operator|->
name|themeHint
argument_list|(
name|QPlatformTheme
operator|::
name|ToolButtonStyle
argument_list|)
operator|.
name|toInt
argument_list|()
expr_stmt|;
break|break;
case|case
name|SH_RequestSoftwareInputPanel
case|:
name|ret
operator|=
name|RSIP_OnMouseClick
expr_stmt|;
break|break;
case|case
name|SH_ScrollBar_Transient
case|:
name|ret
operator|=
literal|false
expr_stmt|;
break|break;
case|case
name|SH_Menu_SupportsSections
case|:
name|ret
operator|=
literal|false
expr_stmt|;
break|break;
ifndef|#
directive|ifndef
name|QT_NO_TOOLTIP
case|case
name|SH_ToolTip_WakeUpDelay
case|:
name|ret
operator|=
literal|700
expr_stmt|;
break|break;
case|case
name|SH_ToolTip_FallAsleepDelay
case|:
name|ret
operator|=
literal|2000
expr_stmt|;
break|break;
endif|#
directive|endif
case|case
name|SH_Widget_Animate
case|:
ifndef|#
directive|ifndef
name|QT_NO_TREEVIEW
if|if
condition|(
name|qobject_cast
argument_list|<
specifier|const
name|QTreeView
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
condition|)
block|{
name|ret
operator|=
literal|false
expr_stmt|;
block|}
else|else
endif|#
directive|endif
block|{
name|ret
operator|=
literal|true
expr_stmt|;
block|}
break|break;
case|case
name|SH_Splitter_OpaqueResize
case|:
name|ret
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
name|ret
operator|=
literal|0
expr_stmt|;
break|break;
block|}
return|return
name|ret
return|;
block|}
end_function
begin_function
DECL|function|cachedPixmapFromXPM
specifier|static
name|QPixmap
name|cachedPixmapFromXPM
parameter_list|(
specifier|const
name|char
modifier|*
specifier|const
modifier|*
name|xpm
parameter_list|)
block|{
name|QPixmap
name|result
decl_stmt|;
specifier|const
name|QString
name|tag
init|=
name|QString
operator|::
name|asprintf
argument_list|(
literal|"xpm:0x%p"
argument_list|,
cast|static_cast
argument_list|<
specifier|const
name|void
operator|*
argument_list|>
argument_list|(
name|xpm
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|QPixmapCache
operator|::
name|find
argument_list|(
name|tag
argument_list|,
operator|&
name|result
argument_list|)
condition|)
block|{
name|result
operator|=
name|QPixmap
argument_list|(
name|xpm
argument_list|)
expr_stmt|;
name|QPixmapCache
operator|::
name|insert
argument_list|(
name|tag
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
end_function
begin_comment
comment|/*! \reimp */
end_comment
begin_function
DECL|function|standardPixmap
name|QPixmap
name|QCommonStyle
operator|::
name|standardPixmap
parameter_list|(
name|StandardPixmap
name|sp
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|option
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
specifier|const
name|bool
name|rtl
init|=
operator|(
name|option
operator|&&
name|option
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
operator|)
operator|||
operator|(
operator|!
name|option
operator|&&
name|QApplication
operator|::
name|isRightToLeft
argument_list|()
operator|)
decl_stmt|;
ifdef|#
directive|ifdef
name|QT_NO_IMAGEFORMAT_PNG
name|Q_UNUSED
argument_list|(
name|widget
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|sp
argument_list|)
expr_stmt|;
else|#
directive|else
name|QPixmap
name|pixmap
decl_stmt|;
if|if
condition|(
name|QApplication
operator|::
name|desktopSettingsAware
argument_list|()
operator|&&
operator|!
name|QIcon
operator|::
name|themeName
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
switch|switch
condition|(
name|sp
condition|)
block|{
case|case
name|SP_DialogYesButton
case|:
case|case
name|SP_DialogOkButton
case|:
name|pixmap
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"dialog-ok"
argument_list|)
argument_list|)
operator|.
name|pixmap
argument_list|(
literal|16
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_DialogApplyButton
case|:
name|pixmap
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"dialog-ok-apply"
argument_list|)
argument_list|)
operator|.
name|pixmap
argument_list|(
literal|16
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_DialogDiscardButton
case|:
name|pixmap
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"edit-delete"
argument_list|)
argument_list|)
operator|.
name|pixmap
argument_list|(
literal|16
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_DialogCloseButton
case|:
name|pixmap
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"dialog-close"
argument_list|)
argument_list|)
operator|.
name|pixmap
argument_list|(
literal|16
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_DirHomeIcon
case|:
name|pixmap
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"user-home"
argument_list|)
argument_list|)
operator|.
name|pixmap
argument_list|(
literal|16
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_MessageBoxInformation
case|:
name|pixmap
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"messagebox_info"
argument_list|)
argument_list|)
operator|.
name|pixmap
argument_list|(
literal|16
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_MessageBoxWarning
case|:
name|pixmap
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"messagebox_warning"
argument_list|)
argument_list|)
operator|.
name|pixmap
argument_list|(
literal|16
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_MessageBoxCritical
case|:
name|pixmap
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"messagebox_critical"
argument_list|)
argument_list|)
operator|.
name|pixmap
argument_list|(
literal|16
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_MessageBoxQuestion
case|:
name|pixmap
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"help"
argument_list|)
argument_list|)
operator|.
name|pixmap
argument_list|(
literal|16
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_DialogOpenButton
case|:
case|case
name|SP_DirOpenIcon
case|:
name|pixmap
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"folder-open"
argument_list|)
argument_list|)
operator|.
name|pixmap
argument_list|(
literal|16
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_FileIcon
case|:
name|pixmap
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"text-x-generic"
argument_list|)
argument_list|,
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"empty"
argument_list|)
argument_list|)
argument_list|)
operator|.
name|pixmap
argument_list|(
literal|16
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_DirClosedIcon
case|:
case|case
name|SP_DirIcon
case|:
name|pixmap
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"folder"
argument_list|)
argument_list|)
operator|.
name|pixmap
argument_list|(
literal|16
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_DriveFDIcon
case|:
name|pixmap
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"media-floppy"
argument_list|)
argument_list|,
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"3floppy_unmount"
argument_list|)
argument_list|)
argument_list|)
operator|.
name|pixmap
argument_list|(
literal|16
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_ComputerIcon
case|:
name|pixmap
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"computer"
argument_list|)
argument_list|,
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"system"
argument_list|)
argument_list|)
argument_list|)
operator|.
name|pixmap
argument_list|(
literal|16
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_DesktopIcon
case|:
name|pixmap
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"user-desktop"
argument_list|)
argument_list|,
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"desktop"
argument_list|)
argument_list|)
argument_list|)
operator|.
name|pixmap
argument_list|(
literal|16
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_TrashIcon
case|:
name|pixmap
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"user-trash"
argument_list|)
argument_list|,
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"trashcan_empty"
argument_list|)
argument_list|)
argument_list|)
operator|.
name|pixmap
argument_list|(
literal|16
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_DriveCDIcon
case|:
case|case
name|SP_DriveDVDIcon
case|:
name|pixmap
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"media-optical"
argument_list|)
argument_list|,
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"cdrom_unmount"
argument_list|)
argument_list|)
argument_list|)
operator|.
name|pixmap
argument_list|(
literal|16
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_DriveHDIcon
case|:
name|pixmap
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"drive-harddisk"
argument_list|)
argument_list|,
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"hdd_unmount"
argument_list|)
argument_list|)
argument_list|)
operator|.
name|pixmap
argument_list|(
literal|16
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_FileDialogToParent
case|:
name|pixmap
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"go-up"
argument_list|)
argument_list|,
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"up"
argument_list|)
argument_list|)
argument_list|)
operator|.
name|pixmap
argument_list|(
literal|16
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_FileDialogNewFolder
case|:
name|pixmap
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"folder_new"
argument_list|)
argument_list|)
operator|.
name|pixmap
argument_list|(
literal|16
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_ArrowUp
case|:
name|pixmap
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"go-up"
argument_list|)
argument_list|,
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"up"
argument_list|)
argument_list|)
argument_list|)
operator|.
name|pixmap
argument_list|(
literal|16
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_ArrowDown
case|:
name|pixmap
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"go-down"
argument_list|)
argument_list|,
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"down"
argument_list|)
argument_list|)
argument_list|)
operator|.
name|pixmap
argument_list|(
literal|16
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_ArrowRight
case|:
name|pixmap
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"go-next"
argument_list|)
argument_list|,
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"forward"
argument_list|)
argument_list|)
argument_list|)
operator|.
name|pixmap
argument_list|(
literal|16
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_ArrowLeft
case|:
name|pixmap
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"go-previous"
argument_list|)
argument_list|,
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"back"
argument_list|)
argument_list|)
argument_list|)
operator|.
name|pixmap
argument_list|(
literal|16
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_FileDialogDetailedView
case|:
name|pixmap
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"view_detailed"
argument_list|)
argument_list|)
operator|.
name|pixmap
argument_list|(
literal|16
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_FileDialogListView
case|:
name|pixmap
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"view_icon"
argument_list|)
argument_list|)
operator|.
name|pixmap
argument_list|(
literal|16
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_BrowserReload
case|:
name|pixmap
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"reload"
argument_list|)
argument_list|)
operator|.
name|pixmap
argument_list|(
literal|16
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_BrowserStop
case|:
name|pixmap
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"process-stop"
argument_list|)
argument_list|)
operator|.
name|pixmap
argument_list|(
literal|16
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_MediaPlay
case|:
name|pixmap
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"media-playback-start"
argument_list|)
argument_list|)
operator|.
name|pixmap
argument_list|(
literal|16
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_MediaPause
case|:
name|pixmap
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"media-playback-pause"
argument_list|)
argument_list|)
operator|.
name|pixmap
argument_list|(
literal|16
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_MediaStop
case|:
name|pixmap
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"media-playback-stop"
argument_list|)
argument_list|)
operator|.
name|pixmap
argument_list|(
literal|16
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_MediaSeekForward
case|:
name|pixmap
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"media-seek-forward"
argument_list|)
argument_list|)
operator|.
name|pixmap
argument_list|(
literal|16
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_MediaSeekBackward
case|:
name|pixmap
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"media-seek-backward"
argument_list|)
argument_list|)
operator|.
name|pixmap
argument_list|(
literal|16
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_MediaSkipForward
case|:
name|pixmap
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"media-skip-forward"
argument_list|)
argument_list|)
operator|.
name|pixmap
argument_list|(
literal|16
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_MediaSkipBackward
case|:
name|pixmap
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"media-skip-backward"
argument_list|)
argument_list|)
operator|.
name|pixmap
argument_list|(
literal|16
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_DialogResetButton
case|:
name|pixmap
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"edit-clear"
argument_list|)
argument_list|)
operator|.
name|pixmap
argument_list|(
literal|24
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_DialogHelpButton
case|:
name|pixmap
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"help-contents"
argument_list|)
argument_list|)
operator|.
name|pixmap
argument_list|(
literal|24
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_DialogNoButton
case|:
case|case
name|SP_DialogCancelButton
case|:
name|pixmap
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"dialog-cancel"
argument_list|)
argument_list|,
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"process-stop"
argument_list|)
argument_list|)
argument_list|)
operator|.
name|pixmap
argument_list|(
literal|24
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_DialogSaveButton
case|:
name|pixmap
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"document-save"
argument_list|)
argument_list|)
operator|.
name|pixmap
argument_list|(
literal|24
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_FileLinkIcon
case|:
name|pixmap
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"emblem-symbolic-link"
argument_list|)
argument_list|)
operator|.
name|pixmap
argument_list|(
literal|16
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|pixmap
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|QPixmap
name|fileIcon
init|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"text-x-generic"
argument_list|)
argument_list|)
operator|.
name|pixmap
argument_list|(
literal|16
argument_list|)
decl_stmt|;
if|if
condition|(
name|fileIcon
operator|.
name|isNull
argument_list|()
condition|)
name|fileIcon
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"empty"
argument_list|)
argument_list|)
operator|.
name|pixmap
argument_list|(
literal|16
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|fileIcon
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|QPainter
name|painter
argument_list|(
operator|&
name|fileIcon
argument_list|)
decl_stmt|;
name|painter
operator|.
name|drawPixmap
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|16
argument_list|,
literal|16
argument_list|,
name|pixmap
argument_list|)
expr_stmt|;
return|return
name|fileIcon
return|;
block|}
block|}
break|break;
case|case
name|SP_DirLinkIcon
case|:
name|pixmap
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"emblem-symbolic-link"
argument_list|)
argument_list|)
operator|.
name|pixmap
argument_list|(
literal|16
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|pixmap
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|QPixmap
name|dirIcon
init|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"folder"
argument_list|)
argument_list|)
operator|.
name|pixmap
argument_list|(
literal|16
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|dirIcon
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|QPainter
name|painter
argument_list|(
operator|&
name|dirIcon
argument_list|)
decl_stmt|;
name|painter
operator|.
name|drawPixmap
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|16
argument_list|,
literal|16
argument_list|,
name|pixmap
argument_list|)
expr_stmt|;
return|return
name|dirIcon
return|;
block|}
block|}
break|break;
case|case
name|SP_LineEditClearButton
case|:
block|{
name|QString
name|themeName
init|=
name|rtl
condition|?
name|QStringLiteral
argument_list|(
literal|"edit-clear-locationbar-ltr"
argument_list|)
else|:
name|QStringLiteral
argument_list|(
literal|"edit-clear-locationbar-rtl"
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|QIcon
operator|::
name|hasThemeIcon
argument_list|(
name|themeName
argument_list|)
condition|)
name|themeName
operator|=
name|QStringLiteral
argument_list|(
literal|"edit-clear"
argument_list|)
expr_stmt|;
name|pixmap
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|themeName
argument_list|)
operator|.
name|pixmap
argument_list|(
literal|16
argument_list|)
expr_stmt|;
block|}
break|break;
default|default:
break|break;
block|}
block|}
if|if
condition|(
operator|!
name|pixmap
operator|.
name|isNull
argument_list|()
condition|)
return|return
name|pixmap
return|;
endif|#
directive|endif
comment|//QT_NO_IMAGEFORMAT_PNG
switch|switch
condition|(
name|sp
condition|)
block|{
ifndef|#
directive|ifndef
name|QT_NO_IMAGEFORMAT_XPM
case|case
name|SP_ToolBarHorizontalExtensionButton
case|:
if|if
condition|(
name|rtl
condition|)
block|{
name|QImage
name|im
argument_list|(
name|tb_extension_arrow_h_xpm
argument_list|)
decl_stmt|;
name|im
operator|=
name|im
operator|.
name|convertToFormat
argument_list|(
name|QImage
operator|::
name|Format_ARGB32
argument_list|)
operator|.
name|mirrored
argument_list|(
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return
name|QPixmap
operator|::
name|fromImage
argument_list|(
name|im
argument_list|)
return|;
block|}
return|return
name|cachedPixmapFromXPM
argument_list|(
name|tb_extension_arrow_h_xpm
argument_list|)
return|;
case|case
name|SP_ToolBarVerticalExtensionButton
case|:
return|return
name|cachedPixmapFromXPM
argument_list|(
name|tb_extension_arrow_v_xpm
argument_list|)
return|;
case|case
name|SP_FileDialogStart
case|:
return|return
name|cachedPixmapFromXPM
argument_list|(
name|filedialog_start_xpm
argument_list|)
return|;
case|case
name|SP_FileDialogEnd
case|:
return|return
name|cachedPixmapFromXPM
argument_list|(
name|filedialog_end_xpm
argument_list|)
return|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|QT_NO_IMAGEFORMAT_PNG
case|case
name|SP_CommandLink
case|:
case|case
name|SP_ArrowForward
case|:
if|if
condition|(
name|rtl
condition|)
return|return
name|proxy
argument_list|()
operator|->
name|standardPixmap
argument_list|(
name|SP_ArrowLeft
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
return|;
return|return
name|proxy
argument_list|()
operator|->
name|standardPixmap
argument_list|(
name|SP_ArrowRight
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
return|;
case|case
name|SP_ArrowBack
case|:
if|if
condition|(
name|rtl
condition|)
return|return
name|proxy
argument_list|()
operator|->
name|standardPixmap
argument_list|(
name|SP_ArrowRight
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
return|;
return|return
name|proxy
argument_list|()
operator|->
name|standardPixmap
argument_list|(
name|SP_ArrowLeft
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
return|;
case|case
name|SP_ArrowLeft
case|:
return|return
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/left-16.png"
argument_list|)
argument_list|)
return|;
case|case
name|SP_ArrowRight
case|:
return|return
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/right-16.png"
argument_list|)
argument_list|)
return|;
case|case
name|SP_ArrowUp
case|:
return|return
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/up-16.png"
argument_list|)
argument_list|)
return|;
case|case
name|SP_ArrowDown
case|:
return|return
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/down-16.png"
argument_list|)
argument_list|)
return|;
case|case
name|SP_FileDialogToParent
case|:
return|return
name|proxy
argument_list|()
operator|->
name|standardPixmap
argument_list|(
name|SP_ArrowUp
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
return|;
case|case
name|SP_FileDialogNewFolder
case|:
return|return
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/newdirectory-16.png"
argument_list|)
argument_list|)
return|;
case|case
name|SP_FileDialogDetailedView
case|:
return|return
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/viewdetailed-16.png"
argument_list|)
argument_list|)
return|;
case|case
name|SP_FileDialogInfoView
case|:
return|return
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/fileinfo-16.png"
argument_list|)
argument_list|)
return|;
case|case
name|SP_FileDialogContentsView
case|:
return|return
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/filecontents-16.png"
argument_list|)
argument_list|)
return|;
case|case
name|SP_FileDialogListView
case|:
return|return
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/viewlist-16.png"
argument_list|)
argument_list|)
return|;
case|case
name|SP_FileDialogBack
case|:
return|return
name|proxy
argument_list|()
operator|->
name|standardPixmap
argument_list|(
name|SP_ArrowBack
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
return|;
case|case
name|SP_DriveHDIcon
case|:
return|return
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/harddrive-16.png"
argument_list|)
argument_list|)
return|;
case|case
name|SP_TrashIcon
case|:
return|return
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/trash-16.png"
argument_list|)
argument_list|)
return|;
case|case
name|SP_DriveFDIcon
case|:
return|return
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/floppy-16.png"
argument_list|)
argument_list|)
return|;
case|case
name|SP_DriveNetIcon
case|:
return|return
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/networkdrive-16.png"
argument_list|)
argument_list|)
return|;
case|case
name|SP_DesktopIcon
case|:
return|return
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/desktop-16.png"
argument_list|)
argument_list|)
return|;
case|case
name|SP_ComputerIcon
case|:
return|return
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/computer-16.png"
argument_list|)
argument_list|)
return|;
case|case
name|SP_DriveCDIcon
case|:
return|return
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/cdr-16.png"
argument_list|)
argument_list|)
return|;
case|case
name|SP_DriveDVDIcon
case|:
return|return
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/dvd-16.png"
argument_list|)
argument_list|)
return|;
case|case
name|SP_DirHomeIcon
case|:
case|case
name|SP_DirOpenIcon
case|:
return|return
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/diropen-16.png"
argument_list|)
argument_list|)
return|;
case|case
name|SP_DirIcon
case|:
case|case
name|SP_DirClosedIcon
case|:
return|return
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/dirclosed-16.png"
argument_list|)
argument_list|)
return|;
case|case
name|SP_DirLinkIcon
case|:
return|return
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/dirlink-16.png"
argument_list|)
argument_list|)
return|;
case|case
name|SP_FileIcon
case|:
return|return
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/file-16.png"
argument_list|)
argument_list|)
return|;
case|case
name|SP_FileLinkIcon
case|:
return|return
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/filelink-16.png"
argument_list|)
argument_list|)
return|;
case|case
name|SP_DialogOkButton
case|:
return|return
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/standardbutton-ok-16.png"
argument_list|)
argument_list|)
return|;
case|case
name|SP_DialogCancelButton
case|:
return|return
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/standardbutton-cancel-16.png"
argument_list|)
argument_list|)
return|;
case|case
name|SP_DialogHelpButton
case|:
return|return
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/standardbutton-help-16.png"
argument_list|)
argument_list|)
return|;
case|case
name|SP_DialogOpenButton
case|:
return|return
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/standardbutton-open-16.png"
argument_list|)
argument_list|)
return|;
case|case
name|SP_DialogSaveButton
case|:
return|return
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/standardbutton-save-16.png"
argument_list|)
argument_list|)
return|;
case|case
name|SP_DialogCloseButton
case|:
return|return
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/standardbutton-close-16.png"
argument_list|)
argument_list|)
return|;
case|case
name|SP_DialogApplyButton
case|:
return|return
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/standardbutton-apply-16.png"
argument_list|)
argument_list|)
return|;
case|case
name|SP_DialogResetButton
case|:
return|return
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/standardbutton-clear-16.png"
argument_list|)
argument_list|)
return|;
case|case
name|SP_DialogDiscardButton
case|:
return|return
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/standardbutton-delete-16.png"
argument_list|)
argument_list|)
return|;
case|case
name|SP_DialogYesButton
case|:
return|return
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/standardbutton-yes-16.png"
argument_list|)
argument_list|)
return|;
case|case
name|SP_DialogNoButton
case|:
return|return
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/standardbutton-no-16.png"
argument_list|)
argument_list|)
return|;
case|case
name|SP_BrowserReload
case|:
return|return
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/refresh-24.png"
argument_list|)
argument_list|)
return|;
case|case
name|SP_BrowserStop
case|:
return|return
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/stop-24.png"
argument_list|)
argument_list|)
return|;
case|case
name|SP_MediaPlay
case|:
return|return
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/media-play-32.png"
argument_list|)
argument_list|)
return|;
case|case
name|SP_MediaPause
case|:
return|return
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/media-pause-32.png"
argument_list|)
argument_list|)
return|;
case|case
name|SP_MediaStop
case|:
return|return
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/media-stop-32.png"
argument_list|)
argument_list|)
return|;
case|case
name|SP_MediaSeekForward
case|:
return|return
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/media-seek-forward-32.png"
argument_list|)
argument_list|)
return|;
case|case
name|SP_MediaSeekBackward
case|:
return|return
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/media-seek-backward-32.png"
argument_list|)
argument_list|)
return|;
case|case
name|SP_MediaSkipForward
case|:
return|return
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/media-skip-forward-32.png"
argument_list|)
argument_list|)
return|;
case|case
name|SP_MediaSkipBackward
case|:
return|return
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/media-skip-backward-32.png"
argument_list|)
argument_list|)
return|;
case|case
name|SP_MediaVolume
case|:
return|return
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/media-volume-16.png"
argument_list|)
argument_list|)
return|;
case|case
name|SP_MediaVolumeMuted
case|:
return|return
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/media-volume-muted-16.png"
argument_list|)
argument_list|)
return|;
case|case
name|SP_LineEditClearButton
case|:
return|return
name|QPixmap
argument_list|(
name|QStringLiteral
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/cleartext-16.png"
argument_list|)
argument_list|)
return|;
endif|#
directive|endif
comment|// QT_NO_IMAGEFORMAT_PNG
default|default:
break|break;
block|}
ifndef|#
directive|ifndef
name|QT_NO_IMAGEFORMAT_XPM
switch|switch
condition|(
name|sp
condition|)
block|{
case|case
name|SP_TitleBarMenuButton
case|:
return|return
name|cachedPixmapFromXPM
argument_list|(
name|qt_menu_xpm
argument_list|)
return|;
case|case
name|SP_TitleBarShadeButton
case|:
return|return
name|cachedPixmapFromXPM
argument_list|(
name|qt_shade_xpm
argument_list|)
return|;
case|case
name|SP_TitleBarUnshadeButton
case|:
return|return
name|cachedPixmapFromXPM
argument_list|(
name|qt_unshade_xpm
argument_list|)
return|;
case|case
name|SP_TitleBarNormalButton
case|:
return|return
name|cachedPixmapFromXPM
argument_list|(
name|qt_normalizeup_xpm
argument_list|)
return|;
case|case
name|SP_TitleBarMinButton
case|:
return|return
name|cachedPixmapFromXPM
argument_list|(
name|qt_minimize_xpm
argument_list|)
return|;
case|case
name|SP_TitleBarMaxButton
case|:
return|return
name|cachedPixmapFromXPM
argument_list|(
name|qt_maximize_xpm
argument_list|)
return|;
case|case
name|SP_TitleBarCloseButton
case|:
return|return
name|cachedPixmapFromXPM
argument_list|(
name|qt_close_xpm
argument_list|)
return|;
case|case
name|SP_TitleBarContextHelpButton
case|:
return|return
name|cachedPixmapFromXPM
argument_list|(
name|qt_help_xpm
argument_list|)
return|;
case|case
name|SP_DockWidgetCloseButton
case|:
return|return
name|cachedPixmapFromXPM
argument_list|(
name|dock_widget_close_xpm
argument_list|)
return|;
case|case
name|SP_MessageBoxInformation
case|:
return|return
name|cachedPixmapFromXPM
argument_list|(
name|information_xpm
argument_list|)
return|;
case|case
name|SP_MessageBoxWarning
case|:
return|return
name|cachedPixmapFromXPM
argument_list|(
name|warning_xpm
argument_list|)
return|;
case|case
name|SP_MessageBoxCritical
case|:
return|return
name|cachedPixmapFromXPM
argument_list|(
name|critical_xpm
argument_list|)
return|;
case|case
name|SP_MessageBoxQuestion
case|:
return|return
name|cachedPixmapFromXPM
argument_list|(
name|question_xpm
argument_list|)
return|;
default|default:
break|break;
block|}
endif|#
directive|endif
comment|//QT_NO_IMAGEFORMAT_XPM
return|return
name|QPixmap
argument_list|()
return|;
block|}
end_function
begin_comment
comment|/*!     \internal */
end_comment
begin_function
DECL|function|standardIcon
name|QIcon
name|QCommonStyle
operator|::
name|standardIcon
parameter_list|(
name|StandardPixmap
name|standardIcon
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|option
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
name|QIcon
name|icon
decl_stmt|;
ifdef|#
directive|ifdef
name|Q_OS_WIN
switch|switch
condition|(
name|standardIcon
condition|)
block|{
case|case
name|SP_DriveCDIcon
case|:
case|case
name|SP_DriveDVDIcon
case|:
case|case
name|SP_DriveNetIcon
case|:
case|case
name|SP_DriveHDIcon
case|:
case|case
name|SP_DriveFDIcon
case|:
case|case
name|SP_FileIcon
case|:
case|case
name|SP_FileLinkIcon
case|:
case|case
name|SP_DesktopIcon
case|:
case|case
name|SP_ComputerIcon
case|:
if|if
condition|(
specifier|const
name|QPlatformTheme
modifier|*
name|theme
init|=
name|QGuiApplicationPrivate
operator|::
name|platformTheme
argument_list|()
condition|)
block|{
name|QPlatformTheme
operator|::
name|StandardPixmap
name|sp
init|=
cast|static_cast
argument_list|<
name|QPlatformTheme
operator|::
name|StandardPixmap
argument_list|>
argument_list|(
name|standardIcon
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|size
init|=
literal|16
init|;
name|size
operator|<=
literal|32
condition|;
name|size
operator|+=
literal|16
control|)
block|{
name|QPixmap
name|pixmap
init|=
name|theme
operator|->
name|standardPixmap
argument_list|(
name|sp
argument_list|,
name|QSizeF
argument_list|(
name|size
argument_list|,
name|size
argument_list|)
argument_list|)
decl_stmt|;
name|icon
operator|.
name|addPixmap
argument_list|(
name|pixmap
argument_list|,
name|QIcon
operator|::
name|Normal
argument_list|)
expr_stmt|;
block|}
block|}
break|break;
case|case
name|SP_DirIcon
case|:
case|case
name|SP_DirLinkIcon
case|:
if|if
condition|(
specifier|const
name|QPlatformTheme
modifier|*
name|theme
init|=
name|QGuiApplicationPrivate
operator|::
name|platformTheme
argument_list|()
condition|)
block|{
name|QPlatformTheme
operator|::
name|StandardPixmap
name|spOff
init|=
cast|static_cast
argument_list|<
name|QPlatformTheme
operator|::
name|StandardPixmap
argument_list|>
argument_list|(
name|standardIcon
argument_list|)
decl_stmt|;
name|QPlatformTheme
operator|::
name|StandardPixmap
name|spOn
init|=
name|standardIcon
operator|==
name|SP_DirIcon
condition|?
name|QPlatformTheme
operator|::
name|DirOpenIcon
else|:
name|QPlatformTheme
operator|::
name|DirLinkOpenIcon
decl_stmt|;
for|for
control|(
name|int
name|size
init|=
literal|16
init|;
name|size
operator|<=
literal|32
condition|;
name|size
operator|+=
literal|16
control|)
block|{
name|QSizeF
name|pixSize
argument_list|(
name|size
argument_list|,
name|size
argument_list|)
decl_stmt|;
name|QPixmap
name|pixmap
init|=
name|theme
operator|->
name|standardPixmap
argument_list|(
name|spOff
argument_list|,
name|pixSize
argument_list|)
decl_stmt|;
name|icon
operator|.
name|addPixmap
argument_list|(
name|pixmap
argument_list|,
name|QIcon
operator|::
name|Normal
argument_list|,
name|QIcon
operator|::
name|Off
argument_list|)
expr_stmt|;
name|pixmap
operator|=
name|theme
operator|->
name|standardPixmap
argument_list|(
name|spOn
argument_list|,
name|pixSize
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addPixmap
argument_list|(
name|pixmap
argument_list|,
name|QIcon
operator|::
name|Normal
argument_list|,
name|QIcon
operator|::
name|On
argument_list|)
expr_stmt|;
block|}
block|}
break|break;
case|case
name|SP_VistaShield
case|:
if|if
condition|(
specifier|const
name|QPlatformTheme
modifier|*
name|theme
init|=
name|QGuiApplicationPrivate
operator|::
name|platformTheme
argument_list|()
condition|)
block|{
name|QPlatformTheme
operator|::
name|StandardPixmap
name|sp
init|=
cast|static_cast
argument_list|<
name|QPlatformTheme
operator|::
name|StandardPixmap
argument_list|>
argument_list|(
name|standardIcon
argument_list|)
decl_stmt|;
name|QPixmap
name|pixmap
init|=
name|theme
operator|->
name|standardPixmap
argument_list|(
name|sp
argument_list|,
name|QSizeF
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|)
decl_stmt|;
name|icon
operator|.
name|addPixmap
argument_list|(
name|pixmap
argument_list|)
expr_stmt|;
block|}
break|break;
default|default:
break|break;
block|}
if|if
condition|(
operator|!
name|icon
operator|.
name|isNull
argument_list|()
condition|)
return|return
name|icon
return|;
endif|#
directive|endif
specifier|const
name|bool
name|rtl
init|=
operator|(
name|option
operator|&&
name|option
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
operator|)
operator|||
operator|(
operator|!
name|option
operator|&&
name|QApplication
operator|::
name|isRightToLeft
argument_list|()
operator|)
decl_stmt|;
if|if
condition|(
name|QApplication
operator|::
name|desktopSettingsAware
argument_list|()
operator|&&
operator|!
name|QIcon
operator|::
name|themeName
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
switch|switch
condition|(
name|standardIcon
condition|)
block|{
case|case
name|SP_DirHomeIcon
case|:
name|icon
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"user-home"
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_MessageBoxInformation
case|:
name|icon
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"dialog-information"
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_MessageBoxWarning
case|:
name|icon
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"dialog-warning"
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_MessageBoxCritical
case|:
name|icon
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"dialog-error"
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_MessageBoxQuestion
case|:
name|icon
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"dialog-question"
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_DialogOpenButton
case|:
case|case
name|SP_DirOpenIcon
case|:
name|icon
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"folder-open"
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_DialogSaveButton
case|:
name|icon
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"document-save"
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_DialogApplyButton
case|:
name|icon
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"dialog-ok-apply"
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_DialogYesButton
case|:
case|case
name|SP_DialogOkButton
case|:
name|icon
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"dialog-ok"
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_DialogDiscardButton
case|:
name|icon
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"edit-delete"
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_DialogResetButton
case|:
name|icon
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"edit-clear"
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_DialogHelpButton
case|:
name|icon
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"help-contents"
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_FileIcon
case|:
name|icon
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"text-x-generic"
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_DirClosedIcon
case|:
case|case
name|SP_DirIcon
case|:
name|icon
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"folder"
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_DriveFDIcon
case|:
name|icon
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"floppy_unmount"
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_ComputerIcon
case|:
name|icon
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"computer"
argument_list|)
argument_list|,
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"system"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_DesktopIcon
case|:
name|icon
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"user-desktop"
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_TrashIcon
case|:
name|icon
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"user-trash"
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_DriveCDIcon
case|:
case|case
name|SP_DriveDVDIcon
case|:
name|icon
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"media-optical"
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_DriveHDIcon
case|:
name|icon
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"drive-harddisk"
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_FileDialogToParent
case|:
name|icon
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"go-up"
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_FileDialogNewFolder
case|:
name|icon
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"folder-new"
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_ArrowUp
case|:
name|icon
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"go-up"
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_ArrowDown
case|:
name|icon
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"go-down"
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_ArrowRight
case|:
name|icon
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"go-next"
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_ArrowLeft
case|:
name|icon
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"go-previous"
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_DialogCancelButton
case|:
name|icon
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"dialog-cancel"
argument_list|)
argument_list|,
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"process-stop"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_DialogCloseButton
case|:
name|icon
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"window-close"
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_FileDialogDetailedView
case|:
name|icon
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"view-list-details"
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_FileDialogListView
case|:
name|icon
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"view-list-icons"
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_BrowserReload
case|:
name|icon
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"view-refresh"
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_BrowserStop
case|:
name|icon
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"process-stop"
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_MediaPlay
case|:
name|icon
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"media-playback-start"
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_MediaPause
case|:
name|icon
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"media-playback-pause"
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_MediaStop
case|:
name|icon
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"media-playback-stop"
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_MediaSeekForward
case|:
name|icon
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"media-seek-forward"
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_MediaSeekBackward
case|:
name|icon
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"media-seek-backward"
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_MediaSkipForward
case|:
name|icon
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"media-skip-forward"
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_MediaSkipBackward
case|:
name|icon
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"media-skip-backward"
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_MediaVolume
case|:
name|icon
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"audio-volume-medium"
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_MediaVolumeMuted
case|:
name|icon
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"audio-volume-muted"
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_ArrowForward
case|:
if|if
condition|(
name|rtl
condition|)
return|return
name|QCommonStyle
operator|::
name|standardIcon
argument_list|(
name|SP_ArrowLeft
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
return|;
return|return
name|QCommonStyle
operator|::
name|standardIcon
argument_list|(
name|SP_ArrowRight
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
return|;
case|case
name|SP_ArrowBack
case|:
if|if
condition|(
name|rtl
condition|)
return|return
name|QCommonStyle
operator|::
name|standardIcon
argument_list|(
name|SP_ArrowRight
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
return|;
return|return
name|QCommonStyle
operator|::
name|standardIcon
argument_list|(
name|SP_ArrowLeft
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
return|;
case|case
name|SP_FileLinkIcon
case|:
block|{
name|QIcon
name|linkIcon
init|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"emblem-symbolic-link"
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|linkIcon
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|QIcon
name|baseIcon
init|=
name|QCommonStyle
operator|::
name|standardIcon
argument_list|(
name|SP_FileIcon
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
decl_stmt|;
specifier|const
name|QList
argument_list|<
name|QSize
argument_list|>
name|sizes
init|=
name|baseIcon
operator|.
name|availableSizes
argument_list|(
name|QIcon
operator|::
name|Normal
argument_list|,
name|QIcon
operator|::
name|Off
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|sizes
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|int
name|size
init|=
name|sizes
index|[
name|i
index|]
operator|.
name|width
argument_list|()
decl_stmt|;
name|QPixmap
name|basePixmap
init|=
name|baseIcon
operator|.
name|pixmap
argument_list|(
name|qt_getWindow
argument_list|(
name|widget
argument_list|)
argument_list|,
name|QSize
argument_list|(
name|size
argument_list|,
name|size
argument_list|)
argument_list|)
decl_stmt|;
name|QPixmap
name|linkPixmap
init|=
name|linkIcon
operator|.
name|pixmap
argument_list|(
name|qt_getWindow
argument_list|(
name|widget
argument_list|)
argument_list|,
name|QSize
argument_list|(
name|size
operator|/
literal|2
argument_list|,
name|size
operator|/
literal|2
argument_list|)
argument_list|)
decl_stmt|;
name|QPainter
name|painter
argument_list|(
operator|&
name|basePixmap
argument_list|)
decl_stmt|;
name|painter
operator|.
name|drawPixmap
argument_list|(
name|size
operator|/
literal|2
argument_list|,
name|size
operator|/
literal|2
argument_list|,
name|linkPixmap
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addPixmap
argument_list|(
name|basePixmap
argument_list|)
expr_stmt|;
block|}
block|}
block|}
break|break;
case|case
name|SP_DirLinkIcon
case|:
block|{
name|QIcon
name|linkIcon
init|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|QLatin1String
argument_list|(
literal|"emblem-symbolic-link"
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|linkIcon
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|QIcon
name|baseIcon
init|=
name|QCommonStyle
operator|::
name|standardIcon
argument_list|(
name|SP_DirIcon
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
decl_stmt|;
specifier|const
name|QList
argument_list|<
name|QSize
argument_list|>
name|sizes
init|=
name|baseIcon
operator|.
name|availableSizes
argument_list|(
name|QIcon
operator|::
name|Normal
argument_list|,
name|QIcon
operator|::
name|Off
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|sizes
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|int
name|size
init|=
name|sizes
index|[
name|i
index|]
operator|.
name|width
argument_list|()
decl_stmt|;
name|QPixmap
name|basePixmap
init|=
name|baseIcon
operator|.
name|pixmap
argument_list|(
name|qt_getWindow
argument_list|(
name|widget
argument_list|)
argument_list|,
name|QSize
argument_list|(
name|size
argument_list|,
name|size
argument_list|)
argument_list|)
decl_stmt|;
name|QPixmap
name|linkPixmap
init|=
name|linkIcon
operator|.
name|pixmap
argument_list|(
name|qt_getWindow
argument_list|(
name|widget
argument_list|)
argument_list|,
name|QSize
argument_list|(
name|size
operator|/
literal|2
argument_list|,
name|size
operator|/
literal|2
argument_list|)
argument_list|)
decl_stmt|;
name|QPainter
name|painter
argument_list|(
operator|&
name|basePixmap
argument_list|)
decl_stmt|;
name|painter
operator|.
name|drawPixmap
argument_list|(
name|size
operator|/
literal|2
argument_list|,
name|size
operator|/
literal|2
argument_list|,
name|linkPixmap
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addPixmap
argument_list|(
name|basePixmap
argument_list|)
expr_stmt|;
block|}
block|}
block|}
break|break;
default|default:
break|break;
block|}
block|}
comment|// if (QApplication::desktopSettingsAware()&& !QIcon::themeName().isEmpty())
if|if
condition|(
operator|!
name|icon
operator|.
name|isNull
argument_list|()
condition|)
return|return
name|icon
return|;
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_MAC
argument_list|)
if|if
condition|(
name|QApplication
operator|::
name|desktopSettingsAware
argument_list|()
condition|)
block|{
switch|switch
condition|(
name|standardIcon
condition|)
block|{
case|case
name|SP_DirIcon
case|:
block|{
comment|// A rather special case
name|QIcon
name|closeIcon
init|=
name|QCommonStyle
operator|::
name|standardIcon
argument_list|(
name|SP_DirClosedIcon
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|QIcon
name|openIcon
init|=
name|QCommonStyle
operator|::
name|standardIcon
argument_list|(
name|SP_DirOpenIcon
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|closeIcon
operator|.
name|addPixmap
argument_list|(
name|openIcon
operator|.
name|pixmap
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|,
name|QIcon
operator|::
name|Normal
argument_list|,
name|QIcon
operator|::
name|On
argument_list|)
expr_stmt|;
name|closeIcon
operator|.
name|addPixmap
argument_list|(
name|openIcon
operator|.
name|pixmap
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|,
name|QIcon
operator|::
name|Normal
argument_list|,
name|QIcon
operator|::
name|On
argument_list|)
expr_stmt|;
name|closeIcon
operator|.
name|addPixmap
argument_list|(
name|openIcon
operator|.
name|pixmap
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|)
argument_list|,
name|QIcon
operator|::
name|Normal
argument_list|,
name|QIcon
operator|::
name|On
argument_list|)
expr_stmt|;
name|closeIcon
operator|.
name|addPixmap
argument_list|(
name|openIcon
operator|.
name|pixmap
argument_list|(
literal|128
argument_list|,
literal|128
argument_list|)
argument_list|,
name|QIcon
operator|::
name|Normal
argument_list|,
name|QIcon
operator|::
name|On
argument_list|)
expr_stmt|;
return|return
name|closeIcon
return|;
block|}
case|case
name|SP_TitleBarNormalButton
case|:
case|case
name|SP_TitleBarCloseButton
case|:
block|{
name|QIcon
name|titleBarIcon
decl_stmt|;
if|if
condition|(
name|standardIcon
operator|==
name|SP_TitleBarCloseButton
condition|)
block|{
name|titleBarIcon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/macstyle/images/closedock-16.png"
argument_list|)
argument_list|)
expr_stmt|;
name|titleBarIcon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/macstyle/images/closedock-down-16.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|,
name|QIcon
operator|::
name|Normal
argument_list|,
name|QIcon
operator|::
name|On
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|titleBarIcon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/macstyle/images/dockdock-16.png"
argument_list|)
argument_list|)
expr_stmt|;
name|titleBarIcon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/macstyle/images/dockdock-down-16.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|,
name|QIcon
operator|::
name|Normal
argument_list|,
name|QIcon
operator|::
name|On
argument_list|)
expr_stmt|;
block|}
return|return
name|titleBarIcon
return|;
block|}
case|case
name|SP_MessageBoxQuestion
case|:
case|case
name|SP_MessageBoxInformation
case|:
case|case
name|SP_MessageBoxWarning
case|:
case|case
name|SP_MessageBoxCritical
case|:
case|case
name|SP_DesktopIcon
case|:
case|case
name|SP_TrashIcon
case|:
case|case
name|SP_ComputerIcon
case|:
case|case
name|SP_DriveFDIcon
case|:
case|case
name|SP_DriveHDIcon
case|:
case|case
name|SP_DriveCDIcon
case|:
case|case
name|SP_DriveDVDIcon
case|:
case|case
name|SP_DriveNetIcon
case|:
case|case
name|SP_DirOpenIcon
case|:
case|case
name|SP_DirClosedIcon
case|:
case|case
name|SP_DirLinkIcon
case|:
case|case
name|SP_FileLinkIcon
case|:
case|case
name|SP_FileIcon
case|:
if|if
condition|(
specifier|const
name|QPlatformTheme
modifier|*
name|theme
init|=
name|QGuiApplicationPrivate
operator|::
name|platformTheme
argument_list|()
condition|)
block|{
name|QPlatformTheme
operator|::
name|StandardPixmap
name|sp
init|=
cast|static_cast
argument_list|<
name|QPlatformTheme
operator|::
name|StandardPixmap
argument_list|>
argument_list|(
name|standardIcon
argument_list|)
decl_stmt|;
name|QIcon
name|retIcon
decl_stmt|;
name|QList
argument_list|<
name|int
argument_list|>
name|sizes
init|=
name|theme
operator|->
name|themeHint
argument_list|(
name|QPlatformTheme
operator|::
name|IconPixmapSizes
argument_list|)
operator|.
name|value
argument_list|<
name|QList
argument_list|<
name|int
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
name|Q_FOREACH
argument_list|(
argument|int size
argument_list|,
argument|sizes
argument_list|)
block|{
name|QPixmap
name|mainIcon
decl_stmt|;
specifier|const
name|QString
name|cacheKey
init|=
name|QLatin1String
argument_list|(
literal|"qt_mac_constructQIconFromIconRef"
argument_list|)
operator|+
name|QString
operator|::
name|number
argument_list|(
name|standardIcon
argument_list|)
operator|+
name|QString
operator|::
name|number
argument_list|(
name|size
argument_list|)
decl_stmt|;
if|if
condition|(
name|standardIcon
operator|>=
name|QStyle
operator|::
name|SP_CustomBase
condition|)
block|{
name|mainIcon
operator|=
name|theme
operator|->
name|standardPixmap
argument_list|(
name|sp
argument_list|,
name|QSizeF
argument_list|(
name|size
argument_list|,
name|size
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|QPixmapCache
operator|::
name|find
argument_list|(
name|cacheKey
argument_list|,
name|mainIcon
argument_list|)
operator|==
literal|false
condition|)
block|{
name|mainIcon
operator|=
name|theme
operator|->
name|standardPixmap
argument_list|(
name|sp
argument_list|,
name|QSizeF
argument_list|(
name|size
argument_list|,
name|size
argument_list|)
argument_list|)
expr_stmt|;
name|QPixmapCache
operator|::
name|insert
argument_list|(
name|cacheKey
argument_list|,
name|mainIcon
argument_list|)
expr_stmt|;
block|}
name|retIcon
operator|.
name|addPixmap
argument_list|(
name|mainIcon
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|retIcon
operator|.
name|isNull
argument_list|()
condition|)
return|return
name|retIcon
return|;
block|}
default|default:
break|break;
block|}
block|}
comment|// if (QApplication::desktopSettingsAware())
endif|#
directive|endif
comment|// Q_OS_MAC
switch|switch
condition|(
name|standardIcon
condition|)
block|{
ifndef|#
directive|ifndef
name|QT_NO_IMAGEFORMAT_PNG
case|case
name|SP_FileDialogNewFolder
case|:
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/newdirectory-16.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/newdirectory-32.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/newdirectory-128.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|128
argument_list|,
literal|128
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_FileDialogBack
case|:
return|return
name|QCommonStyle
operator|::
name|standardIcon
argument_list|(
name|SP_ArrowBack
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
return|;
case|case
name|SP_FileDialogToParent
case|:
return|return
name|QCommonStyle
operator|::
name|standardIcon
argument_list|(
name|SP_ArrowUp
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
return|;
case|case
name|SP_FileDialogDetailedView
case|:
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/viewdetailed-16.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/viewdetailed-32.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/viewdetailed-128.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|128
argument_list|,
literal|128
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_FileDialogInfoView
case|:
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/fileinfo-16.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/fileinfo-32.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/fileinfo-128.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|128
argument_list|,
literal|128
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_FileDialogContentsView
case|:
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/filecontents-16.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/filecontents-32.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/filecontents-128.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|128
argument_list|,
literal|128
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_FileDialogListView
case|:
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/viewlist-16.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/viewlist-32.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/viewlist-128.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|128
argument_list|,
literal|128
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_DialogOkButton
case|:
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/standardbutton-ok-16.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/standardbutton-ok-32.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/standardbutton-ok-128.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|128
argument_list|,
literal|128
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_DialogCancelButton
case|:
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/standardbutton-cancel-16.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/standardbutton-cancel-32.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/standardbutton-cancel-128.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|128
argument_list|,
literal|128
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_DialogHelpButton
case|:
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/standardbutton-help-16.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/standardbutton-help-32.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/standardbutton-help-128.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|128
argument_list|,
literal|128
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_DialogOpenButton
case|:
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/standardbutton-open-16.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/standardbutton-open-32.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/standardbutton-open-128.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|128
argument_list|,
literal|128
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_DialogSaveButton
case|:
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/standardbutton-save-16.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/standardbutton-save-32.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/standardbutton-save-128.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|128
argument_list|,
literal|128
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_DialogCloseButton
case|:
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/standardbutton-close-16.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/standardbutton-close-32.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/standardbutton-close-128.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|128
argument_list|,
literal|128
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_DialogApplyButton
case|:
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/standardbutton-apply-16.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/standardbutton-apply-32.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/standardbutton-apply-128.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|128
argument_list|,
literal|128
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_DialogResetButton
case|:
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/standardbutton-clear-16.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/standardbutton-clear-32.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/standardbutton-clear-128.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|128
argument_list|,
literal|128
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_DialogDiscardButton
case|:
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/standardbutton-delete-16.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/standardbutton-delete-32.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/standardbutton-delete-128.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|128
argument_list|,
literal|128
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_DialogYesButton
case|:
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/standardbutton-yes-16.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/standardbutton-yes-32.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/standardbutton-yes-128.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|128
argument_list|,
literal|128
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_DialogNoButton
case|:
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/standardbutton-no-16.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/standardbutton-no-32.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/standardbutton-no-128.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|128
argument_list|,
literal|128
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_ArrowForward
case|:
if|if
condition|(
name|rtl
condition|)
return|return
name|QCommonStyle
operator|::
name|standardIcon
argument_list|(
name|SP_ArrowLeft
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
return|;
return|return
name|QCommonStyle
operator|::
name|standardIcon
argument_list|(
name|SP_ArrowRight
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
return|;
case|case
name|SP_ArrowBack
case|:
if|if
condition|(
name|rtl
condition|)
return|return
name|QCommonStyle
operator|::
name|standardIcon
argument_list|(
name|SP_ArrowRight
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
return|;
return|return
name|QCommonStyle
operator|::
name|standardIcon
argument_list|(
name|SP_ArrowLeft
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
return|;
case|case
name|SP_ArrowLeft
case|:
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/left-16.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/left-32.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/left-128.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|128
argument_list|,
literal|128
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_ArrowRight
case|:
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/right-16.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/right-32.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/right-128.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|128
argument_list|,
literal|128
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_ArrowUp
case|:
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/up-16.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/up-32.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/up-128.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|128
argument_list|,
literal|128
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_ArrowDown
case|:
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/down-16.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/down-32.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/down-128.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|128
argument_list|,
literal|128
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_DirHomeIcon
case|:
case|case
name|SP_DirIcon
case|:
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/dirclosed-16.png"
argument_list|)
argument_list|,
name|QSize
argument_list|()
argument_list|,
name|QIcon
operator|::
name|Normal
argument_list|,
name|QIcon
operator|::
name|Off
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/diropen-16.png"
argument_list|)
argument_list|,
name|QSize
argument_list|()
argument_list|,
name|QIcon
operator|::
name|Normal
argument_list|,
name|QIcon
operator|::
name|On
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/dirclosed-32.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|,
name|QIcon
operator|::
name|Normal
argument_list|,
name|QIcon
operator|::
name|Off
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/diropen-32.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|,
name|QIcon
operator|::
name|Normal
argument_list|,
name|QIcon
operator|::
name|On
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/dirclosed-128.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|128
argument_list|,
literal|128
argument_list|)
argument_list|,
name|QIcon
operator|::
name|Normal
argument_list|,
name|QIcon
operator|::
name|Off
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/diropen-128.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|128
argument_list|,
literal|128
argument_list|)
argument_list|,
name|QIcon
operator|::
name|Normal
argument_list|,
name|QIcon
operator|::
name|On
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_DriveCDIcon
case|:
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/cdr-16.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/cdr-32.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/cdr-128.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|128
argument_list|,
literal|128
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_DriveDVDIcon
case|:
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/dvd-16.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/dvd-32.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/dvd-128.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|128
argument_list|,
literal|128
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_FileIcon
case|:
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/file-16.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/file-32.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/file-128.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|128
argument_list|,
literal|128
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_FileLinkIcon
case|:
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/filelink-16.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/filelink-32.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/filelink-128.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|128
argument_list|,
literal|128
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_TrashIcon
case|:
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/trash-16.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/trash-32.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/trash-128.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|128
argument_list|,
literal|128
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_BrowserReload
case|:
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/refresh-24.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|24
argument_list|,
literal|24
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/refresh-32.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_BrowserStop
case|:
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/stop-24.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|24
argument_list|,
literal|24
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/stop-32.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_MediaPlay
case|:
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/media-play-16.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/media-play-32.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_MediaPause
case|:
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/media-pause-16.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/media-pause-32.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_MediaStop
case|:
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/media-stop-16.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/media-stop-32.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_MediaSeekForward
case|:
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/media-seek-forward-16.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/media-seek-forward-32.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_MediaSeekBackward
case|:
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/media-seek-backward-16.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/media-seek-backward-32.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_MediaSkipForward
case|:
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/media-skip-forward-16.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/media-skip-forward-32.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_MediaSkipBackward
case|:
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/media-skip-backward-16.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/media-skip-backward-32.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_MediaVolume
case|:
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/media-volume-16.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|SP_MediaVolumeMuted
case|:
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/media-volume-muted-16.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
break|break;
endif|#
directive|endif
comment|// QT_NO_IMAGEFORMAT_PNG
default|default:
name|icon
operator|.
name|addPixmap
argument_list|(
name|proxy
argument_list|()
operator|->
name|standardPixmap
argument_list|(
name|standardIcon
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
return|return
name|icon
return|;
block|}
end_function
begin_function
DECL|function|qt_intensity
specifier|static
specifier|inline
name|uint
name|qt_intensity
parameter_list|(
name|uint
name|r
parameter_list|,
name|uint
name|g
parameter_list|,
name|uint
name|b
parameter_list|)
block|{
comment|// 30% red, 59% green, 11% blue
return|return
operator|(
literal|77
operator|*
name|r
operator|+
literal|150
operator|*
name|g
operator|+
literal|28
operator|*
name|b
operator|)
operator|/
literal|255
return|;
block|}
end_function
begin_comment
comment|/*! \reimp */
end_comment
begin_function
DECL|function|generatedIconPixmap
name|QPixmap
name|QCommonStyle
operator|::
name|generatedIconPixmap
parameter_list|(
name|QIcon
operator|::
name|Mode
name|iconMode
parameter_list|,
specifier|const
name|QPixmap
modifier|&
name|pixmap
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|opt
parameter_list|)
specifier|const
block|{
switch|switch
condition|(
name|iconMode
condition|)
block|{
case|case
name|QIcon
operator|::
name|Disabled
case|:
block|{
name|QImage
name|im
init|=
name|pixmap
operator|.
name|toImage
argument_list|()
operator|.
name|convertToFormat
argument_list|(
name|QImage
operator|::
name|Format_ARGB32
argument_list|)
decl_stmt|;
comment|// Create a colortable based on the background (black -> bg -> white)
name|QColor
name|bg
init|=
name|opt
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Disabled
argument_list|,
name|QPalette
operator|::
name|Window
argument_list|)
decl_stmt|;
name|int
name|red
init|=
name|bg
operator|.
name|red
argument_list|()
decl_stmt|;
name|int
name|green
init|=
name|bg
operator|.
name|green
argument_list|()
decl_stmt|;
name|int
name|blue
init|=
name|bg
operator|.
name|blue
argument_list|()
decl_stmt|;
name|uchar
name|reds
index|[
literal|256
index|]
decl_stmt|,
name|greens
index|[
literal|256
index|]
decl_stmt|,
name|blues
index|[
literal|256
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|128
condition|;
operator|++
name|i
control|)
block|{
name|reds
index|[
name|i
index|]
operator|=
name|uchar
argument_list|(
operator|(
name|red
operator|*
operator|(
name|i
operator|<<
literal|1
operator|)
operator|)
operator|>>
literal|8
argument_list|)
expr_stmt|;
name|greens
index|[
name|i
index|]
operator|=
name|uchar
argument_list|(
operator|(
name|green
operator|*
operator|(
name|i
operator|<<
literal|1
operator|)
operator|)
operator|>>
literal|8
argument_list|)
expr_stmt|;
name|blues
index|[
name|i
index|]
operator|=
name|uchar
argument_list|(
operator|(
name|blue
operator|*
operator|(
name|i
operator|<<
literal|1
operator|)
operator|)
operator|>>
literal|8
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|128
condition|;
operator|++
name|i
control|)
block|{
name|reds
index|[
name|i
operator|+
literal|128
index|]
operator|=
name|uchar
argument_list|(
name|qMin
argument_list|(
name|red
operator|+
operator|(
name|i
operator|<<
literal|1
operator|)
argument_list|,
literal|255
argument_list|)
argument_list|)
expr_stmt|;
name|greens
index|[
name|i
operator|+
literal|128
index|]
operator|=
name|uchar
argument_list|(
name|qMin
argument_list|(
name|green
operator|+
operator|(
name|i
operator|<<
literal|1
operator|)
argument_list|,
literal|255
argument_list|)
argument_list|)
expr_stmt|;
name|blues
index|[
name|i
operator|+
literal|128
index|]
operator|=
name|uchar
argument_list|(
name|qMin
argument_list|(
name|blue
operator|+
operator|(
name|i
operator|<<
literal|1
operator|)
argument_list|,
literal|255
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|int
name|intensity
init|=
name|qt_intensity
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|)
decl_stmt|;
specifier|const
name|int
name|factor
init|=
literal|191
decl_stmt|;
comment|// High intensity colors needs dark shifting in the color table, while
comment|// low intensity colors needs light shifting. This is to increase the
comment|// percieved contrast.
if|if
condition|(
operator|(
name|red
operator|-
name|factor
operator|>
name|green
operator|&&
name|red
operator|-
name|factor
operator|>
name|blue
operator|)
operator|||
operator|(
name|green
operator|-
name|factor
operator|>
name|red
operator|&&
name|green
operator|-
name|factor
operator|>
name|blue
operator|)
operator|||
operator|(
name|blue
operator|-
name|factor
operator|>
name|red
operator|&&
name|blue
operator|-
name|factor
operator|>
name|green
operator|)
condition|)
name|intensity
operator|=
name|qMin
argument_list|(
literal|255
argument_list|,
name|intensity
operator|+
literal|91
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|intensity
operator|<=
literal|128
condition|)
name|intensity
operator|-=
literal|51
expr_stmt|;
for|for
control|(
name|int
name|y
init|=
literal|0
init|;
name|y
operator|<
name|im
operator|.
name|height
argument_list|()
condition|;
operator|++
name|y
control|)
block|{
name|QRgb
modifier|*
name|scanLine
init|=
operator|(
name|QRgb
operator|*
operator|)
name|im
operator|.
name|scanLine
argument_list|(
name|y
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|x
init|=
literal|0
init|;
name|x
operator|<
name|im
operator|.
name|width
argument_list|()
condition|;
operator|++
name|x
control|)
block|{
name|QRgb
name|pixel
init|=
operator|*
name|scanLine
decl_stmt|;
comment|// Calculate color table index, taking intensity adjustment
comment|// and a magic offset into account.
name|uint
name|ci
init|=
name|uint
argument_list|(
name|qGray
argument_list|(
name|pixel
argument_list|)
operator|/
literal|3
operator|+
operator|(
literal|130
operator|-
name|intensity
operator|/
literal|3
operator|)
argument_list|)
decl_stmt|;
operator|*
name|scanLine
operator|=
name|qRgba
argument_list|(
name|reds
index|[
name|ci
index|]
argument_list|,
name|greens
index|[
name|ci
index|]
argument_list|,
name|blues
index|[
name|ci
index|]
argument_list|,
name|qAlpha
argument_list|(
name|pixel
argument_list|)
argument_list|)
expr_stmt|;
operator|++
name|scanLine
expr_stmt|;
block|}
block|}
return|return
name|QPixmap
operator|::
name|fromImage
argument_list|(
name|im
argument_list|)
return|;
block|}
case|case
name|QIcon
operator|::
name|Selected
case|:
block|{
name|QImage
name|img
init|=
name|pixmap
operator|.
name|toImage
argument_list|()
operator|.
name|convertToFormat
argument_list|(
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|QColor
name|color
init|=
name|opt
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Normal
argument_list|,
name|QPalette
operator|::
name|Highlight
argument_list|)
decl_stmt|;
name|color
operator|.
name|setAlphaF
argument_list|(
name|qreal
argument_list|(
literal|0.3
argument_list|)
argument_list|)
expr_stmt|;
name|QPainter
name|painter
argument_list|(
operator|&
name|img
argument_list|)
decl_stmt|;
name|painter
operator|.
name|setCompositionMode
argument_list|(
name|QPainter
operator|::
name|CompositionMode_SourceAtop
argument_list|)
expr_stmt|;
name|painter
operator|.
name|fillRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|img
operator|.
name|width
argument_list|()
argument_list|,
name|img
operator|.
name|height
argument_list|()
argument_list|,
name|color
argument_list|)
expr_stmt|;
name|painter
operator|.
name|end
argument_list|()
expr_stmt|;
return|return
name|QPixmap
operator|::
name|fromImage
argument_list|(
name|img
argument_list|)
return|;
block|}
case|case
name|QIcon
operator|::
name|Active
case|:
return|return
name|pixmap
return|;
default|default:
break|break;
block|}
return|return
name|pixmap
return|;
block|}
end_function
begin_comment
comment|/*!   \reimp */
end_comment
begin_function
DECL|function|layoutSpacing
name|int
name|QCommonStyle
operator|::
name|layoutSpacing
parameter_list|(
name|QSizePolicy
operator|::
name|ControlType
comment|/* control1 */
parameter_list|,
name|QSizePolicy
operator|::
name|ControlType
comment|/* control2 */
parameter_list|,
name|Qt
operator|::
name|Orientation
comment|/* orientation */
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
comment|/* option */
parameter_list|,
specifier|const
name|QWidget
modifier|*
comment|/* widget */
parameter_list|)
specifier|const
block|{
return|return
operator|-
literal|1
return|;
block|}
end_function
begin_comment
comment|/*!   \reimp */
end_comment
begin_function
DECL|function|polish
name|void
name|QCommonStyle
operator|::
name|polish
parameter_list|(
name|QPalette
modifier|&
name|pal
parameter_list|)
block|{
name|QStyle
operator|::
name|polish
argument_list|(
name|pal
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|/*!     \reimp  */
end_comment
begin_function
DECL|function|polish
name|void
name|QCommonStyle
operator|::
name|polish
parameter_list|(
name|QWidget
modifier|*
name|widget
parameter_list|)
block|{
name|QStyle
operator|::
name|polish
argument_list|(
name|widget
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|/*!     \reimp  */
end_comment
begin_function
DECL|function|unpolish
name|void
name|QCommonStyle
operator|::
name|unpolish
parameter_list|(
name|QWidget
modifier|*
name|widget
parameter_list|)
block|{
name|QStyle
operator|::
name|unpolish
argument_list|(
name|widget
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|/*!   \reimp */
end_comment
begin_function
DECL|function|polish
name|void
name|QCommonStyle
operator|::
name|polish
parameter_list|(
name|QApplication
modifier|*
name|app
parameter_list|)
block|{
name|QStyle
operator|::
name|polish
argument_list|(
name|app
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|/*!     \reimp  */
end_comment
begin_function
DECL|function|unpolish
name|void
name|QCommonStyle
operator|::
name|unpolish
parameter_list|(
name|QApplication
modifier|*
name|application
parameter_list|)
block|{
name|Q_D
argument_list|(
specifier|const
name|QCommonStyle
argument_list|)
expr_stmt|;
name|d
operator|->
name|tabBarcloseButtonIcon
operator|=
name|QIcon
argument_list|()
expr_stmt|;
name|QStyle
operator|::
name|unpolish
argument_list|(
name|application
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_include
include|#
directive|include
file|"moc_qcommonstyle.cpp"
end_include
end_unit
