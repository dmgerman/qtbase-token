begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/ ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"qplastiquestyle.h"
end_include
begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_NO_STYLE_PLASTIQUE
argument_list|)
operator|||
name|defined
argument_list|(
name|QT_PLUGIN
argument_list|)
end_if
begin_decl_stmt
DECL|variable|AnimateBusyProgressBar
specifier|static
specifier|const
name|bool
name|AnimateBusyProgressBar
init|=
literal|true
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|AnimateProgressBar
specifier|static
specifier|const
name|bool
name|AnimateProgressBar
init|=
literal|false
decl_stmt|;
end_decl_stmt
begin_comment
comment|// #define QPlastique_MaskButtons
end_comment
begin_decl_stmt
DECL|variable|ProgressBarFps
specifier|static
specifier|const
name|int
name|ProgressBarFps
init|=
literal|25
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|blueFrameWidth
specifier|static
specifier|const
name|int
name|blueFrameWidth
init|=
literal|2
decl_stmt|;
end_decl_stmt
begin_comment
DECL|variable|blueFrameWidth
comment|// with of line edit focus frame
end_comment
begin_include
include|#
directive|include
file|"qwindowsstyle_p.h"
end_include
begin_include
include|#
directive|include
file|<qapplication.h>
end_include
begin_include
include|#
directive|include
file|<qbitmap.h>
end_include
begin_include
include|#
directive|include
file|<qabstractitemview.h>
end_include
begin_include
include|#
directive|include
file|<qcheckbox.h>
end_include
begin_include
include|#
directive|include
file|<qcombobox.h>
end_include
begin_include
include|#
directive|include
file|<qdebug.h>
end_include
begin_include
include|#
directive|include
file|<qdialogbuttonbox.h>
end_include
begin_include
include|#
directive|include
file|<qformlayout.h>
end_include
begin_include
include|#
directive|include
file|<qgroupbox.h>
end_include
begin_include
include|#
directive|include
file|<qimage.h>
end_include
begin_include
include|#
directive|include
file|<qlineedit.h>
end_include
begin_include
include|#
directive|include
file|<qmainwindow.h>
end_include
begin_include
include|#
directive|include
file|<qmenu.h>
end_include
begin_include
include|#
directive|include
file|<qmenubar.h>
end_include
begin_include
include|#
directive|include
file|<qpainter.h>
end_include
begin_include
include|#
directive|include
file|<qpaintengine.h>
end_include
begin_include
include|#
directive|include
file|<qpainterpath.h>
end_include
begin_include
include|#
directive|include
file|<qpalette.h>
end_include
begin_include
include|#
directive|include
file|<qpen.h>
end_include
begin_include
include|#
directive|include
file|<qpixmap.h>
end_include
begin_include
include|#
directive|include
file|<qpixmapcache.h>
end_include
begin_include
include|#
directive|include
file|<qprogressbar.h>
end_include
begin_include
include|#
directive|include
file|<qpushbutton.h>
end_include
begin_include
include|#
directive|include
file|<qradiobutton.h>
end_include
begin_include
include|#
directive|include
file|<qscrollbar.h>
end_include
begin_include
include|#
directive|include
file|<qspinbox.h>
end_include
begin_include
include|#
directive|include
file|<qsplitter.h>
end_include
begin_include
include|#
directive|include
file|<qstyleoption.h>
end_include
begin_include
include|#
directive|include
file|<qtextedit.h>
end_include
begin_include
include|#
directive|include
file|<qelapsedtimer.h>
end_include
begin_include
include|#
directive|include
file|<qtoolbar.h>
end_include
begin_include
include|#
directive|include
file|<qtoolbox.h>
end_include
begin_include
include|#
directive|include
file|<qtoolbutton.h>
end_include
begin_include
include|#
directive|include
file|<qprocess.h>
end_include
begin_include
include|#
directive|include
file|<qvarlengtharray.h>
end_include
begin_include
include|#
directive|include
file|<limits.h>
end_include
begin_include
include|#
directive|include
file|<private/qstylehelper_p.h>
end_include
begin_include
include|#
directive|include
file|<qpa/qplatformtheme.h>
end_include
begin_include
include|#
directive|include
file|<private/qguiapplication_p.h>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
comment|// from windows style
DECL|variable|windowsItemFrame
specifier|static
specifier|const
name|int
name|windowsItemFrame
init|=
literal|2
decl_stmt|;
end_decl_stmt
begin_comment
DECL|variable|windowsItemFrame
comment|// menu item frame width
end_comment
begin_decl_stmt
DECL|variable|windowsSepHeight
specifier|static
specifier|const
name|int
name|windowsSepHeight
init|=
literal|2
decl_stmt|;
end_decl_stmt
begin_comment
DECL|variable|windowsSepHeight
comment|// separator item height
end_comment
begin_decl_stmt
DECL|variable|windowsItemHMargin
specifier|static
specifier|const
name|int
name|windowsItemHMargin
init|=
literal|3
decl_stmt|;
end_decl_stmt
begin_comment
DECL|variable|windowsItemHMargin
comment|// menu item hor text margin
end_comment
begin_decl_stmt
DECL|variable|windowsItemVMargin
specifier|static
specifier|const
name|int
name|windowsItemVMargin
init|=
literal|2
decl_stmt|;
end_decl_stmt
begin_comment
DECL|variable|windowsItemVMargin
comment|// menu item ver text margin
end_comment
begin_decl_stmt
DECL|variable|windowsArrowHMargin
specifier|static
specifier|const
name|int
name|windowsArrowHMargin
init|=
literal|6
decl_stmt|;
end_decl_stmt
begin_comment
DECL|variable|windowsArrowHMargin
comment|// arrow horizontal margin
end_comment
begin_decl_stmt
DECL|variable|windowsTabSpacing
specifier|static
specifier|const
name|int
name|windowsTabSpacing
init|=
literal|12
decl_stmt|;
end_decl_stmt
begin_comment
DECL|variable|windowsTabSpacing
comment|// space between text and tab
end_comment
begin_decl_stmt
DECL|variable|windowsRightBorder
specifier|static
specifier|const
name|int
name|windowsRightBorder
init|=
literal|15
decl_stmt|;
end_decl_stmt
begin_comment
DECL|variable|windowsRightBorder
comment|// right border on windows
end_comment
begin_decl_stmt
DECL|variable|windowsCheckMarkWidth
specifier|static
specifier|const
name|int
name|windowsCheckMarkWidth
init|=
literal|12
decl_stmt|;
end_decl_stmt
begin_comment
DECL|variable|windowsCheckMarkWidth
comment|// checkmarks width on windows
end_comment
begin_decl_stmt
DECL|variable|qt_plastique_slider_verticalhandle
specifier|static
specifier|const
name|char
modifier|*
specifier|const
name|qt_plastique_slider_verticalhandle
index|[]
init|=
block|{
literal|"15 11 6 1"
block|,
literal|"   c None"
block|,
literal|"+  c #979797"
block|,
literal|"@  c #C9C9C9"
block|,
literal|"$  c #C1C1C1"
block|,
literal|"b  c None"
block|,
literal|"d  c None"
block|,
literal|" $++++++++$    "
block|,
literal|"$+bbbbbbbb+$   "
block|,
literal|"+b $$      +$  "
block|,
literal|"+b $@       +$ "
block|,
literal|"+b           +$"
block|,
literal|"+b           d+"
block|,
literal|"+b          d+$"
block|,
literal|"+b $$      d+$ "
block|,
literal|"+b $@     d+$  "
block|,
literal|"$+dddddddd+$   "
block|,
literal|" $++++++++$    "
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|qt_plastique_slider_verticalhandle_left
specifier|static
specifier|const
name|char
modifier|*
specifier|const
name|qt_plastique_slider_verticalhandle_left
index|[]
init|=
block|{
literal|"15 11 6 1"
block|,
literal|"   c None"
block|,
literal|"+  c #979797"
block|,
literal|"@  c #C9C9C9"
block|,
literal|"$  c #C1C1C1"
block|,
literal|"b  c None"
block|,
literal|"d  c None"
block|,
literal|"    $++++++++$ "
block|,
literal|"   $+bbbbbbbb+$"
block|,
literal|"  $+b     $$ d+"
block|,
literal|" $+b      $@ d+"
block|,
literal|"$+b          d+"
block|,
literal|"+b           d+"
block|,
literal|"$+           d+"
block|,
literal|" $+       $$ d+"
block|,
literal|"  $+      $@ d+"
block|,
literal|"   $+dddddddd+$"
block|,
literal|"    $++++++++$ "
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|qt_plastique_slider_horizontalhandle
specifier|static
specifier|const
name|char
modifier|*
specifier|const
name|qt_plastique_slider_horizontalhandle
index|[]
init|=
block|{
literal|"11 15 6 1"
block|,
literal|"   c None"
block|,
literal|"+  c #979797"
block|,
literal|"@  c #C9C9C9"
block|,
literal|"$  c #C1C1C1"
block|,
literal|"b  c None"
block|,
literal|"d  c None"
block|,
literal|" $+++++++$ "
block|,
literal|"$+bbbbbbb+$"
block|,
literal|"+b       d+"
block|,
literal|"+b$$   $$d+"
block|,
literal|"+b$@   $@d+"
block|,
literal|"+b       d+"
block|,
literal|"+b       d+"
block|,
literal|"+b       d+"
block|,
literal|"+b       d+"
block|,
literal|"+b       d+"
block|,
literal|"$+      d+$"
block|,
literal|" $+    d+$ "
block|,
literal|"  $+  d+$  "
block|,
literal|"   $+d+$   "
block|,
literal|"    $+$    "
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|qt_plastique_slider_horizontalhandle_up
specifier|static
specifier|const
name|char
modifier|*
specifier|const
name|qt_plastique_slider_horizontalhandle_up
index|[]
init|=
block|{
literal|"11 15 6 1"
block|,
literal|"   c None"
block|,
literal|"+  c #979797"
block|,
literal|"@  c #C9C9C9"
block|,
literal|"$  c #C1C1C1"
block|,
literal|"b  c None"
block|,
literal|"d  c None"
block|,
literal|"    $+$    "
block|,
literal|"   $+b+$   "
block|,
literal|"  $+b  +$  "
block|,
literal|" $+b    +$ "
block|,
literal|"$+b      +$"
block|,
literal|"+b       d+"
block|,
literal|"+b       d+"
block|,
literal|"+b       d+"
block|,
literal|"+b       d+"
block|,
literal|"+b       d+"
block|,
literal|"+b$$   $$d+"
block|,
literal|"+b$@   $@d+"
block|,
literal|"+b       d+"
block|,
literal|"$+ddddddd+$"
block|,
literal|" $+++++++$ "
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|qt_scrollbar_button_arrow_left
specifier|static
specifier|const
name|char
modifier|*
specifier|const
name|qt_scrollbar_button_arrow_left
index|[]
init|=
block|{
literal|"4 7 2 1"
block|,
literal|"   c None"
block|,
literal|"*  c #BFBFBF"
block|,
literal|"   *"
block|,
literal|"  **"
block|,
literal|" ***"
block|,
literal|"****"
block|,
literal|" ***"
block|,
literal|"  **"
block|,
literal|"   *"
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|qt_scrollbar_button_arrow_right
specifier|static
specifier|const
name|char
modifier|*
specifier|const
name|qt_scrollbar_button_arrow_right
index|[]
init|=
block|{
literal|"4 7 2 1"
block|,
literal|"   c None"
block|,
literal|"*  c #BFBFBF"
block|,
literal|"*   "
block|,
literal|"**  "
block|,
literal|"*** "
block|,
literal|"****"
block|,
literal|"*** "
block|,
literal|"**  "
block|,
literal|"*   "
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|qt_scrollbar_button_arrow_up
specifier|static
specifier|const
name|char
modifier|*
specifier|const
name|qt_scrollbar_button_arrow_up
index|[]
init|=
block|{
literal|"7 4 2 1"
block|,
literal|"   c None"
block|,
literal|"*  c #BFBFBF"
block|,
literal|"   *   "
block|,
literal|"  ***  "
block|,
literal|" ***** "
block|,
literal|"*******"
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|qt_scrollbar_button_arrow_down
specifier|static
specifier|const
name|char
modifier|*
specifier|const
name|qt_scrollbar_button_arrow_down
index|[]
init|=
block|{
literal|"7 4 2 1"
block|,
literal|"   c None"
block|,
literal|"*  c #BFBFBF"
block|,
literal|"*******"
block|,
literal|" ***** "
block|,
literal|"  ***  "
block|,
literal|"   *   "
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|qt_scrollbar_button_left
specifier|static
specifier|const
name|char
modifier|*
specifier|const
name|qt_scrollbar_button_left
index|[]
init|=
block|{
literal|"16 16 6 1"
block|,
literal|"   c None"
block|,
literal|".  c #BFBFBF"
block|,
literal|"+  c #979797"
block|,
literal|"#  c #FAFAFA"
block|,
literal|"<  c #FAFAFA"
block|,
literal|"*  c #FAFAFA"
block|,
literal|" .+++++++++++++."
block|,
literal|".+#############+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|".+<<<<<<<<<<<<<+"
block|,
literal|" .+++++++++++++."
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|qt_scrollbar_button_right
specifier|static
specifier|const
name|char
modifier|*
specifier|const
name|qt_scrollbar_button_right
index|[]
init|=
block|{
literal|"16 16 6 1"
block|,
literal|"   c None"
block|,
literal|".  c #BFBFBF"
block|,
literal|"+  c #979797"
block|,
literal|"#  c #FAFAFA"
block|,
literal|"<  c #FAFAFA"
block|,
literal|"*  c #FAFAFA"
block|,
literal|".+++++++++++++. "
block|,
literal|"+#############+."
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+<<<<<<<<<<<<<+."
block|,
literal|".+++++++++++++. "
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|qt_scrollbar_button_up
specifier|static
specifier|const
name|char
modifier|*
specifier|const
name|qt_scrollbar_button_up
index|[]
init|=
block|{
literal|"16 16 6 1"
block|,
literal|"   c None"
block|,
literal|".  c #BFBFBF"
block|,
literal|"+  c #979797"
block|,
literal|"#  c #FAFAFA"
block|,
literal|"<  c #FAFAFA"
block|,
literal|"*  c #FAFAFA"
block|,
literal|" .++++++++++++. "
block|,
literal|".+############+."
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+<<<<<<<<<<<<<<+"
block|,
literal|".++++++++++++++."
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|qt_scrollbar_button_down
specifier|static
specifier|const
name|char
modifier|*
specifier|const
name|qt_scrollbar_button_down
index|[]
init|=
block|{
literal|"16 16 6 1"
block|,
literal|"   c None"
block|,
literal|".  c #BFBFBF"
block|,
literal|"+  c #979797"
block|,
literal|"#  c #FAFAFA"
block|,
literal|"<  c #FAFAFA"
block|,
literal|"*  c #FAFAFA"
block|,
literal|"++++++++++++++++"
block|,
literal|"+##############+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|".+<<<<<<<<<<<<+."
block|,
literal|" .++++++++++++. "
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|qt_scrollbar_slider_pattern_vertical
specifier|static
specifier|const
name|char
modifier|*
specifier|const
name|qt_scrollbar_slider_pattern_vertical
index|[]
init|=
block|{
literal|"10 18 3 1"
block|,
literal|"   c None"
block|,
literal|".  c #BFBFBF"
block|,
literal|"+  c #979797"
block|,
literal|"..  ..  .."
block|,
literal|".+  .+  .+"
block|,
literal|"          "
block|,
literal|"          "
block|,
literal|"..  ..  .."
block|,
literal|".+  .+  .+"
block|,
literal|"          "
block|,
literal|"          "
block|,
literal|"..  ..  .."
block|,
literal|".+  .+  .+"
block|,
literal|"          "
block|,
literal|"          "
block|,
literal|"..  ..  .."
block|,
literal|".+  .+  .+"
block|,
literal|"          "
block|,
literal|"          "
block|,
literal|"..  ..  .."
block|,
literal|".+  .+  .+"
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|qt_scrollbar_slider_pattern_horizontal
specifier|static
specifier|const
name|char
modifier|*
specifier|const
name|qt_scrollbar_slider_pattern_horizontal
index|[]
init|=
block|{
literal|"18 10 3 1"
block|,
literal|"   c None"
block|,
literal|".  c #BFBFBF"
block|,
literal|"+  c #979797"
block|,
literal|"..  ..  ..  ..  .."
block|,
literal|".+  .+  .+  .+  .+"
block|,
literal|"                  "
block|,
literal|"                  "
block|,
literal|"..  ..  ..  ..  .."
block|,
literal|".+  .+  .+  .+  .+"
block|,
literal|"                  "
block|,
literal|"                  "
block|,
literal|"..  ..  ..  ..  .."
block|,
literal|".+  .+  .+  .+  .+"
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|qt_toolbarhandle
specifier|static
specifier|const
name|char
modifier|*
specifier|const
name|qt_toolbarhandle
index|[]
init|=
block|{
literal|"6 6 4 1"
block|,
literal|"       c None"
block|,
literal|".      c #C5C5C5"
block|,
literal|"+      c #EEEEEE"
block|,
literal|"@      c #FAFAFA"
block|,
literal|"..    "
block|,
literal|".+@   "
block|,
literal|" @@   "
block|,
literal|"   .. "
block|,
literal|"   .+@"
block|,
literal|"    @@"
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|qt_simple_toolbarhandle
specifier|static
specifier|const
name|char
modifier|*
specifier|const
name|qt_simple_toolbarhandle
index|[]
init|=
block|{
literal|"3 3 4 1"
block|,
literal|"       c None"
block|,
literal|".      c #C5C5C5"
block|,
literal|"+      c #EEEEEE"
block|,
literal|"@      c #FAFAFA"
block|,
literal|".. "
block|,
literal|".+@"
block|,
literal|" @@"
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|qt_titlebar_context_help
specifier|static
specifier|const
name|char
modifier|*
specifier|const
name|qt_titlebar_context_help
index|[]
init|=
block|{
literal|"27 27 5 1"
block|,
literal|"  c None"
block|,
literal|". c #0A0C12"
block|,
literal|"+ c #1B202D"
block|,
literal|"@ c #293144"
block|,
literal|"# c #3C435D"
block|,
literal|"                           "
block|,
literal|"                           "
block|,
literal|"                           "
block|,
literal|"                           "
block|,
literal|"                           "
block|,
literal|"                           "
block|,
literal|"                           "
block|,
literal|"                           "
block|,
literal|"           +@##@+          "
block|,
literal|"         .@@@.+@@..        "
block|,
literal|"         .##+  +@@+.       "
block|,
literal|"         .##@  @#@+.       "
block|,
literal|"         ....  +@+..       "
block|,
literal|"            .@+@@..        "
block|,
literal|"            +#@@+          "
block|,
literal|"            .##.           "
block|,
literal|"            .++.           "
block|,
literal|"            .++.           "
block|,
literal|"            +##+           "
block|,
literal|"            .@@.           "
block|,
literal|"                           "
block|,
literal|"                           "
block|,
literal|"                           "
block|,
literal|"                           "
block|,
literal|"                           "
block|,
literal|"                           "
block|,
literal|"                           "
block|}
decl_stmt|;
end_decl_stmt
begin_function
DECL|function|qMapGradientToRect
specifier|static
name|QLinearGradient
name|qMapGradientToRect
parameter_list|(
specifier|const
name|QLinearGradient
modifier|&
name|gradient
parameter_list|,
specifier|const
name|QRectF
modifier|&
name|rect
parameter_list|)
block|{
name|QLinearGradient
name|tmpGrad
argument_list|(
name|rect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|rect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
decl_stmt|;
name|tmpGrad
operator|.
name|setStops
argument_list|(
name|gradient
operator|.
name|stops
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|tmpGrad
return|;
block|}
end_function
begin_function
DECL|function|qMapBrushToRect
specifier|static
name|QBrush
name|qMapBrushToRect
parameter_list|(
specifier|const
name|QBrush
modifier|&
name|brush
parameter_list|,
specifier|const
name|QRectF
modifier|&
name|rect
parameter_list|)
block|{
if|if
condition|(
operator|!
name|brush
operator|.
name|gradient
argument_list|()
condition|)
return|return
name|brush
return|;
comment|// ### Ugly assumption that it's a linear gradient
name|QBrush
name|tmp
argument_list|(
name|qMapGradientToRect
argument_list|(
operator|*
cast|static_cast
argument_list|<
specifier|const
name|QLinearGradient
operator|*
argument_list|>
argument_list|(
name|brush
operator|.
name|gradient
argument_list|()
argument_list|)
argument_list|,
name|rect
argument_list|)
argument_list|)
decl_stmt|;
return|return
name|tmp
return|;
block|}
end_function
begin_function
DECL|function|qBrushSetAlphaF
specifier|static
name|void
name|qBrushSetAlphaF
parameter_list|(
name|QBrush
modifier|*
name|brush
parameter_list|,
name|qreal
name|alpha
parameter_list|)
block|{
if|if
condition|(
specifier|const
name|QGradient
modifier|*
name|gradient
init|=
name|brush
operator|->
name|gradient
argument_list|()
condition|)
block|{
comment|// Use the gradient. Call QColor::setAlphaF() on all color stops.
name|QGradientStops
name|stops
init|=
name|gradient
operator|->
name|stops
argument_list|()
decl_stmt|;
name|QMutableVectorIterator
argument_list|<
name|QGradientStop
argument_list|>
name|it
argument_list|(
name|stops
argument_list|)
decl_stmt|;
name|QColor
name|tmpColor
decl_stmt|;
while|while
condition|(
name|it
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|it
operator|.
name|next
argument_list|()
expr_stmt|;
name|tmpColor
operator|=
name|it
operator|.
name|value
argument_list|()
operator|.
name|second
expr_stmt|;
name|tmpColor
operator|.
name|setAlphaF
argument_list|(
name|alpha
operator|*
name|tmpColor
operator|.
name|alphaF
argument_list|()
argument_list|)
expr_stmt|;
name|it
operator|.
name|setValue
argument_list|(
name|QPair
argument_list|<
name|qreal
argument_list|,
name|QColor
argument_list|>
argument_list|(
name|it
operator|.
name|value
argument_list|()
operator|.
name|first
argument_list|,
name|tmpColor
argument_list|)
argument_list|)
expr_stmt|;
block|}
switch|switch
condition|(
name|gradient
operator|->
name|type
argument_list|()
condition|)
block|{
case|case
name|QGradient
operator|::
name|RadialGradient
case|:
block|{
name|QRadialGradient
name|grad
init|=
operator|*
cast|static_cast
argument_list|<
specifier|const
name|QRadialGradient
operator|*
argument_list|>
argument_list|(
name|gradient
argument_list|)
decl_stmt|;
name|grad
operator|.
name|setStops
argument_list|(
name|stops
argument_list|)
expr_stmt|;
operator|*
name|brush
operator|=
name|QBrush
argument_list|(
name|grad
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|QGradient
operator|::
name|ConicalGradient
case|:
block|{
name|QConicalGradient
name|grad
init|=
operator|*
cast|static_cast
argument_list|<
specifier|const
name|QConicalGradient
operator|*
argument_list|>
argument_list|(
name|gradient
argument_list|)
decl_stmt|;
name|grad
operator|.
name|setStops
argument_list|(
name|stops
argument_list|)
expr_stmt|;
operator|*
name|brush
operator|=
name|QBrush
argument_list|(
name|grad
argument_list|)
expr_stmt|;
break|break;
block|}
default|default:
name|qWarning
argument_list|(
literal|"QPlastiqueStyle::qBrushLight() - unknown gradient type"
literal|" - falling back to QLinearGradient"
argument_list|)
expr_stmt|;
case|case
name|QGradient
operator|::
name|LinearGradient
case|:
block|{
name|QLinearGradient
name|grad
init|=
operator|*
cast|static_cast
argument_list|<
specifier|const
name|QLinearGradient
operator|*
argument_list|>
argument_list|(
name|gradient
argument_list|)
decl_stmt|;
name|grad
operator|.
name|setStops
argument_list|(
name|stops
argument_list|)
expr_stmt|;
operator|*
name|brush
operator|=
name|QBrush
argument_list|(
name|grad
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
elseif|else
if|if
condition|(
operator|!
name|brush
operator|->
name|texture
argument_list|()
operator|.
name|isNull
argument_list|()
condition|)
block|{
comment|// Modify the texture - ridiculously expensive.
name|QPixmap
name|texture
init|=
name|brush
operator|->
name|texture
argument_list|()
decl_stmt|;
name|QPixmap
name|pixmap
decl_stmt|;
name|QString
name|name
init|=
name|QLatin1String
argument_list|(
literal|"qbrushtexture-alpha"
argument_list|)
operator|%
name|HexString
argument_list|<
name|qreal
argument_list|>
argument_list|(
name|alpha
argument_list|)
operator|%
name|HexString
argument_list|<
name|qint64
argument_list|>
argument_list|(
name|texture
operator|.
name|cacheKey
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|QPixmapCache
operator|::
name|find
argument_list|(
name|name
argument_list|,
name|pixmap
argument_list|)
condition|)
block|{
name|QImage
name|image
init|=
name|texture
operator|.
name|toImage
argument_list|()
decl_stmt|;
name|QRgb
modifier|*
name|rgb
init|=
cast|reinterpret_cast
argument_list|<
name|QRgb
operator|*
argument_list|>
argument_list|(
name|image
operator|.
name|bits
argument_list|()
argument_list|)
decl_stmt|;
name|int
name|pixels
init|=
name|image
operator|.
name|width
argument_list|()
operator|*
name|image
operator|.
name|height
argument_list|()
decl_stmt|;
name|QColor
name|tmpColor
decl_stmt|;
while|while
condition|(
name|pixels
operator|--
condition|)
block|{
name|tmpColor
operator|.
name|setRgb
argument_list|(
operator|*
name|rgb
argument_list|)
expr_stmt|;
name|tmpColor
operator|.
name|setAlphaF
argument_list|(
name|alpha
operator|*
name|tmpColor
operator|.
name|alphaF
argument_list|()
argument_list|)
expr_stmt|;
operator|*
name|rgb
operator|++
operator|=
name|tmpColor
operator|.
name|rgba
argument_list|()
expr_stmt|;
block|}
name|pixmap
operator|=
name|QPixmap
operator|::
name|fromImage
argument_list|(
name|image
argument_list|)
expr_stmt|;
name|QPixmapCache
operator|::
name|insert
argument_list|(
name|name
argument_list|,
name|pixmap
argument_list|)
expr_stmt|;
block|}
name|brush
operator|->
name|setTexture
argument_list|(
name|pixmap
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// Use the color
name|QColor
name|tmpColor
init|=
name|brush
operator|->
name|color
argument_list|()
decl_stmt|;
name|tmpColor
operator|.
name|setAlphaF
argument_list|(
name|alpha
operator|*
name|tmpColor
operator|.
name|alphaF
argument_list|()
argument_list|)
expr_stmt|;
name|brush
operator|->
name|setColor
argument_list|(
name|tmpColor
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|qBrushLight
specifier|static
name|QBrush
name|qBrushLight
parameter_list|(
name|QBrush
name|brush
parameter_list|,
name|int
name|light
parameter_list|)
block|{
if|if
condition|(
specifier|const
name|QGradient
modifier|*
name|gradient
init|=
name|brush
operator|.
name|gradient
argument_list|()
condition|)
block|{
comment|// Use the gradient. Call QColor::lighter() on all color stops.
name|QGradientStops
name|stops
init|=
name|gradient
operator|->
name|stops
argument_list|()
decl_stmt|;
name|QMutableVectorIterator
argument_list|<
name|QGradientStop
argument_list|>
name|it
argument_list|(
name|stops
argument_list|)
decl_stmt|;
while|while
condition|(
name|it
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|it
operator|.
name|next
argument_list|()
expr_stmt|;
name|it
operator|.
name|setValue
argument_list|(
name|QPair
argument_list|<
name|qreal
argument_list|,
name|QColor
argument_list|>
argument_list|(
name|it
operator|.
name|value
argument_list|()
operator|.
name|first
argument_list|,
name|it
operator|.
name|value
argument_list|()
operator|.
name|second
operator|.
name|lighter
argument_list|(
name|light
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
switch|switch
condition|(
name|gradient
operator|->
name|type
argument_list|()
condition|)
block|{
case|case
name|QGradient
operator|::
name|RadialGradient
case|:
block|{
name|QRadialGradient
name|grad
init|=
operator|*
cast|static_cast
argument_list|<
specifier|const
name|QRadialGradient
operator|*
argument_list|>
argument_list|(
name|gradient
argument_list|)
decl_stmt|;
name|grad
operator|.
name|setStops
argument_list|(
name|stops
argument_list|)
expr_stmt|;
name|brush
operator|=
name|QBrush
argument_list|(
name|grad
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|QGradient
operator|::
name|ConicalGradient
case|:
block|{
name|QConicalGradient
name|grad
init|=
operator|*
cast|static_cast
argument_list|<
specifier|const
name|QConicalGradient
operator|*
argument_list|>
argument_list|(
name|gradient
argument_list|)
decl_stmt|;
name|grad
operator|.
name|setStops
argument_list|(
name|stops
argument_list|)
expr_stmt|;
name|brush
operator|=
name|QBrush
argument_list|(
name|grad
argument_list|)
expr_stmt|;
break|break;
block|}
default|default:
name|qWarning
argument_list|(
literal|"QPlastiqueStyle::qBrushLight() - unknown gradient type"
literal|" - falling back to QLinearGradient"
argument_list|)
expr_stmt|;
case|case
name|QGradient
operator|::
name|LinearGradient
case|:
block|{
name|QLinearGradient
name|grad
init|=
operator|*
cast|static_cast
argument_list|<
specifier|const
name|QLinearGradient
operator|*
argument_list|>
argument_list|(
name|gradient
argument_list|)
decl_stmt|;
name|grad
operator|.
name|setStops
argument_list|(
name|stops
argument_list|)
expr_stmt|;
name|brush
operator|=
name|QBrush
argument_list|(
name|grad
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
elseif|else
if|if
condition|(
operator|!
name|brush
operator|.
name|texture
argument_list|()
operator|.
name|isNull
argument_list|()
condition|)
block|{
comment|// Modify the texture - ridiculously expensive.
name|QPixmap
name|texture
init|=
name|brush
operator|.
name|texture
argument_list|()
decl_stmt|;
name|QPixmap
name|pixmap
decl_stmt|;
name|QString
name|name
init|=
name|QLatin1String
argument_list|(
literal|"qbrushtexture-light"
argument_list|)
operator|%
name|HexString
argument_list|<
name|int
argument_list|>
argument_list|(
name|light
argument_list|)
operator|%
name|HexString
argument_list|<
name|qint64
argument_list|>
argument_list|(
name|texture
operator|.
name|cacheKey
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|QPixmapCache
operator|::
name|find
argument_list|(
name|name
argument_list|,
name|pixmap
argument_list|)
condition|)
block|{
name|QImage
name|image
init|=
name|texture
operator|.
name|toImage
argument_list|()
decl_stmt|;
name|QRgb
modifier|*
name|rgb
init|=
cast|reinterpret_cast
argument_list|<
name|QRgb
operator|*
argument_list|>
argument_list|(
name|image
operator|.
name|bits
argument_list|()
argument_list|)
decl_stmt|;
name|int
name|pixels
init|=
name|image
operator|.
name|width
argument_list|()
operator|*
name|image
operator|.
name|height
argument_list|()
decl_stmt|;
name|QColor
name|tmpColor
decl_stmt|;
while|while
condition|(
name|pixels
operator|--
condition|)
block|{
name|tmpColor
operator|.
name|setRgb
argument_list|(
operator|*
name|rgb
argument_list|)
expr_stmt|;
operator|*
name|rgb
operator|++
operator|=
name|tmpColor
operator|.
name|lighter
argument_list|(
name|light
argument_list|)
operator|.
name|rgba
argument_list|()
expr_stmt|;
block|}
name|pixmap
operator|=
name|QPixmap
operator|::
name|fromImage
argument_list|(
name|image
argument_list|)
expr_stmt|;
name|QPixmapCache
operator|::
name|insert
argument_list|(
name|name
argument_list|,
name|pixmap
argument_list|)
expr_stmt|;
block|}
name|brush
operator|.
name|setTexture
argument_list|(
name|pixmap
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// Use the color
name|brush
operator|.
name|setColor
argument_list|(
name|brush
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
name|light
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|brush
return|;
block|}
end_function
begin_function
DECL|function|qBrushDark
specifier|static
name|QBrush
name|qBrushDark
parameter_list|(
name|QBrush
name|brush
parameter_list|,
name|int
name|dark
parameter_list|)
block|{
if|if
condition|(
specifier|const
name|QGradient
modifier|*
name|gradient
init|=
name|brush
operator|.
name|gradient
argument_list|()
condition|)
block|{
comment|// Use the gradient. Call QColor::darker() on all color stops.
name|QGradientStops
name|stops
init|=
name|gradient
operator|->
name|stops
argument_list|()
decl_stmt|;
name|QMutableVectorIterator
argument_list|<
name|QGradientStop
argument_list|>
name|it
argument_list|(
name|stops
argument_list|)
decl_stmt|;
while|while
condition|(
name|it
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|it
operator|.
name|next
argument_list|()
expr_stmt|;
name|it
operator|.
name|setValue
argument_list|(
name|QPair
argument_list|<
name|qreal
argument_list|,
name|QColor
argument_list|>
argument_list|(
name|it
operator|.
name|value
argument_list|()
operator|.
name|first
argument_list|,
name|it
operator|.
name|value
argument_list|()
operator|.
name|second
operator|.
name|darker
argument_list|(
name|dark
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
switch|switch
condition|(
name|gradient
operator|->
name|type
argument_list|()
condition|)
block|{
case|case
name|QGradient
operator|::
name|RadialGradient
case|:
block|{
name|QRadialGradient
name|grad
init|=
operator|*
cast|static_cast
argument_list|<
specifier|const
name|QRadialGradient
operator|*
argument_list|>
argument_list|(
name|gradient
argument_list|)
decl_stmt|;
name|grad
operator|.
name|setStops
argument_list|(
name|stops
argument_list|)
expr_stmt|;
name|brush
operator|=
name|QBrush
argument_list|(
name|grad
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|QGradient
operator|::
name|ConicalGradient
case|:
block|{
name|QConicalGradient
name|grad
init|=
operator|*
cast|static_cast
argument_list|<
specifier|const
name|QConicalGradient
operator|*
argument_list|>
argument_list|(
name|gradient
argument_list|)
decl_stmt|;
name|grad
operator|.
name|setStops
argument_list|(
name|stops
argument_list|)
expr_stmt|;
name|brush
operator|=
name|QBrush
argument_list|(
name|grad
argument_list|)
expr_stmt|;
break|break;
block|}
default|default:
name|qWarning
argument_list|(
literal|"QPlastiqueStyle::qBrushDark() - unknown gradient type"
literal|" - falling back to QLinearGradient"
argument_list|)
expr_stmt|;
case|case
name|QGradient
operator|::
name|LinearGradient
case|:
block|{
name|QLinearGradient
name|grad
init|=
operator|*
cast|static_cast
argument_list|<
specifier|const
name|QLinearGradient
operator|*
argument_list|>
argument_list|(
name|gradient
argument_list|)
decl_stmt|;
name|grad
operator|.
name|setStops
argument_list|(
name|stops
argument_list|)
expr_stmt|;
name|brush
operator|=
name|QBrush
argument_list|(
name|grad
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
elseif|else
if|if
condition|(
operator|!
name|brush
operator|.
name|texture
argument_list|()
operator|.
name|isNull
argument_list|()
condition|)
block|{
comment|// Modify the texture - ridiculously expensive.
name|QPixmap
name|texture
init|=
name|brush
operator|.
name|texture
argument_list|()
decl_stmt|;
name|QPixmap
name|pixmap
decl_stmt|;
name|QString
name|name
init|=
name|QLatin1String
argument_list|(
literal|"qbrushtexture-dark"
argument_list|)
operator|%
name|HexString
argument_list|<
name|int
argument_list|>
argument_list|(
name|dark
argument_list|)
operator|%
name|HexString
argument_list|<
name|qint64
argument_list|>
argument_list|(
name|texture
operator|.
name|cacheKey
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|QPixmapCache
operator|::
name|find
argument_list|(
name|name
argument_list|,
name|pixmap
argument_list|)
condition|)
block|{
name|QImage
name|image
init|=
name|texture
operator|.
name|toImage
argument_list|()
decl_stmt|;
name|QRgb
modifier|*
name|rgb
init|=
cast|reinterpret_cast
argument_list|<
name|QRgb
operator|*
argument_list|>
argument_list|(
name|image
operator|.
name|bits
argument_list|()
argument_list|)
decl_stmt|;
name|int
name|pixels
init|=
name|image
operator|.
name|width
argument_list|()
operator|*
name|image
operator|.
name|height
argument_list|()
decl_stmt|;
name|QColor
name|tmpColor
decl_stmt|;
while|while
condition|(
name|pixels
operator|--
condition|)
block|{
name|tmpColor
operator|.
name|setRgb
argument_list|(
operator|*
name|rgb
argument_list|)
expr_stmt|;
operator|*
name|rgb
operator|++
operator|=
name|tmpColor
operator|.
name|darker
argument_list|(
name|dark
argument_list|)
operator|.
name|rgba
argument_list|()
expr_stmt|;
block|}
name|pixmap
operator|=
name|QPixmap
operator|::
name|fromImage
argument_list|(
name|image
argument_list|)
expr_stmt|;
name|QPixmapCache
operator|::
name|insert
argument_list|(
name|name
argument_list|,
name|pixmap
argument_list|)
expr_stmt|;
block|}
name|brush
operator|.
name|setTexture
argument_list|(
name|pixmap
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// Use the color
name|brush
operator|.
name|setColor
argument_list|(
name|brush
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
name|dark
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|brush
return|;
block|}
end_function
begin_comment
comment|/*     Draws a rounded frame using the provided brush for 1, and adds 0.5 alpha     for 0.       0111111110     01        10     1          1     1          1     1          1     01        10      0111111110 */
end_comment
begin_function
DECL|function|qt_plastique_draw_frame
specifier|static
name|void
name|qt_plastique_draw_frame
parameter_list|(
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QRect
modifier|&
name|rect
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|option
parameter_list|,
name|QFrame
operator|::
name|Shadow
name|shadow
init|=
name|QFrame
operator|::
name|Plain
parameter_list|)
block|{
name|QPen
name|oldPen
init|=
name|painter
operator|->
name|pen
argument_list|()
decl_stmt|;
name|QBrush
name|border
decl_stmt|;
name|QBrush
name|corner
decl_stmt|;
name|QBrush
name|innerTopLeft
decl_stmt|;
name|QBrush
name|innerBottomRight
decl_stmt|;
if|if
condition|(
name|shadow
operator|!=
name|QFrame
operator|::
name|Plain
operator|&&
operator|(
name|option
operator|->
name|state
operator|&
name|QStyle
operator|::
name|State_HasFocus
operator|)
condition|)
block|{
name|border
operator|=
name|option
operator|->
name|palette
operator|.
name|highlight
argument_list|()
expr_stmt|;
name|qBrushSetAlphaF
argument_list|(
operator|&
name|border
argument_list|,
name|qreal
argument_list|(
literal|0.8
argument_list|)
argument_list|)
expr_stmt|;
name|corner
operator|=
name|option
operator|->
name|palette
operator|.
name|highlight
argument_list|()
expr_stmt|;
name|qBrushSetAlphaF
argument_list|(
operator|&
name|corner
argument_list|,
literal|0.5
argument_list|)
expr_stmt|;
name|innerTopLeft
operator|=
name|qBrushDark
argument_list|(
name|option
operator|->
name|palette
operator|.
name|highlight
argument_list|()
argument_list|,
literal|125
argument_list|)
expr_stmt|;
name|innerBottomRight
operator|=
name|option
operator|->
name|palette
operator|.
name|highlight
argument_list|()
expr_stmt|;
name|qBrushSetAlphaF
argument_list|(
operator|&
name|innerBottomRight
argument_list|,
name|qreal
argument_list|(
literal|0.65
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|border
operator|=
name|option
operator|->
name|palette
operator|.
name|shadow
argument_list|()
expr_stmt|;
name|qBrushSetAlphaF
argument_list|(
operator|&
name|border
argument_list|,
name|qreal
argument_list|(
literal|0.4
argument_list|)
argument_list|)
expr_stmt|;
name|corner
operator|=
name|option
operator|->
name|palette
operator|.
name|shadow
argument_list|()
expr_stmt|;
name|qBrushSetAlphaF
argument_list|(
operator|&
name|corner
argument_list|,
literal|0.25
argument_list|)
expr_stmt|;
name|innerTopLeft
operator|=
name|option
operator|->
name|palette
operator|.
name|shadow
argument_list|()
expr_stmt|;
name|innerBottomRight
operator|=
name|option
operator|->
name|palette
operator|.
name|shadow
argument_list|()
expr_stmt|;
if|if
condition|(
name|shadow
operator|==
name|QFrame
operator|::
name|Sunken
condition|)
block|{
name|qBrushSetAlphaF
argument_list|(
operator|&
name|innerTopLeft
argument_list|,
name|qreal
argument_list|(
literal|0.23
argument_list|)
argument_list|)
expr_stmt|;
name|qBrushSetAlphaF
argument_list|(
operator|&
name|innerBottomRight
argument_list|,
name|qreal
argument_list|(
literal|0.075
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|qBrushSetAlphaF
argument_list|(
operator|&
name|innerTopLeft
argument_list|,
name|qreal
argument_list|(
literal|0.075
argument_list|)
argument_list|)
expr_stmt|;
name|qBrushSetAlphaF
argument_list|(
operator|&
name|innerBottomRight
argument_list|,
name|qreal
argument_list|(
literal|0.23
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|QLine
name|lines
index|[
literal|4
index|]
decl_stmt|;
name|QPoint
name|points
index|[
literal|8
index|]
decl_stmt|;
comment|// Opaque corner lines
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|border
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|lines
index|[
literal|0
index|]
operator|=
name|QLine
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|)
expr_stmt|;
name|lines
index|[
literal|1
index|]
operator|=
name|QLine
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
argument_list|,
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
name|lines
index|[
literal|2
index|]
operator|=
name|QLine
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|,
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
expr_stmt|;
name|lines
index|[
literal|3
index|]
operator|=
name|QLine
argument_list|(
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|,
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|4
argument_list|)
expr_stmt|;
comment|// Opaque corner dots
name|points
index|[
literal|0
index|]
operator|=
name|QPoint
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
name|points
index|[
literal|1
index|]
operator|=
name|QPoint
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|points
index|[
literal|2
index|]
operator|=
name|QPoint
argument_list|(
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
name|points
index|[
literal|3
index|]
operator|=
name|QPoint
argument_list|(
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPoints
argument_list|(
name|points
argument_list|,
literal|4
argument_list|)
expr_stmt|;
comment|// Shaded corner dots
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|corner
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|points
index|[
literal|0
index|]
operator|=
name|QPoint
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
name|points
index|[
literal|1
index|]
operator|=
name|QPoint
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|points
index|[
literal|2
index|]
operator|=
name|QPoint
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|)
expr_stmt|;
name|points
index|[
literal|3
index|]
operator|=
name|QPoint
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
name|points
index|[
literal|4
index|]
operator|=
name|QPoint
argument_list|(
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
name|points
index|[
literal|5
index|]
operator|=
name|QPoint
argument_list|(
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|points
index|[
literal|6
index|]
operator|=
name|QPoint
argument_list|(
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|)
expr_stmt|;
name|points
index|[
literal|7
index|]
operator|=
name|QPoint
argument_list|(
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPoints
argument_list|(
name|points
argument_list|,
literal|8
argument_list|)
expr_stmt|;
comment|// Shadows
if|if
condition|(
name|shadow
operator|!=
name|QFrame
operator|::
name|Plain
condition|)
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|innerTopLeft
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|lines
index|[
literal|0
index|]
operator|=
name|QLine
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
name|lines
index|[
literal|1
index|]
operator|=
name|QLine
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|,
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|innerBottomRight
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|lines
index|[
literal|0
index|]
operator|=
name|QLine
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|lines
index|[
literal|1
index|]
operator|=
name|QLine
argument_list|(
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|,
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|setPen
argument_list|(
name|oldPen
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|mergedColors
specifier|static
name|QColor
name|mergedColors
parameter_list|(
specifier|const
name|QColor
modifier|&
name|colorA
parameter_list|,
specifier|const
name|QColor
modifier|&
name|colorB
parameter_list|,
name|int
name|factor
init|=
literal|50
parameter_list|)
block|{
specifier|const
name|int
name|maxFactor
init|=
literal|100
decl_stmt|;
name|QColor
name|tmp
init|=
name|colorA
decl_stmt|;
name|tmp
operator|.
name|setRed
argument_list|(
operator|(
name|tmp
operator|.
name|red
argument_list|()
operator|*
name|factor
operator|)
operator|/
name|maxFactor
operator|+
operator|(
name|colorB
operator|.
name|red
argument_list|()
operator|*
operator|(
name|maxFactor
operator|-
name|factor
operator|)
operator|)
operator|/
name|maxFactor
argument_list|)
expr_stmt|;
name|tmp
operator|.
name|setGreen
argument_list|(
operator|(
name|tmp
operator|.
name|green
argument_list|()
operator|*
name|factor
operator|)
operator|/
name|maxFactor
operator|+
operator|(
name|colorB
operator|.
name|green
argument_list|()
operator|*
operator|(
name|maxFactor
operator|-
name|factor
operator|)
operator|)
operator|/
name|maxFactor
argument_list|)
expr_stmt|;
name|tmp
operator|.
name|setBlue
argument_list|(
operator|(
name|tmp
operator|.
name|blue
argument_list|()
operator|*
name|factor
operator|)
operator|/
name|maxFactor
operator|+
operator|(
name|colorB
operator|.
name|blue
argument_list|()
operator|*
operator|(
name|maxFactor
operator|-
name|factor
operator|)
operator|)
operator|/
name|maxFactor
argument_list|)
expr_stmt|;
return|return
name|tmp
return|;
block|}
end_function
begin_function
DECL|function|qt_plastique_draw_gradient
specifier|static
name|void
name|qt_plastique_draw_gradient
parameter_list|(
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QRect
modifier|&
name|rect
parameter_list|,
specifier|const
name|QColor
modifier|&
name|gradientStart
parameter_list|,
specifier|const
name|QColor
modifier|&
name|gradientStop
parameter_list|)
block|{
name|QString
name|gradientName
init|=
name|QLatin1String
argument_list|(
literal|"qplastique-g"
argument_list|)
operator|%
name|HexString
argument_list|<
name|int
argument_list|>
argument_list|(
name|rect
operator|.
name|width
argument_list|()
argument_list|)
operator|%
name|HexString
argument_list|<
name|int
argument_list|>
argument_list|(
name|rect
operator|.
name|height
argument_list|()
argument_list|)
operator|%
name|HexString
argument_list|<
name|QRgb
argument_list|>
argument_list|(
name|gradientStart
operator|.
name|rgba
argument_list|()
argument_list|)
operator|%
name|HexString
argument_list|<
name|QRgb
argument_list|>
argument_list|(
name|gradientStop
operator|.
name|rgba
argument_list|()
argument_list|)
decl_stmt|;
name|QPixmap
name|cache
decl_stmt|;
name|QPainter
modifier|*
name|p
init|=
name|painter
decl_stmt|;
name|QRect
name|r
init|=
name|rect
decl_stmt|;
name|bool
name|doPixmapCache
init|=
name|painter
operator|->
name|deviceTransform
argument_list|()
operator|.
name|isIdentity
argument_list|()
operator|&&
name|painter
operator|->
name|worldMatrix
argument_list|()
operator|.
name|isIdentity
argument_list|()
decl_stmt|;
if|if
condition|(
name|doPixmapCache
operator|&&
name|QPixmapCache
operator|::
name|find
argument_list|(
name|gradientName
argument_list|,
name|cache
argument_list|)
condition|)
block|{
name|painter
operator|->
name|drawPixmap
argument_list|(
name|rect
argument_list|,
name|cache
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|doPixmapCache
condition|)
block|{
name|cache
operator|=
name|QPixmap
argument_list|(
name|rect
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|cache
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|transparent
argument_list|)
expr_stmt|;
name|p
operator|=
operator|new
name|QPainter
argument_list|(
operator|&
name|cache
argument_list|)
expr_stmt|;
name|r
operator|=
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|rect
operator|.
name|width
argument_list|()
argument_list|,
name|rect
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|int
name|x
init|=
name|r
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
decl_stmt|;
name|QLinearGradient
name|gradient
argument_list|(
name|x
argument_list|,
name|r
operator|.
name|top
argument_list|()
argument_list|,
name|x
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
argument_list|)
decl_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|gradientStart
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|1
argument_list|,
name|gradientStop
argument_list|)
expr_stmt|;
name|p
operator|->
name|fillRect
argument_list|(
name|r
argument_list|,
name|gradient
argument_list|)
expr_stmt|;
if|if
condition|(
name|doPixmapCache
condition|)
block|{
name|p
operator|->
name|end
argument_list|()
expr_stmt|;
operator|delete
name|p
expr_stmt|;
name|painter
operator|->
name|drawPixmap
argument_list|(
name|rect
argument_list|,
name|cache
argument_list|)
expr_stmt|;
name|QPixmapCache
operator|::
name|insert
argument_list|(
name|gradientName
argument_list|,
name|cache
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_function
begin_function
DECL|function|qt_plastique_drawFrame
specifier|static
name|void
name|qt_plastique_drawFrame
parameter_list|(
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|option
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
block|{
name|QRect
name|rect
init|=
name|option
operator|->
name|rect
decl_stmt|;
name|QPen
name|oldPen
init|=
name|painter
operator|->
name|pen
argument_list|()
decl_stmt|;
name|QColor
name|borderColor
init|=
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|178
argument_list|)
decl_stmt|;
name|QColor
name|gradientStartColor
init|=
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|104
argument_list|)
decl_stmt|;
name|QColor
name|gradientStopColor
init|=
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|105
argument_list|)
decl_stmt|;
name|QColor
name|alphaCornerColor
decl_stmt|;
if|if
condition|(
name|widget
condition|)
block|{
comment|// ### backgroundrole/foregroundrole should be part of the style option
name|alphaCornerColor
operator|=
name|mergedColors
argument_list|(
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|widget
operator|->
name|backgroundRole
argument_list|()
argument_list|)
argument_list|,
name|borderColor
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|alphaCornerColor
operator|=
name|mergedColors
argument_list|(
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
name|borderColor
argument_list|)
expr_stmt|;
block|}
name|QLine
name|lines
index|[
literal|4
index|]
decl_stmt|;
name|QPoint
name|points
index|[
literal|8
index|]
decl_stmt|;
comment|// outline / border
name|painter
operator|->
name|setPen
argument_list|(
name|borderColor
argument_list|)
expr_stmt|;
name|lines
index|[
literal|0
index|]
operator|=
name|QLine
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|)
expr_stmt|;
name|lines
index|[
literal|1
index|]
operator|=
name|QLine
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
argument_list|,
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
name|lines
index|[
literal|2
index|]
operator|=
name|QLine
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|,
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
expr_stmt|;
name|lines
index|[
literal|3
index|]
operator|=
name|QLine
argument_list|(
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|,
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|points
index|[
literal|0
index|]
operator|=
name|QPoint
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
name|points
index|[
literal|1
index|]
operator|=
name|QPoint
argument_list|(
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
name|points
index|[
literal|2
index|]
operator|=
name|QPoint
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|points
index|[
literal|3
index|]
operator|=
name|QPoint
argument_list|(
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPoints
argument_list|(
name|points
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|alphaCornerColor
argument_list|)
expr_stmt|;
name|points
index|[
literal|0
index|]
operator|=
name|QPoint
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|)
expr_stmt|;
name|points
index|[
literal|1
index|]
operator|=
name|QPoint
argument_list|(
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|)
expr_stmt|;
name|points
index|[
literal|2
index|]
operator|=
name|QPoint
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
name|points
index|[
literal|3
index|]
operator|=
name|QPoint
argument_list|(
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
name|points
index|[
literal|4
index|]
operator|=
name|QPoint
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
name|points
index|[
literal|5
index|]
operator|=
name|QPoint
argument_list|(
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
name|points
index|[
literal|6
index|]
operator|=
name|QPoint
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|points
index|[
literal|7
index|]
operator|=
name|QPoint
argument_list|(
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPoints
argument_list|(
name|points
argument_list|,
literal|8
argument_list|)
expr_stmt|;
comment|// inner border
if|if
condition|(
operator|(
name|option
operator|->
name|state
operator|&
name|QStyle
operator|::
name|State_Sunken
operator|)
operator|||
operator|(
name|option
operator|->
name|state
operator|&
name|QStyle
operator|::
name|State_On
operator|)
condition|)
name|painter
operator|->
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|118
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|painter
operator|->
name|setPen
argument_list|(
name|gradientStartColor
argument_list|)
expr_stmt|;
name|lines
index|[
literal|0
index|]
operator|=
name|QLine
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
name|lines
index|[
literal|1
index|]
operator|=
name|QLine
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|,
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|2
argument_list|)
expr_stmt|;
if|if
condition|(
operator|(
name|option
operator|->
name|state
operator|&
name|QStyle
operator|::
name|State_Sunken
operator|)
operator|||
operator|(
name|option
operator|->
name|state
operator|&
name|QStyle
operator|::
name|State_On
operator|)
condition|)
name|painter
operator|->
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|110
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|painter
operator|->
name|setPen
argument_list|(
name|gradientStopColor
operator|.
name|darker
argument_list|(
literal|102
argument_list|)
argument_list|)
expr_stmt|;
name|lines
index|[
literal|0
index|]
operator|=
name|QLine
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|lines
index|[
literal|1
index|]
operator|=
name|QLine
argument_list|(
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|,
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|oldPen
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|qt_plastique_drawShadedPanel
specifier|static
name|void
name|qt_plastique_drawShadedPanel
parameter_list|(
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|option
parameter_list|,
name|bool
name|base
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
block|{
name|QRect
name|rect
init|=
name|option
operator|->
name|rect
decl_stmt|;
name|QPen
name|oldPen
init|=
name|painter
operator|->
name|pen
argument_list|()
decl_stmt|;
name|QColor
name|gradientStartColor
init|=
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|104
argument_list|)
decl_stmt|;
name|QColor
name|gradientStopColor
init|=
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|105
argument_list|)
decl_stmt|;
comment|// gradient fill
if|if
condition|(
operator|(
name|option
operator|->
name|state
operator|&
name|QStyle
operator|::
name|State_Enabled
operator|)
operator|||
operator|!
operator|(
name|option
operator|->
name|state
operator|&
name|QStyle
operator|::
name|State_AutoRaise
operator|)
condition|)
block|{
if|if
condition|(
operator|(
name|option
operator|->
name|state
operator|&
name|QStyle
operator|::
name|State_Sunken
operator|)
operator|||
operator|(
name|option
operator|->
name|state
operator|&
name|QStyle
operator|::
name|State_On
operator|)
condition|)
block|{
name|qt_plastique_draw_gradient
argument_list|(
name|painter
argument_list|,
name|rect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|114
argument_list|)
argument_list|,
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|106
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|qt_plastique_draw_gradient
argument_list|(
name|painter
argument_list|,
name|rect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|base
condition|?
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|105
argument_list|)
else|:
name|gradientStartColor
argument_list|,
name|base
condition|?
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|102
argument_list|)
else|:
name|gradientStopColor
argument_list|)
expr_stmt|;
block|}
block|}
name|qt_plastique_drawFrame
argument_list|(
name|painter
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|oldPen
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|qt_plastique_draw_mdibutton
specifier|static
name|void
name|qt_plastique_draw_mdibutton
parameter_list|(
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QStyleOptionTitleBar
modifier|*
name|option
parameter_list|,
specifier|const
name|QRect
modifier|&
name|tmp
parameter_list|,
name|bool
name|hover
parameter_list|,
name|bool
name|sunken
parameter_list|)
block|{
if|if
condition|(
name|tmp
operator|.
name|isNull
argument_list|()
condition|)
return|return;
name|bool
name|active
init|=
operator|(
name|option
operator|->
name|titleBarState
operator|&
name|QStyle
operator|::
name|State_Active
operator|)
decl_stmt|;
comment|// ### use palette colors instead
name|QColor
name|mdiButtonGradientStartColor
decl_stmt|;
name|QColor
name|mdiButtonGradientStopColor
decl_stmt|;
if|if
condition|(
name|active
condition|)
block|{
name|mdiButtonGradientStartColor
operator|=
name|QColor
argument_list|(
operator|(
name|hover
operator|||
name|sunken
operator|)
condition|?
literal|0x7d8bb1
else|:
literal|0x55689a
argument_list|)
expr_stmt|;
name|mdiButtonGradientStopColor
operator|=
name|QColor
argument_list|(
operator|(
name|hover
operator|||
name|sunken
operator|)
condition|?
literal|0x939ebe
else|:
literal|0x7381ab
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|mdiButtonGradientStartColor
operator|=
name|QColor
argument_list|(
operator|(
name|hover
operator|||
name|sunken
operator|)
condition|?
literal|0x9e9e9e
else|:
literal|0x818181
argument_list|)
expr_stmt|;
name|mdiButtonGradientStopColor
operator|=
name|QColor
argument_list|(
operator|(
name|hover
operator|||
name|sunken
operator|)
condition|?
literal|0xababab
else|:
literal|0x929292
argument_list|)
expr_stmt|;
block|}
name|qt_plastique_draw_gradient
argument_list|(
name|painter
argument_list|,
name|tmp
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|mdiButtonGradientStartColor
argument_list|,
name|mdiButtonGradientStopColor
argument_list|)
expr_stmt|;
name|QColor
name|mdiButtonBorderColor
decl_stmt|;
if|if
condition|(
name|active
condition|)
block|{
name|mdiButtonBorderColor
operator|=
operator|(
name|hover
operator|||
name|sunken
operator|)
condition|?
name|QColor
argument_list|(
literal|0x627097
argument_list|)
else|:
name|QColor
argument_list|(
literal|0x324577
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|mdiButtonBorderColor
operator|=
operator|(
name|hover
operator|||
name|sunken
operator|)
condition|?
name|QColor
argument_list|(
literal|0x838383
argument_list|)
else|:
name|QColor
argument_list|(
literal|0x5e5e5e
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|mdiButtonBorderColor
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
specifier|const
name|QLine
name|lines
index|[
literal|4
index|]
init|=
block|{
name|QLine
argument_list|(
name|tmp
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|tmp
operator|.
name|top
argument_list|()
argument_list|,
name|tmp
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|tmp
operator|.
name|top
argument_list|()
argument_list|)
block|,
name|QLine
argument_list|(
name|tmp
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|tmp
operator|.
name|bottom
argument_list|()
argument_list|,
name|tmp
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|tmp
operator|.
name|bottom
argument_list|()
argument_list|)
block|,
name|QLine
argument_list|(
name|tmp
operator|.
name|left
argument_list|()
argument_list|,
name|tmp
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|,
name|tmp
operator|.
name|left
argument_list|()
argument_list|,
name|tmp
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
block|,
name|QLine
argument_list|(
argument|tmp.right()
argument_list|,
argument|tmp.top() +
literal|2
argument_list|,
argument|tmp.right()
argument_list|,
argument|tmp.bottom() -
literal|2
argument_list|)
block|}
decl_stmt|;
name|painter
operator|->
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|4
argument_list|)
expr_stmt|;
specifier|const
name|QPoint
name|points
index|[
literal|4
index|]
init|=
block|{
name|QPoint
argument_list|(
name|tmp
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|tmp
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
name|tmp
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|tmp
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
name|tmp
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|tmp
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
argument|tmp.right() -
literal|1
argument_list|,
argument|tmp.bottom() -
literal|1
argument_list|)
block|}
decl_stmt|;
name|painter
operator|->
name|drawPoints
argument_list|(
name|points
argument_list|,
literal|4
argument_list|)
expr_stmt|;
block|}
end_function
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_DOCKWIDGET
end_ifndef
begin_function
DECL|function|elliditide
specifier|static
name|QString
name|elliditide
parameter_list|(
specifier|const
name|QString
modifier|&
name|text
parameter_list|,
specifier|const
name|QFontMetrics
modifier|&
name|fontMetrics
parameter_list|,
specifier|const
name|QRect
modifier|&
name|rect
parameter_list|,
name|int
modifier|*
name|textWidth
init|=
literal|0
parameter_list|)
block|{
comment|// Chop and insert ellide into title if text is too wide
name|QString
name|title
init|=
name|text
decl_stmt|;
name|int
name|width
init|=
name|textWidth
condition|?
operator|*
name|textWidth
else|:
name|fontMetrics
operator|.
name|width
argument_list|(
name|text
argument_list|)
decl_stmt|;
name|QString
name|ellipsis
init|=
name|QLatin1String
argument_list|(
literal|"..."
argument_list|)
decl_stmt|;
if|if
condition|(
name|width
operator|>
name|rect
operator|.
name|width
argument_list|()
condition|)
block|{
name|QString
name|leftHalf
init|=
name|title
operator|.
name|left
argument_list|(
name|title
operator|.
name|size
argument_list|()
operator|/
literal|2
argument_list|)
decl_stmt|;
name|QString
name|rightHalf
init|=
name|title
operator|.
name|mid
argument_list|(
name|leftHalf
operator|.
name|size
argument_list|()
operator|+
literal|1
argument_list|)
decl_stmt|;
while|while
condition|(
operator|!
name|leftHalf
operator|.
name|isEmpty
argument_list|()
operator|&&
operator|!
name|rightHalf
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|leftHalf
operator|.
name|chop
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|int
name|width
init|=
name|fontMetrics
operator|.
name|width
argument_list|(
name|leftHalf
operator|+
name|ellipsis
operator|+
name|rightHalf
argument_list|)
decl_stmt|;
if|if
condition|(
name|width
operator|<
name|rect
operator|.
name|width
argument_list|()
condition|)
block|{
name|title
operator|=
name|leftHalf
operator|+
name|ellipsis
operator|+
name|rightHalf
expr_stmt|;
break|break;
block|}
name|rightHalf
operator|.
name|remove
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|width
operator|=
name|fontMetrics
operator|.
name|width
argument_list|(
name|leftHalf
operator|+
name|ellipsis
operator|+
name|rightHalf
argument_list|)
expr_stmt|;
if|if
condition|(
name|width
operator|<
name|rect
operator|.
name|width
argument_list|()
condition|)
block|{
name|title
operator|=
name|leftHalf
operator|+
name|ellipsis
operator|+
name|rightHalf
expr_stmt|;
break|break;
block|}
block|}
block|}
if|if
condition|(
name|textWidth
condition|)
operator|*
name|textWidth
operator|=
name|width
expr_stmt|;
return|return
name|title
return|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_NO_DOCKWIDGET
argument_list|)
operator|||
operator|!
name|defined
argument_list|(
name|QT_NO_SPLITTER
argument_list|)
end_if
begin_function
DECL|function|qt_plastique_draw_handle
specifier|static
name|void
name|qt_plastique_draw_handle
parameter_list|(
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|option
parameter_list|,
specifier|const
name|QRect
modifier|&
name|rect
parameter_list|,
name|Qt
operator|::
name|Orientation
name|orientation
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
block|{
name|QColor
name|borderColor
init|=
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|178
argument_list|)
decl_stmt|;
name|QColor
name|alphaCornerColor
decl_stmt|;
if|if
condition|(
name|widget
condition|)
block|{
comment|// ### backgroundrole/foregroundrole should be part of the style option
name|alphaCornerColor
operator|=
name|mergedColors
argument_list|(
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|widget
operator|->
name|backgroundRole
argument_list|()
argument_list|)
argument_list|,
name|borderColor
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|alphaCornerColor
operator|=
name|mergedColors
argument_list|(
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
name|borderColor
argument_list|)
expr_stmt|;
block|}
name|QImage
name|handle
argument_list|(
name|qt_simple_toolbarhandle
argument_list|)
decl_stmt|;
name|alphaCornerColor
operator|.
name|setAlpha
argument_list|(
literal|170
argument_list|)
expr_stmt|;
name|handle
operator|.
name|setColor
argument_list|(
literal|1
argument_list|,
name|alphaCornerColor
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
name|handle
operator|.
name|setColor
argument_list|(
literal|2
argument_list|,
name|mergedColors
argument_list|(
name|alphaCornerColor
argument_list|,
name|option
operator|->
name|palette
operator|.
name|light
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
name|handle
operator|.
name|setColor
argument_list|(
literal|3
argument_list|,
name|option
operator|->
name|palette
operator|.
name|light
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
specifier|const
name|int
name|spacing
init|=
literal|2
decl_stmt|;
if|if
condition|(
name|orientation
operator|==
name|Qt
operator|::
name|Vertical
condition|)
block|{
name|int
name|nchunks
init|=
name|rect
operator|.
name|width
argument_list|()
operator|/
operator|(
name|handle
operator|.
name|width
argument_list|()
operator|+
name|spacing
operator|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|nchunks
condition|;
operator|++
name|i
control|)
name|painter
operator|->
name|drawImage
argument_list|(
name|QPoint
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
name|i
operator|*
operator|(
name|handle
operator|.
name|width
argument_list|()
operator|+
name|spacing
operator|)
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|)
argument_list|,
name|handle
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|int
name|nchunks
init|=
name|rect
operator|.
name|height
argument_list|()
operator|/
operator|(
name|handle
operator|.
name|height
argument_list|()
operator|+
name|spacing
operator|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|nchunks
condition|;
operator|++
name|i
control|)
name|painter
operator|->
name|drawImage
argument_list|(
name|QPoint
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
name|i
operator|*
operator|(
name|handle
operator|.
name|height
argument_list|()
operator|+
name|spacing
operator|)
argument_list|)
argument_list|,
name|handle
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_class
DECL|class|QPlastiqueStylePrivate
class|class
name|QPlastiqueStylePrivate
super|:
specifier|public
name|QWindowsStylePrivate
block|{
name|Q_DECLARE_PUBLIC
parameter_list|(
name|QPlastiqueStyle
parameter_list|)
specifier|public
private|:
name|QPlastiqueStylePrivate
parameter_list|()
constructor_decl|;
specifier|virtual
name|~
name|QPlastiqueStylePrivate
parameter_list|()
destructor_decl|;
name|void
name|drawPartialFrame
parameter_list|(
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QStyleOptionComplex
modifier|*
name|option
parameter_list|,
specifier|const
name|QRect
modifier|&
name|rect
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
function_decl|;
ifndef|#
directive|ifndef
name|QT_NO_PROGRESSBAR
DECL|member|bars
name|QList
argument_list|<
name|QProgressBar
modifier|*
argument_list|>
name|bars
decl_stmt|;
DECL|member|progressBarAnimateTimer
name|int
name|progressBarAnimateTimer
decl_stmt|;
DECL|member|timer
name|QElapsedTimer
name|timer
decl_stmt|;
endif|#
directive|endif
block|}
class|;
end_class
begin_comment
comment|/*!   \internal  */
end_comment
begin_constructor
DECL|function|QPlastiqueStylePrivate
name|QPlastiqueStylePrivate
operator|::
name|QPlastiqueStylePrivate
parameter_list|()
member_init_list|:
name|QWindowsStylePrivate
argument_list|()
ifndef|#
directive|ifndef
name|QT_NO_PROGRESSBAR
member_init_list|,
name|progressBarAnimateTimer
argument_list|(
literal|0
argument_list|)
endif|#
directive|endif
block|{ }
end_constructor
begin_comment
comment|/*!   \internal  */
end_comment
begin_destructor
DECL|function|~QPlastiqueStylePrivate
name|QPlastiqueStylePrivate
operator|::
name|~
name|QPlastiqueStylePrivate
parameter_list|()
block|{ }
end_destructor
begin_comment
comment|/*!     \class QPlastiqueStyle     \brief The QPlastiqueStyle class provides a widget style similar to the     Plastik style available in KDE.      \inmodule QtWidgets       The Plastique style provides a default look and feel for widgets on X11     that closely resembles the Plastik style, introduced by Sandro Giessl in     KDE 3.2.      \img qplastiquestyle.png     \sa QWindowsXPStyle, QMacStyle, QWindowsStyle, QCDEStyle, QMotifStyle */
end_comment
begin_comment
comment|/*!     Constructs a QPlastiqueStyle object. */
end_comment
begin_constructor
DECL|function|QPlastiqueStyle
name|QPlastiqueStyle
operator|::
name|QPlastiqueStyle
parameter_list|()
member_init_list|:
name|QWindowsStyle
argument_list|(
operator|*
operator|new
name|QPlastiqueStylePrivate
argument_list|)
block|{
name|setObjectName
argument_list|(
name|QLatin1String
argument_list|(
literal|"Plastique"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_comment
comment|/*!     Destructs the QPlastiqueStyle object. */
end_comment
begin_destructor
DECL|function|~QPlastiqueStyle
name|QPlastiqueStyle
operator|::
name|~
name|QPlastiqueStyle
parameter_list|()
block|{ }
end_destructor
begin_comment
comment|/*     Used by spin- and combo box.     Draws a rounded frame around rect but omits the right hand edge */
end_comment
begin_function
DECL|function|drawPartialFrame
name|void
name|QPlastiqueStylePrivate
operator|::
name|drawPartialFrame
parameter_list|(
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QStyleOptionComplex
modifier|*
name|option
parameter_list|,
specifier|const
name|QRect
modifier|&
name|rect
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
name|Q_Q
argument_list|(
specifier|const
name|QPlastiqueStyle
argument_list|)
expr_stmt|;
name|bool
name|reverse
init|=
name|option
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
decl_stmt|;
name|QStyleOptionFrame
name|frameOpt
decl_stmt|;
ifndef|#
directive|ifndef
name|QT_NO_LINEEDIT
if|if
condition|(
name|QLineEdit
modifier|*
name|lineedit
init|=
name|widget
operator|->
name|findChild
argument_list|<
name|QLineEdit
operator|*
argument_list|>
argument_list|()
condition|)
name|frameOpt
operator|.
name|initFrom
argument_list|(
name|lineedit
argument_list|)
expr_stmt|;
else|#
directive|else
name|Q_UNUSED
argument_list|(
argument|widget
argument_list|)
endif|#
directive|endif
comment|// QT_NO_LINEEDIT
name|frameOpt
operator|.
name|rect
operator|=
name|rect
expr_stmt|;
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
name|frameOpt
operator|.
name|rect
operator|.
name|adjust
argument_list|(
operator|-
name|blueFrameWidth
operator|+
operator|(
name|reverse
condition|?
literal|1
else|:
literal|0
operator|)
argument_list|,
operator|-
name|blueFrameWidth
argument_list|,
name|blueFrameWidth
operator|+
operator|(
name|reverse
condition|?
literal|0
else|:
operator|-
literal|1
operator|)
argument_list|,
name|blueFrameWidth
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setClipRect
argument_list|(
name|frameOpt
operator|.
name|rect
argument_list|)
expr_stmt|;
name|frameOpt
operator|.
name|rect
operator|.
name|adjust
argument_list|(
name|reverse
condition|?
operator|-
literal|2
else|:
literal|0
argument_list|,
literal|0
argument_list|,
name|reverse
condition|?
literal|0
else|:
literal|2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|frameOpt
operator|.
name|lineWidth
operator|=
name|q
operator|->
name|pixelMetric
argument_list|(
name|QStyle
operator|::
name|PM_DefaultFrameWidth
argument_list|)
expr_stmt|;
name|frameOpt
operator|.
name|midLineWidth
operator|=
literal|0
expr_stmt|;
name|frameOpt
operator|.
name|state
operator|=
name|option
operator|->
name|state
operator||
name|QStyle
operator|::
name|State_Sunken
expr_stmt|;
name|frameOpt
operator|.
name|palette
operator|=
name|option
operator|->
name|palette
expr_stmt|;
name|q
operator|->
name|drawPrimitive
argument_list|(
name|QStyle
operator|::
name|PE_PanelLineEdit
argument_list|,
operator|&
name|frameOpt
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
comment|// Draw a two pixel highlight on the flat edge
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|QStyle
operator|::
name|State_HasFocus
condition|)
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|highlight
argument_list|()
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QBrush
name|focusBorder
init|=
name|option
operator|->
name|palette
operator|.
name|highlight
argument_list|()
decl_stmt|;
name|qBrushSetAlphaF
argument_list|(
operator|&
name|focusBorder
argument_list|,
name|qreal
argument_list|(
literal|0.65
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|reverse
condition|)
block|{
name|painter
operator|->
name|drawLine
argument_list|(
name|rect
operator|.
name|topRight
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|rect
operator|.
name|bottomRight
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|focusBorder
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|rect
operator|.
name|topRight
argument_list|()
argument_list|,
name|rect
operator|.
name|bottomRight
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|painter
operator|->
name|drawLine
argument_list|(
name|rect
operator|.
name|topLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|rect
operator|.
name|bottomLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
operator|-
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|focusBorder
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_function
begin_comment
comment|/*!   \reimp */
end_comment
begin_function
DECL|function|drawPrimitive
name|void
name|QPlastiqueStyle
operator|::
name|drawPrimitive
parameter_list|(
name|PrimitiveElement
name|element
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|option
parameter_list|,
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
name|Q_ASSERT
argument_list|(
name|option
argument_list|)
expr_stmt|;
name|QColor
name|borderColor
init|=
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|178
argument_list|)
decl_stmt|;
name|QColor
name|alphaCornerColor
decl_stmt|;
if|if
condition|(
name|widget
condition|)
block|{
comment|// ### backgroundrole/foregroundrole should be part of the style option
name|alphaCornerColor
operator|=
name|mergedColors
argument_list|(
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|widget
operator|->
name|backgroundRole
argument_list|()
argument_list|)
argument_list|,
name|borderColor
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|alphaCornerColor
operator|=
name|mergedColors
argument_list|(
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
name|borderColor
argument_list|)
expr_stmt|;
block|}
name|QColor
name|alphaTextColor
init|=
name|mergedColors
argument_list|(
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
name|option
operator|->
name|palette
operator|.
name|text
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
decl_stmt|;
switch|switch
condition|(
name|element
condition|)
block|{
case|case
name|PE_IndicatorButtonDropDown
case|:
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_PanelButtonTool
argument_list|,
name|option
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
break|break;
case|case
name|PE_FrameDefaultButton
case|:
block|{
if|if
condition|(
operator|!
operator|(
name|option
operator|->
name|state
operator|&
name|QStyle
operator|::
name|State_Enabled
operator|)
condition|)
break|break;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|QColor
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|127
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
specifier|const
name|QLine
name|lines
index|[
literal|4
index|]
init|=
block|{
name|QLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
argument_list|)
block|,
name|QLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottom
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
block|,
name|QLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|,
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
block|,
name|QLine
argument_list|(
argument|option->rect.right()
argument_list|,
argument|option->rect.top() +
literal|2
argument_list|,
argument|option->rect.right()
argument_list|,
argument|option->rect.bottom() -
literal|2
argument_list|)
block|}
decl_stmt|;
name|painter
operator|->
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QPoint
name|points
index|[
literal|8
index|]
decl_stmt|;
name|points
index|[
literal|0
index|]
operator|=
name|QPoint
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
name|points
index|[
literal|1
index|]
operator|=
name|QPoint
argument_list|(
name|option
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
name|points
index|[
literal|2
index|]
operator|=
name|QPoint
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|points
index|[
literal|3
index|]
operator|=
name|QPoint
argument_list|(
name|option
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPoints
argument_list|(
name|points
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|QColor
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|63
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|points
index|[
literal|0
index|]
operator|=
name|QPoint
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
argument_list|)
expr_stmt|;
name|points
index|[
literal|1
index|]
operator|=
name|QPoint
argument_list|(
name|option
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
argument_list|)
expr_stmt|;
name|points
index|[
literal|2
index|]
operator|=
name|QPoint
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
name|points
index|[
literal|3
index|]
operator|=
name|QPoint
argument_list|(
name|option
operator|->
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
name|points
index|[
literal|4
index|]
operator|=
name|QPoint
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
name|points
index|[
literal|5
index|]
operator|=
name|QPoint
argument_list|(
name|option
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
name|points
index|[
literal|6
index|]
operator|=
name|QPoint
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|points
index|[
literal|7
index|]
operator|=
name|QPoint
argument_list|(
name|option
operator|->
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPoints
argument_list|(
name|points
argument_list|,
literal|8
argument_list|)
expr_stmt|;
break|break;
block|}
ifndef|#
directive|ifndef
name|QT_NO_TABWIDGET
case|case
name|PE_FrameTabWidget
case|:
if|if
condition|(
specifier|const
name|QStyleOptionTabWidgetFrame
modifier|*
name|twf
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionTabWidgetFrame
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
if|if
condition|(
name|twf
operator|->
name|shape
operator|!=
name|QTabBar
operator|::
name|RoundedNorth
operator|&&
name|twf
operator|->
name|shape
operator|!=
name|QTabBar
operator|::
name|RoundedWest
operator|&&
name|twf
operator|->
name|shape
operator|!=
name|QTabBar
operator|::
name|RoundedSouth
operator|&&
name|twf
operator|->
name|shape
operator|!=
name|QTabBar
operator|::
name|RoundedEast
condition|)
block|{
name|QWindowsStyle
operator|::
name|drawPrimitive
argument_list|(
name|element
argument_list|,
name|option
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
break|break;
block|}
name|int
name|borderThickness
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_TabBarBaseOverlap
argument_list|,
name|twf
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|bool
name|reverse
init|=
operator|(
name|twf
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
operator|)
decl_stmt|;
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
comment|// Start by filling the contents of the tab widget frame (which is
comment|// actually a panel).
name|painter
operator|->
name|fillRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|option
operator|->
name|palette
operator|.
name|window
argument_list|()
argument_list|)
expr_stmt|;
name|QRect
name|tabBarRect
decl_stmt|;
switch|switch
condition|(
name|twf
operator|->
name|shape
condition|)
block|{
case|case
name|QTabBar
operator|::
name|RoundedNorth
case|:
if|if
condition|(
name|reverse
condition|)
name|tabBarRect
operator|=
name|QRect
argument_list|(
name|twf
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
name|twf
operator|->
name|leftCornerWidgetSize
operator|.
name|width
argument_list|()
operator|-
name|twf
operator|->
name|tabBarSize
operator|.
name|width
argument_list|()
operator|+
literal|1
argument_list|,
name|twf
operator|->
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|twf
operator|->
name|tabBarSize
operator|.
name|width
argument_list|()
argument_list|,
name|borderThickness
argument_list|)
expr_stmt|;
else|else
name|tabBarRect
operator|=
name|QRect
argument_list|(
name|twf
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
name|twf
operator|->
name|leftCornerWidgetSize
operator|.
name|width
argument_list|()
argument_list|,
name|twf
operator|->
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|twf
operator|->
name|tabBarSize
operator|.
name|width
argument_list|()
argument_list|,
name|borderThickness
argument_list|)
expr_stmt|;
break|break ;
case|case
name|QTabBar
operator|::
name|RoundedWest
case|:
name|tabBarRect
operator|=
name|QRect
argument_list|(
name|twf
operator|->
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|twf
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
name|twf
operator|->
name|leftCornerWidgetSize
operator|.
name|height
argument_list|()
argument_list|,
name|borderThickness
argument_list|,
name|twf
operator|->
name|tabBarSize
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
break|break ;
case|case
name|QTabBar
operator|::
name|RoundedEast
case|:
name|tabBarRect
operator|=
name|QRect
argument_list|(
name|twf
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
name|borderThickness
operator|+
literal|1
argument_list|,
name|twf
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
name|twf
operator|->
name|leftCornerWidgetSize
operator|.
name|height
argument_list|()
argument_list|,
name|borderThickness
argument_list|,
name|twf
operator|->
name|tabBarSize
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
break|break ;
case|case
name|QTabBar
operator|::
name|RoundedSouth
case|:
if|if
condition|(
name|reverse
condition|)
name|tabBarRect
operator|=
name|QRect
argument_list|(
name|twf
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
name|twf
operator|->
name|leftCornerWidgetSize
operator|.
name|width
argument_list|()
operator|-
name|twf
operator|->
name|tabBarSize
operator|.
name|width
argument_list|()
operator|+
literal|1
argument_list|,
name|twf
operator|->
name|rect
operator|.
name|bottom
argument_list|()
operator|-
name|borderThickness
operator|+
literal|1
argument_list|,
name|twf
operator|->
name|tabBarSize
operator|.
name|width
argument_list|()
argument_list|,
name|borderThickness
argument_list|)
expr_stmt|;
else|else
name|tabBarRect
operator|=
name|QRect
argument_list|(
name|twf
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
name|twf
operator|->
name|leftCornerWidgetSize
operator|.
name|width
argument_list|()
argument_list|,
name|twf
operator|->
name|rect
operator|.
name|bottom
argument_list|()
operator|-
name|borderThickness
operator|+
literal|1
argument_list|,
name|twf
operator|->
name|tabBarSize
operator|.
name|width
argument_list|()
argument_list|,
name|borderThickness
argument_list|)
expr_stmt|;
break|break ;
default|default:
break|break;
block|}
name|QRegion
name|region
argument_list|(
name|twf
operator|->
name|rect
argument_list|)
decl_stmt|;
name|region
operator|-=
name|tabBarRect
expr_stmt|;
name|painter
operator|->
name|setClipRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
comment|// Outer border
name|QLine
name|leftLine
init|=
name|QLine
argument_list|(
name|twf
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|,
name|twf
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
operator|-
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
decl_stmt|;
name|QLine
name|rightLine
init|=
name|QLine
argument_list|(
name|twf
operator|->
name|rect
operator|.
name|topRight
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|,
name|twf
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
operator|-
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
decl_stmt|;
name|QLine
name|bottomLine
init|=
name|QLine
argument_list|(
name|twf
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
argument_list|,
name|twf
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
operator|-
name|QPoint
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|QLine
name|topLine
init|=
name|QLine
argument_list|(
name|twf
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
argument_list|,
name|twf
operator|->
name|rect
operator|.
name|topRight
argument_list|()
operator|-
name|QPoint
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|QBrush
name|border
init|=
name|option
operator|->
name|palette
operator|.
name|shadow
argument_list|()
decl_stmt|;
name|qBrushSetAlphaF
argument_list|(
operator|&
name|border
argument_list|,
name|qreal
argument_list|(
literal|0.4
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|border
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QVarLengthArray
argument_list|<
name|QLine
argument_list|,
literal|4
argument_list|>
name|lines
decl_stmt|;
name|QVarLengthArray
argument_list|<
name|QPoint
argument_list|,
literal|8
argument_list|>
name|points
decl_stmt|;
name|lines
operator|.
name|append
argument_list|(
name|topLine
argument_list|)
expr_stmt|;
comment|// Inner border
name|QLine
name|innerLeftLine
init|=
name|QLine
argument_list|(
name|leftLine
operator|.
name|p1
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|,
name|leftLine
operator|.
name|p2
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|QLine
name|innerRightLine
init|=
name|QLine
argument_list|(
name|rightLine
operator|.
name|p1
argument_list|()
operator|-
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|,
name|rightLine
operator|.
name|p2
argument_list|()
operator|-
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|QLine
name|innerBottomLine
init|=
name|QLine
argument_list|(
name|bottomLine
operator|.
name|p1
argument_list|()
operator|-
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|bottomLine
operator|.
name|p2
argument_list|()
operator|-
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|QLine
name|innerTopLine
init|=
name|QLine
argument_list|(
name|topLine
operator|.
name|p1
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|topLine
operator|.
name|p2
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
decl_stmt|;
comment|// Rounded Corner
name|QPoint
name|leftBottomOuterCorner
init|=
name|QPoint
argument_list|(
name|innerLeftLine
operator|.
name|p2
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|QPoint
name|leftBottomInnerCorner1
init|=
name|QPoint
argument_list|(
name|leftLine
operator|.
name|p2
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|QPoint
name|leftBottomInnerCorner2
init|=
name|QPoint
argument_list|(
name|bottomLine
operator|.
name|p1
argument_list|()
operator|-
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|QPoint
name|rightBottomOuterCorner
init|=
name|QPoint
argument_list|(
name|innerRightLine
operator|.
name|p2
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|QPoint
name|rightBottomInnerCorner1
init|=
name|QPoint
argument_list|(
name|rightLine
operator|.
name|p2
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|QPoint
name|rightBottomInnerCorner2
init|=
name|QPoint
argument_list|(
name|bottomLine
operator|.
name|p2
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|QPoint
name|rightTopOuterCorner
init|=
name|QPoint
argument_list|(
name|innerRightLine
operator|.
name|p1
argument_list|()
operator|-
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|QPoint
name|rightTopInnerCorner1
init|=
name|QPoint
argument_list|(
name|rightLine
operator|.
name|p1
argument_list|()
operator|-
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|QPoint
name|rightTopInnerCorner2
init|=
name|QPoint
argument_list|(
name|topLine
operator|.
name|p2
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|QPoint
name|leftTopOuterCorner
init|=
name|QPoint
argument_list|(
name|innerLeftLine
operator|.
name|p1
argument_list|()
operator|-
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|QPoint
name|leftTopInnerCorner1
init|=
name|QPoint
argument_list|(
name|leftLine
operator|.
name|p1
argument_list|()
operator|-
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|QPoint
name|leftTopInnerCorner2
init|=
name|QPoint
argument_list|(
name|topLine
operator|.
name|p1
argument_list|()
operator|-
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|lines
operator|.
name|append
argument_list|(
name|leftLine
argument_list|)
expr_stmt|;
name|lines
operator|.
name|append
argument_list|(
name|rightLine
argument_list|)
expr_stmt|;
name|lines
operator|.
name|append
argument_list|(
name|bottomLine
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLines
argument_list|(
name|lines
operator|.
name|constData
argument_list|()
argument_list|,
name|lines
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|lines
operator|.
name|clear
argument_list|()
expr_stmt|;
name|points
operator|.
name|append
argument_list|(
name|leftBottomOuterCorner
argument_list|)
expr_stmt|;
name|points
operator|.
name|append
argument_list|(
name|rightBottomOuterCorner
argument_list|)
expr_stmt|;
name|points
operator|.
name|append
argument_list|(
name|rightTopOuterCorner
argument_list|)
expr_stmt|;
name|points
operator|.
name|append
argument_list|(
name|leftTopOuterCorner
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPoints
argument_list|(
name|points
operator|.
name|constData
argument_list|()
argument_list|,
name|points
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|points
operator|.
name|clear
argument_list|()
expr_stmt|;
name|QBrush
name|innerTopLeft
init|=
name|option
operator|->
name|palette
operator|.
name|shadow
argument_list|()
decl_stmt|;
name|qBrushSetAlphaF
argument_list|(
operator|&
name|innerTopLeft
argument_list|,
name|qreal
argument_list|(
literal|0.075
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|innerTopLeft
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|lines
operator|.
name|append
argument_list|(
name|innerLeftLine
argument_list|)
expr_stmt|;
name|lines
operator|.
name|append
argument_list|(
name|innerTopLine
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLines
argument_list|(
name|lines
operator|.
name|constData
argument_list|()
argument_list|,
name|lines
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|lines
operator|.
name|clear
argument_list|()
expr_stmt|;
name|QBrush
name|innerBottomRight
init|=
name|option
operator|->
name|palette
operator|.
name|shadow
argument_list|()
decl_stmt|;
name|qBrushSetAlphaF
argument_list|(
operator|&
name|innerBottomRight
argument_list|,
name|qreal
argument_list|(
literal|0.23
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|innerBottomRight
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|lines
operator|.
name|append
argument_list|(
name|innerRightLine
argument_list|)
expr_stmt|;
name|lines
operator|.
name|append
argument_list|(
name|innerBottomLine
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLines
argument_list|(
name|lines
operator|.
name|constData
argument_list|()
argument_list|,
name|lines
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|lines
operator|.
name|clear
argument_list|()
expr_stmt|;
name|QBrush
name|corner
init|=
name|option
operator|->
name|palette
operator|.
name|shadow
argument_list|()
decl_stmt|;
name|qBrushSetAlphaF
argument_list|(
operator|&
name|corner
argument_list|,
literal|0.25
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|corner
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|append
argument_list|(
name|leftBottomInnerCorner1
argument_list|)
expr_stmt|;
name|points
operator|.
name|append
argument_list|(
name|leftBottomInnerCorner2
argument_list|)
expr_stmt|;
name|points
operator|.
name|append
argument_list|(
name|rightBottomInnerCorner1
argument_list|)
expr_stmt|;
name|points
operator|.
name|append
argument_list|(
name|rightBottomInnerCorner2
argument_list|)
expr_stmt|;
name|points
operator|.
name|append
argument_list|(
name|rightTopInnerCorner1
argument_list|)
expr_stmt|;
name|points
operator|.
name|append
argument_list|(
name|rightTopInnerCorner2
argument_list|)
expr_stmt|;
name|points
operator|.
name|append
argument_list|(
name|leftTopInnerCorner1
argument_list|)
expr_stmt|;
name|points
operator|.
name|append
argument_list|(
name|leftTopInnerCorner2
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPoints
argument_list|(
name|points
operator|.
name|constData
argument_list|()
argument_list|,
name|points
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|points
operator|.
name|clear
argument_list|()
expr_stmt|;
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
break|break ;
endif|#
directive|endif
comment|// QT_NO_TABWIDGET
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
case|case
name|PE_FrameTabBarBase
case|:
if|if
condition|(
specifier|const
name|QStyleOptionTabBarBase
modifier|*
name|tbb
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionTabBarBase
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
if|if
condition|(
name|tbb
operator|->
name|shape
operator|!=
name|QTabBar
operator|::
name|RoundedNorth
operator|&&
name|tbb
operator|->
name|shape
operator|!=
name|QTabBar
operator|::
name|RoundedWest
operator|&&
name|tbb
operator|->
name|shape
operator|!=
name|QTabBar
operator|::
name|RoundedSouth
operator|&&
name|tbb
operator|->
name|shape
operator|!=
name|QTabBar
operator|::
name|RoundedEast
condition|)
block|{
name|QWindowsStyle
operator|::
name|drawPrimitive
argument_list|(
name|element
argument_list|,
name|option
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
break|break;
block|}
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
name|QRegion
name|region
argument_list|(
name|tbb
operator|->
name|rect
argument_list|)
decl_stmt|;
name|region
operator|-=
name|tbb
operator|->
name|tabBarRect
expr_stmt|;
name|painter
operator|->
name|setClipRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
name|QLine
name|topLine
init|=
name|QLine
argument_list|(
name|tbb
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
operator|-
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|tbb
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
operator|-
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|QLine
name|bottomLine
init|=
name|QLine
argument_list|(
name|tbb
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|,
name|tbb
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
argument_list|)
decl_stmt|;
name|QBrush
name|border
init|=
name|option
operator|->
name|palette
operator|.
name|shadow
argument_list|()
decl_stmt|;
name|qBrushSetAlphaF
argument_list|(
operator|&
name|border
argument_list|,
name|qreal
argument_list|(
literal|0.4
argument_list|)
argument_list|)
expr_stmt|;
name|QBrush
name|innerTopLeft
init|=
name|option
operator|->
name|palette
operator|.
name|shadow
argument_list|()
decl_stmt|;
name|qBrushSetAlphaF
argument_list|(
operator|&
name|innerTopLeft
argument_list|,
name|qreal
argument_list|(
literal|0.075
argument_list|)
argument_list|)
expr_stmt|;
name|QBrush
name|innerBottomRight
init|=
name|option
operator|->
name|palette
operator|.
name|shadow
argument_list|()
decl_stmt|;
name|qBrushSetAlphaF
argument_list|(
operator|&
name|innerBottomRight
argument_list|,
name|qreal
argument_list|(
literal|0.23
argument_list|)
argument_list|)
expr_stmt|;
name|QBrush
name|corner
init|=
name|option
operator|->
name|palette
operator|.
name|shadow
argument_list|()
decl_stmt|;
name|qBrushSetAlphaF
argument_list|(
operator|&
name|corner
argument_list|,
literal|0.25
argument_list|)
expr_stmt|;
if|if
condition|(
name|tbb
operator|->
name|shape
operator|==
name|QTabBar
operator|::
name|RoundedSouth
condition|)
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|corner
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|border
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|topLine
argument_list|)
expr_stmt|;
if|if
condition|(
name|tbb
operator|->
name|shape
operator|!=
name|QTabBar
operator|::
name|RoundedSouth
condition|)
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|innerTopLeft
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|border
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|bottomLine
argument_list|)
expr_stmt|;
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
break|break ;
endif|#
directive|endif
comment|// QT_NO_TABBAR
ifndef|#
directive|ifndef
name|QT_NO_GROUPBOX
case|case
name|PE_FrameGroupBox
case|:
if|if
condition|(
specifier|const
name|QStyleOptionFrame
modifier|*
name|frame
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionFrame
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|QStyleOptionFrameV2
name|frameV2
argument_list|(
operator|*
name|frame
argument_list|)
decl_stmt|;
if|if
condition|(
name|frameV2
operator|.
name|features
operator|&
name|QStyleOptionFrameV2
operator|::
name|Flat
condition|)
block|{
name|QPen
name|oldPen
init|=
name|painter
operator|->
name|pen
argument_list|()
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|borderColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|frameV2
operator|.
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|frameV2
operator|.
name|rect
operator|.
name|topRight
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|oldPen
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|frameV2
operator|.
name|state
operator|&=
operator|~
operator|(
name|State_Sunken
operator||
name|State_HasFocus
operator|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_Frame
argument_list|,
operator|&
name|frameV2
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_GROUPBOX
case|case
name|PE_Frame
case|:
block|{
name|QFrame
operator|::
name|Shadow
name|shadow
init|=
name|QFrame
operator|::
name|Plain
decl_stmt|;
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|State_Sunken
condition|)
name|shadow
operator|=
name|QFrame
operator|::
name|Sunken
expr_stmt|;
elseif|else
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|State_Raised
condition|)
name|shadow
operator|=
name|QFrame
operator|::
name|Raised
expr_stmt|;
name|qt_plastique_draw_frame
argument_list|(
name|painter
argument_list|,
name|option
operator|->
name|rect
argument_list|,
name|option
argument_list|,
name|shadow
argument_list|)
expr_stmt|;
break|break;
block|}
ifndef|#
directive|ifndef
name|QT_NO_LINEEDIT
case|case
name|PE_FrameLineEdit
case|:
name|qt_plastique_draw_frame
argument_list|(
name|painter
argument_list|,
name|option
operator|->
name|rect
argument_list|,
name|option
argument_list|,
name|QFrame
operator|::
name|Sunken
argument_list|)
expr_stmt|;
break|break;
case|case
name|PE_PanelLineEdit
case|:
if|if
condition|(
specifier|const
name|QStyleOptionFrame
modifier|*
name|lineEdit
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionFrame
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
comment|// Panel of a line edit inside combo box or spin box is drawn in CC_ComboBox and CC_SpinBox
if|if
condition|(
name|widget
condition|)
block|{
ifndef|#
directive|ifndef
name|QT_NO_SPINBOX
comment|// Spinbox doesn't need a separate palette for the lineedit
if|if
condition|(
name|qobject_cast
argument_list|<
specifier|const
name|QAbstractSpinBox
operator|*
argument_list|>
argument_list|(
name|widget
operator|->
name|parentWidget
argument_list|()
argument_list|)
condition|)
break|break;
endif|#
directive|endif
block|}
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
comment|// Fill the line edit insides
name|QRect
name|filledRect
init|=
name|lineEdit
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
decl_stmt|;
name|QBrush
name|baseBrush
init|=
name|qMapBrushToRect
argument_list|(
name|lineEdit
operator|->
name|palette
operator|.
name|base
argument_list|()
argument_list|,
name|filledRect
argument_list|)
decl_stmt|;
name|painter
operator|->
name|setBrushOrigin
argument_list|(
name|filledRect
operator|.
name|topLeft
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|fillRect
argument_list|(
name|filledRect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|baseBrush
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|baseBrush
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
specifier|const
name|QLine
name|lines
index|[
literal|4
index|]
init|=
block|{
name|QLine
argument_list|(
name|filledRect
operator|.
name|left
argument_list|()
argument_list|,
name|filledRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|filledRect
operator|.
name|left
argument_list|()
argument_list|,
name|filledRect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
block|,
name|QLine
argument_list|(
name|filledRect
operator|.
name|right
argument_list|()
argument_list|,
name|filledRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|filledRect
operator|.
name|right
argument_list|()
argument_list|,
name|filledRect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
block|,
name|QLine
argument_list|(
name|filledRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|filledRect
operator|.
name|top
argument_list|()
argument_list|,
name|filledRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|filledRect
operator|.
name|top
argument_list|()
argument_list|)
block|,
name|QLine
argument_list|(
argument|filledRect.left() +
literal|1
argument_list|,
argument|filledRect.bottom()
argument_list|,
argument|filledRect.right() -
literal|1
argument_list|,
argument|filledRect.bottom()
argument_list|)
block|}
decl_stmt|;
name|painter
operator|->
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|4
argument_list|)
expr_stmt|;
if|if
condition|(
name|lineEdit
operator|->
name|lineWidth
operator|!=
literal|0
condition|)
name|qt_plastique_draw_frame
argument_list|(
name|painter
argument_list|,
name|option
operator|->
name|rect
argument_list|,
name|option
argument_list|,
name|QFrame
operator|::
name|Sunken
argument_list|)
expr_stmt|;
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
block|}
endif|#
directive|endif
comment|// QT_NO_LINEEDIT
case|case
name|PE_FrameDockWidget
case|:
case|case
name|PE_FrameMenu
case|:
case|case
name|PE_FrameStatusBarItem
case|:
block|{
comment|// Draws the frame around a popup menu.
name|QPen
name|oldPen
init|=
name|painter
operator|->
name|pen
argument_list|()
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|borderColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|alphaCornerColor
argument_list|)
expr_stmt|;
specifier|const
name|QPoint
name|points
index|[
literal|4
index|]
init|=
block|{
name|QPoint
argument_list|(
name|option
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|)
block|,
name|QPoint
argument_list|(
name|option
operator|->
name|rect
operator|.
name|topRight
argument_list|()
argument_list|)
block|,
name|QPoint
argument_list|(
name|option
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|)
block|,
name|QPoint
argument_list|(
argument|option->rect.bottomRight()
argument_list|)
block|}
decl_stmt|;
name|painter
operator|->
name|drawPoints
argument_list|(
name|points
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|oldPen
argument_list|)
expr_stmt|;
break|break;
block|}
ifndef|#
directive|ifndef
name|QT_NO_MAINWINDOW
case|case
name|PE_PanelMenuBar
case|:
if|if
condition|(
operator|(
name|widget
operator|&&
name|qobject_cast
argument_list|<
specifier|const
name|QMainWindow
operator|*
argument_list|>
argument_list|(
name|widget
operator|->
name|parentWidget
argument_list|()
argument_list|)
operator|)
condition|)
block|{
comment|// Draws the light line above and the dark line below menu bars and
comment|// tool bars.
name|QPen
name|oldPen
init|=
name|painter
operator|->
name|pen
argument_list|()
decl_stmt|;
if|if
condition|(
name|element
operator|==
name|PE_PanelMenuBar
operator|||
operator|(
name|option
operator|->
name|state
operator|&
name|State_Horizontal
operator|)
condition|)
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|alphaCornerColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottom
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|104
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|104
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|alphaCornerColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|setPen
argument_list|(
name|oldPen
argument_list|)
expr_stmt|;
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_MAINWINDOW
case|case
name|PE_IndicatorHeaderArrow
case|:
block|{
name|bool
name|usedAntialiasing
init|=
name|painter
operator|->
name|renderHints
argument_list|()
operator|&
name|QPainter
operator|::
name|Antialiasing
decl_stmt|;
if|if
condition|(
operator|!
name|usedAntialiasing
condition|)
name|painter
operator|->
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|)
expr_stmt|;
name|QWindowsStyle
operator|::
name|drawPrimitive
argument_list|(
name|element
argument_list|,
name|option
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|usedAntialiasing
condition|)
name|painter
operator|->
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|,
literal|false
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|PE_PanelButtonTool
case|:
comment|// Draws a tool button (f.ex., in QToolBar and QTabBar)
if|if
condition|(
operator|(
name|option
operator|->
name|state
operator|&
name|State_Enabled
operator|||
name|option
operator|->
name|state
operator|&
name|State_On
operator|)
operator|||
operator|!
operator|(
name|option
operator|->
name|state
operator|&
name|State_AutoRaise
operator|)
condition|)
name|qt_plastique_drawShadedPanel
argument_list|(
name|painter
argument_list|,
name|option
argument_list|,
literal|true
argument_list|,
name|widget
argument_list|)
expr_stmt|;
break|break;
ifndef|#
directive|ifndef
name|QT_NO_TOOLBAR
case|case
name|PE_IndicatorToolBarHandle
case|:
block|{
name|QPixmap
name|cache
decl_stmt|;
name|QRect
name|rect
init|=
name|option
operator|->
name|rect
decl_stmt|;
name|QString
name|pixmapName
init|=
name|QStyleHelper
operator|::
name|uniqueName
argument_list|(
name|QLatin1String
argument_list|(
literal|"toolbarhandle"
argument_list|)
argument_list|,
name|option
argument_list|,
name|rect
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|QPixmapCache
operator|::
name|find
argument_list|(
name|pixmapName
argument_list|,
name|cache
argument_list|)
condition|)
block|{
name|cache
operator|=
name|QPixmap
argument_list|(
name|rect
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|cache
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|transparent
argument_list|)
expr_stmt|;
name|QPainter
name|cachePainter
argument_list|(
operator|&
name|cache
argument_list|)
decl_stmt|;
name|QRect
name|cacheRect
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|rect
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|widget
condition|)
name|cachePainter
operator|.
name|fillRect
argument_list|(
name|cacheRect
argument_list|,
name|option
operator|->
name|palette
operator|.
name|brush
argument_list|(
name|widget
operator|->
name|backgroundRole
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|cachePainter
operator|.
name|fillRect
argument_list|(
name|cacheRect
argument_list|,
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
argument_list|)
expr_stmt|;
name|QImage
name|handle
argument_list|(
name|qt_toolbarhandle
argument_list|)
decl_stmt|;
name|alphaCornerColor
operator|.
name|setAlpha
argument_list|(
literal|170
argument_list|)
expr_stmt|;
name|handle
operator|.
name|setColor
argument_list|(
literal|1
argument_list|,
name|alphaCornerColor
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
name|handle
operator|.
name|setColor
argument_list|(
literal|2
argument_list|,
name|mergedColors
argument_list|(
name|alphaCornerColor
argument_list|,
name|option
operator|->
name|palette
operator|.
name|light
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
name|handle
operator|.
name|setColor
argument_list|(
literal|3
argument_list|,
name|option
operator|->
name|palette
operator|.
name|light
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|State_Horizontal
condition|)
block|{
name|int
name|nchunks
init|=
name|cacheRect
operator|.
name|height
argument_list|()
operator|/
name|handle
operator|.
name|height
argument_list|()
decl_stmt|;
name|int
name|indent
init|=
operator|(
name|cacheRect
operator|.
name|height
argument_list|()
operator|-
operator|(
name|nchunks
operator|*
name|handle
operator|.
name|height
argument_list|()
operator|)
operator|)
operator|/
literal|2
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|nchunks
condition|;
operator|++
name|i
control|)
name|cachePainter
operator|.
name|drawImage
argument_list|(
name|QPoint
argument_list|(
name|cacheRect
operator|.
name|left
argument_list|()
operator|+
literal|3
argument_list|,
name|cacheRect
operator|.
name|top
argument_list|()
operator|+
name|indent
operator|+
name|i
operator|*
name|handle
operator|.
name|height
argument_list|()
argument_list|)
argument_list|,
name|handle
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|int
name|nchunks
init|=
name|cacheRect
operator|.
name|width
argument_list|()
operator|/
name|handle
operator|.
name|width
argument_list|()
decl_stmt|;
name|int
name|indent
init|=
operator|(
name|cacheRect
operator|.
name|width
argument_list|()
operator|-
operator|(
name|nchunks
operator|*
name|handle
operator|.
name|width
argument_list|()
operator|)
operator|)
operator|/
literal|2
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|nchunks
condition|;
operator|++
name|i
control|)
name|cachePainter
operator|.
name|drawImage
argument_list|(
name|QPoint
argument_list|(
name|cacheRect
operator|.
name|left
argument_list|()
operator|+
name|indent
operator|+
name|i
operator|*
name|handle
operator|.
name|width
argument_list|()
argument_list|,
name|cacheRect
operator|.
name|top
argument_list|()
operator|+
literal|3
argument_list|)
argument_list|,
name|handle
argument_list|)
expr_stmt|;
block|}
name|cachePainter
operator|.
name|end
argument_list|()
expr_stmt|;
name|QPixmapCache
operator|::
name|insert
argument_list|(
name|pixmapName
argument_list|,
name|cache
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|drawPixmap
argument_list|(
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|cache
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|PE_IndicatorToolBarSeparator
case|:
block|{
name|QPen
name|oldPen
init|=
name|painter
operator|->
name|pen
argument_list|()
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|alphaCornerColor
argument_list|)
expr_stmt|;
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|State_Horizontal
condition|)
block|{
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|base
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|option
operator|->
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|base
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottom
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|setPen
argument_list|(
name|oldPen
argument_list|)
expr_stmt|;
break|break;
block|}
endif|#
directive|endif
comment|// QT_NO_TOOLBAR
case|case
name|PE_PanelButtonCommand
case|:
if|if
condition|(
specifier|const
name|QStyleOptionButton
modifier|*
name|button
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionButton
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|bool
name|sunken
init|=
operator|(
name|button
operator|->
name|state
operator|&
name|State_Sunken
operator|)
operator|||
operator|(
name|button
operator|->
name|state
operator|&
name|State_On
operator|)
decl_stmt|;
if|if
condition|(
operator|(
name|button
operator|->
name|features
operator|&
name|QStyleOptionButton
operator|::
name|Flat
operator|)
operator|&&
operator|!
name|sunken
condition|)
break|break;
name|bool
name|defaultButton
init|=
operator|(
name|button
operator|->
name|features
operator|&
operator|(
name|QStyleOptionButton
operator|::
name|DefaultButton
operator||
name|QStyleOptionButton
operator|::
name|AutoDefaultButton
operator|)
operator|)
decl_stmt|;
name|BEGIN_STYLE_PIXMAPCACHE
argument_list|(
argument|QString::fromLatin1(
literal|"pushbutton-%1"
argument|).arg(defaultButton)
argument_list|)
name|QPen
name|oldPen
init|=
name|p
operator|->
name|pen
argument_list|()
decl_stmt|;
name|bool
name|hover
init|=
operator|(
name|button
operator|->
name|state
operator|&
name|State_Enabled
operator|)
operator|&&
operator|(
name|button
operator|->
name|state
operator|&
name|State_MouseOver
operator|)
decl_stmt|;
comment|// Give the painter a different brush origin for sunken buttons
if|if
condition|(
name|sunken
condition|)
block|{
comment|// ### No such function
comment|// p->setPenOrigin(rect.left() + 1, rect.top() + 1);
name|p
operator|->
name|setBrushOrigin
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
block|}
comment|// Draw border
name|qt_plastique_draw_frame
argument_list|(
name|p
argument_list|,
name|rect
argument_list|,
name|option
argument_list|)
expr_stmt|;
comment|// Fill the panel
name|QRectF
name|fillRect
init|=
name|rect
operator|.
name|adjusted
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
operator|-
literal|2
argument_list|,
operator|-
literal|2
argument_list|)
decl_stmt|;
comment|// Button colors
name|QBrush
name|alphaCornerBrush
init|=
name|qMapBrushToRect
argument_list|(
name|qBrushDark
argument_list|(
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
argument_list|,
literal|165
argument_list|)
argument_list|,
name|rect
argument_list|)
decl_stmt|;
name|qBrushSetAlphaF
argument_list|(
operator|&
name|alphaCornerBrush
argument_list|,
literal|0.5
argument_list|)
expr_stmt|;
name|QBrush
name|buttonGradientBrush
decl_stmt|;
name|QBrush
name|leftLineGradientBrush
decl_stmt|;
name|QBrush
name|rightLineGradientBrush
decl_stmt|;
name|QBrush
name|sunkenButtonGradientBrush
decl_stmt|;
name|QBrush
name|sunkenLeftLineGradientBrush
decl_stmt|;
name|QBrush
name|sunkenRightLineGradientBrush
decl_stmt|;
name|QBrush
name|buttonBrush
init|=
name|qMapBrushToRect
argument_list|(
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
argument_list|,
name|rect
argument_list|)
decl_stmt|;
if|if
condition|(
name|buttonBrush
operator|.
name|gradient
argument_list|()
operator|||
operator|!
name|buttonBrush
operator|.
name|texture
argument_list|()
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|buttonGradientBrush
operator|=
name|buttonBrush
expr_stmt|;
name|sunkenButtonGradientBrush
operator|=
name|qBrushDark
argument_list|(
name|buttonBrush
argument_list|,
literal|108
argument_list|)
expr_stmt|;
name|leftLineGradientBrush
operator|=
name|qBrushLight
argument_list|(
name|buttonBrush
argument_list|,
literal|105
argument_list|)
expr_stmt|;
name|rightLineGradientBrush
operator|=
name|qBrushDark
argument_list|(
name|buttonBrush
argument_list|,
literal|105
argument_list|)
expr_stmt|;
name|sunkenLeftLineGradientBrush
operator|=
name|qBrushDark
argument_list|(
name|buttonBrush
argument_list|,
literal|110
argument_list|)
expr_stmt|;
name|sunkenRightLineGradientBrush
operator|=
name|qBrushDark
argument_list|(
name|buttonBrush
argument_list|,
literal|106
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// Generate gradients
name|QLinearGradient
name|buttonGradient
argument_list|(
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|hover
condition|)
block|{
name|buttonGradient
operator|.
name|setColorAt
argument_list|(
literal|0.0
argument_list|,
name|mergedColors
argument_list|(
name|option
operator|->
name|palette
operator|.
name|highlight
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
name|buttonBrush
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|104
argument_list|)
argument_list|,
literal|6
argument_list|)
argument_list|)
expr_stmt|;
name|buttonGradient
operator|.
name|setColorAt
argument_list|(
literal|1.0
argument_list|,
name|mergedColors
argument_list|(
name|option
operator|->
name|palette
operator|.
name|highlight
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
name|buttonBrush
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|110
argument_list|)
argument_list|,
literal|6
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|buttonGradient
operator|.
name|setColorAt
argument_list|(
literal|0.0
argument_list|,
name|buttonBrush
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|104
argument_list|)
argument_list|)
expr_stmt|;
name|buttonGradient
operator|.
name|setColorAt
argument_list|(
literal|1.0
argument_list|,
name|buttonBrush
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|110
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|buttonGradientBrush
operator|=
name|QBrush
argument_list|(
name|buttonGradient
argument_list|)
expr_stmt|;
name|QLinearGradient
name|buttonGradient2
argument_list|(
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|)
decl_stmt|;
name|buttonGradient2
operator|.
name|setColorAt
argument_list|(
literal|0.0
argument_list|,
name|buttonBrush
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|113
argument_list|)
argument_list|)
expr_stmt|;
name|buttonGradient2
operator|.
name|setColorAt
argument_list|(
literal|1.0
argument_list|,
name|buttonBrush
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|103
argument_list|)
argument_list|)
expr_stmt|;
name|sunkenButtonGradientBrush
operator|=
name|QBrush
argument_list|(
name|buttonGradient2
argument_list|)
expr_stmt|;
name|QLinearGradient
name|buttonGradient3
argument_list|(
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|)
decl_stmt|;
name|buttonGradient3
operator|.
name|setColorAt
argument_list|(
literal|0.0
argument_list|,
name|buttonBrush
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|105
argument_list|)
argument_list|)
expr_stmt|;
name|buttonGradient3
operator|.
name|setColorAt
argument_list|(
literal|1.0
argument_list|,
name|buttonBrush
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|leftLineGradientBrush
operator|=
name|QBrush
argument_list|(
name|buttonGradient3
argument_list|)
expr_stmt|;
name|QLinearGradient
name|buttonGradient4
argument_list|(
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|)
decl_stmt|;
name|buttonGradient4
operator|.
name|setColorAt
argument_list|(
literal|0.0
argument_list|,
name|buttonBrush
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|buttonGradient4
operator|.
name|setColorAt
argument_list|(
literal|1.0
argument_list|,
name|buttonBrush
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|110
argument_list|)
argument_list|)
expr_stmt|;
name|rightLineGradientBrush
operator|=
name|QBrush
argument_list|(
name|buttonGradient4
argument_list|)
expr_stmt|;
name|QLinearGradient
name|buttonGradient5
argument_list|(
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|)
decl_stmt|;
name|buttonGradient5
operator|.
name|setColorAt
argument_list|(
literal|0.0
argument_list|,
name|buttonBrush
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|113
argument_list|)
argument_list|)
expr_stmt|;
name|buttonGradient5
operator|.
name|setColorAt
argument_list|(
literal|1.0
argument_list|,
name|buttonBrush
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|107
argument_list|)
argument_list|)
expr_stmt|;
name|sunkenLeftLineGradientBrush
operator|=
name|QBrush
argument_list|(
name|buttonGradient5
argument_list|)
expr_stmt|;
name|QLinearGradient
name|buttonGradient6
argument_list|(
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|)
decl_stmt|;
name|buttonGradient6
operator|.
name|setColorAt
argument_list|(
literal|0.0
argument_list|,
name|buttonBrush
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|108
argument_list|)
argument_list|)
expr_stmt|;
name|buttonGradient6
operator|.
name|setColorAt
argument_list|(
literal|1.0
argument_list|,
name|buttonBrush
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|103
argument_list|)
argument_list|)
expr_stmt|;
name|sunkenRightLineGradientBrush
operator|=
name|QBrush
argument_list|(
name|buttonGradient6
argument_list|)
expr_stmt|;
block|}
comment|// Main fill
name|p
operator|->
name|fillRect
argument_list|(
name|fillRect
argument_list|,
name|qMapBrushToRect
argument_list|(
name|sunken
condition|?
name|sunkenButtonGradientBrush
else|:
name|buttonGradientBrush
argument_list|,
name|rect
argument_list|)
argument_list|)
expr_stmt|;
comment|// Top line
name|p
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|qBrushLight
argument_list|(
name|qMapBrushToRect
argument_list|(
name|sunken
condition|?
name|sunkenButtonGradientBrush
else|:
name|buttonGradientBrush
argument_list|,
name|rect
argument_list|)
argument_list|,
literal|105
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|QPointF
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|,
name|QPointF
argument_list|(
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// Bottom line
name|p
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|qBrushDark
argument_list|(
name|qMapBrushToRect
argument_list|(
name|sunken
condition|?
name|sunkenButtonGradientBrush
else|:
name|buttonGradientBrush
argument_list|,
name|rect
argument_list|)
argument_list|,
literal|105
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|QPointF
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|,
name|QPointF
argument_list|(
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// Left line
name|p
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|qMapBrushToRect
argument_list|(
name|sunken
condition|?
name|sunkenLeftLineGradientBrush
else|:
name|leftLineGradientBrush
argument_list|,
name|rect
argument_list|)
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|QPointF
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|)
argument_list|,
name|QPointF
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
argument_list|)
expr_stmt|;
comment|// Right line
name|p
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|qMapBrushToRect
argument_list|(
name|sunken
condition|?
name|sunkenRightLineGradientBrush
else|:
name|rightLineGradientBrush
argument_list|,
name|rect
argument_list|)
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|QPointF
argument_list|(
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|)
argument_list|,
name|QPointF
argument_list|(
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
argument_list|)
expr_stmt|;
comment|// Hovering
if|if
condition|(
name|hover
operator|&&
operator|!
name|sunken
condition|)
block|{
name|QBrush
name|hover
init|=
name|qMapBrushToRect
argument_list|(
name|option
operator|->
name|palette
operator|.
name|highlight
argument_list|()
argument_list|,
name|rect
argument_list|)
decl_stmt|;
name|QBrush
name|hoverOuter
init|=
name|hover
decl_stmt|;
name|qBrushSetAlphaF
argument_list|(
operator|&
name|hoverOuter
argument_list|,
name|qreal
argument_list|(
literal|0.7
argument_list|)
argument_list|)
expr_stmt|;
name|QLine
name|lines
index|[
literal|2
index|]
decl_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|hoverOuter
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|lines
index|[
literal|0
index|]
operator|=
name|QLine
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
name|lines
index|[
literal|1
index|]
operator|=
name|QLine
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QBrush
name|hoverInner
init|=
name|hover
decl_stmt|;
name|qBrushSetAlphaF
argument_list|(
operator|&
name|hoverInner
argument_list|,
name|qreal
argument_list|(
literal|0.45
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|hoverInner
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|lines
index|[
literal|0
index|]
operator|=
name|QLine
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|,
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|)
expr_stmt|;
name|lines
index|[
literal|1
index|]
operator|=
name|QLine
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|,
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QBrush
name|hoverSide
init|=
name|hover
decl_stmt|;
name|qBrushSetAlphaF
argument_list|(
operator|&
name|hoverSide
argument_list|,
name|qreal
argument_list|(
literal|0.075
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|hoverSide
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|lines
index|[
literal|0
index|]
operator|=
name|QLine
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|,
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
expr_stmt|;
name|lines
index|[
literal|1
index|]
operator|=
name|QLine
argument_list|(
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|,
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
name|p
operator|->
name|setPen
argument_list|(
name|oldPen
argument_list|)
expr_stmt|;
name|END_STYLE_PIXMAPCACHE
block|}
break|break;
case|case
name|PE_IndicatorCheckBox
case|:
if|if
condition|(
specifier|const
name|QStyleOptionButton
modifier|*
name|button
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionButton
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|BEGIN_STYLE_PIXMAPCACHE
argument_list|(
argument|QLatin1String(
literal|"checkbox"
argument|)
argument_list|)
name|p
operator|->
name|save
argument_list|()
expr_stmt|;
comment|// Outline
name|QBrush
name|border
init|=
name|option
operator|->
name|palette
operator|.
name|shadow
argument_list|()
decl_stmt|;
name|qBrushSetAlphaF
argument_list|(
operator|&
name|border
argument_list|,
name|qreal
argument_list|(
literal|0.4
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|border
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
specifier|const
name|QLine
name|lines
index|[
literal|4
index|]
init|=
block|{
name|QLine
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|)
block|,
name|QLine
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
argument_list|,
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
block|,
name|QLine
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
block|,
name|QLine
argument_list|(
argument|rect.right()
argument_list|,
argument|rect.top() +
literal|1
argument_list|,
argument|rect.right()
argument_list|,
argument|rect.bottom() -
literal|1
argument_list|)
block|}
decl_stmt|;
name|p
operator|->
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QBrush
name|corner
init|=
name|option
operator|->
name|palette
operator|.
name|shadow
argument_list|()
decl_stmt|;
name|qBrushSetAlphaF
argument_list|(
operator|&
name|corner
argument_list|,
name|qreal
argument_list|(
literal|0.2
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|corner
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
specifier|const
name|QPoint
name|points
index|[
literal|4
index|]
init|=
block|{
name|rect
operator|.
name|topLeft
argument_list|()
block|,
name|rect
operator|.
name|topRight
argument_list|()
block|,
name|rect
operator|.
name|bottomLeft
argument_list|()
block|,
name|rect
operator|.
name|bottomRight
argument_list|()
block|}
decl_stmt|;
name|p
operator|->
name|drawPoints
argument_list|(
name|points
argument_list|,
literal|4
argument_list|)
expr_stmt|;
comment|// Fill
name|QBrush
name|baseBrush
init|=
name|qMapBrushToRect
argument_list|(
name|button
operator|->
name|palette
operator|.
name|base
argument_list|()
argument_list|,
name|rect
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|baseBrush
operator|.
name|gradient
argument_list|()
operator|&&
name|baseBrush
operator|.
name|texture
argument_list|()
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|QLinearGradient
name|gradient
argument_list|(
name|rect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|rect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
decl_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|baseBrush
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|1
argument_list|,
name|baseBrush
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|105
argument_list|)
argument_list|)
expr_stmt|;
name|baseBrush
operator|=
name|gradient
expr_stmt|;
block|}
name|p
operator|->
name|fillRect
argument_list|(
name|rect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|baseBrush
argument_list|)
expr_stmt|;
comment|// Hover
if|if
condition|(
operator|(
name|button
operator|->
name|state
operator|&
name|State_Enabled
operator|)
operator|&&
operator|(
name|button
operator|->
name|state
operator|&
name|State_MouseOver
operator|)
condition|)
block|{
name|QBrush
name|pen
init|=
name|qMapBrushToRect
argument_list|(
name|button
operator|->
name|palette
operator|.
name|highlight
argument_list|()
argument_list|,
name|rect
argument_list|)
decl_stmt|;
name|qBrushSetAlphaF
argument_list|(
operator|&
name|pen
argument_list|,
name|qreal
argument_list|(
literal|0.8
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|pen
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawRect
argument_list|(
name|rect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|2
argument_list|,
operator|-
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|qBrushSetAlphaF
argument_list|(
operator|&
name|pen
argument_list|,
literal|0.5
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|pen
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawRect
argument_list|(
name|rect
operator|.
name|adjusted
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
operator|-
literal|3
argument_list|,
operator|-
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|qBrushSetAlphaF
argument_list|(
operator|&
name|pen
argument_list|,
name|qreal
argument_list|(
literal|0.2
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|setBrush
argument_list|(
name|pen
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawRect
argument_list|(
name|rect
operator|.
name|adjusted
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
operator|-
literal|3
argument_list|,
operator|-
literal|3
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// Indicator
name|bool
name|on
init|=
name|button
operator|->
name|state
operator|&
name|State_On
decl_stmt|;
name|bool
name|sunken
init|=
name|button
operator|->
name|state
operator|&
name|State_Sunken
decl_stmt|;
name|bool
name|unchanged
init|=
name|button
operator|->
name|state
operator|&
name|State_NoChange
decl_stmt|;
name|bool
name|enabled
init|=
name|button
operator|->
name|state
operator|&
name|State_Enabled
decl_stmt|;
if|if
condition|(
name|on
operator|||
operator|(
name|enabled
operator|&&
name|sunken
operator|)
operator|||
name|unchanged
condition|)
block|{
name|p
operator|->
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|)
expr_stmt|;
name|QBrush
name|pointBrush
init|=
name|qMapBrushToRect
argument_list|(
name|button
operator|->
name|palette
operator|.
name|text
argument_list|()
argument_list|,
name|rect
argument_list|)
decl_stmt|;
if|if
condition|(
name|sunken
condition|)
name|qBrushSetAlphaF
argument_list|(
operator|&
name|pointBrush
argument_list|,
name|qreal
argument_list|(
literal|0.5
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|unchanged
condition|)
name|qBrushSetAlphaF
argument_list|(
operator|&
name|pointBrush
argument_list|,
name|qreal
argument_list|(
literal|0.3
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|pointBrush
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
specifier|const
name|QLine
name|lines
index|[
literal|2
index|]
init|=
block|{
name|QLine
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|4
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|4
argument_list|,
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|3
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|3
argument_list|)
block|,
name|QLine
argument_list|(
argument|rect.right() -
literal|3
argument_list|,
argument|rect.top() +
literal|4
argument_list|,
argument|rect.left() +
literal|4
argument_list|,
argument|rect.bottom() -
literal|3
argument_list|)
block|}
decl_stmt|;
name|p
operator|->
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
name|p
operator|->
name|restore
argument_list|()
expr_stmt|;
name|END_STYLE_PIXMAPCACHE
block|}
break|break;
case|case
name|PE_IndicatorRadioButton
case|:
if|if
condition|(
specifier|const
name|QStyleOptionButton
modifier|*
name|button
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionButton
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|BEGIN_STYLE_PIXMAPCACHE
argument_list|(
argument|QLatin1String(
literal|"radiobutton"
argument|)
argument_list|)
name|p
operator|->
name|save
argument_list|()
expr_stmt|;
name|p
operator|->
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|)
expr_stmt|;
comment|// The the filled ellipse
name|QBrush
name|border
init|=
name|qMapBrushToRect
argument_list|(
name|option
operator|->
name|palette
operator|.
name|shadow
argument_list|()
argument_list|,
name|rect
argument_list|)
decl_stmt|;
name|qBrushSetAlphaF
argument_list|(
operator|&
name|border
argument_list|,
name|qreal
argument_list|(
literal|0.51
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|border
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QBrush
name|baseBrush
init|=
name|qMapBrushToRect
argument_list|(
name|button
operator|->
name|palette
operator|.
name|base
argument_list|()
argument_list|,
name|rect
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|baseBrush
operator|.
name|gradient
argument_list|()
operator|&&
name|baseBrush
operator|.
name|texture
argument_list|()
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|QLinearGradient
name|gradient
argument_list|(
name|rect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|rect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
decl_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|baseBrush
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|1
argument_list|,
name|baseBrush
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|105
argument_list|)
argument_list|)
expr_stmt|;
name|baseBrush
operator|=
name|gradient
expr_stmt|;
block|}
name|p
operator|->
name|setBrush
argument_list|(
name|baseBrush
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawEllipse
argument_list|(
name|QRectF
argument_list|(
name|rect
argument_list|)
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// Hover
if|if
condition|(
operator|(
name|button
operator|->
name|state
operator|&
name|State_Enabled
operator|)
operator|&&
operator|(
name|button
operator|->
name|state
operator|&
name|State_MouseOver
operator|)
condition|)
block|{
name|QBrush
name|pen
init|=
name|qMapBrushToRect
argument_list|(
name|button
operator|->
name|palette
operator|.
name|highlight
argument_list|()
argument_list|,
name|rect
argument_list|)
decl_stmt|;
name|qBrushSetAlphaF
argument_list|(
operator|&
name|pen
argument_list|,
name|qreal
argument_list|(
literal|0.8
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|pen
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|qBrushSetAlphaF
argument_list|(
operator|&
name|pen
argument_list|,
name|qreal
argument_list|(
literal|0.2
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|setBrush
argument_list|(
name|pen
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawEllipse
argument_list|(
name|QRectF
argument_list|(
name|rect
argument_list|)
operator|.
name|adjusted
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
operator|-
literal|2
argument_list|,
operator|-
literal|2
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// Indicator
name|bool
name|on
init|=
name|button
operator|->
name|state
operator|&
name|State_On
decl_stmt|;
name|bool
name|sunken
init|=
name|button
operator|->
name|state
operator|&
name|State_Sunken
decl_stmt|;
name|bool
name|enabled
init|=
name|button
operator|->
name|state
operator|&
name|State_Enabled
decl_stmt|;
if|if
condition|(
name|on
operator|||
operator|(
name|enabled
operator|&&
name|sunken
operator|)
condition|)
block|{
name|p
operator|->
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|QBrush
name|pointBrush
init|=
name|qMapBrushToRect
argument_list|(
name|button
operator|->
name|palette
operator|.
name|text
argument_list|()
argument_list|,
name|rect
argument_list|)
decl_stmt|;
if|if
condition|(
name|sunken
condition|)
name|qBrushSetAlphaF
argument_list|(
operator|&
name|pointBrush
argument_list|,
literal|0.5
argument_list|)
expr_stmt|;
name|p
operator|->
name|setBrush
argument_list|(
name|pointBrush
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawEllipse
argument_list|(
name|QRectF
argument_list|(
name|rect
argument_list|)
operator|.
name|adjusted
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|,
operator|-
literal|3
argument_list|,
operator|-
literal|3
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|p
operator|->
name|restore
argument_list|()
expr_stmt|;
name|END_STYLE_PIXMAPCACHE
block|}
break|break;
ifndef|#
directive|ifndef
name|QT_NO_DOCKWIDGET
case|case
name|PE_IndicatorDockWidgetResizeHandle
case|:
if|if
condition|(
operator|(
name|option
operator|->
name|state
operator|&
name|State_Enabled
operator|)
operator|&&
operator|(
name|option
operator|->
name|state
operator|&
name|State_MouseOver
operator|)
condition|)
name|painter
operator|->
name|fillRect
argument_list|(
name|option
operator|->
name|rect
argument_list|,
name|QColor
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|,
literal|128
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|State_Horizontal
condition|)
block|{
name|int
name|width
init|=
name|option
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|/
literal|3
decl_stmt|;
name|QRect
name|rect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|-
name|width
operator|/
literal|2
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
operator|(
name|option
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|/
literal|2
operator|)
operator|-
literal|1
argument_list|,
name|width
argument_list|,
literal|3
argument_list|)
decl_stmt|;
name|qt_plastique_draw_handle
argument_list|(
name|painter
argument_list|,
name|option
argument_list|,
name|rect
argument_list|,
name|Qt
operator|::
name|Vertical
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|int
name|height
init|=
name|option
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|/
literal|3
decl_stmt|;
name|QRect
name|rect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
operator|(
name|option
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|/
literal|2
operator|-
literal|1
operator|)
argument_list|,
name|option
operator|->
name|rect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|-
name|height
operator|/
literal|2
argument_list|,
literal|3
argument_list|,
name|height
argument_list|)
decl_stmt|;
name|qt_plastique_draw_handle
argument_list|(
name|painter
argument_list|,
name|option
argument_list|,
name|rect
argument_list|,
name|Qt
operator|::
name|Horizontal
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_DOCKWIDGET
case|case
name|PE_IndicatorViewItemCheck
case|:
block|{
name|QStyleOptionButton
name|button
decl_stmt|;
name|button
operator|.
name|QStyleOption
operator|::
name|operator
name|=
argument_list|(
operator|*
name|option
argument_list|)
expr_stmt|;
name|button
operator|.
name|state
operator|&=
operator|~
name|State_MouseOver
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_IndicatorCheckBox
argument_list|,
operator|&
name|button
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|PE_FrameWindow
case|:
block|{
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
name|bool
name|active
init|=
operator|(
name|option
operator|->
name|state
operator|&
name|State_Active
operator|)
decl_stmt|;
name|int
name|titleBarStop
init|=
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_TitleBarHeight
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|QPalette
name|palette
init|=
name|option
operator|->
name|palette
decl_stmt|;
if|if
condition|(
operator|!
name|active
condition|)
name|palette
operator|.
name|setCurrentColorGroup
argument_list|(
name|QPalette
operator|::
name|Disabled
argument_list|)
expr_stmt|;
comment|// Frame and rounded corners
name|painter
operator|->
name|setPen
argument_list|(
name|mergedColors
argument_list|(
name|palette
operator|.
name|highlight
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
name|Qt
operator|::
name|black
argument_list|,
literal|50
argument_list|)
argument_list|)
expr_stmt|;
name|QLine
name|lines
index|[
literal|3
index|]
decl_stmt|;
name|QPoint
name|points
index|[
literal|4
index|]
decl_stmt|;
comment|// bottom border line
name|lines
index|[
literal|0
index|]
operator|=
name|QLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottom
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
comment|// bottom left and right side border lines
name|lines
index|[
literal|1
index|]
operator|=
name|QLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|titleBarStop
argument_list|,
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|lines
index|[
literal|2
index|]
operator|=
name|QLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|titleBarStop
argument_list|,
name|option
operator|->
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|points
index|[
literal|0
index|]
operator|=
name|QPoint
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|points
index|[
literal|1
index|]
operator|=
name|QPoint
argument_list|(
name|option
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPoints
argument_list|(
name|points
argument_list|,
literal|2
argument_list|)
expr_stmt|;
comment|// alpha corners
name|painter
operator|->
name|setPen
argument_list|(
name|mergedColors
argument_list|(
name|palette
operator|.
name|highlight
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
literal|55
argument_list|)
argument_list|)
expr_stmt|;
name|points
index|[
literal|0
index|]
operator|=
name|QPoint
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|points
index|[
literal|1
index|]
operator|=
name|QPoint
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
expr_stmt|;
name|points
index|[
literal|2
index|]
operator|=
name|QPoint
argument_list|(
name|option
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|points
index|[
literal|3
index|]
operator|=
name|QPoint
argument_list|(
name|option
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPoints
argument_list|(
name|points
argument_list|,
literal|4
argument_list|)
expr_stmt|;
comment|// upper and lower left inner
name|painter
operator|->
name|setPen
argument_list|(
name|active
condition|?
name|mergedColors
argument_list|(
name|palette
operator|.
name|highlight
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
else|:
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|120
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|titleBarStop
argument_list|,
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|active
condition|?
name|mergedColors
argument_list|(
name|palette
operator|.
name|highlight
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
literal|57
argument_list|)
else|:
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|130
argument_list|)
argument_list|)
expr_stmt|;
name|lines
index|[
literal|0
index|]
operator|=
name|QLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|titleBarStop
argument_list|,
name|option
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
expr_stmt|;
name|lines
index|[
literal|1
index|]
operator|=
name|QLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|,
name|option
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
break|break;
case|case
name|PE_IndicatorBranch
case|:
block|{
name|int
name|mid_h
init|=
name|option
operator|->
name|rect
operator|.
name|x
argument_list|()
operator|+
name|option
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|/
literal|2
decl_stmt|;
name|int
name|mid_v
init|=
name|option
operator|->
name|rect
operator|.
name|y
argument_list|()
operator|+
name|option
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|/
literal|2
decl_stmt|;
name|int
name|bef_h
init|=
name|mid_h
decl_stmt|;
name|int
name|bef_v
init|=
name|mid_v
decl_stmt|;
name|int
name|aft_h
init|=
name|mid_h
decl_stmt|;
name|int
name|aft_v
init|=
name|mid_v
decl_stmt|;
name|QBrush
name|brush
argument_list|(
name|option
operator|->
name|palette
operator|.
name|dark
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
name|Qt
operator|::
name|Dense4Pattern
argument_list|)
decl_stmt|;
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|State_Item
condition|)
block|{
if|if
condition|(
name|option
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
condition|)
name|painter
operator|->
name|fillRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|mid_v
argument_list|,
name|bef_h
operator|-
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
argument_list|,
literal|1
argument_list|,
name|brush
argument_list|)
expr_stmt|;
else|else
name|painter
operator|->
name|fillRect
argument_list|(
name|aft_h
argument_list|,
name|mid_v
argument_list|,
name|option
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
name|aft_h
operator|+
literal|1
argument_list|,
literal|1
argument_list|,
name|brush
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|State_Sibling
condition|)
name|painter
operator|->
name|fillRect
argument_list|(
name|mid_h
argument_list|,
name|aft_v
argument_list|,
literal|1
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottom
argument_list|()
operator|-
name|aft_v
operator|+
literal|1
argument_list|,
name|brush
argument_list|)
expr_stmt|;
if|if
condition|(
name|option
operator|->
name|state
operator|&
operator|(
name|State_Open
operator||
name|State_Children
operator||
name|State_Item
operator||
name|State_Sibling
operator|)
condition|)
name|painter
operator|->
name|fillRect
argument_list|(
name|mid_h
argument_list|,
name|option
operator|->
name|rect
operator|.
name|y
argument_list|()
argument_list|,
literal|1
argument_list|,
name|bef_v
operator|-
name|option
operator|->
name|rect
operator|.
name|y
argument_list|()
argument_list|,
name|brush
argument_list|)
expr_stmt|;
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|State_Children
condition|)
block|{
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
name|QPoint
name|center
init|=
name|option
operator|->
name|rect
operator|.
name|center
argument_list|()
decl_stmt|;
comment|// border
name|QRect
name|fullRect
argument_list|(
name|center
operator|.
name|x
argument_list|()
operator|-
literal|4
argument_list|,
name|center
operator|.
name|y
argument_list|()
operator|-
literal|4
argument_list|,
literal|9
argument_list|,
literal|9
argument_list|)
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|borderColor
argument_list|)
expr_stmt|;
specifier|const
name|QLine
name|lines
index|[
literal|4
index|]
init|=
block|{
name|QLine
argument_list|(
name|fullRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|fullRect
operator|.
name|top
argument_list|()
argument_list|,
name|fullRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|fullRect
operator|.
name|top
argument_list|()
argument_list|)
block|,
name|QLine
argument_list|(
name|fullRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|fullRect
operator|.
name|bottom
argument_list|()
argument_list|,
name|fullRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|fullRect
operator|.
name|bottom
argument_list|()
argument_list|)
block|,
name|QLine
argument_list|(
name|fullRect
operator|.
name|left
argument_list|()
argument_list|,
name|fullRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|fullRect
operator|.
name|left
argument_list|()
argument_list|,
name|fullRect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
block|,
name|QLine
argument_list|(
argument|fullRect.right()
argument_list|,
argument|fullRect.top() +
literal|1
argument_list|,
argument|fullRect.right()
argument_list|,
argument|fullRect.bottom() -
literal|1
argument_list|)
block|}
decl_stmt|;
name|painter
operator|->
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|4
argument_list|)
expr_stmt|;
comment|// "antialiased" corners
name|painter
operator|->
name|setPen
argument_list|(
name|alphaCornerColor
argument_list|)
expr_stmt|;
specifier|const
name|QPoint
name|points
index|[
literal|4
index|]
init|=
block|{
name|fullRect
operator|.
name|topLeft
argument_list|()
block|,
name|fullRect
operator|.
name|topRight
argument_list|()
block|,
name|fullRect
operator|.
name|bottomLeft
argument_list|()
block|,
name|fullRect
operator|.
name|bottomRight
argument_list|()
block|}
decl_stmt|;
name|painter
operator|->
name|drawPoints
argument_list|(
name|points
argument_list|,
literal|4
argument_list|)
expr_stmt|;
comment|// fill
name|QRect
name|adjustedRect
init|=
name|fullRect
decl_stmt|;
name|QRect
name|gradientRect
argument_list|(
name|adjustedRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|adjustedRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|adjustedRect
operator|.
name|right
argument_list|()
operator|-
name|adjustedRect
operator|.
name|left
argument_list|()
operator|-
literal|1
argument_list|,
name|adjustedRect
operator|.
name|bottom
argument_list|()
operator|-
name|adjustedRect
operator|.
name|top
argument_list|()
operator|-
literal|1
argument_list|)
decl_stmt|;
if|if
condition|(
name|option
operator|->
name|palette
operator|.
name|base
argument_list|()
operator|.
name|style
argument_list|()
operator|==
name|Qt
operator|::
name|SolidPattern
condition|)
block|{
name|QColor
name|baseGradientStartColor
init|=
name|option
operator|->
name|palette
operator|.
name|base
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|101
argument_list|)
decl_stmt|;
name|QColor
name|baseGradientStopColor
init|=
name|option
operator|->
name|palette
operator|.
name|base
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|106
argument_list|)
decl_stmt|;
name|qt_plastique_draw_gradient
argument_list|(
name|painter
argument_list|,
name|gradientRect
argument_list|,
name|baseGradientStartColor
argument_list|,
name|baseGradientStopColor
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|painter
operator|->
name|fillRect
argument_list|(
name|gradientRect
argument_list|,
name|option
operator|->
name|palette
operator|.
name|base
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// draw "+" or "-"
name|painter
operator|->
name|setPen
argument_list|(
name|alphaTextColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|center
operator|.
name|x
argument_list|()
operator|-
literal|2
argument_list|,
name|center
operator|.
name|y
argument_list|()
argument_list|,
name|center
operator|.
name|x
argument_list|()
operator|+
literal|2
argument_list|,
name|center
operator|.
name|y
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
operator|(
name|option
operator|->
name|state
operator|&
name|State_Open
operator|)
condition|)
name|painter
operator|->
name|drawLine
argument_list|(
name|center
operator|.
name|x
argument_list|()
argument_list|,
name|center
operator|.
name|y
argument_list|()
operator|-
literal|2
argument_list|,
name|center
operator|.
name|x
argument_list|()
argument_list|,
name|center
operator|.
name|y
argument_list|()
operator|+
literal|2
argument_list|)
expr_stmt|;
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
block|}
break|break;
default|default:
name|QWindowsStyle
operator|::
name|drawPrimitive
argument_list|(
name|element
argument_list|,
name|option
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
end_function
begin_comment
comment|/*!   \reimp */
end_comment
begin_function
DECL|function|drawControl
name|void
name|QPlastiqueStyle
operator|::
name|drawControl
parameter_list|(
name|ControlElement
name|element
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|option
parameter_list|,
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
name|QColor
name|borderColor
init|=
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|178
argument_list|)
decl_stmt|;
name|QColor
name|alphaCornerColor
decl_stmt|;
if|if
condition|(
name|widget
condition|)
block|{
comment|// ### backgroundrole/foregroundrole should be part of the style option
name|alphaCornerColor
operator|=
name|mergedColors
argument_list|(
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|widget
operator|->
name|backgroundRole
argument_list|()
argument_list|)
argument_list|,
name|borderColor
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|alphaCornerColor
operator|=
name|mergedColors
argument_list|(
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
name|borderColor
argument_list|)
expr_stmt|;
block|}
name|QColor
name|gradientStartColor
init|=
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|104
argument_list|)
decl_stmt|;
name|QColor
name|gradientStopColor
init|=
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|105
argument_list|)
decl_stmt|;
name|QColor
name|highlightedGradientStartColor
init|=
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|101
argument_list|)
decl_stmt|;
name|QColor
name|highlightedGradientStopColor
init|=
name|mergedColors
argument_list|(
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
name|option
operator|->
name|palette
operator|.
name|highlight
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
literal|85
argument_list|)
decl_stmt|;
name|QColor
name|lightShadowGradientStartColor
init|=
name|highlightedGradientStartColor
operator|.
name|lighter
argument_list|(
literal|105
argument_list|)
decl_stmt|;
name|QColor
name|lightShadowGradientStopColor
init|=
name|highlightedGradientStopColor
operator|.
name|lighter
argument_list|(
literal|105
argument_list|)
decl_stmt|;
name|QColor
name|highlightedDarkInnerBorderColor
init|=
name|mergedColors
argument_list|(
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
name|option
operator|->
name|palette
operator|.
name|highlight
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
literal|35
argument_list|)
decl_stmt|;
name|QColor
name|highlightedLightInnerBorderColor
init|=
name|mergedColors
argument_list|(
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
name|option
operator|->
name|palette
operator|.
name|highlight
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
literal|58
argument_list|)
decl_stmt|;
name|QColor
name|alphaInnerColor
init|=
name|mergedColors
argument_list|(
name|highlightedDarkInnerBorderColor
argument_list|,
name|option
operator|->
name|palette
operator|.
name|base
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
decl_stmt|;
switch|switch
condition|(
name|element
condition|)
block|{
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
case|case
name|CE_TabBarTabShape
case|:
if|if
condition|(
specifier|const
name|QStyleOptionTab
modifier|*
name|tab
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionTab
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
if|if
condition|(
name|tab
operator|->
name|shape
operator|!=
name|QTabBar
operator|::
name|RoundedNorth
operator|&&
name|tab
operator|->
name|shape
operator|!=
name|QTabBar
operator|::
name|RoundedWest
operator|&&
name|tab
operator|->
name|shape
operator|!=
name|QTabBar
operator|::
name|RoundedSouth
operator|&&
name|tab
operator|->
name|shape
operator|!=
name|QTabBar
operator|::
name|RoundedEast
condition|)
block|{
name|QWindowsStyle
operator|::
name|drawControl
argument_list|(
name|element
argument_list|,
name|option
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
break|break;
block|}
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
comment|// Set up some convenience variables
name|bool
name|disabled
init|=
operator|!
operator|(
name|tab
operator|->
name|state
operator|&
name|State_Enabled
operator|)
decl_stmt|;
name|bool
name|onlyTab
init|=
name|tab
operator|->
name|position
operator|==
name|QStyleOptionTab
operator|::
name|OnlyOneTab
decl_stmt|;
name|bool
name|selected
init|=
name|tab
operator|->
name|state
operator|&
name|State_Selected
decl_stmt|;
name|bool
name|mouseOver
init|=
operator|(
name|tab
operator|->
name|state
operator|&
name|State_MouseOver
operator|)
operator|&&
operator|!
name|selected
operator|&&
operator|!
name|disabled
decl_stmt|;
name|bool
name|previousSelected
init|=
name|tab
operator|->
name|selectedPosition
operator|==
name|QStyleOptionTab
operator|::
name|PreviousIsSelected
decl_stmt|;
name|bool
name|nextSelected
init|=
name|tab
operator|->
name|selectedPosition
operator|==
name|QStyleOptionTab
operator|::
name|NextIsSelected
decl_stmt|;
name|bool
name|leftCornerWidget
init|=
operator|(
name|tab
operator|->
name|cornerWidgets
operator|&
name|QStyleOptionTab
operator|::
name|LeftCornerWidget
operator|)
decl_stmt|;
name|bool
name|reverse
init|=
operator|(
name|tab
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
operator|)
decl_stmt|;
name|int
name|lowerTop
init|=
name|selected
condition|?
literal|0
else|:
literal|3
decl_stmt|;
comment|// to make the selected tab bigger than the rest
name|bool
name|atEnd
init|=
operator|(
name|tab
operator|->
name|position
operator|==
name|QStyleOptionTab
operator|::
name|End
operator|)
operator|||
name|onlyTab
decl_stmt|;
name|bool
name|atBeginning
init|=
operator|(
operator|(
name|tab
operator|->
name|position
operator|==
name|QStyleOptionTab
operator|::
name|Beginning
operator|)
operator|||
name|onlyTab
operator|)
operator|&&
operator|!
name|leftCornerWidget
decl_stmt|;
name|bool
name|reverseShadow
init|=
literal|false
decl_stmt|;
name|int
name|borderThickness
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_TabBarBaseOverlap
argument_list|,
name|tab
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|int
name|marginLeft
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
name|atBeginning
operator|&&
operator|!
name|selected
operator|)
operator|||
operator|(
name|selected
operator|&&
name|leftCornerWidget
operator|&&
operator|(
operator|(
name|tab
operator|->
name|position
operator|==
name|QStyleOptionTab
operator|::
name|Beginning
operator|)
operator|||
name|onlyTab
operator|)
operator|)
condition|)
block|{
name|marginLeft
operator|=
literal|1
expr_stmt|;
block|}
comment|// I've set the names based on the natural coordinate system. Vectors are used to rotate everything
comment|// if the orientation of the tab bare is different than north.
block|{
comment|// Coordinates of corners of rectangle for transformation
name|QPoint
name|topLeft
decl_stmt|;
name|QPoint
name|topRight
decl_stmt|;
name|QPoint
name|bottomLeft
decl_stmt|;
name|QPoint
name|bottomRight
decl_stmt|;
comment|// Fill with normalized vectors in the direction of the coordinate system
comment|// (down and right should be complement of up and left, or it will look odd)
name|QPoint
name|vectorUp
decl_stmt|;
name|QPoint
name|vectorDown
decl_stmt|;
name|QPoint
name|vectorLeft
decl_stmt|;
name|QPoint
name|vectorRight
decl_stmt|;
name|QBrush
name|border
init|=
name|option
operator|->
name|palette
operator|.
name|shadow
argument_list|()
decl_stmt|;
name|qBrushSetAlphaF
argument_list|(
operator|&
name|border
argument_list|,
name|qreal
argument_list|(
literal|0.4
argument_list|)
argument_list|)
expr_stmt|;
name|QBrush
name|innerTopLeft
init|=
name|option
operator|->
name|palette
operator|.
name|shadow
argument_list|()
decl_stmt|;
name|qBrushSetAlphaF
argument_list|(
operator|&
name|innerTopLeft
argument_list|,
name|qreal
argument_list|(
literal|0.075
argument_list|)
argument_list|)
expr_stmt|;
name|QBrush
name|innerBottomRight
init|=
name|option
operator|->
name|palette
operator|.
name|shadow
argument_list|()
decl_stmt|;
name|qBrushSetAlphaF
argument_list|(
operator|&
name|innerBottomRight
argument_list|,
name|qreal
argument_list|(
literal|0.23
argument_list|)
argument_list|)
expr_stmt|;
name|QBrush
name|corner
init|=
name|option
operator|->
name|palette
operator|.
name|shadow
argument_list|()
decl_stmt|;
name|qBrushSetAlphaF
argument_list|(
operator|&
name|corner
argument_list|,
name|qreal
argument_list|(
literal|0.25
argument_list|)
argument_list|)
expr_stmt|;
name|QBrush
name|baseColor1
decl_stmt|;
name|QBrush
name|baseColor2
decl_stmt|;
switch|switch
condition|(
name|tab
operator|->
name|shape
condition|)
block|{
case|case
name|QTabBar
operator|::
name|RoundedNorth
case|:
name|vectorUp
operator|=
name|QPoint
argument_list|(
literal|0
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|vectorDown
operator|=
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
if|if
condition|(
name|reverse
condition|)
block|{
name|vectorLeft
operator|=
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|vectorRight
operator|=
name|QPoint
argument_list|(
operator|-
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|reverseShadow
operator|=
literal|true
expr_stmt|;
block|}
else|else
block|{
name|vectorLeft
operator|=
name|QPoint
argument_list|(
operator|-
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|vectorRight
operator|=
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|reverse
condition|)
block|{
name|topLeft
operator|=
name|tab
operator|->
name|rect
operator|.
name|topRight
argument_list|()
expr_stmt|;
name|topRight
operator|=
name|tab
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
expr_stmt|;
name|bottomLeft
operator|=
name|tab
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
expr_stmt|;
name|bottomRight
operator|=
name|tab
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|topLeft
operator|=
name|tab
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
expr_stmt|;
name|topRight
operator|=
name|tab
operator|->
name|rect
operator|.
name|topRight
argument_list|()
expr_stmt|;
name|bottomLeft
operator|=
name|tab
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
expr_stmt|;
name|bottomRight
operator|=
name|tab
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
expr_stmt|;
block|}
name|baseColor1
operator|=
name|border
expr_stmt|;
name|baseColor2
operator|=
name|innerTopLeft
expr_stmt|;
break|break ;
case|case
name|QTabBar
operator|::
name|RoundedWest
case|:
name|vectorUp
operator|=
name|QPoint
argument_list|(
operator|-
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|vectorDown
operator|=
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|vectorLeft
operator|=
name|QPoint
argument_list|(
literal|0
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|vectorRight
operator|=
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|topLeft
operator|=
name|tab
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
expr_stmt|;
name|topRight
operator|=
name|tab
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
expr_stmt|;
name|bottomLeft
operator|=
name|tab
operator|->
name|rect
operator|.
name|topRight
argument_list|()
expr_stmt|;
name|bottomRight
operator|=
name|tab
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
expr_stmt|;
name|baseColor1
operator|=
name|border
expr_stmt|;
name|baseColor2
operator|=
name|innerTopLeft
expr_stmt|;
break|break ;
case|case
name|QTabBar
operator|::
name|RoundedEast
case|:
name|vectorUp
operator|=
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|vectorDown
operator|=
name|QPoint
argument_list|(
operator|-
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|vectorLeft
operator|=
name|QPoint
argument_list|(
literal|0
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|vectorRight
operator|=
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|topLeft
operator|=
name|tab
operator|->
name|rect
operator|.
name|topRight
argument_list|()
expr_stmt|;
name|topRight
operator|=
name|tab
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
expr_stmt|;
name|bottomLeft
operator|=
name|tab
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
expr_stmt|;
name|bottomRight
operator|=
name|tab
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
expr_stmt|;
name|baseColor1
operator|=
name|border
expr_stmt|;
name|baseColor2
operator|=
name|innerBottomRight
expr_stmt|;
break|break ;
case|case
name|QTabBar
operator|::
name|RoundedSouth
case|:
name|vectorUp
operator|=
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|vectorDown
operator|=
name|QPoint
argument_list|(
literal|0
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
if|if
condition|(
name|reverse
condition|)
block|{
name|vectorLeft
operator|=
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|vectorRight
operator|=
name|QPoint
argument_list|(
operator|-
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|reverseShadow
operator|=
literal|true
expr_stmt|;
name|topLeft
operator|=
name|tab
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
expr_stmt|;
name|topRight
operator|=
name|tab
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
expr_stmt|;
name|bottomLeft
operator|=
name|tab
operator|->
name|rect
operator|.
name|topRight
argument_list|()
expr_stmt|;
name|bottomRight
operator|=
name|tab
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|vectorLeft
operator|=
name|QPoint
argument_list|(
operator|-
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|vectorRight
operator|=
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|topLeft
operator|=
name|tab
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
expr_stmt|;
name|topRight
operator|=
name|tab
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
expr_stmt|;
name|bottomLeft
operator|=
name|tab
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
expr_stmt|;
name|bottomRight
operator|=
name|tab
operator|->
name|rect
operator|.
name|topRight
argument_list|()
expr_stmt|;
block|}
name|baseColor1
operator|=
name|border
expr_stmt|;
name|baseColor2
operator|=
name|innerBottomRight
expr_stmt|;
break|break ;
default|default:
break|break;
block|}
comment|// Make the tab smaller when it's at the end, so that we are able to draw the corner
if|if
condition|(
name|atEnd
condition|)
block|{
name|topRight
operator|+=
name|vectorLeft
expr_stmt|;
name|bottomRight
operator|+=
name|vectorLeft
expr_stmt|;
block|}
block|{
comment|// Outer border
name|QLine
name|topLine
decl_stmt|;
block|{
name|QPoint
name|adjustTopLineLeft
init|=
operator|(
name|vectorRight
operator|*
operator|(
name|marginLeft
operator|+
operator|(
name|previousSelected
condition|?
literal|0
else|:
literal|1
operator|)
operator|)
operator|)
operator|+
operator|(
name|vectorDown
operator|*
name|lowerTop
operator|)
decl_stmt|;
name|QPoint
name|adjustTopLineRight
init|=
operator|(
name|vectorDown
operator|*
name|lowerTop
operator|)
decl_stmt|;
if|if
condition|(
name|atBeginning
operator|||
name|selected
condition|)
name|adjustTopLineLeft
operator|+=
name|vectorRight
expr_stmt|;
if|if
condition|(
name|atEnd
operator|||
name|selected
condition|)
name|adjustTopLineRight
operator|+=
literal|2
operator|*
name|vectorLeft
expr_stmt|;
name|topLine
operator|=
name|QLine
argument_list|(
name|topLeft
operator|+
name|adjustTopLineLeft
argument_list|,
name|topRight
operator|+
name|adjustTopLineRight
argument_list|)
expr_stmt|;
block|}
name|QLine
name|leftLine
decl_stmt|;
block|{
name|QPoint
name|adjustLeftLineTop
init|=
operator|(
name|vectorRight
operator|*
name|marginLeft
operator|)
operator|+
operator|(
name|vectorDown
operator|*
operator|(
name|lowerTop
operator|+
literal|1
operator|)
operator|)
decl_stmt|;
name|QPoint
name|adjustLeftLineBottom
init|=
operator|(
name|vectorRight
operator|*
name|marginLeft
operator|)
operator|+
operator|(
name|vectorUp
operator|*
name|borderThickness
operator|)
decl_stmt|;
if|if
condition|(
name|atBeginning
operator|||
name|selected
condition|)
name|adjustLeftLineTop
operator|+=
name|vectorDown
expr_stmt|;
comment|// Make place for rounded corner
if|if
condition|(
name|atBeginning
operator|&&
name|selected
condition|)
name|adjustLeftLineBottom
operator|+=
name|borderThickness
operator|*
name|vectorDown
expr_stmt|;
elseif|else
if|if
condition|(
name|selected
condition|)
name|adjustLeftLineBottom
operator|+=
name|vectorUp
expr_stmt|;
name|leftLine
operator|=
name|QLine
argument_list|(
name|topLeft
operator|+
name|adjustLeftLineTop
argument_list|,
name|bottomLeft
operator|+
name|adjustLeftLineBottom
argument_list|)
expr_stmt|;
block|}
name|QLine
name|rightLine
decl_stmt|;
block|{
name|QPoint
name|adjustRightLineTop
init|=
name|vectorDown
operator|*
operator|(
literal|2
operator|+
name|lowerTop
operator|)
decl_stmt|;
name|QPoint
name|adjustRightLineBottom
init|=
name|vectorUp
operator|*
name|borderThickness
decl_stmt|;
if|if
condition|(
name|selected
condition|)
name|adjustRightLineBottom
operator|+=
name|vectorUp
expr_stmt|;
name|rightLine
operator|=
name|QLine
argument_list|(
name|topRight
operator|+
name|adjustRightLineTop
argument_list|,
name|bottomRight
operator|+
name|adjustRightLineBottom
argument_list|)
expr_stmt|;
block|}
comment|// Background
name|QPoint
name|startPoint
init|=
name|topLine
operator|.
name|p1
argument_list|()
operator|+
name|vectorDown
operator|+
name|vectorLeft
decl_stmt|;
if|if
condition|(
name|mouseOver
condition|)
name|startPoint
operator|+=
name|vectorDown
expr_stmt|;
name|QPoint
name|endPoint
init|=
name|rightLine
operator|.
name|p2
argument_list|()
decl_stmt|;
if|if
condition|(
name|tab
operator|->
name|state
operator|&
name|State_Enabled
condition|)
block|{
name|QRect
name|fillRect
init|=
name|QRect
argument_list|(
name|startPoint
argument_list|,
name|endPoint
argument_list|)
operator|.
name|normalized
argument_list|()
decl_stmt|;
if|if
condition|(
name|fillRect
operator|.
name|isValid
argument_list|()
condition|)
block|{
if|if
condition|(
name|selected
condition|)
block|{
name|fillRect
operator|=
name|QRect
argument_list|(
name|startPoint
argument_list|,
name|endPoint
operator|+
name|vectorLeft
operator|+
name|vectorDown
operator|*
literal|3
argument_list|)
operator|.
name|normalized
argument_list|()
expr_stmt|;
name|painter
operator|->
name|fillRect
argument_list|(
name|fillRect
argument_list|,
name|option
operator|->
name|palette
operator|.
name|window
argument_list|()
argument_list|)
expr_stmt|;
comment|// Connect to the base
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|window
argument_list|()
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QVarLengthArray
argument_list|<
name|QPoint
argument_list|,
literal|6
argument_list|>
name|points
decl_stmt|;
name|points
operator|.
name|append
argument_list|(
name|rightLine
operator|.
name|p2
argument_list|()
operator|+
name|vectorDown
argument_list|)
expr_stmt|;
name|points
operator|.
name|append
argument_list|(
name|rightLine
operator|.
name|p2
argument_list|()
operator|+
name|vectorDown
operator|+
name|vectorDown
argument_list|)
expr_stmt|;
name|points
operator|.
name|append
argument_list|(
name|rightLine
operator|.
name|p2
argument_list|()
operator|+
name|vectorDown
operator|+
name|vectorDown
operator|+
name|vectorRight
argument_list|)
expr_stmt|;
if|if
condition|(
name|tab
operator|->
name|position
operator|!=
name|QStyleOptionTab
operator|::
name|Beginning
condition|)
block|{
name|points
operator|.
name|append
argument_list|(
name|leftLine
operator|.
name|p2
argument_list|()
operator|+
name|vectorDown
argument_list|)
expr_stmt|;
name|points
operator|.
name|append
argument_list|(
name|leftLine
operator|.
name|p2
argument_list|()
operator|+
name|vectorDown
operator|+
name|vectorDown
argument_list|)
expr_stmt|;
name|points
operator|.
name|append
argument_list|(
name|leftLine
operator|.
name|p2
argument_list|()
operator|+
name|vectorDown
operator|+
name|vectorDown
operator|+
name|vectorLeft
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|drawPoints
argument_list|(
name|points
operator|.
name|constData
argument_list|()
argument_list|,
name|points
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QBrush
name|buttonGradientBrush
decl_stmt|;
name|QBrush
name|buttonBrush
init|=
name|qMapBrushToRect
argument_list|(
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
argument_list|,
name|fillRect
argument_list|)
decl_stmt|;
if|if
condition|(
name|buttonBrush
operator|.
name|gradient
argument_list|()
operator|||
operator|!
name|buttonBrush
operator|.
name|texture
argument_list|()
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|buttonGradientBrush
operator|=
name|buttonBrush
expr_stmt|;
block|}
else|else
block|{
comment|// Generate gradients
name|QLinearGradient
name|buttonGradient
argument_list|(
name|fillRect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|fillRect
operator|.
name|bottomLeft
argument_list|()
argument_list|)
decl_stmt|;
name|buttonGradient
operator|.
name|setColorAt
argument_list|(
literal|0.0
argument_list|,
name|buttonBrush
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|104
argument_list|)
argument_list|)
expr_stmt|;
name|buttonGradient
operator|.
name|setColorAt
argument_list|(
literal|1.0
argument_list|,
name|buttonBrush
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|110
argument_list|)
argument_list|)
expr_stmt|;
name|buttonGradientBrush
operator|=
name|QBrush
argument_list|(
name|buttonGradient
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|fillRect
argument_list|(
name|fillRect
argument_list|,
name|buttonGradientBrush
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|QPoint
name|rightCornerDot
init|=
name|topRight
operator|+
name|vectorLeft
operator|+
operator|(
name|lowerTop
operator|+
literal|1
operator|)
operator|*
name|vectorDown
decl_stmt|;
name|QPoint
name|leftCornerDot
init|=
name|topLeft
operator|+
operator|(
name|marginLeft
operator|+
literal|1
operator|)
operator|*
name|vectorRight
operator|+
operator|(
name|lowerTop
operator|+
literal|1
operator|)
operator|*
name|vectorDown
decl_stmt|;
name|QPoint
name|bottomRightConnectToBase
init|=
name|rightLine
operator|.
name|p2
argument_list|()
operator|+
name|vectorRight
operator|+
name|vectorDown
decl_stmt|;
name|QPoint
name|bottomLeftConnectToBase
init|=
name|leftLine
operator|.
name|p2
argument_list|()
operator|+
name|vectorLeft
operator|+
name|vectorDown
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|border
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QVarLengthArray
argument_list|<
name|QLine
argument_list|,
literal|3
argument_list|>
name|lines
decl_stmt|;
name|QVarLengthArray
argument_list|<
name|QPoint
argument_list|,
literal|7
argument_list|>
name|points
decl_stmt|;
name|lines
operator|.
name|append
argument_list|(
name|topLine
argument_list|)
expr_stmt|;
if|if
condition|(
name|mouseOver
condition|)
block|{
name|painter
operator|->
name|drawLines
argument_list|(
name|lines
operator|.
name|constData
argument_list|()
argument_list|,
name|lines
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
name|lines
operator|.
name|clear
argument_list|()
expr_stmt|;
name|QLine
name|secondHoverLine
init|=
name|QLine
argument_list|(
name|topLine
operator|.
name|p1
argument_list|()
operator|+
name|vectorDown
operator|*
literal|2
operator|+
name|vectorLeft
argument_list|,
name|topLine
operator|.
name|p2
argument_list|()
operator|+
name|vectorDown
operator|*
literal|2
operator|+
name|vectorRight
argument_list|)
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|highlightedLightInnerBorderColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|secondHoverLine
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|mouseOver
condition|)
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|border
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|previousSelected
condition|)
name|lines
operator|.
name|append
argument_list|(
name|leftLine
argument_list|)
expr_stmt|;
if|if
condition|(
name|atEnd
operator|||
name|selected
condition|)
block|{
name|lines
operator|.
name|append
argument_list|(
name|rightLine
argument_list|)
expr_stmt|;
name|points
operator|.
name|append
argument_list|(
name|rightCornerDot
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|atBeginning
operator|||
name|selected
condition|)
name|points
operator|.
name|append
argument_list|(
name|leftCornerDot
argument_list|)
expr_stmt|;
if|if
condition|(
name|selected
condition|)
block|{
name|points
operator|.
name|append
argument_list|(
name|bottomRightConnectToBase
argument_list|)
expr_stmt|;
name|points
operator|.
name|append
argument_list|(
name|bottomLeftConnectToBase
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|lines
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|painter
operator|->
name|drawLines
argument_list|(
name|lines
operator|.
name|constData
argument_list|()
argument_list|,
name|lines
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|lines
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|points
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|painter
operator|->
name|drawPoints
argument_list|(
name|points
operator|.
name|constData
argument_list|()
argument_list|,
name|points
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|points
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
comment|// Antialiasing
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|corner
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|atBeginning
operator|||
name|selected
condition|)
name|points
operator|.
name|append
argument_list|(
name|topLine
operator|.
name|p1
argument_list|()
operator|+
name|vectorLeft
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|previousSelected
condition|)
name|points
operator|.
name|append
argument_list|(
name|leftLine
operator|.
name|p1
argument_list|()
operator|+
name|vectorUp
argument_list|)
expr_stmt|;
if|if
condition|(
name|atEnd
operator|||
name|selected
condition|)
block|{
name|points
operator|.
name|append
argument_list|(
name|topLine
operator|.
name|p2
argument_list|()
operator|+
name|vectorRight
argument_list|)
expr_stmt|;
name|points
operator|.
name|append
argument_list|(
name|rightLine
operator|.
name|p1
argument_list|()
operator|+
name|vectorUp
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|selected
condition|)
block|{
name|points
operator|.
name|append
argument_list|(
name|bottomRightConnectToBase
operator|+
name|vectorLeft
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|atBeginning
condition|)
block|{
name|points
operator|.
name|append
argument_list|(
name|bottomLeftConnectToBase
operator|+
name|vectorRight
argument_list|)
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|tab
operator|->
name|position
operator|==
name|QStyleOptionTab
operator|::
name|Beginning
operator|)
operator|||
name|onlyTab
operator|)
operator|&&
name|leftCornerWidget
condition|)
block|{
comment|// A special case: When the first tab is selected and
comment|// has a left corner widget, it needs to do more work
comment|// to connect to the base
name|QPoint
name|p1
init|=
name|bottomLeftConnectToBase
operator|+
name|vectorDown
decl_stmt|;
name|points
operator|.
name|append
argument_list|(
name|p1
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|points
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|painter
operator|->
name|drawPoints
argument_list|(
name|points
operator|.
name|constData
argument_list|()
argument_list|,
name|points
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|points
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
comment|// Inner border
name|QLine
name|innerTopLine
init|=
name|QLine
argument_list|(
name|topLine
operator|.
name|p1
argument_list|()
operator|+
name|vectorDown
argument_list|,
name|topLine
operator|.
name|p2
argument_list|()
operator|+
name|vectorDown
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|selected
condition|)
block|{
name|QLinearGradient
name|topLineGradient
argument_list|(
name|innerTopLine
operator|.
name|p1
argument_list|()
argument_list|,
name|innerTopLine
operator|.
name|p2
argument_list|()
argument_list|)
decl_stmt|;
name|topLineGradient
operator|.
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|lightShadowGradientStartColor
argument_list|)
expr_stmt|;
name|topLineGradient
operator|.
name|setColorAt
argument_list|(
literal|1
argument_list|,
name|lightShadowGradientStopColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|mouseOver
condition|?
name|QBrush
argument_list|(
name|highlightedDarkInnerBorderColor
argument_list|)
else|:
name|QBrush
argument_list|(
name|topLineGradient
argument_list|)
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|innerTopLeft
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|drawLine
argument_list|(
name|innerTopLine
argument_list|)
expr_stmt|;
name|QLine
name|innerLeftLine
init|=
name|QLine
argument_list|(
name|leftLine
operator|.
name|p1
argument_list|()
operator|+
name|vectorRight
operator|+
name|vectorDown
argument_list|,
name|leftLine
operator|.
name|p2
argument_list|()
operator|+
name|vectorRight
argument_list|)
decl_stmt|;
name|QLine
name|innerRightLine
init|=
name|QLine
argument_list|(
name|rightLine
operator|.
name|p1
argument_list|()
operator|+
name|vectorLeft
operator|+
name|vectorDown
argument_list|,
name|rightLine
operator|.
name|p2
argument_list|()
operator|+
name|vectorLeft
argument_list|)
decl_stmt|;
if|if
condition|(
name|selected
condition|)
block|{
name|innerRightLine
operator|=
name|QLine
argument_list|(
name|innerRightLine
operator|.
name|p1
argument_list|()
operator|+
name|vectorUp
argument_list|,
name|innerRightLine
operator|.
name|p2
argument_list|()
argument_list|)
expr_stmt|;
name|innerLeftLine
operator|=
name|QLine
argument_list|(
name|innerLeftLine
operator|.
name|p1
argument_list|()
operator|+
name|vectorUp
argument_list|,
name|innerLeftLine
operator|.
name|p2
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|selected
operator|||
name|atBeginning
condition|)
block|{
name|QBrush
name|leftLineGradientBrush
decl_stmt|;
name|QRect
name|rect
init|=
name|QRect
argument_list|(
name|innerLeftLine
operator|.
name|p1
argument_list|()
argument_list|,
name|innerLeftLine
operator|.
name|p2
argument_list|()
argument_list|)
operator|.
name|normalized
argument_list|()
decl_stmt|;
name|QBrush
name|buttonBrush
init|=
name|qMapBrushToRect
argument_list|(
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
argument_list|,
name|rect
argument_list|)
decl_stmt|;
if|if
condition|(
name|buttonBrush
operator|.
name|gradient
argument_list|()
operator|||
operator|!
name|buttonBrush
operator|.
name|texture
argument_list|()
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|leftLineGradientBrush
operator|=
name|qBrushLight
argument_list|(
name|buttonBrush
argument_list|,
literal|105
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QLinearGradient
name|buttonGradient3
argument_list|(
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|)
decl_stmt|;
name|buttonGradient3
operator|.
name|setColorAt
argument_list|(
literal|0.0
argument_list|,
name|buttonBrush
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|105
argument_list|)
argument_list|)
expr_stmt|;
name|buttonGradient3
operator|.
name|setColorAt
argument_list|(
literal|1.0
argument_list|,
name|buttonBrush
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|leftLineGradientBrush
operator|=
name|QBrush
argument_list|(
name|buttonGradient3
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|selected
condition|)
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|leftLineGradientBrush
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|// Assume the sun is on the same side in Right-To-Left layouts and draw the
comment|// light shadow on the left side always (the right line is on the left side in
comment|// reverse layouts for north and south)
if|if
condition|(
name|reverseShadow
condition|)
name|painter
operator|->
name|drawLine
argument_list|(
name|innerRightLine
argument_list|)
expr_stmt|;
else|else
name|painter
operator|->
name|drawLine
argument_list|(
name|innerLeftLine
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|atEnd
operator|||
name|selected
condition|)
block|{
if|if
condition|(
operator|!
name|selected
condition|)
block|{
name|QBrush
name|rightLineGradientBrush
decl_stmt|;
name|QRect
name|rect
init|=
name|QRect
argument_list|(
name|innerRightLine
operator|.
name|p1
argument_list|()
argument_list|,
name|innerRightLine
operator|.
name|p2
argument_list|()
argument_list|)
operator|.
name|normalized
argument_list|()
decl_stmt|;
name|QBrush
name|buttonBrush
init|=
name|qMapBrushToRect
argument_list|(
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
argument_list|,
name|rect
argument_list|)
decl_stmt|;
if|if
condition|(
name|buttonBrush
operator|.
name|gradient
argument_list|()
operator|||
operator|!
name|buttonBrush
operator|.
name|texture
argument_list|()
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|rightLineGradientBrush
operator|=
name|qBrushDark
argument_list|(
name|buttonBrush
argument_list|,
literal|105
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QLinearGradient
name|buttonGradient4
argument_list|(
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|)
decl_stmt|;
name|buttonGradient4
operator|.
name|setColorAt
argument_list|(
literal|0.0
argument_list|,
name|buttonBrush
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|buttonGradient4
operator|.
name|setColorAt
argument_list|(
literal|1.0
argument_list|,
name|buttonBrush
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|110
argument_list|)
argument_list|)
expr_stmt|;
name|rightLineGradientBrush
operator|=
name|QBrush
argument_list|(
name|buttonGradient4
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|rightLineGradientBrush
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|innerBottomRight
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|reverseShadow
condition|)
name|painter
operator|->
name|drawLine
argument_list|(
name|innerLeftLine
argument_list|)
expr_stmt|;
else|else
name|painter
operator|->
name|drawLine
argument_list|(
name|innerRightLine
argument_list|)
expr_stmt|;
block|}
comment|// Base
name|QLine
name|baseLine
init|=
name|QLine
argument_list|(
name|bottomLeft
operator|+
name|marginLeft
operator|*
literal|2
operator|*
name|vectorRight
argument_list|,
name|bottomRight
argument_list|)
decl_stmt|;
block|{
name|QPoint
name|adjustedLeft
decl_stmt|;
name|QPoint
name|adjustedRight
decl_stmt|;
if|if
condition|(
name|atEnd
operator|&&
operator|!
name|selected
condition|)
block|{
name|baseLine
operator|=
name|QLine
argument_list|(
name|baseLine
operator|.
name|p1
argument_list|()
argument_list|,
name|baseLine
operator|.
name|p2
argument_list|()
operator|+
name|vectorRight
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|nextSelected
condition|)
block|{
name|adjustedRight
operator|+=
name|vectorLeft
expr_stmt|;
name|baseLine
operator|=
name|QLine
argument_list|(
name|baseLine
operator|.
name|p1
argument_list|()
argument_list|,
name|baseLine
operator|.
name|p2
argument_list|()
operator|+
name|vectorLeft
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|previousSelected
condition|)
block|{
name|adjustedLeft
operator|+=
name|vectorRight
expr_stmt|;
name|baseLine
operator|=
name|QLine
argument_list|(
name|baseLine
operator|.
name|p1
argument_list|()
operator|+
name|vectorRight
argument_list|,
name|baseLine
operator|.
name|p2
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|atBeginning
condition|)
name|adjustedLeft
operator|+=
name|vectorRight
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|baseColor2
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|selected
condition|)
name|painter
operator|->
name|drawLine
argument_list|(
name|baseLine
argument_list|)
expr_stmt|;
if|if
condition|(
name|atEnd
operator|&&
operator|!
name|selected
condition|)
name|painter
operator|->
name|drawPoint
argument_list|(
name|baseLine
operator|.
name|p2
argument_list|()
operator|+
name|vectorRight
argument_list|)
expr_stmt|;
if|if
condition|(
name|atBeginning
operator|&&
operator|!
name|selected
condition|)
name|adjustedLeft
operator|=
name|vectorRight
expr_stmt|;
else|else
name|adjustedLeft
operator|=
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|baseColor1
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|selected
condition|)
name|painter
operator|->
name|drawLine
argument_list|(
name|bottomLeft
operator|+
name|vectorUp
operator|+
name|adjustedLeft
argument_list|,
name|baseLine
operator|.
name|p2
argument_list|()
operator|+
name|vectorUp
argument_list|)
expr_stmt|;
name|QPoint
name|endPoint
init|=
name|bottomRight
operator|+
name|vectorUp
decl_stmt|;
if|if
condition|(
name|atEnd
operator|&&
operator|!
name|selected
condition|)
name|painter
operator|->
name|drawPoint
argument_list|(
name|endPoint
argument_list|)
expr_stmt|;
comment|// For drawing a lower left "fake" corner on the base when the first tab is unselected
if|if
condition|(
name|atBeginning
operator|&&
operator|!
name|selected
condition|)
block|{
name|painter
operator|->
name|drawPoint
argument_list|(
name|baseLine
operator|.
name|p1
argument_list|()
operator|+
name|vectorLeft
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|corner
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|nextSelected
condition|)
name|painter
operator|->
name|drawPoint
argument_list|(
name|endPoint
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|selected
condition|)
name|painter
operator|->
name|drawPoint
argument_list|(
name|endPoint
operator|+
name|vectorRight
argument_list|)
expr_stmt|;
comment|// For drawing a lower left "fake" corner on the base when the first tab is unselected
if|if
condition|(
name|atBeginning
operator|&&
operator|!
name|selected
condition|)
block|{
name|painter
operator|->
name|drawPoint
argument_list|(
name|baseLine
operator|.
name|p1
argument_list|()
operator|+
literal|2
operator|*
name|vectorLeft
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
comment|// Yay we're done
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_TABBAR
ifndef|#
directive|ifndef
name|QT_NO_PROGRESSBAR
case|case
name|CE_ProgressBarGroove
case|:
if|if
condition|(
specifier|const
name|QStyleOptionProgressBar
modifier|*
name|bar
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionProgressBar
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|QRect
name|rect
init|=
name|bar
operator|->
name|rect
decl_stmt|;
name|QPen
name|oldPen
init|=
name|painter
operator|->
name|pen
argument_list|()
decl_stmt|;
name|QLine
name|lines
index|[
literal|4
index|]
decl_stmt|;
comment|// outline
name|painter
operator|->
name|setPen
argument_list|(
name|borderColor
argument_list|)
expr_stmt|;
name|lines
index|[
literal|0
index|]
operator|=
name|QLine
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|)
expr_stmt|;
name|lines
index|[
literal|1
index|]
operator|=
name|QLine
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
argument_list|,
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
name|lines
index|[
literal|2
index|]
operator|=
name|QLine
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|,
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
expr_stmt|;
name|lines
index|[
literal|3
index|]
operator|=
name|QLine
argument_list|(
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|,
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QPoint
name|points
index|[
literal|8
index|]
decl_stmt|;
name|points
index|[
literal|0
index|]
operator|=
name|QPoint
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
name|points
index|[
literal|1
index|]
operator|=
name|QPoint
argument_list|(
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
name|points
index|[
literal|2
index|]
operator|=
name|QPoint
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|points
index|[
literal|3
index|]
operator|=
name|QPoint
argument_list|(
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPoints
argument_list|(
name|points
argument_list|,
literal|4
argument_list|)
expr_stmt|;
comment|// alpha corners
name|painter
operator|->
name|setPen
argument_list|(
name|alphaCornerColor
argument_list|)
expr_stmt|;
name|points
index|[
literal|0
index|]
operator|=
name|QPoint
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
name|points
index|[
literal|1
index|]
operator|=
name|QPoint
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|)
expr_stmt|;
name|points
index|[
literal|2
index|]
operator|=
name|QPoint
argument_list|(
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
name|points
index|[
literal|3
index|]
operator|=
name|QPoint
argument_list|(
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|)
expr_stmt|;
name|points
index|[
literal|4
index|]
operator|=
name|QPoint
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|points
index|[
literal|5
index|]
operator|=
name|QPoint
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
name|points
index|[
literal|6
index|]
operator|=
name|QPoint
argument_list|(
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|points
index|[
literal|7
index|]
operator|=
name|QPoint
argument_list|(
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPoints
argument_list|(
name|points
argument_list|,
literal|8
argument_list|)
expr_stmt|;
comment|// inner outline, north-west
name|painter
operator|->
name|setPen
argument_list|(
name|gradientStartColor
operator|.
name|darker
argument_list|(
literal|105
argument_list|)
argument_list|)
expr_stmt|;
name|lines
index|[
literal|0
index|]
operator|=
name|QLine
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
name|lines
index|[
literal|1
index|]
operator|=
name|QLine
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|,
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|2
argument_list|)
expr_stmt|;
comment|// base of the groove
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|fillRect
argument_list|(
name|rect
operator|.
name|adjusted
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
operator|-
literal|2
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|QBrush
argument_list|(
name|bar
operator|->
name|palette
operator|.
name|base
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|bar
operator|->
name|palette
operator|.
name|base
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|,
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|oldPen
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|CE_ProgressBarLabel
case|:
if|if
condition|(
specifier|const
name|QStyleOptionProgressBar
modifier|*
name|bar
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionProgressBar
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
comment|// The busy indicator doesn't draw a label
if|if
condition|(
name|bar
operator|->
name|minimum
operator|==
literal|0
operator|&&
name|bar
operator|->
name|maximum
operator|==
literal|0
condition|)
return|return;
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
name|QRect
name|rect
init|=
name|bar
operator|->
name|rect
decl_stmt|;
name|QRect
name|leftRect
decl_stmt|;
name|QFont
name|font
decl_stmt|;
name|font
operator|.
name|setBold
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setFont
argument_list|(
name|font
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|bar
operator|->
name|palette
operator|.
name|text
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|bool
name|vertical
init|=
literal|false
decl_stmt|;
name|bool
name|inverted
init|=
literal|false
decl_stmt|;
name|bool
name|bottomToTop
init|=
literal|false
decl_stmt|;
comment|// Get extra style options if version 2
if|if
condition|(
specifier|const
name|QStyleOptionProgressBarV2
modifier|*
name|bar2
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionProgressBarV2
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|vertical
operator|=
operator|(
name|bar2
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Vertical
operator|)
expr_stmt|;
name|inverted
operator|=
name|bar2
operator|->
name|invertedAppearance
expr_stmt|;
name|bottomToTop
operator|=
name|bar2
operator|->
name|bottomToTop
expr_stmt|;
block|}
if|if
condition|(
name|vertical
condition|)
block|{
name|rect
operator|=
name|QRect
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|rect
operator|.
name|height
argument_list|()
argument_list|,
name|rect
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
comment|// flip width and height
name|QTransform
name|m
decl_stmt|;
if|if
condition|(
name|bottomToTop
condition|)
block|{
name|m
operator|.
name|translate
argument_list|(
literal|0.0
argument_list|,
name|rect
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
name|m
operator|.
name|rotate
argument_list|(
operator|-
literal|90
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|m
operator|.
name|translate
argument_list|(
name|rect
operator|.
name|height
argument_list|()
argument_list|,
literal|0.0
argument_list|)
expr_stmt|;
name|m
operator|.
name|rotate
argument_list|(
literal|90
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|setTransform
argument_list|(
name|m
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
name|int
name|progressIndicatorPos
init|=
operator|(
name|bar
operator|->
name|progress
operator|-
name|qreal
argument_list|(
name|bar
operator|->
name|minimum
argument_list|)
operator|)
operator|/
name|qMax
argument_list|(
name|qreal
argument_list|(
literal|1.0
argument_list|)
argument_list|,
name|qreal
argument_list|(
name|bar
operator|->
name|maximum
argument_list|)
operator|-
name|bar
operator|->
name|minimum
argument_list|)
operator|*
name|rect
operator|.
name|width
argument_list|()
decl_stmt|;
name|bool
name|flip
init|=
operator|(
operator|!
name|vertical
operator|&&
operator|(
operator|(
operator|(
name|bar
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
operator|)
operator|&&
operator|!
name|inverted
operator|)
operator|||
operator|(
operator|(
name|bar
operator|->
name|direction
operator|==
name|Qt
operator|::
name|LeftToRight
operator|)
operator|&&
name|inverted
operator|)
operator|)
operator|)
operator|||
operator|(
name|vertical
operator|&&
operator|(
operator|(
operator|!
name|inverted
operator|&&
operator|!
name|bottomToTop
operator|)
operator|||
operator|(
name|inverted
operator|&&
name|bottomToTop
operator|)
operator|)
operator|)
decl_stmt|;
if|if
condition|(
name|flip
condition|)
block|{
name|int
name|indicatorPos
init|=
name|rect
operator|.
name|width
argument_list|()
operator|-
name|progressIndicatorPos
decl_stmt|;
if|if
condition|(
name|indicatorPos
operator|>=
literal|0
operator|&&
name|indicatorPos
operator|<=
name|rect
operator|.
name|width
argument_list|()
condition|)
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|bar
operator|->
name|palette
operator|.
name|base
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|leftRect
operator|=
name|QRect
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|indicatorPos
argument_list|,
name|rect
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|indicatorPos
operator|>
name|rect
operator|.
name|width
argument_list|()
condition|)
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|bar
operator|->
name|palette
operator|.
name|text
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|bar
operator|->
name|palette
operator|.
name|base
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
name|progressIndicatorPos
operator|>=
literal|0
operator|&&
name|progressIndicatorPos
operator|<=
name|rect
operator|.
name|width
argument_list|()
condition|)
block|{
name|leftRect
operator|=
name|QRect
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|progressIndicatorPos
argument_list|,
name|rect
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|progressIndicatorPos
operator|>
name|rect
operator|.
name|width
argument_list|()
condition|)
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|bar
operator|->
name|palette
operator|.
name|base
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|bar
operator|->
name|palette
operator|.
name|text
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|QRegion
name|rightRect
init|=
name|rect
decl_stmt|;
name|rightRect
operator|=
name|rightRect
operator|.
name|subtracted
argument_list|(
name|leftRect
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setClipRegion
argument_list|(
name|rightRect
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawText
argument_list|(
name|rect
argument_list|,
name|bar
operator|->
name|text
argument_list|,
name|QTextOption
argument_list|(
name|Qt
operator|::
name|AlignAbsolute
operator||
name|Qt
operator|::
name|AlignHCenter
operator||
name|Qt
operator|::
name|AlignVCenter
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|leftRect
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|flip
condition|?
name|bar
operator|->
name|palette
operator|.
name|text
argument_list|()
operator|.
name|color
argument_list|()
else|:
name|bar
operator|->
name|palette
operator|.
name|base
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setClipRect
argument_list|(
name|leftRect
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawText
argument_list|(
name|rect
argument_list|,
name|bar
operator|->
name|text
argument_list|,
name|QTextOption
argument_list|(
name|Qt
operator|::
name|AlignAbsolute
operator||
name|Qt
operator|::
name|AlignHCenter
operator||
name|Qt
operator|::
name|AlignVCenter
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
break|break;
case|case
name|CE_ProgressBarContents
case|:
if|if
condition|(
specifier|const
name|QStyleOptionProgressBar
modifier|*
name|bar
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionProgressBar
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|Q_D
argument_list|(
specifier|const
name|QPlastiqueStyle
argument_list|)
expr_stmt|;
name|QRect
name|rect
init|=
name|bar
operator|->
name|rect
decl_stmt|;
name|bool
name|vertical
init|=
literal|false
decl_stmt|;
name|bool
name|inverted
init|=
literal|false
decl_stmt|;
name|bool
name|indeterminate
init|=
operator|(
name|bar
operator|->
name|minimum
operator|==
literal|0
operator|&&
name|bar
operator|->
name|maximum
operator|==
literal|0
operator|)
decl_stmt|;
if|if
condition|(
operator|!
name|indeterminate
operator|&&
name|bar
operator|->
name|progress
operator|==
operator|-
literal|1
condition|)
break|break;
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
comment|// Get extra style options if version 2
if|if
condition|(
specifier|const
name|QStyleOptionProgressBarV2
modifier|*
name|bar2
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionProgressBarV2
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|vertical
operator|=
operator|(
name|bar2
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Vertical
operator|)
expr_stmt|;
name|inverted
operator|=
name|bar2
operator|->
name|invertedAppearance
expr_stmt|;
block|}
comment|// If the orientation is vertical, we use a transform to rotate
comment|// the progress bar 90 degrees clockwise.  This way we can use the
comment|// same rendering code for both orientations.
if|if
condition|(
name|vertical
condition|)
block|{
name|rect
operator|=
name|QRect
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|rect
operator|.
name|height
argument_list|()
argument_list|,
name|rect
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
comment|// flip width and height
name|QTransform
name|m
init|=
name|QTransform
operator|::
name|fromTranslate
argument_list|(
name|rect
operator|.
name|height
argument_list|()
operator|-
literal|1
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|m
operator|.
name|rotate
argument_list|(
literal|90.0
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setTransform
argument_list|(
name|m
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
name|int
name|maxWidth
init|=
name|rect
operator|.
name|width
argument_list|()
operator|-
literal|4
decl_stmt|;
name|int
name|minWidth
init|=
literal|4
decl_stmt|;
name|qint64
name|progress
init|=
name|qMax
argument_list|<
name|qint64
argument_list|>
argument_list|(
name|bar
operator|->
name|progress
argument_list|,
name|bar
operator|->
name|minimum
argument_list|)
decl_stmt|;
comment|// workaround for bug in QProgressBar
name|double
name|vc6_workaround
init|=
operator|(
operator|(
name|progress
operator|-
name|qint64
argument_list|(
name|bar
operator|->
name|minimum
argument_list|)
operator|)
operator|/
name|qMax
argument_list|(
name|double
argument_list|(
literal|1.0
argument_list|)
argument_list|,
name|double
argument_list|(
name|qint64
argument_list|(
name|bar
operator|->
name|maximum
argument_list|)
operator|-
name|qint64
argument_list|(
name|bar
operator|->
name|minimum
argument_list|)
argument_list|)
argument_list|)
operator|*
name|maxWidth
operator|)
decl_stmt|;
name|int
name|width
init|=
name|indeterminate
condition|?
name|maxWidth
else|:
name|qMax
argument_list|(
name|int
argument_list|(
name|vc6_workaround
argument_list|)
argument_list|,
name|minWidth
argument_list|)
decl_stmt|;
name|bool
name|reverse
init|=
operator|(
operator|!
name|vertical
operator|&&
operator|(
name|bar
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
operator|)
operator|)
operator|||
name|vertical
decl_stmt|;
if|if
condition|(
name|inverted
condition|)
name|reverse
operator|=
operator|!
name|reverse
expr_stmt|;
name|QRect
name|progressBar
decl_stmt|;
if|if
condition|(
operator|!
name|indeterminate
condition|)
block|{
if|if
condition|(
operator|!
name|reverse
condition|)
block|{
name|progressBar
operator|.
name|setRect
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|,
name|width
argument_list|,
name|rect
operator|.
name|height
argument_list|()
operator|-
literal|4
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|progressBar
operator|.
name|setRect
argument_list|(
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
operator|-
name|width
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|,
name|width
argument_list|,
name|rect
operator|.
name|height
argument_list|()
operator|-
literal|4
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|int
name|slideWidth
init|=
operator|(
operator|(
name|rect
operator|.
name|width
argument_list|()
operator|-
literal|4
operator|)
operator|*
literal|2
operator|)
operator|/
literal|3
decl_stmt|;
name|int
name|step
init|=
operator|(
operator|(
name|d
operator|->
name|animateStep
operator|*
name|slideWidth
operator|)
operator|/
name|ProgressBarFps
operator|)
operator|%
name|slideWidth
decl_stmt|;
if|if
condition|(
operator|(
operator|(
operator|(
name|d
operator|->
name|animateStep
operator|*
name|slideWidth
operator|)
operator|/
name|ProgressBarFps
operator|)
operator|%
operator|(
literal|2
operator|*
name|slideWidth
operator|)
operator|)
operator|>=
name|slideWidth
condition|)
name|step
operator|=
name|slideWidth
operator|-
name|step
expr_stmt|;
name|progressBar
operator|.
name|setRect
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|2
operator|+
name|step
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|,
name|slideWidth
operator|/
literal|2
argument_list|,
name|rect
operator|.
name|height
argument_list|()
operator|-
literal|4
argument_list|)
expr_stmt|;
block|}
comment|// outline
name|painter
operator|->
name|setPen
argument_list|(
name|highlightedDarkInnerBorderColor
argument_list|)
expr_stmt|;
name|QVarLengthArray
argument_list|<
name|QLine
argument_list|,
literal|4
argument_list|>
name|lines
decl_stmt|;
name|QVarLengthArray
argument_list|<
name|QPoint
argument_list|,
literal|8
argument_list|>
name|points
decl_stmt|;
if|if
condition|(
operator|!
name|reverse
condition|)
block|{
if|if
condition|(
name|width
operator|==
name|minWidth
condition|)
block|{
name|points
operator|.
name|append
argument_list|(
name|QPoint
argument_list|(
name|progressBar
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|progressBar
operator|.
name|top
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|append
argument_list|(
name|QPoint
argument_list|(
name|progressBar
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|progressBar
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|indeterminate
condition|)
block|{
name|lines
operator|.
name|append
argument_list|(
name|QLine
argument_list|(
name|progressBar
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|progressBar
operator|.
name|top
argument_list|()
argument_list|,
name|progressBar
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|progressBar
operator|.
name|top
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|lines
operator|.
name|append
argument_list|(
name|QLine
argument_list|(
name|progressBar
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|progressBar
operator|.
name|bottom
argument_list|()
argument_list|,
name|progressBar
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|progressBar
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|lines
operator|.
name|append
argument_list|(
name|QLine
argument_list|(
name|progressBar
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|progressBar
operator|.
name|top
argument_list|()
argument_list|,
name|progressBar
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|progressBar
operator|.
name|top
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|lines
operator|.
name|append
argument_list|(
name|QLine
argument_list|(
name|progressBar
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|progressBar
operator|.
name|bottom
argument_list|()
argument_list|,
name|progressBar
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|progressBar
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|indeterminate
condition|)
block|{
name|lines
operator|.
name|append
argument_list|(
name|QLine
argument_list|(
name|progressBar
operator|.
name|left
argument_list|()
argument_list|,
name|progressBar
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|,
name|progressBar
operator|.
name|left
argument_list|()
argument_list|,
name|progressBar
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|lines
operator|.
name|append
argument_list|(
name|QLine
argument_list|(
name|progressBar
operator|.
name|left
argument_list|()
argument_list|,
name|progressBar
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|progressBar
operator|.
name|left
argument_list|()
argument_list|,
name|progressBar
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|lines
operator|.
name|append
argument_list|(
name|QLine
argument_list|(
name|progressBar
operator|.
name|right
argument_list|()
argument_list|,
name|progressBar
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|,
name|progressBar
operator|.
name|right
argument_list|()
argument_list|,
name|progressBar
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|width
operator|==
name|minWidth
condition|)
block|{
name|points
operator|.
name|append
argument_list|(
name|QPoint
argument_list|(
name|progressBar
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|progressBar
operator|.
name|top
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|append
argument_list|(
name|QPoint
argument_list|(
name|progressBar
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|progressBar
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|indeterminate
condition|)
block|{
name|lines
operator|.
name|append
argument_list|(
name|QLine
argument_list|(
name|progressBar
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|progressBar
operator|.
name|top
argument_list|()
argument_list|,
name|progressBar
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|progressBar
operator|.
name|top
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|lines
operator|.
name|append
argument_list|(
name|QLine
argument_list|(
name|progressBar
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|progressBar
operator|.
name|bottom
argument_list|()
argument_list|,
name|progressBar
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|progressBar
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|lines
operator|.
name|append
argument_list|(
name|QLine
argument_list|(
name|progressBar
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|progressBar
operator|.
name|top
argument_list|()
argument_list|,
name|progressBar
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|progressBar
operator|.
name|top
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|lines
operator|.
name|append
argument_list|(
name|QLine
argument_list|(
name|progressBar
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|progressBar
operator|.
name|bottom
argument_list|()
argument_list|,
name|progressBar
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|progressBar
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|indeterminate
condition|)
block|{
name|lines
operator|.
name|append
argument_list|(
name|QLine
argument_list|(
name|progressBar
operator|.
name|right
argument_list|()
argument_list|,
name|progressBar
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|,
name|progressBar
operator|.
name|right
argument_list|()
argument_list|,
name|progressBar
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|lines
operator|.
name|append
argument_list|(
name|QLine
argument_list|(
name|progressBar
operator|.
name|right
argument_list|()
argument_list|,
name|progressBar
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|progressBar
operator|.
name|right
argument_list|()
argument_list|,
name|progressBar
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|lines
operator|.
name|append
argument_list|(
name|QLine
argument_list|(
name|progressBar
operator|.
name|left
argument_list|()
argument_list|,
name|progressBar
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|,
name|progressBar
operator|.
name|left
argument_list|()
argument_list|,
name|progressBar
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|points
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|painter
operator|->
name|drawPoints
argument_list|(
name|points
operator|.
name|constData
argument_list|()
argument_list|,
name|points
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|points
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|painter
operator|->
name|drawLines
argument_list|(
name|lines
operator|.
name|constData
argument_list|()
argument_list|,
name|lines
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|lines
operator|.
name|clear
argument_list|()
expr_stmt|;
comment|// alpha corners
name|painter
operator|->
name|setPen
argument_list|(
name|alphaInnerColor
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|reverse
condition|)
block|{
if|if
condition|(
name|indeterminate
condition|)
block|{
name|points
operator|.
name|append
argument_list|(
name|QPoint
argument_list|(
name|progressBar
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|progressBar
operator|.
name|top
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|append
argument_list|(
name|QPoint
argument_list|(
name|progressBar
operator|.
name|left
argument_list|()
argument_list|,
name|progressBar
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|append
argument_list|(
name|QPoint
argument_list|(
name|progressBar
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|progressBar
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|append
argument_list|(
name|QPoint
argument_list|(
name|progressBar
operator|.
name|left
argument_list|()
argument_list|,
name|progressBar
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|points
operator|.
name|append
argument_list|(
name|QPoint
argument_list|(
name|progressBar
operator|.
name|left
argument_list|()
argument_list|,
name|progressBar
operator|.
name|top
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|append
argument_list|(
name|QPoint
argument_list|(
name|progressBar
operator|.
name|left
argument_list|()
argument_list|,
name|progressBar
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|points
operator|.
name|append
argument_list|(
name|QPoint
argument_list|(
name|progressBar
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|progressBar
operator|.
name|top
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|append
argument_list|(
name|QPoint
argument_list|(
name|progressBar
operator|.
name|right
argument_list|()
argument_list|,
name|progressBar
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|append
argument_list|(
name|QPoint
argument_list|(
name|progressBar
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|progressBar
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|append
argument_list|(
name|QPoint
argument_list|(
name|progressBar
operator|.
name|right
argument_list|()
argument_list|,
name|progressBar
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|indeterminate
condition|)
block|{
name|points
operator|.
name|append
argument_list|(
name|QPoint
argument_list|(
name|progressBar
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|progressBar
operator|.
name|top
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|append
argument_list|(
name|QPoint
argument_list|(
name|progressBar
operator|.
name|right
argument_list|()
argument_list|,
name|progressBar
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|append
argument_list|(
name|QPoint
argument_list|(
name|progressBar
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|progressBar
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|append
argument_list|(
name|QPoint
argument_list|(
name|progressBar
operator|.
name|right
argument_list|()
argument_list|,
name|progressBar
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|points
operator|.
name|append
argument_list|(
name|QPoint
argument_list|(
name|progressBar
operator|.
name|right
argument_list|()
argument_list|,
name|progressBar
operator|.
name|top
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|append
argument_list|(
name|QPoint
argument_list|(
name|progressBar
operator|.
name|right
argument_list|()
argument_list|,
name|progressBar
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|points
operator|.
name|append
argument_list|(
name|QPoint
argument_list|(
name|progressBar
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|progressBar
operator|.
name|top
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|append
argument_list|(
name|QPoint
argument_list|(
name|progressBar
operator|.
name|left
argument_list|()
argument_list|,
name|progressBar
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|append
argument_list|(
name|QPoint
argument_list|(
name|progressBar
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|progressBar
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|append
argument_list|(
name|QPoint
argument_list|(
name|progressBar
operator|.
name|left
argument_list|()
argument_list|,
name|progressBar
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|drawPoints
argument_list|(
name|points
operator|.
name|constData
argument_list|()
argument_list|,
name|points
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|points
operator|.
name|clear
argument_list|()
expr_stmt|;
comment|// contents
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|()
argument_list|)
expr_stmt|;
name|QString
name|progressBarName
init|=
name|QStyleHelper
operator|::
name|uniqueName
argument_list|(
name|QLatin1String
argument_list|(
literal|"progressBarContents"
argument_list|)
argument_list|,
name|option
argument_list|,
name|rect
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
name|QPixmap
name|cache
decl_stmt|;
if|if
condition|(
operator|!
name|QPixmapCache
operator|::
name|find
argument_list|(
name|progressBarName
argument_list|,
name|cache
argument_list|)
operator|&&
name|rect
operator|.
name|height
argument_list|()
operator|>
literal|7
condition|)
block|{
name|QSize
name|size
init|=
name|rect
operator|.
name|size
argument_list|()
decl_stmt|;
name|cache
operator|=
name|QPixmap
argument_list|(
name|QSize
argument_list|(
name|size
operator|.
name|width
argument_list|()
operator|-
literal|6
operator|+
literal|30
argument_list|,
name|size
operator|.
name|height
argument_list|()
operator|-
literal|6
argument_list|)
argument_list|)
expr_stmt|;
name|cache
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|QPainter
name|cachePainter
argument_list|(
operator|&
name|cache
argument_list|)
decl_stmt|;
name|QRect
name|pixmapRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|cache
operator|.
name|width
argument_list|()
argument_list|,
name|cache
operator|.
name|height
argument_list|()
argument_list|)
decl_stmt|;
name|int
name|leftEdge
init|=
literal|0
decl_stmt|;
name|bool
name|flip
init|=
literal|false
decl_stmt|;
while|while
condition|(
name|leftEdge
operator|<
name|cache
operator|.
name|width
argument_list|()
operator|+
literal|1
condition|)
block|{
name|QColor
name|rectColor
init|=
name|option
operator|->
name|palette
operator|.
name|highlight
argument_list|()
operator|.
name|color
argument_list|()
decl_stmt|;
name|QColor
name|lineColor
init|=
name|option
operator|->
name|palette
operator|.
name|highlight
argument_list|()
operator|.
name|color
argument_list|()
decl_stmt|;
if|if
condition|(
name|flip
condition|)
block|{
name|flip
operator|=
literal|false
expr_stmt|;
name|rectColor
operator|=
name|rectColor
operator|.
name|lighter
argument_list|(
literal|105
argument_list|)
expr_stmt|;
name|lineColor
operator|=
name|lineColor
operator|.
name|lighter
argument_list|(
literal|105
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|flip
operator|=
literal|true
expr_stmt|;
block|}
name|cachePainter
operator|.
name|setPen
argument_list|(
name|lineColor
argument_list|)
expr_stmt|;
specifier|const
name|QLine
name|cacheLines
index|[
literal|2
index|]
init|=
block|{
name|QLine
argument_list|(
name|pixmapRect
operator|.
name|left
argument_list|()
operator|+
name|leftEdge
operator|-
literal|1
argument_list|,
name|pixmapRect
operator|.
name|top
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|left
argument_list|()
operator|+
name|leftEdge
operator|+
literal|9
argument_list|,
name|pixmapRect
operator|.
name|top
argument_list|()
argument_list|)
block|,
name|QLine
argument_list|(
argument|pixmapRect.left() + leftEdge -
literal|1
argument_list|,
argument|pixmapRect.bottom()
argument_list|,
argument|pixmapRect.left() + leftEdge +
literal|9
argument_list|,
argument|pixmapRect.bottom()
argument_list|)
block|}
decl_stmt|;
name|cachePainter
operator|.
name|drawLines
argument_list|(
name|cacheLines
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|fillRect
argument_list|(
name|QRect
argument_list|(
name|pixmapRect
operator|.
name|left
argument_list|()
operator|+
name|leftEdge
argument_list|,
name|pixmapRect
operator|.
name|top
argument_list|()
argument_list|,
literal|10
argument_list|,
name|pixmapRect
operator|.
name|height
argument_list|()
argument_list|)
argument_list|,
name|rectColor
argument_list|)
expr_stmt|;
name|leftEdge
operator|+=
literal|10
expr_stmt|;
block|}
name|QPixmapCache
operator|::
name|insert
argument_list|(
name|progressBarName
argument_list|,
name|cache
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|setClipRect
argument_list|(
name|progressBar
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|vertical
condition|)
name|progressBar
operator|.
name|adjust
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|indeterminate
condition|)
block|{
name|int
name|step
init|=
operator|(
name|AnimateProgressBar
operator|||
operator|(
name|indeterminate
operator|&&
name|AnimateBusyProgressBar
operator|)
operator|)
condition|?
operator|(
name|d
operator|->
name|animateStep
operator|%
literal|20
operator|)
else|:
literal|0
decl_stmt|;
if|if
condition|(
name|reverse
condition|)
name|painter
operator|->
name|drawPixmap
argument_list|(
name|progressBar
operator|.
name|left
argument_list|()
operator|-
literal|25
operator|+
name|step
argument_list|,
name|progressBar
operator|.
name|top
argument_list|()
argument_list|,
name|cache
argument_list|)
expr_stmt|;
else|else
name|painter
operator|->
name|drawPixmap
argument_list|(
name|progressBar
operator|.
name|left
argument_list|()
operator|-
literal|25
operator|-
name|step
operator|+
name|width
operator|%
literal|20
argument_list|,
name|progressBar
operator|.
name|top
argument_list|()
argument_list|,
name|cache
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|painter
operator|->
name|drawPixmap
argument_list|(
name|progressBar
operator|.
name|left
argument_list|()
argument_list|,
name|progressBar
operator|.
name|top
argument_list|()
argument_list|,
name|cache
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_PROGRESSBAR
case|case
name|CE_HeaderSection
case|:
comment|// Draws the header in tables.
if|if
condition|(
specifier|const
name|QStyleOptionHeader
modifier|*
name|header
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionHeader
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|QPixmap
name|cache
decl_stmt|;
name|QString
name|pixmapName
init|=
name|QStyleHelper
operator|::
name|uniqueName
argument_list|(
name|QLatin1String
argument_list|(
literal|"headersection"
argument_list|)
argument_list|,
name|option
argument_list|,
name|option
operator|->
name|rect
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
name|pixmapName
operator|+=
name|QString
operator|::
name|number
argument_list|(
operator|-
name|int
argument_list|(
name|header
operator|->
name|position
argument_list|)
argument_list|)
expr_stmt|;
name|pixmapName
operator|+=
name|QString
operator|::
name|number
argument_list|(
operator|-
name|int
argument_list|(
name|header
operator|->
name|orientation
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|QPixmapCache
operator|::
name|find
argument_list|(
name|pixmapName
argument_list|,
name|cache
argument_list|)
condition|)
block|{
name|cache
operator|=
name|QPixmap
argument_list|(
name|option
operator|->
name|rect
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|cache
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|QRect
name|pixmapRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|option
operator|->
name|rect
operator|.
name|width
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|height
argument_list|()
argument_list|)
decl_stmt|;
name|QPainter
name|cachePainter
argument_list|(
operator|&
name|cache
argument_list|)
decl_stmt|;
name|bool
name|sunken
init|=
operator|(
name|header
operator|->
name|state
operator|&
name|State_Enabled
operator|)
operator|&&
operator|(
name|header
operator|->
name|state
operator|&
name|State_Sunken
operator|)
decl_stmt|;
name|QColor
name|headerGradientStart
init|=
name|sunken
condition|?
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|114
argument_list|)
else|:
name|gradientStartColor
decl_stmt|;
name|QColor
name|headerGradientStop
init|=
name|sunken
condition|?
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|106
argument_list|)
else|:
name|gradientStopColor
decl_stmt|;
name|QColor
name|lightLine
init|=
name|sunken
condition|?
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|118
argument_list|)
else|:
name|gradientStartColor
decl_stmt|;
name|QColor
name|darkLine
init|=
name|sunken
condition|?
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|110
argument_list|)
else|:
name|gradientStopColor
operator|.
name|darker
argument_list|(
literal|105
argument_list|)
decl_stmt|;
name|qt_plastique_draw_gradient
argument_list|(
operator|&
name|cachePainter
argument_list|,
name|pixmapRect
argument_list|,
name|headerGradientStart
argument_list|,
name|headerGradientStop
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|setPen
argument_list|(
name|borderColor
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawRect
argument_list|(
name|pixmapRect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|setPen
argument_list|(
name|alphaCornerColor
argument_list|)
expr_stmt|;
specifier|const
name|QPoint
name|points
index|[
literal|4
index|]
init|=
block|{
name|pixmapRect
operator|.
name|topLeft
argument_list|()
block|,
name|pixmapRect
operator|.
name|topRight
argument_list|()
block|,
name|pixmapRect
operator|.
name|bottomLeft
argument_list|()
block|,
name|pixmapRect
operator|.
name|bottomRight
argument_list|()
block|}
decl_stmt|;
name|cachePainter
operator|.
name|drawPoints
argument_list|(
name|points
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QLine
name|lines
index|[
literal|2
index|]
decl_stmt|;
comment|// inner lines
name|cachePainter
operator|.
name|setPen
argument_list|(
name|lightLine
argument_list|)
expr_stmt|;
name|lines
index|[
literal|0
index|]
operator|=
name|QLine
argument_list|(
name|pixmapRect
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|pixmapRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|pixmapRect
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|pixmapRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
name|lines
index|[
literal|1
index|]
operator|=
name|QLine
argument_list|(
name|pixmapRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|pixmapRect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|,
name|pixmapRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|pixmapRect
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|setPen
argument_list|(
name|darkLine
argument_list|)
expr_stmt|;
name|lines
index|[
literal|0
index|]
operator|=
name|QLine
argument_list|(
name|pixmapRect
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|pixmapRect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|,
name|pixmapRect
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|pixmapRect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|lines
index|[
literal|1
index|]
operator|=
name|QLine
argument_list|(
name|pixmapRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|pixmapRect
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|,
name|pixmapRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|pixmapRect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|end
argument_list|()
expr_stmt|;
name|QPixmapCache
operator|::
name|insert
argument_list|(
name|pixmapName
argument_list|,
name|cache
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|drawPixmap
argument_list|(
name|option
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|cache
argument_list|)
expr_stmt|;
block|}
break|break;
ifndef|#
directive|ifndef
name|QT_NO_MENU
case|case
name|CE_MenuItem
case|:
comment|// Draws one item in a popup menu.
if|if
condition|(
specifier|const
name|QStyleOptionMenuItem
modifier|*
name|menuItem
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionMenuItem
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
name|QBrush
name|textBrush
decl_stmt|;
if|if
condition|(
name|option
operator|->
name|palette
operator|.
name|resolve
argument_list|()
operator|&
operator|(
literal|1
operator|<<
name|QPalette
operator|::
name|ButtonText
operator|)
condition|)
name|textBrush
operator|=
name|option
operator|->
name|palette
operator|.
name|buttonText
argument_list|()
expr_stmt|;
else|else
name|textBrush
operator|=
name|option
operator|->
name|palette
operator|.
name|windowText
argument_list|()
expr_stmt|;
comment|// KDE uses windowText rather than buttonText for menus
if|if
condition|(
name|menuItem
operator|->
name|menuItemType
operator|==
name|QStyleOptionMenuItem
operator|::
name|Separator
condition|)
block|{
name|painter
operator|->
name|fillRect
argument_list|(
name|menuItem
operator|->
name|rect
argument_list|,
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|103
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|w
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|!
name|menuItem
operator|->
name|text
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|painter
operator|->
name|setFont
argument_list|(
name|menuItem
operator|->
name|font
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawItemText
argument_list|(
name|painter
argument_list|,
name|menuItem
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|5
argument_list|,
literal|0
argument_list|,
operator|-
literal|5
argument_list|,
literal|0
argument_list|)
argument_list|,
name|Qt
operator|::
name|AlignLeft
operator||
name|Qt
operator|::
name|AlignVCenter
argument_list|,
name|menuItem
operator|->
name|palette
argument_list|,
name|menuItem
operator|->
name|state
operator|&
name|State_Enabled
argument_list|,
name|menuItem
operator|->
name|text
argument_list|,
name|QPalette
operator|::
name|Text
argument_list|)
expr_stmt|;
name|w
operator|=
name|menuItem
operator|->
name|fontMetrics
operator|.
name|width
argument_list|(
name|menuItem
operator|->
name|text
argument_list|)
operator|+
literal|5
expr_stmt|;
block|}
name|painter
operator|->
name|setPen
argument_list|(
name|alphaCornerColor
argument_list|)
expr_stmt|;
name|bool
name|reverse
init|=
name|menuItem
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
decl_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|menuItem
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|5
operator|+
operator|(
name|reverse
condition|?
literal|0
else|:
name|w
operator|)
argument_list|,
name|menuItem
operator|->
name|rect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
argument_list|,
name|menuItem
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|5
operator|-
operator|(
name|reverse
condition|?
name|w
else|:
literal|0
operator|)
argument_list|,
name|menuItem
operator|->
name|rect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
block|}
name|bool
name|selected
init|=
name|menuItem
operator|->
name|state
operator|&
name|State_Selected
decl_stmt|;
name|bool
name|checkable
init|=
name|menuItem
operator|->
name|checkType
operator|!=
name|QStyleOptionMenuItem
operator|::
name|NotCheckable
decl_stmt|;
name|bool
name|checked
init|=
name|menuItem
operator|->
name|checked
decl_stmt|;
if|if
condition|(
name|selected
condition|)
block|{
name|qt_plastique_draw_gradient
argument_list|(
name|painter
argument_list|,
name|menuItem
operator|->
name|rect
argument_list|,
name|option
operator|->
name|palette
operator|.
name|highlight
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|105
argument_list|)
argument_list|,
name|option
operator|->
name|palette
operator|.
name|highlight
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|110
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|highlight
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|110
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|topRight
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|highlight
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|115
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|painter
operator|->
name|fillRect
argument_list|(
name|option
operator|->
name|rect
argument_list|,
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|103
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// Check
name|QRect
name|checkRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|7
argument_list|,
name|option
operator|->
name|rect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|-
literal|6
argument_list|,
literal|13
argument_list|,
literal|13
argument_list|)
decl_stmt|;
name|checkRect
operator|=
name|visualRect
argument_list|(
name|menuItem
operator|->
name|direction
argument_list|,
name|menuItem
operator|->
name|rect
argument_list|,
name|checkRect
argument_list|)
expr_stmt|;
if|if
condition|(
name|checkable
condition|)
block|{
if|if
condition|(
operator|(
name|menuItem
operator|->
name|checkType
operator|&
name|QStyleOptionMenuItem
operator|::
name|Exclusive
operator|)
operator|&&
name|menuItem
operator|->
name|icon
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|QStyleOptionButton
name|button
decl_stmt|;
name|button
operator|.
name|rect
operator|=
name|checkRect
expr_stmt|;
name|button
operator|.
name|state
operator|=
name|menuItem
operator|->
name|state
expr_stmt|;
if|if
condition|(
name|checked
condition|)
name|button
operator|.
name|state
operator||=
name|State_On
expr_stmt|;
name|button
operator|.
name|palette
operator|=
name|menuItem
operator|->
name|palette
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_IndicatorRadioButton
argument_list|,
operator|&
name|button
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|menuItem
operator|->
name|icon
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|QStyleOptionButton
name|button
decl_stmt|;
name|button
operator|.
name|rect
operator|=
name|checkRect
expr_stmt|;
name|button
operator|.
name|state
operator|=
name|menuItem
operator|->
name|state
expr_stmt|;
if|if
condition|(
name|checked
condition|)
name|button
operator|.
name|state
operator||=
name|State_On
expr_stmt|;
name|button
operator|.
name|palette
operator|=
name|menuItem
operator|->
name|palette
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_IndicatorCheckBox
argument_list|,
operator|&
name|button
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|checked
condition|)
block|{
name|int
name|iconSize
init|=
name|qMax
argument_list|(
name|menuItem
operator|->
name|maxIconWidth
argument_list|,
literal|20
argument_list|)
decl_stmt|;
name|QRect
name|sunkenRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
operator|(
name|option
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
name|iconSize
operator|)
operator|/
literal|2
operator|+
literal|1
argument_list|,
name|iconSize
argument_list|,
name|iconSize
argument_list|)
decl_stmt|;
name|sunkenRect
operator|=
name|visualRect
argument_list|(
name|menuItem
operator|->
name|direction
argument_list|,
name|menuItem
operator|->
name|rect
argument_list|,
name|sunkenRect
argument_list|)
expr_stmt|;
name|QStyleOption
name|opt
init|=
operator|*
name|option
decl_stmt|;
name|opt
operator|.
name|state
operator||=
name|State_Sunken
expr_stmt|;
name|opt
operator|.
name|rect
operator|=
name|sunkenRect
expr_stmt|;
name|qt_plastique_drawShadedPanel
argument_list|(
name|painter
argument_list|,
operator|&
name|opt
argument_list|,
literal|false
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
block|}
block|}
comment|// Text and icon, ripped from windows style
name|bool
name|dis
init|=
operator|!
operator|(
name|menuItem
operator|->
name|state
operator|&
name|State_Enabled
operator|)
decl_stmt|;
name|bool
name|act
init|=
name|menuItem
operator|->
name|state
operator|&
name|State_Selected
decl_stmt|;
specifier|const
name|QStyleOption
modifier|*
name|opt
init|=
name|option
decl_stmt|;
specifier|const
name|QStyleOptionMenuItem
modifier|*
name|menuitem
init|=
name|menuItem
decl_stmt|;
name|int
name|checkcol
init|=
name|qMax
argument_list|(
name|menuitem
operator|->
name|maxIconWidth
argument_list|,
literal|20
argument_list|)
decl_stmt|;
name|QPainter
modifier|*
name|p
init|=
name|painter
decl_stmt|;
name|QRect
name|vCheckRect
init|=
name|visualRect
argument_list|(
name|opt
operator|->
name|direction
argument_list|,
name|menuitem
operator|->
name|rect
argument_list|,
name|QRect
argument_list|(
name|menuitem
operator|->
name|rect
operator|.
name|x
argument_list|()
argument_list|,
name|menuitem
operator|->
name|rect
operator|.
name|y
argument_list|()
argument_list|,
name|checkcol
argument_list|,
name|menuitem
operator|->
name|rect
operator|.
name|height
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|menuItem
operator|->
name|icon
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|QIcon
operator|::
name|Mode
name|mode
init|=
name|dis
condition|?
name|QIcon
operator|::
name|Disabled
else|:
name|QIcon
operator|::
name|Normal
decl_stmt|;
if|if
condition|(
name|act
operator|&&
operator|!
name|dis
condition|)
name|mode
operator|=
name|QIcon
operator|::
name|Active
expr_stmt|;
name|QPixmap
name|pixmap
decl_stmt|;
if|if
condition|(
name|checked
condition|)
name|pixmap
operator|=
name|menuItem
operator|->
name|icon
operator|.
name|pixmap
argument_list|(
name|pixelMetric
argument_list|(
name|PM_SmallIconSize
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
argument_list|,
name|mode
argument_list|,
name|QIcon
operator|::
name|On
argument_list|)
expr_stmt|;
else|else
name|pixmap
operator|=
name|menuItem
operator|->
name|icon
operator|.
name|pixmap
argument_list|(
name|pixelMetric
argument_list|(
name|PM_SmallIconSize
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
argument_list|,
name|mode
argument_list|)
expr_stmt|;
name|int
name|pixw
init|=
name|pixmap
operator|.
name|width
argument_list|()
decl_stmt|;
name|int
name|pixh
init|=
name|pixmap
operator|.
name|height
argument_list|()
decl_stmt|;
name|QRect
name|pmr
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|pixw
argument_list|,
name|pixh
argument_list|)
decl_stmt|;
name|pmr
operator|.
name|moveCenter
argument_list|(
name|vCheckRect
operator|.
name|center
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|textBrush
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|checkable
operator|&&
name|checked
condition|)
name|painter
operator|->
name|drawPixmap
argument_list|(
name|QPoint
argument_list|(
name|pmr
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|pmr
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|,
name|pixmap
argument_list|)
expr_stmt|;
else|else
name|painter
operator|->
name|drawPixmap
argument_list|(
name|pmr
operator|.
name|topLeft
argument_list|()
argument_list|,
name|pixmap
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|selected
condition|)
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|menuItem
operator|->
name|palette
operator|.
name|highlightedText
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|textBrush
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|int
name|x
decl_stmt|,
name|y
decl_stmt|,
name|w
decl_stmt|,
name|h
decl_stmt|;
name|menuitem
operator|->
name|rect
operator|.
name|getRect
argument_list|(
operator|&
name|x
argument_list|,
operator|&
name|y
argument_list|,
operator|&
name|w
argument_list|,
operator|&
name|h
argument_list|)
expr_stmt|;
name|int
name|tab
init|=
name|menuitem
operator|->
name|tabWidth
decl_stmt|;
name|QColor
name|discol
decl_stmt|;
if|if
condition|(
name|dis
condition|)
block|{
name|discol
operator|=
name|textBrush
operator|.
name|color
argument_list|()
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|discol
argument_list|)
expr_stmt|;
block|}
name|int
name|xm
init|=
name|windowsItemFrame
operator|+
name|checkcol
operator|+
name|windowsItemHMargin
decl_stmt|;
name|int
name|xpos
init|=
name|menuitem
operator|->
name|rect
operator|.
name|x
argument_list|()
operator|+
name|xm
decl_stmt|;
name|QRect
name|textRect
argument_list|(
name|xpos
argument_list|,
name|y
operator|+
name|windowsItemVMargin
argument_list|,
name|w
operator|-
name|xm
operator|-
name|windowsRightBorder
operator|-
name|tab
operator|+
literal|1
argument_list|,
name|h
operator|-
literal|2
operator|*
name|windowsItemVMargin
argument_list|)
decl_stmt|;
name|QRect
name|vTextRect
init|=
name|visualRect
argument_list|(
name|opt
operator|->
name|direction
argument_list|,
name|menuitem
operator|->
name|rect
argument_list|,
name|textRect
argument_list|)
decl_stmt|;
name|QString
name|s
init|=
name|menuitem
operator|->
name|text
decl_stmt|;
if|if
condition|(
operator|!
name|s
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
comment|// draw text
name|p
operator|->
name|save
argument_list|()
expr_stmt|;
name|int
name|t
init|=
name|s
operator|.
name|indexOf
argument_list|(
name|QLatin1Char
argument_list|(
literal|'\t'
argument_list|)
argument_list|)
decl_stmt|;
name|int
name|text_flags
init|=
name|Qt
operator|::
name|AlignVCenter
operator||
name|Qt
operator|::
name|TextShowMnemonic
operator||
name|Qt
operator|::
name|TextDontClip
operator||
name|Qt
operator|::
name|TextSingleLine
decl_stmt|;
if|if
condition|(
operator|!
name|styleHint
argument_list|(
name|SH_UnderlineShortcut
argument_list|,
name|menuitem
argument_list|,
name|widget
argument_list|)
condition|)
name|text_flags
operator||=
name|Qt
operator|::
name|TextHideMnemonic
expr_stmt|;
name|text_flags
operator||=
name|Qt
operator|::
name|AlignLeft
expr_stmt|;
if|if
condition|(
name|t
operator|>=
literal|0
condition|)
block|{
name|QRect
name|vShortcutRect
init|=
name|visualRect
argument_list|(
name|opt
operator|->
name|direction
argument_list|,
name|menuitem
operator|->
name|rect
argument_list|,
name|QRect
argument_list|(
name|textRect
operator|.
name|topRight
argument_list|()
argument_list|,
name|QPoint
argument_list|(
name|menuitem
operator|->
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|textRect
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|dis
operator|&&
operator|!
name|act
operator|&&
name|styleHint
argument_list|(
name|SH_EtchDisabledText
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
condition|)
block|{
name|p
operator|->
name|setPen
argument_list|(
name|menuitem
operator|->
name|palette
operator|.
name|light
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawText
argument_list|(
name|vShortcutRect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|text_flags
argument_list|,
name|s
operator|.
name|mid
argument_list|(
name|t
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|discol
argument_list|)
expr_stmt|;
block|}
name|p
operator|->
name|drawText
argument_list|(
name|vShortcutRect
argument_list|,
name|text_flags
argument_list|,
name|s
operator|.
name|mid
argument_list|(
name|t
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|s
operator|=
name|s
operator|.
name|left
argument_list|(
name|t
argument_list|)
expr_stmt|;
block|}
name|QFont
name|font
init|=
name|menuitem
operator|->
name|font
decl_stmt|;
if|if
condition|(
name|menuitem
operator|->
name|menuItemType
operator|==
name|QStyleOptionMenuItem
operator|::
name|DefaultItem
condition|)
name|font
operator|.
name|setBold
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|p
operator|->
name|setFont
argument_list|(
name|font
argument_list|)
expr_stmt|;
if|if
condition|(
name|dis
operator|&&
operator|!
name|act
operator|&&
name|styleHint
argument_list|(
name|SH_EtchDisabledText
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
condition|)
block|{
name|p
operator|->
name|setPen
argument_list|(
name|menuitem
operator|->
name|palette
operator|.
name|light
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawText
argument_list|(
name|vTextRect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|text_flags
argument_list|,
name|s
operator|.
name|left
argument_list|(
name|t
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|discol
argument_list|)
expr_stmt|;
block|}
name|p
operator|->
name|drawText
argument_list|(
name|vTextRect
argument_list|,
name|text_flags
argument_list|,
name|s
operator|.
name|left
argument_list|(
name|t
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
comment|// Arrow
if|if
condition|(
name|menuItem
operator|->
name|menuItemType
operator|==
name|QStyleOptionMenuItem
operator|::
name|SubMenu
condition|)
block|{
comment|// draw sub menu arrow
name|int
name|dim
init|=
operator|(
name|menuItem
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
literal|4
operator|)
operator|/
literal|2
decl_stmt|;
name|PrimitiveElement
name|arrow
decl_stmt|;
name|arrow
operator|=
operator|(
name|opt
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
operator|)
condition|?
name|PE_IndicatorArrowLeft
else|:
name|PE_IndicatorArrowRight
expr_stmt|;
name|int
name|xpos
init|=
name|menuItem
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
name|menuItem
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|-
literal|6
operator|-
literal|2
operator|-
name|dim
decl_stmt|;
name|QRect
name|vSubMenuRect
init|=
name|visualRect
argument_list|(
name|option
operator|->
name|direction
argument_list|,
name|menuItem
operator|->
name|rect
argument_list|,
name|QRect
argument_list|(
name|xpos
argument_list|,
name|menuItem
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
name|menuItem
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|/
literal|2
operator|-
name|dim
operator|/
literal|2
argument_list|,
name|dim
argument_list|,
name|dim
argument_list|)
argument_list|)
decl_stmt|;
name|QStyleOptionMenuItem
name|newMI
init|=
operator|*
name|menuItem
decl_stmt|;
name|newMI
operator|.
name|rect
operator|=
name|vSubMenuRect
expr_stmt|;
name|newMI
operator|.
name|state
operator|=
name|option
operator|->
name|state
operator|&
name|State_Enabled
expr_stmt|;
if|if
condition|(
name|selected
condition|)
name|newMI
operator|.
name|palette
operator|.
name|setColor
argument_list|(
name|QPalette
operator|::
name|ButtonText
argument_list|,
name|newMI
operator|.
name|palette
operator|.
name|highlightedText
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|newMI
operator|.
name|palette
operator|.
name|setColor
argument_list|(
name|QPalette
operator|::
name|ButtonText
argument_list|,
name|textBrush
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|arrow
argument_list|,
operator|&
name|newMI
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_MENU
ifndef|#
directive|ifndef
name|QT_NO_MENUBAR
case|case
name|CE_MenuBarItem
case|:
comment|// Draws a menu bar item; File, Edit, Help etc..
if|if
condition|(
operator|(
name|option
operator|->
name|state
operator|&
name|State_Selected
operator|)
condition|)
block|{
name|QPixmap
name|cache
decl_stmt|;
name|QString
name|pixmapName
init|=
name|QStyleHelper
operator|::
name|uniqueName
argument_list|(
name|QLatin1String
argument_list|(
literal|"menubaritem"
argument_list|)
argument_list|,
name|option
argument_list|,
name|option
operator|->
name|rect
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|QPixmapCache
operator|::
name|find
argument_list|(
name|pixmapName
argument_list|,
name|cache
argument_list|)
condition|)
block|{
name|cache
operator|=
name|QPixmap
argument_list|(
name|option
operator|->
name|rect
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|cache
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|QRect
name|pixmapRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|option
operator|->
name|rect
operator|.
name|width
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|height
argument_list|()
argument_list|)
decl_stmt|;
name|QPainter
name|cachePainter
argument_list|(
operator|&
name|cache
argument_list|)
decl_stmt|;
name|QRect
name|rect
init|=
name|pixmapRect
decl_stmt|;
comment|// gradient fill
if|if
condition|(
operator|(
name|option
operator|->
name|state
operator|&
name|QStyle
operator|::
name|State_Sunken
operator|)
operator|||
operator|(
name|option
operator|->
name|state
operator|&
name|QStyle
operator|::
name|State_On
operator|)
condition|)
block|{
name|qt_plastique_draw_gradient
argument_list|(
operator|&
name|cachePainter
argument_list|,
name|rect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|114
argument_list|)
argument_list|,
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|106
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|qt_plastique_draw_gradient
argument_list|(
operator|&
name|cachePainter
argument_list|,
name|rect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|105
argument_list|)
argument_list|,
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|102
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// outer border and corners
name|cachePainter
operator|.
name|setPen
argument_list|(
name|borderColor
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawRect
argument_list|(
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|setPen
argument_list|(
name|alphaCornerColor
argument_list|)
expr_stmt|;
specifier|const
name|QPoint
name|points
index|[
literal|4
index|]
init|=
block|{
name|rect
operator|.
name|topLeft
argument_list|()
block|,
name|rect
operator|.
name|topRight
argument_list|()
block|,
name|rect
operator|.
name|bottomLeft
argument_list|()
block|,
name|rect
operator|.
name|bottomRight
argument_list|()
block|}
decl_stmt|;
name|cachePainter
operator|.
name|drawPoints
argument_list|(
name|points
argument_list|,
literal|4
argument_list|)
expr_stmt|;
comment|// inner border
if|if
condition|(
operator|(
name|option
operator|->
name|state
operator|&
name|QStyle
operator|::
name|State_Sunken
operator|)
operator|||
operator|(
name|option
operator|->
name|state
operator|&
name|QStyle
operator|::
name|State_On
operator|)
condition|)
name|cachePainter
operator|.
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|118
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|cachePainter
operator|.
name|setPen
argument_list|(
name|gradientStartColor
argument_list|)
expr_stmt|;
name|QLine
name|lines
index|[
literal|2
index|]
decl_stmt|;
name|lines
index|[
literal|0
index|]
operator|=
name|QLine
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
name|lines
index|[
literal|1
index|]
operator|=
name|QLine
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|,
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|2
argument_list|)
expr_stmt|;
if|if
condition|(
operator|(
name|option
operator|->
name|state
operator|&
name|QStyle
operator|::
name|State_Sunken
operator|)
operator|||
operator|(
name|option
operator|->
name|state
operator|&
name|QStyle
operator|::
name|State_On
operator|)
condition|)
name|cachePainter
operator|.
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|114
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|cachePainter
operator|.
name|setPen
argument_list|(
name|gradientStopColor
operator|.
name|darker
argument_list|(
literal|102
argument_list|)
argument_list|)
expr_stmt|;
name|lines
index|[
literal|0
index|]
operator|=
name|QLine
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|lines
index|[
literal|1
index|]
operator|=
name|QLine
argument_list|(
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|end
argument_list|()
expr_stmt|;
name|QPixmapCache
operator|::
name|insert
argument_list|(
name|pixmapName
argument_list|,
name|cache
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|drawPixmap
argument_list|(
name|option
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|cache
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|painter
operator|->
name|fillRect
argument_list|(
name|option
operator|->
name|rect
argument_list|,
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
specifier|const
name|QStyleOptionMenuItem
modifier|*
name|mbi
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionMenuItem
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|QStyleOptionMenuItem
name|newMI
init|=
operator|*
name|mbi
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|option
operator|->
name|palette
operator|.
name|resolve
argument_list|()
operator|&
operator|(
literal|1
operator|<<
name|QPalette
operator|::
name|ButtonText
operator|)
operator|)
condition|)
comment|//KDE uses windowText rather than buttonText for menus
name|newMI
operator|.
name|palette
operator|.
name|setColor
argument_list|(
name|QPalette
operator|::
name|ButtonText
argument_list|,
name|newMI
operator|.
name|palette
operator|.
name|windowText
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|QCommonStyle
operator|::
name|drawControl
argument_list|(
name|element
argument_list|,
operator|&
name|newMI
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
break|break;
ifndef|#
directive|ifndef
name|QT_NO_MAINWINDOW
case|case
name|CE_MenuBarEmptyArea
case|:
if|if
condition|(
name|widget
operator|&&
name|qobject_cast
argument_list|<
specifier|const
name|QMainWindow
operator|*
argument_list|>
argument_list|(
name|widget
operator|->
name|parentWidget
argument_list|()
argument_list|)
condition|)
block|{
name|painter
operator|->
name|fillRect
argument_list|(
name|option
operator|->
name|rect
argument_list|,
name|option
operator|->
name|palette
operator|.
name|window
argument_list|()
argument_list|)
expr_stmt|;
name|QPen
name|oldPen
init|=
name|painter
operator|->
name|pen
argument_list|()
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|dark
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|oldPen
argument_list|)
expr_stmt|;
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_MAINWINDOW
endif|#
directive|endif
comment|// QT_NO_MENUBAR
ifndef|#
directive|ifndef
name|QT_NO_TOOLBOX
case|case
name|CE_ToolBoxTabShape
case|:
if|if
condition|(
specifier|const
name|QStyleOptionToolBox
modifier|*
name|toolBox
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionToolBox
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
name|int
name|width
init|=
name|toolBox
operator|->
name|rect
operator|.
name|width
argument_list|()
decl_stmt|;
name|int
name|diag
init|=
name|toolBox
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
literal|2
decl_stmt|;
comment|// The essential points
name|QPoint
name|rightMost
decl_stmt|;
name|QPoint
name|rightEdge
decl_stmt|;
name|QPoint
name|leftEdge
decl_stmt|;
name|QPoint
name|leftMost
decl_stmt|;
name|QPoint
name|leftOne
decl_stmt|;
name|QPoint
name|rightOne
decl_stmt|;
name|QPoint
name|upOne
argument_list|(
literal|0
argument_list|,
operator|-
literal|1
argument_list|)
decl_stmt|;
name|QPoint
name|downOne
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
decl_stmt|;
if|if
condition|(
name|toolBox
operator|->
name|direction
operator|!=
name|Qt
operator|::
name|RightToLeft
condition|)
block|{
name|rightMost
operator|=
name|QPoint
argument_list|(
name|toolBox
operator|->
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|toolBox
operator|->
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
expr_stmt|;
name|rightEdge
operator|=
name|QPoint
argument_list|(
name|toolBox
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
name|width
operator|/
literal|10
argument_list|,
name|toolBox
operator|->
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
expr_stmt|;
name|leftEdge
operator|=
name|QPoint
argument_list|(
name|toolBox
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
name|width
operator|/
literal|10
operator|-
name|diag
argument_list|,
name|toolBox
operator|->
name|rect
operator|.
name|top
argument_list|()
argument_list|)
expr_stmt|;
name|leftMost
operator|=
name|QPoint
argument_list|(
name|toolBox
operator|->
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|toolBox
operator|->
name|rect
operator|.
name|top
argument_list|()
argument_list|)
expr_stmt|;
name|leftOne
operator|=
name|QPoint
argument_list|(
operator|-
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|rightOne
operator|=
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|rightMost
operator|=
name|QPoint
argument_list|(
name|toolBox
operator|->
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|toolBox
operator|->
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
expr_stmt|;
name|rightEdge
operator|=
name|QPoint
argument_list|(
name|toolBox
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
name|width
operator|/
literal|10
argument_list|,
name|toolBox
operator|->
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
expr_stmt|;
name|leftEdge
operator|=
name|QPoint
argument_list|(
name|toolBox
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
name|width
operator|/
literal|10
operator|+
name|diag
argument_list|,
name|toolBox
operator|->
name|rect
operator|.
name|top
argument_list|()
argument_list|)
expr_stmt|;
name|leftMost
operator|=
name|QPoint
argument_list|(
name|toolBox
operator|->
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|toolBox
operator|->
name|rect
operator|.
name|top
argument_list|()
argument_list|)
expr_stmt|;
name|leftOne
operator|=
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|rightOne
operator|=
name|QPoint
argument_list|(
operator|-
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
name|QLine
name|lines
index|[
literal|3
index|]
decl_stmt|;
comment|// Draw the outline
name|painter
operator|->
name|setPen
argument_list|(
name|borderColor
argument_list|)
expr_stmt|;
name|lines
index|[
literal|0
index|]
operator|=
name|QLine
argument_list|(
name|rightMost
argument_list|,
name|rightEdge
argument_list|)
expr_stmt|;
name|lines
index|[
literal|1
index|]
operator|=
name|QLine
argument_list|(
name|rightEdge
operator|+
name|leftOne
argument_list|,
name|leftEdge
argument_list|)
expr_stmt|;
name|lines
index|[
literal|2
index|]
operator|=
name|QLine
argument_list|(
name|leftEdge
operator|+
name|leftOne
argument_list|,
name|leftMost
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|toolBox
operator|->
name|palette
operator|.
name|base
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|lines
index|[
literal|0
index|]
operator|=
name|QLine
argument_list|(
name|rightMost
operator|+
name|downOne
argument_list|,
name|rightEdge
operator|+
name|downOne
argument_list|)
expr_stmt|;
name|lines
index|[
literal|1
index|]
operator|=
name|QLine
argument_list|(
name|rightEdge
operator|+
name|leftOne
operator|+
name|downOne
argument_list|,
name|leftEdge
operator|+
name|downOne
argument_list|)
expr_stmt|;
name|lines
index|[
literal|2
index|]
operator|=
name|QLine
argument_list|(
name|leftEdge
operator|+
name|leftOne
operator|+
name|downOne
argument_list|,
name|leftMost
operator|+
name|downOne
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_TOOLBOX
ifndef|#
directive|ifndef
name|QT_NO_SPLITTER
case|case
name|CE_Splitter
case|:
if|if
condition|(
operator|(
name|option
operator|->
name|state
operator|&
name|State_Enabled
operator|)
operator|&&
operator|(
name|option
operator|->
name|state
operator|&
name|State_MouseOver
operator|)
condition|)
name|painter
operator|->
name|fillRect
argument_list|(
name|option
operator|->
name|rect
argument_list|,
name|QColor
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|,
literal|128
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|State_Horizontal
condition|)
block|{
name|int
name|height
init|=
name|option
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|/
literal|3
decl_stmt|;
name|QRect
name|rect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
operator|(
name|option
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|/
literal|2
operator|-
literal|1
operator|)
argument_list|,
name|option
operator|->
name|rect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|-
name|height
operator|/
literal|2
argument_list|,
literal|3
argument_list|,
name|height
argument_list|)
decl_stmt|;
name|qt_plastique_draw_handle
argument_list|(
name|painter
argument_list|,
name|option
argument_list|,
name|rect
argument_list|,
name|Qt
operator|::
name|Horizontal
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|int
name|width
init|=
name|option
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|/
literal|3
decl_stmt|;
name|QRect
name|rect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|-
name|width
operator|/
literal|2
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
operator|(
name|option
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|/
literal|2
operator|)
operator|-
literal|1
argument_list|,
name|width
argument_list|,
literal|3
argument_list|)
decl_stmt|;
name|qt_plastique_draw_handle
argument_list|(
name|painter
argument_list|,
name|option
argument_list|,
name|rect
argument_list|,
name|Qt
operator|::
name|Vertical
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_SPLITTER
ifndef|#
directive|ifndef
name|QT_NO_DOCKWIDGET
case|case
name|CE_DockWidgetTitle
case|:
if|if
condition|(
specifier|const
name|QStyleOptionDockWidget
modifier|*
name|dockWidget
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionDockWidget
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
specifier|const
name|QStyleOptionDockWidgetV2
modifier|*
name|v2
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionDockWidgetV2
operator|*
argument_list|>
argument_list|(
name|dockWidget
argument_list|)
decl_stmt|;
name|bool
name|verticalTitleBar
init|=
name|v2
operator|==
literal|0
condition|?
literal|false
else|:
name|v2
operator|->
name|verticalTitleBar
decl_stmt|;
comment|// Find text width and title rect
name|int
name|textWidth
init|=
name|option
operator|->
name|fontMetrics
operator|.
name|width
argument_list|(
name|dockWidget
operator|->
name|title
argument_list|)
decl_stmt|;
name|int
name|margin
init|=
literal|4
decl_stmt|;
name|QRect
name|titleRect
init|=
name|subElementRect
argument_list|(
name|SE_DockWidgetTitleBarText
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|QRect
name|rect
init|=
name|dockWidget
operator|->
name|rect
decl_stmt|;
if|if
condition|(
name|verticalTitleBar
condition|)
block|{
name|QRect
name|r
init|=
name|rect
decl_stmt|;
name|QSize
name|s
init|=
name|r
operator|.
name|size
argument_list|()
decl_stmt|;
name|s
operator|.
name|transpose
argument_list|()
expr_stmt|;
name|r
operator|.
name|setSize
argument_list|(
name|s
argument_list|)
expr_stmt|;
name|titleRect
operator|=
name|QRect
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
name|rect
operator|.
name|bottom
argument_list|()
operator|-
name|titleRect
operator|.
name|bottom
argument_list|()
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
name|titleRect
operator|.
name|left
argument_list|()
operator|-
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|titleRect
operator|.
name|height
argument_list|()
argument_list|,
name|titleRect
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|translate
argument_list|(
name|r
operator|.
name|left
argument_list|()
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
name|r
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|rotate
argument_list|(
operator|-
literal|90
argument_list|)
expr_stmt|;
name|painter
operator|->
name|translate
argument_list|(
operator|-
name|r
operator|.
name|left
argument_list|()
argument_list|,
operator|-
name|r
operator|.
name|top
argument_list|()
argument_list|)
expr_stmt|;
name|rect
operator|=
name|r
expr_stmt|;
block|}
comment|// Chop and insert ellide into title if text is too wide
name|QString
name|title
init|=
name|elliditide
argument_list|(
name|dockWidget
operator|->
name|title
argument_list|,
name|dockWidget
operator|->
name|fontMetrics
argument_list|,
name|titleRect
argument_list|,
operator|&
name|textWidth
argument_list|)
decl_stmt|;
comment|// Draw the toolbar handle pattern to the left and right of the text
name|QImage
name|handle
argument_list|(
name|qt_toolbarhandle
argument_list|)
decl_stmt|;
name|alphaCornerColor
operator|.
name|setAlpha
argument_list|(
literal|170
argument_list|)
expr_stmt|;
name|handle
operator|.
name|setColor
argument_list|(
literal|1
argument_list|,
name|alphaCornerColor
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
name|handle
operator|.
name|setColor
argument_list|(
literal|2
argument_list|,
name|mergedColors
argument_list|(
name|alphaCornerColor
argument_list|,
name|option
operator|->
name|palette
operator|.
name|light
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
name|handle
operator|.
name|setColor
argument_list|(
literal|3
argument_list|,
name|option
operator|->
name|palette
operator|.
name|light
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|title
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
comment|// Joint handle if there's no title
name|QRect
name|r
decl_stmt|;
name|r
operator|.
name|setRect
argument_list|(
name|titleRect
operator|.
name|left
argument_list|()
argument_list|,
name|titleRect
operator|.
name|top
argument_list|()
argument_list|,
name|titleRect
operator|.
name|width
argument_list|()
argument_list|,
name|titleRect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
name|int
name|nchunks
init|=
operator|(
name|r
operator|.
name|width
argument_list|()
operator|/
name|handle
operator|.
name|width
argument_list|()
operator|)
operator|-
literal|1
decl_stmt|;
name|int
name|indent
init|=
operator|(
name|r
operator|.
name|width
argument_list|()
operator|-
operator|(
name|nchunks
operator|*
name|handle
operator|.
name|width
argument_list|()
operator|)
operator|)
operator|/
literal|2
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|nchunks
condition|;
operator|++
name|i
control|)
block|{
name|painter
operator|->
name|drawImage
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
name|indent
operator|+
name|i
operator|*
name|handle
operator|.
name|width
argument_list|()
argument_list|,
name|r
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|-
name|handle
operator|.
name|height
argument_list|()
operator|/
literal|2
argument_list|)
argument_list|,
name|handle
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
comment|// Handle pattern to the left of the title
name|QRect
name|leftSide
argument_list|(
name|titleRect
operator|.
name|left
argument_list|()
argument_list|,
name|titleRect
operator|.
name|top
argument_list|()
argument_list|,
name|titleRect
operator|.
name|width
argument_list|()
operator|/
literal|2
operator|-
name|textWidth
operator|/
literal|2
operator|-
name|margin
argument_list|,
name|titleRect
operator|.
name|bottom
argument_list|()
argument_list|)
decl_stmt|;
name|int
name|nchunks
init|=
name|leftSide
operator|.
name|width
argument_list|()
operator|/
name|handle
operator|.
name|width
argument_list|()
decl_stmt|;
name|int
name|indent
init|=
operator|(
name|leftSide
operator|.
name|width
argument_list|()
operator|-
operator|(
name|nchunks
operator|*
name|handle
operator|.
name|width
argument_list|()
operator|)
operator|)
operator|/
literal|2
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|nchunks
condition|;
operator|++
name|i
control|)
block|{
name|painter
operator|->
name|drawImage
argument_list|(
name|QPoint
argument_list|(
name|leftSide
operator|.
name|left
argument_list|()
operator|+
name|indent
operator|+
name|i
operator|*
name|handle
operator|.
name|width
argument_list|()
argument_list|,
name|leftSide
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|-
name|handle
operator|.
name|height
argument_list|()
operator|/
literal|2
argument_list|)
argument_list|,
name|handle
argument_list|)
expr_stmt|;
block|}
comment|// Handle pattern to the right of the title
name|QRect
name|rightSide
init|=
name|titleRect
operator|.
name|adjusted
argument_list|(
name|titleRect
operator|.
name|width
argument_list|()
operator|/
literal|2
operator|+
name|textWidth
operator|/
literal|2
operator|+
name|margin
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|nchunks
operator|=
name|rightSide
operator|.
name|width
argument_list|()
operator|/
name|handle
operator|.
name|width
argument_list|()
expr_stmt|;
name|indent
operator|=
operator|(
name|rightSide
operator|.
name|width
argument_list|()
operator|-
operator|(
name|nchunks
operator|*
name|handle
operator|.
name|width
argument_list|()
operator|)
operator|)
operator|/
literal|2
expr_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|nchunks
condition|;
operator|++
name|j
control|)
block|{
name|painter
operator|->
name|drawImage
argument_list|(
name|QPoint
argument_list|(
name|rightSide
operator|.
name|left
argument_list|()
operator|+
name|indent
operator|+
name|j
operator|*
name|handle
operator|.
name|width
argument_list|()
argument_list|,
name|rightSide
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|-
name|handle
operator|.
name|height
argument_list|()
operator|/
literal|2
argument_list|)
argument_list|,
name|handle
argument_list|)
expr_stmt|;
block|}
block|}
comment|// Draw the text centered
name|QFont
name|font
init|=
name|painter
operator|->
name|font
argument_list|()
decl_stmt|;
name|font
operator|.
name|setPointSize
argument_list|(
name|QFontInfo
argument_list|(
name|font
argument_list|)
operator|.
name|pointSize
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setFont
argument_list|(
name|font
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|dockWidget
operator|->
name|palette
operator|.
name|windowText
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawText
argument_list|(
name|titleRect
argument_list|,
name|int
argument_list|(
name|Qt
operator|::
name|AlignHCenter
operator||
name|Qt
operator|::
name|AlignVCenter
operator||
name|Qt
operator|::
name|TextShowMnemonic
argument_list|)
argument_list|,
name|title
argument_list|)
expr_stmt|;
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_DOCKWIDGET
ifndef|#
directive|ifndef
name|QT_NO_TOOLBAR
case|case
name|CE_ToolBar
case|:
if|if
condition|(
specifier|const
name|QStyleOptionToolBar
modifier|*
name|toolBar
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionToolBar
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
comment|// Draws the light line above and the dark line below menu bars and
comment|// tool bars.
name|QPen
name|oldPen
init|=
name|painter
operator|->
name|pen
argument_list|()
decl_stmt|;
if|if
condition|(
name|toolBar
operator|->
name|toolBarArea
operator|==
name|Qt
operator|::
name|TopToolBarArea
condition|)
block|{
if|if
condition|(
name|toolBar
operator|->
name|positionOfLine
operator|==
name|QStyleOptionToolBar
operator|::
name|End
operator|||
name|toolBar
operator|->
name|positionOfLine
operator|==
name|QStyleOptionToolBar
operator|::
name|OnlyOne
condition|)
block|{
comment|// The end and onlyone top toolbar lines draw a double
comment|// line at the bottom to blend with the central
comment|// widget.
name|painter
operator|->
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|104
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|alphaCornerColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|,
name|option
operator|->
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// All others draw a single dark line at the bottom.
name|painter
operator|->
name|setPen
argument_list|(
name|alphaCornerColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// All top toolbar lines draw a light line at the top.
name|painter
operator|->
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|104
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|topRight
argument_list|()
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|toolBar
operator|->
name|toolBarArea
operator|==
name|Qt
operator|::
name|BottomToolBarArea
condition|)
block|{
if|if
condition|(
name|toolBar
operator|->
name|positionOfLine
operator|==
name|QStyleOptionToolBar
operator|::
name|End
operator|||
name|toolBar
operator|->
name|positionOfLine
operator|==
name|QStyleOptionToolBar
operator|::
name|Middle
condition|)
block|{
comment|// The end and middle bottom tool bar lines draw a dark
comment|// line at the bottom.
name|painter
operator|->
name|setPen
argument_list|(
name|alphaCornerColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|toolBar
operator|->
name|positionOfLine
operator|==
name|QStyleOptionToolBar
operator|::
name|Beginning
operator|||
name|toolBar
operator|->
name|positionOfLine
operator|==
name|QStyleOptionToolBar
operator|::
name|OnlyOne
condition|)
block|{
comment|// The beginning and only one tool bar lines draw a
comment|// double line at the bottom to blend with the
comment|// status bar.
comment|// ### The styleoption could contain whether the
comment|// main window has a menu bar and a status bar, and
comment|// possibly dock widgets.
name|painter
operator|->
name|setPen
argument_list|(
name|alphaCornerColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|,
name|option
operator|->
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|104
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|toolBar
operator|->
name|positionOfLine
operator|==
name|QStyleOptionToolBar
operator|::
name|End
condition|)
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|alphaCornerColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|topRight
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|104
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|option
operator|->
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// All other bottom toolbars draw a light line at the top.
name|painter
operator|->
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|104
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|topRight
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|toolBar
operator|->
name|toolBarArea
operator|==
name|Qt
operator|::
name|LeftToolBarArea
condition|)
block|{
if|if
condition|(
name|toolBar
operator|->
name|positionOfLine
operator|==
name|QStyleOptionToolBar
operator|::
name|Middle
operator|||
name|toolBar
operator|->
name|positionOfLine
operator|==
name|QStyleOptionToolBar
operator|::
name|End
condition|)
block|{
comment|// The middle and left end toolbar lines draw a light
comment|// line to the left.
name|painter
operator|->
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|104
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|toolBar
operator|->
name|positionOfLine
operator|==
name|QStyleOptionToolBar
operator|::
name|End
condition|)
block|{
comment|// All other left toolbar lines draw a dark line to the right
name|painter
operator|->
name|setPen
argument_list|(
name|alphaCornerColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|104
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|topRight
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// All other left toolbar lines draw a dark line to the right
name|painter
operator|->
name|setPen
argument_list|(
name|alphaCornerColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|topRight
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
elseif|else
if|if
condition|(
name|toolBar
operator|->
name|toolBarArea
operator|==
name|Qt
operator|::
name|RightToolBarArea
condition|)
block|{
if|if
condition|(
name|toolBar
operator|->
name|positionOfLine
operator|==
name|QStyleOptionToolBar
operator|::
name|Middle
operator|||
name|toolBar
operator|->
name|positionOfLine
operator|==
name|QStyleOptionToolBar
operator|::
name|End
condition|)
block|{
comment|// Right middle and end toolbar lines draw the dark right line
name|painter
operator|->
name|setPen
argument_list|(
name|alphaCornerColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|topRight
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|toolBar
operator|->
name|positionOfLine
operator|==
name|QStyleOptionToolBar
operator|::
name|End
operator|||
name|toolBar
operator|->
name|positionOfLine
operator|==
name|QStyleOptionToolBar
operator|::
name|OnlyOne
condition|)
block|{
comment|// The right end and single toolbar draws the dark
comment|// line on its left edge
name|painter
operator|->
name|setPen
argument_list|(
name|alphaCornerColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|)
expr_stmt|;
comment|// And a light line next to it
name|painter
operator|->
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|104
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// Other right toolbars draw a light line on its left edge
name|painter
operator|->
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|104
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|painter
operator|->
name|setPen
argument_list|(
name|oldPen
argument_list|)
expr_stmt|;
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_TOOLBAR
ifndef|#
directive|ifndef
name|QT_NO_SCROLLBAR
case|case
name|CE_ScrollBarAddLine
case|:
if|if
condition|(
specifier|const
name|QStyleOptionSlider
modifier|*
name|scrollBar
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSlider
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|bool
name|horizontal
init|=
name|scrollBar
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
decl_stmt|;
name|bool
name|reverse
init|=
name|scrollBar
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
decl_stmt|;
name|bool
name|sunken
init|=
name|scrollBar
operator|->
name|state
operator|&
name|State_Sunken
decl_stmt|;
name|QString
name|addLinePixmapName
init|=
name|QStyleHelper
operator|::
name|uniqueName
argument_list|(
name|QLatin1String
argument_list|(
literal|"scrollbar_addline"
argument_list|)
argument_list|,
name|option
argument_list|,
name|option
operator|->
name|rect
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
name|QPixmap
name|cache
decl_stmt|;
if|if
condition|(
operator|!
name|QPixmapCache
operator|::
name|find
argument_list|(
name|addLinePixmapName
argument_list|,
name|cache
argument_list|)
condition|)
block|{
name|cache
operator|=
name|QPixmap
argument_list|(
name|option
operator|->
name|rect
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|cache
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|QRect
name|pixmapRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|cache
operator|.
name|width
argument_list|()
argument_list|,
name|cache
operator|.
name|height
argument_list|()
argument_list|)
decl_stmt|;
name|QPainter
name|addLinePainter
argument_list|(
operator|&
name|cache
argument_list|)
decl_stmt|;
name|addLinePainter
operator|.
name|fillRect
argument_list|(
name|pixmapRect
argument_list|,
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|State_Enabled
condition|)
block|{
comment|// Gradient
name|QLinearGradient
name|gradient
argument_list|(
name|pixmapRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|,
name|pixmapRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
decl_stmt|;
if|if
condition|(
operator|(
name|scrollBar
operator|->
name|activeSubControls
operator|&
name|SC_ScrollBarAddLine
operator|)
operator|&&
name|sunken
condition|)
block|{
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|gradientStopColor
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|1
argument_list|,
name|gradientStopColor
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|gradientStartColor
operator|.
name|lighter
argument_list|(
literal|105
argument_list|)
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|1
argument_list|,
name|gradientStopColor
argument_list|)
expr_stmt|;
block|}
name|addLinePainter
operator|.
name|fillRect
argument_list|(
name|pixmapRect
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|pixmapRect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|,
name|pixmapRect
operator|.
name|right
argument_list|()
operator|-
literal|3
argument_list|,
name|pixmapRect
operator|.
name|bottom
argument_list|()
operator|-
literal|3
argument_list|,
name|gradient
argument_list|)
expr_stmt|;
block|}
comment|// Details
name|QImage
name|addButton
decl_stmt|;
if|if
condition|(
name|horizontal
condition|)
block|{
name|addButton
operator|=
name|QImage
argument_list|(
name|reverse
condition|?
name|qt_scrollbar_button_left
else|:
name|qt_scrollbar_button_right
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|addButton
operator|=
name|QImage
argument_list|(
name|qt_scrollbar_button_down
argument_list|)
expr_stmt|;
block|}
name|addButton
operator|.
name|setColor
argument_list|(
literal|1
argument_list|,
name|alphaCornerColor
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
name|addButton
operator|.
name|setColor
argument_list|(
literal|2
argument_list|,
name|borderColor
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
operator|(
name|scrollBar
operator|->
name|activeSubControls
operator|&
name|SC_ScrollBarAddLine
operator|)
operator|&&
name|sunken
condition|)
block|{
name|addButton
operator|.
name|setColor
argument_list|(
literal|3
argument_list|,
name|gradientStopColor
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
name|addButton
operator|.
name|setColor
argument_list|(
literal|4
argument_list|,
name|gradientStopColor
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|addButton
operator|.
name|setColor
argument_list|(
literal|3
argument_list|,
name|gradientStartColor
operator|.
name|lighter
argument_list|(
literal|105
argument_list|)
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
name|addButton
operator|.
name|setColor
argument_list|(
literal|4
argument_list|,
name|gradientStopColor
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|addButton
operator|.
name|setColor
argument_list|(
literal|5
argument_list|,
name|scrollBar
operator|->
name|palette
operator|.
name|text
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
name|addLinePainter
operator|.
name|drawImage
argument_list|(
name|pixmapRect
argument_list|,
name|addButton
argument_list|)
expr_stmt|;
comment|// Arrow
if|if
condition|(
name|horizontal
condition|)
block|{
name|QImage
name|arrow
argument_list|(
name|reverse
condition|?
name|qt_scrollbar_button_arrow_left
else|:
name|qt_scrollbar_button_arrow_right
argument_list|)
decl_stmt|;
name|arrow
operator|.
name|setColor
argument_list|(
literal|1
argument_list|,
name|scrollBar
operator|->
name|palette
operator|.
name|foreground
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
operator|(
name|scrollBar
operator|->
name|activeSubControls
operator|&
name|SC_ScrollBarAddLine
operator|)
operator|&&
name|sunken
condition|)
name|addLinePainter
operator|.
name|translate
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|addLinePainter
operator|.
name|drawImage
argument_list|(
name|QPoint
argument_list|(
name|pixmapRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|-
literal|2
argument_list|,
name|pixmapRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|-
literal|3
argument_list|)
argument_list|,
name|arrow
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QImage
name|arrow
argument_list|(
name|qt_scrollbar_button_arrow_down
argument_list|)
decl_stmt|;
name|arrow
operator|.
name|setColor
argument_list|(
literal|1
argument_list|,
name|scrollBar
operator|->
name|palette
operator|.
name|foreground
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
operator|(
name|scrollBar
operator|->
name|activeSubControls
operator|&
name|SC_ScrollBarAddLine
operator|)
operator|&&
name|sunken
condition|)
name|addLinePainter
operator|.
name|translate
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|addLinePainter
operator|.
name|drawImage
argument_list|(
name|QPoint
argument_list|(
name|pixmapRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|-
literal|3
argument_list|,
name|pixmapRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|-
literal|2
argument_list|)
argument_list|,
name|arrow
argument_list|)
expr_stmt|;
block|}
name|addLinePainter
operator|.
name|end
argument_list|()
expr_stmt|;
name|QPixmapCache
operator|::
name|insert
argument_list|(
name|addLinePixmapName
argument_list|,
name|cache
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|drawPixmap
argument_list|(
name|option
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|cache
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|CE_ScrollBarSubPage
case|:
case|case
name|CE_ScrollBarAddPage
case|:
if|if
condition|(
specifier|const
name|QStyleOptionSlider
modifier|*
name|scrollBar
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSlider
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|bool
name|sunken
init|=
name|scrollBar
operator|->
name|state
operator|&
name|State_Sunken
decl_stmt|;
name|bool
name|horizontal
init|=
name|scrollBar
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
decl_stmt|;
name|QString
name|groovePixmapName
init|=
name|QStyleHelper
operator|::
name|uniqueName
argument_list|(
name|QLatin1String
argument_list|(
literal|"scrollbar_groove"
argument_list|)
argument_list|,
name|option
argument_list|,
name|option
operator|->
name|rect
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|sunken
condition|)
name|groovePixmapName
operator|+=
name|QLatin1String
argument_list|(
literal|"-sunken"
argument_list|)
expr_stmt|;
if|if
condition|(
name|element
operator|==
name|CE_ScrollBarAddPage
condition|)
name|groovePixmapName
operator|+=
name|QLatin1String
argument_list|(
literal|"-addpage"
argument_list|)
expr_stmt|;
name|QPixmap
name|cache
decl_stmt|;
if|if
condition|(
operator|!
name|QPixmapCache
operator|::
name|find
argument_list|(
name|groovePixmapName
argument_list|,
name|cache
argument_list|)
condition|)
block|{
name|cache
operator|=
name|QPixmap
argument_list|(
name|option
operator|->
name|rect
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|cache
operator|.
name|fill
argument_list|(
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|QPainter
name|groovePainter
argument_list|(
operator|&
name|cache
argument_list|)
decl_stmt|;
name|QRect
name|pixmapRect
init|=
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|option
operator|->
name|rect
operator|.
name|width
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|height
argument_list|()
argument_list|)
decl_stmt|;
name|QColor
name|color
init|=
name|scrollBar
operator|->
name|palette
operator|.
name|base
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
name|sunken
condition|?
literal|125
else|:
literal|100
argument_list|)
decl_stmt|;
name|groovePainter
operator|.
name|setBrushOrigin
argument_list|(
operator|(
name|element
operator|==
name|CE_ScrollBarAddPage
operator|)
condition|?
name|pixmapRect
operator|.
name|width
argument_list|()
else|:
literal|0
argument_list|,
operator|(
name|element
operator|==
name|CE_ScrollBarAddPage
operator|)
condition|?
name|pixmapRect
operator|.
name|height
argument_list|()
else|:
literal|0
argument_list|)
expr_stmt|;
name|groovePainter
operator|.
name|fillRect
argument_list|(
name|pixmapRect
argument_list|,
name|QBrush
argument_list|(
name|color
argument_list|,
name|Qt
operator|::
name|Dense4Pattern
argument_list|)
argument_list|)
expr_stmt|;
name|QColor
name|edgeColor
init|=
name|scrollBar
operator|->
name|palette
operator|.
name|base
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|125
argument_list|)
decl_stmt|;
if|if
condition|(
name|horizontal
condition|)
block|{
name|groovePainter
operator|.
name|setBrushOrigin
argument_list|(
operator|(
name|element
operator|==
name|CE_ScrollBarAddPage
operator|)
condition|?
name|pixmapRect
operator|.
name|width
argument_list|()
else|:
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|groovePainter
operator|.
name|fillRect
argument_list|(
name|QRect
argument_list|(
name|pixmapRect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|QSize
argument_list|(
name|pixmapRect
operator|.
name|width
argument_list|()
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|,
name|QBrush
argument_list|(
name|edgeColor
argument_list|,
name|Qt
operator|::
name|Dense4Pattern
argument_list|)
argument_list|)
expr_stmt|;
name|groovePainter
operator|.
name|fillRect
argument_list|(
name|QRect
argument_list|(
name|pixmapRect
operator|.
name|bottomLeft
argument_list|()
argument_list|,
name|QSize
argument_list|(
name|pixmapRect
operator|.
name|width
argument_list|()
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|,
name|QBrush
argument_list|(
name|edgeColor
argument_list|,
name|Qt
operator|::
name|Dense4Pattern
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|groovePainter
operator|.
name|setBrushOrigin
argument_list|(
literal|0
argument_list|,
operator|(
name|element
operator|==
name|CE_ScrollBarAddPage
operator|)
condition|?
name|pixmapRect
operator|.
name|height
argument_list|()
else|:
literal|1
argument_list|)
expr_stmt|;
name|groovePainter
operator|.
name|fillRect
argument_list|(
name|QRect
argument_list|(
name|pixmapRect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|QSize
argument_list|(
literal|1
argument_list|,
name|pixmapRect
operator|.
name|height
argument_list|()
argument_list|)
argument_list|)
argument_list|,
name|QBrush
argument_list|(
name|edgeColor
argument_list|,
name|Qt
operator|::
name|Dense4Pattern
argument_list|)
argument_list|)
expr_stmt|;
name|groovePainter
operator|.
name|fillRect
argument_list|(
name|QRect
argument_list|(
name|pixmapRect
operator|.
name|topRight
argument_list|()
argument_list|,
name|QSize
argument_list|(
literal|1
argument_list|,
name|pixmapRect
operator|.
name|height
argument_list|()
argument_list|)
argument_list|)
argument_list|,
name|QBrush
argument_list|(
name|edgeColor
argument_list|,
name|Qt
operator|::
name|Dense4Pattern
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|groovePainter
operator|.
name|end
argument_list|()
expr_stmt|;
name|QPixmapCache
operator|::
name|insert
argument_list|(
name|groovePixmapName
argument_list|,
name|cache
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|drawPixmap
argument_list|(
name|option
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|cache
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|CE_ScrollBarSubLine
case|:
if|if
condition|(
specifier|const
name|QStyleOptionSlider
modifier|*
name|scrollBar
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSlider
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|QRect
name|scrollBarSubLine
init|=
name|scrollBar
operator|->
name|rect
decl_stmt|;
name|bool
name|horizontal
init|=
name|scrollBar
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
decl_stmt|;
name|bool
name|isEnabled
init|=
name|scrollBar
operator|->
name|state
operator|&
name|State_Enabled
decl_stmt|;
name|bool
name|reverse
init|=
name|scrollBar
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
decl_stmt|;
name|bool
name|sunken
init|=
name|scrollBar
operator|->
name|state
operator|&
name|State_Sunken
decl_stmt|;
comment|// The SubLine (up/left) buttons
name|QRect
name|button1
decl_stmt|;
name|QRect
name|button2
decl_stmt|;
name|int
name|scrollBarExtent
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_ScrollBarExtent
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
decl_stmt|;
if|if
condition|(
name|horizontal
condition|)
block|{
name|button1
operator|.
name|setRect
argument_list|(
name|scrollBarSubLine
operator|.
name|left
argument_list|()
argument_list|,
name|scrollBarSubLine
operator|.
name|top
argument_list|()
argument_list|,
name|scrollBarExtent
argument_list|,
name|scrollBarSubLine
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
name|button2
operator|.
name|setRect
argument_list|(
name|scrollBarSubLine
operator|.
name|right
argument_list|()
operator|-
operator|(
name|scrollBarExtent
operator|-
literal|1
operator|)
argument_list|,
name|scrollBarSubLine
operator|.
name|top
argument_list|()
argument_list|,
name|scrollBarExtent
argument_list|,
name|scrollBarSubLine
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|button1
operator|.
name|setRect
argument_list|(
name|scrollBarSubLine
operator|.
name|left
argument_list|()
argument_list|,
name|scrollBarSubLine
operator|.
name|top
argument_list|()
argument_list|,
name|scrollBarSubLine
operator|.
name|width
argument_list|()
argument_list|,
name|scrollBarExtent
argument_list|)
expr_stmt|;
name|button2
operator|.
name|setRect
argument_list|(
name|scrollBarSubLine
operator|.
name|left
argument_list|()
argument_list|,
name|scrollBarSubLine
operator|.
name|bottom
argument_list|()
operator|-
operator|(
name|scrollBarExtent
operator|-
literal|1
operator|)
argument_list|,
name|scrollBarSubLine
operator|.
name|width
argument_list|()
argument_list|,
name|scrollBarExtent
argument_list|)
expr_stmt|;
block|}
name|QString
name|subLinePixmapName
init|=
name|QStyleHelper
operator|::
name|uniqueName
argument_list|(
name|QLatin1String
argument_list|(
literal|"scrollbar_subline"
argument_list|)
argument_list|,
name|option
argument_list|,
name|button1
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
name|QPixmap
name|cache
decl_stmt|;
if|if
condition|(
operator|!
name|QPixmapCache
operator|::
name|find
argument_list|(
name|subLinePixmapName
argument_list|,
name|cache
argument_list|)
condition|)
block|{
name|cache
operator|=
name|QPixmap
argument_list|(
name|button1
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|cache
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|QRect
name|pixmapRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|cache
operator|.
name|width
argument_list|()
argument_list|,
name|cache
operator|.
name|height
argument_list|()
argument_list|)
decl_stmt|;
name|QPainter
name|subLinePainter
argument_list|(
operator|&
name|cache
argument_list|)
decl_stmt|;
name|subLinePainter
operator|.
name|fillRect
argument_list|(
name|pixmapRect
argument_list|,
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|isEnabled
condition|)
block|{
comment|// Gradients
if|if
condition|(
operator|(
name|scrollBar
operator|->
name|activeSubControls
operator|&
name|SC_ScrollBarSubLine
operator|)
operator|&&
name|sunken
condition|)
block|{
name|qt_plastique_draw_gradient
argument_list|(
operator|&
name|subLinePainter
argument_list|,
name|QRect
argument_list|(
name|pixmapRect
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|pixmapRect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|,
name|pixmapRect
operator|.
name|right
argument_list|()
operator|-
literal|3
argument_list|,
name|pixmapRect
operator|.
name|bottom
argument_list|()
operator|-
literal|3
argument_list|)
argument_list|,
name|gradientStopColor
argument_list|,
name|gradientStopColor
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|qt_plastique_draw_gradient
argument_list|(
operator|&
name|subLinePainter
argument_list|,
name|QRect
argument_list|(
name|pixmapRect
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|pixmapRect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|,
name|pixmapRect
operator|.
name|right
argument_list|()
operator|-
literal|3
argument_list|,
name|pixmapRect
operator|.
name|bottom
argument_list|()
operator|-
literal|3
argument_list|)
argument_list|,
name|gradientStartColor
operator|.
name|lighter
argument_list|(
literal|105
argument_list|)
argument_list|,
name|gradientStopColor
argument_list|)
expr_stmt|;
block|}
block|}
comment|// Details
name|QImage
name|subButton
decl_stmt|;
if|if
condition|(
name|horizontal
condition|)
block|{
name|subButton
operator|=
name|QImage
argument_list|(
name|reverse
condition|?
name|qt_scrollbar_button_right
else|:
name|qt_scrollbar_button_left
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|subButton
operator|=
name|QImage
argument_list|(
name|qt_scrollbar_button_up
argument_list|)
expr_stmt|;
block|}
name|subButton
operator|.
name|setColor
argument_list|(
literal|1
argument_list|,
name|alphaCornerColor
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
name|subButton
operator|.
name|setColor
argument_list|(
literal|2
argument_list|,
name|borderColor
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
operator|(
name|scrollBar
operator|->
name|activeSubControls
operator|&
name|SC_ScrollBarSubLine
operator|)
operator|&&
name|sunken
condition|)
block|{
name|subButton
operator|.
name|setColor
argument_list|(
literal|3
argument_list|,
name|gradientStopColor
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
name|subButton
operator|.
name|setColor
argument_list|(
literal|4
argument_list|,
name|gradientStopColor
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|subButton
operator|.
name|setColor
argument_list|(
literal|3
argument_list|,
name|gradientStartColor
operator|.
name|lighter
argument_list|(
literal|105
argument_list|)
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
name|subButton
operator|.
name|setColor
argument_list|(
literal|4
argument_list|,
name|gradientStopColor
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|subButton
operator|.
name|setColor
argument_list|(
literal|5
argument_list|,
name|scrollBar
operator|->
name|palette
operator|.
name|text
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
name|subLinePainter
operator|.
name|drawImage
argument_list|(
name|pixmapRect
argument_list|,
name|subButton
argument_list|)
expr_stmt|;
comment|// Arrows
if|if
condition|(
name|horizontal
condition|)
block|{
name|QImage
name|arrow
argument_list|(
name|reverse
condition|?
name|qt_scrollbar_button_arrow_right
else|:
name|qt_scrollbar_button_arrow_left
argument_list|)
decl_stmt|;
name|arrow
operator|.
name|setColor
argument_list|(
literal|1
argument_list|,
name|scrollBar
operator|->
name|palette
operator|.
name|foreground
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
operator|(
name|scrollBar
operator|->
name|activeSubControls
operator|&
name|SC_ScrollBarSubLine
operator|)
operator|&&
name|sunken
condition|)
name|subLinePainter
operator|.
name|translate
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|subLinePainter
operator|.
name|drawImage
argument_list|(
name|QPoint
argument_list|(
name|pixmapRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|-
literal|2
argument_list|,
name|pixmapRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|-
literal|3
argument_list|)
argument_list|,
name|arrow
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QImage
name|arrow
argument_list|(
name|qt_scrollbar_button_arrow_up
argument_list|)
decl_stmt|;
name|arrow
operator|.
name|setColor
argument_list|(
literal|1
argument_list|,
name|scrollBar
operator|->
name|palette
operator|.
name|foreground
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
operator|(
name|scrollBar
operator|->
name|activeSubControls
operator|&
name|SC_ScrollBarSubLine
operator|)
operator|&&
name|sunken
condition|)
name|subLinePainter
operator|.
name|translate
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|subLinePainter
operator|.
name|drawImage
argument_list|(
name|QPoint
argument_list|(
name|pixmapRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|-
literal|3
argument_list|,
name|pixmapRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|-
literal|2
argument_list|)
argument_list|,
name|arrow
argument_list|)
expr_stmt|;
block|}
name|subLinePainter
operator|.
name|end
argument_list|()
expr_stmt|;
name|QPixmapCache
operator|::
name|insert
argument_list|(
name|subLinePixmapName
argument_list|,
name|cache
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|drawPixmap
argument_list|(
name|button1
operator|.
name|topLeft
argument_list|()
argument_list|,
name|cache
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPixmap
argument_list|(
name|button2
operator|.
name|topLeft
argument_list|()
argument_list|,
name|cache
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|CE_ScrollBarSlider
case|:
if|if
condition|(
specifier|const
name|QStyleOptionSlider
modifier|*
name|scrollBar
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSlider
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|bool
name|horizontal
init|=
name|scrollBar
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
decl_stmt|;
name|bool
name|isEnabled
init|=
name|scrollBar
operator|->
name|state
operator|&
name|State_Enabled
decl_stmt|;
comment|// The slider
if|if
condition|(
name|option
operator|->
name|rect
operator|.
name|isValid
argument_list|()
condition|)
block|{
name|QString
name|sliderPixmapName
init|=
name|QStyleHelper
operator|::
name|uniqueName
argument_list|(
name|QLatin1String
argument_list|(
literal|"scrollbar_slider"
argument_list|)
argument_list|,
name|option
argument_list|,
name|option
operator|->
name|rect
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|horizontal
condition|)
name|sliderPixmapName
operator|+=
name|QLatin1String
argument_list|(
literal|"-horizontal"
argument_list|)
expr_stmt|;
name|QPixmap
name|cache
decl_stmt|;
if|if
condition|(
operator|!
name|QPixmapCache
operator|::
name|find
argument_list|(
name|sliderPixmapName
argument_list|,
name|cache
argument_list|)
condition|)
block|{
name|cache
operator|=
name|QPixmap
argument_list|(
name|option
operator|->
name|rect
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|cache
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|QRect
name|pixmapRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|cache
operator|.
name|width
argument_list|()
argument_list|,
name|cache
operator|.
name|height
argument_list|()
argument_list|)
decl_stmt|;
name|QPainter
name|sliderPainter
argument_list|(
operator|&
name|cache
argument_list|)
decl_stmt|;
name|bool
name|sunken
init|=
operator|(
name|scrollBar
operator|->
name|state
operator|&
name|State_Sunken
operator|)
decl_stmt|;
if|if
condition|(
name|isEnabled
condition|)
block|{
name|QLinearGradient
name|gradient
argument_list|(
name|pixmapRect
operator|.
name|left
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|right
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|horizontal
condition|)
name|gradient
operator|=
name|QLinearGradient
argument_list|(
name|pixmapRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|top
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|sunken
condition|)
block|{
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|gradientStartColor
operator|.
name|lighter
argument_list|(
literal|110
argument_list|)
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|1
argument_list|,
name|gradientStopColor
operator|.
name|lighter
argument_list|(
literal|105
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|gradientStartColor
operator|.
name|lighter
argument_list|(
literal|105
argument_list|)
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|1
argument_list|,
name|gradientStopColor
argument_list|)
expr_stmt|;
block|}
name|sliderPainter
operator|.
name|fillRect
argument_list|(
name|pixmapRect
operator|.
name|adjusted
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
operator|-
literal|2
argument_list|,
operator|-
literal|2
argument_list|)
argument_list|,
name|gradient
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|sliderPainter
operator|.
name|fillRect
argument_list|(
name|pixmapRect
operator|.
name|adjusted
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
operator|-
literal|2
argument_list|,
operator|-
literal|2
argument_list|)
argument_list|,
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|sliderPainter
operator|.
name|setPen
argument_list|(
name|borderColor
argument_list|)
expr_stmt|;
name|sliderPainter
operator|.
name|drawRect
argument_list|(
name|pixmapRect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|sliderPainter
operator|.
name|setPen
argument_list|(
name|alphaCornerColor
argument_list|)
expr_stmt|;
name|QPoint
name|points
index|[
literal|4
index|]
init|=
block|{
name|QPoint
argument_list|(
name|pixmapRect
operator|.
name|left
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|top
argument_list|()
argument_list|)
block|,
name|QPoint
argument_list|(
name|pixmapRect
operator|.
name|left
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|bottom
argument_list|()
argument_list|)
block|,
name|QPoint
argument_list|(
name|pixmapRect
operator|.
name|right
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|top
argument_list|()
argument_list|)
block|,
name|QPoint
argument_list|(
argument|pixmapRect.right()
argument_list|,
argument|pixmapRect.bottom()
argument_list|)
block|}
decl_stmt|;
name|sliderPainter
operator|.
name|drawPoints
argument_list|(
name|points
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QLine
name|lines
index|[
literal|2
index|]
decl_stmt|;
name|sliderPainter
operator|.
name|setPen
argument_list|(
name|sunken
condition|?
name|gradientStartColor
operator|.
name|lighter
argument_list|(
literal|110
argument_list|)
else|:
name|gradientStartColor
operator|.
name|lighter
argument_list|(
literal|105
argument_list|)
argument_list|)
expr_stmt|;
name|lines
index|[
literal|0
index|]
operator|=
name|QLine
argument_list|(
name|pixmapRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|pixmapRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|pixmapRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|pixmapRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
name|lines
index|[
literal|1
index|]
operator|=
name|QLine
argument_list|(
name|pixmapRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|pixmapRect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|,
name|pixmapRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|pixmapRect
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
expr_stmt|;
name|sliderPainter
operator|.
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|sliderPainter
operator|.
name|setPen
argument_list|(
name|sunken
condition|?
name|gradientStopColor
operator|.
name|lighter
argument_list|(
literal|105
argument_list|)
else|:
name|gradientStopColor
argument_list|)
expr_stmt|;
name|lines
index|[
literal|0
index|]
operator|=
name|QLine
argument_list|(
name|pixmapRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|pixmapRect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|,
name|pixmapRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|pixmapRect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|lines
index|[
literal|1
index|]
operator|=
name|QLine
argument_list|(
name|pixmapRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|pixmapRect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|,
name|pixmapRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|pixmapRect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|sliderPainter
operator|.
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|int
name|sliderMinLength
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_ScrollBarSliderMin
argument_list|,
name|scrollBar
argument_list|,
name|widget
argument_list|)
decl_stmt|;
if|if
condition|(
operator|(
name|horizontal
operator|&&
name|scrollBar
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|>
name|sliderMinLength
operator|)
operator|||
operator|(
operator|!
name|horizontal
operator|&&
name|scrollBar
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|>
name|sliderMinLength
operator|)
condition|)
block|{
name|QImage
name|pattern
argument_list|(
name|horizontal
condition|?
name|qt_scrollbar_slider_pattern_horizontal
else|:
name|qt_scrollbar_slider_pattern_vertical
argument_list|)
decl_stmt|;
name|pattern
operator|.
name|setColor
argument_list|(
literal|1
argument_list|,
name|alphaCornerColor
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
name|pattern
operator|.
name|setColor
argument_list|(
literal|2
argument_list|,
operator|(
name|sunken
condition|?
name|gradientStartColor
operator|.
name|lighter
argument_list|(
literal|110
argument_list|)
else|:
name|gradientStartColor
operator|.
name|lighter
argument_list|(
literal|105
argument_list|)
operator|)
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|horizontal
condition|)
block|{
name|sliderPainter
operator|.
name|drawImage
argument_list|(
name|pixmapRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|-
name|pattern
operator|.
name|width
argument_list|()
operator|/
literal|2
operator|+
literal|1
argument_list|,
name|pixmapRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|-
literal|4
argument_list|,
name|pattern
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|sliderPainter
operator|.
name|drawImage
argument_list|(
name|pixmapRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|-
literal|4
argument_list|,
name|pixmapRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|-
name|pattern
operator|.
name|height
argument_list|()
operator|/
literal|2
operator|+
literal|1
argument_list|,
name|pattern
argument_list|)
expr_stmt|;
block|}
block|}
name|sliderPainter
operator|.
name|end
argument_list|()
expr_stmt|;
comment|// insert the slider into the cache
name|QPixmapCache
operator|::
name|insert
argument_list|(
name|sliderPixmapName
argument_list|,
name|cache
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|drawPixmap
argument_list|(
name|option
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|cache
argument_list|)
expr_stmt|;
block|}
block|}
break|break;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|QT_NO_COMBOBOX
case|case
name|CE_ComboBoxLabel
case|:
if|if
condition|(
specifier|const
name|QStyleOptionComboBox
modifier|*
name|comboBox
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionComboBox
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
if|if
condition|(
operator|!
name|comboBox
operator|->
name|editable
condition|)
block|{
comment|// Plastique's non-editable combo box is drawn as a button, so
comment|// we need the label to be drawn using ButtonText where it
comment|// would usually use Text.
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|comboBox
operator|->
name|palette
operator|.
name|buttonText
argument_list|()
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QWindowsStyle
operator|::
name|drawControl
argument_list|(
name|element
argument_list|,
name|option
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
operator|!
name|comboBox
operator|->
name|currentIcon
operator|.
name|isNull
argument_list|()
condition|)
block|{
block|{
name|QRect
name|editRect
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_ComboBox
argument_list|,
name|comboBox
argument_list|,
name|SC_ComboBoxEditField
argument_list|,
name|widget
argument_list|)
decl_stmt|;
if|if
condition|(
name|comboBox
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
condition|)
name|editRect
operator|.
name|adjust
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|,
operator|-
literal|2
argument_list|,
operator|-
literal|2
argument_list|)
expr_stmt|;
else|else
name|editRect
operator|.
name|adjust
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|,
operator|-
literal|2
argument_list|)
expr_stmt|;
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
name|painter
operator|->
name|setClipRect
argument_list|(
name|editRect
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|comboBox
operator|->
name|currentIcon
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|QIcon
operator|::
name|Mode
name|mode
init|=
name|comboBox
operator|->
name|state
operator|&
name|State_Enabled
condition|?
name|QIcon
operator|::
name|Normal
else|:
name|QIcon
operator|::
name|Disabled
decl_stmt|;
name|QPixmap
name|pixmap
init|=
name|comboBox
operator|->
name|currentIcon
operator|.
name|pixmap
argument_list|(
name|comboBox
operator|->
name|iconSize
argument_list|,
name|mode
argument_list|)
decl_stmt|;
name|QRect
name|iconRect
argument_list|(
name|editRect
argument_list|)
decl_stmt|;
name|iconRect
operator|.
name|setWidth
argument_list|(
name|comboBox
operator|->
name|iconSize
operator|.
name|width
argument_list|()
operator|+
literal|5
argument_list|)
expr_stmt|;
name|iconRect
operator|=
name|alignedRect
argument_list|(
name|comboBox
operator|->
name|direction
argument_list|,
name|Qt
operator|::
name|AlignLeft
operator||
name|Qt
operator|::
name|AlignVCenter
argument_list|,
name|iconRect
operator|.
name|size
argument_list|()
argument_list|,
name|editRect
argument_list|)
expr_stmt|;
name|painter
operator|->
name|fillRect
argument_list|(
name|iconRect
argument_list|,
name|option
operator|->
name|palette
operator|.
name|brush
argument_list|(
name|QPalette
operator|::
name|Base
argument_list|)
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawItemPixmap
argument_list|(
name|painter
argument_list|,
name|iconRect
argument_list|,
name|Qt
operator|::
name|AlignCenter
argument_list|,
name|pixmap
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
name|QWindowsStyle
operator|::
name|drawControl
argument_list|(
name|element
argument_list|,
name|option
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
break|break;
endif|#
directive|endif
default|default:
name|QWindowsStyle
operator|::
name|drawControl
argument_list|(
name|element
argument_list|,
name|option
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
end_function
begin_comment
comment|/*!   \reimp */
end_comment
begin_function
DECL|function|drawComplexControl
name|void
name|QPlastiqueStyle
operator|::
name|drawComplexControl
parameter_list|(
name|ComplexControl
name|control
parameter_list|,
specifier|const
name|QStyleOptionComplex
modifier|*
name|option
parameter_list|,
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
name|QColor
name|borderColor
init|=
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|178
argument_list|)
decl_stmt|;
name|QColor
name|alphaCornerColor
decl_stmt|;
if|if
condition|(
name|widget
condition|)
block|{
comment|// ### backgroundrole/foregroundrole should be part of the style option
name|alphaCornerColor
operator|=
name|mergedColors
argument_list|(
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|widget
operator|->
name|backgroundRole
argument_list|()
argument_list|)
argument_list|,
name|borderColor
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|alphaCornerColor
operator|=
name|mergedColors
argument_list|(
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
name|borderColor
argument_list|)
expr_stmt|;
block|}
name|QColor
name|gradientStartColor
init|=
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|104
argument_list|)
decl_stmt|;
name|QColor
name|gradientStopColor
init|=
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|105
argument_list|)
decl_stmt|;
switch|switch
condition|(
name|control
condition|)
block|{
ifndef|#
directive|ifndef
name|QT_NO_SLIDER
case|case
name|CC_Slider
case|:
if|if
condition|(
specifier|const
name|QStyleOptionSlider
modifier|*
name|slider
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSlider
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|QRect
name|grooveRegion
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_Slider
argument_list|,
name|option
argument_list|,
name|SC_SliderGroove
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|QRect
name|handle
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_Slider
argument_list|,
name|option
argument_list|,
name|SC_SliderHandle
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|bool
name|horizontal
init|=
name|slider
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
decl_stmt|;
name|bool
name|ticksAbove
init|=
name|slider
operator|->
name|tickPosition
operator|&
name|QSlider
operator|::
name|TicksAbove
decl_stmt|;
name|bool
name|ticksBelow
init|=
name|slider
operator|->
name|tickPosition
operator|&
name|QSlider
operator|::
name|TicksBelow
decl_stmt|;
name|QRect
name|groove
decl_stmt|;
comment|//The clickable region is 5 px wider than the visible groove for improved usability
if|if
condition|(
name|grooveRegion
operator|.
name|isValid
argument_list|()
condition|)
name|groove
operator|=
name|horizontal
condition|?
name|grooveRegion
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|5
argument_list|,
literal|0
argument_list|,
operator|-
literal|5
argument_list|)
else|:
name|grooveRegion
operator|.
name|adjusted
argument_list|(
literal|5
argument_list|,
literal|0
argument_list|,
operator|-
literal|5
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QPixmap
name|cache
decl_stmt|;
if|if
condition|(
operator|(
name|option
operator|->
name|subControls
operator|&
name|SC_SliderGroove
operator|)
operator|&&
name|groove
operator|.
name|isValid
argument_list|()
condition|)
block|{
name|BEGIN_STYLE_PIXMAPCACHE
argument_list|(
argument|QString::fromLatin1(
literal|"slider_groove-%0-%1"
argument|).arg(ticksAbove).arg(ticksBelow)
argument_list|)
name|p
operator|->
name|fillRect
argument_list|(
name|groove
argument_list|,
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
argument_list|)
expr_stmt|;
name|rect
operator|=
name|groove
expr_stmt|;
name|rect
operator|.
name|moveTo
argument_list|(
name|groove
operator|.
name|left
argument_list|()
operator|-
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|groove
operator|.
name|top
argument_list|()
operator|-
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
argument_list|)
expr_stmt|;
comment|// draw groove
if|if
condition|(
name|horizontal
condition|)
block|{
name|p
operator|->
name|setPen
argument_list|(
name|borderColor
argument_list|)
expr_stmt|;
specifier|const
name|QLine
name|lines
index|[
literal|4
index|]
init|=
block|{
name|QLine
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|)
block|,
name|QLine
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
argument_list|,
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
block|,
name|QLine
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
block|,
name|QLine
argument_list|(
argument|rect.right()
argument_list|,
argument|rect.top() +
literal|1
argument_list|,
argument|rect.right()
argument_list|,
argument|rect.bottom() -
literal|1
argument_list|)
block|}
decl_stmt|;
name|p
operator|->
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|alphaCornerColor
argument_list|)
expr_stmt|;
specifier|const
name|QPoint
name|points
index|[
literal|4
index|]
init|=
block|{
name|QPoint
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|)
block|,
name|QPoint
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
block|,
name|QPoint
argument_list|(
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|)
block|,
name|QPoint
argument_list|(
argument|rect.right()
argument_list|,
argument|rect.bottom()
argument_list|)
block|}
decl_stmt|;
name|p
operator|->
name|drawPoints
argument_list|(
name|points
argument_list|,
literal|4
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|p
operator|->
name|setPen
argument_list|(
name|borderColor
argument_list|)
expr_stmt|;
specifier|const
name|QLine
name|lines
index|[
literal|4
index|]
init|=
block|{
name|QLine
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|)
block|,
name|QLine
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
argument_list|,
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
block|,
name|QLine
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
block|,
name|QLine
argument_list|(
argument|rect.right()
argument_list|,
argument|rect.top() +
literal|1
argument_list|,
argument|rect.right()
argument_list|,
argument|rect.bottom() -
literal|1
argument_list|)
block|}
decl_stmt|;
name|p
operator|->
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|alphaCornerColor
argument_list|)
expr_stmt|;
specifier|const
name|QPoint
name|points
index|[
literal|4
index|]
init|=
block|{
name|QPoint
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|)
block|,
name|QPoint
argument_list|(
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|)
block|,
name|QPoint
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
block|,
name|QPoint
argument_list|(
argument|rect.right()
argument_list|,
argument|rect.bottom()
argument_list|)
block|}
decl_stmt|;
name|p
operator|->
name|drawPoints
argument_list|(
name|points
argument_list|,
literal|4
argument_list|)
expr_stmt|;
block|}
name|END_STYLE_PIXMAPCACHE
block|}
if|if
condition|(
operator|(
name|option
operator|->
name|subControls
operator|&
name|SC_SliderHandle
operator|)
operator|&&
name|handle
operator|.
name|isValid
argument_list|()
condition|)
block|{
name|QString
name|handlePixmapName
init|=
name|QStyleHelper
operator|::
name|uniqueName
argument_list|(
name|QLatin1String
argument_list|(
literal|"slider_handle"
argument_list|)
argument_list|,
name|option
argument_list|,
name|handle
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|ticksAbove
operator|&&
operator|!
name|ticksBelow
condition|)
name|handlePixmapName
operator|+=
name|QLatin1String
argument_list|(
literal|"-flipped"
argument_list|)
expr_stmt|;
if|if
condition|(
operator|(
name|option
operator|->
name|activeSubControls
operator|&
name|SC_SliderHandle
operator|)
operator|&&
operator|(
name|option
operator|->
name|state
operator|&
name|State_Sunken
operator|)
condition|)
name|handlePixmapName
operator|+=
name|QLatin1String
argument_list|(
literal|"-sunken"
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|QPixmapCache
operator|::
name|find
argument_list|(
name|handlePixmapName
argument_list|,
name|cache
argument_list|)
condition|)
block|{
name|cache
operator|=
name|QPixmap
argument_list|(
name|handle
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|cache
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|transparent
argument_list|)
expr_stmt|;
name|QRect
name|pixmapRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|handle
operator|.
name|width
argument_list|()
argument_list|,
name|handle
operator|.
name|height
argument_list|()
argument_list|)
decl_stmt|;
name|QPainter
name|handlePainter
argument_list|(
operator|&
name|cache
argument_list|)
decl_stmt|;
comment|// draw handle
if|if
condition|(
name|horizontal
condition|)
block|{
name|QPainterPath
name|path
decl_stmt|;
if|if
condition|(
name|ticksAbove
operator|&&
operator|!
name|ticksBelow
condition|)
block|{
name|path
operator|.
name|moveTo
argument_list|(
name|QPoint
argument_list|(
name|pixmapRect
operator|.
name|right
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPoint
argument_list|(
name|pixmapRect
operator|.
name|right
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|bottom
argument_list|()
operator|-
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPoint
argument_list|(
name|pixmapRect
operator|.
name|right
argument_list|()
operator|-
literal|5
argument_list|,
name|pixmapRect
operator|.
name|bottom
argument_list|()
operator|-
literal|14
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPoint
argument_list|(
name|pixmapRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|pixmapRect
operator|.
name|bottom
argument_list|()
operator|-
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPoint
argument_list|(
name|pixmapRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|pixmapRect
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPoint
argument_list|(
name|pixmapRect
operator|.
name|right
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|path
operator|.
name|moveTo
argument_list|(
name|QPoint
argument_list|(
name|pixmapRect
operator|.
name|right
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPoint
argument_list|(
name|pixmapRect
operator|.
name|right
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|top
argument_list|()
operator|+
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPoint
argument_list|(
name|pixmapRect
operator|.
name|right
argument_list|()
operator|-
literal|5
argument_list|,
name|pixmapRect
operator|.
name|top
argument_list|()
operator|+
literal|14
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPoint
argument_list|(
name|pixmapRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|pixmapRect
operator|.
name|top
argument_list|()
operator|+
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPoint
argument_list|(
name|pixmapRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|pixmapRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPoint
argument_list|(
name|pixmapRect
operator|.
name|right
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|slider
operator|->
name|state
operator|&
name|State_Enabled
condition|)
block|{
name|QLinearGradient
name|gradient
argument_list|(
name|pixmapRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|top
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|bottom
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
operator|(
name|option
operator|->
name|activeSubControls
operator|&
name|SC_SliderHandle
operator|)
operator|&&
operator|(
name|option
operator|->
name|state
operator|&
name|State_Sunken
operator|)
condition|)
block|{
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|gradientStartColor
operator|.
name|lighter
argument_list|(
literal|110
argument_list|)
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|1
argument_list|,
name|gradientStopColor
operator|.
name|lighter
argument_list|(
literal|110
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|gradientStartColor
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|1
argument_list|,
name|gradientStopColor
argument_list|)
expr_stmt|;
block|}
name|handlePainter
operator|.
name|fillPath
argument_list|(
name|path
argument_list|,
name|gradient
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|handlePainter
operator|.
name|fillPath
argument_list|(
name|path
argument_list|,
name|slider
operator|->
name|palette
operator|.
name|background
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|QPainterPath
name|path
decl_stmt|;
if|if
condition|(
name|ticksAbove
operator|&&
operator|!
name|ticksBelow
condition|)
block|{
name|path
operator|.
name|moveTo
argument_list|(
name|QPoint
argument_list|(
name|pixmapRect
operator|.
name|right
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPoint
argument_list|(
name|pixmapRect
operator|.
name|right
argument_list|()
operator|-
literal|10
argument_list|,
name|pixmapRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPoint
argument_list|(
name|pixmapRect
operator|.
name|right
argument_list|()
operator|-
literal|14
argument_list|,
name|pixmapRect
operator|.
name|top
argument_list|()
operator|+
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPoint
argument_list|(
name|pixmapRect
operator|.
name|right
argument_list|()
operator|-
literal|10
argument_list|,
name|pixmapRect
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPoint
argument_list|(
name|pixmapRect
operator|.
name|right
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPoint
argument_list|(
name|pixmapRect
operator|.
name|right
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|path
operator|.
name|moveTo
argument_list|(
name|QPoint
argument_list|(
name|pixmapRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|pixmapRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPoint
argument_list|(
name|pixmapRect
operator|.
name|left
argument_list|()
operator|+
literal|10
argument_list|,
name|pixmapRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPoint
argument_list|(
name|pixmapRect
operator|.
name|left
argument_list|()
operator|+
literal|14
argument_list|,
name|pixmapRect
operator|.
name|top
argument_list|()
operator|+
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPoint
argument_list|(
name|pixmapRect
operator|.
name|left
argument_list|()
operator|+
literal|10
argument_list|,
name|pixmapRect
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPoint
argument_list|(
name|pixmapRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|pixmapRect
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPoint
argument_list|(
name|pixmapRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|pixmapRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|slider
operator|->
name|state
operator|&
name|State_Enabled
condition|)
block|{
name|QLinearGradient
name|gradient
argument_list|(
name|pixmapRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|top
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|bottom
argument_list|()
argument_list|)
decl_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|gradientStartColor
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|1
argument_list|,
name|gradientStopColor
argument_list|)
expr_stmt|;
name|handlePainter
operator|.
name|fillPath
argument_list|(
name|path
argument_list|,
name|gradient
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|handlePainter
operator|.
name|fillPath
argument_list|(
name|path
argument_list|,
name|slider
operator|->
name|palette
operator|.
name|background
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|QImage
name|image
decl_stmt|;
if|if
condition|(
name|horizontal
condition|)
block|{
name|image
operator|=
name|QImage
argument_list|(
operator|(
name|ticksAbove
operator|&&
operator|!
name|ticksBelow
operator|)
condition|?
name|qt_plastique_slider_horizontalhandle_up
else|:
name|qt_plastique_slider_horizontalhandle
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|image
operator|=
name|QImage
argument_list|(
operator|(
name|ticksAbove
operator|&&
operator|!
name|ticksBelow
operator|)
condition|?
name|qt_plastique_slider_verticalhandle_left
else|:
name|qt_plastique_slider_verticalhandle
argument_list|)
expr_stmt|;
block|}
name|image
operator|.
name|setColor
argument_list|(
literal|1
argument_list|,
name|borderColor
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
name|image
operator|.
name|setColor
argument_list|(
literal|2
argument_list|,
name|gradientStartColor
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
name|image
operator|.
name|setColor
argument_list|(
literal|3
argument_list|,
name|alphaCornerColor
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|State_Enabled
condition|)
block|{
name|image
operator|.
name|setColor
argument_list|(
literal|4
argument_list|,
literal|0x80ffffff
argument_list|)
expr_stmt|;
name|image
operator|.
name|setColor
argument_list|(
literal|5
argument_list|,
literal|0x25000000
argument_list|)
expr_stmt|;
block|}
name|handlePainter
operator|.
name|drawImage
argument_list|(
name|pixmapRect
argument_list|,
name|image
argument_list|)
expr_stmt|;
name|handlePainter
operator|.
name|end
argument_list|()
expr_stmt|;
name|QPixmapCache
operator|::
name|insert
argument_list|(
name|handlePixmapName
argument_list|,
name|cache
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|drawPixmap
argument_list|(
name|handle
operator|.
name|topLeft
argument_list|()
argument_list|,
name|cache
argument_list|)
expr_stmt|;
if|if
condition|(
name|slider
operator|->
name|state
operator|&
name|State_HasFocus
condition|)
block|{
name|QStyleOptionFocusRect
name|fropt
decl_stmt|;
name|fropt
operator|.
name|QStyleOption
operator|::
name|operator
name|=
argument_list|(
operator|*
name|slider
argument_list|)
expr_stmt|;
name|fropt
operator|.
name|rect
operator|=
name|subElementRect
argument_list|(
name|SE_SliderFocusRect
argument_list|,
name|slider
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_FrameFocusRect
argument_list|,
operator|&
name|fropt
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|option
operator|->
name|subControls
operator|&
name|SC_SliderTickmarks
condition|)
block|{
name|QPen
name|oldPen
init|=
name|painter
operator|->
name|pen
argument_list|()
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|borderColor
argument_list|)
expr_stmt|;
name|int
name|tickSize
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_SliderTickmarkOffset
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|int
name|available
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_SliderSpaceAvailable
argument_list|,
name|slider
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|int
name|interval
init|=
name|slider
operator|->
name|tickInterval
decl_stmt|;
if|if
condition|(
name|interval
operator|<=
literal|0
condition|)
block|{
name|interval
operator|=
name|slider
operator|->
name|singleStep
expr_stmt|;
if|if
condition|(
name|QStyle
operator|::
name|sliderPositionFromValue
argument_list|(
name|slider
operator|->
name|minimum
argument_list|,
name|slider
operator|->
name|maximum
argument_list|,
name|interval
argument_list|,
name|available
argument_list|)
operator|-
name|QStyle
operator|::
name|sliderPositionFromValue
argument_list|(
name|slider
operator|->
name|minimum
argument_list|,
name|slider
operator|->
name|maximum
argument_list|,
literal|0
argument_list|,
name|available
argument_list|)
operator|<
literal|3
condition|)
name|interval
operator|=
name|slider
operator|->
name|pageStep
expr_stmt|;
block|}
if|if
condition|(
name|interval
operator|<=
literal|0
condition|)
name|interval
operator|=
literal|1
expr_stmt|;
name|int
name|v
init|=
name|slider
operator|->
name|minimum
decl_stmt|;
name|int
name|len
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_SliderLength
argument_list|,
name|slider
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|QVarLengthArray
argument_list|<
name|QLine
argument_list|,
literal|32
argument_list|>
name|lines
decl_stmt|;
while|while
condition|(
name|v
operator|<=
name|slider
operator|->
name|maximum
operator|+
literal|1
condition|)
block|{
if|if
condition|(
name|v
operator|==
name|slider
operator|->
name|maximum
operator|+
literal|1
operator|&&
name|interval
operator|==
literal|1
condition|)
break|break;
specifier|const
name|int
name|v_
init|=
name|qMin
argument_list|(
name|v
argument_list|,
name|slider
operator|->
name|maximum
argument_list|)
decl_stmt|;
name|int
name|pos
init|=
name|sliderPositionFromValue
argument_list|(
name|slider
operator|->
name|minimum
argument_list|,
name|slider
operator|->
name|maximum
argument_list|,
name|v_
argument_list|,
operator|(
name|horizontal
condition|?
name|slider
operator|->
name|rect
operator|.
name|width
argument_list|()
else|:
name|slider
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|)
operator|-
name|len
argument_list|,
name|slider
operator|->
name|upsideDown
argument_list|)
operator|+
name|len
operator|/
literal|2
decl_stmt|;
name|int
name|extra
init|=
literal|2
operator|-
operator|(
operator|(
name|v_
operator|==
name|slider
operator|->
name|minimum
operator|||
name|v_
operator|==
name|slider
operator|->
name|maximum
operator|)
condition|?
literal|1
else|:
literal|0
operator|)
decl_stmt|;
if|if
condition|(
name|horizontal
condition|)
block|{
if|if
condition|(
name|ticksAbove
condition|)
block|{
name|lines
operator|.
name|append
argument_list|(
name|QLine
argument_list|(
name|pos
argument_list|,
name|slider
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
name|extra
argument_list|,
name|pos
argument_list|,
name|slider
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
name|tickSize
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|ticksBelow
condition|)
block|{
name|lines
operator|.
name|append
argument_list|(
name|QLine
argument_list|(
name|pos
argument_list|,
name|slider
operator|->
name|rect
operator|.
name|bottom
argument_list|()
operator|-
name|extra
argument_list|,
name|pos
argument_list|,
name|slider
operator|->
name|rect
operator|.
name|bottom
argument_list|()
operator|-
name|tickSize
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
name|ticksAbove
condition|)
block|{
name|lines
operator|.
name|append
argument_list|(
name|QLine
argument_list|(
name|slider
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
name|extra
argument_list|,
name|pos
argument_list|,
name|slider
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
name|tickSize
argument_list|,
name|pos
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|ticksBelow
condition|)
block|{
name|lines
operator|.
name|append
argument_list|(
name|QLine
argument_list|(
name|slider
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
name|extra
argument_list|,
name|pos
argument_list|,
name|slider
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
name|tickSize
argument_list|,
name|pos
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
comment|// in the case where maximum is max int
name|int
name|nextInterval
init|=
name|v
operator|+
name|interval
decl_stmt|;
if|if
condition|(
name|nextInterval
operator|<
name|v
condition|)
break|break;
name|v
operator|=
name|nextInterval
expr_stmt|;
block|}
name|painter
operator|->
name|drawLines
argument_list|(
name|lines
operator|.
name|constData
argument_list|()
argument_list|,
name|lines
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|oldPen
argument_list|)
expr_stmt|;
block|}
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_SLIDER
ifndef|#
directive|ifndef
name|QT_NO_SPINBOX
case|case
name|CC_SpinBox
case|:
if|if
condition|(
specifier|const
name|QStyleOptionSpinBox
modifier|*
name|spinBox
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSpinBox
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
name|bool
name|upSunken
init|=
operator|(
name|spinBox
operator|->
name|activeSubControls
operator|&
name|SC_SpinBoxUp
operator|)
operator|&&
operator|(
name|spinBox
operator|->
name|state
operator|&
operator|(
name|State_Sunken
operator||
name|State_On
operator|)
operator|)
decl_stmt|;
name|bool
name|downSunken
init|=
operator|(
name|spinBox
operator|->
name|activeSubControls
operator|&
name|SC_SpinBoxDown
operator|)
operator|&&
operator|(
name|spinBox
operator|->
name|state
operator|&
operator|(
name|State_Sunken
operator||
name|State_On
operator|)
operator|)
decl_stmt|;
name|bool
name|reverse
init|=
operator|(
name|spinBox
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
operator|)
decl_stmt|;
comment|// Rects
name|QRect
name|upRect
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_SpinBox
argument_list|,
name|option
argument_list|,
name|SC_SpinBoxUp
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|QRect
name|downRect
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_SpinBox
argument_list|,
name|option
argument_list|,
name|SC_SpinBoxDown
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|QRect
name|buttonRect
init|=
name|upRect
operator||
name|downRect
decl_stmt|;
comment|// Brushes
name|QBrush
name|corner
init|=
name|qMapBrushToRect
argument_list|(
name|option
operator|->
name|palette
operator|.
name|shadow
argument_list|()
argument_list|,
name|buttonRect
argument_list|)
decl_stmt|;
name|qBrushSetAlphaF
argument_list|(
operator|&
name|corner
argument_list|,
name|qreal
argument_list|(
literal|0.25
argument_list|)
argument_list|)
expr_stmt|;
name|QBrush
name|border
init|=
name|qMapBrushToRect
argument_list|(
name|option
operator|->
name|palette
operator|.
name|shadow
argument_list|()
argument_list|,
name|buttonRect
argument_list|)
decl_stmt|;
name|qBrushSetAlphaF
argument_list|(
operator|&
name|border
argument_list|,
name|qreal
argument_list|(
literal|0.4
argument_list|)
argument_list|)
expr_stmt|;
name|QVarLengthArray
argument_list|<
name|QPoint
argument_list|,
literal|4
argument_list|>
name|points
decl_stmt|;
name|Q_D
argument_list|(
specifier|const
name|QPlastiqueStyle
argument_list|)
expr_stmt|;
if|if
condition|(
name|spinBox
operator|->
name|buttonSymbols
operator|==
name|QAbstractSpinBox
operator|::
name|NoButtons
condition|)
block|{
name|QRect
name|filledRect
init|=
name|option
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
decl_stmt|;
name|QBrush
name|baseBrush
init|=
name|qMapBrushToRect
argument_list|(
name|option
operator|->
name|palette
operator|.
name|base
argument_list|()
argument_list|,
name|filledRect
argument_list|)
decl_stmt|;
name|painter
operator|->
name|setBrushOrigin
argument_list|(
name|filledRect
operator|.
name|topLeft
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|fillRect
argument_list|(
name|filledRect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|baseBrush
argument_list|)
expr_stmt|;
name|qt_plastique_draw_frame
argument_list|(
name|painter
argument_list|,
name|option
operator|->
name|rect
argument_list|,
name|option
argument_list|,
name|QFrame
operator|::
name|Sunken
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|d
operator|->
name|drawPartialFrame
argument_list|(
name|painter
argument_list|,
name|option
argument_list|,
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_SpinBox
argument_list|,
name|spinBox
argument_list|,
name|SC_SpinBoxEditField
argument_list|,
name|widget
argument_list|)
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
comment|// Paint buttons
if|if
condition|(
name|spinBox
operator|->
name|buttonSymbols
operator|==
name|QAbstractSpinBox
operator|::
name|NoButtons
condition|)
block|{
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
block|}
comment|// Button outlines
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|border
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|reverse
condition|)
name|painter
operator|->
name|drawLine
argument_list|(
name|buttonRect
operator|.
name|topLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|buttonRect
operator|.
name|bottomLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|0
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|painter
operator|->
name|drawLine
argument_list|(
name|buttonRect
operator|.
name|topRight
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|0
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|buttonRect
operator|.
name|bottomRight
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|reverse
condition|)
block|{
specifier|const
name|QLine
name|lines
index|[
literal|4
index|]
init|=
block|{
name|QLine
argument_list|(
name|upRect
operator|.
name|left
argument_list|()
argument_list|,
name|upRect
operator|.
name|top
argument_list|()
argument_list|,
name|upRect
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|upRect
operator|.
name|top
argument_list|()
argument_list|)
block|,
name|QLine
argument_list|(
name|upRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|upRect
operator|.
name|bottom
argument_list|()
argument_list|,
name|upRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|upRect
operator|.
name|bottom
argument_list|()
argument_list|)
block|,
name|QLine
argument_list|(
name|downRect
operator|.
name|left
argument_list|()
argument_list|,
name|downRect
operator|.
name|bottom
argument_list|()
argument_list|,
name|downRect
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|downRect
operator|.
name|bottom
argument_list|()
argument_list|)
block|,
name|QLine
argument_list|(
argument|buttonRect.right()
argument_list|,
argument|buttonRect.top() +
literal|2
argument_list|,
argument|buttonRect.right()
argument_list|,
argument|buttonRect.bottom() -
literal|2
argument_list|)
block|}
decl_stmt|;
name|painter
operator|->
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|points
operator|.
name|append
argument_list|(
name|QPoint
argument_list|(
name|upRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|upRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|append
argument_list|(
name|QPoint
argument_list|(
name|downRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|downRect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPoints
argument_list|(
name|points
operator|.
name|constData
argument_list|()
argument_list|,
name|points
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|points
operator|.
name|clear
argument_list|()
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|corner
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|append
argument_list|(
name|QPoint
argument_list|(
name|upRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|upRect
operator|.
name|top
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|append
argument_list|(
name|QPoint
argument_list|(
name|upRect
operator|.
name|right
argument_list|()
argument_list|,
name|upRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|append
argument_list|(
name|QPoint
argument_list|(
name|upRect
operator|.
name|right
argument_list|()
argument_list|,
name|downRect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|append
argument_list|(
name|QPoint
argument_list|(
name|upRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|downRect
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
specifier|const
name|QLine
name|lines
index|[
literal|4
index|]
init|=
block|{
name|QLine
argument_list|(
name|upRect
operator|.
name|right
argument_list|()
argument_list|,
name|upRect
operator|.
name|top
argument_list|()
argument_list|,
name|upRect
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|upRect
operator|.
name|top
argument_list|()
argument_list|)
block|,
name|QLine
argument_list|(
name|upRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|upRect
operator|.
name|bottom
argument_list|()
argument_list|,
name|upRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|upRect
operator|.
name|bottom
argument_list|()
argument_list|)
block|,
name|QLine
argument_list|(
name|downRect
operator|.
name|right
argument_list|()
argument_list|,
name|downRect
operator|.
name|bottom
argument_list|()
argument_list|,
name|downRect
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|downRect
operator|.
name|bottom
argument_list|()
argument_list|)
block|,
name|QLine
argument_list|(
argument|buttonRect.left()
argument_list|,
argument|buttonRect.top() +
literal|2
argument_list|,
argument|buttonRect.left()
argument_list|,
argument|buttonRect.bottom() -
literal|2
argument_list|)
block|}
decl_stmt|;
name|painter
operator|->
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|points
operator|.
name|append
argument_list|(
name|QPoint
argument_list|(
name|upRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|upRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|append
argument_list|(
name|QPoint
argument_list|(
name|downRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|downRect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPoints
argument_list|(
name|points
operator|.
name|constData
argument_list|()
argument_list|,
name|points
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|points
operator|.
name|clear
argument_list|()
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|corner
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|append
argument_list|(
name|QPoint
argument_list|(
name|upRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|upRect
operator|.
name|top
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|append
argument_list|(
name|QPoint
argument_list|(
name|upRect
operator|.
name|left
argument_list|()
argument_list|,
name|upRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|append
argument_list|(
name|QPoint
argument_list|(
name|upRect
operator|.
name|left
argument_list|()
argument_list|,
name|downRect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|points
operator|.
name|append
argument_list|(
name|QPoint
argument_list|(
name|upRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|downRect
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|drawPoints
argument_list|(
name|points
operator|.
name|constData
argument_list|()
argument_list|,
name|points
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|points
operator|.
name|clear
argument_list|()
expr_stmt|;
comment|// Button colors
name|QBrush
name|buttonGradientBrush
decl_stmt|;
name|QBrush
name|leftLineGradientBrush
decl_stmt|;
name|QBrush
name|rightLineGradientBrush
decl_stmt|;
name|QBrush
name|sunkenButtonGradientBrush
decl_stmt|;
name|QBrush
name|sunkenLeftLineGradientBrush
decl_stmt|;
name|QBrush
name|sunkenRightLineGradientBrush
decl_stmt|;
name|QBrush
name|buttonBrush
init|=
name|qMapBrushToRect
argument_list|(
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
argument_list|,
name|buttonRect
argument_list|)
decl_stmt|;
if|if
condition|(
name|buttonBrush
operator|.
name|gradient
argument_list|()
operator|||
operator|!
name|buttonBrush
operator|.
name|texture
argument_list|()
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|buttonGradientBrush
operator|=
name|buttonBrush
expr_stmt|;
name|sunkenButtonGradientBrush
operator|=
name|qBrushDark
argument_list|(
name|buttonBrush
argument_list|,
literal|108
argument_list|)
expr_stmt|;
name|leftLineGradientBrush
operator|=
name|qBrushLight
argument_list|(
name|buttonBrush
argument_list|,
literal|105
argument_list|)
expr_stmt|;
name|rightLineGradientBrush
operator|=
name|qBrushDark
argument_list|(
name|buttonBrush
argument_list|,
literal|105
argument_list|)
expr_stmt|;
name|sunkenLeftLineGradientBrush
operator|=
name|qBrushDark
argument_list|(
name|buttonBrush
argument_list|,
literal|110
argument_list|)
expr_stmt|;
name|sunkenRightLineGradientBrush
operator|=
name|qBrushDark
argument_list|(
name|buttonBrush
argument_list|,
literal|106
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// Generate gradients
name|QLinearGradient
name|buttonGradient
argument_list|(
name|buttonRect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|buttonRect
operator|.
name|bottomLeft
argument_list|()
argument_list|)
decl_stmt|;
name|buttonGradient
operator|.
name|setColorAt
argument_list|(
literal|0.0
argument_list|,
name|buttonBrush
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|104
argument_list|)
argument_list|)
expr_stmt|;
name|buttonGradient
operator|.
name|setColorAt
argument_list|(
literal|1.0
argument_list|,
name|buttonBrush
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|110
argument_list|)
argument_list|)
expr_stmt|;
name|buttonGradientBrush
operator|=
name|QBrush
argument_list|(
name|buttonGradient
argument_list|)
expr_stmt|;
name|QLinearGradient
name|buttonGradient2
argument_list|(
name|buttonRect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|buttonRect
operator|.
name|bottomLeft
argument_list|()
argument_list|)
decl_stmt|;
name|buttonGradient2
operator|.
name|setColorAt
argument_list|(
literal|0.0
argument_list|,
name|buttonBrush
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|113
argument_list|)
argument_list|)
expr_stmt|;
name|buttonGradient2
operator|.
name|setColorAt
argument_list|(
literal|1.0
argument_list|,
name|buttonBrush
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|103
argument_list|)
argument_list|)
expr_stmt|;
name|sunkenButtonGradientBrush
operator|=
name|QBrush
argument_list|(
name|buttonGradient2
argument_list|)
expr_stmt|;
name|QLinearGradient
name|buttonGradient3
argument_list|(
name|buttonRect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|buttonRect
operator|.
name|bottomLeft
argument_list|()
argument_list|)
decl_stmt|;
name|buttonGradient3
operator|.
name|setColorAt
argument_list|(
literal|0.0
argument_list|,
name|buttonBrush
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|105
argument_list|)
argument_list|)
expr_stmt|;
name|buttonGradient3
operator|.
name|setColorAt
argument_list|(
literal|1.0
argument_list|,
name|buttonBrush
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|leftLineGradientBrush
operator|=
name|QBrush
argument_list|(
name|buttonGradient3
argument_list|)
expr_stmt|;
name|QLinearGradient
name|buttonGradient4
argument_list|(
name|buttonRect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|buttonRect
operator|.
name|bottomLeft
argument_list|()
argument_list|)
decl_stmt|;
name|buttonGradient4
operator|.
name|setColorAt
argument_list|(
literal|0.0
argument_list|,
name|buttonBrush
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|buttonGradient4
operator|.
name|setColorAt
argument_list|(
literal|1.0
argument_list|,
name|buttonBrush
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|110
argument_list|)
argument_list|)
expr_stmt|;
name|rightLineGradientBrush
operator|=
name|QBrush
argument_list|(
name|buttonGradient4
argument_list|)
expr_stmt|;
name|QLinearGradient
name|buttonGradient5
argument_list|(
name|buttonRect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|buttonRect
operator|.
name|bottomLeft
argument_list|()
argument_list|)
decl_stmt|;
name|buttonGradient5
operator|.
name|setColorAt
argument_list|(
literal|0.0
argument_list|,
name|buttonBrush
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|113
argument_list|)
argument_list|)
expr_stmt|;
name|buttonGradient5
operator|.
name|setColorAt
argument_list|(
literal|1.0
argument_list|,
name|buttonBrush
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|107
argument_list|)
argument_list|)
expr_stmt|;
name|sunkenLeftLineGradientBrush
operator|=
name|QBrush
argument_list|(
name|buttonGradient5
argument_list|)
expr_stmt|;
name|QLinearGradient
name|buttonGradient6
argument_list|(
name|buttonRect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|buttonRect
operator|.
name|bottomLeft
argument_list|()
argument_list|)
decl_stmt|;
name|buttonGradient6
operator|.
name|setColorAt
argument_list|(
literal|0.0
argument_list|,
name|buttonBrush
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|108
argument_list|)
argument_list|)
expr_stmt|;
name|buttonGradient6
operator|.
name|setColorAt
argument_list|(
literal|1.0
argument_list|,
name|buttonBrush
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|103
argument_list|)
argument_list|)
expr_stmt|;
name|sunkenRightLineGradientBrush
operator|=
name|QBrush
argument_list|(
name|buttonGradient6
argument_list|)
expr_stmt|;
block|}
comment|// Main fill
name|painter
operator|->
name|fillRect
argument_list|(
name|upRect
operator|.
name|adjusted
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
operator|-
literal|2
argument_list|,
operator|-
literal|2
argument_list|)
argument_list|,
name|qMapBrushToRect
argument_list|(
name|upSunken
condition|?
name|sunkenButtonGradientBrush
else|:
name|buttonGradientBrush
argument_list|,
name|upRect
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|fillRect
argument_list|(
name|downRect
operator|.
name|adjusted
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
operator|-
literal|2
argument_list|,
operator|-
literal|2
argument_list|)
argument_list|,
name|qMapBrushToRect
argument_list|(
name|downSunken
condition|?
name|sunkenButtonGradientBrush
else|:
name|buttonGradientBrush
argument_list|,
name|downRect
argument_list|)
argument_list|)
expr_stmt|;
comment|// Top line
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|qBrushLight
argument_list|(
name|qMapBrushToRect
argument_list|(
name|upSunken
condition|?
name|sunkenButtonGradientBrush
else|:
name|buttonGradientBrush
argument_list|,
name|upRect
argument_list|)
argument_list|,
literal|105
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|reverse
condition|)
block|{
name|painter
operator|->
name|drawLine
argument_list|(
name|upRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|upRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|upRect
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|upRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|painter
operator|->
name|drawLine
argument_list|(
name|upRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|upRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|upRect
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|upRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|qBrushLight
argument_list|(
name|qMapBrushToRect
argument_list|(
name|downSunken
condition|?
name|sunkenButtonGradientBrush
else|:
name|buttonGradientBrush
argument_list|,
name|downRect
argument_list|)
argument_list|,
literal|105
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|reverse
condition|)
block|{
name|painter
operator|->
name|drawLine
argument_list|(
name|downRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|downRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|downRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|downRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|painter
operator|->
name|drawLine
argument_list|(
name|downRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|downRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|downRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|downRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
block|}
comment|// Left line
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|qMapBrushToRect
argument_list|(
name|upSunken
condition|?
name|sunkenLeftLineGradientBrush
else|:
name|leftLineGradientBrush
argument_list|,
name|upRect
argument_list|)
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|reverse
condition|)
block|{
name|painter
operator|->
name|drawLine
argument_list|(
name|upRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|upRect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|,
name|upRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|upRect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|painter
operator|->
name|drawLine
argument_list|(
name|upRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|upRect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|,
name|upRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|upRect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|qMapBrushToRect
argument_list|(
name|downSunken
condition|?
name|sunkenLeftLineGradientBrush
else|:
name|leftLineGradientBrush
argument_list|,
name|downRect
argument_list|)
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|reverse
condition|)
block|{
name|painter
operator|->
name|drawLine
argument_list|(
name|downRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|downRect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|,
name|downRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|downRect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|painter
operator|->
name|drawLine
argument_list|(
name|downRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|downRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|downRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|downRect
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
expr_stmt|;
block|}
comment|// Bottom line
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|qBrushDark
argument_list|(
name|qMapBrushToRect
argument_list|(
name|upSunken
condition|?
name|sunkenButtonGradientBrush
else|:
name|buttonGradientBrush
argument_list|,
name|upRect
argument_list|)
argument_list|,
literal|105
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|reverse
condition|)
block|{
name|painter
operator|->
name|drawLine
argument_list|(
name|upRect
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|upRect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|,
name|upRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|upRect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|painter
operator|->
name|drawLine
argument_list|(
name|upRect
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|upRect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|,
name|upRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|upRect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|qBrushDark
argument_list|(
name|qMapBrushToRect
argument_list|(
name|downSunken
condition|?
name|sunkenButtonGradientBrush
else|:
name|buttonGradientBrush
argument_list|,
name|downRect
argument_list|)
argument_list|,
literal|105
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|reverse
condition|)
block|{
name|painter
operator|->
name|drawLine
argument_list|(
name|downRect
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|downRect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|,
name|downRect
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|downRect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|painter
operator|->
name|drawLine
argument_list|(
name|downRect
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|downRect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|,
name|downRect
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|downRect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
comment|// Right line
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|qMapBrushToRect
argument_list|(
name|upSunken
condition|?
name|sunkenRightLineGradientBrush
else|:
name|rightLineGradientBrush
argument_list|,
name|upRect
argument_list|)
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|reverse
condition|)
block|{
name|painter
operator|->
name|drawLine
argument_list|(
name|upRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|upRect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|,
name|upRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|upRect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|painter
operator|->
name|drawLine
argument_list|(
name|upRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|upRect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|,
name|upRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|upRect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|qMapBrushToRect
argument_list|(
name|downSunken
condition|?
name|sunkenRightLineGradientBrush
else|:
name|rightLineGradientBrush
argument_list|,
name|downRect
argument_list|)
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|reverse
condition|)
block|{
name|painter
operator|->
name|drawLine
argument_list|(
name|downRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|downRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|downRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|downRect
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|painter
operator|->
name|drawLine
argument_list|(
name|downRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|downRect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|,
name|downRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|downRect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
name|QBrush
name|indicatorBrush
init|=
name|qMapBrushToRect
argument_list|(
name|option
operator|->
name|palette
operator|.
name|buttonText
argument_list|()
argument_list|,
name|buttonRect
argument_list|)
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|indicatorBrush
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|spinBox
operator|->
name|buttonSymbols
operator|==
name|QAbstractSpinBox
operator|::
name|PlusMinus
condition|)
block|{
name|QPoint
name|center
decl_stmt|;
if|if
condition|(
name|spinBox
operator|->
name|subControls
operator|&
name|SC_SpinBoxUp
condition|)
block|{
comment|// .......
comment|// ...X...
comment|// ...X...
comment|// .XXXXX.
comment|// ...X...
comment|// ...X...
comment|// .......
name|center
operator|=
name|upRect
operator|.
name|center
argument_list|()
expr_stmt|;
if|if
condition|(
name|upSunken
condition|)
block|{
operator|++
name|center
operator|.
name|rx
argument_list|()
expr_stmt|;
operator|++
name|center
operator|.
name|ry
argument_list|()
expr_stmt|;
block|}
name|painter
operator|->
name|drawLine
argument_list|(
name|center
operator|.
name|x
argument_list|()
argument_list|,
name|center
operator|.
name|y
argument_list|()
operator|-
literal|2
argument_list|,
name|center
operator|.
name|x
argument_list|()
argument_list|,
name|center
operator|.
name|y
argument_list|()
operator|+
literal|2
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|center
operator|.
name|x
argument_list|()
operator|-
literal|2
argument_list|,
name|center
operator|.
name|y
argument_list|()
argument_list|,
name|center
operator|.
name|x
argument_list|()
operator|+
literal|2
argument_list|,
name|center
operator|.
name|y
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|spinBox
operator|->
name|subControls
operator|&
name|SC_SpinBoxDown
condition|)
block|{
comment|// .......
comment|// .......
comment|// .......
comment|// .XXXXX.
comment|// .......
comment|// .......
comment|// .......
name|center
operator|=
name|downRect
operator|.
name|center
argument_list|()
expr_stmt|;
if|if
condition|(
name|downSunken
condition|)
block|{
operator|++
name|center
operator|.
name|rx
argument_list|()
expr_stmt|;
operator|++
name|center
operator|.
name|ry
argument_list|()
expr_stmt|;
block|}
name|painter
operator|->
name|drawLine
argument_list|(
name|center
operator|.
name|x
argument_list|()
operator|-
literal|2
argument_list|,
name|center
operator|.
name|y
argument_list|()
argument_list|,
name|center
operator|.
name|x
argument_list|()
operator|+
literal|2
argument_list|,
name|center
operator|.
name|y
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|int
name|offset
decl_stmt|;
name|int
name|centerX
decl_stmt|;
if|if
condition|(
name|spinBox
operator|->
name|subControls
operator|&
name|SC_SpinBoxUp
condition|)
block|{
comment|// ...........
comment|// .....X.....
comment|// ....XXX....
comment|// ...XXXXX...
comment|// ..XXXXXXX..
comment|// ...........
name|offset
operator|=
name|upSunken
condition|?
literal|1
else|:
literal|0
expr_stmt|;
name|QRect
name|upArrowRect
argument_list|(
name|upRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|-
literal|3
operator|+
name|offset
argument_list|,
name|upRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|-
literal|2
operator|+
name|offset
argument_list|,
literal|7
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|centerX
operator|=
name|upArrowRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
expr_stmt|;
name|painter
operator|->
name|drawPoint
argument_list|(
name|centerX
argument_list|,
name|upArrowRect
operator|.
name|top
argument_list|()
argument_list|)
expr_stmt|;
specifier|const
name|QLine
name|lines
index|[
literal|3
index|]
init|=
block|{
name|QLine
argument_list|(
name|centerX
operator|-
literal|1
argument_list|,
name|upArrowRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|centerX
operator|+
literal|1
argument_list|,
name|upArrowRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
block|,
name|QLine
argument_list|(
name|centerX
operator|-
literal|2
argument_list|,
name|upArrowRect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|,
name|centerX
operator|+
literal|2
argument_list|,
name|upArrowRect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|)
block|,
name|QLine
argument_list|(
argument|centerX -
literal|3
argument_list|,
argument|upArrowRect.top() +
literal|3
argument_list|,
argument|centerX +
literal|3
argument_list|,
argument|upArrowRect.top() +
literal|3
argument_list|)
block|}
decl_stmt|;
name|painter
operator|->
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|3
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|spinBox
operator|->
name|subControls
operator|&
name|SC_SpinBoxDown
condition|)
block|{
comment|// ...........
comment|// ..XXXXXXX..
comment|// ...XXXXX...
comment|// ....XXX....
comment|// .....X.....
comment|// ...........
name|offset
operator|=
name|downSunken
condition|?
literal|1
else|:
literal|0
expr_stmt|;
name|QRect
name|downArrowRect
argument_list|(
name|downRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|-
literal|3
operator|+
name|offset
argument_list|,
name|downRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|-
literal|2
operator|+
name|offset
operator|+
literal|1
argument_list|,
literal|7
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|centerX
operator|=
name|downArrowRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
expr_stmt|;
specifier|const
name|QLine
name|lines
index|[
literal|3
index|]
init|=
block|{
name|QLine
argument_list|(
name|centerX
operator|-
literal|3
argument_list|,
name|downArrowRect
operator|.
name|top
argument_list|()
argument_list|,
name|centerX
operator|+
literal|3
argument_list|,
name|downArrowRect
operator|.
name|top
argument_list|()
argument_list|)
block|,
name|QLine
argument_list|(
name|centerX
operator|-
literal|2
argument_list|,
name|downArrowRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|centerX
operator|+
literal|2
argument_list|,
name|downArrowRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
block|,
name|QLine
argument_list|(
argument|centerX -
literal|1
argument_list|,
argument|downArrowRect.top() +
literal|2
argument_list|,
argument|centerX +
literal|1
argument_list|,
argument|downArrowRect.top() +
literal|2
argument_list|)
block|}
decl_stmt|;
name|painter
operator|->
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPoint
argument_list|(
name|centerX
argument_list|,
name|downArrowRect
operator|.
name|top
argument_list|()
operator|+
literal|3
argument_list|)
expr_stmt|;
block|}
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_SPINBOX
ifndef|#
directive|ifndef
name|QT_NO_COMBOBOX
case|case
name|CC_ComboBox
case|:
if|if
condition|(
specifier|const
name|QStyleOptionComboBox
modifier|*
name|comboBox
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionComboBox
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|bool
name|sunken
init|=
name|comboBox
operator|->
name|state
operator|&
name|State_On
decl_stmt|;
comment|// play dead if combobox has no items
name|bool
name|reverse
init|=
name|comboBox
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
decl_stmt|;
name|int
name|menuButtonWidth
init|=
literal|16
decl_stmt|;
name|int
name|xoffset
init|=
name|sunken
condition|?
operator|(
name|reverse
condition|?
operator|-
literal|1
else|:
literal|1
operator|)
else|:
literal|0
decl_stmt|;
name|int
name|yoffset
init|=
name|sunken
condition|?
literal|1
else|:
literal|0
decl_stmt|;
name|QRect
name|rect
init|=
name|comboBox
operator|->
name|rect
decl_stmt|;
name|QPen
name|oldPen
init|=
name|painter
operator|->
name|pen
argument_list|()
decl_stmt|;
comment|// Fill
if|if
condition|(
name|comboBox
operator|->
name|editable
condition|)
block|{
comment|// Button colors
name|QBrush
name|alphaCornerBrush
init|=
name|qBrushDark
argument_list|(
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
argument_list|,
literal|165
argument_list|)
decl_stmt|;
name|qBrushSetAlphaF
argument_list|(
operator|&
name|alphaCornerBrush
argument_list|,
literal|0.5
argument_list|)
expr_stmt|;
name|QBrush
name|buttonGradientBrush
decl_stmt|;
name|QBrush
name|leftLineGradientBrush
decl_stmt|;
name|QBrush
name|rightLineGradientBrush
decl_stmt|;
name|QBrush
name|sunkenButtonGradientBrush
decl_stmt|;
name|QBrush
name|sunkenLeftLineGradientBrush
decl_stmt|;
name|QBrush
name|sunkenRightLineGradientBrush
decl_stmt|;
name|QBrush
name|button
init|=
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
decl_stmt|;
if|if
condition|(
name|button
operator|.
name|gradient
argument_list|()
operator|||
operator|!
name|button
operator|.
name|texture
argument_list|()
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|buttonGradientBrush
operator|=
name|button
expr_stmt|;
name|sunkenButtonGradientBrush
operator|=
name|qBrushDark
argument_list|(
name|button
argument_list|,
literal|108
argument_list|)
expr_stmt|;
name|leftLineGradientBrush
operator|=
name|qBrushLight
argument_list|(
name|button
argument_list|,
literal|105
argument_list|)
expr_stmt|;
name|rightLineGradientBrush
operator|=
name|qBrushDark
argument_list|(
name|button
argument_list|,
literal|105
argument_list|)
expr_stmt|;
name|sunkenLeftLineGradientBrush
operator|=
name|qBrushDark
argument_list|(
name|button
argument_list|,
literal|110
argument_list|)
expr_stmt|;
name|sunkenRightLineGradientBrush
operator|=
name|qBrushDark
argument_list|(
name|button
argument_list|,
literal|106
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// Generate gradients
name|QLinearGradient
name|buttonGradient
argument_list|(
name|option
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|)
decl_stmt|;
name|buttonGradient
operator|.
name|setColorAt
argument_list|(
literal|0.0
argument_list|,
name|button
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|104
argument_list|)
argument_list|)
expr_stmt|;
name|buttonGradient
operator|.
name|setColorAt
argument_list|(
literal|1.0
argument_list|,
name|button
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|110
argument_list|)
argument_list|)
expr_stmt|;
name|buttonGradientBrush
operator|=
name|QBrush
argument_list|(
name|buttonGradient
argument_list|)
expr_stmt|;
name|QLinearGradient
name|buttonGradient2
argument_list|(
name|option
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|)
decl_stmt|;
name|buttonGradient2
operator|.
name|setColorAt
argument_list|(
literal|0.0
argument_list|,
name|button
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|113
argument_list|)
argument_list|)
expr_stmt|;
name|buttonGradient2
operator|.
name|setColorAt
argument_list|(
literal|1.0
argument_list|,
name|button
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|103
argument_list|)
argument_list|)
expr_stmt|;
name|sunkenButtonGradientBrush
operator|=
name|QBrush
argument_list|(
name|buttonGradient2
argument_list|)
expr_stmt|;
name|QLinearGradient
name|buttonGradient3
argument_list|(
name|option
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|)
decl_stmt|;
name|buttonGradient3
operator|.
name|setColorAt
argument_list|(
literal|0.0
argument_list|,
name|button
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|105
argument_list|)
argument_list|)
expr_stmt|;
name|buttonGradient3
operator|.
name|setColorAt
argument_list|(
literal|1.0
argument_list|,
name|button
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|leftLineGradientBrush
operator|=
name|QBrush
argument_list|(
name|buttonGradient3
argument_list|)
expr_stmt|;
name|QLinearGradient
name|buttonGradient4
argument_list|(
name|option
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|)
decl_stmt|;
name|buttonGradient4
operator|.
name|setColorAt
argument_list|(
literal|0.0
argument_list|,
name|button
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|buttonGradient4
operator|.
name|setColorAt
argument_list|(
literal|1.0
argument_list|,
name|button
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|110
argument_list|)
argument_list|)
expr_stmt|;
name|rightLineGradientBrush
operator|=
name|QBrush
argument_list|(
name|buttonGradient4
argument_list|)
expr_stmt|;
name|QLinearGradient
name|buttonGradient5
argument_list|(
name|option
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|)
decl_stmt|;
name|buttonGradient5
operator|.
name|setColorAt
argument_list|(
literal|0.0
argument_list|,
name|button
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|113
argument_list|)
argument_list|)
expr_stmt|;
name|buttonGradient5
operator|.
name|setColorAt
argument_list|(
literal|1.0
argument_list|,
name|button
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|107
argument_list|)
argument_list|)
expr_stmt|;
name|sunkenLeftLineGradientBrush
operator|=
name|QBrush
argument_list|(
name|buttonGradient5
argument_list|)
expr_stmt|;
name|QLinearGradient
name|buttonGradient6
argument_list|(
name|option
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|)
decl_stmt|;
name|buttonGradient6
operator|.
name|setColorAt
argument_list|(
literal|0.0
argument_list|,
name|button
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|108
argument_list|)
argument_list|)
expr_stmt|;
name|buttonGradient6
operator|.
name|setColorAt
argument_list|(
literal|1.0
argument_list|,
name|button
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|103
argument_list|)
argument_list|)
expr_stmt|;
name|sunkenRightLineGradientBrush
operator|=
name|QBrush
argument_list|(
name|buttonGradient6
argument_list|)
expr_stmt|;
block|}
comment|// ComboBox starts with a lineedit in place already.
name|QRect
name|buttonRect
decl_stmt|;
if|if
condition|(
operator|!
name|reverse
condition|)
block|{
name|buttonRect
operator|.
name|setRect
argument_list|(
name|rect
operator|.
name|right
argument_list|()
operator|-
name|menuButtonWidth
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|menuButtonWidth
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|buttonRect
operator|.
name|setRect
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|menuButtonWidth
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|Q_D
argument_list|(
specifier|const
name|QPlastiqueStyle
argument_list|)
expr_stmt|;
name|d
operator|->
name|drawPartialFrame
argument_list|(
name|painter
argument_list|,
name|option
argument_list|,
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_ComboBox
argument_list|,
name|option
argument_list|,
name|SC_ComboBoxEditField
argument_list|,
name|widget
argument_list|)
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|QBrush
name|border
init|=
name|qMapBrushToRect
argument_list|(
name|option
operator|->
name|palette
operator|.
name|shadow
argument_list|()
argument_list|,
name|buttonRect
argument_list|)
decl_stmt|;
name|qBrushSetAlphaF
argument_list|(
operator|&
name|border
argument_list|,
name|qreal
argument_list|(
literal|0.4
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|border
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|reverse
condition|)
name|painter
operator|->
name|drawLine
argument_list|(
name|buttonRect
operator|.
name|topLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|buttonRect
operator|.
name|bottomLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|0
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|painter
operator|->
name|drawLine
argument_list|(
name|buttonRect
operator|.
name|topRight
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|0
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|buttonRect
operator|.
name|bottomRight
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// Outline the button border
if|if
condition|(
operator|!
name|reverse
condition|)
block|{
specifier|const
name|QLine
name|lines
index|[
literal|3
index|]
init|=
block|{
name|QLine
argument_list|(
name|buttonRect
operator|.
name|left
argument_list|()
argument_list|,
name|buttonRect
operator|.
name|top
argument_list|()
argument_list|,
name|buttonRect
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|buttonRect
operator|.
name|top
argument_list|()
argument_list|)
block|,
name|QLine
argument_list|(
name|buttonRect
operator|.
name|right
argument_list|()
argument_list|,
name|buttonRect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|,
name|buttonRect
operator|.
name|right
argument_list|()
argument_list|,
name|buttonRect
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
block|,
name|QLine
argument_list|(
argument|buttonRect.left()
argument_list|,
argument|buttonRect.bottom()
argument_list|,
argument|buttonRect.right() -
literal|2
argument_list|,
argument|buttonRect.bottom()
argument_list|)
block|}
decl_stmt|;
name|painter
operator|->
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|3
argument_list|)
expr_stmt|;
block|{
specifier|const
name|QPoint
name|points
index|[
literal|2
index|]
init|=
block|{
name|QPoint
argument_list|(
name|buttonRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|buttonRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
argument|buttonRect.right() -
literal|1
argument_list|,
argument|buttonRect.bottom() -
literal|1
argument_list|)
block|}
decl_stmt|;
name|painter
operator|->
name|drawPoints
argument_list|(
name|points
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
name|QBrush
name|corner
init|=
name|qMapBrushToRect
argument_list|(
name|option
operator|->
name|palette
operator|.
name|shadow
argument_list|()
argument_list|,
name|buttonRect
argument_list|)
decl_stmt|;
name|qBrushSetAlphaF
argument_list|(
operator|&
name|corner
argument_list|,
name|qreal
argument_list|(
literal|0.16
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|corner
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|{
specifier|const
name|QPoint
name|points
index|[
literal|4
index|]
init|=
block|{
name|QPoint
argument_list|(
name|buttonRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|buttonRect
operator|.
name|top
argument_list|()
argument_list|)
block|,
name|QPoint
argument_list|(
name|buttonRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|buttonRect
operator|.
name|bottom
argument_list|()
argument_list|)
block|,
name|QPoint
argument_list|(
name|buttonRect
operator|.
name|right
argument_list|()
argument_list|,
name|buttonRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
argument|buttonRect.right()
argument_list|,
argument|buttonRect.bottom() -
literal|1
argument_list|)
block|}
decl_stmt|;
name|painter
operator|->
name|drawPoints
argument_list|(
name|points
argument_list|,
literal|4
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
specifier|const
name|QLine
name|lines
index|[
literal|3
index|]
init|=
block|{
name|QLine
argument_list|(
name|buttonRect
operator|.
name|right
argument_list|()
argument_list|,
name|buttonRect
operator|.
name|top
argument_list|()
argument_list|,
name|buttonRect
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|buttonRect
operator|.
name|top
argument_list|()
argument_list|)
block|,
name|QLine
argument_list|(
name|buttonRect
operator|.
name|left
argument_list|()
argument_list|,
name|buttonRect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|,
name|buttonRect
operator|.
name|left
argument_list|()
argument_list|,
name|buttonRect
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
block|,
name|QLine
argument_list|(
argument|buttonRect.right()
argument_list|,
argument|buttonRect.bottom()
argument_list|,
argument|buttonRect.left() +
literal|2
argument_list|,
argument|buttonRect.bottom()
argument_list|)
block|}
decl_stmt|;
name|painter
operator|->
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|3
argument_list|)
expr_stmt|;
block|{
specifier|const
name|QPoint
name|points
index|[
literal|2
index|]
init|=
block|{
name|QPoint
argument_list|(
name|buttonRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|buttonRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
argument|buttonRect.left() +
literal|1
argument_list|,
argument|buttonRect.bottom() -
literal|1
argument_list|)
block|}
decl_stmt|;
name|painter
operator|->
name|drawPoints
argument_list|(
name|points
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
name|QBrush
name|corner
init|=
name|qMapBrushToRect
argument_list|(
name|option
operator|->
name|palette
operator|.
name|shadow
argument_list|()
argument_list|,
name|buttonRect
argument_list|)
decl_stmt|;
name|qBrushSetAlphaF
argument_list|(
operator|&
name|corner
argument_list|,
name|qreal
argument_list|(
literal|0.16
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|corner
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|{
specifier|const
name|QPoint
name|points
index|[
literal|4
index|]
init|=
block|{
name|QPoint
argument_list|(
name|buttonRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|buttonRect
operator|.
name|top
argument_list|()
argument_list|)
block|,
name|QPoint
argument_list|(
name|buttonRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|buttonRect
operator|.
name|bottom
argument_list|()
argument_list|)
block|,
name|QPoint
argument_list|(
name|buttonRect
operator|.
name|left
argument_list|()
argument_list|,
name|buttonRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
argument|buttonRect.left()
argument_list|,
argument|buttonRect.bottom() -
literal|1
argument_list|)
block|}
decl_stmt|;
name|painter
operator|->
name|drawPoints
argument_list|(
name|points
argument_list|,
literal|4
argument_list|)
expr_stmt|;
block|}
block|}
name|QRect
name|fillRect
init|=
name|buttonRect
operator|.
name|adjusted
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
operator|-
literal|2
argument_list|,
operator|-
literal|2
argument_list|)
decl_stmt|;
comment|// Main fill
name|painter
operator|->
name|fillRect
argument_list|(
name|fillRect
argument_list|,
name|qMapBrushToRect
argument_list|(
name|sunken
condition|?
name|sunkenButtonGradientBrush
else|:
name|buttonGradientBrush
argument_list|,
name|option
operator|->
name|rect
argument_list|)
argument_list|)
expr_stmt|;
comment|// Top line
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|qBrushLight
argument_list|(
name|qMapBrushToRect
argument_list|(
name|sunken
condition|?
name|sunkenButtonGradientBrush
else|:
name|buttonGradientBrush
argument_list|,
name|option
operator|->
name|rect
argument_list|)
argument_list|,
literal|105
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|reverse
condition|)
block|{
name|painter
operator|->
name|drawLine
argument_list|(
name|QPointF
argument_list|(
name|buttonRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|buttonRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|,
name|QPointF
argument_list|(
name|buttonRect
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|buttonRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|painter
operator|->
name|drawLine
argument_list|(
name|QPointF
argument_list|(
name|buttonRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|buttonRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|,
name|QPointF
argument_list|(
name|buttonRect
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|buttonRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// Bottom line
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|qBrushDark
argument_list|(
name|qMapBrushToRect
argument_list|(
name|sunken
condition|?
name|sunkenButtonGradientBrush
else|:
name|buttonGradientBrush
argument_list|,
name|option
operator|->
name|rect
argument_list|)
argument_list|,
literal|105
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|reverse
condition|)
block|{
name|painter
operator|->
name|drawLine
argument_list|(
name|QPointF
argument_list|(
name|buttonRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|buttonRect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|,
name|QPointF
argument_list|(
name|buttonRect
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|buttonRect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|painter
operator|->
name|drawLine
argument_list|(
name|QPointF
argument_list|(
name|buttonRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|buttonRect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|,
name|QPointF
argument_list|(
name|buttonRect
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|buttonRect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// Left line
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|qMapBrushToRect
argument_list|(
name|sunken
condition|?
name|sunkenLeftLineGradientBrush
else|:
name|leftLineGradientBrush
argument_list|,
name|option
operator|->
name|rect
argument_list|)
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|reverse
condition|)
block|{
name|painter
operator|->
name|drawLine
argument_list|(
name|QPointF
argument_list|(
name|buttonRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|buttonRect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|)
argument_list|,
name|QPointF
argument_list|(
name|buttonRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|buttonRect
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|painter
operator|->
name|drawLine
argument_list|(
name|QPointF
argument_list|(
name|buttonRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|buttonRect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|)
argument_list|,
name|QPointF
argument_list|(
name|buttonRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|buttonRect
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// Right line
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|qMapBrushToRect
argument_list|(
name|sunken
condition|?
name|sunkenRightLineGradientBrush
else|:
name|rightLineGradientBrush
argument_list|,
name|option
operator|->
name|rect
argument_list|)
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|reverse
condition|)
block|{
name|painter
operator|->
name|drawLine
argument_list|(
name|QPointF
argument_list|(
name|buttonRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|buttonRect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|)
argument_list|,
name|QPointF
argument_list|(
name|buttonRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|buttonRect
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|painter
operator|->
name|drawLine
argument_list|(
name|QPointF
argument_list|(
name|buttonRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|buttonRect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|)
argument_list|,
name|QPointF
argument_list|(
name|buttonRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|buttonRect
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
comment|// Start with a standard panel button fill
name|QStyleOptionButton
name|buttonOption
decl_stmt|;
name|buttonOption
operator|.
name|QStyleOption
operator|::
name|operator
name|=
argument_list|(
operator|*
name|comboBox
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|sunken
condition|)
block|{
name|buttonOption
operator|.
name|state
operator|&=
operator|~
name|State_Sunken
expr_stmt|;
block|}
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_PanelButtonCommand
argument_list|,
operator|&
name|buttonOption
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
comment|// Draw the menu button separator line
name|QBrush
name|border
init|=
name|qMapBrushToRect
argument_list|(
name|option
operator|->
name|palette
operator|.
name|shadow
argument_list|()
argument_list|,
name|rect
argument_list|)
decl_stmt|;
name|qBrushSetAlphaF
argument_list|(
operator|&
name|border
argument_list|,
name|qreal
argument_list|(
literal|0.35
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|border
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|reverse
condition|)
block|{
name|painter
operator|->
name|drawLine
argument_list|(
name|rect
operator|.
name|right
argument_list|()
operator|-
name|menuButtonWidth
operator|+
name|xoffset
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|right
argument_list|()
operator|-
name|menuButtonWidth
operator|+
name|xoffset
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|painter
operator|->
name|drawLine
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
name|menuButtonWidth
operator|+
name|xoffset
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|left
argument_list|()
operator|+
name|menuButtonWidth
operator|+
name|xoffset
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
comment|// Draw the little arrow
if|if
condition|(
name|comboBox
operator|->
name|subControls
operator|&
name|SC_ComboBoxArrow
condition|)
block|{
name|int
name|left
init|=
operator|!
name|reverse
condition|?
name|rect
operator|.
name|right
argument_list|()
operator|-
name|menuButtonWidth
else|:
name|rect
operator|.
name|left
argument_list|()
decl_stmt|;
name|int
name|right
init|=
operator|!
name|reverse
condition|?
name|rect
operator|.
name|right
argument_list|()
else|:
name|rect
operator|.
name|left
argument_list|()
operator|+
name|menuButtonWidth
decl_stmt|;
name|QRect
name|arrowRect
argument_list|(
operator|(
name|left
operator|+
name|right
operator|)
operator|/
literal|2
operator|-
literal|3
operator|+
name|xoffset
argument_list|,
name|rect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|-
literal|1
operator|+
name|yoffset
argument_list|,
literal|7
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|qMapBrushToRect
argument_list|(
name|option
operator|->
name|palette
operator|.
name|buttonText
argument_list|()
argument_list|,
name|rect
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
specifier|const
name|QLine
name|lines
index|[
literal|3
index|]
init|=
block|{
name|QLine
argument_list|(
name|arrowRect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|arrowRect
operator|.
name|topRight
argument_list|()
argument_list|)
block|,
name|QLine
argument_list|(
name|arrowRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|arrowRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|arrowRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|arrowRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
block|,
name|QLine
argument_list|(
argument|arrowRect.left() +
literal|2
argument_list|,
argument|arrowRect.top() +
literal|2
argument_list|,
argument|arrowRect.right() -
literal|2
argument_list|,
argument|arrowRect.top() +
literal|2
argument_list|)
block|}
decl_stmt|;
name|painter
operator|->
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPoint
argument_list|(
name|arrowRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|arrowRect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// Draw the focus rect
if|if
condition|(
operator|(
name|option
operator|->
name|state
operator|&
name|State_HasFocus
operator|)
operator|&&
operator|!
name|comboBox
operator|->
name|editable
operator|&&
operator|(
operator|(
name|option
operator|->
name|state
operator|&
name|State_KeyboardFocusChange
operator|)
operator|||
name|styleHint
argument_list|(
name|SH_UnderlineShortcut
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
operator|)
condition|)
block|{
name|QStyleOptionFocusRect
name|focus
decl_stmt|;
name|focus
operator|.
name|rect
operator|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_ComboBox
argument_list|,
name|option
argument_list|,
name|SC_ComboBoxEditField
argument_list|,
name|widget
argument_list|)
operator|.
name|adjusted
argument_list|(
operator|-
literal|2
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_FrameFocusRect
argument_list|,
operator|&
name|focus
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|setPen
argument_list|(
name|oldPen
argument_list|)
expr_stmt|;
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_COMBOBOX
case|case
name|CC_TitleBar
case|:
if|if
condition|(
specifier|const
name|QStyleOptionTitleBar
modifier|*
name|titleBar
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionTitleBar
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
name|bool
name|active
init|=
operator|(
name|titleBar
operator|->
name|titleBarState
operator|&
name|State_Active
operator|)
decl_stmt|;
name|QRect
name|fullRect
init|=
name|titleBar
operator|->
name|rect
decl_stmt|;
comment|// ### use palette colors instead
name|QColor
name|titleBarGradientStart
argument_list|(
name|active
condition|?
literal|0x3b508a
else|:
literal|0x6e6e6e
argument_list|)
decl_stmt|;
name|QColor
name|titleBarGradientStop
argument_list|(
name|active
condition|?
literal|0x5d6e9e
else|:
literal|0x818181
argument_list|)
decl_stmt|;
name|QColor
name|titleBarFrameBorder
argument_list|(
literal|0x393939
argument_list|)
decl_stmt|;
name|QColor
name|titleBarAlphaCorner
argument_list|(
name|active
condition|?
literal|0x4b5e7f
else|:
literal|0x6a6a6a
argument_list|)
decl_stmt|;
name|QColor
name|titleBarInnerTopLine
argument_list|(
name|active
condition|?
literal|0x8e98ba
else|:
literal|0xa4a4a4
argument_list|)
decl_stmt|;
name|QColor
name|titleBarInnerInnerTopLine
argument_list|(
name|active
condition|?
literal|0x57699b
else|:
literal|0x808080
argument_list|)
decl_stmt|;
name|QColor
name|leftCorner
argument_list|(
name|active
condition|?
literal|0x6f7ea8
else|:
literal|0x8e8e8e
argument_list|)
decl_stmt|;
name|QColor
name|rightCorner
argument_list|(
name|active
condition|?
literal|0x44537d
else|:
literal|0x676767
argument_list|)
decl_stmt|;
name|QColor
name|textColor
argument_list|(
name|active
condition|?
literal|0x282e40
else|:
literal|0x282e40
argument_list|)
decl_stmt|;
name|QColor
name|textAlphaColor
argument_list|(
name|active
condition|?
literal|0x3f4862
else|:
literal|0x3f4862
argument_list|)
decl_stmt|;
block|{
comment|// Fill title bar gradient
name|qt_plastique_draw_gradient
argument_list|(
name|painter
argument_list|,
name|option
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|,
name|titleBarGradientStart
argument_list|,
name|titleBarGradientStop
argument_list|)
expr_stmt|;
comment|// Frame and rounded corners
name|painter
operator|->
name|setPen
argument_list|(
name|titleBarFrameBorder
argument_list|)
expr_stmt|;
comment|// top border line
block|{
specifier|const
name|QLine
name|lines
index|[
literal|3
index|]
init|=
block|{
name|QLine
argument_list|(
name|fullRect
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|fullRect
operator|.
name|top
argument_list|()
argument_list|,
name|fullRect
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|fullRect
operator|.
name|top
argument_list|()
argument_list|)
block|,
name|QLine
argument_list|(
name|fullRect
operator|.
name|left
argument_list|()
argument_list|,
name|fullRect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|,
name|fullRect
operator|.
name|left
argument_list|()
argument_list|,
name|fullRect
operator|.
name|bottom
argument_list|()
argument_list|)
block|,
name|QLine
argument_list|(
argument|fullRect.right()
argument_list|,
argument|fullRect.top() +
literal|2
argument_list|,
argument|fullRect.right()
argument_list|,
argument|fullRect.bottom()
argument_list|)
block|}
decl_stmt|;
name|painter
operator|->
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|3
argument_list|)
expr_stmt|;
specifier|const
name|QPoint
name|points
index|[
literal|2
index|]
init|=
block|{
name|QPoint
argument_list|(
name|fullRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|fullRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
argument|fullRect.right() -
literal|1
argument_list|,
argument|fullRect.top() +
literal|1
argument_list|)
block|}
decl_stmt|;
name|painter
operator|->
name|drawPoints
argument_list|(
name|points
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
comment|// alpha corners
name|painter
operator|->
name|setPen
argument_list|(
name|titleBarAlphaCorner
argument_list|)
expr_stmt|;
block|{
specifier|const
name|QPoint
name|points
index|[
literal|4
index|]
init|=
block|{
name|QPoint
argument_list|(
name|fullRect
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|fullRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
name|fullRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|fullRect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|)
block|,
name|QPoint
argument_list|(
name|fullRect
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|fullRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
argument|fullRect.right() -
literal|1
argument_list|,
argument|fullRect.top() +
literal|2
argument_list|)
block|}
decl_stmt|;
name|painter
operator|->
name|drawPoints
argument_list|(
name|points
argument_list|,
literal|4
argument_list|)
expr_stmt|;
block|}
comment|// inner top line
name|painter
operator|->
name|setPen
argument_list|(
name|titleBarInnerTopLine
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|fullRect
operator|.
name|left
argument_list|()
operator|+
literal|3
argument_list|,
name|fullRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|fullRect
operator|.
name|right
argument_list|()
operator|-
literal|3
argument_list|,
name|fullRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
comment|// inner inner top line
name|painter
operator|->
name|setPen
argument_list|(
name|titleBarInnerInnerTopLine
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|fullRect
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|fullRect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|,
name|fullRect
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|fullRect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|)
expr_stmt|;
comment|// left and right inner
name|painter
operator|->
name|setPen
argument_list|(
name|leftCorner
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|fullRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|fullRect
operator|.
name|top
argument_list|()
operator|+
literal|3
argument_list|,
name|fullRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|fullRect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|rightCorner
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|fullRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|fullRect
operator|.
name|top
argument_list|()
operator|+
literal|3
argument_list|,
name|fullRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|fullRect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|titleBar
operator|->
name|titleBarState
operator|&
name|Qt
operator|::
name|WindowMinimized
condition|)
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|titleBarFrameBorder
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|fullRect
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|fullRect
operator|.
name|bottom
argument_list|()
argument_list|,
name|fullRect
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|fullRect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
block|{
specifier|const
name|QPoint
name|points
index|[
literal|2
index|]
init|=
block|{
name|QPoint
argument_list|(
name|fullRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|fullRect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
argument|fullRect.right() -
literal|1
argument_list|,
argument|fullRect.bottom() -
literal|1
argument_list|)
block|}
decl_stmt|;
name|painter
operator|->
name|drawPoints
argument_list|(
name|points
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|setPen
argument_list|(
name|rightCorner
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|fullRect
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|fullRect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|,
name|fullRect
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|fullRect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|titleBarAlphaCorner
argument_list|)
expr_stmt|;
block|{
specifier|const
name|QPoint
name|points
index|[
literal|4
index|]
init|=
block|{
name|QPoint
argument_list|(
name|fullRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|fullRect
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
block|,
name|QPoint
argument_list|(
name|fullRect
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|fullRect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
name|fullRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|fullRect
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
block|,
name|QPoint
argument_list|(
argument|fullRect.right() -
literal|2
argument_list|,
argument|fullRect.bottom() -
literal|1
argument_list|)
block|}
decl_stmt|;
name|painter
operator|->
name|drawPoints
argument_list|(
name|points
argument_list|,
literal|4
argument_list|)
expr_stmt|;
block|}
block|}
comment|// draw title
name|QRect
name|textRect
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_TitleBar
argument_list|,
name|titleBar
argument_list|,
name|SC_TitleBarLabel
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|QFont
name|font
init|=
name|painter
operator|->
name|font
argument_list|()
decl_stmt|;
name|font
operator|.
name|setBold
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setFont
argument_list|(
name|font
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|titleBar
operator|->
name|palette
operator|.
name|text
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
comment|// Attempt to align left if there is not enough room for the title
comment|// text. Otherwise, align center. QWorkspace does elliding for us,
comment|// and it doesn't know about the bold title, so we need to work
comment|// around some of the width mismatches.
name|bool
name|tooWide
init|=
operator|(
name|QFontMetrics
argument_list|(
name|font
argument_list|)
operator|.
name|width
argument_list|(
name|titleBar
operator|->
name|text
argument_list|)
operator|>
name|textRect
operator|.
name|width
argument_list|()
operator|)
decl_stmt|;
name|QTextOption
name|option
argument_list|(
operator|(
name|tooWide
condition|?
name|Qt
operator|::
name|AlignLeft
else|:
name|Qt
operator|::
name|AlignHCenter
operator|)
operator||
name|Qt
operator|::
name|AlignVCenter
argument_list|)
decl_stmt|;
name|option
operator|.
name|setWrapMode
argument_list|(
name|QTextOption
operator|::
name|NoWrap
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawText
argument_list|(
name|textRect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|titleBar
operator|->
name|text
argument_list|,
name|option
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|titleBar
operator|->
name|palette
operator|.
name|highlightedText
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawText
argument_list|(
name|textRect
argument_list|,
name|titleBar
operator|->
name|text
argument_list|,
name|option
argument_list|)
expr_stmt|;
block|}
comment|// min button
if|if
condition|(
operator|(
name|titleBar
operator|->
name|subControls
operator|&
name|SC_TitleBarMinButton
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowMinimizeButtonHint
operator|)
operator|&&
operator|!
operator|(
name|titleBar
operator|->
name|titleBarState
operator|&
name|Qt
operator|::
name|WindowMinimized
operator|)
condition|)
block|{
name|bool
name|hover
init|=
operator|(
name|titleBar
operator|->
name|activeSubControls
operator|&
name|SC_TitleBarMinButton
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|state
operator|&
name|State_MouseOver
operator|)
decl_stmt|;
name|bool
name|sunken
init|=
operator|(
name|titleBar
operator|->
name|activeSubControls
operator|&
name|SC_TitleBarMinButton
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|state
operator|&
name|State_Sunken
operator|)
decl_stmt|;
name|QRect
name|minButtonRect
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_TitleBar
argument_list|,
name|titleBar
argument_list|,
name|SC_TitleBarMinButton
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|qt_plastique_draw_mdibutton
argument_list|(
name|painter
argument_list|,
name|titleBar
argument_list|,
name|minButtonRect
argument_list|,
name|hover
argument_list|,
name|sunken
argument_list|)
expr_stmt|;
name|int
name|xoffset
init|=
name|minButtonRect
operator|.
name|width
argument_list|()
operator|/
literal|3
decl_stmt|;
name|int
name|yoffset
init|=
name|minButtonRect
operator|.
name|height
argument_list|()
operator|/
literal|3
decl_stmt|;
name|QRect
name|minButtonIconRect
argument_list|(
name|minButtonRect
operator|.
name|left
argument_list|()
operator|+
name|xoffset
argument_list|,
name|minButtonRect
operator|.
name|top
argument_list|()
operator|+
name|yoffset
argument_list|,
name|minButtonRect
operator|.
name|width
argument_list|()
operator|-
name|xoffset
operator|*
literal|2
argument_list|,
name|minButtonRect
operator|.
name|height
argument_list|()
operator|-
name|yoffset
operator|*
literal|2
argument_list|)
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|textColor
argument_list|)
expr_stmt|;
block|{
specifier|const
name|QLine
name|lines
index|[
literal|2
index|]
init|=
block|{
name|QLine
argument_list|(
name|minButtonIconRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|-
literal|2
argument_list|,
name|minButtonIconRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|+
literal|3
argument_list|,
name|minButtonIconRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|+
literal|3
argument_list|,
name|minButtonIconRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|+
literal|3
argument_list|)
block|,
name|QLine
argument_list|(
argument|minButtonIconRect.center().x() -
literal|2
argument_list|,
argument|minButtonIconRect.center().y() +
literal|4
argument_list|,
argument|minButtonIconRect.center().x() +
literal|3
argument_list|,
argument|minButtonIconRect.center().y() +
literal|4
argument_list|)
block|}
decl_stmt|;
name|painter
operator|->
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|setPen
argument_list|(
name|textAlphaColor
argument_list|)
expr_stmt|;
block|{
specifier|const
name|QLine
name|lines
index|[
literal|2
index|]
init|=
block|{
name|QLine
argument_list|(
name|minButtonIconRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|-
literal|3
argument_list|,
name|minButtonIconRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|+
literal|3
argument_list|,
name|minButtonIconRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|-
literal|3
argument_list|,
name|minButtonIconRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|+
literal|4
argument_list|)
block|,
name|QLine
argument_list|(
argument|minButtonIconRect.center().x() +
literal|4
argument_list|,
argument|minButtonIconRect.center().y() +
literal|3
argument_list|,
argument|minButtonIconRect.center().x() +
literal|4
argument_list|,
argument|minButtonIconRect.center().y() +
literal|4
argument_list|)
block|}
decl_stmt|;
name|painter
operator|->
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
block|}
comment|// max button
if|if
condition|(
operator|(
name|titleBar
operator|->
name|subControls
operator|&
name|SC_TitleBarMaxButton
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowMaximizeButtonHint
operator|)
operator|&&
operator|!
operator|(
name|titleBar
operator|->
name|titleBarState
operator|&
name|Qt
operator|::
name|WindowMaximized
operator|)
condition|)
block|{
name|bool
name|hover
init|=
operator|(
name|titleBar
operator|->
name|activeSubControls
operator|&
name|SC_TitleBarMaxButton
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|state
operator|&
name|State_MouseOver
operator|)
decl_stmt|;
name|bool
name|sunken
init|=
operator|(
name|titleBar
operator|->
name|activeSubControls
operator|&
name|SC_TitleBarMaxButton
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|state
operator|&
name|State_Sunken
operator|)
decl_stmt|;
name|QRect
name|maxButtonRect
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_TitleBar
argument_list|,
name|titleBar
argument_list|,
name|SC_TitleBarMaxButton
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|qt_plastique_draw_mdibutton
argument_list|(
name|painter
argument_list|,
name|titleBar
argument_list|,
name|maxButtonRect
argument_list|,
name|hover
argument_list|,
name|sunken
argument_list|)
expr_stmt|;
name|int
name|xoffset
init|=
name|maxButtonRect
operator|.
name|width
argument_list|()
operator|/
literal|3
decl_stmt|;
name|int
name|yoffset
init|=
name|maxButtonRect
operator|.
name|height
argument_list|()
operator|/
literal|3
decl_stmt|;
name|QRect
name|maxButtonIconRect
argument_list|(
name|maxButtonRect
operator|.
name|left
argument_list|()
operator|+
name|xoffset
argument_list|,
name|maxButtonRect
operator|.
name|top
argument_list|()
operator|+
name|yoffset
argument_list|,
name|maxButtonRect
operator|.
name|width
argument_list|()
operator|-
name|xoffset
operator|*
literal|2
argument_list|,
name|maxButtonRect
operator|.
name|height
argument_list|()
operator|-
name|yoffset
operator|*
literal|2
argument_list|)
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|textColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|maxButtonIconRect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|maxButtonIconRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|maxButtonIconRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|maxButtonIconRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|maxButtonIconRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|textAlphaColor
argument_list|)
expr_stmt|;
specifier|const
name|QPoint
name|points
index|[
literal|4
index|]
init|=
block|{
name|maxButtonIconRect
operator|.
name|topLeft
argument_list|()
block|,
name|maxButtonIconRect
operator|.
name|topRight
argument_list|()
block|,
name|maxButtonIconRect
operator|.
name|bottomLeft
argument_list|()
block|,
name|maxButtonIconRect
operator|.
name|bottomRight
argument_list|()
block|}
decl_stmt|;
name|painter
operator|->
name|drawPoints
argument_list|(
name|points
argument_list|,
literal|4
argument_list|)
expr_stmt|;
block|}
comment|// close button
if|if
condition|(
name|titleBar
operator|->
name|subControls
operator|&
name|SC_TitleBarCloseButton
operator|&&
name|titleBar
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowSystemMenuHint
condition|)
block|{
name|bool
name|hover
init|=
operator|(
name|titleBar
operator|->
name|activeSubControls
operator|&
name|SC_TitleBarCloseButton
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|state
operator|&
name|State_MouseOver
operator|)
decl_stmt|;
name|bool
name|sunken
init|=
operator|(
name|titleBar
operator|->
name|activeSubControls
operator|&
name|SC_TitleBarCloseButton
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|state
operator|&
name|State_Sunken
operator|)
decl_stmt|;
name|QRect
name|closeButtonRect
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_TitleBar
argument_list|,
name|titleBar
argument_list|,
name|SC_TitleBarCloseButton
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|qt_plastique_draw_mdibutton
argument_list|(
name|painter
argument_list|,
name|titleBar
argument_list|,
name|closeButtonRect
argument_list|,
name|hover
argument_list|,
name|sunken
argument_list|)
expr_stmt|;
name|int
name|xoffset
init|=
name|closeButtonRect
operator|.
name|width
argument_list|()
operator|/
literal|3
decl_stmt|;
name|int
name|yoffset
init|=
name|closeButtonRect
operator|.
name|height
argument_list|()
operator|/
literal|3
decl_stmt|;
name|QRect
name|closeIconRect
argument_list|(
name|closeButtonRect
operator|.
name|left
argument_list|()
operator|+
name|xoffset
argument_list|,
name|closeButtonRect
operator|.
name|top
argument_list|()
operator|+
name|yoffset
argument_list|,
name|closeButtonRect
operator|.
name|width
argument_list|()
operator|-
name|xoffset
operator|*
literal|2
argument_list|,
name|closeButtonRect
operator|.
name|height
argument_list|()
operator|-
name|yoffset
operator|*
literal|2
argument_list|)
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|textAlphaColor
argument_list|)
expr_stmt|;
block|{
specifier|const
name|QLine
name|lines
index|[
literal|4
index|]
init|=
block|{
name|QLine
argument_list|(
name|closeIconRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|closeIconRect
operator|.
name|top
argument_list|()
argument_list|,
name|closeIconRect
operator|.
name|right
argument_list|()
argument_list|,
name|closeIconRect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
block|,
name|QLine
argument_list|(
name|closeIconRect
operator|.
name|left
argument_list|()
argument_list|,
name|closeIconRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|closeIconRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|closeIconRect
operator|.
name|bottom
argument_list|()
argument_list|)
block|,
name|QLine
argument_list|(
name|closeIconRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|closeIconRect
operator|.
name|top
argument_list|()
argument_list|,
name|closeIconRect
operator|.
name|left
argument_list|()
argument_list|,
name|closeIconRect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
block|,
name|QLine
argument_list|(
argument|closeIconRect.right()
argument_list|,
argument|closeIconRect.top() +
literal|1
argument_list|,
argument|closeIconRect.left() +
literal|1
argument_list|,
argument|closeIconRect.bottom()
argument_list|)
block|}
decl_stmt|;
name|painter
operator|->
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|4
argument_list|)
expr_stmt|;
specifier|const
name|QPoint
name|points
index|[
literal|4
index|]
init|=
block|{
name|closeIconRect
operator|.
name|topLeft
argument_list|()
block|,
name|closeIconRect
operator|.
name|topRight
argument_list|()
block|,
name|closeIconRect
operator|.
name|bottomLeft
argument_list|()
block|,
name|closeIconRect
operator|.
name|bottomRight
argument_list|()
block|}
decl_stmt|;
name|painter
operator|->
name|drawPoints
argument_list|(
name|points
argument_list|,
literal|4
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|setPen
argument_list|(
name|textColor
argument_list|)
expr_stmt|;
block|{
specifier|const
name|QLine
name|lines
index|[
literal|2
index|]
init|=
block|{
name|QLine
argument_list|(
name|closeIconRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|closeIconRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|closeIconRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|closeIconRect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
block|,
name|QLine
argument_list|(
argument|closeIconRect.left() +
literal|1
argument_list|,
argument|closeIconRect.bottom() -
literal|1
argument_list|,
argument|closeIconRect.right() -
literal|1
argument_list|,
argument|closeIconRect.top() +
literal|1
argument_list|)
block|}
decl_stmt|;
name|painter
operator|->
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
block|}
comment|// normalize button
if|if
condition|(
operator|(
name|titleBar
operator|->
name|subControls
operator|&
name|SC_TitleBarNormalButton
operator|)
operator|&&
operator|(
operator|(
operator|(
name|titleBar
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowMinimizeButtonHint
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|titleBarState
operator|&
name|Qt
operator|::
name|WindowMinimized
operator|)
operator|)
operator|||
operator|(
operator|(
name|titleBar
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowMaximizeButtonHint
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|titleBarState
operator|&
name|Qt
operator|::
name|WindowMaximized
operator|)
operator|)
operator|)
condition|)
block|{
name|bool
name|hover
init|=
operator|(
name|titleBar
operator|->
name|activeSubControls
operator|&
name|SC_TitleBarNormalButton
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|state
operator|&
name|State_MouseOver
operator|)
decl_stmt|;
name|bool
name|sunken
init|=
operator|(
name|titleBar
operator|->
name|activeSubControls
operator|&
name|SC_TitleBarNormalButton
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|state
operator|&
name|State_Sunken
operator|)
decl_stmt|;
name|QRect
name|normalButtonRect
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_TitleBar
argument_list|,
name|titleBar
argument_list|,
name|SC_TitleBarNormalButton
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|qt_plastique_draw_mdibutton
argument_list|(
name|painter
argument_list|,
name|titleBar
argument_list|,
name|normalButtonRect
argument_list|,
name|hover
argument_list|,
name|sunken
argument_list|)
expr_stmt|;
name|int
name|xoffset
init|=
name|int
argument_list|(
name|normalButtonRect
operator|.
name|width
argument_list|()
operator|/
literal|3.5
argument_list|)
decl_stmt|;
name|int
name|yoffset
init|=
name|int
argument_list|(
name|normalButtonRect
operator|.
name|height
argument_list|()
operator|/
literal|3.5
argument_list|)
decl_stmt|;
name|QRect
name|normalButtonIconRect
argument_list|(
name|normalButtonRect
operator|.
name|left
argument_list|()
operator|+
name|xoffset
argument_list|,
name|normalButtonRect
operator|.
name|top
argument_list|()
operator|+
name|yoffset
argument_list|,
name|normalButtonRect
operator|.
name|width
argument_list|()
operator|-
name|xoffset
operator|*
literal|2
argument_list|,
name|normalButtonRect
operator|.
name|height
argument_list|()
operator|-
name|yoffset
operator|*
literal|2
argument_list|)
decl_stmt|;
name|QRect
name|frontWindowRect
init|=
name|normalButtonIconRect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|,
operator|-
literal|3
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|textColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|frontWindowRect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|frontWindowRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|frontWindowRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|frontWindowRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|frontWindowRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|textAlphaColor
argument_list|)
expr_stmt|;
block|{
specifier|const
name|QPoint
name|points
index|[
literal|4
index|]
init|=
block|{
name|frontWindowRect
operator|.
name|topLeft
argument_list|()
block|,
name|frontWindowRect
operator|.
name|topRight
argument_list|()
block|,
name|frontWindowRect
operator|.
name|bottomLeft
argument_list|()
block|,
name|frontWindowRect
operator|.
name|bottomRight
argument_list|()
block|}
decl_stmt|;
name|painter
operator|->
name|drawPoints
argument_list|(
name|points
argument_list|,
literal|4
argument_list|)
expr_stmt|;
block|}
name|QRect
name|backWindowRect
init|=
name|normalButtonIconRect
operator|.
name|adjusted
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|3
argument_list|)
decl_stmt|;
name|QRegion
name|clipRegion
init|=
name|backWindowRect
decl_stmt|;
name|clipRegion
operator|-=
name|frontWindowRect
expr_stmt|;
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
name|painter
operator|->
name|setClipRegion
argument_list|(
name|clipRegion
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|textColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|backWindowRect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|backWindowRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|backWindowRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|backWindowRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|backWindowRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|textAlphaColor
argument_list|)
expr_stmt|;
block|{
specifier|const
name|QPoint
name|points
index|[
literal|4
index|]
init|=
block|{
name|backWindowRect
operator|.
name|topLeft
argument_list|()
block|,
name|backWindowRect
operator|.
name|topRight
argument_list|()
block|,
name|backWindowRect
operator|.
name|bottomLeft
argument_list|()
block|,
name|backWindowRect
operator|.
name|bottomRight
argument_list|()
block|}
decl_stmt|;
name|painter
operator|->
name|drawPoints
argument_list|(
name|points
argument_list|,
literal|4
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
comment|// context help button
if|if
condition|(
name|titleBar
operator|->
name|subControls
operator|&
name|SC_TitleBarContextHelpButton
operator|&&
operator|(
name|titleBar
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowContextHelpButtonHint
operator|)
condition|)
block|{
name|bool
name|hover
init|=
operator|(
name|titleBar
operator|->
name|activeSubControls
operator|&
name|SC_TitleBarContextHelpButton
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|state
operator|&
name|State_MouseOver
operator|)
decl_stmt|;
name|bool
name|sunken
init|=
operator|(
name|titleBar
operator|->
name|activeSubControls
operator|&
name|SC_TitleBarContextHelpButton
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|state
operator|&
name|State_Sunken
operator|)
decl_stmt|;
name|QRect
name|contextHelpButtonRect
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_TitleBar
argument_list|,
name|titleBar
argument_list|,
name|SC_TitleBarContextHelpButton
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|qt_plastique_draw_mdibutton
argument_list|(
name|painter
argument_list|,
name|titleBar
argument_list|,
name|contextHelpButtonRect
argument_list|,
name|hover
argument_list|,
name|sunken
argument_list|)
expr_stmt|;
name|QColor
name|blend
decl_stmt|;
comment|// ### Use palette colors
if|if
condition|(
name|active
condition|)
block|{
name|blend
operator|=
name|mergedColors
argument_list|(
name|QColor
argument_list|(
name|hover
condition|?
literal|0x7d8bb1
else|:
literal|0x55689a
argument_list|)
argument_list|,
name|QColor
argument_list|(
name|hover
condition|?
literal|0x939ebe
else|:
literal|0x7381ab
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|blend
operator|=
name|mergedColors
argument_list|(
name|QColor
argument_list|(
name|hover
condition|?
literal|0x9e9e9e
else|:
literal|0x818181
argument_list|)
argument_list|,
name|QColor
argument_list|(
name|hover
condition|?
literal|0xababab
else|:
literal|0x929292
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QImage
name|image
argument_list|(
name|qt_titlebar_context_help
argument_list|)
decl_stmt|;
name|image
operator|.
name|setColor
argument_list|(
literal|4
argument_list|,
name|textColor
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
name|image
operator|.
name|setColor
argument_list|(
literal|3
argument_list|,
name|mergedColors
argument_list|(
name|blend
argument_list|,
name|textColor
argument_list|,
literal|30
argument_list|)
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
name|image
operator|.
name|setColor
argument_list|(
literal|2
argument_list|,
name|mergedColors
argument_list|(
name|blend
argument_list|,
name|textColor
argument_list|,
literal|70
argument_list|)
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
name|image
operator|.
name|setColor
argument_list|(
literal|1
argument_list|,
name|mergedColors
argument_list|(
name|blend
argument_list|,
name|textColor
argument_list|,
literal|90
argument_list|)
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawImage
argument_list|(
name|contextHelpButtonRect
argument_list|,
name|image
argument_list|)
expr_stmt|;
block|}
comment|// shade button
if|if
condition|(
name|titleBar
operator|->
name|subControls
operator|&
name|SC_TitleBarShadeButton
condition|)
block|{
name|bool
name|hover
init|=
operator|(
name|titleBar
operator|->
name|activeSubControls
operator|&
name|SC_TitleBarShadeButton
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|state
operator|&
name|State_MouseOver
operator|)
decl_stmt|;
name|bool
name|sunken
init|=
operator|(
name|titleBar
operator|->
name|activeSubControls
operator|&
name|SC_TitleBarShadeButton
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|state
operator|&
name|State_Sunken
operator|)
decl_stmt|;
name|QRect
name|shadeButtonRect
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_TitleBar
argument_list|,
name|titleBar
argument_list|,
name|SC_TitleBarShadeButton
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|qt_plastique_draw_mdibutton
argument_list|(
name|painter
argument_list|,
name|titleBar
argument_list|,
name|shadeButtonRect
argument_list|,
name|hover
argument_list|,
name|sunken
argument_list|)
expr_stmt|;
name|int
name|xoffset
init|=
name|shadeButtonRect
operator|.
name|width
argument_list|()
operator|/
literal|3
decl_stmt|;
name|int
name|yoffset
init|=
name|shadeButtonRect
operator|.
name|height
argument_list|()
operator|/
literal|3
decl_stmt|;
name|QRect
name|shadeButtonIconRect
argument_list|(
name|shadeButtonRect
operator|.
name|left
argument_list|()
operator|+
name|xoffset
argument_list|,
name|shadeButtonRect
operator|.
name|top
argument_list|()
operator|+
name|yoffset
argument_list|,
name|shadeButtonRect
operator|.
name|width
argument_list|()
operator|-
name|xoffset
operator|*
literal|2
argument_list|,
name|shadeButtonRect
operator|.
name|height
argument_list|()
operator|-
name|yoffset
operator|*
literal|2
argument_list|)
decl_stmt|;
name|QPainterPath
name|path
argument_list|(
name|shadeButtonIconRect
operator|.
name|bottomLeft
argument_list|()
argument_list|)
decl_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|shadeButtonIconRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|shadeButtonIconRect
operator|.
name|bottom
argument_list|()
operator|-
name|shadeButtonIconRect
operator|.
name|height
argument_list|()
operator|/
literal|2
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|shadeButtonIconRect
operator|.
name|bottomRight
argument_list|()
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|shadeButtonIconRect
operator|.
name|bottomLeft
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|textAlphaColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|textColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPath
argument_list|(
name|path
argument_list|)
expr_stmt|;
block|}
comment|// unshade button
if|if
condition|(
name|titleBar
operator|->
name|subControls
operator|&
name|SC_TitleBarUnshadeButton
condition|)
block|{
name|bool
name|hover
init|=
operator|(
name|titleBar
operator|->
name|activeSubControls
operator|&
name|SC_TitleBarUnshadeButton
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|state
operator|&
name|State_MouseOver
operator|)
decl_stmt|;
name|bool
name|sunken
init|=
operator|(
name|titleBar
operator|->
name|activeSubControls
operator|&
name|SC_TitleBarUnshadeButton
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|state
operator|&
name|State_Sunken
operator|)
decl_stmt|;
name|QRect
name|unshadeButtonRect
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_TitleBar
argument_list|,
name|titleBar
argument_list|,
name|SC_TitleBarUnshadeButton
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|qt_plastique_draw_mdibutton
argument_list|(
name|painter
argument_list|,
name|titleBar
argument_list|,
name|unshadeButtonRect
argument_list|,
name|hover
argument_list|,
name|sunken
argument_list|)
expr_stmt|;
name|int
name|xoffset
init|=
name|unshadeButtonRect
operator|.
name|width
argument_list|()
operator|/
literal|3
decl_stmt|;
name|int
name|yoffset
init|=
name|unshadeButtonRect
operator|.
name|height
argument_list|()
operator|/
literal|3
decl_stmt|;
name|QRect
name|unshadeButtonIconRect
argument_list|(
name|unshadeButtonRect
operator|.
name|left
argument_list|()
operator|+
name|xoffset
argument_list|,
name|unshadeButtonRect
operator|.
name|top
argument_list|()
operator|+
name|yoffset
argument_list|,
name|unshadeButtonRect
operator|.
name|width
argument_list|()
operator|-
name|xoffset
operator|*
literal|2
argument_list|,
name|unshadeButtonRect
operator|.
name|height
argument_list|()
operator|-
name|yoffset
operator|*
literal|2
argument_list|)
decl_stmt|;
name|int
name|midY
init|=
name|unshadeButtonIconRect
operator|.
name|bottom
argument_list|()
operator|-
name|unshadeButtonIconRect
operator|.
name|height
argument_list|()
operator|/
literal|2
decl_stmt|;
name|QPainterPath
name|path
argument_list|(
name|QPoint
argument_list|(
name|unshadeButtonIconRect
operator|.
name|left
argument_list|()
argument_list|,
name|midY
argument_list|)
argument_list|)
decl_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|unshadeButtonIconRect
operator|.
name|right
argument_list|()
argument_list|,
name|midY
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|unshadeButtonIconRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|unshadeButtonIconRect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|unshadeButtonIconRect
operator|.
name|left
argument_list|()
argument_list|,
name|midY
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|textAlphaColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|textColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPath
argument_list|(
name|path
argument_list|)
expr_stmt|;
block|}
comment|// from qwindowsstyle.cpp
if|if
condition|(
operator|(
name|titleBar
operator|->
name|subControls
operator|&
name|SC_TitleBarSysMenu
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowSystemMenuHint
operator|)
condition|)
block|{
name|bool
name|hover
init|=
operator|(
name|titleBar
operator|->
name|activeSubControls
operator|&
name|SC_TitleBarSysMenu
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|state
operator|&
name|State_MouseOver
operator|)
decl_stmt|;
name|bool
name|sunken
init|=
operator|(
name|titleBar
operator|->
name|activeSubControls
operator|&
name|SC_TitleBarSysMenu
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|state
operator|&
name|State_Sunken
operator|)
decl_stmt|;
name|QRect
name|iconRect
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_TitleBar
argument_list|,
name|titleBar
argument_list|,
name|SC_TitleBarSysMenu
argument_list|,
name|widget
argument_list|)
decl_stmt|;
if|if
condition|(
name|hover
condition|)
name|qt_plastique_draw_mdibutton
argument_list|(
name|painter
argument_list|,
name|titleBar
argument_list|,
name|iconRect
argument_list|,
name|hover
argument_list|,
name|sunken
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|titleBar
operator|->
name|icon
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|titleBar
operator|->
name|icon
operator|.
name|paint
argument_list|(
name|painter
argument_list|,
name|iconRect
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QStyleOption
name|tool
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|tool
operator|.
name|palette
operator|=
name|titleBar
operator|->
name|palette
expr_stmt|;
name|QPixmap
name|pm
init|=
name|standardPixmap
argument_list|(
name|SP_TitleBarMenuButton
argument_list|,
operator|&
name|tool
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|tool
operator|.
name|rect
operator|=
name|iconRect
expr_stmt|;
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawItemPixmap
argument_list|(
name|painter
argument_list|,
name|iconRect
argument_list|,
name|Qt
operator|::
name|AlignCenter
argument_list|,
name|pm
argument_list|)
expr_stmt|;
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
break|break;
ifndef|#
directive|ifndef
name|QT_NO_DIAL
case|case
name|CC_Dial
case|:
if|if
condition|(
specifier|const
name|QStyleOptionSlider
modifier|*
name|dial
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSlider
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
name|QStyleHelper
operator|::
name|drawDial
argument_list|(
name|dial
argument_list|,
name|painter
argument_list|)
expr_stmt|;
break|break;
endif|#
directive|endif
comment|// QT_NO_DIAL
default|default:
name|QWindowsStyle
operator|::
name|drawComplexControl
argument_list|(
name|control
argument_list|,
name|option
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
end_function
begin_comment
comment|/*!   \reimp */
end_comment
begin_function
DECL|function|sizeFromContents
name|QSize
name|QPlastiqueStyle
operator|::
name|sizeFromContents
parameter_list|(
name|ContentsType
name|type
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|option
parameter_list|,
specifier|const
name|QSize
modifier|&
name|size
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
name|QSize
name|newSize
init|=
name|QWindowsStyle
operator|::
name|sizeFromContents
argument_list|(
name|type
argument_list|,
name|option
argument_list|,
name|size
argument_list|,
name|widget
argument_list|)
decl_stmt|;
switch|switch
condition|(
name|type
condition|)
block|{
case|case
name|CT_RadioButton
case|:
operator|++
name|newSize
operator|.
name|rheight
argument_list|()
expr_stmt|;
operator|++
name|newSize
operator|.
name|rwidth
argument_list|()
expr_stmt|;
break|break;
ifndef|#
directive|ifndef
name|QT_NO_SLIDER
case|case
name|CT_Slider
case|:
if|if
condition|(
specifier|const
name|QStyleOptionSlider
modifier|*
name|slider
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSlider
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|int
name|tickSize
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_SliderTickmarkOffset
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
decl_stmt|;
if|if
condition|(
name|slider
operator|->
name|tickPosition
operator|&
name|QSlider
operator|::
name|TicksBelow
condition|)
block|{
if|if
condition|(
name|slider
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
name|newSize
operator|.
name|rheight
argument_list|()
operator|+=
name|tickSize
expr_stmt|;
else|else
name|newSize
operator|.
name|rwidth
argument_list|()
operator|+=
name|tickSize
expr_stmt|;
block|}
if|if
condition|(
name|slider
operator|->
name|tickPosition
operator|&
name|QSlider
operator|::
name|TicksAbove
condition|)
block|{
if|if
condition|(
name|slider
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
name|newSize
operator|.
name|rheight
argument_list|()
operator|+=
name|tickSize
expr_stmt|;
else|else
name|newSize
operator|.
name|rwidth
argument_list|()
operator|+=
name|tickSize
expr_stmt|;
block|}
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_SLIDER
ifndef|#
directive|ifndef
name|QT_NO_SCROLLBAR
case|case
name|CT_ScrollBar
case|:
if|if
condition|(
specifier|const
name|QStyleOptionSlider
modifier|*
name|scrollBar
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSlider
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|int
name|scrollBarExtent
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_ScrollBarExtent
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|int
name|scrollBarSliderMinimum
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_ScrollBarSliderMin
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
decl_stmt|;
if|if
condition|(
name|scrollBar
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
block|{
name|newSize
operator|=
name|QSize
argument_list|(
name|scrollBarExtent
operator|*
literal|3
operator|+
name|scrollBarSliderMinimum
argument_list|,
name|scrollBarExtent
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|newSize
operator|=
name|QSize
argument_list|(
name|scrollBarExtent
argument_list|,
name|scrollBarExtent
operator|*
literal|3
operator|+
name|scrollBarSliderMinimum
argument_list|)
expr_stmt|;
block|}
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_SCROLLBAR
ifndef|#
directive|ifndef
name|QT_NO_SPINBOX
case|case
name|CT_SpinBox
case|:
comment|// Make sure the size is odd
name|newSize
operator|.
name|setHeight
argument_list|(
name|sizeFromContents
argument_list|(
name|CT_LineEdit
argument_list|,
name|option
argument_list|,
name|size
argument_list|,
name|widget
argument_list|)
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
name|newSize
operator|.
name|rheight
argument_list|()
operator|-=
operator|(
operator|(
literal|1
operator|-
name|newSize
operator|.
name|rheight
argument_list|()
operator|)
operator|&
literal|1
operator|)
expr_stmt|;
break|break;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|QT_NO_TOOLBUTTON
case|case
name|CT_ToolButton
case|:
name|newSize
operator|.
name|rheight
argument_list|()
operator|+=
literal|3
expr_stmt|;
name|newSize
operator|.
name|rwidth
argument_list|()
operator|+=
literal|3
expr_stmt|;
break|break;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|QT_NO_COMBOBOX
case|case
name|CT_ComboBox
case|:
name|newSize
operator|=
name|sizeFromContents
argument_list|(
name|CT_PushButton
argument_list|,
name|option
argument_list|,
name|size
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|newSize
operator|.
name|rwidth
argument_list|()
operator|+=
literal|30
expr_stmt|;
comment|// Make room for drop-down indicator
name|newSize
operator|.
name|rheight
argument_list|()
operator|+=
literal|4
expr_stmt|;
break|break;
endif|#
directive|endif
case|case
name|CT_MenuItem
case|:
if|if
condition|(
specifier|const
name|QStyleOptionMenuItem
modifier|*
name|menuItem
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionMenuItem
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
if|if
condition|(
name|menuItem
operator|->
name|menuItemType
operator|==
name|QStyleOptionMenuItem
operator|::
name|Separator
condition|)
name|newSize
operator|.
name|setHeight
argument_list|(
name|menuItem
operator|->
name|text
operator|.
name|isEmpty
argument_list|()
condition|?
literal|2
else|:
name|menuItem
operator|->
name|fontMetrics
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|CT_MenuBarItem
case|:
name|newSize
operator|.
name|setHeight
argument_list|(
name|newSize
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
break|break;
default|default:
break|break;
block|}
return|return
name|newSize
return|;
block|}
end_function
begin_comment
comment|/*!   \reimp */
end_comment
begin_function
DECL|function|subElementRect
name|QRect
name|QPlastiqueStyle
operator|::
name|subElementRect
parameter_list|(
name|SubElement
name|element
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|option
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
name|QRect
name|rect
decl_stmt|;
switch|switch
condition|(
name|element
condition|)
block|{
case|case
name|SE_RadioButtonIndicator
case|:
name|rect
operator|=
name|visualRect
argument_list|(
name|option
operator|->
name|direction
argument_list|,
name|option
operator|->
name|rect
argument_list|,
name|QWindowsStyle
operator|::
name|subElementRect
argument_list|(
name|element
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
argument_list|)
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
break|break;
ifndef|#
directive|ifndef
name|QT_NO_PROGRESSBAR
case|case
name|SE_ProgressBarLabel
case|:
case|case
name|SE_ProgressBarContents
case|:
case|case
name|SE_ProgressBarGroove
case|:
return|return
name|option
operator|->
name|rect
return|;
endif|#
directive|endif
comment|// QT_NO_PROGRESSBAR
default|default:
return|return
name|QWindowsStyle
operator|::
name|subElementRect
argument_list|(
name|element
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
return|;
block|}
return|return
name|visualRect
argument_list|(
name|option
operator|->
name|direction
argument_list|,
name|option
operator|->
name|rect
argument_list|,
name|rect
argument_list|)
return|;
block|}
end_function
begin_comment
comment|/*!   \reimp */
end_comment
begin_function
DECL|function|subControlRect
name|QRect
name|QPlastiqueStyle
operator|::
name|subControlRect
parameter_list|(
name|ComplexControl
name|control
parameter_list|,
specifier|const
name|QStyleOptionComplex
modifier|*
name|option
parameter_list|,
name|SubControl
name|subControl
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
name|QRect
name|rect
init|=
name|QWindowsStyle
operator|::
name|subControlRect
argument_list|(
name|control
argument_list|,
name|option
argument_list|,
name|subControl
argument_list|,
name|widget
argument_list|)
decl_stmt|;
switch|switch
condition|(
name|control
condition|)
block|{
ifndef|#
directive|ifndef
name|QT_NO_SLIDER
case|case
name|CC_Slider
case|:
if|if
condition|(
specifier|const
name|QStyleOptionSlider
modifier|*
name|slider
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSlider
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|int
name|tickSize
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_SliderTickmarkOffset
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
decl_stmt|;
switch|switch
condition|(
name|subControl
condition|)
block|{
case|case
name|SC_SliderHandle
case|:
if|if
condition|(
name|slider
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
block|{
name|rect
operator|.
name|setWidth
argument_list|(
literal|11
argument_list|)
expr_stmt|;
name|rect
operator|.
name|setHeight
argument_list|(
literal|15
argument_list|)
expr_stmt|;
name|int
name|centerY
init|=
name|slider
operator|->
name|rect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|-
name|rect
operator|.
name|height
argument_list|()
operator|/
literal|2
decl_stmt|;
if|if
condition|(
name|slider
operator|->
name|tickPosition
operator|&
name|QSlider
operator|::
name|TicksAbove
condition|)
name|centerY
operator|+=
name|tickSize
expr_stmt|;
if|if
condition|(
name|slider
operator|->
name|tickPosition
operator|&
name|QSlider
operator|::
name|TicksBelow
condition|)
name|centerY
operator|-=
name|tickSize
expr_stmt|;
name|rect
operator|.
name|moveTop
argument_list|(
name|centerY
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|rect
operator|.
name|setWidth
argument_list|(
literal|15
argument_list|)
expr_stmt|;
name|rect
operator|.
name|setHeight
argument_list|(
literal|11
argument_list|)
expr_stmt|;
name|int
name|centerX
init|=
name|slider
operator|->
name|rect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|-
name|rect
operator|.
name|width
argument_list|()
operator|/
literal|2
decl_stmt|;
if|if
condition|(
name|slider
operator|->
name|tickPosition
operator|&
name|QSlider
operator|::
name|TicksAbove
condition|)
name|centerX
operator|+=
name|tickSize
expr_stmt|;
if|if
condition|(
name|slider
operator|->
name|tickPosition
operator|&
name|QSlider
operator|::
name|TicksBelow
condition|)
name|centerX
operator|-=
name|tickSize
expr_stmt|;
name|rect
operator|.
name|moveLeft
argument_list|(
name|centerX
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|SC_SliderGroove
case|:
block|{
name|QPoint
name|grooveCenter
init|=
name|slider
operator|->
name|rect
operator|.
name|center
argument_list|()
decl_stmt|;
if|if
condition|(
name|slider
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
block|{
name|rect
operator|.
name|setHeight
argument_list|(
literal|14
argument_list|)
expr_stmt|;
operator|--
name|grooveCenter
operator|.
name|ry
argument_list|()
expr_stmt|;
if|if
condition|(
name|slider
operator|->
name|tickPosition
operator|&
name|QSlider
operator|::
name|TicksAbove
condition|)
name|grooveCenter
operator|.
name|ry
argument_list|()
operator|+=
name|tickSize
expr_stmt|;
if|if
condition|(
name|slider
operator|->
name|tickPosition
operator|&
name|QSlider
operator|::
name|TicksBelow
condition|)
name|grooveCenter
operator|.
name|ry
argument_list|()
operator|-=
name|tickSize
expr_stmt|;
block|}
else|else
block|{
name|rect
operator|.
name|setWidth
argument_list|(
literal|14
argument_list|)
expr_stmt|;
operator|--
name|grooveCenter
operator|.
name|rx
argument_list|()
expr_stmt|;
if|if
condition|(
name|slider
operator|->
name|tickPosition
operator|&
name|QSlider
operator|::
name|TicksAbove
condition|)
name|grooveCenter
operator|.
name|rx
argument_list|()
operator|+=
name|tickSize
expr_stmt|;
if|if
condition|(
name|slider
operator|->
name|tickPosition
operator|&
name|QSlider
operator|::
name|TicksBelow
condition|)
name|grooveCenter
operator|.
name|rx
argument_list|()
operator|-=
name|tickSize
expr_stmt|;
block|}
name|rect
operator|.
name|moveCenter
argument_list|(
name|grooveCenter
argument_list|)
expr_stmt|;
break|break;
block|}
default|default:
break|break;
block|}
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_SLIDER
ifndef|#
directive|ifndef
name|QT_NO_SCROLLBAR
case|case
name|CC_ScrollBar
case|:
if|if
condition|(
specifier|const
name|QStyleOptionSlider
modifier|*
name|scrollBar
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSlider
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|int
name|scrollBarExtent
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_ScrollBarExtent
argument_list|,
name|scrollBar
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|int
name|sliderMaxLength
init|=
operator|(
operator|(
name|scrollBar
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
operator|)
condition|?
name|scrollBar
operator|->
name|rect
operator|.
name|width
argument_list|()
else|:
name|scrollBar
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|)
operator|-
operator|(
name|scrollBarExtent
operator|*
literal|3
operator|)
decl_stmt|;
name|int
name|sliderMinLength
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_ScrollBarSliderMin
argument_list|,
name|scrollBar
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|int
name|sliderLength
decl_stmt|;
comment|// calculate slider length
if|if
condition|(
name|scrollBar
operator|->
name|maximum
operator|!=
name|scrollBar
operator|->
name|minimum
condition|)
block|{
name|uint
name|valueRange
init|=
name|scrollBar
operator|->
name|maximum
operator|-
name|scrollBar
operator|->
name|minimum
decl_stmt|;
name|sliderLength
operator|=
operator|(
name|scrollBar
operator|->
name|pageStep
operator|*
name|sliderMaxLength
operator|)
operator|/
operator|(
name|valueRange
operator|+
name|scrollBar
operator|->
name|pageStep
operator|)
expr_stmt|;
if|if
condition|(
name|sliderLength
argument_list|<
name|sliderMinLength
operator|||
name|valueRange
argument_list|>
name|INT_MAX
operator|/
literal|2
condition|)
name|sliderLength
operator|=
name|sliderMinLength
expr_stmt|;
if|if
condition|(
name|sliderLength
operator|>
name|sliderMaxLength
condition|)
name|sliderLength
operator|=
name|sliderMaxLength
expr_stmt|;
block|}
else|else
block|{
name|sliderLength
operator|=
name|sliderMaxLength
expr_stmt|;
block|}
name|int
name|sliderStart
init|=
name|scrollBarExtent
operator|+
name|sliderPositionFromValue
argument_list|(
name|scrollBar
operator|->
name|minimum
argument_list|,
name|scrollBar
operator|->
name|maximum
argument_list|,
name|scrollBar
operator|->
name|sliderPosition
argument_list|,
name|sliderMaxLength
operator|-
name|sliderLength
argument_list|,
name|scrollBar
operator|->
name|upsideDown
argument_list|)
decl_stmt|;
name|QRect
name|scrollBarRect
init|=
name|scrollBar
operator|->
name|rect
decl_stmt|;
switch|switch
condition|(
name|subControl
condition|)
block|{
case|case
name|SC_ScrollBarSubLine
case|:
comment|// top/left button
if|if
condition|(
name|scrollBar
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
block|{
name|rect
operator|.
name|setRect
argument_list|(
name|scrollBarRect
operator|.
name|left
argument_list|()
argument_list|,
name|scrollBarRect
operator|.
name|top
argument_list|()
argument_list|,
name|scrollBarRect
operator|.
name|width
argument_list|()
operator|-
name|scrollBarExtent
argument_list|,
name|scrollBarRect
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|rect
operator|.
name|setRect
argument_list|(
name|scrollBarRect
operator|.
name|left
argument_list|()
argument_list|,
name|scrollBarRect
operator|.
name|top
argument_list|()
argument_list|,
name|scrollBarRect
operator|.
name|width
argument_list|()
argument_list|,
name|scrollBarRect
operator|.
name|height
argument_list|()
operator|-
name|scrollBarExtent
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|SC_ScrollBarAddLine
case|:
comment|// bottom/right button
if|if
condition|(
name|scrollBar
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
block|{
name|rect
operator|.
name|setRect
argument_list|(
name|scrollBarRect
operator|.
name|right
argument_list|()
operator|-
operator|(
name|scrollBarExtent
operator|-
literal|1
operator|)
argument_list|,
name|scrollBarRect
operator|.
name|top
argument_list|()
argument_list|,
name|scrollBarExtent
argument_list|,
name|scrollBarRect
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|rect
operator|.
name|setRect
argument_list|(
name|scrollBarRect
operator|.
name|left
argument_list|()
argument_list|,
name|scrollBarRect
operator|.
name|bottom
argument_list|()
operator|-
operator|(
name|scrollBarExtent
operator|-
literal|1
operator|)
argument_list|,
name|scrollBarRect
operator|.
name|width
argument_list|()
argument_list|,
name|scrollBarExtent
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|SC_ScrollBarSubPage
case|:
if|if
condition|(
name|scrollBar
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
block|{
name|rect
operator|.
name|setRect
argument_list|(
name|scrollBarRect
operator|.
name|left
argument_list|()
operator|+
name|scrollBarExtent
argument_list|,
name|scrollBarRect
operator|.
name|top
argument_list|()
argument_list|,
name|sliderStart
operator|-
operator|(
name|scrollBarRect
operator|.
name|left
argument_list|()
operator|+
name|scrollBarExtent
operator|)
argument_list|,
name|scrollBarRect
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|rect
operator|.
name|setRect
argument_list|(
name|scrollBarRect
operator|.
name|left
argument_list|()
argument_list|,
name|scrollBarRect
operator|.
name|top
argument_list|()
operator|+
name|scrollBarExtent
argument_list|,
name|scrollBarRect
operator|.
name|width
argument_list|()
argument_list|,
name|sliderStart
operator|-
operator|(
name|scrollBarRect
operator|.
name|left
argument_list|()
operator|+
name|scrollBarExtent
operator|)
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|SC_ScrollBarAddPage
case|:
if|if
condition|(
name|scrollBar
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
name|rect
operator|.
name|setRect
argument_list|(
name|sliderStart
operator|+
name|sliderLength
argument_list|,
literal|0
argument_list|,
name|sliderMaxLength
operator|-
name|sliderStart
operator|-
name|sliderLength
operator|+
name|scrollBarExtent
argument_list|,
name|scrollBarRect
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|rect
operator|.
name|setRect
argument_list|(
literal|0
argument_list|,
name|sliderStart
operator|+
name|sliderLength
argument_list|,
name|scrollBarRect
operator|.
name|width
argument_list|()
argument_list|,
name|sliderMaxLength
operator|-
name|sliderStart
operator|-
name|sliderLength
operator|+
name|scrollBarExtent
argument_list|)
expr_stmt|;
break|break;
case|case
name|SC_ScrollBarGroove
case|:
if|if
condition|(
name|scrollBar
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
block|{
name|rect
operator|=
name|scrollBarRect
operator|.
name|adjusted
argument_list|(
name|scrollBarExtent
argument_list|,
literal|0
argument_list|,
operator|-
literal|2
operator|*
name|scrollBarExtent
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|rect
operator|=
name|scrollBarRect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
name|scrollBarExtent
argument_list|,
literal|0
argument_list|,
operator|-
literal|2
operator|*
name|scrollBarExtent
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|SC_ScrollBarSlider
case|:
if|if
condition|(
name|scrollBar
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
block|{
name|rect
operator|.
name|setRect
argument_list|(
name|sliderStart
argument_list|,
literal|0
argument_list|,
name|sliderLength
argument_list|,
name|scrollBarRect
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|rect
operator|.
name|setRect
argument_list|(
literal|0
argument_list|,
name|sliderStart
argument_list|,
name|scrollBarRect
operator|.
name|width
argument_list|()
argument_list|,
name|sliderLength
argument_list|)
expr_stmt|;
block|}
break|break;
default|default:
break|break;
block|}
name|rect
operator|=
name|visualRect
argument_list|(
name|scrollBar
operator|->
name|direction
argument_list|,
name|scrollBarRect
argument_list|,
name|rect
argument_list|)
expr_stmt|;
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_SCROLLBAR
ifndef|#
directive|ifndef
name|QT_NO_SPINBOX
case|case
name|CC_SpinBox
case|:
if|if
condition|(
specifier|const
name|QStyleOptionSpinBox
modifier|*
name|spinBox
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSpinBox
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|int
name|center
init|=
name|spinBox
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|/
literal|2
decl_stmt|;
switch|switch
condition|(
name|subControl
condition|)
block|{
case|case
name|SC_SpinBoxUp
case|:
if|if
condition|(
name|spinBox
operator|->
name|buttonSymbols
operator|==
name|QAbstractSpinBox
operator|::
name|NoButtons
condition|)
return|return
name|QRect
argument_list|()
return|;
name|rect
operator|=
name|visualRect
argument_list|(
name|spinBox
operator|->
name|direction
argument_list|,
name|spinBox
operator|->
name|rect
argument_list|,
name|rect
argument_list|)
expr_stmt|;
name|rect
operator|.
name|setRect
argument_list|(
name|spinBox
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|16
argument_list|,
name|spinBox
operator|->
name|rect
operator|.
name|top
argument_list|()
argument_list|,
literal|17
argument_list|,
name|center
operator|+
literal|1
argument_list|)
expr_stmt|;
name|rect
operator|=
name|visualRect
argument_list|(
name|spinBox
operator|->
name|direction
argument_list|,
name|spinBox
operator|->
name|rect
argument_list|,
name|rect
argument_list|)
expr_stmt|;
break|break;
case|case
name|SC_SpinBoxDown
case|:
if|if
condition|(
name|spinBox
operator|->
name|buttonSymbols
operator|==
name|QAbstractSpinBox
operator|::
name|NoButtons
condition|)
return|return
name|QRect
argument_list|()
return|;
name|rect
operator|=
name|visualRect
argument_list|(
name|spinBox
operator|->
name|direction
argument_list|,
name|spinBox
operator|->
name|rect
argument_list|,
name|rect
argument_list|)
expr_stmt|;
name|rect
operator|.
name|setRect
argument_list|(
name|spinBox
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|16
argument_list|,
name|spinBox
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
name|center
argument_list|,
literal|17
argument_list|,
name|spinBox
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
name|center
argument_list|)
expr_stmt|;
name|rect
operator|=
name|visualRect
argument_list|(
name|spinBox
operator|->
name|direction
argument_list|,
name|spinBox
operator|->
name|rect
argument_list|,
name|rect
argument_list|)
expr_stmt|;
break|break;
case|case
name|SC_SpinBoxEditField
case|:
if|if
condition|(
name|spinBox
operator|->
name|buttonSymbols
operator|!=
name|QAbstractSpinBox
operator|::
name|NoButtons
condition|)
block|{
name|rect
operator|=
name|spinBox
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|16
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|rect
operator|=
name|spinBox
operator|->
name|rect
expr_stmt|;
block|}
name|rect
operator|.
name|adjust
argument_list|(
name|blueFrameWidth
argument_list|,
name|blueFrameWidth
argument_list|,
operator|-
name|blueFrameWidth
argument_list|,
operator|-
name|blueFrameWidth
argument_list|)
expr_stmt|;
name|rect
operator|=
name|visualRect
argument_list|(
name|spinBox
operator|->
name|direction
argument_list|,
name|spinBox
operator|->
name|rect
argument_list|,
name|rect
argument_list|)
expr_stmt|;
break|break;
default|default:
break|break;
block|}
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_SPINBOX
ifndef|#
directive|ifndef
name|QT_NO_COMBOBOX
case|case
name|CC_ComboBox
case|:
switch|switch
condition|(
name|subControl
condition|)
block|{
case|case
name|SC_ComboBoxArrow
case|:
name|rect
operator|=
name|visualRect
argument_list|(
name|option
operator|->
name|direction
argument_list|,
name|option
operator|->
name|rect
argument_list|,
name|rect
argument_list|)
expr_stmt|;
name|rect
operator|.
name|setRect
argument_list|(
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|17
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|-
literal|2
argument_list|,
literal|19
argument_list|,
name|rect
operator|.
name|height
argument_list|()
operator|+
literal|4
argument_list|)
expr_stmt|;
name|rect
operator|=
name|visualRect
argument_list|(
name|option
operator|->
name|direction
argument_list|,
name|option
operator|->
name|rect
argument_list|,
name|rect
argument_list|)
expr_stmt|;
break|break;
case|case
name|SC_ComboBoxEditField
case|:
block|{
if|if
condition|(
specifier|const
name|QStyleOptionComboBox
modifier|*
name|box
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionComboBox
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|int
name|frameWidth
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_DefaultFrameWidth
argument_list|)
decl_stmt|;
name|rect
operator|=
name|visualRect
argument_list|(
name|option
operator|->
name|direction
argument_list|,
name|option
operator|->
name|rect
argument_list|,
name|rect
argument_list|)
expr_stmt|;
if|if
condition|(
name|box
operator|->
name|editable
condition|)
block|{
name|rect
operator|=
name|box
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
name|blueFrameWidth
argument_list|,
name|blueFrameWidth
argument_list|,
operator|-
name|blueFrameWidth
argument_list|,
operator|-
name|blueFrameWidth
argument_list|)
expr_stmt|;
name|rect
operator|.
name|setRight
argument_list|(
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|16
argument_list|)
expr_stmt|;
comment|// Overlaps the combobox button by 2 pixels
block|}
else|else
block|{
name|rect
operator|.
name|setRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
name|frameWidth
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
name|frameWidth
argument_list|,
name|option
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|-
literal|16
operator|-
literal|2
operator|*
name|frameWidth
argument_list|,
name|option
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
literal|2
operator|*
name|frameWidth
argument_list|)
expr_stmt|;
name|rect
operator|.
name|setLeft
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|)
expr_stmt|;
name|rect
operator|.
name|setRight
argument_list|(
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|)
expr_stmt|;
if|if
condition|(
name|box
operator|->
name|state
operator|&
operator|(
name|State_Sunken
operator||
name|State_On
operator|)
condition|)
name|rect
operator|.
name|translate
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
name|rect
operator|=
name|visualRect
argument_list|(
name|option
operator|->
name|direction
argument_list|,
name|option
operator|->
name|rect
argument_list|,
name|rect
argument_list|)
expr_stmt|;
block|}
break|break;
block|}
default|default:
break|break;
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_COMBOBOX
case|case
name|CC_TitleBar
case|:
if|if
condition|(
specifier|const
name|QStyleOptionTitleBar
modifier|*
name|tb
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionTitleBar
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|SubControl
name|sc
init|=
name|subControl
decl_stmt|;
name|QRect
modifier|&
name|ret
init|=
name|rect
decl_stmt|;
specifier|const
name|int
name|indent
init|=
literal|3
decl_stmt|;
specifier|const
name|int
name|controlTopMargin
init|=
literal|4
decl_stmt|;
specifier|const
name|int
name|controlBottomMargin
init|=
literal|3
decl_stmt|;
specifier|const
name|int
name|controlWidthMargin
init|=
literal|1
decl_stmt|;
specifier|const
name|int
name|controlHeight
init|=
name|tb
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
name|controlTopMargin
operator|-
name|controlBottomMargin
decl_stmt|;
specifier|const
name|int
name|delta
init|=
name|controlHeight
operator|+
name|controlWidthMargin
decl_stmt|;
name|int
name|offset
init|=
literal|0
decl_stmt|;
name|bool
name|isMinimized
init|=
name|tb
operator|->
name|titleBarState
operator|&
name|Qt
operator|::
name|WindowMinimized
decl_stmt|;
name|bool
name|isMaximized
init|=
name|tb
operator|->
name|titleBarState
operator|&
name|Qt
operator|::
name|WindowMaximized
decl_stmt|;
switch|switch
condition|(
name|sc
condition|)
block|{
case|case
name|SC_TitleBarLabel
case|:
if|if
condition|(
name|tb
operator|->
name|titleBarFlags
operator|&
operator|(
name|Qt
operator|::
name|WindowTitleHint
operator||
name|Qt
operator|::
name|WindowSystemMenuHint
operator|)
condition|)
block|{
name|ret
operator|=
name|tb
operator|->
name|rect
expr_stmt|;
if|if
condition|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowSystemMenuHint
condition|)
name|ret
operator|.
name|adjust
argument_list|(
name|delta
argument_list|,
literal|0
argument_list|,
operator|-
name|delta
argument_list|,
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowMinimizeButtonHint
condition|)
name|ret
operator|.
name|adjust
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
name|delta
argument_list|,
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowMaximizeButtonHint
condition|)
name|ret
operator|.
name|adjust
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
name|delta
argument_list|,
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowShadeButtonHint
condition|)
name|ret
operator|.
name|adjust
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
name|delta
argument_list|,
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowContextHelpButtonHint
condition|)
name|ret
operator|.
name|adjust
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
name|delta
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|ret
operator|.
name|adjusted
argument_list|(
name|indent
argument_list|,
literal|0
argument_list|,
operator|-
name|indent
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|SC_TitleBarContextHelpButton
case|:
if|if
condition|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowContextHelpButtonHint
condition|)
name|offset
operator|+=
name|delta
expr_stmt|;
case|case
name|SC_TitleBarMinButton
case|:
if|if
condition|(
operator|!
name|isMinimized
operator|&&
operator|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowMinimizeButtonHint
operator|)
condition|)
name|offset
operator|+=
name|delta
expr_stmt|;
elseif|else
if|if
condition|(
name|sc
operator|==
name|SC_TitleBarMinButton
condition|)
break|break;
case|case
name|SC_TitleBarNormalButton
case|:
if|if
condition|(
name|isMinimized
operator|&&
operator|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowMinimizeButtonHint
operator|)
condition|)
name|offset
operator|+=
name|delta
expr_stmt|;
elseif|else
if|if
condition|(
name|isMaximized
operator|&&
operator|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowMaximizeButtonHint
operator|)
condition|)
name|offset
operator|+=
name|delta
expr_stmt|;
elseif|else
if|if
condition|(
name|sc
operator|==
name|SC_TitleBarNormalButton
condition|)
break|break;
case|case
name|SC_TitleBarMaxButton
case|:
if|if
condition|(
operator|!
name|isMaximized
operator|&&
operator|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowMaximizeButtonHint
operator|)
condition|)
name|offset
operator|+=
name|delta
expr_stmt|;
elseif|else
if|if
condition|(
name|sc
operator|==
name|SC_TitleBarMaxButton
condition|)
break|break;
case|case
name|SC_TitleBarShadeButton
case|:
if|if
condition|(
operator|!
name|isMinimized
operator|&&
operator|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowShadeButtonHint
operator|)
condition|)
name|offset
operator|+=
name|delta
expr_stmt|;
elseif|else
if|if
condition|(
name|sc
operator|==
name|SC_TitleBarShadeButton
condition|)
break|break;
case|case
name|SC_TitleBarUnshadeButton
case|:
if|if
condition|(
name|isMinimized
operator|&&
operator|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowShadeButtonHint
operator|)
condition|)
name|offset
operator|+=
name|delta
expr_stmt|;
elseif|else
if|if
condition|(
name|sc
operator|==
name|SC_TitleBarUnshadeButton
condition|)
break|break;
case|case
name|SC_TitleBarCloseButton
case|:
if|if
condition|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowSystemMenuHint
condition|)
name|offset
operator|+=
name|delta
expr_stmt|;
elseif|else
if|if
condition|(
name|sc
operator|==
name|SC_TitleBarCloseButton
condition|)
break|break;
name|ret
operator|.
name|setRect
argument_list|(
name|tb
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
name|indent
operator|-
name|offset
argument_list|,
name|tb
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
name|controlTopMargin
argument_list|,
name|controlHeight
argument_list|,
name|controlHeight
argument_list|)
expr_stmt|;
break|break;
case|case
name|SC_TitleBarSysMenu
case|:
if|if
condition|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowSystemMenuHint
condition|)
block|{
name|ret
operator|.
name|setRect
argument_list|(
name|tb
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
name|controlWidthMargin
operator|+
name|indent
argument_list|,
name|tb
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
name|controlTopMargin
argument_list|,
name|controlHeight
argument_list|,
name|controlHeight
argument_list|)
expr_stmt|;
block|}
break|break;
default|default:
break|break;
block|}
name|ret
operator|=
name|visualRect
argument_list|(
name|tb
operator|->
name|direction
argument_list|,
name|tb
operator|->
name|rect
argument_list|,
name|ret
argument_list|)
expr_stmt|;
block|}
break|break;
default|default:
break|break;
block|}
return|return
name|rect
return|;
block|}
end_function
begin_comment
comment|/*!   \reimp */
end_comment
begin_function
DECL|function|styleHint
name|int
name|QPlastiqueStyle
operator|::
name|styleHint
parameter_list|(
name|StyleHint
name|hint
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|option
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|,
name|QStyleHintReturn
modifier|*
name|returnData
parameter_list|)
specifier|const
block|{
name|int
name|ret
init|=
literal|0
decl_stmt|;
switch|switch
condition|(
name|hint
condition|)
block|{
case|case
name|SH_WindowFrame_Mask
case|:
name|ret
operator|=
literal|1
expr_stmt|;
if|if
condition|(
name|QStyleHintReturnMask
modifier|*
name|mask
init|=
name|qstyleoption_cast
argument_list|<
name|QStyleHintReturnMask
operator|*
argument_list|>
argument_list|(
name|returnData
argument_list|)
condition|)
block|{
name|mask
operator|->
name|region
operator|=
name|option
operator|->
name|rect
expr_stmt|;
name|mask
operator|->
name|region
operator|-=
name|QRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|mask
operator|->
name|region
operator|-=
name|QRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|mask
operator|->
name|region
operator|-=
name|QRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|mask
operator|->
name|region
operator|-=
name|QRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
specifier|const
name|QStyleOptionTitleBar
modifier|*
name|titleBar
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionTitleBar
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
decl_stmt|;
if|if
condition|(
name|titleBar
operator|&&
operator|(
name|titleBar
operator|->
name|titleBarState
operator|&
name|Qt
operator|::
name|WindowMinimized
operator|)
condition|)
block|{
name|mask
operator|->
name|region
operator|-=
name|QRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottom
argument_list|()
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|mask
operator|->
name|region
operator|-=
name|QRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottom
argument_list|()
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|mask
operator|->
name|region
operator|-=
name|QRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|mask
operator|->
name|region
operator|-=
name|QRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|mask
operator|->
name|region
operator|-=
name|QRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|,
name|QSize
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|mask
operator|->
name|region
operator|-=
name|QRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
argument_list|,
name|QSize
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
break|break;
case|case
name|SH_TitleBar_NoBorder
case|:
name|ret
operator|=
literal|1
expr_stmt|;
break|break;
case|case
name|SH_TitleBar_AutoRaise
case|:
name|ret
operator|=
literal|1
expr_stmt|;
break|break;
case|case
name|SH_ItemView_ShowDecorationSelected
case|:
name|ret
operator|=
literal|true
expr_stmt|;
break|break;
case|case
name|SH_ToolBox_SelectedPageTitleBold
case|:
case|case
name|SH_ScrollBar_MiddleClickAbsolutePosition
case|:
name|ret
operator|=
literal|true
expr_stmt|;
break|break;
case|case
name|SH_MainWindow_SpaceBelowMenuBar
case|:
name|ret
operator|=
literal|0
expr_stmt|;
break|break;
case|case
name|SH_FormLayoutWrapPolicy
case|:
name|ret
operator|=
name|QFormLayout
operator|::
name|DontWrapRows
expr_stmt|;
break|break;
case|case
name|SH_FormLayoutFieldGrowthPolicy
case|:
name|ret
operator|=
name|QFormLayout
operator|::
name|ExpandingFieldsGrow
expr_stmt|;
break|break;
case|case
name|SH_FormLayoutFormAlignment
case|:
name|ret
operator|=
name|Qt
operator|::
name|AlignLeft
operator||
name|Qt
operator|::
name|AlignTop
expr_stmt|;
break|break;
case|case
name|SH_FormLayoutLabelAlignment
case|:
name|ret
operator|=
name|Qt
operator|::
name|AlignRight
expr_stmt|;
break|break;
case|case
name|SH_MessageBox_TextInteractionFlags
case|:
name|ret
operator|=
name|Qt
operator|::
name|TextSelectableByMouse
operator||
name|Qt
operator|::
name|LinksAccessibleByMouse
expr_stmt|;
break|break;
case|case
name|SH_LineEdit_PasswordCharacter
case|:
name|ret
operator|=
name|QCommonStyle
operator|::
name|styleHint
argument_list|(
name|hint
argument_list|,
name|option
argument_list|,
name|widget
argument_list|,
name|returnData
argument_list|)
expr_stmt|;
break|break;
case|case
name|SH_ItemView_ArrowKeysNavigateIntoChildren
case|:
name|ret
operator|=
literal|true
expr_stmt|;
break|break;
case|case
name|SH_Menu_SubMenuPopupDelay
case|:
name|ret
operator|=
literal|96
expr_stmt|;
comment|// from Plastik
break|break;
case|case
name|SH_DialogButtonBox_ButtonsHaveIcons
case|:
if|if
condition|(
specifier|const
name|QPlatformTheme
modifier|*
name|theme
init|=
name|QGuiApplicationPrivate
operator|::
name|platformTheme
argument_list|()
condition|)
name|ret
operator|=
name|theme
operator|->
name|themeHint
argument_list|(
name|QPlatformTheme
operator|::
name|DialogButtonBoxButtonsHaveIcons
argument_list|)
operator|.
name|toBool
argument_list|()
expr_stmt|;
else|else
name|ret
operator|=
literal|true
expr_stmt|;
break|break;
ifndef|#
directive|ifndef
name|Q_OS_WIN
case|case
name|SH_Menu_AllowActiveAndDisabled
case|:
name|ret
operator|=
literal|false
expr_stmt|;
break|break;
endif|#
directive|endif
default|default:
name|ret
operator|=
name|QWindowsStyle
operator|::
name|styleHint
argument_list|(
name|hint
argument_list|,
name|option
argument_list|,
name|widget
argument_list|,
name|returnData
argument_list|)
expr_stmt|;
break|break;
block|}
return|return
name|ret
return|;
block|}
end_function
begin_comment
comment|/*!   \reimp */
end_comment
begin_function
DECL|function|hitTestComplexControl
name|QStyle
operator|::
name|SubControl
name|QPlastiqueStyle
operator|::
name|hitTestComplexControl
parameter_list|(
name|ComplexControl
name|control
parameter_list|,
specifier|const
name|QStyleOptionComplex
modifier|*
name|option
parameter_list|,
specifier|const
name|QPoint
modifier|&
name|pos
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
name|SubControl
name|ret
init|=
name|SC_None
decl_stmt|;
switch|switch
condition|(
name|control
condition|)
block|{
ifndef|#
directive|ifndef
name|QT_NO_SCROLLBAR
case|case
name|CC_ScrollBar
case|:
if|if
condition|(
specifier|const
name|QStyleOptionSlider
modifier|*
name|scrollBar
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSlider
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|QRect
name|slider
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|control
argument_list|,
name|scrollBar
argument_list|,
name|SC_ScrollBarSlider
argument_list|,
name|widget
argument_list|)
decl_stmt|;
if|if
condition|(
name|slider
operator|.
name|contains
argument_list|(
name|pos
argument_list|)
condition|)
block|{
name|ret
operator|=
name|SC_ScrollBarSlider
expr_stmt|;
break|break;
block|}
name|QRect
name|scrollBarAddLine
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|control
argument_list|,
name|scrollBar
argument_list|,
name|SC_ScrollBarAddLine
argument_list|,
name|widget
argument_list|)
decl_stmt|;
if|if
condition|(
name|scrollBarAddLine
operator|.
name|contains
argument_list|(
name|pos
argument_list|)
condition|)
block|{
name|ret
operator|=
name|SC_ScrollBarAddLine
expr_stmt|;
break|break;
block|}
name|QRect
name|scrollBarSubPage
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|control
argument_list|,
name|scrollBar
argument_list|,
name|SC_ScrollBarSubPage
argument_list|,
name|widget
argument_list|)
decl_stmt|;
if|if
condition|(
name|scrollBarSubPage
operator|.
name|contains
argument_list|(
name|pos
argument_list|)
condition|)
block|{
name|ret
operator|=
name|SC_ScrollBarSubPage
expr_stmt|;
break|break;
block|}
name|QRect
name|scrollBarAddPage
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|control
argument_list|,
name|scrollBar
argument_list|,
name|SC_ScrollBarAddPage
argument_list|,
name|widget
argument_list|)
decl_stmt|;
if|if
condition|(
name|scrollBarAddPage
operator|.
name|contains
argument_list|(
name|pos
argument_list|)
condition|)
block|{
name|ret
operator|=
name|SC_ScrollBarAddPage
expr_stmt|;
break|break;
block|}
name|QRect
name|scrollBarSubLine
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|control
argument_list|,
name|scrollBar
argument_list|,
name|SC_ScrollBarSubLine
argument_list|,
name|widget
argument_list|)
decl_stmt|;
if|if
condition|(
name|scrollBarSubLine
operator|.
name|contains
argument_list|(
name|pos
argument_list|)
condition|)
block|{
name|ret
operator|=
name|SC_ScrollBarSubLine
expr_stmt|;
break|break;
block|}
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_SCROLLBAR
default|default:
break|break;
block|}
return|return
name|ret
operator|!=
name|SC_None
condition|?
name|ret
else|:
name|QWindowsStyle
operator|::
name|hitTestComplexControl
argument_list|(
name|control
argument_list|,
name|option
argument_list|,
name|pos
argument_list|,
name|widget
argument_list|)
return|;
block|}
end_function
begin_comment
comment|/*!   \reimp */
end_comment
begin_function
DECL|function|pixelMetric
name|int
name|QPlastiqueStyle
operator|::
name|pixelMetric
parameter_list|(
name|PixelMetric
name|metric
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|option
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
name|int
name|ret
init|=
operator|-
literal|1
decl_stmt|;
switch|switch
condition|(
name|metric
condition|)
block|{
case|case
name|PM_MenuVMargin
case|:
case|case
name|PM_MenuHMargin
case|:
name|ret
operator|=
literal|0
expr_stmt|;
break|break;
case|case
name|PM_ButtonShiftHorizontal
case|:
case|case
name|PM_ButtonShiftVertical
case|:
name|ret
operator|=
literal|1
expr_stmt|;
break|break;
case|case
name|PM_ButtonDefaultIndicator
case|:
name|ret
operator|=
literal|0
expr_stmt|;
break|break;
ifndef|#
directive|ifndef
name|QT_NO_SLIDER
case|case
name|PM_SliderThickness
case|:
name|ret
operator|=
literal|15
expr_stmt|;
break|break;
case|case
name|PM_SliderLength
case|:
case|case
name|PM_SliderControlThickness
case|:
name|ret
operator|=
literal|11
expr_stmt|;
break|break;
case|case
name|PM_SliderTickmarkOffset
case|:
name|ret
operator|=
literal|5
expr_stmt|;
break|break;
case|case
name|PM_SliderSpaceAvailable
case|:
if|if
condition|(
specifier|const
name|QStyleOptionSlider
modifier|*
name|slider
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSlider
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|int
name|size
init|=
literal|15
decl_stmt|;
if|if
condition|(
name|slider
operator|->
name|tickPosition
operator|&
name|QSlider
operator|::
name|TicksBelow
condition|)
operator|++
name|size
expr_stmt|;
if|if
condition|(
name|slider
operator|->
name|tickPosition
operator|&
name|QSlider
operator|::
name|TicksAbove
condition|)
operator|++
name|size
expr_stmt|;
name|ret
operator|=
name|size
expr_stmt|;
break|break;
block|}
endif|#
directive|endif
comment|// QT_NO_SLIDER
case|case
name|PM_ScrollBarExtent
case|:
name|ret
operator|=
literal|16
expr_stmt|;
break|break;
case|case
name|PM_ScrollBarSliderMin
case|:
name|ret
operator|=
literal|26
expr_stmt|;
break|break;
case|case
name|PM_ProgressBarChunkWidth
case|:
name|ret
operator|=
literal|1
expr_stmt|;
break|break;
case|case
name|PM_MenuBarItemSpacing
case|:
name|ret
operator|=
literal|3
expr_stmt|;
break|break;
case|case
name|PM_MenuBarVMargin
case|:
name|ret
operator|=
literal|2
expr_stmt|;
break|break;
case|case
name|PM_MenuBarHMargin
case|:
name|ret
operator|=
literal|0
expr_stmt|;
break|break;
case|case
name|PM_MenuBarPanelWidth
case|:
name|ret
operator|=
literal|1
expr_stmt|;
break|break;
case|case
name|PM_ToolBarHandleExtent
case|:
name|ret
operator|=
literal|9
expr_stmt|;
break|break;
case|case
name|PM_ToolBarSeparatorExtent
case|:
name|ret
operator|=
literal|2
expr_stmt|;
break|break;
case|case
name|PM_ToolBarItemSpacing
case|:
name|ret
operator|=
literal|1
expr_stmt|;
break|break;
case|case
name|PM_ToolBarItemMargin
case|:
name|ret
operator|=
literal|1
expr_stmt|;
break|break;
case|case
name|PM_ToolBarFrameWidth
case|:
name|ret
operator|=
literal|2
expr_stmt|;
break|break;
case|case
name|PM_SplitterWidth
case|:
name|ret
operator|=
literal|6
expr_stmt|;
break|break;
case|case
name|PM_DockWidgetSeparatorExtent
case|:
name|ret
operator|=
literal|6
expr_stmt|;
break|break;
case|case
name|PM_DockWidgetHandleExtent
case|:
name|ret
operator|=
literal|20
expr_stmt|;
break|break;
case|case
name|PM_DefaultFrameWidth
case|:
ifndef|#
directive|ifndef
name|QT_NO_MENU
if|if
condition|(
name|qobject_cast
argument_list|<
specifier|const
name|QMenu
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
condition|)
block|{
name|ret
operator|=
literal|1
expr_stmt|;
break|break;
block|}
endif|#
directive|endif
name|ret
operator|=
literal|2
expr_stmt|;
break|break;
case|case
name|PM_MdiSubWindowFrameWidth
case|:
name|ret
operator|=
literal|4
expr_stmt|;
break|break;
case|case
name|PM_TitleBarHeight
case|:
name|ret
operator|=
name|qMax
argument_list|(
name|widget
condition|?
name|widget
operator|->
name|fontMetrics
argument_list|()
operator|.
name|height
argument_list|()
else|:
operator|(
name|option
condition|?
name|option
operator|->
name|fontMetrics
operator|.
name|height
argument_list|()
else|:
literal|0
operator|)
argument_list|,
literal|30
argument_list|)
expr_stmt|;
break|break;
case|case
name|PM_MaximumDragDistance
case|:
return|return
operator|-
literal|1
return|;
case|case
name|PM_DockWidgetTitleMargin
case|:
return|return
literal|2
return|;
case|case
name|PM_LayoutHorizontalSpacing
case|:
case|case
name|PM_LayoutVerticalSpacing
case|:
return|return
operator|-
literal|1
return|;
comment|// rely on layoutHorizontalSpacing()
case|case
name|PM_LayoutLeftMargin
case|:
case|case
name|PM_LayoutTopMargin
case|:
case|case
name|PM_LayoutRightMargin
case|:
case|case
name|PM_LayoutBottomMargin
case|:
block|{
name|bool
name|isWindow
init|=
literal|false
decl_stmt|;
if|if
condition|(
name|option
condition|)
block|{
name|isWindow
operator|=
operator|(
name|option
operator|->
name|state
operator|&
name|State_Window
operator|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|widget
condition|)
block|{
name|isWindow
operator|=
name|widget
operator|->
name|isWindow
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|isWindow
condition|)
block|{
name|ret
operator|=
literal|11
expr_stmt|;
block|}
else|else
block|{
name|ret
operator|=
literal|9
expr_stmt|;
block|}
block|}
default|default:
break|break;
block|}
return|return
name|ret
operator|!=
operator|-
literal|1
condition|?
name|ret
else|:
name|QWindowsStyle
operator|::
name|pixelMetric
argument_list|(
name|metric
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
return|;
block|}
end_function
begin_comment
comment|/*!   \reimp */
end_comment
begin_function
DECL|function|standardPalette
name|QPalette
name|QPlastiqueStyle
operator|::
name|standardPalette
parameter_list|()
specifier|const
block|{
name|QPalette
name|palette
decl_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Disabled
argument_list|,
name|QPalette
operator|::
name|WindowText
argument_list|,
name|QColor
argument_list|(
name|QRgb
argument_list|(
literal|0xff808080
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Disabled
argument_list|,
name|QPalette
operator|::
name|Button
argument_list|,
name|QColor
argument_list|(
name|QRgb
argument_list|(
literal|0xffdddfe4
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Disabled
argument_list|,
name|QPalette
operator|::
name|Light
argument_list|,
name|QColor
argument_list|(
name|QRgb
argument_list|(
literal|0xffffffff
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Disabled
argument_list|,
name|QPalette
operator|::
name|Midlight
argument_list|,
name|QColor
argument_list|(
name|QRgb
argument_list|(
literal|0xffffffff
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Disabled
argument_list|,
name|QPalette
operator|::
name|Dark
argument_list|,
name|QColor
argument_list|(
name|QRgb
argument_list|(
literal|0xff555555
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Disabled
argument_list|,
name|QPalette
operator|::
name|Mid
argument_list|,
name|QColor
argument_list|(
name|QRgb
argument_list|(
literal|0xffc7c7c7
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Disabled
argument_list|,
name|QPalette
operator|::
name|Text
argument_list|,
name|QColor
argument_list|(
name|QRgb
argument_list|(
literal|0xffc7c7c7
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Disabled
argument_list|,
name|QPalette
operator|::
name|BrightText
argument_list|,
name|QColor
argument_list|(
name|QRgb
argument_list|(
literal|0xffffffff
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Disabled
argument_list|,
name|QPalette
operator|::
name|ButtonText
argument_list|,
name|QColor
argument_list|(
name|QRgb
argument_list|(
literal|0xff808080
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Disabled
argument_list|,
name|QPalette
operator|::
name|Base
argument_list|,
name|QColor
argument_list|(
name|QRgb
argument_list|(
literal|0xffefefef
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Disabled
argument_list|,
name|QPalette
operator|::
name|AlternateBase
argument_list|,
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Disabled
argument_list|,
name|QPalette
operator|::
name|Base
argument_list|)
operator|.
name|darker
argument_list|(
literal|110
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Disabled
argument_list|,
name|QPalette
operator|::
name|Window
argument_list|,
name|QColor
argument_list|(
name|QRgb
argument_list|(
literal|0xffefefef
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Disabled
argument_list|,
name|QPalette
operator|::
name|Shadow
argument_list|,
name|QColor
argument_list|(
name|QRgb
argument_list|(
literal|0xff000000
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Disabled
argument_list|,
name|QPalette
operator|::
name|Highlight
argument_list|,
name|QColor
argument_list|(
name|QRgb
argument_list|(
literal|0xff567594
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Disabled
argument_list|,
name|QPalette
operator|::
name|HighlightedText
argument_list|,
name|QColor
argument_list|(
name|QRgb
argument_list|(
literal|0xffffffff
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Disabled
argument_list|,
name|QPalette
operator|::
name|Link
argument_list|,
name|QColor
argument_list|(
name|QRgb
argument_list|(
literal|0xff0000ee
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Disabled
argument_list|,
name|QPalette
operator|::
name|LinkVisited
argument_list|,
name|QColor
argument_list|(
name|QRgb
argument_list|(
literal|0xff52188b
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Active
argument_list|,
name|QPalette
operator|::
name|WindowText
argument_list|,
name|QColor
argument_list|(
name|QRgb
argument_list|(
literal|0xff000000
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Active
argument_list|,
name|QPalette
operator|::
name|Button
argument_list|,
name|QColor
argument_list|(
name|QRgb
argument_list|(
literal|0xffdddfe4
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Active
argument_list|,
name|QPalette
operator|::
name|Light
argument_list|,
name|QColor
argument_list|(
name|QRgb
argument_list|(
literal|0xffffffff
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Active
argument_list|,
name|QPalette
operator|::
name|Midlight
argument_list|,
name|QColor
argument_list|(
name|QRgb
argument_list|(
literal|0xffffffff
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Active
argument_list|,
name|QPalette
operator|::
name|Dark
argument_list|,
name|QColor
argument_list|(
name|QRgb
argument_list|(
literal|0xff555555
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Active
argument_list|,
name|QPalette
operator|::
name|Mid
argument_list|,
name|QColor
argument_list|(
name|QRgb
argument_list|(
literal|0xffc7c7c7
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Active
argument_list|,
name|QPalette
operator|::
name|Text
argument_list|,
name|QColor
argument_list|(
name|QRgb
argument_list|(
literal|0xff000000
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Active
argument_list|,
name|QPalette
operator|::
name|BrightText
argument_list|,
name|QColor
argument_list|(
name|QRgb
argument_list|(
literal|0xffffffff
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Active
argument_list|,
name|QPalette
operator|::
name|ButtonText
argument_list|,
name|QColor
argument_list|(
name|QRgb
argument_list|(
literal|0xff000000
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Active
argument_list|,
name|QPalette
operator|::
name|Base
argument_list|,
name|QColor
argument_list|(
name|QRgb
argument_list|(
literal|0xffffffff
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Active
argument_list|,
name|QPalette
operator|::
name|AlternateBase
argument_list|,
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Active
argument_list|,
name|QPalette
operator|::
name|Base
argument_list|)
operator|.
name|darker
argument_list|(
literal|110
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Active
argument_list|,
name|QPalette
operator|::
name|Window
argument_list|,
name|QColor
argument_list|(
name|QRgb
argument_list|(
literal|0xffefefef
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Active
argument_list|,
name|QPalette
operator|::
name|Shadow
argument_list|,
name|QColor
argument_list|(
name|QRgb
argument_list|(
literal|0xff000000
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Active
argument_list|,
name|QPalette
operator|::
name|Highlight
argument_list|,
name|QColor
argument_list|(
name|QRgb
argument_list|(
literal|0xff678db2
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Active
argument_list|,
name|QPalette
operator|::
name|HighlightedText
argument_list|,
name|QColor
argument_list|(
name|QRgb
argument_list|(
literal|0xffffffff
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Active
argument_list|,
name|QPalette
operator|::
name|Link
argument_list|,
name|QColor
argument_list|(
name|QRgb
argument_list|(
literal|0xff0000ee
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Active
argument_list|,
name|QPalette
operator|::
name|LinkVisited
argument_list|,
name|QColor
argument_list|(
name|QRgb
argument_list|(
literal|0xff52188b
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Inactive
argument_list|,
name|QPalette
operator|::
name|WindowText
argument_list|,
name|QColor
argument_list|(
name|QRgb
argument_list|(
literal|0xff000000
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Inactive
argument_list|,
name|QPalette
operator|::
name|Button
argument_list|,
name|QColor
argument_list|(
name|QRgb
argument_list|(
literal|0xffdddfe4
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Inactive
argument_list|,
name|QPalette
operator|::
name|Light
argument_list|,
name|QColor
argument_list|(
name|QRgb
argument_list|(
literal|0xffffffff
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Inactive
argument_list|,
name|QPalette
operator|::
name|Midlight
argument_list|,
name|QColor
argument_list|(
name|QRgb
argument_list|(
literal|0xffffffff
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Inactive
argument_list|,
name|QPalette
operator|::
name|Dark
argument_list|,
name|QColor
argument_list|(
name|QRgb
argument_list|(
literal|0xff555555
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Inactive
argument_list|,
name|QPalette
operator|::
name|Mid
argument_list|,
name|QColor
argument_list|(
name|QRgb
argument_list|(
literal|0xffc7c7c7
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Inactive
argument_list|,
name|QPalette
operator|::
name|Text
argument_list|,
name|QColor
argument_list|(
name|QRgb
argument_list|(
literal|0xff000000
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Inactive
argument_list|,
name|QPalette
operator|::
name|BrightText
argument_list|,
name|QColor
argument_list|(
name|QRgb
argument_list|(
literal|0xffffffff
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Inactive
argument_list|,
name|QPalette
operator|::
name|ButtonText
argument_list|,
name|QColor
argument_list|(
name|QRgb
argument_list|(
literal|0xff000000
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Inactive
argument_list|,
name|QPalette
operator|::
name|Base
argument_list|,
name|QColor
argument_list|(
name|QRgb
argument_list|(
literal|0xffffffff
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Inactive
argument_list|,
name|QPalette
operator|::
name|AlternateBase
argument_list|,
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Inactive
argument_list|,
name|QPalette
operator|::
name|Base
argument_list|)
operator|.
name|darker
argument_list|(
literal|110
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Inactive
argument_list|,
name|QPalette
operator|::
name|Window
argument_list|,
name|QColor
argument_list|(
name|QRgb
argument_list|(
literal|0xffefefef
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Inactive
argument_list|,
name|QPalette
operator|::
name|Shadow
argument_list|,
name|QColor
argument_list|(
name|QRgb
argument_list|(
literal|0xff000000
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Inactive
argument_list|,
name|QPalette
operator|::
name|Highlight
argument_list|,
name|QColor
argument_list|(
name|QRgb
argument_list|(
literal|0xff678db2
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Inactive
argument_list|,
name|QPalette
operator|::
name|HighlightedText
argument_list|,
name|QColor
argument_list|(
name|QRgb
argument_list|(
literal|0xffffffff
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Inactive
argument_list|,
name|QPalette
operator|::
name|Link
argument_list|,
name|QColor
argument_list|(
name|QRgb
argument_list|(
literal|0xff0000ee
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Inactive
argument_list|,
name|QPalette
operator|::
name|LinkVisited
argument_list|,
name|QColor
argument_list|(
name|QRgb
argument_list|(
literal|0xff52188b
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|palette
return|;
block|}
end_function
begin_comment
comment|/*!   \reimp */
end_comment
begin_function
DECL|function|polish
name|void
name|QPlastiqueStyle
operator|::
name|polish
parameter_list|(
name|QWidget
modifier|*
name|widget
parameter_list|)
block|{
if|if
condition|(
name|qobject_cast
argument_list|<
name|QPushButton
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
ifndef|#
directive|ifndef
name|QT_NO_COMBOBOX
operator|||
name|qobject_cast
argument_list|<
name|QComboBox
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
endif|#
directive|endif
ifndef|#
directive|ifndef
name|QT_NO_SPINBOX
operator|||
name|qobject_cast
argument_list|<
name|QAbstractSpinBox
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
endif|#
directive|endif
operator|||
name|qobject_cast
argument_list|<
name|QCheckBox
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
ifndef|#
directive|ifndef
name|QT_NO_GROUPBOX
operator|||
name|qobject_cast
argument_list|<
name|QGroupBox
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
endif|#
directive|endif
operator|||
name|qobject_cast
argument_list|<
name|QRadioButton
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
ifndef|#
directive|ifndef
name|QT_NO_SPLITTER
operator|||
name|qobject_cast
argument_list|<
name|QSplitterHandle
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
endif|#
directive|endif
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
operator|||
name|qobject_cast
argument_list|<
name|QTabBar
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
endif|#
directive|endif
condition|)
block|{
name|widget
operator|->
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_Hover
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|widget
operator|->
name|inherits
argument_list|(
literal|"QDockSeparator"
argument_list|)
operator|||
name|widget
operator|->
name|inherits
argument_list|(
literal|"QDockWidgetSeparator"
argument_list|)
condition|)
block|{
name|widget
operator|->
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_Hover
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
literal|false
comment|// to simplify the #ifdefs
ifndef|#
directive|ifndef
name|QT_NO_MENUBAR
operator|||
name|qobject_cast
argument_list|<
name|QMenuBar
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
endif|#
directive|endif
ifndef|#
directive|ifndef
name|QT_NO_TOOLBAR
operator|||
name|qobject_cast
argument_list|<
name|QToolBar
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
operator|||
operator|(
name|widget
operator|&&
name|qobject_cast
argument_list|<
name|QToolBar
operator|*
argument_list|>
argument_list|(
name|widget
operator|->
name|parent
argument_list|()
argument_list|)
operator|)
endif|#
directive|endif
condition|)
block|{
name|widget
operator|->
name|setBackgroundRole
argument_list|(
name|QPalette
operator|::
name|Window
argument_list|)
expr_stmt|;
block|}
ifndef|#
directive|ifndef
name|QT_NO_PROGRESSBAR
if|if
condition|(
name|AnimateBusyProgressBar
operator|&&
name|qobject_cast
argument_list|<
name|QProgressBar
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
condition|)
name|widget
operator|->
name|installEventFilter
argument_list|(
name|this
argument_list|)
expr_stmt|;
endif|#
directive|endif
if|#
directive|if
name|defined
name|QPlastique_MaskButtons
if|if
condition|(
name|qobject_cast
argument_list|<
name|QPushButton
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
operator|||
name|qobject_cast
argument_list|<
name|QToolButton
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
condition|)
name|widget
operator|->
name|installEventFilter
argument_list|(
name|this
argument_list|)
expr_stmt|;
endif|#
directive|endif
block|}
end_function
begin_comment
comment|/*!   \reimp */
end_comment
begin_function
DECL|function|unpolish
name|void
name|QPlastiqueStyle
operator|::
name|unpolish
parameter_list|(
name|QWidget
modifier|*
name|widget
parameter_list|)
block|{
if|if
condition|(
name|qobject_cast
argument_list|<
name|QPushButton
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
ifndef|#
directive|ifndef
name|QT_NO_COMBOBOX
operator|||
name|qobject_cast
argument_list|<
name|QComboBox
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
endif|#
directive|endif
ifndef|#
directive|ifndef
name|QT_NO_SPINBOX
operator|||
name|qobject_cast
argument_list|<
name|QAbstractSpinBox
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
endif|#
directive|endif
operator|||
name|qobject_cast
argument_list|<
name|QCheckBox
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
ifndef|#
directive|ifndef
name|QT_NO_GROUPBOX
operator|||
name|qobject_cast
argument_list|<
name|QGroupBox
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
endif|#
directive|endif
ifndef|#
directive|ifndef
name|QT_NO_SPLITTER
operator|||
name|qobject_cast
argument_list|<
name|QSplitterHandle
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
endif|#
directive|endif
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
operator|||
name|qobject_cast
argument_list|<
name|QTabBar
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
endif|#
directive|endif
operator|||
name|qobject_cast
argument_list|<
name|QRadioButton
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
condition|)
block|{
name|widget
operator|->
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_Hover
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|widget
operator|->
name|inherits
argument_list|(
literal|"QDockSeparator"
argument_list|)
operator|||
name|widget
operator|->
name|inherits
argument_list|(
literal|"QDockWidgetSeparator"
argument_list|)
condition|)
block|{
name|widget
operator|->
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_Hover
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
literal|false
comment|// to simplify the #ifdefs
ifndef|#
directive|ifndef
name|QT_NO_MENUBAR
operator|||
name|qobject_cast
argument_list|<
name|QMenuBar
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
endif|#
directive|endif
ifndef|#
directive|ifndef
name|QT_NO_TOOLBOX
operator|||
name|qobject_cast
argument_list|<
name|QToolBox
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
endif|#
directive|endif
ifndef|#
directive|ifndef
name|QT_NO_TOOLBAR
operator|||
name|qobject_cast
argument_list|<
name|QToolBar
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
operator|||
operator|(
name|widget
operator|&&
name|qobject_cast
argument_list|<
name|QToolBar
operator|*
argument_list|>
argument_list|(
name|widget
operator|->
name|parent
argument_list|()
argument_list|)
operator|)
endif|#
directive|endif
condition|)
block|{
name|widget
operator|->
name|setBackgroundRole
argument_list|(
name|QPalette
operator|::
name|Button
argument_list|)
expr_stmt|;
block|}
ifndef|#
directive|ifndef
name|QT_NO_PROGRESSBAR
if|if
condition|(
name|AnimateBusyProgressBar
operator|&&
name|qobject_cast
argument_list|<
name|QProgressBar
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
condition|)
block|{
name|Q_D
argument_list|(
name|QPlastiqueStyle
argument_list|)
expr_stmt|;
name|widget
operator|->
name|removeEventFilter
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|d
operator|->
name|bars
operator|.
name|removeAll
argument_list|(
cast|static_cast
argument_list|<
name|QProgressBar
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
argument_list|)
expr_stmt|;
block|}
endif|#
directive|endif
if|#
directive|if
name|defined
name|QPlastique_MaskButtons
if|if
condition|(
name|qobject_cast
argument_list|<
name|QPushButton
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
operator|||
name|qobject_cast
argument_list|<
name|QToolButton
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
condition|)
name|widget
operator|->
name|removeEventFilter
argument_list|(
name|this
argument_list|)
expr_stmt|;
endif|#
directive|endif
block|}
end_function
begin_comment
comment|/*!   \reimp */
end_comment
begin_function
DECL|function|polish
name|void
name|QPlastiqueStyle
operator|::
name|polish
parameter_list|(
name|QApplication
modifier|*
name|app
parameter_list|)
block|{
name|QWindowsStyle
operator|::
name|polish
argument_list|(
name|app
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|/*!   \reimp */
end_comment
begin_function
DECL|function|polish
name|void
name|QPlastiqueStyle
operator|::
name|polish
parameter_list|(
name|QPalette
modifier|&
name|pal
parameter_list|)
block|{
name|QWindowsStyle
operator|::
name|polish
argument_list|(
name|pal
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_MAC
name|pal
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Shadow
argument_list|,
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
endif|#
directive|endif
block|}
end_function
begin_comment
comment|/*!   \reimp */
end_comment
begin_function
DECL|function|unpolish
name|void
name|QPlastiqueStyle
operator|::
name|unpolish
parameter_list|(
name|QApplication
modifier|*
name|app
parameter_list|)
block|{
name|QWindowsStyle
operator|::
name|unpolish
argument_list|(
name|app
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|/*!     \internal */
end_comment
begin_function
DECL|function|standardIconImplementation
name|QIcon
name|QPlastiqueStyle
operator|::
name|standardIconImplementation
parameter_list|(
name|StandardPixmap
name|standardIcon
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|option
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
return|return
name|QWindowsStyle
operator|::
name|standardIconImplementation
argument_list|(
name|standardIcon
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
return|;
block|}
end_function
begin_comment
comment|/*!     \reimp */
end_comment
begin_function
DECL|function|standardPixmap
name|QPixmap
name|QPlastiqueStyle
operator|::
name|standardPixmap
parameter_list|(
name|StandardPixmap
name|standardPixmap
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|opt
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
return|return
name|QWindowsStyle
operator|::
name|standardPixmap
argument_list|(
name|standardPixmap
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
return|;
block|}
end_function
begin_comment
comment|// this works as long as we have at most 16 different control types
end_comment
begin_define
DECL|macro|CT1
define|#
directive|define
name|CT1
parameter_list|(
name|c
parameter_list|)
value|CT2(c, c)
end_define
begin_define
DECL|macro|CT2
define|#
directive|define
name|CT2
parameter_list|(
name|c1
parameter_list|,
name|c2
parameter_list|)
value|(((uint)c1<< 16) | (uint)c2)
end_define
begin_comment
comment|/*!     \internal */
end_comment
begin_function
DECL|function|layoutSpacingImplementation
name|int
name|QPlastiqueStyle
operator|::
name|layoutSpacingImplementation
parameter_list|(
name|QSizePolicy
operator|::
name|ControlType
name|control1
parameter_list|,
name|QSizePolicy
operator|::
name|ControlType
name|control2
parameter_list|,
name|Qt
operator|::
name|Orientation
name|orientation
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
comment|/* option */
parameter_list|,
specifier|const
name|QWidget
modifier|*
comment|/* widget */
parameter_list|)
specifier|const
block|{
specifier|const
name|int
name|ButtonMask
init|=
name|QSizePolicy
operator|::
name|ButtonBox
operator||
name|QSizePolicy
operator|::
name|PushButton
decl_stmt|;
if|if
condition|(
name|control2
operator|==
name|QSizePolicy
operator|::
name|ButtonBox
condition|)
return|return
literal|11
return|;
if|if
condition|(
operator|(
name|control1
operator||
name|control2
operator|)
operator|&
name|ButtonMask
condition|)
return|return
operator|(
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
operator|)
condition|?
literal|10
else|:
literal|9
return|;
switch|switch
condition|(
name|CT2
argument_list|(
name|control1
argument_list|,
name|control2
argument_list|)
condition|)
block|{
case|case
name|CT1
argument_list|(
name|QSizePolicy
operator|::
name|Label
argument_list|)
case|:
case|case
name|CT2
argument_list|(
name|QSizePolicy
operator|::
name|Label
argument_list|,
name|QSizePolicy
operator|::
name|DefaultType
argument_list|)
case|:
case|case
name|CT2
argument_list|(
name|QSizePolicy
operator|::
name|Label
argument_list|,
name|QSizePolicy
operator|::
name|CheckBox
argument_list|)
case|:
case|case
name|CT2
argument_list|(
name|QSizePolicy
operator|::
name|Label
argument_list|,
name|QSizePolicy
operator|::
name|ComboBox
argument_list|)
case|:
case|case
name|CT2
argument_list|(
name|QSizePolicy
operator|::
name|Label
argument_list|,
name|QSizePolicy
operator|::
name|LineEdit
argument_list|)
case|:
case|case
name|CT2
argument_list|(
name|QSizePolicy
operator|::
name|Label
argument_list|,
name|QSizePolicy
operator|::
name|RadioButton
argument_list|)
case|:
case|case
name|CT2
argument_list|(
name|QSizePolicy
operator|::
name|Label
argument_list|,
name|QSizePolicy
operator|::
name|Slider
argument_list|)
case|:
case|case
name|CT2
argument_list|(
name|QSizePolicy
operator|::
name|Label
argument_list|,
name|QSizePolicy
operator|::
name|SpinBox
argument_list|)
case|:
case|case
name|CT2
argument_list|(
name|QSizePolicy
operator|::
name|Label
argument_list|,
name|QSizePolicy
operator|::
name|ToolButton
argument_list|)
case|:
return|return
literal|5
return|;
case|case
name|CT2
argument_list|(
name|QSizePolicy
operator|::
name|CheckBox
argument_list|,
name|QSizePolicy
operator|::
name|RadioButton
argument_list|)
case|:
case|case
name|CT2
argument_list|(
name|QSizePolicy
operator|::
name|RadioButton
argument_list|,
name|QSizePolicy
operator|::
name|CheckBox
argument_list|)
case|:
case|case
name|CT1
argument_list|(
name|QSizePolicy
operator|::
name|CheckBox
argument_list|)
case|:
if|if
condition|(
name|orientation
operator|==
name|Qt
operator|::
name|Vertical
condition|)
return|return
literal|2
return|;
case|case
name|CT1
argument_list|(
name|QSizePolicy
operator|::
name|RadioButton
argument_list|)
case|:
if|if
condition|(
name|orientation
operator|==
name|Qt
operator|::
name|Vertical
condition|)
return|return
literal|1
return|;
block|}
if|if
condition|(
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
operator|&&
operator|(
name|control2
operator|&
operator|(
name|QSizePolicy
operator|::
name|CheckBox
operator||
name|QSizePolicy
operator|::
name|RadioButton
operator|)
operator|)
condition|)
return|return
literal|8
return|;
if|if
condition|(
operator|(
name|control1
operator||
name|control2
operator|)
operator|&
operator|(
name|QSizePolicy
operator|::
name|Frame
operator||
name|QSizePolicy
operator|::
name|GroupBox
operator||
name|QSizePolicy
operator|::
name|TabWidget
operator|)
condition|)
block|{
return|return
literal|11
return|;
block|}
if|if
condition|(
operator|(
name|control1
operator||
name|control2
operator|)
operator|&
operator|(
name|QSizePolicy
operator|::
name|Line
operator||
name|QSizePolicy
operator|::
name|Slider
operator||
name|QSizePolicy
operator|::
name|LineEdit
operator||
name|QSizePolicy
operator|::
name|ComboBox
operator||
name|QSizePolicy
operator|::
name|SpinBox
operator|)
condition|)
return|return
literal|7
return|;
return|return
literal|6
return|;
block|}
end_function
begin_comment
comment|/*!     \reimp */
end_comment
begin_function
DECL|function|eventFilter
name|bool
name|QPlastiqueStyle
operator|::
name|eventFilter
parameter_list|(
name|QObject
modifier|*
name|watched
parameter_list|,
name|QEvent
modifier|*
name|event
parameter_list|)
block|{
ifndef|#
directive|ifndef
name|QT_NO_PROGRESSBAR
name|Q_D
argument_list|(
name|QPlastiqueStyle
argument_list|)
expr_stmt|;
switch|switch
condition|(
name|event
operator|->
name|type
argument_list|()
condition|)
block|{
case|case
name|QEvent
operator|::
name|Show
case|:
if|if
condition|(
name|QProgressBar
modifier|*
name|bar
init|=
name|qobject_cast
argument_list|<
name|QProgressBar
operator|*
argument_list|>
argument_list|(
name|watched
argument_list|)
condition|)
block|{
name|d
operator|->
name|bars
operator|.
name|append
argument_list|(
name|bar
argument_list|)
expr_stmt|;
if|if
condition|(
name|d
operator|->
name|bars
operator|.
name|size
argument_list|()
operator|==
literal|1
condition|)
block|{
name|Q_ASSERT
argument_list|(
name|ProgressBarFps
operator|>
literal|0
argument_list|)
expr_stmt|;
name|d
operator|->
name|timer
operator|.
name|start
argument_list|()
expr_stmt|;
name|d
operator|->
name|progressBarAnimateTimer
operator|=
name|startTimer
argument_list|(
literal|1000
operator|/
name|ProgressBarFps
argument_list|)
expr_stmt|;
block|}
block|}
break|break;
case|case
name|QEvent
operator|::
name|Destroy
case|:
case|case
name|QEvent
operator|::
name|Hide
case|:
if|if
condition|(
operator|!
name|d
operator|->
name|bars
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|d
operator|->
name|bars
operator|.
name|removeAll
argument_list|(
cast|reinterpret_cast
argument_list|<
name|QProgressBar
operator|*
argument_list|>
argument_list|(
name|watched
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|d
operator|->
name|bars
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|killTimer
argument_list|(
name|d
operator|->
name|progressBarAnimateTimer
argument_list|)
expr_stmt|;
name|d
operator|->
name|progressBarAnimateTimer
operator|=
literal|0
expr_stmt|;
block|}
block|}
break|break;
if|#
directive|if
name|defined
name|QPlastique_MaskButtons
case|case
name|QEvent
operator|::
name|Resize
case|:
if|if
condition|(
name|qobject_cast
argument_list|<
name|QPushButton
operator|*
argument_list|>
argument_list|(
name|watched
argument_list|)
operator|||
name|qobject_cast
argument_list|<
name|QToolButton
operator|*
argument_list|>
argument_list|(
name|watched
argument_list|)
condition|)
block|{
name|QWidget
modifier|*
name|widget
init|=
name|qobject_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
name|watched
argument_list|)
decl_stmt|;
name|QRect
name|rect
init|=
name|widget
operator|->
name|rect
argument_list|()
decl_stmt|;
name|QRegion
name|region
argument_list|(
name|rect
argument_list|)
decl_stmt|;
name|region
operator|-=
name|QRect
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|region
operator|-=
name|QRect
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|region
operator|-=
name|QRect
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|region
operator|-=
name|QRect
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|region
operator|-=
name|QRect
argument_list|(
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|region
operator|-=
name|QRect
argument_list|(
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|region
operator|-=
name|QRect
argument_list|(
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|region
operator|-=
name|QRect
argument_list|(
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|widget
operator|->
name|setMask
argument_list|(
name|region
argument_list|)
expr_stmt|;
block|}
break|break;
endif|#
directive|endif
default|default:
break|break;
block|}
endif|#
directive|endif
comment|// QT_NO_PROGRESSBAR
return|return
name|QWindowsStyle
operator|::
name|eventFilter
argument_list|(
name|watched
argument_list|,
name|event
argument_list|)
return|;
block|}
end_function
begin_comment
comment|/*!     \reimp */
end_comment
begin_function
DECL|function|timerEvent
name|void
name|QPlastiqueStyle
operator|::
name|timerEvent
parameter_list|(
name|QTimerEvent
modifier|*
name|event
parameter_list|)
block|{
ifndef|#
directive|ifndef
name|QT_NO_PROGRESSBAR
name|Q_D
argument_list|(
name|QPlastiqueStyle
argument_list|)
expr_stmt|;
if|if
condition|(
name|event
operator|->
name|timerId
argument_list|()
operator|==
name|d
operator|->
name|progressBarAnimateTimer
condition|)
block|{
name|Q_ASSERT
argument_list|(
name|ProgressBarFps
operator|>
literal|0
argument_list|)
expr_stmt|;
name|d
operator|->
name|animateStep
operator|=
name|d
operator|->
name|timer
operator|.
name|elapsed
argument_list|()
operator|/
operator|(
literal|1000
operator|/
name|ProgressBarFps
operator|)
expr_stmt|;
foreach|foreach
control|(
name|QProgressBar
modifier|*
name|bar
decl|,
name|d
operator|->
name|bars
control|)
block|{
if|if
condition|(
name|AnimateProgressBar
operator|||
operator|(
name|bar
operator|->
name|minimum
argument_list|()
operator|==
literal|0
operator|&&
name|bar
operator|->
name|maximum
argument_list|()
operator|==
literal|0
operator|)
condition|)
name|bar
operator|->
name|update
argument_list|()
expr_stmt|;
block|}
block|}
endif|#
directive|endif
comment|// QT_NO_PROGRESSBAR
name|event
operator|->
name|ignore
argument_list|()
expr_stmt|;
block|}
end_function
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// !defined(QT_NO_STYLE_PLASTIQUE) || defined(QT_PLUGIN)
end_comment
end_unit
