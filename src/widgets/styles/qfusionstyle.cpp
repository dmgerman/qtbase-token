begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the QtWidgets module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"qfusionstyle_p.h"
end_include
begin_include
include|#
directive|include
file|"qfusionstyle_p_p.h"
end_include
begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_NO_STYLE_FUSION
argument_list|)
operator|||
name|defined
argument_list|(
name|QT_PLUGIN
argument_list|)
end_if
begin_include
include|#
directive|include
file|"qcommonstyle_p.h"
end_include
begin_include
include|#
directive|include
file|<qcombobox.h>
end_include
begin_include
include|#
directive|include
file|<qpushbutton.h>
end_include
begin_include
include|#
directive|include
file|<qpainter.h>
end_include
begin_include
include|#
directive|include
file|<qdir.h>
end_include
begin_include
include|#
directive|include
file|<qhash.h>
end_include
begin_include
include|#
directive|include
file|<qstyleoption.h>
end_include
begin_include
include|#
directive|include
file|<qapplication.h>
end_include
begin_include
include|#
directive|include
file|<qmainwindow.h>
end_include
begin_include
include|#
directive|include
file|<qfont.h>
end_include
begin_include
include|#
directive|include
file|<qgroupbox.h>
end_include
begin_include
include|#
directive|include
file|<qprocess.h>
end_include
begin_include
include|#
directive|include
file|<qpixmapcache.h>
end_include
begin_include
include|#
directive|include
file|<qdialogbuttonbox.h>
end_include
begin_include
include|#
directive|include
file|<qscrollbar.h>
end_include
begin_include
include|#
directive|include
file|<qspinbox.h>
end_include
begin_include
include|#
directive|include
file|<qslider.h>
end_include
begin_include
include|#
directive|include
file|<qsplitter.h>
end_include
begin_include
include|#
directive|include
file|<qprogressbar.h>
end_include
begin_include
include|#
directive|include
file|<qwizard.h>
end_include
begin_include
include|#
directive|include
file|<qlibrary.h>
end_include
begin_include
include|#
directive|include
file|<qdrawutil.h>
end_include
begin_include
include|#
directive|include
file|<private/qstylehelper_p.h>
end_include
begin_include
include|#
directive|include
file|<private/qdrawhelper_p.h>
end_include
begin_include
include|#
directive|include
file|<private/qapplication_p.h>
end_include
begin_macro
name|QT_BEGIN_NAMESPACE
end_macro
begin_using
using|using
namespace|namespace
name|QStyleHelper
namespace|;
end_using
begin_enum
DECL|enum|Direction
enum|enum
name|Direction
block|{
DECL|enumerator|TopDown
name|TopDown
block|,
DECL|enumerator|FromLeft
name|FromLeft
block|,
DECL|enumerator|BottomUp
name|BottomUp
block|,
DECL|enumerator|FromRight
name|FromRight
block|}
enum|;
end_enum
begin_comment
comment|// from windows style
end_comment
begin_decl_stmt
DECL|variable|windowsItemFrame
specifier|static
specifier|const
name|int
name|windowsItemFrame
init|=
literal|2
decl_stmt|;
end_decl_stmt
begin_comment
DECL|variable|windowsItemFrame
comment|// menu item frame width
end_comment
begin_decl_stmt
DECL|variable|windowsItemHMargin
specifier|static
specifier|const
name|int
name|windowsItemHMargin
init|=
literal|3
decl_stmt|;
end_decl_stmt
begin_comment
DECL|variable|windowsItemHMargin
comment|// menu item hor text margin
end_comment
begin_decl_stmt
DECL|variable|windowsItemVMargin
specifier|static
specifier|const
name|int
name|windowsItemVMargin
init|=
literal|8
decl_stmt|;
end_decl_stmt
begin_comment
DECL|variable|windowsItemVMargin
comment|// menu item ver text margin
end_comment
begin_decl_stmt
DECL|variable|windowsRightBorder
specifier|static
specifier|const
name|int
name|windowsRightBorder
init|=
literal|15
decl_stmt|;
end_decl_stmt
begin_comment
DECL|variable|windowsRightBorder
comment|// right border on windows
end_comment
begin_decl_stmt
DECL|variable|groupBoxBottomMargin
specifier|static
specifier|const
name|int
name|groupBoxBottomMargin
init|=
literal|0
decl_stmt|;
end_decl_stmt
begin_comment
DECL|variable|groupBoxBottomMargin
comment|// space below the groupbox
end_comment
begin_decl_stmt
DECL|variable|groupBoxTopMargin
specifier|static
specifier|const
name|int
name|groupBoxTopMargin
init|=
literal|3
decl_stmt|;
end_decl_stmt
begin_comment
comment|/* XPM */
end_comment
begin_decl_stmt
DECL|variable|dock_widget_close_xpm
specifier|static
specifier|const
name|char
modifier|*
specifier|const
name|dock_widget_close_xpm
index|[]
init|=
block|{
literal|"11 13 7 1"
block|,
literal|"  c None"
block|,
literal|". c #D5CFCB"
block|,
literal|"+ c #8F8B88"
block|,
literal|"@ c #6C6A67"
block|,
literal|"# c #ABA6A3"
block|,
literal|"$ c #B5B0AC"
block|,
literal|"% c #A4A09D"
block|,
literal|"           "
block|,
literal|" +@@@@@@@+ "
block|,
literal|"+#       #+"
block|,
literal|"@ $@   @$ @"
block|,
literal|"@ @@@ @@@ @"
block|,
literal|"@  @@@@@  @"
block|,
literal|"@   @@@   @"
block|,
literal|"@  @@@@@  @"
block|,
literal|"@ @@@ @@@ @"
block|,
literal|"@ $@   @$ @"
block|,
literal|"+%       #+"
block|,
literal|" +@@@@@@@+ "
block|,
literal|"           "
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|dock_widget_restore_xpm
specifier|static
specifier|const
name|char
modifier|*
specifier|const
name|dock_widget_restore_xpm
index|[]
init|=
block|{
literal|"11 13 7 1"
block|,
literal|" c None"
block|,
literal|". c #D5CFCB"
block|,
literal|"+ c #8F8B88"
block|,
literal|"@ c #6C6A67"
block|,
literal|"# c #ABA6A3"
block|,
literal|"$ c #B5B0AC"
block|,
literal|"% c #A4A09D"
block|,
literal|"           "
block|,
literal|" +@@@@@@@+ "
block|,
literal|"+#       #+"
block|,
literal|"@   #@@@# @"
block|,
literal|"@   @   @ @"
block|,
literal|"@ #@@@# @ @"
block|,
literal|"@ @   @ @ @"
block|,
literal|"@ @   @@@ @"
block|,
literal|"@ @   @   @"
block|,
literal|"@ #@@@#   @"
block|,
literal|"+%       #+"
block|,
literal|" +@@@@@@@+ "
block|,
literal|"           "
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|workspace_minimize
specifier|static
specifier|const
name|char
modifier|*
specifier|const
name|workspace_minimize
index|[]
init|=
block|{
literal|"11 13 7 1"
block|,
literal|"  c None"
block|,
literal|". c #D5CFCB"
block|,
literal|"+ c #8F8B88"
block|,
literal|"@ c #6C6A67"
block|,
literal|"# c #ABA6A3"
block|,
literal|"$ c #B5B0AC"
block|,
literal|"% c #A4A09D"
block|,
literal|"           "
block|,
literal|" +@@@@@@@+ "
block|,
literal|"+#       #+"
block|,
literal|"@         @"
block|,
literal|"@         @"
block|,
literal|"@         @"
block|,
literal|"@ @@@@@@@ @"
block|,
literal|"@ @@@@@@@ @"
block|,
literal|"@         @"
block|,
literal|"@         @"
block|,
literal|"+%       #+"
block|,
literal|" +@@@@@@@+ "
block|,
literal|"           "
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|qt_titlebar_context_help
specifier|static
specifier|const
name|char
modifier|*
specifier|const
name|qt_titlebar_context_help
index|[]
init|=
block|{
literal|"10 10 3 1"
block|,
literal|"  c None"
block|,
literal|"# c #000000"
block|,
literal|"+ c #444444"
block|,
literal|"  +####+  "
block|,
literal|" ###  ### "
block|,
literal|" ##    ## "
block|,
literal|"     +##+ "
block|,
literal|"    +##   "
block|,
literal|"    ##    "
block|,
literal|"    ##    "
block|,
literal|"          "
block|,
literal|"    ##    "
block|,
literal|"    ##    "
block|}
decl_stmt|;
end_decl_stmt
begin_function
DECL|function|mergedColors
specifier|static
name|QColor
name|mergedColors
parameter_list|(
specifier|const
name|QColor
modifier|&
name|colorA
parameter_list|,
specifier|const
name|QColor
modifier|&
name|colorB
parameter_list|,
name|int
name|factor
init|=
literal|50
parameter_list|)
block|{
specifier|const
name|int
name|maxFactor
init|=
literal|100
decl_stmt|;
name|QColor
name|tmp
init|=
name|colorA
decl_stmt|;
name|tmp
operator|.
name|setRed
argument_list|(
operator|(
name|tmp
operator|.
name|red
argument_list|()
operator|*
name|factor
operator|)
operator|/
name|maxFactor
operator|+
operator|(
name|colorB
operator|.
name|red
argument_list|()
operator|*
operator|(
name|maxFactor
operator|-
name|factor
operator|)
operator|)
operator|/
name|maxFactor
argument_list|)
expr_stmt|;
name|tmp
operator|.
name|setGreen
argument_list|(
operator|(
name|tmp
operator|.
name|green
argument_list|()
operator|*
name|factor
operator|)
operator|/
name|maxFactor
operator|+
operator|(
name|colorB
operator|.
name|green
argument_list|()
operator|*
operator|(
name|maxFactor
operator|-
name|factor
operator|)
operator|)
operator|/
name|maxFactor
argument_list|)
expr_stmt|;
name|tmp
operator|.
name|setBlue
argument_list|(
operator|(
name|tmp
operator|.
name|blue
argument_list|()
operator|*
name|factor
operator|)
operator|/
name|maxFactor
operator|+
operator|(
name|colorB
operator|.
name|blue
argument_list|()
operator|*
operator|(
name|maxFactor
operator|-
name|factor
operator|)
operator|)
operator|/
name|maxFactor
argument_list|)
expr_stmt|;
return|return
name|tmp
return|;
block|}
end_function
begin_function
DECL|function|colorizedImage
specifier|static
name|QPixmap
name|colorizedImage
parameter_list|(
specifier|const
name|QString
modifier|&
name|fileName
parameter_list|,
specifier|const
name|QColor
modifier|&
name|color
parameter_list|,
name|int
name|rotation
init|=
literal|0
parameter_list|)
block|{
name|QString
name|pixmapName
init|=
name|QLatin1String
argument_list|(
literal|"$qt_ia-"
argument_list|)
operator|%
name|fileName
operator|%
name|HexString
argument_list|<
name|uint
argument_list|>
argument_list|(
name|color
operator|.
name|rgba
argument_list|()
argument_list|)
operator|%
name|QString
operator|::
name|number
argument_list|(
name|rotation
argument_list|)
decl_stmt|;
name|QPixmap
name|pixmap
decl_stmt|;
if|if
condition|(
operator|!
name|QPixmapCache
operator|::
name|find
argument_list|(
name|pixmapName
argument_list|,
name|pixmap
argument_list|)
condition|)
block|{
name|QImage
name|image
argument_list|(
name|fileName
argument_list|)
decl_stmt|;
if|if
condition|(
name|image
operator|.
name|format
argument_list|()
operator|!=
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
condition|)
name|image
operator|=
name|image
operator|.
name|convertToFormat
argument_list|(
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
expr_stmt|;
name|int
name|width
init|=
name|image
operator|.
name|width
argument_list|()
decl_stmt|;
name|int
name|height
init|=
name|image
operator|.
name|height
argument_list|()
decl_stmt|;
name|int
name|source
init|=
name|color
operator|.
name|rgba
argument_list|()
decl_stmt|;
name|unsigned
name|char
name|sourceRed
init|=
name|qRed
argument_list|(
name|source
argument_list|)
decl_stmt|;
name|unsigned
name|char
name|sourceGreen
init|=
name|qGreen
argument_list|(
name|source
argument_list|)
decl_stmt|;
name|unsigned
name|char
name|sourceBlue
init|=
name|qBlue
argument_list|(
name|source
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|y
init|=
literal|0
init|;
name|y
operator|<
name|height
condition|;
operator|++
name|y
control|)
block|{
name|QRgb
modifier|*
name|data
init|=
operator|(
name|QRgb
operator|*
operator|)
name|image
operator|.
name|scanLine
argument_list|(
name|y
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|x
init|=
literal|0
init|;
name|x
operator|<
name|width
condition|;
name|x
operator|++
control|)
block|{
name|QRgb
name|col
init|=
name|data
index|[
name|x
index|]
decl_stmt|;
name|unsigned
name|int
name|colorDiff
init|=
operator|(
name|qBlue
argument_list|(
name|col
argument_list|)
operator|-
name|qRed
argument_list|(
name|col
argument_list|)
operator|)
decl_stmt|;
name|unsigned
name|char
name|gray
init|=
name|qGreen
argument_list|(
name|col
argument_list|)
decl_stmt|;
name|unsigned
name|char
name|red
init|=
name|gray
operator|+
name|qt_div_255
argument_list|(
name|sourceRed
operator|*
name|colorDiff
argument_list|)
decl_stmt|;
name|unsigned
name|char
name|green
init|=
name|gray
operator|+
name|qt_div_255
argument_list|(
name|sourceGreen
operator|*
name|colorDiff
argument_list|)
decl_stmt|;
name|unsigned
name|char
name|blue
init|=
name|gray
operator|+
name|qt_div_255
argument_list|(
name|sourceBlue
operator|*
name|colorDiff
argument_list|)
decl_stmt|;
name|unsigned
name|char
name|alpha
init|=
name|qt_div_255
argument_list|(
name|qAlpha
argument_list|(
name|col
argument_list|)
operator|*
name|qAlpha
argument_list|(
name|source
argument_list|)
argument_list|)
decl_stmt|;
name|data
index|[
name|x
index|]
operator|=
name|qRgba
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|,
name|alpha
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|rotation
operator|!=
literal|0
condition|)
block|{
name|QTransform
name|transform
decl_stmt|;
name|transform
operator|.
name|translate
argument_list|(
operator|-
name|image
operator|.
name|width
argument_list|()
operator|/
literal|2
argument_list|,
operator|-
name|image
operator|.
name|height
argument_list|()
operator|/
literal|2
argument_list|)
expr_stmt|;
name|transform
operator|.
name|rotate
argument_list|(
name|rotation
argument_list|)
expr_stmt|;
name|transform
operator|.
name|translate
argument_list|(
name|image
operator|.
name|width
argument_list|()
operator|/
literal|2
argument_list|,
name|image
operator|.
name|height
argument_list|()
operator|/
literal|2
argument_list|)
expr_stmt|;
name|image
operator|=
name|image
operator|.
name|transformed
argument_list|(
name|transform
argument_list|)
expr_stmt|;
block|}
name|pixmap
operator|=
name|QPixmap
operator|::
name|fromImage
argument_list|(
name|image
argument_list|)
expr_stmt|;
name|QPixmapCache
operator|::
name|insert
argument_list|(
name|pixmapName
argument_list|,
name|pixmap
argument_list|)
expr_stmt|;
block|}
return|return
name|pixmap
return|;
block|}
end_function
begin_comment
comment|// The default button and handle gradient
end_comment
begin_function
DECL|function|qt_fusion_gradient
specifier|static
name|QLinearGradient
name|qt_fusion_gradient
parameter_list|(
specifier|const
name|QRect
modifier|&
name|rect
parameter_list|,
specifier|const
name|QBrush
modifier|&
name|baseColor
parameter_list|,
name|Direction
name|direction
init|=
name|TopDown
parameter_list|)
block|{
name|int
name|x
init|=
name|rect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
decl_stmt|;
name|int
name|y
init|=
name|rect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
decl_stmt|;
name|QLinearGradient
name|gradient
decl_stmt|;
switch|switch
condition|(
name|direction
condition|)
block|{
case|case
name|FromLeft
case|:
name|gradient
operator|=
name|QLinearGradient
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|y
argument_list|,
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|y
argument_list|)
expr_stmt|;
break|break;
case|case
name|FromRight
case|:
name|gradient
operator|=
name|QLinearGradient
argument_list|(
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|y
argument_list|,
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|y
argument_list|)
expr_stmt|;
break|break;
case|case
name|BottomUp
case|:
name|gradient
operator|=
name|QLinearGradient
argument_list|(
name|x
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
argument_list|,
name|x
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|TopDown
case|:
default|default:
name|gradient
operator|=
name|QLinearGradient
argument_list|(
name|x
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|x
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
break|break;
block|}
if|if
condition|(
name|baseColor
operator|.
name|gradient
argument_list|()
condition|)
name|gradient
operator|.
name|setStops
argument_list|(
name|baseColor
operator|.
name|gradient
argument_list|()
operator|->
name|stops
argument_list|()
argument_list|)
expr_stmt|;
else|else
block|{
name|QColor
name|gradientStartColor
init|=
name|baseColor
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|124
argument_list|)
decl_stmt|;
name|QColor
name|gradientStopColor
init|=
name|baseColor
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|102
argument_list|)
decl_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|gradientStartColor
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|1
argument_list|,
name|gradientStopColor
argument_list|)
expr_stmt|;
comment|//          Uncomment for adding shiny shading
comment|//            QColor midColor1 = mergedColors(gradientStartColor, gradientStopColor, 55);
comment|//            QColor midColor2 = mergedColors(gradientStartColor, gradientStopColor, 45);
comment|//            gradient.setColorAt(0.5, midColor1);
comment|//            gradient.setColorAt(0.501, midColor2);
block|}
return|return
name|gradient
return|;
block|}
end_function
begin_function
DECL|function|qt_fusion_draw_mdibutton
specifier|static
name|void
name|qt_fusion_draw_mdibutton
parameter_list|(
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QStyleOptionTitleBar
modifier|*
name|option
parameter_list|,
specifier|const
name|QRect
modifier|&
name|tmp
parameter_list|,
name|bool
name|hover
parameter_list|,
name|bool
name|sunken
parameter_list|)
block|{
name|QColor
name|dark
decl_stmt|;
name|dark
operator|.
name|setHsv
argument_list|(
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|hue
argument_list|()
argument_list|,
name|qMin
argument_list|(
literal|255
argument_list|,
call|(
name|int
call|)
argument_list|(
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|saturation
argument_list|()
argument_list|)
argument_list|)
argument_list|,
name|qMin
argument_list|(
literal|255
argument_list|,
call|(
name|int
call|)
argument_list|(
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|value
argument_list|()
operator|*
literal|0.7
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QColor
name|highlight
init|=
name|option
operator|->
name|palette
operator|.
name|highlight
argument_list|()
operator|.
name|color
argument_list|()
decl_stmt|;
name|bool
name|active
init|=
operator|(
name|option
operator|->
name|titleBarState
operator|&
name|QStyle
operator|::
name|State_Active
operator|)
decl_stmt|;
name|QColor
name|titleBarHighlight
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|,
literal|60
argument_list|)
decl_stmt|;
if|if
condition|(
name|sunken
condition|)
name|painter
operator|->
name|fillRect
argument_list|(
name|tmp
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|option
operator|->
name|palette
operator|.
name|highlight
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|120
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|hover
condition|)
name|painter
operator|->
name|fillRect
argument_list|(
name|tmp
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|QColor
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|,
literal|20
argument_list|)
argument_list|)
expr_stmt|;
name|QColor
name|mdiButtonGradientStartColor
decl_stmt|;
name|QColor
name|mdiButtonGradientStopColor
decl_stmt|;
name|mdiButtonGradientStartColor
operator|=
name|QColor
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|40
argument_list|)
expr_stmt|;
name|mdiButtonGradientStopColor
operator|=
name|QColor
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|,
literal|60
argument_list|)
expr_stmt|;
if|if
condition|(
name|sunken
condition|)
name|titleBarHighlight
operator|=
name|highlight
operator|.
name|darker
argument_list|(
literal|130
argument_list|)
expr_stmt|;
name|QLinearGradient
name|gradient
argument_list|(
name|tmp
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|tmp
operator|.
name|top
argument_list|()
argument_list|,
name|tmp
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|tmp
operator|.
name|bottom
argument_list|()
argument_list|)
decl_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|mdiButtonGradientStartColor
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|1
argument_list|,
name|mdiButtonGradientStopColor
argument_list|)
expr_stmt|;
name|QColor
name|mdiButtonBorderColor
argument_list|(
name|active
condition|?
name|option
operator|->
name|palette
operator|.
name|highlight
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|180
argument_list|)
else|:
name|dark
operator|.
name|darker
argument_list|(
literal|110
argument_list|)
argument_list|)
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|mdiButtonBorderColor
argument_list|)
argument_list|)
expr_stmt|;
specifier|const
name|QLine
name|lines
index|[
literal|4
index|]
init|=
block|{
name|QLine
argument_list|(
name|tmp
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|tmp
operator|.
name|top
argument_list|()
argument_list|,
name|tmp
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|tmp
operator|.
name|top
argument_list|()
argument_list|)
block|,
name|QLine
argument_list|(
name|tmp
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|tmp
operator|.
name|bottom
argument_list|()
argument_list|,
name|tmp
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|tmp
operator|.
name|bottom
argument_list|()
argument_list|)
block|,
name|QLine
argument_list|(
name|tmp
operator|.
name|left
argument_list|()
argument_list|,
name|tmp
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|,
name|tmp
operator|.
name|left
argument_list|()
argument_list|,
name|tmp
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
block|,
name|QLine
argument_list|(
argument|tmp.right()
argument_list|,
argument|tmp.top() +
literal|2
argument_list|,
argument|tmp.right()
argument_list|,
argument|tmp.bottom() -
literal|2
argument_list|)
block|}
decl_stmt|;
name|painter
operator|->
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|4
argument_list|)
expr_stmt|;
specifier|const
name|QPoint
name|points
index|[
literal|4
index|]
init|=
block|{
name|QPoint
argument_list|(
name|tmp
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|tmp
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
name|tmp
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|tmp
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
name|tmp
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|tmp
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
argument|tmp.right() -
literal|1
argument_list|,
argument|tmp.bottom() -
literal|1
argument_list|)
block|}
decl_stmt|;
name|painter
operator|->
name|drawPoints
argument_list|(
name|points
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|titleBarHighlight
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|tmp
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|tmp
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|tmp
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|tmp
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|tmp
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|tmp
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|,
name|tmp
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|tmp
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|gradient
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|tmp
operator|.
name|right
argument_list|()
operator|+
literal|1
argument_list|,
name|tmp
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|,
name|tmp
operator|.
name|right
argument_list|()
operator|+
literal|1
argument_list|,
name|tmp
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPoint
argument_list|(
name|tmp
operator|.
name|right
argument_list|()
argument_list|,
name|tmp
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|tmp
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|tmp
operator|.
name|bottom
argument_list|()
operator|+
literal|1
argument_list|,
name|tmp
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|tmp
operator|.
name|bottom
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPoint
argument_list|(
name|tmp
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|tmp
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPoint
argument_list|(
name|tmp
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|tmp
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPoint
argument_list|(
name|tmp
operator|.
name|right
argument_list|()
argument_list|,
name|tmp
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|/*     \internal */
end_comment
begin_constructor
DECL|function|QFusionStylePrivate
name|QFusionStylePrivate
operator|::
name|QFusionStylePrivate
parameter_list|()
block|{
name|animationFps
operator|=
literal|60
expr_stmt|;
block|}
end_constructor
begin_comment
comment|/*!     \class QFusionStyle     \brief The QFusionStyle class provides a custom widget style      \inmodule QtWidgets     \internal      The Fusion style provides a custom look and feel that is not     tied to a particular platform.     //{Fusion Style Widget Gallery}     \sa QWindowsStyle, QWindowsVistaStyle, QMacStyle, QCommonStyle */
end_comment
begin_comment
comment|/*!     Constructs a QFusionStyle object. */
end_comment
begin_constructor
DECL|function|QFusionStyle
name|QFusionStyle
operator|::
name|QFusionStyle
parameter_list|()
member_init_list|:
name|QCommonStyle
argument_list|(
operator|*
operator|new
name|QFusionStylePrivate
argument_list|)
block|{
name|setObjectName
argument_list|(
name|QLatin1String
argument_list|(
literal|"Fusion"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_comment
comment|/*!     \internal      Constructs a QFusionStyle object. */
end_comment
begin_constructor
DECL|function|QFusionStyle
name|QFusionStyle
operator|::
name|QFusionStyle
parameter_list|(
name|QFusionStylePrivate
modifier|&
name|dd
parameter_list|)
member_init_list|:
name|QCommonStyle
argument_list|(
name|dd
argument_list|)
block|{ }
end_constructor
begin_comment
comment|/*!     Destroys the QFusionStyle object. */
end_comment
begin_destructor
DECL|function|~QFusionStyle
name|QFusionStyle
operator|::
name|~
name|QFusionStyle
parameter_list|()
block|{ }
end_destructor
begin_comment
comment|/*!     \fn void QFusionStyle::drawItemText(QPainter *painter, const QRect&rectangle, int alignment, const QPalette&palette,                                     bool enabled, const QString& text, QPalette::ColorRole textRole) const      Draws the given \a text in the specified \a rectangle using the     provided \a painter and \a palette.      Text is drawn using the painter's pen. If an explicit \a textRole     is specified, then the text is drawn using the \a palette's color     for the specified role.  The \a enabled value indicates whether or     not the item is enabled; when reimplementing, this value should     influence how the item is drawn.      The text is aligned and wrapped according to the specified \a     alignment.      \sa Qt::Alignment */
end_comment
begin_function
DECL|function|drawItemText
name|void
name|QFusionStyle
operator|::
name|drawItemText
parameter_list|(
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QRect
modifier|&
name|rect
parameter_list|,
name|int
name|alignment
parameter_list|,
specifier|const
name|QPalette
modifier|&
name|pal
parameter_list|,
name|bool
name|enabled
parameter_list|,
specifier|const
name|QString
modifier|&
name|text
parameter_list|,
name|QPalette
operator|::
name|ColorRole
name|textRole
parameter_list|)
specifier|const
block|{
if|if
condition|(
name|text
operator|.
name|isEmpty
argument_list|()
condition|)
return|return;
name|QPen
name|savedPen
init|=
name|painter
operator|->
name|pen
argument_list|()
decl_stmt|;
if|if
condition|(
name|textRole
operator|!=
name|QPalette
operator|::
name|NoRole
condition|)
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|pal
operator|.
name|brush
argument_list|(
name|textRole
argument_list|)
argument_list|,
name|savedPen
operator|.
name|widthF
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|enabled
condition|)
block|{
name|QPen
name|pen
init|=
name|painter
operator|->
name|pen
argument_list|()
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|pen
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|drawText
argument_list|(
name|rect
argument_list|,
name|alignment
argument_list|,
name|text
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|savedPen
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|/*!     \reimp */
end_comment
begin_function
DECL|function|drawPrimitive
name|void
name|QFusionStyle
operator|::
name|drawPrimitive
parameter_list|(
name|PrimitiveElement
name|elem
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|option
parameter_list|,
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
name|Q_ASSERT
argument_list|(
name|option
argument_list|)
expr_stmt|;
name|Q_D
argument_list|(
specifier|const
name|QFusionStyle
argument_list|)
expr_stmt|;
name|QRect
name|rect
init|=
name|option
operator|->
name|rect
decl_stmt|;
name|int
name|state
init|=
name|option
operator|->
name|state
decl_stmt|;
name|QColor
name|outline
init|=
name|d
operator|->
name|outline
argument_list|(
name|option
operator|->
name|palette
argument_list|)
decl_stmt|;
name|QColor
name|highlightedOutline
init|=
name|d
operator|->
name|highlightedOutline
argument_list|(
name|option
operator|->
name|palette
argument_list|)
decl_stmt|;
name|QColor
name|tabFrameColor
init|=
name|d
operator|->
name|tabFrameColor
argument_list|(
name|option
operator|->
name|palette
argument_list|)
decl_stmt|;
switch|switch
condition|(
name|elem
condition|)
block|{
comment|// No frame drawn
case|case
name|PE_FrameGroupBox
case|:
block|{
name|QPixmap
name|pixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/fusion_groupbox.png"
argument_list|)
argument_list|)
decl_stmt|;
name|int
name|topMargin
init|=
name|qMax
argument_list|(
name|pixelMetric
argument_list|(
name|PM_ExclusiveIndicatorHeight
argument_list|)
argument_list|,
name|option
operator|->
name|fontMetrics
operator|.
name|height
argument_list|()
argument_list|)
operator|+
name|groupBoxTopMargin
decl_stmt|;
name|QRect
name|frame
init|=
name|option
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
name|topMargin
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|qDrawBorderPixmap
argument_list|(
name|painter
argument_list|,
name|frame
argument_list|,
name|QMargins
argument_list|(
literal|6
argument_list|,
literal|6
argument_list|,
literal|6
argument_list|,
literal|6
argument_list|)
argument_list|,
name|pixmap
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|PE_IndicatorBranch
case|:
block|{
if|if
condition|(
operator|!
operator|(
name|option
operator|->
name|state
operator|&
name|State_Children
operator|)
condition|)
break|break;
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|State_Open
condition|)
name|drawPrimitive
argument_list|(
name|PE_IndicatorArrowDown
argument_list|,
name|option
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
else|else
name|drawPrimitive
argument_list|(
name|PE_IndicatorArrowRight
argument_list|,
name|option
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|PE_FrameTabBarBase
case|:
if|if
condition|(
specifier|const
name|QStyleOptionTabBarBase
modifier|*
name|tbb
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionTabBarBase
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|outline
operator|.
name|lighter
argument_list|(
literal|110
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
switch|switch
condition|(
name|tbb
operator|->
name|shape
condition|)
block|{
case|case
name|QTabBar
operator|::
name|RoundedNorth
case|:
block|{
name|QRegion
name|region
argument_list|(
name|tbb
operator|->
name|rect
argument_list|)
decl_stmt|;
name|region
operator|-=
name|tbb
operator|->
name|selectedTabRect
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|tbb
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|tbb
operator|->
name|rect
operator|.
name|topRight
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setClipRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|light
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|tbb
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|tbb
operator|->
name|rect
operator|.
name|topRight
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|QTabBar
operator|::
name|RoundedWest
case|:
name|painter
operator|->
name|drawLine
argument_list|(
name|tbb
operator|->
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|tbb
operator|->
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|tbb
operator|->
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|tbb
operator|->
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|QTabBar
operator|::
name|RoundedSouth
case|:
name|painter
operator|->
name|drawLine
argument_list|(
name|tbb
operator|->
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|tbb
operator|->
name|rect
operator|.
name|bottom
argument_list|()
argument_list|,
name|tbb
operator|->
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|tbb
operator|->
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|QTabBar
operator|::
name|RoundedEast
case|:
name|painter
operator|->
name|drawLine
argument_list|(
name|tbb
operator|->
name|rect
operator|.
name|topRight
argument_list|()
argument_list|,
name|tbb
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|QTabBar
operator|::
name|TriangularNorth
case|:
case|case
name|QTabBar
operator|::
name|TriangularEast
case|:
case|case
name|QTabBar
operator|::
name|TriangularWest
case|:
case|case
name|QTabBar
operator|::
name|TriangularSouth
case|:
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
name|QCommonStyle
operator|::
name|drawPrimitive
argument_list|(
name|elem
argument_list|,
name|option
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
return|return;
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
return|return;
case|case
name|PE_PanelScrollAreaCorner
case|:
block|{
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
name|QColor
name|alphaOutline
init|=
name|outline
decl_stmt|;
name|alphaOutline
operator|.
name|setAlpha
argument_list|(
literal|180
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|alphaOutline
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|option
operator|->
name|palette
operator|.
name|brush
argument_list|(
name|QPalette
operator|::
name|Window
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|option
operator|->
name|rect
argument_list|)
expr_stmt|;
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
break|break;
case|case
name|PE_IndicatorArrowUp
case|:
case|case
name|PE_IndicatorArrowDown
case|:
case|case
name|PE_IndicatorArrowRight
case|:
case|case
name|PE_IndicatorArrowLeft
case|:
block|{
if|if
condition|(
name|option
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|<=
literal|1
operator|||
name|option
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|<=
literal|1
condition|)
break|break;
name|QColor
name|arrowColor
init|=
name|option
operator|->
name|palette
operator|.
name|foreground
argument_list|()
operator|.
name|color
argument_list|()
decl_stmt|;
name|QPixmap
name|arrow
decl_stmt|;
name|int
name|rotation
init|=
literal|0
decl_stmt|;
switch|switch
condition|(
name|elem
condition|)
block|{
case|case
name|PE_IndicatorArrowDown
case|:
name|rotation
operator|=
literal|180
expr_stmt|;
break|break;
case|case
name|PE_IndicatorArrowRight
case|:
name|rotation
operator|=
literal|90
expr_stmt|;
break|break;
case|case
name|PE_IndicatorArrowLeft
case|:
name|rotation
operator|=
operator|-
literal|90
expr_stmt|;
break|break;
default|default:
break|break;
block|}
name|arrow
operator|=
name|colorizedImage
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/fusion_arrow.png"
argument_list|)
argument_list|,
name|arrowColor
argument_list|,
name|rotation
argument_list|)
expr_stmt|;
name|QRect
name|rect
init|=
name|option
operator|->
name|rect
decl_stmt|;
name|QRect
name|arrowRect
decl_stmt|;
name|int
name|imageMax
init|=
name|qMin
argument_list|(
name|arrow
operator|.
name|height
argument_list|()
argument_list|,
name|arrow
operator|.
name|width
argument_list|()
argument_list|)
decl_stmt|;
name|int
name|rectMax
init|=
name|qMin
argument_list|(
name|rect
operator|.
name|height
argument_list|()
argument_list|,
name|rect
operator|.
name|width
argument_list|()
argument_list|)
decl_stmt|;
name|int
name|size
init|=
name|qMin
argument_list|(
name|imageMax
argument_list|,
name|rectMax
argument_list|)
decl_stmt|;
name|arrowRect
operator|.
name|setWidth
argument_list|(
name|size
argument_list|)
expr_stmt|;
name|arrowRect
operator|.
name|setHeight
argument_list|(
name|size
argument_list|)
expr_stmt|;
if|if
condition|(
name|arrow
operator|.
name|width
argument_list|()
operator|>
name|arrow
operator|.
name|height
argument_list|()
condition|)
name|arrowRect
operator|.
name|setHeight
argument_list|(
name|arrow
operator|.
name|height
argument_list|()
operator|*
name|size
operator|/
name|arrow
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|arrowRect
operator|.
name|setWidth
argument_list|(
name|arrow
operator|.
name|width
argument_list|()
operator|*
name|size
operator|/
name|arrow
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
name|arrowRect
operator|.
name|moveTopLeft
argument_list|(
name|rect
operator|.
name|center
argument_list|()
operator|-
name|arrowRect
operator|.
name|center
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
name|painter
operator|->
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|SmoothPixmapTransform
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPixmap
argument_list|(
name|arrowRect
argument_list|,
name|arrow
argument_list|)
expr_stmt|;
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
break|break;
case|case
name|PE_IndicatorViewItemCheck
case|:
block|{
name|QStyleOptionButton
name|button
decl_stmt|;
name|button
operator|.
name|QStyleOption
operator|::
name|operator
name|=
argument_list|(
operator|*
name|option
argument_list|)
expr_stmt|;
name|button
operator|.
name|state
operator|&=
operator|~
name|State_MouseOver
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_IndicatorCheckBox
argument_list|,
operator|&
name|button
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
return|return;
case|case
name|PE_IndicatorHeaderArrow
case|:
if|if
condition|(
specifier|const
name|QStyleOptionHeader
modifier|*
name|header
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionHeader
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|QRect
name|r
init|=
name|header
operator|->
name|rect
decl_stmt|;
name|QPixmap
name|arrow
decl_stmt|;
name|QColor
name|arrowColor
init|=
name|header
operator|->
name|palette
operator|.
name|foreground
argument_list|()
operator|.
name|color
argument_list|()
decl_stmt|;
name|QPoint
name|offset
init|=
name|QPoint
argument_list|(
literal|0
argument_list|,
operator|-
literal|1
argument_list|)
decl_stmt|;
if|if
condition|(
name|header
operator|->
name|sortIndicator
operator|&
name|QStyleOptionHeader
operator|::
name|SortUp
condition|)
block|{
name|arrow
operator|=
name|colorizedImage
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/fusion_arrow.png"
argument_list|)
argument_list|,
name|arrowColor
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|header
operator|->
name|sortIndicator
operator|&
name|QStyleOptionHeader
operator|::
name|SortDown
condition|)
block|{
name|arrow
operator|=
name|colorizedImage
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/fusion_arrow.png"
argument_list|)
argument_list|,
name|arrowColor
argument_list|,
literal|180
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|arrow
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|r
operator|.
name|setSize
argument_list|(
name|QSize
argument_list|(
name|arrow
operator|.
name|width
argument_list|()
operator|/
literal|2
argument_list|,
name|arrow
operator|.
name|height
argument_list|()
operator|/
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|r
operator|.
name|moveCenter
argument_list|(
name|header
operator|->
name|rect
operator|.
name|center
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPixmap
argument_list|(
name|r
operator|.
name|translated
argument_list|(
name|offset
argument_list|)
argument_list|,
name|arrow
argument_list|)
expr_stmt|;
block|}
block|}
break|break;
case|case
name|PE_IndicatorButtonDropDown
case|:
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_PanelButtonCommand
argument_list|,
name|option
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
break|break;
case|case
name|PE_IndicatorToolBarSeparator
case|:
block|{
name|QRect
name|rect
init|=
name|option
operator|->
name|rect
decl_stmt|;
specifier|const
name|int
name|margin
init|=
literal|6
decl_stmt|;
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|State_Horizontal
condition|)
block|{
specifier|const
name|int
name|offset
init|=
name|rect
operator|.
name|width
argument_list|()
operator|/
literal|2
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|110
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|rect
operator|.
name|bottomLeft
argument_list|()
operator|.
name|x
argument_list|()
operator|+
name|offset
argument_list|,
name|rect
operator|.
name|bottomLeft
argument_list|()
operator|.
name|y
argument_list|()
operator|-
name|margin
argument_list|,
name|rect
operator|.
name|topLeft
argument_list|()
operator|.
name|x
argument_list|()
operator|+
name|offset
argument_list|,
name|rect
operator|.
name|topLeft
argument_list|()
operator|.
name|y
argument_list|()
operator|+
name|margin
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|110
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|rect
operator|.
name|bottomLeft
argument_list|()
operator|.
name|x
argument_list|()
operator|+
name|offset
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|bottomLeft
argument_list|()
operator|.
name|y
argument_list|()
operator|-
name|margin
argument_list|,
name|rect
operator|.
name|topLeft
argument_list|()
operator|.
name|x
argument_list|()
operator|+
name|offset
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|topLeft
argument_list|()
operator|.
name|y
argument_list|()
operator|+
name|margin
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|//Draw vertical separator
specifier|const
name|int
name|offset
init|=
name|rect
operator|.
name|height
argument_list|()
operator|/
literal|2
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|110
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|rect
operator|.
name|topLeft
argument_list|()
operator|.
name|x
argument_list|()
operator|+
name|margin
argument_list|,
name|rect
operator|.
name|topLeft
argument_list|()
operator|.
name|y
argument_list|()
operator|+
name|offset
argument_list|,
name|rect
operator|.
name|topRight
argument_list|()
operator|.
name|x
argument_list|()
operator|-
name|margin
argument_list|,
name|rect
operator|.
name|topRight
argument_list|()
operator|.
name|y
argument_list|()
operator|+
name|offset
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|110
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|rect
operator|.
name|topLeft
argument_list|()
operator|.
name|x
argument_list|()
operator|+
name|margin
argument_list|,
name|rect
operator|.
name|topLeft
argument_list|()
operator|.
name|y
argument_list|()
operator|+
name|offset
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|topRight
argument_list|()
operator|.
name|x
argument_list|()
operator|-
name|margin
argument_list|,
name|rect
operator|.
name|topRight
argument_list|()
operator|.
name|y
argument_list|()
operator|+
name|offset
operator|+
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
break|break;
case|case
name|PE_Frame
case|:
block|{
if|if
condition|(
name|widget
operator|&&
name|widget
operator|->
name|inherits
argument_list|(
literal|"QComboBoxPrivateContainer"
argument_list|)
condition|)
block|{
name|QStyleOption
name|copy
init|=
operator|*
name|option
decl_stmt|;
name|copy
operator|.
name|state
operator||=
name|State_Raised
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_PanelMenu
argument_list|,
operator|&
name|copy
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
break|break;
block|}
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
name|QPen
name|thePen
argument_list|(
name|outline
operator|.
name|lighter
argument_list|(
literal|108
argument_list|)
argument_list|)
decl_stmt|;
name|thePen
operator|.
name|setCosmetic
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|thePen
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
break|break;
case|case
name|PE_FrameMenu
case|:
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|outline
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QColor
name|frameLight
init|=
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|160
argument_list|)
decl_stmt|;
name|QColor
name|frameShadow
init|=
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|110
argument_list|)
decl_stmt|;
comment|//paint beveleffect
name|QRect
name|frame
init|=
name|option
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|frameLight
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|frame
operator|.
name|topLeft
argument_list|()
argument_list|,
name|frame
operator|.
name|bottomLeft
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|frame
operator|.
name|topLeft
argument_list|()
argument_list|,
name|frame
operator|.
name|topRight
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|frameShadow
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|frame
operator|.
name|topRight
argument_list|()
argument_list|,
name|frame
operator|.
name|bottomRight
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|frame
operator|.
name|bottomLeft
argument_list|()
argument_list|,
name|frame
operator|.
name|bottomRight
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
case|case
name|PE_FrameDockWidget
case|:
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
block|{
name|QColor
name|softshadow
init|=
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|120
argument_list|)
decl_stmt|;
name|QRect
name|rect
init|=
name|option
operator|->
name|rect
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|softshadow
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|light
argument_list|()
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|120
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
case|case
name|PE_PanelButtonTool
case|:
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
name|option
operator|->
name|state
operator|&
name|State_Enabled
operator|||
name|option
operator|->
name|state
operator|&
name|State_On
operator|)
operator|||
operator|!
operator|(
name|option
operator|->
name|state
operator|&
name|State_AutoRaise
operator|)
condition|)
block|{
if|if
condition|(
name|widget
operator|&&
name|widget
operator|->
name|inherits
argument_list|(
literal|"QDockWidgetTitleButton"
argument_list|)
condition|)
block|{
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|State_MouseOver
condition|)
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_PanelButtonCommand
argument_list|,
name|option
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_PanelButtonCommand
argument_list|,
name|option
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
case|case
name|PE_IndicatorDockWidgetResizeHandle
case|:
block|{
name|QStyleOption
name|dockWidgetHandle
init|=
operator|*
name|option
decl_stmt|;
name|bool
name|horizontal
init|=
name|option
operator|->
name|state
operator|&
name|State_Horizontal
decl_stmt|;
if|if
condition|(
name|horizontal
condition|)
name|dockWidgetHandle
operator|.
name|state
operator|&=
operator|~
name|State_Horizontal
expr_stmt|;
else|else
name|dockWidgetHandle
operator|.
name|state
operator||=
name|State_Horizontal
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawControl
argument_list|(
name|CE_Splitter
argument_list|,
operator|&
name|dockWidgetHandle
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|PE_FrameWindow
case|:
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
block|{
name|QRect
name|rect
init|=
name|option
operator|->
name|rect
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|outline
operator|.
name|darker
argument_list|(
literal|150
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|light
argument_list|()
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|120
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
case|case
name|PE_FrameLineEdit
case|:
block|{
name|QRect
name|r
init|=
name|rect
decl_stmt|;
name|bool
name|hasFocus
init|=
name|option
operator|->
name|state
operator|&
name|State_HasFocus
decl_stmt|;
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
name|painter
operator|->
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|//  ### highdpi painter bug.
name|painter
operator|->
name|translate
argument_list|(
literal|0.5
argument_list|,
literal|0.5
argument_list|)
expr_stmt|;
comment|// Draw Outline
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|hasFocus
condition|?
name|highlightedOutline
else|:
name|outline
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|option
operator|->
name|palette
operator|.
name|base
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRoundedRect
argument_list|(
name|r
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
if|if
condition|(
name|hasFocus
condition|)
block|{
name|QColor
name|softHighlight
init|=
name|highlightedOutline
decl_stmt|;
name|softHighlight
operator|.
name|setAlpha
argument_list|(
literal|40
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|softHighlight
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRoundedRect
argument_list|(
name|r
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|2
argument_list|,
operator|-
literal|2
argument_list|)
argument_list|,
literal|1.7
argument_list|,
literal|1.7
argument_list|)
expr_stmt|;
block|}
comment|// Draw inner shadow
name|painter
operator|->
name|setPen
argument_list|(
name|d
operator|->
name|topShadow
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
break|break;
case|case
name|PE_IndicatorCheckBox
case|:
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
if|if
condition|(
specifier|const
name|QStyleOptionButton
modifier|*
name|checkbox
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionButton
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|painter
operator|->
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|painter
operator|->
name|translate
argument_list|(
literal|0.5
argument_list|,
literal|0.5
argument_list|)
expr_stmt|;
name|rect
operator|=
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QColor
name|pressedColor
init|=
name|mergedColors
argument_list|(
name|option
operator|->
name|palette
operator|.
name|base
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
name|option
operator|->
name|palette
operator|.
name|foreground
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
literal|85
argument_list|)
decl_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|Qt
operator|::
name|NoBrush
argument_list|)
expr_stmt|;
comment|// Gradient fill
name|QLinearGradient
name|gradient
argument_list|(
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|)
decl_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0
argument_list|,
operator|(
name|state
operator|&
name|State_Sunken
operator|)
condition|?
name|pressedColor
else|:
name|option
operator|->
name|palette
operator|.
name|base
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|115
argument_list|)
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0.15
argument_list|,
operator|(
name|state
operator|&
name|State_Sunken
operator|)
condition|?
name|pressedColor
else|:
name|option
operator|->
name|palette
operator|.
name|base
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|1
argument_list|,
operator|(
name|state
operator|&
name|State_Sunken
operator|)
condition|?
name|pressedColor
else|:
name|option
operator|->
name|palette
operator|.
name|base
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
operator|(
name|state
operator|&
name|State_Sunken
operator|)
condition|?
name|QBrush
argument_list|(
name|pressedColor
argument_list|)
else|:
name|gradient
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|outline
operator|.
name|lighter
argument_list|(
literal|110
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|State_HasFocus
operator|&&
name|option
operator|->
name|state
operator|&
name|State_KeyboardFocusChange
condition|)
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|highlightedOutline
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|rect
argument_list|)
expr_stmt|;
name|QColor
name|checkMarkColor
init|=
name|option
operator|->
name|palette
operator|.
name|text
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|120
argument_list|)
decl_stmt|;
if|if
condition|(
name|checkbox
operator|->
name|state
operator|&
name|State_NoChange
condition|)
block|{
name|gradient
operator|=
name|QLinearGradient
argument_list|(
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|)
expr_stmt|;
name|checkMarkColor
operator|.
name|setAlpha
argument_list|(
literal|80
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|checkMarkColor
argument_list|)
expr_stmt|;
name|checkMarkColor
operator|.
name|setAlpha
argument_list|(
literal|140
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|1
argument_list|,
name|checkMarkColor
argument_list|)
expr_stmt|;
name|checkMarkColor
operator|.
name|setAlpha
argument_list|(
literal|180
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|checkMarkColor
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|gradient
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|rect
operator|.
name|adjusted
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|,
operator|-
literal|3
argument_list|,
operator|-
literal|3
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|checkbox
operator|->
name|state
operator|&
operator|(
name|State_On
operator|)
condition|)
block|{
name|QPen
name|checkPen
init|=
name|QPen
argument_list|(
name|checkMarkColor
argument_list|,
literal|1.8
argument_list|)
decl_stmt|;
name|checkMarkColor
operator|.
name|setAlpha
argument_list|(
literal|210
argument_list|)
expr_stmt|;
name|painter
operator|->
name|translate
argument_list|(
operator|-
literal|1
argument_list|,
literal|0.5
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|checkPen
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|Qt
operator|::
name|NoBrush
argument_list|)
expr_stmt|;
name|painter
operator|->
name|translate
argument_list|(
literal|0.2
argument_list|,
literal|0.0
argument_list|)
expr_stmt|;
comment|// Draw checkmark
name|QPainterPath
name|path
decl_stmt|;
name|path
operator|.
name|moveTo
argument_list|(
literal|5
argument_list|,
name|rect
operator|.
name|height
argument_list|()
operator|/
literal|2.0
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|rect
operator|.
name|width
argument_list|()
operator|/
literal|2.0
operator|-
literal|0
argument_list|,
name|rect
operator|.
name|height
argument_list|()
operator|-
literal|3
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|rect
operator|.
name|width
argument_list|()
operator|-
literal|2.5
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPath
argument_list|(
name|path
operator|.
name|translated
argument_list|(
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
case|case
name|PE_IndicatorRadioButton
case|:
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
block|{
name|QColor
name|pressedColor
init|=
name|mergedColors
argument_list|(
name|option
operator|->
name|palette
operator|.
name|base
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
name|option
operator|->
name|palette
operator|.
name|foreground
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
literal|85
argument_list|)
decl_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
operator|(
name|state
operator|&
name|State_Sunken
operator|)
condition|?
name|pressedColor
else|:
name|option
operator|->
name|palette
operator|.
name|base
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QPainterPath
name|circle
decl_stmt|;
name|circle
operator|.
name|addEllipse
argument_list|(
name|rect
operator|.
name|center
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|1.0
argument_list|,
literal|1.0
argument_list|)
argument_list|,
literal|6.5
argument_list|,
literal|6.5
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|150
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|State_HasFocus
operator|&&
name|option
operator|->
name|state
operator|&
name|State_KeyboardFocusChange
condition|)
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|highlightedOutline
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPath
argument_list|(
name|circle
argument_list|)
expr_stmt|;
if|if
condition|(
name|state
operator|&
operator|(
name|State_On
operator|)
condition|)
block|{
name|circle
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|circle
operator|.
name|addEllipse
argument_list|(
name|rect
operator|.
name|center
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
literal|2.8
argument_list|,
literal|2.8
argument_list|)
expr_stmt|;
name|QColor
name|checkMarkColor
init|=
name|option
operator|->
name|palette
operator|.
name|text
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|120
argument_list|)
decl_stmt|;
name|checkMarkColor
operator|.
name|setAlpha
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|checkMarkColor
argument_list|)
expr_stmt|;
name|checkMarkColor
operator|.
name|setAlpha
argument_list|(
literal|180
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|checkMarkColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPath
argument_list|(
name|circle
argument_list|)
expr_stmt|;
block|}
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
case|case
name|PE_IndicatorToolBarHandle
case|:
block|{
comment|//draw grips
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|State_Horizontal
condition|)
block|{
for|for
control|(
name|int
name|i
init|=
operator|-
literal|3
init|;
name|i
operator|<
literal|2
condition|;
name|i
operator|+=
literal|3
control|)
block|{
for|for
control|(
name|int
name|j
init|=
operator|-
literal|8
init|;
name|j
operator|<
literal|10
condition|;
name|j
operator|+=
literal|3
control|)
block|{
name|painter
operator|->
name|fillRect
argument_list|(
name|rect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|+
name|i
argument_list|,
name|rect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|+
name|j
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|,
name|d
operator|->
name|lightShade
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|fillRect
argument_list|(
name|rect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|+
name|i
argument_list|,
name|rect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|+
name|j
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|d
operator|->
name|darkShade
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
else|else
block|{
comment|//vertical toolbar
for|for
control|(
name|int
name|i
init|=
operator|-
literal|6
init|;
name|i
operator|<
literal|12
condition|;
name|i
operator|+=
literal|3
control|)
block|{
for|for
control|(
name|int
name|j
init|=
operator|-
literal|3
init|;
name|j
operator|<
literal|2
condition|;
name|j
operator|+=
literal|3
control|)
block|{
name|painter
operator|->
name|fillRect
argument_list|(
name|rect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|+
name|i
argument_list|,
name|rect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|+
name|j
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|,
name|d
operator|->
name|lightShade
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|fillRect
argument_list|(
name|rect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|+
name|i
argument_list|,
name|rect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|+
name|j
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|d
operator|->
name|darkShade
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
break|break;
block|}
case|case
name|PE_FrameDefaultButton
case|:
break|break;
case|case
name|PE_FrameFocusRect
case|:
if|if
condition|(
specifier|const
name|QStyleOptionFocusRect
modifier|*
name|fropt
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionFocusRect
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
comment|//### check for d->alt_down
if|if
condition|(
operator|!
operator|(
name|fropt
operator|->
name|state
operator|&
name|State_KeyboardFocusChange
operator|)
condition|)
return|return;
name|QRect
name|rect
init|=
name|option
operator|->
name|rect
decl_stmt|;
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
name|painter
operator|->
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|painter
operator|->
name|translate
argument_list|(
literal|0.5
argument_list|,
literal|0.5
argument_list|)
expr_stmt|;
name|QColor
name|fillcolor
init|=
name|highlightedOutline
decl_stmt|;
name|fillcolor
operator|.
name|setAlpha
argument_list|(
literal|80
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|fillcolor
operator|.
name|darker
argument_list|(
literal|120
argument_list|)
argument_list|)
expr_stmt|;
name|fillcolor
operator|.
name|setAlpha
argument_list|(
literal|30
argument_list|)
expr_stmt|;
name|QLinearGradient
name|gradient
argument_list|(
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|)
decl_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|fillcolor
operator|.
name|lighter
argument_list|(
literal|160
argument_list|)
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|1
argument_list|,
name|fillcolor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|gradient
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRoundedRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
break|break;
case|case
name|PE_PanelButtonCommand
case|:
block|{
name|bool
name|isDefault
init|=
literal|false
decl_stmt|;
name|bool
name|isFlat
init|=
literal|false
decl_stmt|;
name|bool
name|isDown
init|=
operator|(
name|option
operator|->
name|state
operator|&
name|State_Sunken
operator|)
operator|||
operator|(
name|option
operator|->
name|state
operator|&
name|State_On
operator|)
decl_stmt|;
name|QRect
name|r
decl_stmt|;
if|if
condition|(
specifier|const
name|QStyleOptionButton
modifier|*
name|button
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionButton
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|isDefault
operator|=
operator|(
name|button
operator|->
name|features
operator|&
name|QStyleOptionButton
operator|::
name|DefaultButton
operator|)
operator|&&
operator|(
name|button
operator|->
name|state
operator|&
name|State_Enabled
operator|)
expr_stmt|;
name|isFlat
operator|=
operator|(
name|button
operator|->
name|features
operator|&
name|QStyleOptionButton
operator|::
name|Flat
operator|)
expr_stmt|;
block|}
if|if
condition|(
name|isFlat
operator|&&
operator|!
name|isDown
condition|)
block|{
if|if
condition|(
name|isDefault
condition|)
block|{
name|r
operator|=
name|option
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
argument_list|)
expr_stmt|;
specifier|const
name|QLine
name|lines
index|[
literal|4
index|]
init|=
block|{
name|QLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|r
operator|.
name|top
argument_list|()
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|r
operator|.
name|top
argument_list|()
argument_list|)
argument_list|)
block|,
name|QLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
argument_list|)
block|,
name|QLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
argument_list|)
block|,
name|QLine
argument_list|(
argument|QPoint(r.left() +
literal|2
argument|, r.bottom())
argument_list|,
argument|QPoint(r.right() -
literal|2
argument|, r.bottom())
argument_list|)
block|}
decl_stmt|;
name|painter
operator|->
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|4
argument_list|)
expr_stmt|;
specifier|const
name|QPoint
name|points
index|[
literal|4
index|]
init|=
block|{
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
argument|r.left() +
literal|1
argument_list|,
argument|r.top() +
literal|1
argument_list|)
block|}
decl_stmt|;
name|painter
operator|->
name|drawPoints
argument_list|(
name|points
argument_list|,
literal|4
argument_list|)
expr_stmt|;
block|}
return|return;
block|}
name|BEGIN_STYLE_PIXMAPCACHE
argument_list|(
argument|QString::fromLatin1(
literal|"pushbutton-%1"
argument|).arg(isDefault)
argument_list|)
name|r
operator|=
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|bool
name|isEnabled
init|=
name|option
operator|->
name|state
operator|&
name|State_Enabled
decl_stmt|;
name|bool
name|hasFocus
init|=
operator|(
name|option
operator|->
name|state
operator|&
name|State_HasFocus
operator|&&
name|option
operator|->
name|state
operator|&
name|State_KeyboardFocusChange
operator|)
decl_stmt|;
name|QColor
name|buttonColor
init|=
name|d
operator|->
name|buttonColor
argument_list|(
name|option
operator|->
name|palette
argument_list|)
decl_stmt|;
name|QColor
name|darkOutline
init|=
name|outline
decl_stmt|;
if|if
condition|(
name|hasFocus
operator||
name|isDefault
condition|)
block|{
name|darkOutline
operator|=
name|highlightedOutline
expr_stmt|;
block|}
if|if
condition|(
name|isDefault
condition|)
name|buttonColor
operator|=
name|mergedColors
argument_list|(
name|buttonColor
argument_list|,
name|highlightedOutline
operator|.
name|lighter
argument_list|(
literal|130
argument_list|)
argument_list|,
literal|90
argument_list|)
expr_stmt|;
name|p
operator|->
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|p
operator|->
name|translate
argument_list|(
literal|0.5
argument_list|,
operator|-
literal|0.5
argument_list|)
expr_stmt|;
name|QLinearGradient
name|gradient
init|=
name|qt_fusion_gradient
argument_list|(
name|rect
argument_list|,
operator|(
name|isEnabled
operator|&&
name|option
operator|->
name|state
operator|&
name|State_MouseOver
operator|)
condition|?
name|buttonColor
else|:
name|buttonColor
operator|.
name|darker
argument_list|(
literal|104
argument_list|)
argument_list|)
decl_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|Qt
operator|::
name|transparent
argument_list|)
expr_stmt|;
name|p
operator|->
name|setBrush
argument_list|(
name|isDown
condition|?
name|QBrush
argument_list|(
name|buttonColor
operator|.
name|darker
argument_list|(
literal|110
argument_list|)
argument_list|)
else|:
name|gradient
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawRoundedRect
argument_list|(
name|r
argument_list|,
literal|2.0
argument_list|,
literal|2.0
argument_list|)
expr_stmt|;
name|p
operator|->
name|setBrush
argument_list|(
name|Qt
operator|::
name|NoBrush
argument_list|)
expr_stmt|;
comment|// Outline
name|p
operator|->
name|setPen
argument_list|(
operator|!
name|isEnabled
condition|?
name|QPen
argument_list|(
name|darkOutline
operator|.
name|lighter
argument_list|(
literal|115
argument_list|)
argument_list|)
else|:
name|QPen
argument_list|(
name|darkOutline
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawRoundedRect
argument_list|(
name|r
argument_list|,
literal|2.0
argument_list|,
literal|2.0
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|d
operator|->
name|innerContrastLine
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawRoundedRect
argument_list|(
name|r
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
literal|2.0
argument_list|,
literal|2.0
argument_list|)
expr_stmt|;
name|END_STYLE_PIXMAPCACHE
block|}
break|break;
case|case
name|PE_FrameTabWidget
case|:
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
name|painter
operator|->
name|fillRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|tabFrameColor
argument_list|)
expr_stmt|;
if|if
condition|(
specifier|const
name|QStyleOptionTabWidgetFrame
modifier|*
name|twf
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionTabWidgetFrame
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|QColor
name|borderColor
init|=
name|outline
operator|.
name|lighter
argument_list|(
literal|110
argument_list|)
decl_stmt|;
name|QRect
name|rect
init|=
name|option
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
decl_stmt|;
comment|// Shadow outline
if|if
condition|(
name|twf
operator|->
name|shape
operator|!=
name|QTabBar
operator|::
name|RoundedSouth
condition|)
block|{
name|rect
operator|.
name|adjust
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QColor
name|alphaShadow
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
decl_stmt|;
name|alphaShadow
operator|.
name|setAlpha
argument_list|(
literal|15
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|alphaShadow
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|borderColor
argument_list|)
expr_stmt|;
block|}
comment|// outline
name|painter
operator|->
name|setPen
argument_list|(
name|outline
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|rect
argument_list|)
expr_stmt|;
comment|// Inner frame highlight
name|painter
operator|->
name|setPen
argument_list|(
name|d
operator|->
name|innerContrastLine
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|rect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break ;
case|case
name|PE_FrameStatusBarItem
case|:
break|break;
case|case
name|PE_IndicatorTabClose
case|:
block|{
name|Q_D
argument_list|(
specifier|const
name|QFusionStyle
argument_list|)
expr_stmt|;
if|if
condition|(
name|d
operator|->
name|tabBarcloseButtonIcon
operator|.
name|isNull
argument_list|()
condition|)
name|d
operator|->
name|tabBarcloseButtonIcon
operator|=
name|standardIcon
argument_list|(
name|SP_DialogCloseButton
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
expr_stmt|;
if|if
condition|(
operator|(
name|option
operator|->
name|state
operator|&
name|State_Enabled
operator|)
operator|&&
operator|(
name|option
operator|->
name|state
operator|&
name|State_MouseOver
operator|)
condition|)
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_PanelButtonCommand
argument_list|,
name|option
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|QPixmap
name|pixmap
init|=
name|d
operator|->
name|tabBarcloseButtonIcon
operator|.
name|pixmap
argument_list|(
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|,
name|QIcon
operator|::
name|Normal
argument_list|,
name|QIcon
operator|::
name|On
argument_list|)
decl_stmt|;
name|proxy
argument_list|()
operator|->
name|drawItemPixmap
argument_list|(
name|painter
argument_list|,
name|option
operator|->
name|rect
argument_list|,
name|Qt
operator|::
name|AlignCenter
argument_list|,
name|pixmap
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|PE_PanelMenu
case|:
block|{
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
name|QColor
name|menuBackground
init|=
name|option
operator|->
name|palette
operator|.
name|base
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|108
argument_list|)
decl_stmt|;
name|QColor
name|borderColor
init|=
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|160
argument_list|)
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|borderColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|menuBackground
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
break|break;
default|default:
name|QCommonStyle
operator|::
name|drawPrimitive
argument_list|(
name|elem
argument_list|,
name|option
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
end_function
begin_comment
comment|/*!   \reimp */
end_comment
begin_function
DECL|function|drawControl
name|void
name|QFusionStyle
operator|::
name|drawControl
parameter_list|(
name|ControlElement
name|element
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|option
parameter_list|,
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
name|Q_D
argument_list|(
specifier|const
name|QFusionStyle
argument_list|)
expr_stmt|;
name|QRect
name|rect
init|=
name|option
operator|->
name|rect
decl_stmt|;
name|QColor
name|outline
init|=
name|d
operator|->
name|outline
argument_list|(
name|option
operator|->
name|palette
argument_list|)
decl_stmt|;
name|QColor
name|highlightedOutline
init|=
name|d
operator|->
name|highlightedOutline
argument_list|(
name|option
operator|->
name|palette
argument_list|)
decl_stmt|;
name|QColor
name|shadow
init|=
name|d
operator|->
name|darkShade
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|element
condition|)
block|{
case|case
name|CE_ComboBoxLabel
case|:
if|if
condition|(
specifier|const
name|QStyleOptionComboBox
modifier|*
name|cb
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionComboBox
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|QRect
name|editRect
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_ComboBox
argument_list|,
name|cb
argument_list|,
name|SC_ComboBoxEditField
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
name|painter
operator|->
name|setClipRect
argument_list|(
name|editRect
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|cb
operator|->
name|currentIcon
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|QIcon
operator|::
name|Mode
name|mode
init|=
name|cb
operator|->
name|state
operator|&
name|State_Enabled
condition|?
name|QIcon
operator|::
name|Normal
else|:
name|QIcon
operator|::
name|Disabled
decl_stmt|;
name|QPixmap
name|pixmap
init|=
name|cb
operator|->
name|currentIcon
operator|.
name|pixmap
argument_list|(
name|cb
operator|->
name|iconSize
argument_list|,
name|mode
argument_list|)
decl_stmt|;
name|QRect
name|iconRect
argument_list|(
name|editRect
argument_list|)
decl_stmt|;
name|iconRect
operator|.
name|setWidth
argument_list|(
name|cb
operator|->
name|iconSize
operator|.
name|width
argument_list|()
operator|+
literal|4
argument_list|)
expr_stmt|;
name|iconRect
operator|=
name|alignedRect
argument_list|(
name|cb
operator|->
name|direction
argument_list|,
name|Qt
operator|::
name|AlignLeft
operator||
name|Qt
operator|::
name|AlignVCenter
argument_list|,
name|iconRect
operator|.
name|size
argument_list|()
argument_list|,
name|editRect
argument_list|)
expr_stmt|;
if|if
condition|(
name|cb
operator|->
name|editable
condition|)
name|painter
operator|->
name|fillRect
argument_list|(
name|iconRect
argument_list|,
name|cb
operator|->
name|palette
operator|.
name|brush
argument_list|(
name|QPalette
operator|::
name|Base
argument_list|)
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawItemPixmap
argument_list|(
name|painter
argument_list|,
name|iconRect
argument_list|,
name|Qt
operator|::
name|AlignCenter
argument_list|,
name|pixmap
argument_list|)
expr_stmt|;
if|if
condition|(
name|cb
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
condition|)
name|editRect
operator|.
name|translate
argument_list|(
operator|-
literal|4
operator|-
name|cb
operator|->
name|iconSize
operator|.
name|width
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
else|else
name|editRect
operator|.
name|translate
argument_list|(
name|cb
operator|->
name|iconSize
operator|.
name|width
argument_list|()
operator|+
literal|4
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|cb
operator|->
name|currentText
operator|.
name|isEmpty
argument_list|()
operator|&&
operator|!
name|cb
operator|->
name|editable
condition|)
block|{
name|proxy
argument_list|()
operator|->
name|drawItemText
argument_list|(
name|painter
argument_list|,
name|editRect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|,
name|visualAlignment
argument_list|(
name|cb
operator|->
name|direction
argument_list|,
name|Qt
operator|::
name|AlignLeft
operator||
name|Qt
operator|::
name|AlignVCenter
argument_list|)
argument_list|,
name|cb
operator|->
name|palette
argument_list|,
name|cb
operator|->
name|state
operator|&
name|State_Enabled
argument_list|,
name|cb
operator|->
name|currentText
argument_list|,
name|cb
operator|->
name|editable
condition|?
name|QPalette
operator|::
name|Text
else|:
name|QPalette
operator|::
name|ButtonText
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
break|break;
case|case
name|CE_Splitter
case|:
block|{
comment|// Dont draw handle for single pixel splitters
if|if
condition|(
name|option
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|>
literal|1
operator|&&
name|option
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|>
literal|1
condition|)
block|{
comment|//draw grips
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|State_Horizontal
condition|)
block|{
for|for
control|(
name|int
name|j
init|=
operator|-
literal|6
init|;
name|j
operator|<
literal|12
condition|;
name|j
operator|+=
literal|3
control|)
block|{
name|painter
operator|->
name|fillRect
argument_list|(
name|rect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|+
name|j
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|,
name|d
operator|->
name|lightShade
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|fillRect
argument_list|(
name|rect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|+
name|j
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|d
operator|->
name|darkShade
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
for|for
control|(
name|int
name|i
init|=
operator|-
literal|6
init|;
name|i
operator|<
literal|12
condition|;
name|i
operator|+=
literal|3
control|)
block|{
name|painter
operator|->
name|fillRect
argument_list|(
name|rect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|+
name|i
argument_list|,
name|rect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|,
name|d
operator|->
name|lightShade
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|fillRect
argument_list|(
name|rect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|+
name|i
argument_list|,
name|rect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|d
operator|->
name|darkShade
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
break|break;
block|}
case|case
name|CE_RubberBand
case|:
if|if
condition|(
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionRubberBand
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|QColor
name|highlight
init|=
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Active
argument_list|,
name|QPalette
operator|::
name|Highlight
argument_list|)
decl_stmt|;
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
name|QColor
name|penColor
init|=
name|highlight
operator|.
name|darker
argument_list|(
literal|120
argument_list|)
decl_stmt|;
name|penColor
operator|.
name|setAlpha
argument_list|(
literal|180
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|penColor
argument_list|)
expr_stmt|;
name|QColor
name|dimHighlight
argument_list|(
name|qMin
argument_list|(
name|highlight
operator|.
name|red
argument_list|()
operator|/
literal|2
operator|+
literal|110
argument_list|,
literal|255
argument_list|)
argument_list|,
name|qMin
argument_list|(
name|highlight
operator|.
name|green
argument_list|()
operator|/
literal|2
operator|+
literal|110
argument_list|,
literal|255
argument_list|)
argument_list|,
name|qMin
argument_list|(
name|highlight
operator|.
name|blue
argument_list|()
operator|/
literal|2
operator|+
literal|110
argument_list|,
literal|255
argument_list|)
argument_list|)
decl_stmt|;
name|dimHighlight
operator|.
name|setAlpha
argument_list|(
name|widget
operator|&&
name|widget
operator|->
name|isTopLevel
argument_list|()
condition|?
literal|255
else|:
literal|80
argument_list|)
expr_stmt|;
name|QLinearGradient
name|gradient
argument_list|(
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|QPoint
argument_list|(
name|rect
operator|.
name|bottomLeft
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|rect
operator|.
name|bottomLeft
argument_list|()
operator|.
name|y
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|dimHighlight
operator|.
name|lighter
argument_list|(
literal|120
argument_list|)
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|1
argument_list|,
name|dimHighlight
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|painter
operator|->
name|translate
argument_list|(
literal|0.5
argument_list|,
literal|0.5
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|dimHighlight
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRoundedRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QColor
name|innerLine
init|=
name|Qt
operator|::
name|white
decl_stmt|;
name|innerLine
operator|.
name|setAlpha
argument_list|(
literal|40
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|innerLine
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRoundedRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|2
argument_list|,
operator|-
literal|2
argument_list|)
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
return|return;
block|}
case|case
name|CE_SizeGrip
case|:
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
block|{
comment|//draw grips
for|for
control|(
name|int
name|i
init|=
operator|-
literal|6
init|;
name|i
operator|<
literal|12
condition|;
name|i
operator|+=
literal|3
control|)
block|{
for|for
control|(
name|int
name|j
init|=
operator|-
literal|6
init|;
name|j
operator|<
literal|12
condition|;
name|j
operator|+=
literal|3
control|)
block|{
if|if
condition|(
operator|(
name|option
operator|->
name|direction
operator|==
name|Qt
operator|::
name|LeftToRight
operator|&&
name|i
operator|>
operator|-
name|j
operator|)
operator|||
operator|(
name|option
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
operator|&&
name|j
operator|>
name|i
operator|)
condition|)
block|{
name|painter
operator|->
name|fillRect
argument_list|(
name|rect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|+
name|i
argument_list|,
name|rect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|+
name|j
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|,
name|d
operator|->
name|lightShade
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|fillRect
argument_list|(
name|rect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|+
name|i
argument_list|,
name|rect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|+
name|j
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|d
operator|->
name|darkShade
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
case|case
name|CE_ToolBar
case|:
if|if
condition|(
specifier|const
name|QStyleOptionToolBar
modifier|*
name|toolBar
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionToolBar
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
comment|// Reserve the beveled appearance only for mainwindow toolbars
if|if
condition|(
name|widget
operator|&&
operator|!
operator|(
name|qobject_cast
argument_list|<
specifier|const
name|QMainWindow
operator|*
argument_list|>
argument_list|(
name|widget
operator|->
name|parentWidget
argument_list|()
argument_list|)
operator|)
condition|)
break|break;
comment|// Draws the light line above and the dark line below menu bars and
comment|// tool bars.
name|QLinearGradient
name|gradient
argument_list|(
name|option
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|option
operator|->
name|state
operator|&
name|State_Horizontal
operator|)
condition|)
name|gradient
operator|=
name|QLinearGradient
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
argument_list|,
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|rect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|option
operator|->
name|palette
operator|.
name|window
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|104
argument_list|)
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|1
argument_list|,
name|option
operator|->
name|palette
operator|.
name|window
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|fillRect
argument_list|(
name|option
operator|->
name|rect
argument_list|,
name|gradient
argument_list|)
expr_stmt|;
name|QColor
name|light
init|=
name|d
operator|->
name|lightShade
argument_list|()
decl_stmt|;
name|QColor
name|shadow
init|=
name|d
operator|->
name|darkShade
argument_list|()
decl_stmt|;
name|QPen
name|oldPen
init|=
name|painter
operator|->
name|pen
argument_list|()
decl_stmt|;
if|if
condition|(
name|toolBar
operator|->
name|toolBarArea
operator|==
name|Qt
operator|::
name|TopToolBarArea
condition|)
block|{
if|if
condition|(
name|toolBar
operator|->
name|positionOfLine
operator|==
name|QStyleOptionToolBar
operator|::
name|End
operator|||
name|toolBar
operator|->
name|positionOfLine
operator|==
name|QStyleOptionToolBar
operator|::
name|OnlyOne
condition|)
block|{
comment|// The end and onlyone top toolbar lines draw a double
comment|// line at the bottom to blend with the central
comment|// widget.
name|painter
operator|->
name|setPen
argument_list|(
name|light
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|shadow
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|,
name|option
operator|->
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// All others draw a single dark line at the bottom.
name|painter
operator|->
name|setPen
argument_list|(
name|shadow
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// All top toolbar lines draw a light line at the top.
name|painter
operator|->
name|setPen
argument_list|(
name|light
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|topRight
argument_list|()
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|toolBar
operator|->
name|toolBarArea
operator|==
name|Qt
operator|::
name|BottomToolBarArea
condition|)
block|{
if|if
condition|(
name|toolBar
operator|->
name|positionOfLine
operator|==
name|QStyleOptionToolBar
operator|::
name|End
operator|||
name|toolBar
operator|->
name|positionOfLine
operator|==
name|QStyleOptionToolBar
operator|::
name|Middle
condition|)
block|{
comment|// The end and middle bottom tool bar lines draw a dark
comment|// line at the bottom.
name|painter
operator|->
name|setPen
argument_list|(
name|shadow
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|toolBar
operator|->
name|positionOfLine
operator|==
name|QStyleOptionToolBar
operator|::
name|Beginning
operator|||
name|toolBar
operator|->
name|positionOfLine
operator|==
name|QStyleOptionToolBar
operator|::
name|OnlyOne
condition|)
block|{
comment|// The beginning and only one tool bar lines draw a
comment|// double line at the bottom to blend with the
comment|// status bar.
comment|// ### The styleoption could contain whether the
comment|// main window has a menu bar and a status bar, and
comment|// possibly dock widgets.
name|painter
operator|->
name|setPen
argument_list|(
name|shadow
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|,
name|option
operator|->
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|light
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|toolBar
operator|->
name|positionOfLine
operator|==
name|QStyleOptionToolBar
operator|::
name|End
condition|)
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|shadow
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|topRight
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|light
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|option
operator|->
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// All other bottom toolbars draw a light line at the top.
name|painter
operator|->
name|setPen
argument_list|(
name|light
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|topRight
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|toolBar
operator|->
name|toolBarArea
operator|==
name|Qt
operator|::
name|LeftToolBarArea
condition|)
block|{
if|if
condition|(
name|toolBar
operator|->
name|positionOfLine
operator|==
name|QStyleOptionToolBar
operator|::
name|Middle
operator|||
name|toolBar
operator|->
name|positionOfLine
operator|==
name|QStyleOptionToolBar
operator|::
name|End
condition|)
block|{
comment|// The middle and left end toolbar lines draw a light
comment|// line to the left.
name|painter
operator|->
name|setPen
argument_list|(
name|light
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|toolBar
operator|->
name|positionOfLine
operator|==
name|QStyleOptionToolBar
operator|::
name|End
condition|)
block|{
comment|// All other left toolbar lines draw a dark line to the right
name|painter
operator|->
name|setPen
argument_list|(
name|shadow
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|light
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|topRight
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// All other left toolbar lines draw a dark line to the right
name|painter
operator|->
name|setPen
argument_list|(
name|shadow
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|topRight
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
elseif|else
if|if
condition|(
name|toolBar
operator|->
name|toolBarArea
operator|==
name|Qt
operator|::
name|RightToolBarArea
condition|)
block|{
if|if
condition|(
name|toolBar
operator|->
name|positionOfLine
operator|==
name|QStyleOptionToolBar
operator|::
name|Middle
operator|||
name|toolBar
operator|->
name|positionOfLine
operator|==
name|QStyleOptionToolBar
operator|::
name|End
condition|)
block|{
comment|// Right middle and end toolbar lines draw the dark right line
name|painter
operator|->
name|setPen
argument_list|(
name|shadow
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|topRight
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|toolBar
operator|->
name|positionOfLine
operator|==
name|QStyleOptionToolBar
operator|::
name|End
operator|||
name|toolBar
operator|->
name|positionOfLine
operator|==
name|QStyleOptionToolBar
operator|::
name|OnlyOne
condition|)
block|{
comment|// The right end and single toolbar draws the dark
comment|// line on its left edge
name|painter
operator|->
name|setPen
argument_list|(
name|shadow
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|)
expr_stmt|;
comment|// And a light line next to it
name|painter
operator|->
name|setPen
argument_list|(
name|light
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// Other right toolbars draw a light line on its left edge
name|painter
operator|->
name|setPen
argument_list|(
name|light
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|painter
operator|->
name|setPen
argument_list|(
name|oldPen
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|CE_DockWidgetTitle
case|:
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
if|if
condition|(
specifier|const
name|QStyleOptionDockWidget
modifier|*
name|dwOpt
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionDockWidget
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|bool
name|verticalTitleBar
init|=
name|dwOpt
operator|->
name|verticalTitleBar
decl_stmt|;
name|QRect
name|titleRect
init|=
name|subElementRect
argument_list|(
name|SE_DockWidgetTitleBarText
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
decl_stmt|;
if|if
condition|(
name|verticalTitleBar
condition|)
block|{
name|QRect
name|rect
init|=
name|dwOpt
operator|->
name|rect
decl_stmt|;
name|QRect
name|r
init|=
name|rect
decl_stmt|;
name|QSize
name|s
init|=
name|r
operator|.
name|size
argument_list|()
decl_stmt|;
name|s
operator|.
name|transpose
argument_list|()
expr_stmt|;
name|r
operator|.
name|setSize
argument_list|(
name|s
argument_list|)
expr_stmt|;
name|titleRect
operator|=
name|QRect
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
name|rect
operator|.
name|bottom
argument_list|()
operator|-
name|titleRect
operator|.
name|bottom
argument_list|()
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
name|titleRect
operator|.
name|left
argument_list|()
operator|-
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|titleRect
operator|.
name|height
argument_list|()
argument_list|,
name|titleRect
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|dwOpt
operator|->
name|title
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|QString
name|titleText
init|=
name|painter
operator|->
name|fontMetrics
argument_list|()
operator|.
name|elidedText
argument_list|(
name|dwOpt
operator|->
name|title
argument_list|,
name|Qt
operator|::
name|ElideRight
argument_list|,
name|titleRect
operator|.
name|width
argument_list|()
argument_list|)
decl_stmt|;
name|proxy
argument_list|()
operator|->
name|drawItemText
argument_list|(
name|painter
argument_list|,
name|titleRect
argument_list|,
name|Qt
operator|::
name|AlignLeft
operator||
name|Qt
operator|::
name|AlignVCenter
operator||
name|Qt
operator|::
name|TextShowMnemonic
argument_list|,
name|dwOpt
operator|->
name|palette
argument_list|,
name|dwOpt
operator|->
name|state
operator|&
name|State_Enabled
argument_list|,
name|titleText
argument_list|,
name|QPalette
operator|::
name|WindowText
argument_list|)
expr_stmt|;
block|}
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
case|case
name|CE_HeaderSection
case|:
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
comment|// Draws the header in tables.
if|if
condition|(
specifier|const
name|QStyleOptionHeader
modifier|*
name|header
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionHeader
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|QString
name|pixmapName
init|=
name|QStyleHelper
operator|::
name|uniqueName
argument_list|(
name|QLatin1String
argument_list|(
literal|"headersection"
argument_list|)
argument_list|,
name|option
argument_list|,
name|option
operator|->
name|rect
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
name|pixmapName
operator|+=
name|QString
operator|::
name|number
argument_list|(
operator|-
name|int
argument_list|(
name|header
operator|->
name|position
argument_list|)
argument_list|)
expr_stmt|;
name|pixmapName
operator|+=
name|QString
operator|::
name|number
argument_list|(
operator|-
name|int
argument_list|(
name|header
operator|->
name|orientation
argument_list|)
argument_list|)
expr_stmt|;
name|QPixmap
name|cache
decl_stmt|;
if|if
condition|(
operator|!
name|QPixmapCache
operator|::
name|find
argument_list|(
name|pixmapName
argument_list|,
name|cache
argument_list|)
condition|)
block|{
name|cache
operator|=
name|styleCachePixmap
argument_list|(
name|rect
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|cache
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|transparent
argument_list|)
expr_stmt|;
name|QRect
name|pixmapRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|rect
operator|.
name|width
argument_list|()
argument_list|,
name|rect
operator|.
name|height
argument_list|()
argument_list|)
decl_stmt|;
name|QPainter
name|cachePainter
argument_list|(
operator|&
name|cache
argument_list|)
decl_stmt|;
name|QColor
name|buttonColor
init|=
name|d
operator|->
name|buttonColor
argument_list|(
name|option
operator|->
name|palette
argument_list|)
decl_stmt|;
name|QColor
name|gradientStopColor
decl_stmt|;
name|QColor
name|gradientStartColor
init|=
name|buttonColor
operator|.
name|lighter
argument_list|(
literal|104
argument_list|)
decl_stmt|;
name|gradientStopColor
operator|=
name|buttonColor
operator|.
name|darker
argument_list|(
literal|102
argument_list|)
expr_stmt|;
name|QLinearGradient
name|gradient
argument_list|(
name|pixmapRect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|bottomLeft
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|gradient
argument_list|()
condition|)
block|{
name|gradient
operator|.
name|setStops
argument_list|(
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|gradient
argument_list|()
operator|->
name|stops
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QColor
name|midColor1
init|=
name|mergedColors
argument_list|(
name|gradientStartColor
argument_list|,
name|gradientStopColor
argument_list|,
literal|60
argument_list|)
decl_stmt|;
name|QColor
name|midColor2
init|=
name|mergedColors
argument_list|(
name|gradientStartColor
argument_list|,
name|gradientStopColor
argument_list|,
literal|40
argument_list|)
decl_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|gradientStartColor
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0.5
argument_list|,
name|midColor1
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0.501
argument_list|,
name|midColor2
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0.92
argument_list|,
name|gradientStopColor
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|1
argument_list|,
name|gradientStopColor
operator|.
name|darker
argument_list|(
literal|104
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|cachePainter
operator|.
name|fillRect
argument_list|(
name|pixmapRect
argument_list|,
name|gradient
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|setPen
argument_list|(
name|d
operator|->
name|innerContrastLine
argument_list|()
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|setBrush
argument_list|(
name|Qt
operator|::
name|NoBrush
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|pixmapRect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|topRight
argument_list|()
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|setPen
argument_list|(
name|d
operator|->
name|outline
argument_list|(
name|option
operator|->
name|palette
argument_list|)
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|pixmapRect
operator|.
name|bottomLeft
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|bottomRight
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|header
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
operator|&&
name|header
operator|->
name|position
operator|!=
name|QStyleOptionHeader
operator|::
name|End
operator|&&
name|header
operator|->
name|position
operator|!=
name|QStyleOptionHeader
operator|::
name|OnlyOneSection
condition|)
block|{
name|cachePainter
operator|.
name|setPen
argument_list|(
name|QColor
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|40
argument_list|)
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|pixmapRect
operator|.
name|topRight
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|bottomRight
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|0
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|setPen
argument_list|(
name|d
operator|->
name|innerContrastLine
argument_list|()
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|pixmapRect
operator|.
name|topRight
argument_list|()
operator|+
name|QPoint
argument_list|(
operator|-
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|,
name|pixmapRect
operator|.
name|bottomRight
argument_list|()
operator|+
name|QPoint
argument_list|(
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|header
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Vertical
condition|)
block|{
name|cachePainter
operator|.
name|setPen
argument_list|(
name|d
operator|->
name|outline
argument_list|(
name|option
operator|->
name|palette
argument_list|)
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|pixmapRect
operator|.
name|topRight
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|bottomRight
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|cachePainter
operator|.
name|end
argument_list|()
expr_stmt|;
name|QPixmapCache
operator|::
name|insert
argument_list|(
name|pixmapName
argument_list|,
name|cache
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|drawPixmap
argument_list|(
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|cache
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
case|case
name|CE_ProgressBarGroove
case|:
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
block|{
name|painter
operator|->
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|painter
operator|->
name|translate
argument_list|(
literal|0.5
argument_list|,
literal|0.5
argument_list|)
expr_stmt|;
name|QColor
name|shadowAlpha
init|=
name|Qt
operator|::
name|black
decl_stmt|;
name|shadowAlpha
operator|.
name|setAlpha
argument_list|(
literal|16
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|shadowAlpha
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|rect
operator|.
name|topLeft
argument_list|()
operator|-
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|rect
operator|.
name|topRight
argument_list|()
operator|-
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|option
operator|->
name|palette
operator|.
name|base
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|outline
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRoundedRect
argument_list|(
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
comment|// Inner shadow
name|painter
operator|->
name|setPen
argument_list|(
name|d
operator|->
name|topShadow
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
case|case
name|CE_ProgressBarContents
case|:
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
name|painter
operator|->
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|painter
operator|->
name|translate
argument_list|(
literal|0.5
argument_list|,
literal|0.5
argument_list|)
expr_stmt|;
if|if
condition|(
specifier|const
name|QStyleOptionProgressBar
modifier|*
name|bar
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionProgressBar
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|bool
name|vertical
init|=
literal|false
decl_stmt|;
name|bool
name|inverted
init|=
literal|false
decl_stmt|;
name|bool
name|indeterminate
init|=
operator|(
name|bar
operator|->
name|minimum
operator|==
literal|0
operator|&&
name|bar
operator|->
name|maximum
operator|==
literal|0
operator|)
decl_stmt|;
name|bool
name|complete
init|=
name|bar
operator|->
name|progress
operator|==
name|bar
operator|->
name|maximum
decl_stmt|;
comment|// Get extra style options if version 2
name|vertical
operator|=
operator|(
name|bar
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Vertical
operator|)
expr_stmt|;
name|inverted
operator|=
name|bar
operator|->
name|invertedAppearance
expr_stmt|;
comment|// If the orientation is vertical, we use a transform to rotate
comment|// the progress bar 90 degrees clockwise.  This way we can use the
comment|// same rendering code for both orientations.
if|if
condition|(
name|vertical
condition|)
block|{
name|rect
operator|=
name|QRect
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|rect
operator|.
name|height
argument_list|()
argument_list|,
name|rect
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
comment|// flip width and height
name|QTransform
name|m
init|=
name|QTransform
operator|::
name|fromTranslate
argument_list|(
name|rect
operator|.
name|height
argument_list|()
operator|-
literal|1
argument_list|,
operator|-
literal|1.0
argument_list|)
decl_stmt|;
name|m
operator|.
name|rotate
argument_list|(
literal|90.0
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setTransform
argument_list|(
name|m
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
name|int
name|maxWidth
init|=
name|rect
operator|.
name|width
argument_list|()
decl_stmt|;
name|int
name|minWidth
init|=
literal|0
decl_stmt|;
name|qreal
name|progress
init|=
name|qMax
argument_list|(
name|bar
operator|->
name|progress
argument_list|,
name|bar
operator|->
name|minimum
argument_list|)
decl_stmt|;
comment|// workaround for bug in QProgressBar
name|int
name|progressBarWidth
init|=
operator|(
name|progress
operator|-
name|bar
operator|->
name|minimum
operator|)
operator|*
name|qreal
argument_list|(
name|maxWidth
argument_list|)
operator|/
name|qMax
argument_list|(
name|qreal
argument_list|(
literal|1.0
argument_list|)
argument_list|,
name|qreal
argument_list|(
name|bar
operator|->
name|maximum
argument_list|)
operator|-
name|bar
operator|->
name|minimum
argument_list|)
decl_stmt|;
name|int
name|width
init|=
name|indeterminate
condition|?
name|maxWidth
else|:
name|qMax
argument_list|(
name|minWidth
argument_list|,
name|progressBarWidth
argument_list|)
decl_stmt|;
name|bool
name|reverse
init|=
operator|(
operator|!
name|vertical
operator|&&
operator|(
name|bar
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
operator|)
operator|)
operator|||
name|vertical
decl_stmt|;
if|if
condition|(
name|inverted
condition|)
name|reverse
operator|=
operator|!
name|reverse
expr_stmt|;
name|int
name|step
init|=
literal|0
decl_stmt|;
name|QRect
name|progressBar
decl_stmt|;
name|QColor
name|highlight
init|=
name|d
operator|->
name|highlight
argument_list|(
name|option
operator|->
name|palette
argument_list|)
decl_stmt|;
name|QColor
name|highlightedoutline
init|=
name|highlight
operator|.
name|darker
argument_list|(
literal|140
argument_list|)
decl_stmt|;
if|if
condition|(
name|qGray
argument_list|(
name|outline
operator|.
name|rgb
argument_list|()
argument_list|)
operator|>
name|qGray
argument_list|(
name|highlightedoutline
operator|.
name|rgb
argument_list|()
argument_list|)
condition|)
name|outline
operator|=
name|highlightedoutline
expr_stmt|;
if|if
condition|(
operator|!
name|indeterminate
condition|)
block|{
name|QColor
name|innerShadow
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
decl_stmt|;
name|innerShadow
operator|.
name|setAlpha
argument_list|(
literal|35
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|innerShadow
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|reverse
condition|)
block|{
name|progressBar
operator|.
name|setRect
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|width
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|height
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|complete
condition|)
block|{
name|painter
operator|->
name|drawLine
argument_list|(
name|progressBar
operator|.
name|topRight
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|,
name|progressBar
operator|.
name|bottomRight
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|highlight
operator|.
name|darker
argument_list|(
literal|140
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|progressBar
operator|.
name|topRight
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|progressBar
operator|.
name|bottomRight
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|progressBar
operator|.
name|setRect
argument_list|(
name|rect
operator|.
name|right
argument_list|()
operator|-
name|width
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|width
operator|+
literal|2
argument_list|,
name|rect
operator|.
name|height
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|complete
condition|)
block|{
name|painter
operator|->
name|drawLine
argument_list|(
name|progressBar
operator|.
name|topLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
operator|-
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|,
name|progressBar
operator|.
name|bottomLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
operator|-
literal|2
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|highlight
operator|.
name|darker
argument_list|(
literal|140
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|progressBar
operator|.
name|topLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
operator|-
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|progressBar
operator|.
name|bottomLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
operator|-
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
else|else
block|{
name|progressBar
operator|.
name|setRect
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|rect
operator|.
name|width
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|height
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|indeterminate
operator|||
name|bar
operator|->
name|progress
operator|>
name|bar
operator|->
name|minimum
condition|)
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|outline
argument_list|)
argument_list|)
expr_stmt|;
name|QColor
name|highlightedGradientStartColor
init|=
name|highlight
operator|.
name|lighter
argument_list|(
literal|120
argument_list|)
decl_stmt|;
name|QColor
name|highlightedGradientStopColor
init|=
name|highlight
decl_stmt|;
name|QLinearGradient
name|gradient
argument_list|(
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|QPoint
argument_list|(
name|rect
operator|.
name|bottomLeft
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|rect
operator|.
name|bottomLeft
argument_list|()
operator|.
name|y
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|highlightedGradientStartColor
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|1
argument_list|,
name|highlightedGradientStopColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|gradient
argument_list|)
expr_stmt|;
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
if|if
condition|(
operator|!
name|complete
operator|&&
operator|!
name|indeterminate
condition|)
name|painter
operator|->
name|setClipRect
argument_list|(
name|progressBar
operator|.
name|adjusted
argument_list|(
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QRect
name|fillRect
init|=
name|progressBar
operator|.
name|adjusted
argument_list|(
operator|!
name|indeterminate
operator|&&
operator|!
name|complete
operator|&&
name|reverse
condition|?
operator|-
literal|2
else|:
literal|0
argument_list|,
literal|0
argument_list|,
name|indeterminate
operator|||
name|complete
operator|||
name|reverse
condition|?
literal|0
else|:
literal|2
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|painter
operator|->
name|drawRoundedRect
argument_list|(
name|fillRect
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|Qt
operator|::
name|NoBrush
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QColor
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|,
literal|50
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRoundedRect
argument_list|(
name|progressBar
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|indeterminate
condition|)
block|{
operator|(
cast|const_cast
argument_list|<
name|QFusionStylePrivate
operator|*
argument_list|>
argument_list|(
name|d
argument_list|)
operator|)
operator|->
name|stopAnimation
argument_list|(
name|option
operator|->
name|styleObject
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|highlightedGradientStartColor
operator|.
name|setAlpha
argument_list|(
literal|120
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|highlightedGradientStartColor
argument_list|,
literal|9.0
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setClipRect
argument_list|(
name|progressBar
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
ifndef|#
directive|ifndef
name|QT_NO_ANIMATION
if|if
condition|(
name|QProgressStyleAnimation
modifier|*
name|animation
init|=
name|qobject_cast
argument_list|<
name|QProgressStyleAnimation
operator|*
argument_list|>
argument_list|(
name|d
operator|->
name|animation
argument_list|(
name|option
operator|->
name|styleObject
argument_list|)
argument_list|)
condition|)
name|step
operator|=
name|animation
operator|->
name|animationStep
argument_list|()
operator|%
literal|22
expr_stmt|;
else|else
operator|(
cast|const_cast
argument_list|<
name|QFusionStylePrivate
operator|*
argument_list|>
argument_list|(
name|d
argument_list|)
operator|)
operator|->
name|startAnimation
argument_list|(
operator|new
name|QProgressStyleAnimation
argument_list|(
name|d
operator|->
name|animationFps
argument_list|,
name|option
operator|->
name|styleObject
argument_list|)
argument_list|)
expr_stmt|;
endif|#
directive|endif
for|for
control|(
name|int
name|x
init|=
name|progressBar
operator|.
name|left
argument_list|()
operator|-
name|rect
operator|.
name|height
argument_list|()
init|;
name|x
operator|<
name|rect
operator|.
name|right
argument_list|()
condition|;
name|x
operator|+=
literal|22
control|)
name|painter
operator|->
name|drawLine
argument_list|(
name|x
operator|+
name|step
argument_list|,
name|progressBar
operator|.
name|bottom
argument_list|()
operator|+
literal|1
argument_list|,
name|x
operator|+
name|rect
operator|.
name|height
argument_list|()
operator|+
name|step
argument_list|,
name|progressBar
operator|.
name|top
argument_list|()
operator|-
literal|2
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
case|case
name|CE_ProgressBarLabel
case|:
if|if
condition|(
specifier|const
name|QStyleOptionProgressBar
modifier|*
name|bar
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionProgressBar
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|QRect
name|leftRect
decl_stmt|;
name|QRect
name|rect
init|=
name|bar
operator|->
name|rect
decl_stmt|;
name|QColor
name|textColor
init|=
name|option
operator|->
name|palette
operator|.
name|text
argument_list|()
operator|.
name|color
argument_list|()
decl_stmt|;
name|QColor
name|alternateTextColor
init|=
name|d
operator|->
name|highlightedText
argument_list|(
name|option
operator|->
name|palette
argument_list|)
decl_stmt|;
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
name|bool
name|vertical
init|=
literal|false
decl_stmt|,
name|inverted
init|=
literal|false
decl_stmt|;
name|vertical
operator|=
operator|(
name|bar
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Vertical
operator|)
expr_stmt|;
name|inverted
operator|=
name|bar
operator|->
name|invertedAppearance
expr_stmt|;
if|if
condition|(
name|vertical
condition|)
name|rect
operator|=
name|QRect
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|rect
operator|.
name|height
argument_list|()
argument_list|,
name|rect
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
comment|// flip width and height
specifier|const
name|int
name|progressIndicatorPos
init|=
operator|(
name|bar
operator|->
name|progress
operator|-
name|qreal
argument_list|(
name|bar
operator|->
name|minimum
argument_list|)
operator|)
operator|*
name|rect
operator|.
name|width
argument_list|()
operator|/
name|qMax
argument_list|(
name|qreal
argument_list|(
literal|1.0
argument_list|)
argument_list|,
name|qreal
argument_list|(
name|bar
operator|->
name|maximum
argument_list|)
operator|-
name|bar
operator|->
name|minimum
argument_list|)
decl_stmt|;
if|if
condition|(
name|progressIndicatorPos
operator|>=
literal|0
operator|&&
name|progressIndicatorPos
operator|<=
name|rect
operator|.
name|width
argument_list|()
condition|)
name|leftRect
operator|=
name|QRect
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|progressIndicatorPos
argument_list|,
name|rect
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|vertical
condition|)
name|leftRect
operator|.
name|translate
argument_list|(
name|rect
operator|.
name|width
argument_list|()
operator|-
name|progressIndicatorPos
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|bool
name|flip
init|=
operator|(
operator|!
name|vertical
operator|&&
operator|(
operator|(
operator|(
name|bar
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
operator|)
operator|&&
operator|!
name|inverted
operator|)
operator|||
operator|(
operator|(
name|bar
operator|->
name|direction
operator|==
name|Qt
operator|::
name|LeftToRight
operator|)
operator|&&
name|inverted
operator|)
operator|)
operator|)
decl_stmt|;
name|QRegion
name|rightRect
init|=
name|rect
decl_stmt|;
name|rightRect
operator|=
name|rightRect
operator|.
name|subtracted
argument_list|(
name|leftRect
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setClipRegion
argument_list|(
name|rightRect
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|flip
condition|?
name|alternateTextColor
else|:
name|textColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawText
argument_list|(
name|rect
argument_list|,
name|bar
operator|->
name|text
argument_list|,
name|QTextOption
argument_list|(
name|Qt
operator|::
name|AlignAbsolute
operator||
name|Qt
operator|::
name|AlignHCenter
operator||
name|Qt
operator|::
name|AlignVCenter
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|leftRect
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|flip
condition|?
name|textColor
else|:
name|alternateTextColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setClipRect
argument_list|(
name|leftRect
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawText
argument_list|(
name|rect
argument_list|,
name|bar
operator|->
name|text
argument_list|,
name|QTextOption
argument_list|(
name|Qt
operator|::
name|AlignAbsolute
operator||
name|Qt
operator|::
name|AlignHCenter
operator||
name|Qt
operator|::
name|AlignVCenter
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
break|break;
case|case
name|CE_MenuBarItem
case|:
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
if|if
condition|(
specifier|const
name|QStyleOptionMenuItem
modifier|*
name|mbi
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionMenuItem
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|QStyleOptionMenuItem
name|item
init|=
operator|*
name|mbi
decl_stmt|;
name|item
operator|.
name|rect
operator|=
name|mbi
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
operator|-
literal|3
argument_list|)
expr_stmt|;
name|QColor
name|highlightOutline
init|=
name|option
operator|->
name|palette
operator|.
name|highlight
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|125
argument_list|)
decl_stmt|;
name|painter
operator|->
name|fillRect
argument_list|(
name|rect
argument_list|,
name|option
operator|->
name|palette
operator|.
name|window
argument_list|()
argument_list|)
expr_stmt|;
name|QCommonStyle
operator|::
name|drawControl
argument_list|(
name|element
argument_list|,
operator|&
name|item
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|bool
name|act
init|=
name|mbi
operator|->
name|state
operator|&
name|State_Selected
operator|&&
name|mbi
operator|->
name|state
operator|&
name|State_Sunken
decl_stmt|;
name|bool
name|dis
init|=
operator|!
operator|(
name|mbi
operator|->
name|state
operator|&
name|State_Enabled
operator|)
decl_stmt|;
name|QRect
name|r
init|=
name|option
operator|->
name|rect
decl_stmt|;
if|if
condition|(
name|act
condition|)
block|{
name|painter
operator|->
name|setBrush
argument_list|(
name|option
operator|->
name|palette
operator|.
name|highlight
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|highlightOutline
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|r
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|//                painter->drawRoundedRect(r.adjusted(1, 1, -1, -1), 2, 2);
comment|//draw text
name|QPalette
operator|::
name|ColorRole
name|textRole
init|=
name|dis
condition|?
name|QPalette
operator|::
name|Text
else|:
name|QPalette
operator|::
name|HighlightedText
decl_stmt|;
name|uint
name|alignment
init|=
name|Qt
operator|::
name|AlignCenter
operator||
name|Qt
operator|::
name|TextShowMnemonic
operator||
name|Qt
operator|::
name|TextDontClip
operator||
name|Qt
operator|::
name|TextSingleLine
decl_stmt|;
if|if
condition|(
operator|!
name|styleHint
argument_list|(
name|SH_UnderlineShortcut
argument_list|,
name|mbi
argument_list|,
name|widget
argument_list|)
condition|)
name|alignment
operator||=
name|Qt
operator|::
name|TextHideMnemonic
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawItemText
argument_list|(
name|painter
argument_list|,
name|item
operator|.
name|rect
argument_list|,
name|alignment
argument_list|,
name|mbi
operator|->
name|palette
argument_list|,
name|mbi
operator|->
name|state
operator|&
name|State_Enabled
argument_list|,
name|mbi
operator|->
name|text
argument_list|,
name|textRole
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QColor
name|shadow
init|=
name|mergedColors
argument_list|(
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|120
argument_list|)
argument_list|,
name|outline
operator|.
name|lighter
argument_list|(
literal|140
argument_list|)
argument_list|,
literal|60
argument_list|)
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|shadow
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
case|case
name|CE_MenuItem
case|:
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
comment|// Draws one item in a popup menu.
if|if
condition|(
specifier|const
name|QStyleOptionMenuItem
modifier|*
name|menuItem
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionMenuItem
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|QColor
name|highlightOutline
init|=
name|highlightedOutline
decl_stmt|;
name|QColor
name|highlight
init|=
name|option
operator|->
name|palette
operator|.
name|highlight
argument_list|()
operator|.
name|color
argument_list|()
decl_stmt|;
if|if
condition|(
name|menuItem
operator|->
name|menuItemType
operator|==
name|QStyleOptionMenuItem
operator|::
name|Separator
condition|)
block|{
name|int
name|w
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|!
name|menuItem
operator|->
name|text
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|painter
operator|->
name|setFont
argument_list|(
name|menuItem
operator|->
name|font
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawItemText
argument_list|(
name|painter
argument_list|,
name|menuItem
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|5
argument_list|,
literal|0
argument_list|,
operator|-
literal|5
argument_list|,
literal|0
argument_list|)
argument_list|,
name|Qt
operator|::
name|AlignLeft
operator||
name|Qt
operator|::
name|AlignVCenter
argument_list|,
name|menuItem
operator|->
name|palette
argument_list|,
name|menuItem
operator|->
name|state
operator|&
name|State_Enabled
argument_list|,
name|menuItem
operator|->
name|text
argument_list|,
name|QPalette
operator|::
name|Text
argument_list|)
expr_stmt|;
name|w
operator|=
name|menuItem
operator|->
name|fontMetrics
operator|.
name|width
argument_list|(
name|menuItem
operator|->
name|text
argument_list|)
operator|+
literal|5
expr_stmt|;
block|}
name|painter
operator|->
name|setPen
argument_list|(
name|shadow
operator|.
name|lighter
argument_list|(
literal|106
argument_list|)
argument_list|)
expr_stmt|;
name|bool
name|reverse
init|=
name|menuItem
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
decl_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|menuItem
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|5
operator|+
operator|(
name|reverse
condition|?
literal|0
else|:
name|w
operator|)
argument_list|,
name|menuItem
operator|->
name|rect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
argument_list|,
name|menuItem
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|5
operator|-
operator|(
name|reverse
condition|?
name|w
else|:
literal|0
operator|)
argument_list|,
name|menuItem
operator|->
name|rect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
block|}
name|bool
name|selected
init|=
name|menuItem
operator|->
name|state
operator|&
name|State_Selected
operator|&&
name|menuItem
operator|->
name|state
operator|&
name|State_Enabled
decl_stmt|;
if|if
condition|(
name|selected
condition|)
block|{
name|QRect
name|r
init|=
name|option
operator|->
name|rect
decl_stmt|;
name|painter
operator|->
name|fillRect
argument_list|(
name|r
argument_list|,
name|highlight
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|highlightOutline
argument_list|)
argument_list|)
expr_stmt|;
specifier|const
name|QLine
name|lines
index|[
literal|4
index|]
init|=
block|{
name|QLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|)
block|,
name|QLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|r
operator|.
name|top
argument_list|()
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|r
operator|.
name|top
argument_list|()
argument_list|)
argument_list|)
block|,
name|QLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
argument_list|,
name|r
operator|.
name|top
argument_list|()
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|)
block|,
name|QLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
argument_list|,
name|r
operator|.
name|top
argument_list|()
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|)
block|,                 }
decl_stmt|;
name|painter
operator|->
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|4
argument_list|)
expr_stmt|;
block|}
name|bool
name|checkable
init|=
name|menuItem
operator|->
name|checkType
operator|!=
name|QStyleOptionMenuItem
operator|::
name|NotCheckable
decl_stmt|;
name|bool
name|checked
init|=
name|menuItem
operator|->
name|checked
decl_stmt|;
name|bool
name|sunken
init|=
name|menuItem
operator|->
name|state
operator|&
name|State_Sunken
decl_stmt|;
name|bool
name|enabled
init|=
name|menuItem
operator|->
name|state
operator|&
name|State_Enabled
decl_stmt|;
name|bool
name|ignoreCheckMark
init|=
literal|false
decl_stmt|;
name|int
name|checkcol
init|=
name|qMax
argument_list|(
name|menuItem
operator|->
name|maxIconWidth
argument_list|,
literal|20
argument_list|)
decl_stmt|;
if|if
condition|(
name|qobject_cast
argument_list|<
specifier|const
name|QComboBox
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
condition|)
name|ignoreCheckMark
operator|=
literal|true
expr_stmt|;
comment|//ignore the checkmarks provided by the QComboMenuDelegate
if|if
condition|(
operator|!
name|ignoreCheckMark
condition|)
block|{
comment|// Check
name|QRect
name|checkRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|7
argument_list|,
name|option
operator|->
name|rect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|-
literal|6
argument_list|,
literal|14
argument_list|,
literal|14
argument_list|)
decl_stmt|;
name|checkRect
operator|=
name|visualRect
argument_list|(
name|menuItem
operator|->
name|direction
argument_list|,
name|menuItem
operator|->
name|rect
argument_list|,
name|checkRect
argument_list|)
expr_stmt|;
if|if
condition|(
name|checkable
condition|)
block|{
if|if
condition|(
name|menuItem
operator|->
name|checkType
operator|&
name|QStyleOptionMenuItem
operator|::
name|Exclusive
condition|)
block|{
comment|// Radio button
if|if
condition|(
name|checked
operator|||
name|sunken
condition|)
block|{
name|painter
operator|->
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|QPalette
operator|::
name|ColorRole
name|textRole
init|=
operator|!
name|enabled
condition|?
name|QPalette
operator|::
name|Text
else|:
name|selected
condition|?
name|QPalette
operator|::
name|HighlightedText
else|:
name|QPalette
operator|::
name|ButtonText
decl_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|option
operator|->
name|palette
operator|.
name|brush
argument_list|(
name|option
operator|->
name|palette
operator|.
name|currentColorGroup
argument_list|()
argument_list|,
name|textRole
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawEllipse
argument_list|(
name|checkRect
operator|.
name|adjusted
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|,
operator|-
literal|4
argument_list|,
operator|-
literal|4
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
comment|// Check box
if|if
condition|(
name|menuItem
operator|->
name|icon
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|QStyleOptionButton
name|box
decl_stmt|;
name|box
operator|.
name|QStyleOption
operator|::
name|operator
name|=
argument_list|(
operator|*
name|option
argument_list|)
expr_stmt|;
name|box
operator|.
name|rect
operator|=
name|checkRect
expr_stmt|;
if|if
condition|(
name|checked
condition|)
name|box
operator|.
name|state
operator||=
name|State_On
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_IndicatorCheckBox
argument_list|,
operator|&
name|box
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
else|else
block|{
comment|//ignore checkmark
if|if
condition|(
name|menuItem
operator|->
name|icon
operator|.
name|isNull
argument_list|()
condition|)
name|checkcol
operator|=
literal|0
expr_stmt|;
else|else
name|checkcol
operator|=
name|menuItem
operator|->
name|maxIconWidth
expr_stmt|;
block|}
comment|// Text and icon, ripped from windows style
name|bool
name|dis
init|=
operator|!
operator|(
name|menuItem
operator|->
name|state
operator|&
name|State_Enabled
operator|)
decl_stmt|;
name|bool
name|act
init|=
name|menuItem
operator|->
name|state
operator|&
name|State_Selected
decl_stmt|;
specifier|const
name|QStyleOption
modifier|*
name|opt
init|=
name|option
decl_stmt|;
specifier|const
name|QStyleOptionMenuItem
modifier|*
name|menuitem
init|=
name|menuItem
decl_stmt|;
name|QPainter
modifier|*
name|p
init|=
name|painter
decl_stmt|;
name|QRect
name|vCheckRect
init|=
name|visualRect
argument_list|(
name|opt
operator|->
name|direction
argument_list|,
name|menuitem
operator|->
name|rect
argument_list|,
name|QRect
argument_list|(
name|menuitem
operator|->
name|rect
operator|.
name|x
argument_list|()
operator|+
literal|4
argument_list|,
name|menuitem
operator|->
name|rect
operator|.
name|y
argument_list|()
argument_list|,
name|checkcol
argument_list|,
name|menuitem
operator|->
name|rect
operator|.
name|height
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|menuItem
operator|->
name|icon
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|QIcon
operator|::
name|Mode
name|mode
init|=
name|dis
condition|?
name|QIcon
operator|::
name|Disabled
else|:
name|QIcon
operator|::
name|Normal
decl_stmt|;
if|if
condition|(
name|act
operator|&&
operator|!
name|dis
condition|)
name|mode
operator|=
name|QIcon
operator|::
name|Active
expr_stmt|;
name|QPixmap
name|pixmap
decl_stmt|;
name|int
name|smallIconSize
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_SmallIconSize
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|QSize
name|iconSize
argument_list|(
name|smallIconSize
argument_list|,
name|smallIconSize
argument_list|)
decl_stmt|;
if|if
condition|(
specifier|const
name|QComboBox
modifier|*
name|combo
init|=
name|qobject_cast
argument_list|<
specifier|const
name|QComboBox
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
condition|)
name|iconSize
operator|=
name|combo
operator|->
name|iconSize
argument_list|()
expr_stmt|;
if|if
condition|(
name|checked
condition|)
name|pixmap
operator|=
name|menuItem
operator|->
name|icon
operator|.
name|pixmap
argument_list|(
name|iconSize
argument_list|,
name|mode
argument_list|,
name|QIcon
operator|::
name|On
argument_list|)
expr_stmt|;
else|else
name|pixmap
operator|=
name|menuItem
operator|->
name|icon
operator|.
name|pixmap
argument_list|(
name|iconSize
argument_list|,
name|mode
argument_list|)
expr_stmt|;
name|int
name|pixw
init|=
name|pixmap
operator|.
name|width
argument_list|()
decl_stmt|;
name|int
name|pixh
init|=
name|pixmap
operator|.
name|height
argument_list|()
decl_stmt|;
name|QRect
name|pmr
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|pixw
argument_list|,
name|pixh
argument_list|)
decl_stmt|;
name|pmr
operator|.
name|moveCenter
argument_list|(
name|vCheckRect
operator|.
name|center
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|menuItem
operator|->
name|palette
operator|.
name|text
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|checkable
operator|&&
name|checked
condition|)
block|{
name|QStyleOption
name|opt
init|=
operator|*
name|option
decl_stmt|;
if|if
condition|(
name|act
condition|)
block|{
name|QColor
name|activeColor
init|=
name|mergedColors
argument_list|(
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
name|option
operator|->
name|palette
operator|.
name|highlight
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
decl_stmt|;
name|opt
operator|.
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Button
argument_list|,
name|activeColor
argument_list|)
expr_stmt|;
block|}
name|opt
operator|.
name|state
operator||=
name|State_Sunken
expr_stmt|;
name|opt
operator|.
name|rect
operator|=
name|vCheckRect
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_PanelButtonCommand
argument_list|,
operator|&
name|opt
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|drawPixmap
argument_list|(
name|pmr
operator|.
name|topLeft
argument_list|()
argument_list|,
name|pixmap
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|selected
condition|)
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|menuItem
operator|->
name|palette
operator|.
name|highlightedText
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|menuItem
operator|->
name|palette
operator|.
name|text
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|int
name|x
decl_stmt|,
name|y
decl_stmt|,
name|w
decl_stmt|,
name|h
decl_stmt|;
name|menuitem
operator|->
name|rect
operator|.
name|getRect
argument_list|(
operator|&
name|x
argument_list|,
operator|&
name|y
argument_list|,
operator|&
name|w
argument_list|,
operator|&
name|h
argument_list|)
expr_stmt|;
name|int
name|tab
init|=
name|menuitem
operator|->
name|tabWidth
decl_stmt|;
name|QColor
name|discol
decl_stmt|;
if|if
condition|(
name|dis
condition|)
block|{
name|discol
operator|=
name|menuitem
operator|->
name|palette
operator|.
name|text
argument_list|()
operator|.
name|color
argument_list|()
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|discol
argument_list|)
expr_stmt|;
block|}
name|int
name|xm
init|=
name|windowsItemFrame
operator|+
name|checkcol
operator|+
name|windowsItemHMargin
operator|+
literal|2
decl_stmt|;
name|int
name|xpos
init|=
name|menuitem
operator|->
name|rect
operator|.
name|x
argument_list|()
operator|+
name|xm
decl_stmt|;
name|QRect
name|textRect
argument_list|(
name|xpos
argument_list|,
name|y
operator|+
name|windowsItemVMargin
argument_list|,
name|w
operator|-
name|xm
operator|-
name|windowsRightBorder
operator|-
name|tab
operator|+
literal|1
argument_list|,
name|h
operator|-
literal|2
operator|*
name|windowsItemVMargin
argument_list|)
decl_stmt|;
name|QRect
name|vTextRect
init|=
name|visualRect
argument_list|(
name|opt
operator|->
name|direction
argument_list|,
name|menuitem
operator|->
name|rect
argument_list|,
name|textRect
argument_list|)
decl_stmt|;
name|QString
name|s
init|=
name|menuitem
operator|->
name|text
decl_stmt|;
if|if
condition|(
operator|!
name|s
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
comment|// draw text
name|p
operator|->
name|save
argument_list|()
expr_stmt|;
name|int
name|t
init|=
name|s
operator|.
name|indexOf
argument_list|(
name|QLatin1Char
argument_list|(
literal|'\t'
argument_list|)
argument_list|)
decl_stmt|;
name|int
name|text_flags
init|=
name|Qt
operator|::
name|AlignVCenter
operator||
name|Qt
operator|::
name|TextShowMnemonic
operator||
name|Qt
operator|::
name|TextDontClip
operator||
name|Qt
operator|::
name|TextSingleLine
decl_stmt|;
if|if
condition|(
operator|!
name|styleHint
argument_list|(
name|SH_UnderlineShortcut
argument_list|,
name|menuitem
argument_list|,
name|widget
argument_list|)
condition|)
name|text_flags
operator||=
name|Qt
operator|::
name|TextHideMnemonic
expr_stmt|;
name|text_flags
operator||=
name|Qt
operator|::
name|AlignLeft
expr_stmt|;
if|if
condition|(
name|t
operator|>=
literal|0
condition|)
block|{
name|QRect
name|vShortcutRect
init|=
name|visualRect
argument_list|(
name|opt
operator|->
name|direction
argument_list|,
name|menuitem
operator|->
name|rect
argument_list|,
name|QRect
argument_list|(
name|textRect
operator|.
name|topRight
argument_list|()
argument_list|,
name|QPoint
argument_list|(
name|menuitem
operator|->
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|textRect
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|dis
operator|&&
operator|!
name|act
operator|&&
name|proxy
argument_list|()
operator|->
name|styleHint
argument_list|(
name|SH_EtchDisabledText
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
condition|)
block|{
name|p
operator|->
name|setPen
argument_list|(
name|menuitem
operator|->
name|palette
operator|.
name|light
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawText
argument_list|(
name|vShortcutRect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|text_flags
argument_list|,
name|s
operator|.
name|mid
argument_list|(
name|t
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|discol
argument_list|)
expr_stmt|;
block|}
name|p
operator|->
name|drawText
argument_list|(
name|vShortcutRect
argument_list|,
name|text_flags
argument_list|,
name|s
operator|.
name|mid
argument_list|(
name|t
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|s
operator|=
name|s
operator|.
name|left
argument_list|(
name|t
argument_list|)
expr_stmt|;
block|}
name|QFont
name|font
init|=
name|menuitem
operator|->
name|font
decl_stmt|;
comment|// font may not have any "hard" flags set. We override
comment|// the point size so that when it is resolved against the device, this font will win.
comment|// This is mainly to handle cases where someone sets the font on the window
comment|// and then the combo inherits it and passes it onward. At that point the resolve mask
comment|// is very, very weak. This makes it stonger.
name|font
operator|.
name|setPointSizeF
argument_list|(
name|QFontInfo
argument_list|(
name|menuItem
operator|->
name|font
argument_list|)
operator|.
name|pointSizeF
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|menuitem
operator|->
name|menuItemType
operator|==
name|QStyleOptionMenuItem
operator|::
name|DefaultItem
condition|)
name|font
operator|.
name|setBold
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|p
operator|->
name|setFont
argument_list|(
name|font
argument_list|)
expr_stmt|;
if|if
condition|(
name|dis
operator|&&
operator|!
name|act
operator|&&
name|proxy
argument_list|()
operator|->
name|styleHint
argument_list|(
name|SH_EtchDisabledText
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
condition|)
block|{
name|p
operator|->
name|setPen
argument_list|(
name|menuitem
operator|->
name|palette
operator|.
name|light
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawText
argument_list|(
name|vTextRect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|text_flags
argument_list|,
name|s
operator|.
name|left
argument_list|(
name|t
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|discol
argument_list|)
expr_stmt|;
block|}
name|p
operator|->
name|drawText
argument_list|(
name|vTextRect
argument_list|,
name|text_flags
argument_list|,
name|s
operator|.
name|left
argument_list|(
name|t
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
comment|// Arrow
if|if
condition|(
name|menuItem
operator|->
name|menuItemType
operator|==
name|QStyleOptionMenuItem
operator|::
name|SubMenu
condition|)
block|{
comment|// draw sub menu arrow
name|int
name|dim
init|=
operator|(
name|menuItem
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
literal|4
operator|)
operator|/
literal|2
decl_stmt|;
name|PrimitiveElement
name|arrow
decl_stmt|;
name|arrow
operator|=
name|QApplication
operator|::
name|isRightToLeft
argument_list|()
condition|?
name|PE_IndicatorArrowLeft
else|:
name|PE_IndicatorArrowRight
expr_stmt|;
name|int
name|xpos
init|=
name|menuItem
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
name|menuItem
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|-
literal|3
operator|-
name|dim
decl_stmt|;
name|QRect
name|vSubMenuRect
init|=
name|visualRect
argument_list|(
name|option
operator|->
name|direction
argument_list|,
name|menuItem
operator|->
name|rect
argument_list|,
name|QRect
argument_list|(
name|xpos
argument_list|,
name|menuItem
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
name|menuItem
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|/
literal|2
operator|-
name|dim
operator|/
literal|2
argument_list|,
name|dim
argument_list|,
name|dim
argument_list|)
argument_list|)
decl_stmt|;
name|QStyleOptionMenuItem
name|newMI
init|=
operator|*
name|menuItem
decl_stmt|;
name|newMI
operator|.
name|rect
operator|=
name|vSubMenuRect
expr_stmt|;
name|newMI
operator|.
name|state
operator|=
operator|!
name|enabled
condition|?
name|State_None
else|:
name|State_Enabled
expr_stmt|;
if|if
condition|(
name|selected
condition|)
name|newMI
operator|.
name|palette
operator|.
name|setColor
argument_list|(
name|QPalette
operator|::
name|Foreground
argument_list|,
name|newMI
operator|.
name|palette
operator|.
name|highlightedText
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|arrow
argument_list|,
operator|&
name|newMI
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
case|case
name|CE_MenuHMargin
case|:
case|case
name|CE_MenuVMargin
case|:
break|break;
case|case
name|CE_MenuEmptyArea
case|:
break|break;
case|case
name|CE_PushButton
case|:
if|if
condition|(
specifier|const
name|QStyleOptionButton
modifier|*
name|btn
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionButton
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|proxy
argument_list|()
operator|->
name|drawControl
argument_list|(
name|CE_PushButtonBevel
argument_list|,
name|btn
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|QStyleOptionButton
name|subopt
init|=
operator|*
name|btn
decl_stmt|;
name|subopt
operator|.
name|rect
operator|=
name|subElementRect
argument_list|(
name|SE_PushButtonContents
argument_list|,
name|btn
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawControl
argument_list|(
name|CE_PushButtonLabel
argument_list|,
operator|&
name|subopt
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|CE_PushButtonLabel
case|:
if|if
condition|(
specifier|const
name|QStyleOptionButton
modifier|*
name|button
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionButton
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|QRect
name|ir
init|=
name|button
operator|->
name|rect
decl_stmt|;
name|uint
name|tf
init|=
name|Qt
operator|::
name|AlignVCenter
decl_stmt|;
if|if
condition|(
name|styleHint
argument_list|(
name|SH_UnderlineShortcut
argument_list|,
name|button
argument_list|,
name|widget
argument_list|)
condition|)
name|tf
operator||=
name|Qt
operator|::
name|TextShowMnemonic
expr_stmt|;
else|else
name|tf
operator||=
name|Qt
operator|::
name|TextHideMnemonic
expr_stmt|;
if|if
condition|(
operator|!
name|button
operator|->
name|icon
operator|.
name|isNull
argument_list|()
condition|)
block|{
comment|//Center both icon and text
name|QPoint
name|point
decl_stmt|;
name|QIcon
operator|::
name|Mode
name|mode
init|=
name|button
operator|->
name|state
operator|&
name|State_Enabled
condition|?
name|QIcon
operator|::
name|Normal
else|:
name|QIcon
operator|::
name|Disabled
decl_stmt|;
if|if
condition|(
name|mode
operator|==
name|QIcon
operator|::
name|Normal
operator|&&
name|button
operator|->
name|state
operator|&
name|State_HasFocus
condition|)
name|mode
operator|=
name|QIcon
operator|::
name|Active
expr_stmt|;
name|QIcon
operator|::
name|State
name|state
init|=
name|QIcon
operator|::
name|Off
decl_stmt|;
if|if
condition|(
name|button
operator|->
name|state
operator|&
name|State_On
condition|)
name|state
operator|=
name|QIcon
operator|::
name|On
expr_stmt|;
name|QPixmap
name|pixmap
init|=
name|button
operator|->
name|icon
operator|.
name|pixmap
argument_list|(
name|button
operator|->
name|iconSize
argument_list|,
name|mode
argument_list|,
name|state
argument_list|)
decl_stmt|;
name|int
name|w
init|=
name|pixmap
operator|.
name|width
argument_list|()
decl_stmt|;
name|int
name|h
init|=
name|pixmap
operator|.
name|height
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|button
operator|->
name|text
operator|.
name|isEmpty
argument_list|()
condition|)
name|w
operator|+=
name|button
operator|->
name|fontMetrics
operator|.
name|boundingRect
argument_list|(
name|option
operator|->
name|rect
argument_list|,
name|tf
argument_list|,
name|button
operator|->
name|text
argument_list|)
operator|.
name|width
argument_list|()
operator|+
literal|2
expr_stmt|;
name|point
operator|=
name|QPoint
argument_list|(
name|ir
operator|.
name|x
argument_list|()
operator|+
name|ir
operator|.
name|width
argument_list|()
operator|/
literal|2
operator|-
name|w
operator|/
literal|2
argument_list|,
name|ir
operator|.
name|y
argument_list|()
operator|+
name|ir
operator|.
name|height
argument_list|()
operator|/
literal|2
operator|-
name|h
operator|/
literal|2
argument_list|)
expr_stmt|;
if|if
condition|(
name|button
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
condition|)
name|point
operator|.
name|rx
argument_list|()
operator|+=
name|pixmap
operator|.
name|width
argument_list|()
expr_stmt|;
name|painter
operator|->
name|drawPixmap
argument_list|(
name|visualPos
argument_list|(
name|button
operator|->
name|direction
argument_list|,
name|button
operator|->
name|rect
argument_list|,
name|point
argument_list|)
argument_list|,
name|pixmap
argument_list|)
expr_stmt|;
if|if
condition|(
name|button
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
condition|)
name|ir
operator|.
name|translate
argument_list|(
operator|-
name|point
operator|.
name|x
argument_list|()
operator|-
literal|2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
else|else
name|ir
operator|.
name|translate
argument_list|(
name|point
operator|.
name|x
argument_list|()
operator|+
name|pixmap
operator|.
name|width
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// left-align text if there is
if|if
condition|(
operator|!
name|button
operator|->
name|text
operator|.
name|isEmpty
argument_list|()
condition|)
name|tf
operator||=
name|Qt
operator|::
name|AlignLeft
expr_stmt|;
block|}
else|else
block|{
name|tf
operator||=
name|Qt
operator|::
name|AlignHCenter
expr_stmt|;
block|}
if|if
condition|(
name|button
operator|->
name|features
operator|&
name|QStyleOptionButton
operator|::
name|HasMenu
condition|)
name|ir
operator|=
name|ir
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_MenuButtonIndicator
argument_list|,
name|button
argument_list|,
name|widget
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawItemText
argument_list|(
name|painter
argument_list|,
name|ir
argument_list|,
name|tf
argument_list|,
name|button
operator|->
name|palette
argument_list|,
operator|(
name|button
operator|->
name|state
operator|&
name|State_Enabled
operator|)
argument_list|,
name|button
operator|->
name|text
argument_list|,
name|QPalette
operator|::
name|ButtonText
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|CE_MenuBarEmptyArea
case|:
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
block|{
name|painter
operator|->
name|fillRect
argument_list|(
name|rect
argument_list|,
name|option
operator|->
name|palette
operator|.
name|window
argument_list|()
argument_list|)
expr_stmt|;
name|QColor
name|shadow
init|=
name|mergedColors
argument_list|(
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|120
argument_list|)
argument_list|,
name|outline
operator|.
name|lighter
argument_list|(
literal|140
argument_list|)
argument_list|,
literal|60
argument_list|)
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|shadow
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
case|case
name|CE_TabBarTabShape
case|:
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
if|if
condition|(
specifier|const
name|QStyleOptionTab
modifier|*
name|tab
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionTab
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|bool
name|rtlHorTabs
init|=
operator|(
name|tab
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
operator|&&
operator|(
name|tab
operator|->
name|shape
operator|==
name|QTabBar
operator|::
name|RoundedNorth
operator|||
name|tab
operator|->
name|shape
operator|==
name|QTabBar
operator|::
name|RoundedSouth
operator|)
operator|)
decl_stmt|;
name|bool
name|selected
init|=
name|tab
operator|->
name|state
operator|&
name|State_Selected
decl_stmt|;
name|bool
name|lastTab
init|=
operator|(
operator|(
operator|!
name|rtlHorTabs
operator|&&
name|tab
operator|->
name|position
operator|==
name|QStyleOptionTab
operator|::
name|End
operator|)
operator|||
operator|(
name|rtlHorTabs
operator|&&
name|tab
operator|->
name|position
operator|==
name|QStyleOptionTab
operator|::
name|Beginning
operator|)
operator|)
decl_stmt|;
name|bool
name|onlyOne
init|=
name|tab
operator|->
name|position
operator|==
name|QStyleOptionTab
operator|::
name|OnlyOneTab
decl_stmt|;
name|int
name|tabOverlap
init|=
name|pixelMetric
argument_list|(
name|PM_TabBarTabOverlap
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|rect
operator|=
name|option
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|(
name|onlyOne
operator|||
name|lastTab
operator|)
condition|?
literal|0
else|:
name|tabOverlap
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QRect
name|r2
argument_list|(
name|rect
argument_list|)
decl_stmt|;
name|int
name|x1
init|=
name|r2
operator|.
name|left
argument_list|()
decl_stmt|;
name|int
name|x2
init|=
name|r2
operator|.
name|right
argument_list|()
decl_stmt|;
name|int
name|y1
init|=
name|r2
operator|.
name|top
argument_list|()
decl_stmt|;
name|int
name|y2
init|=
name|r2
operator|.
name|bottom
argument_list|()
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|d
operator|->
name|innerContrastLine
argument_list|()
argument_list|)
expr_stmt|;
name|QTransform
name|rotMatrix
decl_stmt|;
name|bool
name|flip
init|=
literal|false
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|shadow
argument_list|)
expr_stmt|;
switch|switch
condition|(
name|tab
operator|->
name|shape
condition|)
block|{
case|case
name|QTabBar
operator|::
name|RoundedNorth
case|:
break|break;
case|case
name|QTabBar
operator|::
name|RoundedSouth
case|:
name|rotMatrix
operator|.
name|rotate
argument_list|(
literal|180
argument_list|)
expr_stmt|;
name|rotMatrix
operator|.
name|translate
argument_list|(
literal|0
argument_list|,
operator|-
name|rect
operator|.
name|height
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
name|rotMatrix
operator|.
name|scale
argument_list|(
operator|-
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setTransform
argument_list|(
name|rotMatrix
argument_list|,
literal|true
argument_list|)
expr_stmt|;
break|break;
case|case
name|QTabBar
operator|::
name|RoundedWest
case|:
name|rotMatrix
operator|.
name|rotate
argument_list|(
literal|180
operator|+
literal|90
argument_list|)
expr_stmt|;
name|rotMatrix
operator|.
name|scale
argument_list|(
operator|-
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|flip
operator|=
literal|true
expr_stmt|;
name|painter
operator|->
name|setTransform
argument_list|(
name|rotMatrix
argument_list|,
literal|true
argument_list|)
expr_stmt|;
break|break;
case|case
name|QTabBar
operator|::
name|RoundedEast
case|:
name|rotMatrix
operator|.
name|rotate
argument_list|(
literal|90
argument_list|)
expr_stmt|;
name|rotMatrix
operator|.
name|translate
argument_list|(
literal|0
argument_list|,
operator|-
name|rect
operator|.
name|width
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
name|flip
operator|=
literal|true
expr_stmt|;
name|painter
operator|->
name|setTransform
argument_list|(
name|rotMatrix
argument_list|,
literal|true
argument_list|)
expr_stmt|;
break|break;
default|default:
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
name|QCommonStyle
operator|::
name|drawControl
argument_list|(
name|element
argument_list|,
name|tab
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
return|return;
block|}
if|if
condition|(
name|flip
condition|)
block|{
name|QRect
name|tmp
init|=
name|rect
decl_stmt|;
name|rect
operator|=
name|QRect
argument_list|(
name|tmp
operator|.
name|y
argument_list|()
argument_list|,
name|tmp
operator|.
name|x
argument_list|()
argument_list|,
name|tmp
operator|.
name|height
argument_list|()
argument_list|,
name|tmp
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
name|int
name|temp
init|=
name|x1
decl_stmt|;
name|x1
operator|=
name|y1
expr_stmt|;
name|y1
operator|=
name|temp
expr_stmt|;
name|temp
operator|=
name|x2
expr_stmt|;
name|x2
operator|=
name|y2
expr_stmt|;
name|y2
operator|=
name|temp
expr_stmt|;
block|}
name|painter
operator|->
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|painter
operator|->
name|translate
argument_list|(
literal|0.5
argument_list|,
literal|0.5
argument_list|)
expr_stmt|;
name|QColor
name|tabFrameColor
init|=
name|tab
operator|->
name|features
operator|&
name|QStyleOptionTab
operator|::
name|HasFrame
condition|?
name|d
operator|->
name|tabFrameColor
argument_list|(
name|option
operator|->
name|palette
argument_list|)
else|:
name|option
operator|->
name|palette
operator|.
name|window
argument_list|()
operator|.
name|color
argument_list|()
decl_stmt|;
name|QLinearGradient
name|fillGradient
argument_list|(
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|)
decl_stmt|;
name|QLinearGradient
name|outlineGradient
argument_list|(
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|)
decl_stmt|;
name|QPen
name|outlinePen
init|=
name|outline
operator|.
name|lighter
argument_list|(
literal|110
argument_list|)
decl_stmt|;
if|if
condition|(
name|selected
condition|)
block|{
name|fillGradient
operator|.
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|tabFrameColor
operator|.
name|lighter
argument_list|(
literal|104
argument_list|)
argument_list|)
expr_stmt|;
comment|//                QColor highlight = option->palette.highlight().color();
comment|//                if (option->state& State_HasFocus&& option->state& State_KeyboardFocusChange) {
comment|//                    fillGradient.setColorAt(0, highlight.lighter(130));
comment|//                    outlineGradient.setColorAt(0, highlight.darker(130));
comment|//                    fillGradient.setColorAt(0.14, highlight);
comment|//                    outlineGradient.setColorAt(0.14, highlight.darker(130));
comment|//                    fillGradient.setColorAt(0.1401, tabFrameColor);
comment|//                    outlineGradient.setColorAt(0.1401, highlight.darker(130));
comment|//                }
name|fillGradient
operator|.
name|setColorAt
argument_list|(
literal|1
argument_list|,
name|tabFrameColor
argument_list|)
expr_stmt|;
name|outlineGradient
operator|.
name|setColorAt
argument_list|(
literal|1
argument_list|,
name|outline
argument_list|)
expr_stmt|;
name|outlinePen
operator|=
name|QPen
argument_list|(
name|outlineGradient
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|fillGradient
operator|.
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|tabFrameColor
operator|.
name|darker
argument_list|(
literal|108
argument_list|)
argument_list|)
expr_stmt|;
name|fillGradient
operator|.
name|setColorAt
argument_list|(
literal|0.85
argument_list|,
name|tabFrameColor
operator|.
name|darker
argument_list|(
literal|108
argument_list|)
argument_list|)
expr_stmt|;
name|fillGradient
operator|.
name|setColorAt
argument_list|(
literal|1
argument_list|,
name|tabFrameColor
operator|.
name|darker
argument_list|(
literal|116
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QRect
name|drawRect
init|=
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
name|selected
condition|?
literal|0
else|:
literal|2
argument_list|,
literal|0
argument_list|,
literal|3
argument_list|)
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|outlinePen
argument_list|)
expr_stmt|;
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
name|painter
operator|->
name|setClipRect
argument_list|(
name|rect
operator|.
name|adjusted
argument_list|(
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
name|selected
condition|?
operator|-
literal|2
else|:
operator|-
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|fillGradient
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRoundedRect
argument_list|(
name|drawRect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
literal|2.0
argument_list|,
literal|2.0
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|Qt
operator|::
name|NoBrush
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|d
operator|->
name|innerContrastLine
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRoundedRect
argument_list|(
name|drawRect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|2
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
literal|2.0
argument_list|,
literal|2.0
argument_list|)
expr_stmt|;
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
if|if
condition|(
name|selected
condition|)
block|{
name|painter
operator|->
name|fillRect
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|width
argument_list|()
operator|-
literal|2
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|,
name|tabFrameColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|fillRect
argument_list|(
name|QRect
argument_list|(
name|rect
operator|.
name|bottomRight
argument_list|()
operator|+
name|QPoint
argument_list|(
operator|-
literal|2
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|,
name|d
operator|->
name|innerContrastLine
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|fillRect
argument_list|(
name|QRect
argument_list|(
name|rect
operator|.
name|bottomLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|0
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|,
name|d
operator|->
name|innerContrastLine
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|fillRect
argument_list|(
name|QRect
argument_list|(
name|rect
operator|.
name|bottomRight
argument_list|()
operator|+
name|QPoint
argument_list|(
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|,
name|d
operator|->
name|innerContrastLine
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
default|default:
name|QCommonStyle
operator|::
name|drawControl
argument_list|(
name|element
argument_list|,
name|option
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
end_function
begin_function_decl
specifier|extern
name|QPalette
name|qt_fusionPalette
parameter_list|()
function_decl|;
end_function_decl
begin_comment
comment|/*!   \reimp */
end_comment
begin_function
DECL|function|standardPalette
name|QPalette
name|QFusionStyle
operator|::
name|standardPalette
parameter_list|()
specifier|const
block|{
return|return
name|qt_fusionPalette
argument_list|()
return|;
block|}
end_function
begin_comment
comment|/*!   \reimp */
end_comment
begin_function
DECL|function|drawComplexControl
name|void
name|QFusionStyle
operator|::
name|drawComplexControl
parameter_list|(
name|ComplexControl
name|control
parameter_list|,
specifier|const
name|QStyleOptionComplex
modifier|*
name|option
parameter_list|,
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
name|Q_D
argument_list|(
specifier|const
name|QFusionStyle
argument_list|)
expr_stmt|;
name|QColor
name|buttonColor
init|=
name|d
operator|->
name|buttonColor
argument_list|(
name|option
operator|->
name|palette
argument_list|)
decl_stmt|;
name|QColor
name|gradientStartColor
init|=
name|buttonColor
operator|.
name|lighter
argument_list|(
literal|118
argument_list|)
decl_stmt|;
name|QColor
name|gradientStopColor
init|=
name|buttonColor
decl_stmt|;
name|QColor
name|outline
init|=
name|d
operator|->
name|outline
argument_list|(
name|option
operator|->
name|palette
argument_list|)
decl_stmt|;
name|QColor
name|alphaCornerColor
decl_stmt|;
if|if
condition|(
name|widget
condition|)
block|{
comment|// ### backgroundrole/foregroundrole should be part of the style option
name|alphaCornerColor
operator|=
name|mergedColors
argument_list|(
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|widget
operator|->
name|backgroundRole
argument_list|()
argument_list|)
argument_list|,
name|outline
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|alphaCornerColor
operator|=
name|mergedColors
argument_list|(
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
name|outline
argument_list|)
expr_stmt|;
block|}
switch|switch
condition|(
name|control
condition|)
block|{
case|case
name|CC_GroupBox
case|:
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
if|if
condition|(
specifier|const
name|QStyleOptionGroupBox
modifier|*
name|groupBox
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionGroupBox
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
comment|// Draw frame
name|QRect
name|textRect
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_GroupBox
argument_list|,
name|option
argument_list|,
name|SC_GroupBoxLabel
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|QRect
name|checkBoxRect
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_GroupBox
argument_list|,
name|option
argument_list|,
name|SC_GroupBoxCheckBox
argument_list|,
name|widget
argument_list|)
decl_stmt|;
if|if
condition|(
name|groupBox
operator|->
name|subControls
operator|&
name|QStyle
operator|::
name|SC_GroupBoxFrame
condition|)
block|{
name|QStyleOptionFrame
name|frame
decl_stmt|;
name|frame
operator|.
name|QStyleOption
operator|::
name|operator
name|=
argument_list|(
operator|*
name|groupBox
argument_list|)
expr_stmt|;
name|frame
operator|.
name|features
operator|=
name|groupBox
operator|->
name|features
expr_stmt|;
name|frame
operator|.
name|lineWidth
operator|=
name|groupBox
operator|->
name|lineWidth
expr_stmt|;
name|frame
operator|.
name|midLineWidth
operator|=
name|groupBox
operator|->
name|midLineWidth
expr_stmt|;
name|frame
operator|.
name|rect
operator|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_GroupBox
argument_list|,
name|option
argument_list|,
name|SC_GroupBoxFrame
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_FrameGroupBox
argument_list|,
operator|&
name|frame
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
comment|// Draw title
if|if
condition|(
operator|(
name|groupBox
operator|->
name|subControls
operator|&
name|QStyle
operator|::
name|SC_GroupBoxLabel
operator|)
operator|&&
operator|!
name|groupBox
operator|->
name|text
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
comment|// groupBox->textColor gets the incorrect palette here
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|windowText
argument_list|()
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|alignment
init|=
name|int
argument_list|(
name|groupBox
operator|->
name|textAlignment
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|proxy
argument_list|()
operator|->
name|styleHint
argument_list|(
name|QStyle
operator|::
name|SH_UnderlineShortcut
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
condition|)
name|alignment
operator||=
name|Qt
operator|::
name|TextHideMnemonic
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawItemText
argument_list|(
name|painter
argument_list|,
name|textRect
argument_list|,
name|Qt
operator|::
name|TextShowMnemonic
operator||
name|Qt
operator|::
name|AlignLeft
operator||
name|alignment
argument_list|,
name|groupBox
operator|->
name|palette
argument_list|,
name|groupBox
operator|->
name|state
operator|&
name|State_Enabled
argument_list|,
name|groupBox
operator|->
name|text
argument_list|,
name|QPalette
operator|::
name|NoRole
argument_list|)
expr_stmt|;
if|if
condition|(
name|groupBox
operator|->
name|state
operator|&
name|State_HasFocus
condition|)
block|{
name|QStyleOptionFocusRect
name|fropt
decl_stmt|;
name|fropt
operator|.
name|QStyleOption
operator|::
name|operator
name|=
argument_list|(
operator|*
name|groupBox
argument_list|)
expr_stmt|;
name|fropt
operator|.
name|rect
operator|=
name|textRect
operator|.
name|adjusted
argument_list|(
operator|-
literal|2
argument_list|,
operator|-
literal|1
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_FrameFocusRect
argument_list|,
operator|&
name|fropt
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
block|}
comment|// Draw checkbox
if|if
condition|(
name|groupBox
operator|->
name|subControls
operator|&
name|SC_GroupBoxCheckBox
condition|)
block|{
name|QStyleOptionButton
name|box
decl_stmt|;
name|box
operator|.
name|QStyleOption
operator|::
name|operator
name|=
argument_list|(
operator|*
name|groupBox
argument_list|)
expr_stmt|;
name|box
operator|.
name|rect
operator|=
name|checkBoxRect
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_IndicatorCheckBox
argument_list|,
operator|&
name|box
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
case|case
name|CC_SpinBox
case|:
if|if
condition|(
specifier|const
name|QStyleOptionSpinBox
modifier|*
name|spinBox
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSpinBox
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|QPixmap
name|cache
decl_stmt|;
name|QString
name|pixmapName
init|=
name|QStyleHelper
operator|::
name|uniqueName
argument_list|(
name|QLatin1String
argument_list|(
literal|"spinbox"
argument_list|)
argument_list|,
name|spinBox
argument_list|,
name|spinBox
operator|->
name|rect
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|QPixmapCache
operator|::
name|find
argument_list|(
name|pixmapName
argument_list|,
name|cache
argument_list|)
condition|)
block|{
name|cache
operator|=
name|styleCachePixmap
argument_list|(
name|spinBox
operator|->
name|rect
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|cache
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|transparent
argument_list|)
expr_stmt|;
name|QRect
name|pixmapRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|spinBox
operator|->
name|rect
operator|.
name|width
argument_list|()
argument_list|,
name|spinBox
operator|->
name|rect
operator|.
name|height
argument_list|()
argument_list|)
decl_stmt|;
name|QRect
name|rect
init|=
name|pixmapRect
decl_stmt|;
name|QRect
name|r
init|=
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|)
decl_stmt|;
name|QPainter
name|cachePainter
argument_list|(
operator|&
name|cache
argument_list|)
decl_stmt|;
name|QColor
name|arrowColor
init|=
name|spinBox
operator|->
name|palette
operator|.
name|foreground
argument_list|()
operator|.
name|color
argument_list|()
decl_stmt|;
name|arrowColor
operator|.
name|setAlpha
argument_list|(
literal|220
argument_list|)
expr_stmt|;
name|bool
name|isEnabled
init|=
operator|(
name|spinBox
operator|->
name|state
operator|&
name|State_Enabled
operator|)
decl_stmt|;
name|bool
name|hover
init|=
name|isEnabled
operator|&&
operator|(
name|spinBox
operator|->
name|state
operator|&
name|State_MouseOver
operator|)
decl_stmt|;
name|bool
name|sunken
init|=
operator|(
name|spinBox
operator|->
name|state
operator|&
name|State_Sunken
operator|)
decl_stmt|;
name|bool
name|upIsActive
init|=
operator|(
name|spinBox
operator|->
name|activeSubControls
operator|==
name|SC_SpinBoxUp
operator|)
decl_stmt|;
name|bool
name|downIsActive
init|=
operator|(
name|spinBox
operator|->
name|activeSubControls
operator|==
name|SC_SpinBoxDown
operator|)
decl_stmt|;
name|bool
name|hasFocus
init|=
operator|(
name|option
operator|->
name|state
operator|&
name|State_HasFocus
operator|)
decl_stmt|;
name|QStyleOptionSpinBox
name|spinBoxCopy
init|=
operator|*
name|spinBox
decl_stmt|;
name|spinBoxCopy
operator|.
name|rect
operator|=
name|pixmapRect
expr_stmt|;
name|QRect
name|upRect
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_SpinBox
argument_list|,
operator|&
name|spinBoxCopy
argument_list|,
name|SC_SpinBoxUp
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|QRect
name|downRect
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_SpinBox
argument_list|,
operator|&
name|spinBoxCopy
argument_list|,
name|SC_SpinBoxDown
argument_list|,
name|widget
argument_list|)
decl_stmt|;
if|if
condition|(
name|spinBox
operator|->
name|frame
condition|)
block|{
name|cachePainter
operator|.
name|save
argument_list|()
expr_stmt|;
name|cachePainter
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|translate
argument_list|(
literal|0.5
argument_list|,
literal|0.5
argument_list|)
expr_stmt|;
comment|// Fill background
name|cachePainter
operator|.
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|setBrush
argument_list|(
name|option
operator|->
name|palette
operator|.
name|base
argument_list|()
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawRoundedRect
argument_list|(
name|r
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
comment|// Draw inner shadow
name|cachePainter
operator|.
name|setPen
argument_list|(
name|d
operator|->
name|topShadow
argument_list|()
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// Draw button gradient
name|QColor
name|buttonColor
init|=
name|d
operator|->
name|buttonColor
argument_list|(
name|option
operator|->
name|palette
argument_list|)
decl_stmt|;
name|QRect
name|updownRect
init|=
name|upRect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
operator|-
literal|2
argument_list|,
literal|0
argument_list|,
name|downRect
operator|.
name|height
argument_list|()
operator|+
literal|2
argument_list|)
decl_stmt|;
name|QLinearGradient
name|gradient
init|=
name|qt_fusion_gradient
argument_list|(
name|updownRect
argument_list|,
operator|(
name|isEnabled
operator|&&
name|option
operator|->
name|state
operator|&
name|State_MouseOver
operator|)
condition|?
name|buttonColor
else|:
name|buttonColor
operator|.
name|darker
argument_list|(
literal|104
argument_list|)
argument_list|)
decl_stmt|;
comment|// Draw button gradient
name|cachePainter
operator|.
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|setBrush
argument_list|(
name|gradient
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|save
argument_list|()
expr_stmt|;
name|cachePainter
operator|.
name|setClipRect
argument_list|(
name|updownRect
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawRoundedRect
argument_list|(
name|r
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|setPen
argument_list|(
name|QPen
argument_list|(
name|d
operator|->
name|innerContrastLine
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|setBrush
argument_list|(
name|Qt
operator|::
name|NoBrush
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawRoundedRect
argument_list|(
name|r
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|2
argument_list|,
operator|-
literal|2
argument_list|)
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|restore
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
name|spinBox
operator|->
name|stepEnabled
operator|&
name|QAbstractSpinBox
operator|::
name|StepUpEnabled
operator|)
operator|&&
name|upIsActive
condition|)
block|{
if|if
condition|(
name|sunken
condition|)
name|cachePainter
operator|.
name|fillRect
argument_list|(
name|upRect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|gradientStopColor
operator|.
name|darker
argument_list|(
literal|110
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|hover
condition|)
name|cachePainter
operator|.
name|fillRect
argument_list|(
name|upRect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|d
operator|->
name|innerContrastLine
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
name|spinBox
operator|->
name|stepEnabled
operator|&
name|QAbstractSpinBox
operator|::
name|StepDownEnabled
operator|)
operator|&&
name|downIsActive
condition|)
block|{
if|if
condition|(
name|sunken
condition|)
name|cachePainter
operator|.
name|fillRect
argument_list|(
name|downRect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|gradientStopColor
operator|.
name|darker
argument_list|(
literal|110
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|hover
condition|)
name|cachePainter
operator|.
name|fillRect
argument_list|(
name|downRect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|d
operator|->
name|innerContrastLine
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|cachePainter
operator|.
name|setPen
argument_list|(
name|hasFocus
condition|?
name|d
operator|->
name|highlightedOutline
argument_list|(
name|option
operator|->
name|palette
argument_list|)
else|:
name|outline
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|setBrush
argument_list|(
name|Qt
operator|::
name|NoBrush
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawRoundedRect
argument_list|(
name|r
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
if|if
condition|(
name|hasFocus
condition|)
block|{
name|QColor
name|softHighlight
init|=
name|option
operator|->
name|palette
operator|.
name|highlight
argument_list|()
operator|.
name|color
argument_list|()
decl_stmt|;
name|softHighlight
operator|.
name|setAlpha
argument_list|(
literal|40
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|setPen
argument_list|(
name|softHighlight
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawRoundedRect
argument_list|(
name|r
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|2
argument_list|,
operator|-
literal|2
argument_list|)
argument_list|,
literal|1.7
argument_list|,
literal|1.7
argument_list|)
expr_stmt|;
block|}
name|cachePainter
operator|.
name|restore
argument_list|()
expr_stmt|;
block|}
comment|// outline the up/down buttons
name|cachePainter
operator|.
name|setPen
argument_list|(
name|outline
argument_list|)
expr_stmt|;
if|if
condition|(
name|spinBox
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
condition|)
block|{
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|upRect
operator|.
name|right
argument_list|()
argument_list|,
name|upRect
operator|.
name|top
argument_list|()
operator|-
literal|1
argument_list|,
name|upRect
operator|.
name|right
argument_list|()
argument_list|,
name|downRect
operator|.
name|bottom
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|upRect
operator|.
name|left
argument_list|()
argument_list|,
name|upRect
operator|.
name|top
argument_list|()
operator|-
literal|1
argument_list|,
name|upRect
operator|.
name|left
argument_list|()
argument_list|,
name|downRect
operator|.
name|bottom
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|upIsActive
operator|&&
name|sunken
condition|)
block|{
name|cachePainter
operator|.
name|setPen
argument_list|(
name|gradientStopColor
operator|.
name|darker
argument_list|(
literal|130
argument_list|)
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|downRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|downRect
operator|.
name|top
argument_list|()
argument_list|,
name|downRect
operator|.
name|right
argument_list|()
argument_list|,
name|downRect
operator|.
name|top
argument_list|()
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|upRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|upRect
operator|.
name|top
argument_list|()
argument_list|,
name|upRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|upRect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|upRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|upRect
operator|.
name|top
argument_list|()
operator|-
literal|1
argument_list|,
name|upRect
operator|.
name|right
argument_list|()
argument_list|,
name|upRect
operator|.
name|top
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|downIsActive
operator|&&
name|sunken
condition|)
block|{
name|cachePainter
operator|.
name|setPen
argument_list|(
name|gradientStopColor
operator|.
name|darker
argument_list|(
literal|130
argument_list|)
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|downRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|downRect
operator|.
name|top
argument_list|()
argument_list|,
name|downRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|downRect
operator|.
name|bottom
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|downRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|downRect
operator|.
name|top
argument_list|()
argument_list|,
name|downRect
operator|.
name|right
argument_list|()
argument_list|,
name|downRect
operator|.
name|top
argument_list|()
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|setPen
argument_list|(
name|gradientStopColor
operator|.
name|darker
argument_list|(
literal|110
argument_list|)
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|downRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|downRect
operator|.
name|bottom
argument_list|()
operator|+
literal|1
argument_list|,
name|downRect
operator|.
name|right
argument_list|()
argument_list|,
name|downRect
operator|.
name|bottom
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
block|}
name|QColor
name|disabledColor
init|=
name|mergedColors
argument_list|(
name|arrowColor
argument_list|,
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|spinBox
operator|->
name|buttonSymbols
operator|==
name|QAbstractSpinBox
operator|::
name|PlusMinus
condition|)
block|{
name|int
name|centerX
init|=
name|upRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
decl_stmt|;
name|int
name|centerY
init|=
name|upRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
decl_stmt|;
comment|// plus/minus
name|cachePainter
operator|.
name|setPen
argument_list|(
operator|(
name|spinBox
operator|->
name|stepEnabled
operator|&
name|QAbstractSpinBox
operator|::
name|StepUpEnabled
operator|)
condition|?
name|arrowColor
else|:
name|disabledColor
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|centerX
operator|-
literal|1
argument_list|,
name|centerY
argument_list|,
name|centerX
operator|+
literal|3
argument_list|,
name|centerY
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|centerX
operator|+
literal|1
argument_list|,
name|centerY
operator|-
literal|2
argument_list|,
name|centerX
operator|+
literal|1
argument_list|,
name|centerY
operator|+
literal|2
argument_list|)
expr_stmt|;
name|centerX
operator|=
name|downRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
expr_stmt|;
name|centerY
operator|=
name|downRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
expr_stmt|;
name|cachePainter
operator|.
name|setPen
argument_list|(
operator|(
name|spinBox
operator|->
name|stepEnabled
operator|&
name|QAbstractSpinBox
operator|::
name|StepDownEnabled
operator|)
condition|?
name|arrowColor
else|:
name|disabledColor
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|centerX
operator|-
literal|1
argument_list|,
name|centerY
argument_list|,
name|centerX
operator|+
literal|3
argument_list|,
name|centerY
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|spinBox
operator|->
name|buttonSymbols
operator|==
name|QAbstractSpinBox
operator|::
name|UpDownArrows
condition|)
block|{
comment|// arrows
name|painter
operator|->
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|SmoothPixmapTransform
argument_list|)
expr_stmt|;
name|QPixmap
name|upArrow
init|=
name|colorizedImage
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/fusion_arrow.png"
argument_list|)
argument_list|,
operator|(
name|spinBox
operator|->
name|stepEnabled
operator|&
name|QAbstractSpinBox
operator|::
name|StepUpEnabled
operator|)
condition|?
name|arrowColor
else|:
name|disabledColor
argument_list|)
decl_stmt|;
name|QRectF
name|upArrowRect
init|=
name|QRectF
argument_list|(
name|upRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|-
name|upArrow
operator|.
name|width
argument_list|()
operator|/
literal|4.0
operator|+
literal|1.0
argument_list|,
name|upRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|-
name|upArrow
operator|.
name|height
argument_list|()
operator|/
literal|4.0
operator|+
literal|1.0
argument_list|,
name|upArrow
operator|.
name|width
argument_list|()
operator|/
literal|2.0
argument_list|,
name|upArrow
operator|.
name|height
argument_list|()
operator|/
literal|2.0
argument_list|)
decl_stmt|;
name|cachePainter
operator|.
name|drawPixmap
argument_list|(
name|upArrowRect
argument_list|,
name|upArrow
argument_list|,
name|QRectF
argument_list|(
name|QPointF
argument_list|(
literal|0.0
argument_list|,
literal|0.0
argument_list|)
argument_list|,
name|upArrow
operator|.
name|size
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QPixmap
name|downArrow
init|=
name|colorizedImage
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/fusion_arrow.png"
argument_list|)
argument_list|,
operator|(
name|spinBox
operator|->
name|stepEnabled
operator|&
name|QAbstractSpinBox
operator|::
name|StepDownEnabled
operator|)
condition|?
name|arrowColor
else|:
name|disabledColor
argument_list|,
literal|180
argument_list|)
decl_stmt|;
name|QRectF
name|downArrowRect
init|=
name|QRectF
argument_list|(
name|downRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|-
name|downArrow
operator|.
name|width
argument_list|()
operator|/
literal|4.0
operator|+
literal|1.0
argument_list|,
name|downRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|-
name|downArrow
operator|.
name|height
argument_list|()
operator|/
literal|4.0
operator|+
literal|1.0
argument_list|,
name|downArrow
operator|.
name|width
argument_list|()
operator|/
literal|2.0
argument_list|,
name|downArrow
operator|.
name|height
argument_list|()
operator|/
literal|2.0
argument_list|)
decl_stmt|;
name|cachePainter
operator|.
name|drawPixmap
argument_list|(
name|downArrowRect
argument_list|,
name|downArrow
argument_list|,
name|QRectF
argument_list|(
name|QPointF
argument_list|(
literal|0.0
argument_list|,
literal|0.0
argument_list|)
argument_list|,
name|downArrow
operator|.
name|size
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|cachePainter
operator|.
name|end
argument_list|()
expr_stmt|;
name|QPixmapCache
operator|::
name|insert
argument_list|(
name|pixmapName
argument_list|,
name|cache
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|drawPixmap
argument_list|(
name|spinBox
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|cache
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|CC_TitleBar
case|:
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
if|if
condition|(
specifier|const
name|QStyleOptionTitleBar
modifier|*
name|titleBar
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionTitleBar
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
specifier|const
name|int
name|buttonMargin
init|=
literal|5
decl_stmt|;
name|bool
name|active
init|=
operator|(
name|titleBar
operator|->
name|titleBarState
operator|&
name|State_Active
operator|)
decl_stmt|;
name|QRect
name|fullRect
init|=
name|titleBar
operator|->
name|rect
decl_stmt|;
name|QPalette
name|palette
init|=
name|option
operator|->
name|palette
decl_stmt|;
name|QColor
name|highlight
init|=
name|option
operator|->
name|palette
operator|.
name|highlight
argument_list|()
operator|.
name|color
argument_list|()
decl_stmt|;
name|QColor
name|titleBarFrameBorder
argument_list|(
name|active
condition|?
name|highlight
operator|.
name|darker
argument_list|(
literal|180
argument_list|)
else|:
name|outline
operator|.
name|darker
argument_list|(
literal|110
argument_list|)
argument_list|)
decl_stmt|;
name|QColor
name|titleBarHighlight
argument_list|(
name|active
condition|?
name|highlight
operator|.
name|lighter
argument_list|(
literal|120
argument_list|)
else|:
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|120
argument_list|)
argument_list|)
decl_stmt|;
name|QColor
name|textColor
argument_list|(
name|active
condition|?
literal|0xffffff
else|:
literal|0xff000000
argument_list|)
decl_stmt|;
name|QColor
name|textAlphaColor
argument_list|(
name|active
condition|?
literal|0xffffff
else|:
literal|0xff000000
argument_list|)
decl_stmt|;
block|{
comment|// Fill title bar gradient
name|QColor
name|titlebarColor
init|=
name|QColor
argument_list|(
name|active
condition|?
name|highlight
else|:
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
decl_stmt|;
name|QLinearGradient
name|gradient
argument_list|(
name|option
operator|->
name|rect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
decl_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|titlebarColor
operator|.
name|lighter
argument_list|(
literal|114
argument_list|)
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0.5
argument_list|,
name|titlebarColor
operator|.
name|lighter
argument_list|(
literal|102
argument_list|)
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0.51
argument_list|,
name|titlebarColor
operator|.
name|darker
argument_list|(
literal|104
argument_list|)
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|1
argument_list|,
name|titlebarColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|fillRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|,
name|gradient
argument_list|)
expr_stmt|;
comment|// Frame and rounded corners
name|painter
operator|->
name|setPen
argument_list|(
name|titleBarFrameBorder
argument_list|)
expr_stmt|;
comment|// top outline
name|painter
operator|->
name|drawLine
argument_list|(
name|fullRect
operator|.
name|left
argument_list|()
operator|+
literal|5
argument_list|,
name|fullRect
operator|.
name|top
argument_list|()
argument_list|,
name|fullRect
operator|.
name|right
argument_list|()
operator|-
literal|5
argument_list|,
name|fullRect
operator|.
name|top
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|fullRect
operator|.
name|left
argument_list|()
argument_list|,
name|fullRect
operator|.
name|top
argument_list|()
operator|+
literal|4
argument_list|,
name|fullRect
operator|.
name|left
argument_list|()
argument_list|,
name|fullRect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
specifier|const
name|QPoint
name|points
index|[
literal|5
index|]
init|=
block|{
name|QPoint
argument_list|(
name|fullRect
operator|.
name|left
argument_list|()
operator|+
literal|4
argument_list|,
name|fullRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
name|fullRect
operator|.
name|left
argument_list|()
operator|+
literal|3
argument_list|,
name|fullRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
name|fullRect
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|fullRect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|)
block|,
name|QPoint
argument_list|(
name|fullRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|fullRect
operator|.
name|top
argument_list|()
operator|+
literal|3
argument_list|)
block|,
name|QPoint
argument_list|(
argument|fullRect.left() +
literal|1
argument_list|,
argument|fullRect.top() +
literal|4
argument_list|)
block|}
decl_stmt|;
name|painter
operator|->
name|drawPoints
argument_list|(
name|points
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|fullRect
operator|.
name|right
argument_list|()
argument_list|,
name|fullRect
operator|.
name|top
argument_list|()
operator|+
literal|4
argument_list|,
name|fullRect
operator|.
name|right
argument_list|()
argument_list|,
name|fullRect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
specifier|const
name|QPoint
name|points2
index|[
literal|5
index|]
init|=
block|{
name|QPoint
argument_list|(
name|fullRect
operator|.
name|right
argument_list|()
operator|-
literal|3
argument_list|,
name|fullRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
name|fullRect
operator|.
name|right
argument_list|()
operator|-
literal|4
argument_list|,
name|fullRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
name|fullRect
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|fullRect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|)
block|,
name|QPoint
argument_list|(
name|fullRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|fullRect
operator|.
name|top
argument_list|()
operator|+
literal|3
argument_list|)
block|,
name|QPoint
argument_list|(
argument|fullRect.right() -
literal|1
argument_list|,
argument|fullRect.top() +
literal|4
argument_list|)
block|}
decl_stmt|;
name|painter
operator|->
name|drawPoints
argument_list|(
name|points2
argument_list|,
literal|5
argument_list|)
expr_stmt|;
comment|// draw bottomline
name|painter
operator|->
name|drawLine
argument_list|(
name|fullRect
operator|.
name|right
argument_list|()
argument_list|,
name|fullRect
operator|.
name|bottom
argument_list|()
argument_list|,
name|fullRect
operator|.
name|left
argument_list|()
argument_list|,
name|fullRect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
comment|// top highlight
name|painter
operator|->
name|setPen
argument_list|(
name|titleBarHighlight
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|fullRect
operator|.
name|left
argument_list|()
operator|+
literal|6
argument_list|,
name|fullRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|fullRect
operator|.
name|right
argument_list|()
operator|-
literal|6
argument_list|,
name|fullRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
block|}
comment|// draw title
name|QRect
name|textRect
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_TitleBar
argument_list|,
name|titleBar
argument_list|,
name|SC_TitleBarLabel
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|active
condition|?
operator|(
name|titleBar
operator|->
name|palette
operator|.
name|text
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|120
argument_list|)
operator|)
else|:
name|titleBar
operator|->
name|palette
operator|.
name|text
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
comment|// Note workspace also does elliding but it does not use the correct font
name|QString
name|title
init|=
name|painter
operator|->
name|fontMetrics
argument_list|()
operator|.
name|elidedText
argument_list|(
name|titleBar
operator|->
name|text
argument_list|,
name|Qt
operator|::
name|ElideRight
argument_list|,
name|textRect
operator|.
name|width
argument_list|()
operator|-
literal|14
argument_list|)
decl_stmt|;
name|painter
operator|->
name|drawText
argument_list|(
name|textRect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|title
argument_list|,
name|QTextOption
argument_list|(
name|Qt
operator|::
name|AlignHCenter
operator||
name|Qt
operator|::
name|AlignVCenter
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
if|if
condition|(
name|active
condition|)
name|painter
operator|->
name|drawText
argument_list|(
name|textRect
argument_list|,
name|title
argument_list|,
name|QTextOption
argument_list|(
name|Qt
operator|::
name|AlignHCenter
operator||
name|Qt
operator|::
name|AlignVCenter
argument_list|)
argument_list|)
expr_stmt|;
comment|// min button
if|if
condition|(
operator|(
name|titleBar
operator|->
name|subControls
operator|&
name|SC_TitleBarMinButton
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowMinimizeButtonHint
operator|)
operator|&&
operator|!
operator|(
name|titleBar
operator|->
name|titleBarState
operator|&
name|Qt
operator|::
name|WindowMinimized
operator|)
condition|)
block|{
name|QRect
name|minButtonRect
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_TitleBar
argument_list|,
name|titleBar
argument_list|,
name|SC_TitleBarMinButton
argument_list|,
name|widget
argument_list|)
decl_stmt|;
if|if
condition|(
name|minButtonRect
operator|.
name|isValid
argument_list|()
condition|)
block|{
name|bool
name|hover
init|=
operator|(
name|titleBar
operator|->
name|activeSubControls
operator|&
name|SC_TitleBarMinButton
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|state
operator|&
name|State_MouseOver
operator|)
decl_stmt|;
name|bool
name|sunken
init|=
operator|(
name|titleBar
operator|->
name|activeSubControls
operator|&
name|SC_TitleBarMinButton
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|state
operator|&
name|State_Sunken
operator|)
decl_stmt|;
name|qt_fusion_draw_mdibutton
argument_list|(
name|painter
argument_list|,
name|titleBar
argument_list|,
name|minButtonRect
argument_list|,
name|hover
argument_list|,
name|sunken
argument_list|)
expr_stmt|;
name|QRect
name|minButtonIconRect
init|=
name|minButtonRect
operator|.
name|adjusted
argument_list|(
name|buttonMargin
argument_list|,
name|buttonMargin
argument_list|,
operator|-
name|buttonMargin
argument_list|,
operator|-
name|buttonMargin
argument_list|)
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|textColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|minButtonIconRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|-
literal|2
argument_list|,
name|minButtonIconRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|+
literal|3
argument_list|,
name|minButtonIconRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|+
literal|3
argument_list|,
name|minButtonIconRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|+
literal|3
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|minButtonIconRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|-
literal|2
argument_list|,
name|minButtonIconRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|+
literal|4
argument_list|,
name|minButtonIconRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|+
literal|3
argument_list|,
name|minButtonIconRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|+
literal|4
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|textAlphaColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|minButtonIconRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|-
literal|3
argument_list|,
name|minButtonIconRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|+
literal|3
argument_list|,
name|minButtonIconRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|-
literal|3
argument_list|,
name|minButtonIconRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|+
literal|4
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|minButtonIconRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|+
literal|4
argument_list|,
name|minButtonIconRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|+
literal|3
argument_list|,
name|minButtonIconRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|+
literal|4
argument_list|,
name|minButtonIconRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|+
literal|4
argument_list|)
expr_stmt|;
block|}
block|}
comment|// max button
if|if
condition|(
operator|(
name|titleBar
operator|->
name|subControls
operator|&
name|SC_TitleBarMaxButton
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowMaximizeButtonHint
operator|)
operator|&&
operator|!
operator|(
name|titleBar
operator|->
name|titleBarState
operator|&
name|Qt
operator|::
name|WindowMaximized
operator|)
condition|)
block|{
name|QRect
name|maxButtonRect
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_TitleBar
argument_list|,
name|titleBar
argument_list|,
name|SC_TitleBarMaxButton
argument_list|,
name|widget
argument_list|)
decl_stmt|;
if|if
condition|(
name|maxButtonRect
operator|.
name|isValid
argument_list|()
condition|)
block|{
name|bool
name|hover
init|=
operator|(
name|titleBar
operator|->
name|activeSubControls
operator|&
name|SC_TitleBarMaxButton
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|state
operator|&
name|State_MouseOver
operator|)
decl_stmt|;
name|bool
name|sunken
init|=
operator|(
name|titleBar
operator|->
name|activeSubControls
operator|&
name|SC_TitleBarMaxButton
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|state
operator|&
name|State_Sunken
operator|)
decl_stmt|;
name|qt_fusion_draw_mdibutton
argument_list|(
name|painter
argument_list|,
name|titleBar
argument_list|,
name|maxButtonRect
argument_list|,
name|hover
argument_list|,
name|sunken
argument_list|)
expr_stmt|;
name|QRect
name|maxButtonIconRect
init|=
name|maxButtonRect
operator|.
name|adjusted
argument_list|(
name|buttonMargin
argument_list|,
name|buttonMargin
argument_list|,
operator|-
name|buttonMargin
argument_list|,
operator|-
name|buttonMargin
argument_list|)
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|textColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|maxButtonIconRect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|maxButtonIconRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|maxButtonIconRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|maxButtonIconRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|maxButtonIconRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|textAlphaColor
argument_list|)
expr_stmt|;
specifier|const
name|QPoint
name|points
index|[
literal|4
index|]
init|=
block|{
name|maxButtonIconRect
operator|.
name|topLeft
argument_list|()
block|,
name|maxButtonIconRect
operator|.
name|topRight
argument_list|()
block|,
name|maxButtonIconRect
operator|.
name|bottomLeft
argument_list|()
block|,
name|maxButtonIconRect
operator|.
name|bottomRight
argument_list|()
block|}
decl_stmt|;
name|painter
operator|->
name|drawPoints
argument_list|(
name|points
argument_list|,
literal|4
argument_list|)
expr_stmt|;
block|}
block|}
comment|// close button
if|if
condition|(
operator|(
name|titleBar
operator|->
name|subControls
operator|&
name|SC_TitleBarCloseButton
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowSystemMenuHint
operator|)
condition|)
block|{
name|QRect
name|closeButtonRect
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_TitleBar
argument_list|,
name|titleBar
argument_list|,
name|SC_TitleBarCloseButton
argument_list|,
name|widget
argument_list|)
decl_stmt|;
if|if
condition|(
name|closeButtonRect
operator|.
name|isValid
argument_list|()
condition|)
block|{
name|bool
name|hover
init|=
operator|(
name|titleBar
operator|->
name|activeSubControls
operator|&
name|SC_TitleBarCloseButton
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|state
operator|&
name|State_MouseOver
operator|)
decl_stmt|;
name|bool
name|sunken
init|=
operator|(
name|titleBar
operator|->
name|activeSubControls
operator|&
name|SC_TitleBarCloseButton
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|state
operator|&
name|State_Sunken
operator|)
decl_stmt|;
name|qt_fusion_draw_mdibutton
argument_list|(
name|painter
argument_list|,
name|titleBar
argument_list|,
name|closeButtonRect
argument_list|,
name|hover
argument_list|,
name|sunken
argument_list|)
expr_stmt|;
name|QRect
name|closeIconRect
init|=
name|closeButtonRect
operator|.
name|adjusted
argument_list|(
name|buttonMargin
argument_list|,
name|buttonMargin
argument_list|,
operator|-
name|buttonMargin
argument_list|,
operator|-
name|buttonMargin
argument_list|)
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|textAlphaColor
argument_list|)
expr_stmt|;
specifier|const
name|QLine
name|lines
index|[
literal|4
index|]
init|=
block|{
name|QLine
argument_list|(
name|closeIconRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|closeIconRect
operator|.
name|top
argument_list|()
argument_list|,
name|closeIconRect
operator|.
name|right
argument_list|()
argument_list|,
name|closeIconRect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
block|,
name|QLine
argument_list|(
name|closeIconRect
operator|.
name|left
argument_list|()
argument_list|,
name|closeIconRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|closeIconRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|closeIconRect
operator|.
name|bottom
argument_list|()
argument_list|)
block|,
name|QLine
argument_list|(
name|closeIconRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|closeIconRect
operator|.
name|top
argument_list|()
argument_list|,
name|closeIconRect
operator|.
name|left
argument_list|()
argument_list|,
name|closeIconRect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
block|,
name|QLine
argument_list|(
argument|closeIconRect.right()
argument_list|,
argument|closeIconRect.top() +
literal|1
argument_list|,
argument|closeIconRect.left() +
literal|1
argument_list|,
argument|closeIconRect.bottom()
argument_list|)
block|}
decl_stmt|;
name|painter
operator|->
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|4
argument_list|)
expr_stmt|;
specifier|const
name|QPoint
name|points
index|[
literal|4
index|]
init|=
block|{
name|closeIconRect
operator|.
name|topLeft
argument_list|()
block|,
name|closeIconRect
operator|.
name|topRight
argument_list|()
block|,
name|closeIconRect
operator|.
name|bottomLeft
argument_list|()
block|,
name|closeIconRect
operator|.
name|bottomRight
argument_list|()
block|}
decl_stmt|;
name|painter
operator|->
name|drawPoints
argument_list|(
name|points
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|textColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|closeIconRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|closeIconRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|closeIconRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|closeIconRect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|closeIconRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|closeIconRect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|,
name|closeIconRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|closeIconRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
comment|// normalize button
if|if
condition|(
operator|(
name|titleBar
operator|->
name|subControls
operator|&
name|SC_TitleBarNormalButton
operator|)
operator|&&
operator|(
operator|(
operator|(
name|titleBar
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowMinimizeButtonHint
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|titleBarState
operator|&
name|Qt
operator|::
name|WindowMinimized
operator|)
operator|)
operator|||
operator|(
operator|(
name|titleBar
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowMaximizeButtonHint
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|titleBarState
operator|&
name|Qt
operator|::
name|WindowMaximized
operator|)
operator|)
operator|)
condition|)
block|{
name|QRect
name|normalButtonRect
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_TitleBar
argument_list|,
name|titleBar
argument_list|,
name|SC_TitleBarNormalButton
argument_list|,
name|widget
argument_list|)
decl_stmt|;
if|if
condition|(
name|normalButtonRect
operator|.
name|isValid
argument_list|()
condition|)
block|{
name|bool
name|hover
init|=
operator|(
name|titleBar
operator|->
name|activeSubControls
operator|&
name|SC_TitleBarNormalButton
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|state
operator|&
name|State_MouseOver
operator|)
decl_stmt|;
name|bool
name|sunken
init|=
operator|(
name|titleBar
operator|->
name|activeSubControls
operator|&
name|SC_TitleBarNormalButton
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|state
operator|&
name|State_Sunken
operator|)
decl_stmt|;
name|QRect
name|normalButtonIconRect
init|=
name|normalButtonRect
operator|.
name|adjusted
argument_list|(
name|buttonMargin
argument_list|,
name|buttonMargin
argument_list|,
operator|-
name|buttonMargin
argument_list|,
operator|-
name|buttonMargin
argument_list|)
decl_stmt|;
name|qt_fusion_draw_mdibutton
argument_list|(
name|painter
argument_list|,
name|titleBar
argument_list|,
name|normalButtonRect
argument_list|,
name|hover
argument_list|,
name|sunken
argument_list|)
expr_stmt|;
name|QRect
name|frontWindowRect
init|=
name|normalButtonIconRect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|,
operator|-
literal|3
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|textColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|frontWindowRect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|frontWindowRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|frontWindowRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|frontWindowRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|frontWindowRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|textAlphaColor
argument_list|)
expr_stmt|;
specifier|const
name|QPoint
name|points
index|[
literal|4
index|]
init|=
block|{
name|frontWindowRect
operator|.
name|topLeft
argument_list|()
block|,
name|frontWindowRect
operator|.
name|topRight
argument_list|()
block|,
name|frontWindowRect
operator|.
name|bottomLeft
argument_list|()
block|,
name|frontWindowRect
operator|.
name|bottomRight
argument_list|()
block|}
decl_stmt|;
name|painter
operator|->
name|drawPoints
argument_list|(
name|points
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QRect
name|backWindowRect
init|=
name|normalButtonIconRect
operator|.
name|adjusted
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|3
argument_list|)
decl_stmt|;
name|QRegion
name|clipRegion
init|=
name|backWindowRect
decl_stmt|;
name|clipRegion
operator|-=
name|frontWindowRect
expr_stmt|;
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
name|painter
operator|->
name|setClipRegion
argument_list|(
name|clipRegion
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|textColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|backWindowRect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|backWindowRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|backWindowRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|backWindowRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|backWindowRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|textAlphaColor
argument_list|)
expr_stmt|;
specifier|const
name|QPoint
name|points2
index|[
literal|4
index|]
init|=
block|{
name|backWindowRect
operator|.
name|topLeft
argument_list|()
block|,
name|backWindowRect
operator|.
name|topRight
argument_list|()
block|,
name|backWindowRect
operator|.
name|bottomLeft
argument_list|()
block|,
name|backWindowRect
operator|.
name|bottomRight
argument_list|()
block|}
decl_stmt|;
name|painter
operator|->
name|drawPoints
argument_list|(
name|points2
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
block|}
comment|// context help button
if|if
condition|(
name|titleBar
operator|->
name|subControls
operator|&
name|SC_TitleBarContextHelpButton
operator|&&
operator|(
name|titleBar
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowContextHelpButtonHint
operator|)
condition|)
block|{
name|QRect
name|contextHelpButtonRect
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_TitleBar
argument_list|,
name|titleBar
argument_list|,
name|SC_TitleBarContextHelpButton
argument_list|,
name|widget
argument_list|)
decl_stmt|;
if|if
condition|(
name|contextHelpButtonRect
operator|.
name|isValid
argument_list|()
condition|)
block|{
name|bool
name|hover
init|=
operator|(
name|titleBar
operator|->
name|activeSubControls
operator|&
name|SC_TitleBarContextHelpButton
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|state
operator|&
name|State_MouseOver
operator|)
decl_stmt|;
name|bool
name|sunken
init|=
operator|(
name|titleBar
operator|->
name|activeSubControls
operator|&
name|SC_TitleBarContextHelpButton
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|state
operator|&
name|State_Sunken
operator|)
decl_stmt|;
name|qt_fusion_draw_mdibutton
argument_list|(
name|painter
argument_list|,
name|titleBar
argument_list|,
name|contextHelpButtonRect
argument_list|,
name|hover
argument_list|,
name|sunken
argument_list|)
expr_stmt|;
name|QImage
name|image
argument_list|(
name|qt_titlebar_context_help
argument_list|)
decl_stmt|;
name|QColor
name|alpha
init|=
name|textColor
decl_stmt|;
name|alpha
operator|.
name|setAlpha
argument_list|(
literal|128
argument_list|)
expr_stmt|;
name|image
operator|.
name|setColor
argument_list|(
literal|1
argument_list|,
name|textColor
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
name|image
operator|.
name|setColor
argument_list|(
literal|2
argument_list|,
name|alpha
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|SmoothPixmapTransform
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawImage
argument_list|(
name|contextHelpButtonRect
operator|.
name|adjusted
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|,
operator|-
literal|4
argument_list|,
operator|-
literal|4
argument_list|)
argument_list|,
name|image
argument_list|)
expr_stmt|;
block|}
block|}
comment|// shade button
if|if
condition|(
name|titleBar
operator|->
name|subControls
operator|&
name|SC_TitleBarShadeButton
operator|&&
operator|(
name|titleBar
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowShadeButtonHint
operator|)
condition|)
block|{
name|QRect
name|shadeButtonRect
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_TitleBar
argument_list|,
name|titleBar
argument_list|,
name|SC_TitleBarShadeButton
argument_list|,
name|widget
argument_list|)
decl_stmt|;
if|if
condition|(
name|shadeButtonRect
operator|.
name|isValid
argument_list|()
condition|)
block|{
name|bool
name|hover
init|=
operator|(
name|titleBar
operator|->
name|activeSubControls
operator|&
name|SC_TitleBarShadeButton
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|state
operator|&
name|State_MouseOver
operator|)
decl_stmt|;
name|bool
name|sunken
init|=
operator|(
name|titleBar
operator|->
name|activeSubControls
operator|&
name|SC_TitleBarShadeButton
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|state
operator|&
name|State_Sunken
operator|)
decl_stmt|;
name|qt_fusion_draw_mdibutton
argument_list|(
name|painter
argument_list|,
name|titleBar
argument_list|,
name|shadeButtonRect
argument_list|,
name|hover
argument_list|,
name|sunken
argument_list|)
expr_stmt|;
name|QPixmap
name|arrow
init|=
name|colorizedImage
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/fusion_arrow.png"
argument_list|)
argument_list|,
name|textColor
argument_list|)
decl_stmt|;
name|painter
operator|->
name|drawPixmap
argument_list|(
name|shadeButtonRect
operator|.
name|adjusted
argument_list|(
literal|5
argument_list|,
literal|7
argument_list|,
operator|-
literal|5
argument_list|,
operator|-
literal|7
argument_list|)
argument_list|,
name|arrow
argument_list|)
expr_stmt|;
block|}
block|}
comment|// unshade button
if|if
condition|(
name|titleBar
operator|->
name|subControls
operator|&
name|SC_TitleBarUnshadeButton
operator|&&
operator|(
name|titleBar
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowShadeButtonHint
operator|)
condition|)
block|{
name|QRect
name|unshadeButtonRect
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_TitleBar
argument_list|,
name|titleBar
argument_list|,
name|SC_TitleBarUnshadeButton
argument_list|,
name|widget
argument_list|)
decl_stmt|;
if|if
condition|(
name|unshadeButtonRect
operator|.
name|isValid
argument_list|()
condition|)
block|{
name|bool
name|hover
init|=
operator|(
name|titleBar
operator|->
name|activeSubControls
operator|&
name|SC_TitleBarUnshadeButton
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|state
operator|&
name|State_MouseOver
operator|)
decl_stmt|;
name|bool
name|sunken
init|=
operator|(
name|titleBar
operator|->
name|activeSubControls
operator|&
name|SC_TitleBarUnshadeButton
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|state
operator|&
name|State_Sunken
operator|)
decl_stmt|;
name|qt_fusion_draw_mdibutton
argument_list|(
name|painter
argument_list|,
name|titleBar
argument_list|,
name|unshadeButtonRect
argument_list|,
name|hover
argument_list|,
name|sunken
argument_list|)
expr_stmt|;
name|QPixmap
name|arrow
init|=
name|colorizedImage
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/fusion_arrow.png"
argument_list|)
argument_list|,
name|textColor
argument_list|,
literal|180
argument_list|)
decl_stmt|;
name|painter
operator|->
name|drawPixmap
argument_list|(
name|unshadeButtonRect
operator|.
name|adjusted
argument_list|(
literal|5
argument_list|,
literal|7
argument_list|,
operator|-
literal|5
argument_list|,
operator|-
literal|7
argument_list|)
argument_list|,
name|arrow
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
operator|(
name|titleBar
operator|->
name|subControls
operator|&
name|SC_TitleBarSysMenu
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowSystemMenuHint
operator|)
condition|)
block|{
name|QRect
name|iconRect
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_TitleBar
argument_list|,
name|titleBar
argument_list|,
name|SC_TitleBarSysMenu
argument_list|,
name|widget
argument_list|)
decl_stmt|;
if|if
condition|(
name|iconRect
operator|.
name|isValid
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|titleBar
operator|->
name|icon
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|titleBar
operator|->
name|icon
operator|.
name|paint
argument_list|(
name|painter
argument_list|,
name|iconRect
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QStyleOption
name|tool
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|tool
operator|.
name|palette
operator|=
name|titleBar
operator|->
name|palette
expr_stmt|;
name|QPixmap
name|pm
init|=
name|standardIcon
argument_list|(
name|SP_TitleBarMenuButton
argument_list|,
operator|&
name|tool
argument_list|,
name|widget
argument_list|)
operator|.
name|pixmap
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
decl_stmt|;
name|tool
operator|.
name|rect
operator|=
name|iconRect
expr_stmt|;
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawItemPixmap
argument_list|(
name|painter
argument_list|,
name|iconRect
argument_list|,
name|Qt
operator|::
name|AlignCenter
argument_list|,
name|pm
argument_list|)
expr_stmt|;
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
block|}
block|}
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
case|case
name|CC_ScrollBar
case|:
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
if|if
condition|(
specifier|const
name|QStyleOptionSlider
modifier|*
name|scrollBar
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSlider
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|bool
name|horizontal
init|=
name|scrollBar
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
decl_stmt|;
name|bool
name|sunken
init|=
name|scrollBar
operator|->
name|state
operator|&
name|State_Sunken
decl_stmt|;
name|QRect
name|scrollBarSubLine
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|control
argument_list|,
name|scrollBar
argument_list|,
name|SC_ScrollBarSubLine
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|QRect
name|scrollBarAddLine
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|control
argument_list|,
name|scrollBar
argument_list|,
name|SC_ScrollBarAddLine
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|QRect
name|scrollBarSlider
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|control
argument_list|,
name|scrollBar
argument_list|,
name|SC_ScrollBarSlider
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|QRect
name|scrollBarGroove
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|control
argument_list|,
name|scrollBar
argument_list|,
name|SC_ScrollBarGroove
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|QRect
name|rect
init|=
name|option
operator|->
name|rect
decl_stmt|;
name|QColor
name|alphaOutline
init|=
name|outline
decl_stmt|;
name|alphaOutline
operator|.
name|setAlpha
argument_list|(
literal|180
argument_list|)
expr_stmt|;
name|QColor
name|arrowColor
init|=
name|option
operator|->
name|palette
operator|.
name|foreground
argument_list|()
operator|.
name|color
argument_list|()
decl_stmt|;
name|arrowColor
operator|.
name|setAlpha
argument_list|(
literal|220
argument_list|)
expr_stmt|;
comment|// Paint groove
if|if
condition|(
name|scrollBar
operator|->
name|subControls
operator|&
name|SC_ScrollBarGroove
condition|)
block|{
name|QLinearGradient
name|gradient
argument_list|(
name|rect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|rect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|horizontal
condition|)
name|gradient
operator|=
name|QLinearGradient
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
argument_list|,
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|rect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|buttonColor
operator|.
name|darker
argument_list|(
literal|107
argument_list|)
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0.1
argument_list|,
name|buttonColor
operator|.
name|darker
argument_list|(
literal|105
argument_list|)
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0.9
argument_list|,
name|buttonColor
operator|.
name|darker
argument_list|(
literal|105
argument_list|)
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|1
argument_list|,
name|buttonColor
operator|.
name|darker
argument_list|(
literal|107
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|fillRect
argument_list|(
name|option
operator|->
name|rect
argument_list|,
name|gradient
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|alphaOutline
argument_list|)
expr_stmt|;
if|if
condition|(
name|horizontal
condition|)
name|painter
operator|->
name|drawLine
argument_list|(
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|rect
operator|.
name|topRight
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|painter
operator|->
name|drawLine
argument_list|(
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|)
expr_stmt|;
name|QColor
name|subtleEdge
init|=
name|alphaOutline
decl_stmt|;
name|subtleEdge
operator|.
name|setAlpha
argument_list|(
literal|40
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|Qt
operator|::
name|NoBrush
argument_list|)
expr_stmt|;
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
name|painter
operator|->
name|setClipRect
argument_list|(
name|scrollBarGroove
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|scrollBarGroove
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
name|QRect
name|pixmapRect
init|=
name|scrollBarSlider
decl_stmt|;
name|QLinearGradient
name|gradient
argument_list|(
name|pixmapRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|top
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|bottom
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|horizontal
condition|)
name|gradient
operator|=
name|QLinearGradient
argument_list|(
name|pixmapRect
operator|.
name|left
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|right
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
argument_list|)
expr_stmt|;
name|QLinearGradient
name|highlightedGradient
init|=
name|gradient
decl_stmt|;
name|QColor
name|midColor2
init|=
name|mergedColors
argument_list|(
name|gradientStartColor
argument_list|,
name|gradientStopColor
argument_list|,
literal|40
argument_list|)
decl_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|d
operator|->
name|buttonColor
argument_list|(
name|option
operator|->
name|palette
argument_list|)
operator|.
name|lighter
argument_list|(
literal|108
argument_list|)
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|1
argument_list|,
name|d
operator|->
name|buttonColor
argument_list|(
name|option
operator|->
name|palette
argument_list|)
argument_list|)
expr_stmt|;
name|highlightedGradient
operator|.
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|gradientStartColor
operator|.
name|darker
argument_list|(
literal|102
argument_list|)
argument_list|)
expr_stmt|;
name|highlightedGradient
operator|.
name|setColorAt
argument_list|(
literal|1
argument_list|,
name|gradientStopColor
operator|.
name|lighter
argument_list|(
literal|102
argument_list|)
argument_list|)
expr_stmt|;
comment|// Paint slider
if|if
condition|(
name|scrollBar
operator|->
name|subControls
operator|&
name|SC_ScrollBarSlider
condition|)
block|{
name|QRect
name|pixmapRect
init|=
name|scrollBarSlider
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|alphaOutline
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|State_Sunken
operator|&&
name|scrollBar
operator|->
name|activeSubControls
operator|&
name|SC_ScrollBarSlider
condition|)
name|painter
operator|->
name|setBrush
argument_list|(
name|midColor2
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|State_MouseOver
operator|&&
name|scrollBar
operator|->
name|activeSubControls
operator|&
name|SC_ScrollBarSlider
condition|)
name|painter
operator|->
name|setBrush
argument_list|(
name|highlightedGradient
argument_list|)
expr_stmt|;
else|else
name|painter
operator|->
name|setBrush
argument_list|(
name|gradient
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|pixmapRect
operator|.
name|adjusted
argument_list|(
name|horizontal
condition|?
operator|-
literal|1
else|:
literal|0
argument_list|,
name|horizontal
condition|?
literal|0
else|:
operator|-
literal|1
argument_list|,
name|horizontal
condition|?
literal|0
else|:
literal|1
argument_list|,
name|horizontal
condition|?
literal|1
else|:
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|d
operator|->
name|innerContrastLine
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|scrollBarSlider
operator|.
name|adjusted
argument_list|(
name|horizontal
condition|?
literal|0
else|:
literal|1
argument_list|,
name|horizontal
condition|?
literal|1
else|:
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// Outer shadow
comment|//                  painter->setPen(subtleEdge);
comment|//                  if (horizontal) {
comment|////                    painter->drawLine(scrollBarSlider.topLeft() + QPoint(-2, 0), scrollBarSlider.bottomLeft() + QPoint(2, 0));
comment|////                    painter->drawLine(scrollBarSlider.topRight() + QPoint(-2, 0), scrollBarSlider.bottomRight() + QPoint(2, 0));
comment|//                  } else {
comment|////                    painter->drawLine(pixmapRect.topLeft() + QPoint(0, -2), pixmapRect.bottomLeft() + QPoint(0, -2));
comment|////                    painter->drawLine(pixmapRect.topRight() + QPoint(0, 2), pixmapRect.bottomRight() + QPoint(0, 2));
comment|//                  }
block|}
comment|// The SubLine (up/left) buttons
if|if
condition|(
name|scrollBar
operator|->
name|subControls
operator|&
name|SC_ScrollBarSubLine
condition|)
block|{
if|if
condition|(
operator|(
name|scrollBar
operator|->
name|activeSubControls
operator|&
name|SC_ScrollBarSubLine
operator|)
operator|&&
name|sunken
condition|)
name|painter
operator|->
name|setBrush
argument_list|(
name|gradientStopColor
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
operator|(
name|scrollBar
operator|->
name|activeSubControls
operator|&
name|SC_ScrollBarSubLine
operator|)
condition|)
name|painter
operator|->
name|setBrush
argument_list|(
name|highlightedGradient
argument_list|)
expr_stmt|;
else|else
name|painter
operator|->
name|setBrush
argument_list|(
name|gradient
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|scrollBarSubLine
operator|.
name|adjusted
argument_list|(
name|horizontal
condition|?
literal|0
else|:
literal|1
argument_list|,
name|horizontal
condition|?
literal|1
else|:
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|alphaOutline
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|State_Horizontal
condition|)
block|{
if|if
condition|(
name|option
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
condition|)
block|{
name|pixmapRect
operator|.
name|setLeft
argument_list|(
name|scrollBarSubLine
operator|.
name|left
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|pixmapRect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|bottomLeft
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|pixmapRect
operator|.
name|setRight
argument_list|(
name|scrollBarSubLine
operator|.
name|right
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|pixmapRect
operator|.
name|topRight
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|bottomRight
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|pixmapRect
operator|.
name|setBottom
argument_list|(
name|scrollBarSubLine
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|pixmapRect
operator|.
name|bottomLeft
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|bottomRight
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|setBrush
argument_list|(
name|Qt
operator|::
name|NoBrush
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|d
operator|->
name|innerContrastLine
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|scrollBarSubLine
operator|.
name|adjusted
argument_list|(
name|horizontal
condition|?
literal|0
else|:
literal|1
argument_list|,
name|horizontal
condition|?
literal|1
else|:
literal|0
argument_list|,
name|horizontal
condition|?
operator|-
literal|2
else|:
operator|-
literal|1
argument_list|,
name|horizontal
condition|?
operator|-
literal|1
else|:
operator|-
literal|2
argument_list|)
argument_list|)
expr_stmt|;
comment|// Arrows
name|int
name|rotation
init|=
literal|0
decl_stmt|;
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|State_Horizontal
condition|)
name|rotation
operator|=
name|option
operator|->
name|direction
operator|==
name|Qt
operator|::
name|LeftToRight
condition|?
operator|-
literal|90
else|:
literal|90
expr_stmt|;
name|QRect
name|upRect
init|=
name|scrollBarSubLine
operator|.
name|translated
argument_list|(
name|horizontal
condition|?
operator|-
literal|2
else|:
operator|-
literal|1
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QPixmap
name|arrowPixmap
init|=
name|colorizedImage
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/fusion_arrow.png"
argument_list|)
argument_list|,
name|arrowColor
argument_list|,
name|rotation
argument_list|)
decl_stmt|;
name|painter
operator|->
name|drawPixmap
argument_list|(
name|QRectF
argument_list|(
name|upRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|-
name|arrowPixmap
operator|.
name|width
argument_list|()
operator|/
literal|4.0
operator|+
literal|2.0
argument_list|,
name|upRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|-
name|arrowPixmap
operator|.
name|height
argument_list|()
operator|/
literal|4.0
operator|+
literal|1.0
argument_list|,
name|arrowPixmap
operator|.
name|width
argument_list|()
operator|/
literal|2.0
argument_list|,
name|arrowPixmap
operator|.
name|height
argument_list|()
operator|/
literal|2.0
argument_list|)
argument_list|,
name|arrowPixmap
argument_list|,
name|QRectF
argument_list|(
name|QPoint
argument_list|(
literal|0.0
argument_list|,
literal|0.0
argument_list|)
argument_list|,
name|arrowPixmap
operator|.
name|size
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// The AddLine (down/right) button
if|if
condition|(
name|scrollBar
operator|->
name|subControls
operator|&
name|SC_ScrollBarAddLine
condition|)
block|{
if|if
condition|(
operator|(
name|scrollBar
operator|->
name|activeSubControls
operator|&
name|SC_ScrollBarAddLine
operator|)
operator|&&
name|sunken
condition|)
name|painter
operator|->
name|setBrush
argument_list|(
name|gradientStopColor
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
operator|(
name|scrollBar
operator|->
name|activeSubControls
operator|&
name|SC_ScrollBarAddLine
operator|)
condition|)
name|painter
operator|->
name|setBrush
argument_list|(
name|midColor2
argument_list|)
expr_stmt|;
else|else
name|painter
operator|->
name|setBrush
argument_list|(
name|gradient
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|scrollBarAddLine
operator|.
name|adjusted
argument_list|(
name|horizontal
condition|?
literal|0
else|:
literal|1
argument_list|,
name|horizontal
condition|?
literal|1
else|:
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|alphaOutline
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|State_Horizontal
condition|)
block|{
if|if
condition|(
name|option
operator|->
name|direction
operator|==
name|Qt
operator|::
name|LeftToRight
condition|)
block|{
name|pixmapRect
operator|.
name|setLeft
argument_list|(
name|scrollBarAddLine
operator|.
name|left
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|pixmapRect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|bottomLeft
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|pixmapRect
operator|.
name|setRight
argument_list|(
name|scrollBarAddLine
operator|.
name|right
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|pixmapRect
operator|.
name|topRight
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|bottomRight
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|pixmapRect
operator|.
name|setTop
argument_list|(
name|scrollBarAddLine
operator|.
name|top
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|pixmapRect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|topRight
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|setPen
argument_list|(
name|d
operator|->
name|innerContrastLine
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|Qt
operator|::
name|NoBrush
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|scrollBarAddLine
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|rotation
init|=
literal|180
decl_stmt|;
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|State_Horizontal
condition|)
name|rotation
operator|=
name|option
operator|->
name|direction
operator|==
name|Qt
operator|::
name|LeftToRight
condition|?
literal|90
else|:
operator|-
literal|90
expr_stmt|;
name|QRect
name|downRect
init|=
name|scrollBarAddLine
operator|.
name|translated
argument_list|(
operator|-
literal|1
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|QPixmap
name|arrowPixmap
init|=
name|colorizedImage
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/fusion_arrow.png"
argument_list|)
argument_list|,
name|arrowColor
argument_list|,
name|rotation
argument_list|)
decl_stmt|;
name|painter
operator|->
name|drawPixmap
argument_list|(
name|QRectF
argument_list|(
name|downRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|-
name|arrowPixmap
operator|.
name|width
argument_list|()
operator|/
literal|4.0
operator|+
literal|2.0
argument_list|,
name|downRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|-
name|arrowPixmap
operator|.
name|height
argument_list|()
operator|/
literal|4.0
argument_list|,
name|arrowPixmap
operator|.
name|width
argument_list|()
operator|/
literal|2.0
argument_list|,
name|arrowPixmap
operator|.
name|height
argument_list|()
operator|/
literal|2.0
argument_list|)
argument_list|,
name|arrowPixmap
argument_list|,
name|QRectF
argument_list|(
name|QPoint
argument_list|(
literal|0.0
argument_list|,
literal|0.0
argument_list|)
argument_list|,
name|arrowPixmap
operator|.
name|size
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
empty_stmt|;
case|case
name|CC_ComboBox
case|:
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
if|if
condition|(
specifier|const
name|QStyleOptionComboBox
modifier|*
name|comboBox
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionComboBox
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|bool
name|hasFocus
init|=
name|option
operator|->
name|state
operator|&
name|State_HasFocus
operator|&&
name|option
operator|->
name|state
operator|&
name|State_KeyboardFocusChange
decl_stmt|;
name|bool
name|sunken
init|=
name|comboBox
operator|->
name|state
operator|&
name|State_On
decl_stmt|;
comment|// play dead, if combobox has no items
name|bool
name|isEnabled
init|=
operator|(
name|comboBox
operator|->
name|state
operator|&
name|State_Enabled
operator|)
decl_stmt|;
name|QPixmap
name|cache
decl_stmt|;
name|QString
name|pixmapName
init|=
name|QStyleHelper
operator|::
name|uniqueName
argument_list|(
name|QLatin1String
argument_list|(
literal|"combobox"
argument_list|)
argument_list|,
name|option
argument_list|,
name|comboBox
operator|->
name|rect
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|sunken
condition|)
name|pixmapName
operator|+=
name|QLatin1String
argument_list|(
literal|"-sunken"
argument_list|)
expr_stmt|;
if|if
condition|(
name|comboBox
operator|->
name|editable
condition|)
name|pixmapName
operator|+=
name|QLatin1String
argument_list|(
literal|"-editable"
argument_list|)
expr_stmt|;
if|if
condition|(
name|isEnabled
condition|)
name|pixmapName
operator|+=
name|QLatin1String
argument_list|(
literal|"-enabled"
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|QPixmapCache
operator|::
name|find
argument_list|(
name|pixmapName
argument_list|,
name|cache
argument_list|)
condition|)
block|{
name|cache
operator|=
name|styleCachePixmap
argument_list|(
name|comboBox
operator|->
name|rect
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|cache
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|transparent
argument_list|)
expr_stmt|;
name|QPainter
name|cachePainter
argument_list|(
operator|&
name|cache
argument_list|)
decl_stmt|;
name|QRect
name|pixmapRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|comboBox
operator|->
name|rect
operator|.
name|width
argument_list|()
argument_list|,
name|comboBox
operator|->
name|rect
operator|.
name|height
argument_list|()
argument_list|)
decl_stmt|;
name|QStyleOptionComboBox
name|comboBoxCopy
init|=
operator|*
name|comboBox
decl_stmt|;
name|comboBoxCopy
operator|.
name|rect
operator|=
name|pixmapRect
expr_stmt|;
name|QRect
name|rect
init|=
name|pixmapRect
decl_stmt|;
name|QRect
name|downArrowRect
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_ComboBox
argument_list|,
operator|&
name|comboBoxCopy
argument_list|,
name|SC_ComboBoxArrow
argument_list|,
name|widget
argument_list|)
decl_stmt|;
comment|// Draw a line edit
if|if
condition|(
name|comboBox
operator|->
name|editable
condition|)
block|{
name|QStyleOptionFrame
name|buttonOption
decl_stmt|;
name|buttonOption
operator|.
name|QStyleOption
operator|::
name|operator
name|=
argument_list|(
operator|*
name|comboBox
argument_list|)
expr_stmt|;
name|buttonOption
operator|.
name|rect
operator|=
name|rect
expr_stmt|;
name|buttonOption
operator|.
name|state
operator|=
operator|(
name|comboBox
operator|->
name|state
operator|&
operator|(
name|State_Enabled
operator||
name|State_MouseOver
operator||
name|State_HasFocus
operator|)
operator|)
operator||
name|State_KeyboardFocusChange
expr_stmt|;
comment|// Always show hig
if|if
condition|(
name|sunken
condition|)
block|{
name|buttonOption
operator|.
name|state
operator||=
name|State_Sunken
expr_stmt|;
name|buttonOption
operator|.
name|state
operator|&=
operator|~
name|State_MouseOver
expr_stmt|;
block|}
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_FrameLineEdit
argument_list|,
operator|&
name|buttonOption
argument_list|,
operator|&
name|cachePainter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
comment|// Draw button clipped
name|cachePainter
operator|.
name|save
argument_list|()
expr_stmt|;
name|cachePainter
operator|.
name|setClipRect
argument_list|(
name|downArrowRect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|buttonOption
operator|.
name|rect
operator|.
name|setLeft
argument_list|(
name|comboBox
operator|->
name|direction
operator|==
name|Qt
operator|::
name|LeftToRight
condition|?
name|downArrowRect
operator|.
name|left
argument_list|()
operator|-
literal|6
else|:
name|downArrowRect
operator|.
name|right
argument_list|()
operator|+
literal|6
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_PanelButtonCommand
argument_list|,
operator|&
name|buttonOption
argument_list|,
operator|&
name|cachePainter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|restore
argument_list|()
expr_stmt|;
name|cachePainter
operator|.
name|setPen
argument_list|(
name|QPen
argument_list|(
name|hasFocus
condition|?
name|option
operator|->
name|palette
operator|.
name|highlight
argument_list|()
else|:
name|outline
operator|.
name|lighter
argument_list|(
literal|110
argument_list|)
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|sunken
condition|)
block|{
name|int
name|borderSize
init|=
literal|1
decl_stmt|;
if|if
condition|(
name|comboBox
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
condition|)
block|{
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|downArrowRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|downArrowRect
operator|.
name|top
argument_list|()
operator|+
name|borderSize
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|downArrowRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|downArrowRect
operator|.
name|bottom
argument_list|()
operator|-
name|borderSize
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|downArrowRect
operator|.
name|left
argument_list|()
argument_list|,
name|downArrowRect
operator|.
name|top
argument_list|()
operator|+
name|borderSize
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|downArrowRect
operator|.
name|left
argument_list|()
argument_list|,
name|downArrowRect
operator|.
name|bottom
argument_list|()
operator|-
name|borderSize
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
name|comboBox
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
condition|)
block|{
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|downArrowRect
operator|.
name|right
argument_list|()
argument_list|,
name|downArrowRect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|downArrowRect
operator|.
name|right
argument_list|()
argument_list|,
name|downArrowRect
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|downArrowRect
operator|.
name|left
argument_list|()
argument_list|,
name|downArrowRect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|downArrowRect
operator|.
name|left
argument_list|()
argument_list|,
name|downArrowRect
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
else|else
block|{
name|QStyleOptionButton
name|buttonOption
decl_stmt|;
name|buttonOption
operator|.
name|QStyleOption
operator|::
name|operator
name|=
argument_list|(
operator|*
name|comboBox
argument_list|)
expr_stmt|;
name|buttonOption
operator|.
name|rect
operator|=
name|rect
expr_stmt|;
name|buttonOption
operator|.
name|state
operator|=
name|comboBox
operator|->
name|state
operator|&
operator|(
name|State_Enabled
operator||
name|State_MouseOver
operator||
name|State_HasFocus
operator||
name|State_KeyboardFocusChange
operator|)
expr_stmt|;
if|if
condition|(
name|sunken
condition|)
block|{
name|buttonOption
operator|.
name|state
operator||=
name|State_Sunken
expr_stmt|;
name|buttonOption
operator|.
name|state
operator|&=
operator|~
name|State_MouseOver
expr_stmt|;
block|}
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_PanelButtonCommand
argument_list|,
operator|&
name|buttonOption
argument_list|,
operator|&
name|cachePainter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|comboBox
operator|->
name|subControls
operator|&
name|SC_ComboBoxArrow
condition|)
block|{
comment|// Draw the up/down arrow
name|QColor
name|arrowColor
init|=
name|option
operator|->
name|palette
operator|.
name|buttonText
argument_list|()
operator|.
name|color
argument_list|()
decl_stmt|;
name|arrowColor
operator|.
name|setAlpha
argument_list|(
literal|220
argument_list|)
expr_stmt|;
name|QPixmap
name|downArrow
init|=
name|colorizedImage
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/styles/commonstyle/images/fusion_arrow.png"
argument_list|)
argument_list|,
name|arrowColor
argument_list|,
literal|180
argument_list|)
decl_stmt|;
name|cachePainter
operator|.
name|drawPixmap
argument_list|(
name|QRectF
argument_list|(
name|downArrowRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|-
name|downArrow
operator|.
name|width
argument_list|()
operator|/
literal|4.0
operator|+
literal|1.0
argument_list|,
name|downArrowRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|-
name|downArrow
operator|.
name|height
argument_list|()
operator|/
literal|4.0
operator|+
literal|1.0
argument_list|,
name|downArrow
operator|.
name|width
argument_list|()
operator|/
literal|2.0
argument_list|,
name|downArrow
operator|.
name|height
argument_list|()
operator|/
literal|2.0
argument_list|)
argument_list|,
name|downArrow
argument_list|,
name|QRectF
argument_list|(
name|QPointF
argument_list|(
literal|0.0
argument_list|,
literal|0.0
argument_list|)
argument_list|,
name|downArrow
operator|.
name|size
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|cachePainter
operator|.
name|end
argument_list|()
expr_stmt|;
name|QPixmapCache
operator|::
name|insert
argument_list|(
name|pixmapName
argument_list|,
name|cache
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|drawPixmap
argument_list|(
name|comboBox
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|cache
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
case|case
name|CC_Slider
case|:
if|if
condition|(
specifier|const
name|QStyleOptionSlider
modifier|*
name|slider
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSlider
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|QRect
name|groove
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_Slider
argument_list|,
name|option
argument_list|,
name|SC_SliderGroove
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|QRect
name|handle
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_Slider
argument_list|,
name|option
argument_list|,
name|SC_SliderHandle
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|bool
name|horizontal
init|=
name|slider
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
decl_stmt|;
name|bool
name|ticksAbove
init|=
name|slider
operator|->
name|tickPosition
operator|&
name|QSlider
operator|::
name|TicksAbove
decl_stmt|;
name|bool
name|ticksBelow
init|=
name|slider
operator|->
name|tickPosition
operator|&
name|QSlider
operator|::
name|TicksBelow
decl_stmt|;
name|QColor
name|activeHighlight
init|=
name|d
operator|->
name|highlight
argument_list|(
name|option
operator|->
name|palette
argument_list|)
decl_stmt|;
name|QPixmap
name|cache
decl_stmt|;
name|QBrush
name|oldBrush
init|=
name|painter
operator|->
name|brush
argument_list|()
decl_stmt|;
name|QPen
name|oldPen
init|=
name|painter
operator|->
name|pen
argument_list|()
decl_stmt|;
name|QColor
name|shadowAlpha
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
decl_stmt|;
name|shadowAlpha
operator|.
name|setAlpha
argument_list|(
literal|10
argument_list|)
expr_stmt|;
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|State_HasFocus
operator|&&
name|option
operator|->
name|state
operator|&
name|State_KeyboardFocusChange
condition|)
name|outline
operator|=
name|d
operator|->
name|highlightedOutline
argument_list|(
name|option
operator|->
name|palette
argument_list|)
expr_stmt|;
if|if
condition|(
operator|(
name|option
operator|->
name|subControls
operator|&
name|SC_SliderGroove
operator|)
operator|&&
name|groove
operator|.
name|isValid
argument_list|()
condition|)
block|{
name|QColor
name|grooveColor
decl_stmt|;
name|grooveColor
operator|.
name|setHsv
argument_list|(
name|buttonColor
operator|.
name|hue
argument_list|()
argument_list|,
name|qMin
argument_list|(
literal|255
argument_list|,
call|(
name|int
call|)
argument_list|(
name|buttonColor
operator|.
name|saturation
argument_list|()
argument_list|)
argument_list|)
argument_list|,
name|qMin
argument_list|(
literal|255
argument_list|,
call|(
name|int
call|)
argument_list|(
name|buttonColor
operator|.
name|value
argument_list|()
operator|*
literal|0.9
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QString
name|groovePixmapName
init|=
name|QStyleHelper
operator|::
name|uniqueName
argument_list|(
name|QLatin1String
argument_list|(
literal|"slider_groove"
argument_list|)
argument_list|,
name|option
argument_list|,
name|groove
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
name|QRect
name|pixmapRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|groove
operator|.
name|width
argument_list|()
argument_list|,
name|groove
operator|.
name|height
argument_list|()
argument_list|)
decl_stmt|;
comment|// draw background groove
if|if
condition|(
operator|!
name|QPixmapCache
operator|::
name|find
argument_list|(
name|groovePixmapName
argument_list|,
name|cache
argument_list|)
condition|)
block|{
name|cache
operator|=
name|styleCachePixmap
argument_list|(
name|pixmapRect
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|cache
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|transparent
argument_list|)
expr_stmt|;
name|QPainter
name|groovePainter
argument_list|(
operator|&
name|cache
argument_list|)
decl_stmt|;
name|groovePainter
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|groovePainter
operator|.
name|translate
argument_list|(
literal|0.5
argument_list|,
literal|0.5
argument_list|)
expr_stmt|;
name|QLinearGradient
name|gradient
decl_stmt|;
if|if
condition|(
name|horizontal
condition|)
block|{
name|gradient
operator|.
name|setStart
argument_list|(
name|pixmapRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|top
argument_list|()
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setFinalStop
argument_list|(
name|pixmapRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|gradient
operator|.
name|setStart
argument_list|(
name|pixmapRect
operator|.
name|left
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setFinalStop
argument_list|(
name|pixmapRect
operator|.
name|right
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|groovePainter
operator|.
name|setPen
argument_list|(
name|QPen
argument_list|(
name|outline
argument_list|)
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|grooveColor
operator|.
name|darker
argument_list|(
literal|110
argument_list|)
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|1
argument_list|,
name|grooveColor
operator|.
name|lighter
argument_list|(
literal|110
argument_list|)
argument_list|)
expr_stmt|;
comment|//palette.button().color().darker(115));
name|groovePainter
operator|.
name|setBrush
argument_list|(
name|gradient
argument_list|)
expr_stmt|;
name|groovePainter
operator|.
name|drawRoundedRect
argument_list|(
name|pixmapRect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|2
argument_list|,
operator|-
literal|2
argument_list|)
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|groovePainter
operator|.
name|end
argument_list|()
expr_stmt|;
name|QPixmapCache
operator|::
name|insert
argument_list|(
name|groovePixmapName
argument_list|,
name|cache
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|drawPixmap
argument_list|(
name|groove
operator|.
name|topLeft
argument_list|()
argument_list|,
name|cache
argument_list|)
expr_stmt|;
comment|// draw blue groove highlight
name|QRect
name|clipRect
decl_stmt|;
name|groovePixmapName
operator|+=
name|QLatin1String
argument_list|(
literal|"_blue"
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|QPixmapCache
operator|::
name|find
argument_list|(
name|groovePixmapName
argument_list|,
name|cache
argument_list|)
condition|)
block|{
name|cache
operator|=
name|styleCachePixmap
argument_list|(
name|pixmapRect
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|cache
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|transparent
argument_list|)
expr_stmt|;
name|QPainter
name|groovePainter
argument_list|(
operator|&
name|cache
argument_list|)
decl_stmt|;
name|QLinearGradient
name|gradient
decl_stmt|;
if|if
condition|(
name|horizontal
condition|)
block|{
name|gradient
operator|.
name|setStart
argument_list|(
name|pixmapRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|top
argument_list|()
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setFinalStop
argument_list|(
name|pixmapRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|gradient
operator|.
name|setStart
argument_list|(
name|pixmapRect
operator|.
name|left
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setFinalStop
argument_list|(
name|pixmapRect
operator|.
name|right
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|QColor
name|highlight
init|=
name|d
operator|->
name|highlight
argument_list|(
name|option
operator|->
name|palette
argument_list|)
decl_stmt|;
name|QColor
name|highlightedoutline
init|=
name|highlight
operator|.
name|darker
argument_list|(
literal|140
argument_list|)
decl_stmt|;
if|if
condition|(
name|qGray
argument_list|(
name|outline
operator|.
name|rgb
argument_list|()
argument_list|)
operator|>
name|qGray
argument_list|(
name|highlightedoutline
operator|.
name|rgb
argument_list|()
argument_list|)
condition|)
name|outline
operator|=
name|highlightedoutline
expr_stmt|;
name|groovePainter
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|groovePainter
operator|.
name|translate
argument_list|(
literal|0.5
argument_list|,
literal|0.5
argument_list|)
expr_stmt|;
name|groovePainter
operator|.
name|setPen
argument_list|(
name|QPen
argument_list|(
name|outline
argument_list|)
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|activeHighlight
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|1
argument_list|,
name|activeHighlight
operator|.
name|lighter
argument_list|(
literal|130
argument_list|)
argument_list|)
expr_stmt|;
name|groovePainter
operator|.
name|setBrush
argument_list|(
name|gradient
argument_list|)
expr_stmt|;
name|groovePainter
operator|.
name|drawRoundedRect
argument_list|(
name|pixmapRect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|2
argument_list|,
operator|-
literal|2
argument_list|)
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|groovePainter
operator|.
name|setPen
argument_list|(
name|d
operator|->
name|innerContrastLine
argument_list|()
argument_list|)
expr_stmt|;
name|groovePainter
operator|.
name|setBrush
argument_list|(
name|Qt
operator|::
name|NoBrush
argument_list|)
expr_stmt|;
name|groovePainter
operator|.
name|drawRoundedRect
argument_list|(
name|pixmapRect
operator|.
name|adjusted
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
operator|-
literal|3
argument_list|,
operator|-
literal|3
argument_list|)
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|groovePainter
operator|.
name|end
argument_list|()
expr_stmt|;
name|QPixmapCache
operator|::
name|insert
argument_list|(
name|groovePixmapName
argument_list|,
name|cache
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|horizontal
condition|)
block|{
if|if
condition|(
name|slider
operator|->
name|upsideDown
condition|)
name|clipRect
operator|=
name|QRect
argument_list|(
name|handle
operator|.
name|right
argument_list|()
argument_list|,
name|groove
operator|.
name|top
argument_list|()
argument_list|,
name|groove
operator|.
name|right
argument_list|()
operator|-
name|handle
operator|.
name|right
argument_list|()
argument_list|,
name|groove
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|clipRect
operator|=
name|QRect
argument_list|(
name|groove
operator|.
name|left
argument_list|()
argument_list|,
name|groove
operator|.
name|top
argument_list|()
argument_list|,
name|handle
operator|.
name|left
argument_list|()
argument_list|,
name|groove
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|slider
operator|->
name|upsideDown
condition|)
name|clipRect
operator|=
name|QRect
argument_list|(
name|groove
operator|.
name|left
argument_list|()
argument_list|,
name|handle
operator|.
name|bottom
argument_list|()
argument_list|,
name|groove
operator|.
name|width
argument_list|()
argument_list|,
name|groove
operator|.
name|height
argument_list|()
operator|-
name|handle
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|clipRect
operator|=
name|QRect
argument_list|(
name|groove
operator|.
name|left
argument_list|()
argument_list|,
name|groove
operator|.
name|top
argument_list|()
argument_list|,
name|groove
operator|.
name|width
argument_list|()
argument_list|,
name|handle
operator|.
name|top
argument_list|()
operator|-
name|groove
operator|.
name|top
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
name|painter
operator|->
name|setClipRect
argument_list|(
name|clipRect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPixmap
argument_list|(
name|groove
operator|.
name|topLeft
argument_list|()
argument_list|,
name|cache
argument_list|)
expr_stmt|;
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|option
operator|->
name|subControls
operator|&
name|SC_SliderTickmarks
condition|)
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|outline
argument_list|)
expr_stmt|;
name|int
name|tickSize
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_SliderTickmarkOffset
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|int
name|available
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_SliderSpaceAvailable
argument_list|,
name|slider
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|int
name|interval
init|=
name|slider
operator|->
name|tickInterval
decl_stmt|;
if|if
condition|(
name|interval
operator|<=
literal|0
condition|)
block|{
name|interval
operator|=
name|slider
operator|->
name|singleStep
expr_stmt|;
if|if
condition|(
name|QStyle
operator|::
name|sliderPositionFromValue
argument_list|(
name|slider
operator|->
name|minimum
argument_list|,
name|slider
operator|->
name|maximum
argument_list|,
name|interval
argument_list|,
name|available
argument_list|)
operator|-
name|QStyle
operator|::
name|sliderPositionFromValue
argument_list|(
name|slider
operator|->
name|minimum
argument_list|,
name|slider
operator|->
name|maximum
argument_list|,
literal|0
argument_list|,
name|available
argument_list|)
operator|<
literal|3
condition|)
name|interval
operator|=
name|slider
operator|->
name|pageStep
expr_stmt|;
block|}
if|if
condition|(
name|interval
operator|<=
literal|0
condition|)
name|interval
operator|=
literal|1
expr_stmt|;
name|int
name|v
init|=
name|slider
operator|->
name|minimum
decl_stmt|;
name|int
name|len
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_SliderLength
argument_list|,
name|slider
argument_list|,
name|widget
argument_list|)
decl_stmt|;
while|while
condition|(
name|v
operator|<=
name|slider
operator|->
name|maximum
operator|+
literal|1
condition|)
block|{
if|if
condition|(
name|v
operator|==
name|slider
operator|->
name|maximum
operator|+
literal|1
operator|&&
name|interval
operator|==
literal|1
condition|)
break|break;
specifier|const
name|int
name|v_
init|=
name|qMin
argument_list|(
name|v
argument_list|,
name|slider
operator|->
name|maximum
argument_list|)
decl_stmt|;
name|int
name|pos
init|=
name|sliderPositionFromValue
argument_list|(
name|slider
operator|->
name|minimum
argument_list|,
name|slider
operator|->
name|maximum
argument_list|,
name|v_
argument_list|,
operator|(
name|horizontal
condition|?
name|slider
operator|->
name|rect
operator|.
name|width
argument_list|()
else|:
name|slider
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|)
operator|-
name|len
argument_list|,
name|slider
operator|->
name|upsideDown
argument_list|)
operator|+
name|len
operator|/
literal|2
decl_stmt|;
name|int
name|extra
init|=
literal|2
operator|-
operator|(
operator|(
name|v_
operator|==
name|slider
operator|->
name|minimum
operator|||
name|v_
operator|==
name|slider
operator|->
name|maximum
operator|)
condition|?
literal|1
else|:
literal|0
operator|)
decl_stmt|;
if|if
condition|(
name|horizontal
condition|)
block|{
if|if
condition|(
name|ticksAbove
condition|)
block|{
name|painter
operator|->
name|drawLine
argument_list|(
name|pos
argument_list|,
name|slider
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
name|extra
argument_list|,
name|pos
argument_list|,
name|slider
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
name|tickSize
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|ticksBelow
condition|)
block|{
name|painter
operator|->
name|drawLine
argument_list|(
name|pos
argument_list|,
name|slider
operator|->
name|rect
operator|.
name|bottom
argument_list|()
operator|-
name|extra
argument_list|,
name|pos
argument_list|,
name|slider
operator|->
name|rect
operator|.
name|bottom
argument_list|()
operator|-
name|tickSize
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
name|ticksAbove
condition|)
block|{
name|painter
operator|->
name|drawLine
argument_list|(
name|slider
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
name|extra
argument_list|,
name|pos
argument_list|,
name|slider
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
name|tickSize
argument_list|,
name|pos
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|ticksBelow
condition|)
block|{
name|painter
operator|->
name|drawLine
argument_list|(
name|slider
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
name|extra
argument_list|,
name|pos
argument_list|,
name|slider
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
name|tickSize
argument_list|,
name|pos
argument_list|)
expr_stmt|;
block|}
block|}
comment|// in the case where maximum is max int
name|int
name|nextInterval
init|=
name|v
operator|+
name|interval
decl_stmt|;
if|if
condition|(
name|nextInterval
operator|<
name|v
condition|)
break|break;
name|v
operator|=
name|nextInterval
expr_stmt|;
block|}
block|}
comment|// draw handle
if|if
condition|(
operator|(
name|option
operator|->
name|subControls
operator|&
name|SC_SliderHandle
operator|)
condition|)
block|{
name|QString
name|handlePixmapName
init|=
name|QStyleHelper
operator|::
name|uniqueName
argument_list|(
name|QLatin1String
argument_list|(
literal|"slider_handle"
argument_list|)
argument_list|,
name|option
argument_list|,
name|handle
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|QPixmapCache
operator|::
name|find
argument_list|(
name|handlePixmapName
argument_list|,
name|cache
argument_list|)
condition|)
block|{
name|cache
operator|=
name|styleCachePixmap
argument_list|(
name|handle
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|cache
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|transparent
argument_list|)
expr_stmt|;
name|QRect
name|pixmapRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|handle
operator|.
name|width
argument_list|()
argument_list|,
name|handle
operator|.
name|height
argument_list|()
argument_list|)
decl_stmt|;
name|QPainter
name|handlePainter
argument_list|(
operator|&
name|cache
argument_list|)
decl_stmt|;
name|QRect
name|gradRect
init|=
name|pixmapRect
operator|.
name|adjusted
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
operator|-
literal|2
argument_list|,
operator|-
literal|2
argument_list|)
decl_stmt|;
comment|// gradient fill
name|QRect
name|r
init|=
name|pixmapRect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|2
argument_list|,
operator|-
literal|2
argument_list|)
decl_stmt|;
name|QLinearGradient
name|gradient
init|=
name|qt_fusion_gradient
argument_list|(
name|gradRect
argument_list|,
name|d
operator|->
name|buttonColor
argument_list|(
name|option
operator|->
name|palette
argument_list|)
argument_list|,
name|horizontal
condition|?
name|TopDown
else|:
name|FromLeft
argument_list|)
decl_stmt|;
name|handlePainter
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|handlePainter
operator|.
name|translate
argument_list|(
literal|0.5
argument_list|,
literal|0.5
argument_list|)
expr_stmt|;
name|handlePainter
operator|.
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|handlePainter
operator|.
name|setBrush
argument_list|(
name|QColor
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|40
argument_list|)
argument_list|)
expr_stmt|;
name|handlePainter
operator|.
name|drawRect
argument_list|(
name|r
operator|.
name|adjusted
argument_list|(
operator|-
literal|1
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|,
operator|-
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|handlePainter
operator|.
name|setPen
argument_list|(
name|QPen
argument_list|(
name|d
operator|->
name|outline
argument_list|(
name|option
operator|->
name|palette
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|State_HasFocus
operator|&&
name|option
operator|->
name|state
operator|&
name|State_KeyboardFocusChange
condition|)
name|handlePainter
operator|.
name|setPen
argument_list|(
name|QPen
argument_list|(
name|d
operator|->
name|highlightedOutline
argument_list|(
name|option
operator|->
name|palette
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|handlePainter
operator|.
name|setBrush
argument_list|(
name|gradient
argument_list|)
expr_stmt|;
name|handlePainter
operator|.
name|drawRoundedRect
argument_list|(
name|r
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|handlePainter
operator|.
name|setBrush
argument_list|(
name|Qt
operator|::
name|NoBrush
argument_list|)
expr_stmt|;
name|handlePainter
operator|.
name|setPen
argument_list|(
name|d
operator|->
name|innerContrastLine
argument_list|()
argument_list|)
expr_stmt|;
name|handlePainter
operator|.
name|drawRoundedRect
argument_list|(
name|r
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QColor
name|cornerAlpha
init|=
name|outline
operator|.
name|darker
argument_list|(
literal|120
argument_list|)
decl_stmt|;
name|cornerAlpha
operator|.
name|setAlpha
argument_list|(
literal|80
argument_list|)
expr_stmt|;
comment|//handle shadow
name|handlePainter
operator|.
name|setPen
argument_list|(
name|shadowAlpha
argument_list|)
expr_stmt|;
name|handlePainter
operator|.
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|handlePainter
operator|.
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|+
literal|1
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|-
literal|3
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|+
literal|1
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|handlePainter
operator|.
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|+
literal|1
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|handlePainter
operator|.
name|end
argument_list|()
expr_stmt|;
name|QPixmapCache
operator|::
name|insert
argument_list|(
name|handlePixmapName
argument_list|,
name|cache
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|drawPixmap
argument_list|(
name|handle
operator|.
name|topLeft
argument_list|()
argument_list|,
name|cache
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|setBrush
argument_list|(
name|oldBrush
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|oldPen
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|CC_Dial
case|:
if|if
condition|(
specifier|const
name|QStyleOptionSlider
modifier|*
name|dial
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSlider
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
name|QStyleHelper
operator|::
name|drawDial
argument_list|(
name|dial
argument_list|,
name|painter
argument_list|)
expr_stmt|;
break|break;
default|default:
name|QCommonStyle
operator|::
name|drawComplexControl
argument_list|(
name|control
argument_list|,
name|option
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
end_function
begin_comment
comment|/*!   \reimp */
end_comment
begin_function
DECL|function|pixelMetric
name|int
name|QFusionStyle
operator|::
name|pixelMetric
parameter_list|(
name|PixelMetric
name|metric
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|option
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
switch|switch
condition|(
name|metric
condition|)
block|{
case|case
name|PM_SliderTickmarkOffset
case|:
return|return
literal|4
return|;
case|case
name|PM_HeaderMargin
case|:
return|return
literal|2
return|;
case|case
name|PM_ToolTipLabelFrameWidth
case|:
return|return
literal|2
return|;
case|case
name|PM_ButtonDefaultIndicator
case|:
return|return
literal|0
return|;
case|case
name|PM_ButtonShiftHorizontal
case|:
case|case
name|PM_ButtonShiftVertical
case|:
return|return
literal|0
return|;
case|case
name|PM_MessageBoxIconSize
case|:
return|return
literal|48
return|;
case|case
name|PM_ListViewIconSize
case|:
return|return
literal|24
return|;
case|case
name|PM_DialogButtonsSeparator
case|:
case|case
name|PM_ScrollBarSliderMin
case|:
return|return
literal|26
return|;
case|case
name|PM_TitleBarHeight
case|:
return|return
literal|24
return|;
case|case
name|PM_ScrollBarExtent
case|:
return|return
literal|14
return|;
case|case
name|PM_SliderThickness
case|:
return|return
literal|15
return|;
case|case
name|PM_SliderLength
case|:
return|return
literal|15
return|;
case|case
name|PM_DockWidgetTitleMargin
case|:
return|return
literal|1
return|;
case|case
name|PM_DefaultFrameWidth
case|:
return|return
literal|1
return|;
case|case
name|PM_SpinBoxFrameWidth
case|:
return|return
literal|3
return|;
case|case
name|PM_MenuVMargin
case|:
case|case
name|PM_MenuHMargin
case|:
return|return
literal|0
return|;
case|case
name|PM_MenuPanelWidth
case|:
return|return
literal|0
return|;
case|case
name|PM_MenuBarItemSpacing
case|:
return|return
literal|6
return|;
case|case
name|PM_MenuBarVMargin
case|:
return|return
literal|0
return|;
case|case
name|PM_MenuBarHMargin
case|:
return|return
literal|0
return|;
case|case
name|PM_MenuBarPanelWidth
case|:
return|return
literal|0
return|;
case|case
name|PM_ToolBarHandleExtent
case|:
return|return
literal|9
return|;
case|case
name|PM_ToolBarItemSpacing
case|:
return|return
literal|1
return|;
case|case
name|PM_ToolBarFrameWidth
case|:
return|return
literal|2
return|;
case|case
name|PM_ToolBarItemMargin
case|:
return|return
literal|2
return|;
case|case
name|PM_SmallIconSize
case|:
return|return
literal|16
return|;
case|case
name|PM_ButtonIconSize
case|:
return|return
literal|16
return|;
case|case
name|PM_DockWidgetTitleBarButtonMargin
case|:
return|return
literal|2
return|;
case|case
name|PM_MaximumDragDistance
case|:
return|return
operator|-
literal|1
return|;
case|case
name|PM_TabCloseIndicatorWidth
case|:
case|case
name|PM_TabCloseIndicatorHeight
case|:
return|return
literal|20
return|;
case|case
name|PM_TabBarTabVSpace
case|:
return|return
literal|12
return|;
case|case
name|PM_TabBarTabOverlap
case|:
return|return
literal|1
return|;
case|case
name|PM_TabBarBaseOverlap
case|:
return|return
literal|2
return|;
case|case
name|PM_SubMenuOverlap
case|:
return|return
operator|-
literal|1
return|;
case|case
name|PM_DockWidgetHandleExtent
case|:
case|case
name|PM_SplitterWidth
case|:
return|return
literal|4
return|;
case|case
name|PM_IndicatorHeight
case|:
case|case
name|PM_IndicatorWidth
case|:
case|case
name|PM_ExclusiveIndicatorHeight
case|:
case|case
name|PM_ExclusiveIndicatorWidth
case|:
return|return
literal|14
return|;
case|case
name|PM_ScrollView_ScrollBarSpacing
case|:
return|return
literal|0
return|;
default|default:
break|break;
block|}
return|return
name|QCommonStyle
operator|::
name|pixelMetric
argument_list|(
name|metric
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
return|;
block|}
end_function
begin_comment
comment|/*!   \reimp */
end_comment
begin_function
DECL|function|sizeFromContents
name|QSize
name|QFusionStyle
operator|::
name|sizeFromContents
parameter_list|(
name|ContentsType
name|type
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|option
parameter_list|,
specifier|const
name|QSize
modifier|&
name|size
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
name|QSize
name|newSize
init|=
name|QCommonStyle
operator|::
name|sizeFromContents
argument_list|(
name|type
argument_list|,
name|option
argument_list|,
name|size
argument_list|,
name|widget
argument_list|)
decl_stmt|;
switch|switch
condition|(
name|type
condition|)
block|{
case|case
name|CT_PushButton
case|:
if|if
condition|(
specifier|const
name|QStyleOptionButton
modifier|*
name|btn
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionButton
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
if|if
condition|(
operator|!
name|btn
operator|->
name|text
operator|.
name|isEmpty
argument_list|()
operator|&&
name|newSize
operator|.
name|width
argument_list|()
operator|<
literal|80
condition|)
name|newSize
operator|.
name|setWidth
argument_list|(
literal|80
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|btn
operator|->
name|icon
operator|.
name|isNull
argument_list|()
operator|&&
name|btn
operator|->
name|iconSize
operator|.
name|height
argument_list|()
operator|>
literal|16
condition|)
name|newSize
operator|-=
name|QSize
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|CT_GroupBox
case|:
if|if
condition|(
name|option
condition|)
block|{
name|int
name|topMargin
init|=
name|qMax
argument_list|(
name|pixelMetric
argument_list|(
name|PM_ExclusiveIndicatorHeight
argument_list|)
argument_list|,
name|option
operator|->
name|fontMetrics
operator|.
name|height
argument_list|()
argument_list|)
operator|+
name|groupBoxTopMargin
decl_stmt|;
name|newSize
operator|+=
name|QSize
argument_list|(
literal|10
argument_list|,
name|topMargin
argument_list|)
expr_stmt|;
comment|// Add some space below the groupbox
block|}
break|break;
case|case
name|CT_RadioButton
case|:
case|case
name|CT_CheckBox
case|:
name|newSize
operator|+=
name|QSize
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
break|break;
case|case
name|CT_ToolButton
case|:
name|newSize
operator|+=
name|QSize
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
break|break;
case|case
name|CT_SpinBox
case|:
name|newSize
operator|+=
name|QSize
argument_list|(
literal|0
argument_list|,
operator|-
literal|3
argument_list|)
expr_stmt|;
break|break;
case|case
name|CT_ComboBox
case|:
name|newSize
operator|+=
name|QSize
argument_list|(
literal|2
argument_list|,
literal|4
argument_list|)
expr_stmt|;
break|break;
case|case
name|CT_LineEdit
case|:
name|newSize
operator|+=
name|QSize
argument_list|(
literal|0
argument_list|,
literal|4
argument_list|)
expr_stmt|;
break|break;
case|case
name|CT_MenuBarItem
case|:
name|newSize
operator|+=
name|QSize
argument_list|(
literal|8
argument_list|,
literal|5
argument_list|)
expr_stmt|;
break|break;
case|case
name|CT_MenuItem
case|:
if|if
condition|(
specifier|const
name|QStyleOptionMenuItem
modifier|*
name|menuItem
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionMenuItem
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|int
name|w
init|=
name|newSize
operator|.
name|width
argument_list|()
decl_stmt|;
name|int
name|maxpmw
init|=
name|menuItem
operator|->
name|maxIconWidth
decl_stmt|;
name|int
name|tabSpacing
init|=
literal|20
decl_stmt|;
if|if
condition|(
name|menuItem
operator|->
name|text
operator|.
name|contains
argument_list|(
name|QLatin1Char
argument_list|(
literal|'\t'
argument_list|)
argument_list|)
condition|)
name|w
operator|+=
name|tabSpacing
expr_stmt|;
elseif|else
if|if
condition|(
name|menuItem
operator|->
name|menuItemType
operator|==
name|QStyleOptionMenuItem
operator|::
name|SubMenu
condition|)
name|w
operator|+=
literal|2
operator|*
name|QFusionStylePrivate
operator|::
name|menuArrowHMargin
expr_stmt|;
elseif|else
if|if
condition|(
name|menuItem
operator|->
name|menuItemType
operator|==
name|QStyleOptionMenuItem
operator|::
name|DefaultItem
condition|)
block|{
name|QFontMetrics
name|fm
argument_list|(
name|menuItem
operator|->
name|font
argument_list|)
decl_stmt|;
name|QFont
name|fontBold
init|=
name|menuItem
operator|->
name|font
decl_stmt|;
name|fontBold
operator|.
name|setBold
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QFontMetrics
name|fmBold
argument_list|(
name|fontBold
argument_list|)
decl_stmt|;
name|w
operator|+=
name|fmBold
operator|.
name|width
argument_list|(
name|menuItem
operator|->
name|text
argument_list|)
operator|-
name|fm
operator|.
name|width
argument_list|(
name|menuItem
operator|->
name|text
argument_list|)
expr_stmt|;
block|}
name|int
name|checkcol
init|=
name|qMax
argument_list|<
name|int
argument_list|>
argument_list|(
name|maxpmw
argument_list|,
name|QFusionStylePrivate
operator|::
name|menuCheckMarkWidth
argument_list|)
decl_stmt|;
comment|// Windows always shows a check column
name|w
operator|+=
name|checkcol
expr_stmt|;
name|w
operator|+=
name|int
argument_list|(
name|QFusionStylePrivate
operator|::
name|menuRightBorder
argument_list|)
operator|+
literal|10
expr_stmt|;
name|newSize
operator|.
name|setWidth
argument_list|(
name|w
argument_list|)
expr_stmt|;
if|if
condition|(
name|menuItem
operator|->
name|menuItemType
operator|==
name|QStyleOptionMenuItem
operator|::
name|Separator
condition|)
block|{
if|if
condition|(
operator|!
name|menuItem
operator|->
name|text
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|newSize
operator|.
name|setHeight
argument_list|(
name|menuItem
operator|->
name|fontMetrics
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
elseif|else
if|if
condition|(
operator|!
name|menuItem
operator|->
name|icon
operator|.
name|isNull
argument_list|()
condition|)
block|{
if|if
condition|(
specifier|const
name|QComboBox
modifier|*
name|combo
init|=
name|qobject_cast
argument_list|<
specifier|const
name|QComboBox
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
condition|)
block|{
name|newSize
operator|.
name|setHeight
argument_list|(
name|qMax
argument_list|(
name|combo
operator|->
name|iconSize
argument_list|()
operator|.
name|height
argument_list|()
operator|+
literal|2
argument_list|,
name|newSize
operator|.
name|height
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|newSize
operator|.
name|setWidth
argument_list|(
name|newSize
operator|.
name|width
argument_list|()
operator|+
literal|12
argument_list|)
expr_stmt|;
name|newSize
operator|.
name|setWidth
argument_list|(
name|qMax
argument_list|(
name|newSize
operator|.
name|width
argument_list|()
argument_list|,
literal|120
argument_list|)
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|CT_SizeGrip
case|:
name|newSize
operator|+=
name|QSize
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|)
expr_stmt|;
break|break;
case|case
name|CT_MdiControls
case|:
if|if
condition|(
specifier|const
name|QStyleOptionComplex
modifier|*
name|styleOpt
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionComplex
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|int
name|width
init|=
literal|0
decl_stmt|;
if|if
condition|(
name|styleOpt
operator|->
name|subControls
operator|&
name|SC_MdiMinButton
condition|)
name|width
operator|+=
literal|19
operator|+
literal|1
expr_stmt|;
if|if
condition|(
name|styleOpt
operator|->
name|subControls
operator|&
name|SC_MdiNormalButton
condition|)
name|width
operator|+=
literal|19
operator|+
literal|1
expr_stmt|;
if|if
condition|(
name|styleOpt
operator|->
name|subControls
operator|&
name|SC_MdiCloseButton
condition|)
name|width
operator|+=
literal|19
operator|+
literal|1
expr_stmt|;
name|newSize
operator|=
name|QSize
argument_list|(
name|width
argument_list|,
literal|19
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|newSize
operator|=
name|QSize
argument_list|(
literal|60
argument_list|,
literal|19
argument_list|)
expr_stmt|;
block|}
break|break;
default|default:
break|break;
block|}
return|return
name|newSize
return|;
block|}
end_function
begin_comment
comment|/*!   \reimp */
end_comment
begin_function
DECL|function|polish
name|void
name|QFusionStyle
operator|::
name|polish
parameter_list|(
name|QApplication
modifier|*
name|app
parameter_list|)
block|{
name|QCommonStyle
operator|::
name|polish
argument_list|(
name|app
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|/*!   \reimp */
end_comment
begin_function
DECL|function|polish
name|void
name|QFusionStyle
operator|::
name|polish
parameter_list|(
name|QWidget
modifier|*
name|widget
parameter_list|)
block|{
name|QCommonStyle
operator|::
name|polish
argument_list|(
name|widget
argument_list|)
expr_stmt|;
if|if
condition|(
name|qobject_cast
argument_list|<
name|QAbstractButton
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
operator|||
name|qobject_cast
argument_list|<
name|QComboBox
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
operator|||
name|qobject_cast
argument_list|<
name|QProgressBar
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
operator|||
name|qobject_cast
argument_list|<
name|QScrollBar
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
operator|||
name|qobject_cast
argument_list|<
name|QSplitterHandle
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
operator|||
name|qobject_cast
argument_list|<
name|QAbstractSlider
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
operator|||
name|qobject_cast
argument_list|<
name|QAbstractSpinBox
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
operator|||
operator|(
name|widget
operator|->
name|inherits
argument_list|(
literal|"QDockSeparator"
argument_list|)
operator|)
operator|||
operator|(
name|widget
operator|->
name|inherits
argument_list|(
literal|"QDockWidgetSeparator"
argument_list|)
operator|)
condition|)
block|{
name|widget
operator|->
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_Hover
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_comment
comment|/*!   \reimp */
end_comment
begin_function
DECL|function|polish
name|void
name|QFusionStyle
operator|::
name|polish
parameter_list|(
name|QPalette
modifier|&
name|pal
parameter_list|)
block|{
name|QCommonStyle
operator|::
name|polish
argument_list|(
name|pal
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|/*!   \reimp */
end_comment
begin_function
DECL|function|unpolish
name|void
name|QFusionStyle
operator|::
name|unpolish
parameter_list|(
name|QWidget
modifier|*
name|widget
parameter_list|)
block|{
name|QCommonStyle
operator|::
name|unpolish
argument_list|(
name|widget
argument_list|)
expr_stmt|;
if|if
condition|(
name|qobject_cast
argument_list|<
name|QAbstractButton
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
operator|||
name|qobject_cast
argument_list|<
name|QComboBox
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
operator|||
name|qobject_cast
argument_list|<
name|QProgressBar
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
operator|||
name|qobject_cast
argument_list|<
name|QScrollBar
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
operator|||
name|qobject_cast
argument_list|<
name|QSplitterHandle
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
operator|||
name|qobject_cast
argument_list|<
name|QAbstractSlider
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
operator|||
name|qobject_cast
argument_list|<
name|QAbstractSpinBox
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
operator|||
operator|(
name|widget
operator|->
name|inherits
argument_list|(
literal|"QDockSeparator"
argument_list|)
operator|)
operator|||
operator|(
name|widget
operator|->
name|inherits
argument_list|(
literal|"QDockWidgetSeparator"
argument_list|)
operator|)
condition|)
block|{
name|widget
operator|->
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_Hover
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_comment
comment|/*!   \reimp */
end_comment
begin_function
DECL|function|unpolish
name|void
name|QFusionStyle
operator|::
name|unpolish
parameter_list|(
name|QApplication
modifier|*
name|app
parameter_list|)
block|{
name|QCommonStyle
operator|::
name|unpolish
argument_list|(
name|app
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|/*!   \reimp */
end_comment
begin_function
DECL|function|subControlRect
name|QRect
name|QFusionStyle
operator|::
name|subControlRect
parameter_list|(
name|ComplexControl
name|control
parameter_list|,
specifier|const
name|QStyleOptionComplex
modifier|*
name|option
parameter_list|,
name|SubControl
name|subControl
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
name|QRect
name|rect
init|=
name|QCommonStyle
operator|::
name|subControlRect
argument_list|(
name|control
argument_list|,
name|option
argument_list|,
name|subControl
argument_list|,
name|widget
argument_list|)
decl_stmt|;
switch|switch
condition|(
name|control
condition|)
block|{
case|case
name|CC_Slider
case|:
if|if
condition|(
specifier|const
name|QStyleOptionSlider
modifier|*
name|slider
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSlider
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|int
name|tickSize
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_SliderTickmarkOffset
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
decl_stmt|;
switch|switch
condition|(
name|subControl
condition|)
block|{
case|case
name|SC_SliderHandle
case|:
block|{
if|if
condition|(
name|slider
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
block|{
name|rect
operator|.
name|setHeight
argument_list|(
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_SliderThickness
argument_list|)
argument_list|)
expr_stmt|;
name|rect
operator|.
name|setWidth
argument_list|(
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_SliderLength
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|centerY
init|=
name|slider
operator|->
name|rect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|-
name|rect
operator|.
name|height
argument_list|()
operator|/
literal|2
decl_stmt|;
if|if
condition|(
name|slider
operator|->
name|tickPosition
operator|&
name|QSlider
operator|::
name|TicksAbove
condition|)
name|centerY
operator|+=
name|tickSize
expr_stmt|;
if|if
condition|(
name|slider
operator|->
name|tickPosition
operator|&
name|QSlider
operator|::
name|TicksBelow
condition|)
name|centerY
operator|-=
name|tickSize
expr_stmt|;
name|rect
operator|.
name|moveTop
argument_list|(
name|centerY
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|rect
operator|.
name|setWidth
argument_list|(
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_SliderThickness
argument_list|)
argument_list|)
expr_stmt|;
name|rect
operator|.
name|setHeight
argument_list|(
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_SliderLength
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|centerX
init|=
name|slider
operator|->
name|rect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|-
name|rect
operator|.
name|width
argument_list|()
operator|/
literal|2
decl_stmt|;
if|if
condition|(
name|slider
operator|->
name|tickPosition
operator|&
name|QSlider
operator|::
name|TicksAbove
condition|)
name|centerX
operator|+=
name|tickSize
expr_stmt|;
if|if
condition|(
name|slider
operator|->
name|tickPosition
operator|&
name|QSlider
operator|::
name|TicksBelow
condition|)
name|centerX
operator|-=
name|tickSize
expr_stmt|;
name|rect
operator|.
name|moveLeft
argument_list|(
name|centerX
argument_list|)
expr_stmt|;
block|}
block|}
break|break;
case|case
name|SC_SliderGroove
case|:
block|{
name|QPoint
name|grooveCenter
init|=
name|slider
operator|->
name|rect
operator|.
name|center
argument_list|()
decl_stmt|;
if|if
condition|(
name|slider
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
block|{
name|rect
operator|.
name|setHeight
argument_list|(
literal|7
argument_list|)
expr_stmt|;
if|if
condition|(
name|slider
operator|->
name|tickPosition
operator|&
name|QSlider
operator|::
name|TicksAbove
condition|)
name|grooveCenter
operator|.
name|ry
argument_list|()
operator|+=
name|tickSize
expr_stmt|;
if|if
condition|(
name|slider
operator|->
name|tickPosition
operator|&
name|QSlider
operator|::
name|TicksBelow
condition|)
name|grooveCenter
operator|.
name|ry
argument_list|()
operator|-=
name|tickSize
expr_stmt|;
block|}
else|else
block|{
name|rect
operator|.
name|setWidth
argument_list|(
literal|7
argument_list|)
expr_stmt|;
if|if
condition|(
name|slider
operator|->
name|tickPosition
operator|&
name|QSlider
operator|::
name|TicksAbove
condition|)
name|grooveCenter
operator|.
name|rx
argument_list|()
operator|+=
name|tickSize
expr_stmt|;
if|if
condition|(
name|slider
operator|->
name|tickPosition
operator|&
name|QSlider
operator|::
name|TicksBelow
condition|)
name|grooveCenter
operator|.
name|rx
argument_list|()
operator|-=
name|tickSize
expr_stmt|;
block|}
name|rect
operator|.
name|moveCenter
argument_list|(
name|grooveCenter
argument_list|)
expr_stmt|;
break|break;
block|}
default|default:
break|break;
block|}
block|}
break|break;
case|case
name|CC_SpinBox
case|:
if|if
condition|(
specifier|const
name|QStyleOptionSpinBox
modifier|*
name|spinbox
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSpinBox
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|QSize
name|bs
decl_stmt|;
name|int
name|center
init|=
name|spinbox
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|/
literal|2
decl_stmt|;
name|int
name|fw
init|=
name|spinbox
operator|->
name|frame
condition|?
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_SpinBoxFrameWidth
argument_list|,
name|spinbox
argument_list|,
name|widget
argument_list|)
else|:
literal|0
decl_stmt|;
name|int
name|y
init|=
name|fw
decl_stmt|;
name|bs
operator|.
name|setHeight
argument_list|(
name|qMax
argument_list|(
literal|8
argument_list|,
name|spinbox
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|/
literal|2
operator|-
name|y
argument_list|)
argument_list|)
expr_stmt|;
name|bs
operator|.
name|setWidth
argument_list|(
literal|14
argument_list|)
expr_stmt|;
name|int
name|x
decl_stmt|,
name|lx
decl_stmt|,
name|rx
decl_stmt|;
name|x
operator|=
name|spinbox
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|-
name|y
operator|-
name|bs
operator|.
name|width
argument_list|()
operator|+
literal|2
expr_stmt|;
name|lx
operator|=
name|fw
expr_stmt|;
name|rx
operator|=
name|x
operator|-
name|fw
expr_stmt|;
switch|switch
condition|(
name|subControl
condition|)
block|{
case|case
name|SC_SpinBoxUp
case|:
if|if
condition|(
name|spinbox
operator|->
name|buttonSymbols
operator|==
name|QAbstractSpinBox
operator|::
name|NoButtons
condition|)
return|return
name|QRect
argument_list|()
return|;
name|rect
operator|=
name|QRect
argument_list|(
name|x
argument_list|,
name|fw
argument_list|,
name|bs
operator|.
name|width
argument_list|()
argument_list|,
name|center
operator|-
name|fw
argument_list|)
expr_stmt|;
break|break;
case|case
name|SC_SpinBoxDown
case|:
if|if
condition|(
name|spinbox
operator|->
name|buttonSymbols
operator|==
name|QAbstractSpinBox
operator|::
name|NoButtons
condition|)
return|return
name|QRect
argument_list|()
return|;
name|rect
operator|=
name|QRect
argument_list|(
name|x
argument_list|,
name|center
argument_list|,
name|bs
operator|.
name|width
argument_list|()
argument_list|,
name|spinbox
operator|->
name|rect
operator|.
name|bottom
argument_list|()
operator|-
name|center
operator|-
name|fw
operator|+
literal|1
argument_list|)
expr_stmt|;
break|break;
case|case
name|SC_SpinBoxEditField
case|:
if|if
condition|(
name|spinbox
operator|->
name|buttonSymbols
operator|==
name|QAbstractSpinBox
operator|::
name|NoButtons
condition|)
block|{
name|rect
operator|=
name|QRect
argument_list|(
name|lx
argument_list|,
name|fw
argument_list|,
name|spinbox
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|-
literal|2
operator|*
name|fw
argument_list|,
name|spinbox
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
literal|2
operator|*
name|fw
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|rect
operator|=
name|QRect
argument_list|(
name|lx
argument_list|,
name|fw
argument_list|,
name|rx
operator|-
name|qMax
argument_list|(
name|fw
operator|-
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|,
name|spinbox
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
literal|2
operator|*
name|fw
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|SC_SpinBoxFrame
case|:
name|rect
operator|=
name|spinbox
operator|->
name|rect
expr_stmt|;
default|default:
break|break;
block|}
name|rect
operator|=
name|visualRect
argument_list|(
name|spinbox
operator|->
name|direction
argument_list|,
name|spinbox
operator|->
name|rect
argument_list|,
name|rect
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|CC_GroupBox
case|:
if|if
condition|(
specifier|const
name|QStyleOptionGroupBox
modifier|*
name|groupBox
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionGroupBox
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|rect
operator|=
name|option
operator|->
name|rect
expr_stmt|;
if|if
condition|(
name|subControl
operator|==
name|SC_GroupBoxFrame
condition|)
return|return
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
return|;
elseif|else
if|if
condition|(
name|subControl
operator|==
name|SC_GroupBoxContents
condition|)
block|{
name|QRect
name|frameRect
init|=
name|option
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
name|groupBoxBottomMargin
argument_list|)
decl_stmt|;
name|int
name|margin
init|=
literal|3
decl_stmt|;
name|int
name|leftMarginExtension
init|=
literal|0
decl_stmt|;
name|int
name|topMargin
init|=
name|qMax
argument_list|(
name|pixelMetric
argument_list|(
name|PM_ExclusiveIndicatorHeight
argument_list|)
argument_list|,
name|option
operator|->
name|fontMetrics
operator|.
name|height
argument_list|()
argument_list|)
operator|+
name|groupBoxTopMargin
decl_stmt|;
return|return
name|frameRect
operator|.
name|adjusted
argument_list|(
name|leftMarginExtension
operator|+
name|margin
argument_list|,
name|margin
operator|+
name|topMargin
argument_list|,
operator|-
name|margin
argument_list|,
operator|-
name|margin
operator|-
name|groupBoxBottomMargin
argument_list|)
return|;
block|}
name|QSize
name|textSize
init|=
name|option
operator|->
name|fontMetrics
operator|.
name|boundingRect
argument_list|(
name|groupBox
operator|->
name|text
argument_list|)
operator|.
name|size
argument_list|()
operator|+
name|QSize
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|int
name|indicatorWidth
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_IndicatorWidth
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|int
name|indicatorHeight
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_IndicatorHeight
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|rect
operator|=
name|QRect
argument_list|()
expr_stmt|;
if|if
condition|(
name|subControl
operator|==
name|SC_GroupBoxCheckBox
condition|)
block|{
name|rect
operator|.
name|setWidth
argument_list|(
name|indicatorWidth
argument_list|)
expr_stmt|;
name|rect
operator|.
name|setHeight
argument_list|(
name|indicatorHeight
argument_list|)
expr_stmt|;
name|rect
operator|.
name|moveTop
argument_list|(
name|textSize
operator|.
name|height
argument_list|()
operator|>
name|indicatorHeight
condition|?
operator|(
name|textSize
operator|.
name|height
argument_list|()
operator|-
name|indicatorHeight
operator|)
operator|/
literal|2
else|:
literal|0
argument_list|)
expr_stmt|;
name|rect
operator|.
name|moveLeft
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|subControl
operator|==
name|SC_GroupBoxLabel
condition|)
block|{
name|rect
operator|.
name|setSize
argument_list|(
name|textSize
argument_list|)
expr_stmt|;
name|rect
operator|.
name|moveTop
argument_list|(
literal|1
argument_list|)
expr_stmt|;
if|if
condition|(
name|option
operator|->
name|subControls
operator|&
name|QStyle
operator|::
name|SC_GroupBoxCheckBox
condition|)
name|rect
operator|.
name|translate
argument_list|(
name|indicatorWidth
operator|+
literal|5
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
return|return
name|visualRect
argument_list|(
name|option
operator|->
name|direction
argument_list|,
name|option
operator|->
name|rect
argument_list|,
name|rect
argument_list|)
return|;
block|}
return|return
name|rect
return|;
case|case
name|CC_ComboBox
case|:
switch|switch
condition|(
name|subControl
condition|)
block|{
case|case
name|SC_ComboBoxArrow
case|:
name|rect
operator|=
name|visualRect
argument_list|(
name|option
operator|->
name|direction
argument_list|,
name|option
operator|->
name|rect
argument_list|,
name|rect
argument_list|)
expr_stmt|;
name|rect
operator|.
name|setRect
argument_list|(
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|18
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|-
literal|2
argument_list|,
literal|19
argument_list|,
name|rect
operator|.
name|height
argument_list|()
operator|+
literal|4
argument_list|)
expr_stmt|;
name|rect
operator|=
name|visualRect
argument_list|(
name|option
operator|->
name|direction
argument_list|,
name|option
operator|->
name|rect
argument_list|,
name|rect
argument_list|)
expr_stmt|;
break|break;
case|case
name|SC_ComboBoxEditField
case|:
block|{
name|int
name|frameWidth
init|=
literal|2
decl_stmt|;
name|rect
operator|=
name|visualRect
argument_list|(
name|option
operator|->
name|direction
argument_list|,
name|option
operator|->
name|rect
argument_list|,
name|rect
argument_list|)
expr_stmt|;
name|rect
operator|.
name|setRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
name|frameWidth
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
name|frameWidth
argument_list|,
name|option
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|-
literal|19
operator|-
literal|2
operator|*
name|frameWidth
argument_list|,
name|option
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
literal|2
operator|*
name|frameWidth
argument_list|)
expr_stmt|;
if|if
condition|(
specifier|const
name|QStyleOptionComboBox
modifier|*
name|box
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionComboBox
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
if|if
condition|(
operator|!
name|box
operator|->
name|editable
condition|)
block|{
name|rect
operator|.
name|adjust
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
name|box
operator|->
name|state
operator|&
operator|(
name|State_Sunken
operator||
name|State_On
operator|)
condition|)
name|rect
operator|.
name|translate
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
name|rect
operator|=
name|visualRect
argument_list|(
name|option
operator|->
name|direction
argument_list|,
name|option
operator|->
name|rect
argument_list|,
name|rect
argument_list|)
expr_stmt|;
break|break;
block|}
default|default:
break|break;
block|}
break|break;
case|case
name|CC_TitleBar
case|:
if|if
condition|(
specifier|const
name|QStyleOptionTitleBar
modifier|*
name|tb
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionTitleBar
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|SubControl
name|sc
init|=
name|subControl
decl_stmt|;
name|QRect
modifier|&
name|ret
init|=
name|rect
decl_stmt|;
specifier|const
name|int
name|indent
init|=
literal|3
decl_stmt|;
specifier|const
name|int
name|controlTopMargin
init|=
literal|3
decl_stmt|;
specifier|const
name|int
name|controlBottomMargin
init|=
literal|3
decl_stmt|;
specifier|const
name|int
name|controlWidthMargin
init|=
literal|2
decl_stmt|;
specifier|const
name|int
name|controlHeight
init|=
name|tb
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
name|controlTopMargin
operator|-
name|controlBottomMargin
decl_stmt|;
specifier|const
name|int
name|delta
init|=
name|controlHeight
operator|+
name|controlWidthMargin
decl_stmt|;
name|int
name|offset
init|=
literal|0
decl_stmt|;
name|bool
name|isMinimized
init|=
name|tb
operator|->
name|titleBarState
operator|&
name|Qt
operator|::
name|WindowMinimized
decl_stmt|;
name|bool
name|isMaximized
init|=
name|tb
operator|->
name|titleBarState
operator|&
name|Qt
operator|::
name|WindowMaximized
decl_stmt|;
switch|switch
condition|(
name|sc
condition|)
block|{
case|case
name|SC_TitleBarLabel
case|:
if|if
condition|(
name|tb
operator|->
name|titleBarFlags
operator|&
operator|(
name|Qt
operator|::
name|WindowTitleHint
operator||
name|Qt
operator|::
name|WindowSystemMenuHint
operator|)
condition|)
block|{
name|ret
operator|=
name|tb
operator|->
name|rect
expr_stmt|;
if|if
condition|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowSystemMenuHint
condition|)
name|ret
operator|.
name|adjust
argument_list|(
name|delta
argument_list|,
literal|0
argument_list|,
operator|-
name|delta
argument_list|,
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowMinimizeButtonHint
condition|)
name|ret
operator|.
name|adjust
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
name|delta
argument_list|,
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowMaximizeButtonHint
condition|)
name|ret
operator|.
name|adjust
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
name|delta
argument_list|,
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowShadeButtonHint
condition|)
name|ret
operator|.
name|adjust
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
name|delta
argument_list|,
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowContextHelpButtonHint
condition|)
name|ret
operator|.
name|adjust
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
name|delta
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|SC_TitleBarContextHelpButton
case|:
if|if
condition|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowContextHelpButtonHint
condition|)
name|offset
operator|+=
name|delta
expr_stmt|;
case|case
name|SC_TitleBarMinButton
case|:
if|if
condition|(
operator|!
name|isMinimized
operator|&&
operator|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowMinimizeButtonHint
operator|)
condition|)
name|offset
operator|+=
name|delta
expr_stmt|;
elseif|else
if|if
condition|(
name|sc
operator|==
name|SC_TitleBarMinButton
condition|)
break|break;
case|case
name|SC_TitleBarNormalButton
case|:
if|if
condition|(
name|isMinimized
operator|&&
operator|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowMinimizeButtonHint
operator|)
condition|)
name|offset
operator|+=
name|delta
expr_stmt|;
elseif|else
if|if
condition|(
name|isMaximized
operator|&&
operator|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowMaximizeButtonHint
operator|)
condition|)
name|offset
operator|+=
name|delta
expr_stmt|;
elseif|else
if|if
condition|(
name|sc
operator|==
name|SC_TitleBarNormalButton
condition|)
break|break;
case|case
name|SC_TitleBarMaxButton
case|:
if|if
condition|(
operator|!
name|isMaximized
operator|&&
operator|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowMaximizeButtonHint
operator|)
condition|)
name|offset
operator|+=
name|delta
expr_stmt|;
elseif|else
if|if
condition|(
name|sc
operator|==
name|SC_TitleBarMaxButton
condition|)
break|break;
case|case
name|SC_TitleBarShadeButton
case|:
if|if
condition|(
operator|!
name|isMinimized
operator|&&
operator|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowShadeButtonHint
operator|)
condition|)
name|offset
operator|+=
name|delta
expr_stmt|;
elseif|else
if|if
condition|(
name|sc
operator|==
name|SC_TitleBarShadeButton
condition|)
break|break;
case|case
name|SC_TitleBarUnshadeButton
case|:
if|if
condition|(
name|isMinimized
operator|&&
operator|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowShadeButtonHint
operator|)
condition|)
name|offset
operator|+=
name|delta
expr_stmt|;
elseif|else
if|if
condition|(
name|sc
operator|==
name|SC_TitleBarUnshadeButton
condition|)
break|break;
case|case
name|SC_TitleBarCloseButton
case|:
if|if
condition|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowSystemMenuHint
condition|)
name|offset
operator|+=
name|delta
expr_stmt|;
elseif|else
if|if
condition|(
name|sc
operator|==
name|SC_TitleBarCloseButton
condition|)
break|break;
name|ret
operator|.
name|setRect
argument_list|(
name|tb
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
name|indent
operator|-
name|offset
argument_list|,
name|tb
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
name|controlTopMargin
argument_list|,
name|controlHeight
argument_list|,
name|controlHeight
argument_list|)
expr_stmt|;
break|break;
case|case
name|SC_TitleBarSysMenu
case|:
if|if
condition|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowSystemMenuHint
condition|)
block|{
name|ret
operator|.
name|setRect
argument_list|(
name|tb
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
name|controlWidthMargin
operator|+
name|indent
argument_list|,
name|tb
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
name|controlTopMargin
argument_list|,
name|controlHeight
argument_list|,
name|controlHeight
argument_list|)
expr_stmt|;
block|}
break|break;
default|default:
break|break;
block|}
name|ret
operator|=
name|visualRect
argument_list|(
name|tb
operator|->
name|direction
argument_list|,
name|tb
operator|->
name|rect
argument_list|,
name|ret
argument_list|)
expr_stmt|;
block|}
break|break;
default|default:
break|break;
block|}
return|return
name|rect
return|;
block|}
end_function
begin_comment
comment|/*!   \reimp */
end_comment
begin_function
DECL|function|itemPixmapRect
name|QRect
name|QFusionStyle
operator|::
name|itemPixmapRect
parameter_list|(
specifier|const
name|QRect
modifier|&
name|r
parameter_list|,
name|int
name|flags
parameter_list|,
specifier|const
name|QPixmap
modifier|&
name|pixmap
parameter_list|)
specifier|const
block|{
return|return
name|QCommonStyle
operator|::
name|itemPixmapRect
argument_list|(
name|r
argument_list|,
name|flags
argument_list|,
name|pixmap
argument_list|)
return|;
block|}
end_function
begin_comment
comment|/*!   \reimp */
end_comment
begin_function
DECL|function|drawItemPixmap
name|void
name|QFusionStyle
operator|::
name|drawItemPixmap
parameter_list|(
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QRect
modifier|&
name|rect
parameter_list|,
name|int
name|alignment
parameter_list|,
specifier|const
name|QPixmap
modifier|&
name|pixmap
parameter_list|)
specifier|const
block|{
name|QCommonStyle
operator|::
name|drawItemPixmap
argument_list|(
name|painter
argument_list|,
name|rect
argument_list|,
name|alignment
argument_list|,
name|pixmap
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|/*!   \reimp */
end_comment
begin_function
DECL|function|hitTestComplexControl
name|QStyle
operator|::
name|SubControl
name|QFusionStyle
operator|::
name|hitTestComplexControl
parameter_list|(
name|ComplexControl
name|cc
parameter_list|,
specifier|const
name|QStyleOptionComplex
modifier|*
name|opt
parameter_list|,
specifier|const
name|QPoint
modifier|&
name|pt
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|w
parameter_list|)
specifier|const
block|{
return|return
name|QCommonStyle
operator|::
name|hitTestComplexControl
argument_list|(
name|cc
argument_list|,
name|opt
argument_list|,
name|pt
argument_list|,
name|w
argument_list|)
return|;
block|}
end_function
begin_comment
comment|/*!   \reimp */
end_comment
begin_function
DECL|function|generatedIconPixmap
name|QPixmap
name|QFusionStyle
operator|::
name|generatedIconPixmap
parameter_list|(
name|QIcon
operator|::
name|Mode
name|iconMode
parameter_list|,
specifier|const
name|QPixmap
modifier|&
name|pixmap
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|opt
parameter_list|)
specifier|const
block|{
return|return
name|QCommonStyle
operator|::
name|generatedIconPixmap
argument_list|(
name|iconMode
argument_list|,
name|pixmap
argument_list|,
name|opt
argument_list|)
return|;
block|}
end_function
begin_comment
comment|/*!   \reimp */
end_comment
begin_function
DECL|function|styleHint
name|int
name|QFusionStyle
operator|::
name|styleHint
parameter_list|(
name|StyleHint
name|hint
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|option
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|,
name|QStyleHintReturn
modifier|*
name|returnData
parameter_list|)
specifier|const
block|{
switch|switch
condition|(
name|hint
condition|)
block|{
case|case
name|SH_Slider_SnapToValue
case|:
case|case
name|SH_PrintDialog_RightAlignButtons
case|:
case|case
name|SH_FontDialog_SelectAssociatedText
case|:
case|case
name|SH_MenuBar_AltKeyNavigation
case|:
case|case
name|SH_ComboBox_ListMouseTracking
case|:
case|case
name|SH_ScrollBar_StopMouseOverSlider
case|:
case|case
name|SH_ScrollBar_MiddleClickAbsolutePosition
case|:
case|case
name|SH_EtchDisabledText
case|:
case|case
name|SH_TitleBar_AutoRaise
case|:
case|case
name|SH_TitleBar_NoBorder
case|:
case|case
name|SH_ItemView_ShowDecorationSelected
case|:
case|case
name|SH_ItemView_ArrowKeysNavigateIntoChildren
case|:
case|case
name|SH_ItemView_ChangeHighlightOnFocus
case|:
case|case
name|SH_MenuBar_MouseTracking
case|:
case|case
name|SH_Menu_MouseTracking
case|:
case|case
name|SH_Menu_SupportsSections
case|:
return|return
literal|1
return|;
case|case
name|SH_ToolBox_SelectedPageTitleBold
case|:
case|case
name|SH_ScrollView_FrameOnlyAroundContents
case|:
case|case
name|SH_Menu_AllowActiveAndDisabled
case|:
case|case
name|SH_MainWindow_SpaceBelowMenuBar
case|:
case|case
name|SH_DialogButtonBox_ButtonsHaveIcons
case|:
case|case
name|SH_MessageBox_CenterButtons
case|:
case|case
name|SH_RubberBand_Mask
case|:
return|return
literal|0
return|;
case|case
name|SH_ComboBox_Popup
case|:
if|if
condition|(
specifier|const
name|QStyleOptionComboBox
modifier|*
name|cmb
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionComboBox
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
return|return
operator|!
name|cmb
operator|->
name|editable
return|;
return|return
literal|0
return|;
case|case
name|SH_Table_GridLineColor
case|:
return|return
name|option
condition|?
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|120
argument_list|)
operator|.
name|rgb
argument_list|()
else|:
literal|0
return|;
case|case
name|SH_MessageBox_TextInteractionFlags
case|:
return|return
name|Qt
operator|::
name|TextSelectableByMouse
operator||
name|Qt
operator|::
name|LinksAccessibleByMouse
return|;
ifndef|#
directive|ifndef
name|QT_NO_WIZARD
case|case
name|SH_WizardStyle
case|:
return|return
name|QWizard
operator|::
name|ClassicStyle
return|;
endif|#
directive|endif
case|case
name|SH_Menu_SubMenuPopupDelay
case|:
return|return
literal|225
return|;
comment|// default from GtkMenu
case|case
name|SH_WindowFrame_Mask
case|:
if|if
condition|(
name|QStyleHintReturnMask
modifier|*
name|mask
init|=
name|qstyleoption_cast
argument_list|<
name|QStyleHintReturnMask
operator|*
argument_list|>
argument_list|(
name|returnData
argument_list|)
condition|)
block|{
comment|//left rounded corner
name|mask
operator|->
name|region
operator|=
name|option
operator|->
name|rect
expr_stmt|;
name|mask
operator|->
name|region
operator|-=
name|QRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
argument_list|,
literal|5
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|mask
operator|->
name|region
operator|-=
name|QRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
literal|3
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|mask
operator|->
name|region
operator|-=
name|QRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|mask
operator|->
name|region
operator|-=
name|QRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|3
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
comment|//right rounded corner
name|mask
operator|->
name|region
operator|-=
name|QRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|4
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
argument_list|,
literal|5
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|mask
operator|->
name|region
operator|-=
name|QRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
literal|3
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|mask
operator|->
name|region
operator|-=
name|QRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|mask
operator|->
name|region
operator|-=
name|QRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|3
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
return|return
literal|1
return|;
block|}
default|default:
break|break;
block|}
return|return
name|QCommonStyle
operator|::
name|styleHint
argument_list|(
name|hint
argument_list|,
name|option
argument_list|,
name|widget
argument_list|,
name|returnData
argument_list|)
return|;
block|}
end_function
begin_comment
comment|/*! \reimp */
end_comment
begin_function
DECL|function|subElementRect
name|QRect
name|QFusionStyle
operator|::
name|subElementRect
parameter_list|(
name|SubElement
name|sr
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|opt
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|w
parameter_list|)
specifier|const
block|{
name|QRect
name|r
init|=
name|QCommonStyle
operator|::
name|subElementRect
argument_list|(
name|sr
argument_list|,
name|opt
argument_list|,
name|w
argument_list|)
decl_stmt|;
switch|switch
condition|(
name|sr
condition|)
block|{
case|case
name|SE_ProgressBarLabel
case|:
case|case
name|SE_ProgressBarContents
case|:
case|case
name|SE_ProgressBarGroove
case|:
return|return
name|opt
operator|->
name|rect
return|;
case|case
name|SE_PushButtonFocusRect
case|:
name|r
operator|.
name|adjust
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
break|break;
case|case
name|SE_DockWidgetTitleBarText
case|:
block|{
if|if
condition|(
specifier|const
name|QStyleOptionDockWidget
modifier|*
name|titlebar
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionDockWidget
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|bool
name|verticalTitleBar
init|=
name|titlebar
operator|->
name|verticalTitleBar
decl_stmt|;
if|if
condition|(
name|verticalTitleBar
condition|)
block|{
name|r
operator|.
name|adjust
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|4
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|opt
operator|->
name|direction
operator|==
name|Qt
operator|::
name|LeftToRight
condition|)
name|r
operator|.
name|adjust
argument_list|(
literal|4
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
else|else
name|r
operator|.
name|adjust
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|4
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
break|break;
block|}
default|default:
break|break;
block|}
return|return
name|r
return|;
block|}
end_function
begin_comment
comment|/*!     \reimp */
end_comment
begin_function
DECL|function|standardIcon
name|QIcon
name|QFusionStyle
operator|::
name|standardIcon
parameter_list|(
name|StandardPixmap
name|standardIcon
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|option
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
return|return
name|QCommonStyle
operator|::
name|standardIcon
argument_list|(
name|standardIcon
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
return|;
block|}
end_function
begin_comment
comment|/*!  \reimp  */
end_comment
begin_function
DECL|function|standardPixmap
name|QPixmap
name|QFusionStyle
operator|::
name|standardPixmap
parameter_list|(
name|StandardPixmap
name|standardPixmap
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|opt
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
ifndef|#
directive|ifndef
name|QT_NO_IMAGEFORMAT_XPM
switch|switch
condition|(
name|standardPixmap
condition|)
block|{
case|case
name|SP_TitleBarNormalButton
case|:
return|return
name|QPixmap
argument_list|(
operator|(
specifier|const
name|char
operator|*
operator|*
operator|)
name|dock_widget_restore_xpm
argument_list|)
return|;
case|case
name|SP_TitleBarMinButton
case|:
return|return
name|QPixmap
argument_list|(
operator|(
specifier|const
name|char
operator|*
operator|*
operator|)
name|workspace_minimize
argument_list|)
return|;
case|case
name|SP_TitleBarCloseButton
case|:
case|case
name|SP_DockWidgetCloseButton
case|:
return|return
name|QPixmap
argument_list|(
operator|(
specifier|const
name|char
operator|*
operator|*
operator|)
name|dock_widget_close_xpm
argument_list|)
return|;
default|default:
break|break;
block|}
endif|#
directive|endif
comment|//QT_NO_IMAGEFORMAT_XPM
return|return
name|QCommonStyle
operator|::
name|standardPixmap
argument_list|(
name|standardPixmap
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
return|;
block|}
end_function
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_STYLE_FUSION || QT_PLUGIN
end_comment
end_unit
