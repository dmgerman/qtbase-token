begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"qgtkpainter_p.h"
end_include
begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_NO_STYLE_GTK
argument_list|)
end_if
begin_include
include|#
directive|include
file|<private/qhexstring_p.h>
end_include
begin_function
name|QT_BEGIN_NAMESPACE
DECL|function|QGtkPainter
name|QGtkPainter
operator|::
name|QGtkPainter
parameter_list|()
block|{
name|reset
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_destructor
DECL|function|~QGtkPainter
name|QGtkPainter
operator|::
name|~
name|QGtkPainter
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|reset
name|void
name|QGtkPainter
operator|::
name|reset
parameter_list|(
name|QPainter
modifier|*
name|painter
parameter_list|)
block|{
name|m_painter
operator|=
name|painter
expr_stmt|;
name|m_alpha
operator|=
literal|true
expr_stmt|;
name|m_hflipped
operator|=
literal|false
expr_stmt|;
name|m_vflipped
operator|=
literal|false
expr_stmt|;
name|m_usePixmapCache
operator|=
literal|true
expr_stmt|;
name|m_cliprect
operator|=
name|QRect
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|uniqueName
name|QString
name|QGtkPainter
operator|::
name|uniqueName
parameter_list|(
specifier|const
name|QString
modifier|&
name|key
parameter_list|,
name|GtkStateType
name|state
parameter_list|,
name|GtkShadowType
name|shadow
parameter_list|,
specifier|const
name|QSize
modifier|&
name|size
parameter_list|,
name|GtkWidget
modifier|*
name|widget
parameter_list|)
block|{
comment|// Note the widget arg should ideally use the widget path, though would compromise performance
name|QString
name|tmp
init|=
name|key
operator|%
name|HexString
argument_list|<
name|uint
argument_list|>
argument_list|(
name|state
argument_list|)
operator|%
name|HexString
argument_list|<
name|uint
argument_list|>
argument_list|(
name|shadow
argument_list|)
operator|%
name|HexString
argument_list|<
name|uint
argument_list|>
argument_list|(
name|size
operator|.
name|width
argument_list|()
argument_list|)
operator|%
name|HexString
argument_list|<
name|uint
argument_list|>
argument_list|(
name|size
operator|.
name|height
argument_list|()
argument_list|)
operator|%
name|HexString
argument_list|<
name|quint64
argument_list|>
argument_list|(
name|quint64
argument_list|(
name|widget
argument_list|)
argument_list|)
decl_stmt|;
return|return
name|tmp
return|;
block|}
end_function
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|//!defined(QT_NO_STYLE_GTK)
end_comment
end_unit
