begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/ ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"qcleanlooksstyle.h"
end_include
begin_include
include|#
directive|include
file|"qcleanlooksstyle_p.h"
end_include
begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_NO_STYLE_CLEANLOOKS
argument_list|)
operator|||
name|defined
argument_list|(
name|QT_PLUGIN
argument_list|)
end_if
begin_include
include|#
directive|include
file|"qwindowsstyle_p.h"
end_include
begin_include
include|#
directive|include
file|<qcombobox.h>
end_include
begin_include
include|#
directive|include
file|<qpushbutton.h>
end_include
begin_include
include|#
directive|include
file|<qpainter.h>
end_include
begin_include
include|#
directive|include
file|<qdir.h>
end_include
begin_include
include|#
directive|include
file|<qhash.h>
end_include
begin_include
include|#
directive|include
file|<qstyleoption.h>
end_include
begin_include
include|#
directive|include
file|<qapplication.h>
end_include
begin_include
include|#
directive|include
file|<qmainwindow.h>
end_include
begin_include
include|#
directive|include
file|<qfont.h>
end_include
begin_include
include|#
directive|include
file|<qgroupbox.h>
end_include
begin_include
include|#
directive|include
file|<qprocess.h>
end_include
begin_include
include|#
directive|include
file|<qpixmapcache.h>
end_include
begin_include
include|#
directive|include
file|<qdialogbuttonbox.h>
end_include
begin_include
include|#
directive|include
file|<qscrollbar.h>
end_include
begin_include
include|#
directive|include
file|<qspinbox.h>
end_include
begin_include
include|#
directive|include
file|<qslider.h>
end_include
begin_include
include|#
directive|include
file|<qsplitter.h>
end_include
begin_include
include|#
directive|include
file|<qprogressbar.h>
end_include
begin_include
include|#
directive|include
file|<qtoolbar.h>
end_include
begin_include
include|#
directive|include
file|<qwizard.h>
end_include
begin_include
include|#
directive|include
file|<qlibrary.h>
end_include
begin_include
include|#
directive|include
file|<private/qstylehelper_p.h>
end_include
begin_macro
name|QT_BEGIN_NAMESPACE
end_macro
begin_using
using|using
namespace|namespace
name|QStyleHelper
namespace|;
end_using
begin_enum
DECL|enum|Direction
enum|enum
name|Direction
block|{
DECL|enumerator|TopDown
name|TopDown
block|,
DECL|enumerator|FromLeft
name|FromLeft
block|,
DECL|enumerator|BottomUp
name|BottomUp
block|,
DECL|enumerator|FromRight
name|FromRight
block|}
enum|;
end_enum
begin_comment
comment|// from windows style
end_comment
begin_decl_stmt
DECL|variable|windowsItemFrame
specifier|static
specifier|const
name|int
name|windowsItemFrame
init|=
literal|2
decl_stmt|;
end_decl_stmt
begin_comment
DECL|variable|windowsItemFrame
comment|// menu item frame width
end_comment
begin_decl_stmt
DECL|variable|windowsItemHMargin
specifier|static
specifier|const
name|int
name|windowsItemHMargin
init|=
literal|3
decl_stmt|;
end_decl_stmt
begin_comment
DECL|variable|windowsItemHMargin
comment|// menu item hor text margin
end_comment
begin_decl_stmt
DECL|variable|windowsItemVMargin
specifier|static
specifier|const
name|int
name|windowsItemVMargin
init|=
literal|8
decl_stmt|;
end_decl_stmt
begin_comment
DECL|variable|windowsItemVMargin
comment|// menu item ver text margin
end_comment
begin_decl_stmt
DECL|variable|windowsRightBorder
specifier|static
specifier|const
name|int
name|windowsRightBorder
init|=
literal|15
decl_stmt|;
end_decl_stmt
begin_comment
DECL|variable|windowsRightBorder
comment|// right border on windows
end_comment
begin_comment
comment|/* XPM */
end_comment
begin_decl_stmt
DECL|variable|dock_widget_close_xpm
specifier|static
specifier|const
name|char
modifier|*
specifier|const
name|dock_widget_close_xpm
index|[]
init|=
block|{
literal|"11 13 7 1"
block|,
literal|" 	c None"
block|,
literal|".	c #D5CFCB"
block|,
literal|"+	c #8F8B88"
block|,
literal|"@	c #6C6A67"
block|,
literal|"#	c #ABA6A3"
block|,
literal|"$	c #B5B0AC"
block|,
literal|"%	c #A4A09D"
block|,
literal|"           "
block|,
literal|" +@@@@@@@+ "
block|,
literal|"+#       #+"
block|,
literal|"@ $@   @$ @"
block|,
literal|"@ @@@ @@@ @"
block|,
literal|"@  @@@@@  @"
block|,
literal|"@   @@@   @"
block|,
literal|"@  @@@@@  @"
block|,
literal|"@ @@@ @@@ @"
block|,
literal|"@ $@   @$ @"
block|,
literal|"+%       #+"
block|,
literal|" +@@@@@@@+ "
block|,
literal|"           "
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|qt_cleanlooks_arrow_down_xpm
specifier|static
specifier|const
name|char
modifier|*
specifier|const
name|qt_cleanlooks_arrow_down_xpm
index|[]
init|=
block|{
literal|"11 7 2 1"
block|,
literal|" 	c None"
block|,
literal|"x	c #000000"
block|,
literal|"           "
block|,
literal|"  x     x  "
block|,
literal|" xxx   xxx "
block|,
literal|"  xxxxxxx  "
block|,
literal|"   xxxxx   "
block|,
literal|"    xxx    "
block|,
literal|"     x     "
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|qt_cleanlooks_arrow_up_xpm
specifier|static
specifier|const
name|char
modifier|*
specifier|const
name|qt_cleanlooks_arrow_up_xpm
index|[]
init|=
block|{
literal|"11 7 2 1"
block|,
literal|" 	c None"
block|,
literal|"x	c #000000"
block|,
literal|"     x     "
block|,
literal|"    xxx    "
block|,
literal|"   xxxxx   "
block|,
literal|"  xxxxxxx  "
block|,
literal|" xxx   xxx "
block|,
literal|"  x     x  "
block|,
literal|"           "
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|dock_widget_restore_xpm
specifier|static
specifier|const
name|char
modifier|*
specifier|const
name|dock_widget_restore_xpm
index|[]
init|=
block|{
literal|"11 13 7 1"
block|,
literal|" 	c None"
block|,
literal|".	c #D5CFCB"
block|,
literal|"+	c #8F8B88"
block|,
literal|"@	c #6C6A67"
block|,
literal|"#	c #ABA6A3"
block|,
literal|"$	c #B5B0AC"
block|,
literal|"%	c #A4A09D"
block|,
literal|"           "
block|,
literal|" +@@@@@@@+ "
block|,
literal|"+#       #+"
block|,
literal|"@   #@@@# @"
block|,
literal|"@   @   @ @"
block|,
literal|"@ #@@@# @ @"
block|,
literal|"@ @   @ @ @"
block|,
literal|"@ @   @@@ @"
block|,
literal|"@ @   @   @"
block|,
literal|"@ #@@@#   @"
block|,
literal|"+%       #+"
block|,
literal|" +@@@@@@@+ "
block|,
literal|"           "
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|workspace_minimize
specifier|static
specifier|const
name|char
modifier|*
specifier|const
name|workspace_minimize
index|[]
init|=
block|{
literal|"11 13 7 1"
block|,
literal|" 	c None"
block|,
literal|".	c #D5CFCB"
block|,
literal|"+	c #8F8B88"
block|,
literal|"@	c #6C6A67"
block|,
literal|"#	c #ABA6A3"
block|,
literal|"$	c #B5B0AC"
block|,
literal|"%	c #A4A09D"
block|,
literal|"           "
block|,
literal|" +@@@@@@@+ "
block|,
literal|"+#       #+"
block|,
literal|"@         @"
block|,
literal|"@         @"
block|,
literal|"@         @"
block|,
literal|"@ @@@@@@@ @"
block|,
literal|"@ @@@@@@@ @"
block|,
literal|"@         @"
block|,
literal|"@         @"
block|,
literal|"+%       #+"
block|,
literal|" +@@@@@@@+ "
block|,
literal|"           "
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|qt_titlebar_context_help
specifier|static
specifier|const
name|char
modifier|*
specifier|const
name|qt_titlebar_context_help
index|[]
init|=
block|{
literal|"10 10 3 1"
block|,
literal|"  c None"
block|,
literal|"# c #000000"
block|,
literal|"+ c #444444"
block|,
literal|"  +####+  "
block|,
literal|" ###  ### "
block|,
literal|" ##    ## "
block|,
literal|"     +##+ "
block|,
literal|"    +##   "
block|,
literal|"    ##    "
block|,
literal|"    ##    "
block|,
literal|"          "
block|,
literal|"    ##    "
block|,
literal|"    ##    "
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|qt_cleanlooks_radiobutton
specifier|static
specifier|const
name|char
modifier|*
specifier|const
name|qt_cleanlooks_radiobutton
index|[]
init|=
block|{
literal|"13 13 9 1"
block|,
literal|" 	c None"
block|,
literal|".	c #ABA094"
block|,
literal|"+	c #B7ADA0"
block|,
literal|"@	c #C4BBB2"
block|,
literal|"#	c #DDD4CD"
block|,
literal|"$	c #E7E1E0"
block|,
literal|"%	c #F4EFED"
block|,
literal|"&	c #FFFAF9"
block|,
literal|"*	c #FCFEFB"
block|,
literal|"   #@...@#   "
block|,
literal|"  @+@#$$#+@  "
block|,
literal|" @+$%%***&@@ "
block|,
literal|"#+$%**&&**&+#"
block|,
literal|"@@$&&******#@"
block|,
literal|".#**********."
block|,
literal|".$&******&*&."
block|,
literal|".$*&******&*."
block|,
literal|"+#********&#@"
block|,
literal|"#+*********+#"
block|,
literal|" @@*******@@ "
block|,
literal|"  @+#%*%#+@  "
block|,
literal|"   #@...+#   "
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|qt_cleanlooks_radiobutton_checked
specifier|static
specifier|const
name|char
modifier|*
specifier|const
name|qt_cleanlooks_radiobutton_checked
index|[]
init|=
block|{
literal|"13 13 20 1"
block|,
literal|" 	c None"
block|,
literal|".	c #A8ABAE"
block|,
literal|"+	c #596066"
block|,
literal|"@	c #283138"
block|,
literal|"#	c #A9ACAF"
block|,
literal|"$	c #A6A9AB"
block|,
literal|"%	c #6B7378"
block|,
literal|"&	c #8C9296"
block|,
literal|"*	c #A2A6AA"
block|,
literal|"=	c #61696F"
block|,
literal|"-	c #596065"
block|,
literal|";	c #93989C"
block|,
literal|">	c #777E83"
block|,
literal|",	c #60686E"
block|,
literal|"'	c #252D33"
block|,
literal|")	c #535B62"
block|,
literal|"!	c #21292E"
block|,
literal|"~	c #242B31"
block|,
literal|"{	c #1F262B"
block|,
literal|"]	c #41484E"
block|,
literal|"             "
block|,
literal|"             "
block|,
literal|"             "
block|,
literal|"    .+@+#    "
block|,
literal|"   $%&*&=#   "
block|,
literal|"   -&;>,'+   "
block|,
literal|"   @*>,)!@   "
block|,
literal|"   +&,)~{+   "
block|,
literal|"   #='!{]#   "
block|,
literal|"    #+@+#    "
block|,
literal|"             "
block|,
literal|"             "
block|,
literal|"             "
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|qt_scrollbar_button_arrow_left
specifier|static
specifier|const
name|char
modifier|*
specifier|const
name|qt_scrollbar_button_arrow_left
index|[]
init|=
block|{
literal|"4 7 2 1"
block|,
literal|"   c None"
block|,
literal|"*  c #BFBFBF"
block|,
literal|"   *"
block|,
literal|"  **"
block|,
literal|" ***"
block|,
literal|"****"
block|,
literal|" ***"
block|,
literal|"  **"
block|,
literal|"   *"
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|qt_scrollbar_button_arrow_right
specifier|static
specifier|const
name|char
modifier|*
specifier|const
name|qt_scrollbar_button_arrow_right
index|[]
init|=
block|{
literal|"4 7 2 1"
block|,
literal|"   c None"
block|,
literal|"*  c #BFBFBF"
block|,
literal|"*   "
block|,
literal|"**  "
block|,
literal|"*** "
block|,
literal|"****"
block|,
literal|"*** "
block|,
literal|"**  "
block|,
literal|"*   "
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|qt_scrollbar_button_arrow_up
specifier|static
specifier|const
name|char
modifier|*
specifier|const
name|qt_scrollbar_button_arrow_up
index|[]
init|=
block|{
literal|"7 4 2 1"
block|,
literal|"   c None"
block|,
literal|"*  c #BFBFBF"
block|,
literal|"   *   "
block|,
literal|"  ***  "
block|,
literal|" ***** "
block|,
literal|"*******"
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|qt_scrollbar_button_arrow_down
specifier|static
specifier|const
name|char
modifier|*
specifier|const
name|qt_scrollbar_button_arrow_down
index|[]
init|=
block|{
literal|"7 4 2 1"
block|,
literal|"   c None"
block|,
literal|"*  c #BFBFBF"
block|,
literal|"*******"
block|,
literal|" ***** "
block|,
literal|"  ***  "
block|,
literal|"   *   "
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|qt_spinbox_button_arrow_down
specifier|static
specifier|const
name|char
modifier|*
specifier|const
name|qt_spinbox_button_arrow_down
index|[]
init|=
block|{
literal|"7 4 2 1"
block|,
literal|"   c None"
block|,
literal|"*  c #BFBFBF"
block|,
literal|"*******"
block|,
literal|" ***** "
block|,
literal|"  ***  "
block|,
literal|"   *   "
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|qt_spinbox_button_arrow_up
specifier|static
specifier|const
name|char
modifier|*
specifier|const
name|qt_spinbox_button_arrow_up
index|[]
init|=
block|{
literal|"7 4 2 1"
block|,
literal|"   c None"
block|,
literal|"*  c #BFBFBF"
block|,
literal|"   *   "
block|,
literal|"  ***  "
block|,
literal|" ***** "
block|,
literal|"*******"
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|qt_scrollbar_button_left
specifier|static
specifier|const
name|char
modifier|*
specifier|const
name|qt_scrollbar_button_left
index|[]
init|=
block|{
literal|"16 16 6 1"
block|,
literal|"   c None"
block|,
literal|".  c #BFBFBF"
block|,
literal|"+  c #979797"
block|,
literal|"#  c #FAFAFA"
block|,
literal|"<  c #FAFAFA"
block|,
literal|"*  c #FAFAFA"
block|,
literal|" .++++++++++++++"
block|,
literal|".+#############+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|".+<<<<<<<<<<<<<+"
block|,
literal|" .++++++++++++++"
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|qt_scrollbar_button_right
specifier|static
specifier|const
name|char
modifier|*
specifier|const
name|qt_scrollbar_button_right
index|[]
init|=
block|{
literal|"16 16 6 1"
block|,
literal|"   c None"
block|,
literal|".  c #BFBFBF"
block|,
literal|"+  c #979797"
block|,
literal|"#  c #FAFAFA"
block|,
literal|"<  c #FAFAFA"
block|,
literal|"*  c #FAFAFA"
block|,
literal|"++++++++++++++. "
block|,
literal|"+#############+."
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+<<<<<<<<<<<<<+."
block|,
literal|"++++++++++++++. "
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|qt_scrollbar_button_up
specifier|static
specifier|const
name|char
modifier|*
specifier|const
name|qt_scrollbar_button_up
index|[]
init|=
block|{
literal|"16 16 6 1"
block|,
literal|"   c None"
block|,
literal|".  c #BFBFBF"
block|,
literal|"+  c #979797"
block|,
literal|"#  c #FAFAFA"
block|,
literal|"<  c #FAFAFA"
block|,
literal|"*  c #FAFAFA"
block|,
literal|" .++++++++++++. "
block|,
literal|".+############+."
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+<<<<<<<<<<<<<<+"
block|,
literal|"++++++++++++++++"
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|qt_scrollbar_button_down
specifier|static
specifier|const
name|char
modifier|*
specifier|const
name|qt_scrollbar_button_down
index|[]
init|=
block|{
literal|"16 16 6 1"
block|,
literal|"   c None"
block|,
literal|".  c #BFBFBF"
block|,
literal|"+  c #979797"
block|,
literal|"#  c #FAFAFA"
block|,
literal|"<  c #FAFAFA"
block|,
literal|"*  c #FAFAFA"
block|,
literal|"++++++++++++++++"
block|,
literal|"+##############+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|"+#<+"
block|,
literal|".+<<<<<<<<<<<<+."
block|,
literal|" .++++++++++++. "
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|qt_cleanlooks_menuitem_checkbox_checked
specifier|static
specifier|const
name|char
modifier|*
specifier|const
name|qt_cleanlooks_menuitem_checkbox_checked
index|[]
init|=
block|{
literal|"8 7 6 1"
block|,
literal|" 	g None"
block|,
literal|".	g #959595"
block|,
literal|"+	g #676767"
block|,
literal|"@	g #454545"
block|,
literal|"#	g #1D1D1D"
block|,
literal|"0	g #101010"
block|,
literal|"      .."
block|,
literal|"     .+ "
block|,
literal|"    .+  "
block|,
literal|"0  .@   "
block|,
literal|"@#++.   "
block|,
literal|"  @#    "
block|,
literal|"   .    "
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|qt_cleanlooks_checkbox_checked
specifier|static
specifier|const
name|char
modifier|*
specifier|const
name|qt_cleanlooks_checkbox_checked
index|[]
init|=
block|{
literal|"13 13 3 1"
block|,
literal|" 	c None"
block|,
literal|".	c #272D33"
block|,
literal|"%	c #666666"
block|,
literal|"             "
block|,
literal|"          %  "
block|,
literal|"         %.  "
block|,
literal|"        %.%  "
block|,
literal|"       %..   "
block|,
literal|"  %.% %..    "
block|,
literal|"  %..%..%    "
block|,
literal|"   %...%     "
block|,
literal|"    %..%     "
block|,
literal|"     %.%     "
block|,
literal|"      %      "
block|,
literal|"             "
block|,
literal|"             "
block|}
decl_stmt|;
end_decl_stmt
begin_function
DECL|function|qt_cleanlooks_draw_gradient
specifier|static
name|void
name|qt_cleanlooks_draw_gradient
parameter_list|(
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QRect
modifier|&
name|rect
parameter_list|,
specifier|const
name|QColor
modifier|&
name|gradientStart
parameter_list|,
specifier|const
name|QColor
modifier|&
name|gradientStop
parameter_list|,
name|Direction
name|direction
init|=
name|TopDown
parameter_list|,
name|QBrush
name|bgBrush
init|=
name|QBrush
argument_list|()
parameter_list|)
block|{
name|int
name|x
init|=
name|rect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
decl_stmt|;
name|int
name|y
init|=
name|rect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
decl_stmt|;
name|QLinearGradient
modifier|*
name|gradient
decl_stmt|;
switch|switch
condition|(
name|direction
condition|)
block|{
case|case
name|FromLeft
case|:
name|gradient
operator|=
operator|new
name|QLinearGradient
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|y
argument_list|,
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|y
argument_list|)
expr_stmt|;
break|break;
case|case
name|FromRight
case|:
name|gradient
operator|=
operator|new
name|QLinearGradient
argument_list|(
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|y
argument_list|,
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|y
argument_list|)
expr_stmt|;
break|break;
case|case
name|BottomUp
case|:
name|gradient
operator|=
operator|new
name|QLinearGradient
argument_list|(
name|x
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
argument_list|,
name|x
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|TopDown
case|:
default|default:
name|gradient
operator|=
operator|new
name|QLinearGradient
argument_list|(
name|x
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|x
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
break|break;
block|}
if|if
condition|(
name|bgBrush
operator|.
name|gradient
argument_list|()
condition|)
name|gradient
operator|->
name|setStops
argument_list|(
name|bgBrush
operator|.
name|gradient
argument_list|()
operator|->
name|stops
argument_list|()
argument_list|)
expr_stmt|;
else|else
block|{
name|gradient
operator|->
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|gradientStart
argument_list|)
expr_stmt|;
name|gradient
operator|->
name|setColorAt
argument_list|(
literal|1
argument_list|,
name|gradientStop
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|fillRect
argument_list|(
name|rect
argument_list|,
operator|*
name|gradient
argument_list|)
expr_stmt|;
operator|delete
name|gradient
expr_stmt|;
block|}
end_function
begin_function
DECL|function|qt_cleanlooks_draw_buttongradient
specifier|static
name|void
name|qt_cleanlooks_draw_buttongradient
parameter_list|(
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QRect
modifier|&
name|rect
parameter_list|,
specifier|const
name|QColor
modifier|&
name|gradientStart
parameter_list|,
specifier|const
name|QColor
modifier|&
name|gradientMid
parameter_list|,
specifier|const
name|QColor
modifier|&
name|gradientStop
parameter_list|,
name|Direction
name|direction
init|=
name|TopDown
parameter_list|,
name|QBrush
name|bgBrush
init|=
name|QBrush
argument_list|()
parameter_list|)
block|{
name|int
name|x
init|=
name|rect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
decl_stmt|;
name|int
name|y
init|=
name|rect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
decl_stmt|;
name|QLinearGradient
modifier|*
name|gradient
decl_stmt|;
name|bool
name|horizontal
init|=
literal|false
decl_stmt|;
switch|switch
condition|(
name|direction
condition|)
block|{
case|case
name|FromLeft
case|:
name|horizontal
operator|=
literal|true
expr_stmt|;
name|gradient
operator|=
operator|new
name|QLinearGradient
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|y
argument_list|,
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|y
argument_list|)
expr_stmt|;
break|break;
case|case
name|FromRight
case|:
name|horizontal
operator|=
literal|true
expr_stmt|;
name|gradient
operator|=
operator|new
name|QLinearGradient
argument_list|(
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|y
argument_list|,
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|y
argument_list|)
expr_stmt|;
break|break;
case|case
name|BottomUp
case|:
name|gradient
operator|=
operator|new
name|QLinearGradient
argument_list|(
name|x
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
argument_list|,
name|x
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|TopDown
case|:
default|default:
name|gradient
operator|=
operator|new
name|QLinearGradient
argument_list|(
name|x
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|x
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
break|break;
block|}
if|if
condition|(
name|bgBrush
operator|.
name|gradient
argument_list|()
condition|)
name|gradient
operator|->
name|setStops
argument_list|(
name|bgBrush
operator|.
name|gradient
argument_list|()
operator|->
name|stops
argument_list|()
argument_list|)
expr_stmt|;
else|else
block|{
name|int
name|size
init|=
name|horizontal
condition|?
name|rect
operator|.
name|width
argument_list|()
else|:
name|rect
operator|.
name|height
argument_list|()
decl_stmt|;
if|if
condition|(
name|size
operator|>
literal|4
condition|)
block|{
name|float
name|edge
init|=
literal|4.0
operator|/
operator|(
name|float
operator|)
name|size
decl_stmt|;
name|gradient
operator|->
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|gradientStart
argument_list|)
expr_stmt|;
name|gradient
operator|->
name|setColorAt
argument_list|(
name|edge
argument_list|,
name|gradientMid
operator|.
name|lighter
argument_list|(
literal|104
argument_list|)
argument_list|)
expr_stmt|;
name|gradient
operator|->
name|setColorAt
argument_list|(
literal|1.0
operator|-
name|edge
argument_list|,
name|gradientMid
operator|.
name|darker
argument_list|(
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|gradient
operator|->
name|setColorAt
argument_list|(
literal|1.0
argument_list|,
name|gradientStop
argument_list|)
expr_stmt|;
block|}
block|}
name|painter
operator|->
name|fillRect
argument_list|(
name|rect
argument_list|,
operator|*
name|gradient
argument_list|)
expr_stmt|;
operator|delete
name|gradient
expr_stmt|;
block|}
end_function
begin_function
DECL|function|qt_cleanlooks_draw_mdibutton
specifier|static
name|void
name|qt_cleanlooks_draw_mdibutton
parameter_list|(
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QStyleOptionTitleBar
modifier|*
name|option
parameter_list|,
specifier|const
name|QRect
modifier|&
name|tmp
parameter_list|,
name|bool
name|hover
parameter_list|,
name|bool
name|sunken
parameter_list|)
block|{
name|QColor
name|dark
decl_stmt|;
name|dark
operator|.
name|setHsv
argument_list|(
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|hue
argument_list|()
argument_list|,
name|qMin
argument_list|(
literal|255
argument_list|,
call|(
name|int
call|)
argument_list|(
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|saturation
argument_list|()
operator|*
literal|1.9
argument_list|)
argument_list|)
argument_list|,
name|qMin
argument_list|(
literal|255
argument_list|,
call|(
name|int
call|)
argument_list|(
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|value
argument_list|()
operator|*
literal|0.7
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QColor
name|highlight
init|=
name|option
operator|->
name|palette
operator|.
name|highlight
argument_list|()
operator|.
name|color
argument_list|()
decl_stmt|;
name|bool
name|active
init|=
operator|(
name|option
operator|->
name|titleBarState
operator|&
name|QStyle
operator|::
name|State_Active
operator|)
decl_stmt|;
name|QColor
name|titleBarHighlight
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|,
literal|60
argument_list|)
decl_stmt|;
if|if
condition|(
name|sunken
condition|)
name|painter
operator|->
name|fillRect
argument_list|(
name|tmp
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|option
operator|->
name|palette
operator|.
name|highlight
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|120
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|hover
condition|)
name|painter
operator|->
name|fillRect
argument_list|(
name|tmp
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|QColor
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|,
literal|20
argument_list|)
argument_list|)
expr_stmt|;
name|QColor
name|mdiButtonGradientStartColor
decl_stmt|;
name|QColor
name|mdiButtonGradientStopColor
decl_stmt|;
name|mdiButtonGradientStartColor
operator|=
name|QColor
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|40
argument_list|)
expr_stmt|;
name|mdiButtonGradientStopColor
operator|=
name|QColor
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|,
literal|60
argument_list|)
expr_stmt|;
if|if
condition|(
name|sunken
condition|)
name|titleBarHighlight
operator|=
name|highlight
operator|.
name|darker
argument_list|(
literal|130
argument_list|)
expr_stmt|;
name|QLinearGradient
name|gradient
argument_list|(
name|tmp
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|tmp
operator|.
name|top
argument_list|()
argument_list|,
name|tmp
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|tmp
operator|.
name|bottom
argument_list|()
argument_list|)
decl_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|mdiButtonGradientStartColor
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|1
argument_list|,
name|mdiButtonGradientStopColor
argument_list|)
expr_stmt|;
name|QColor
name|mdiButtonBorderColor
argument_list|(
name|active
condition|?
name|option
operator|->
name|palette
operator|.
name|highlight
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|180
argument_list|)
else|:
name|dark
operator|.
name|darker
argument_list|(
literal|110
argument_list|)
argument_list|)
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|mdiButtonBorderColor
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
specifier|const
name|QLine
name|lines
index|[
literal|4
index|]
init|=
block|{
name|QLine
argument_list|(
name|tmp
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|tmp
operator|.
name|top
argument_list|()
argument_list|,
name|tmp
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|tmp
operator|.
name|top
argument_list|()
argument_list|)
block|,
name|QLine
argument_list|(
name|tmp
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|tmp
operator|.
name|bottom
argument_list|()
argument_list|,
name|tmp
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|tmp
operator|.
name|bottom
argument_list|()
argument_list|)
block|,
name|QLine
argument_list|(
name|tmp
operator|.
name|left
argument_list|()
argument_list|,
name|tmp
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|,
name|tmp
operator|.
name|left
argument_list|()
argument_list|,
name|tmp
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
block|,
name|QLine
argument_list|(
argument|tmp.right()
argument_list|,
argument|tmp.top() +
literal|2
argument_list|,
argument|tmp.right()
argument_list|,
argument|tmp.bottom() -
literal|2
argument_list|)
block|}
decl_stmt|;
name|painter
operator|->
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|4
argument_list|)
expr_stmt|;
specifier|const
name|QPoint
name|points
index|[
literal|4
index|]
init|=
block|{
name|QPoint
argument_list|(
name|tmp
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|tmp
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
name|tmp
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|tmp
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
name|tmp
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|tmp
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
argument|tmp.right() -
literal|1
argument_list|,
argument|tmp.bottom() -
literal|1
argument_list|)
block|}
decl_stmt|;
name|painter
operator|->
name|drawPoints
argument_list|(
name|points
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|titleBarHighlight
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|tmp
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|tmp
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|tmp
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|tmp
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|tmp
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|tmp
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|,
name|tmp
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|tmp
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|gradient
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|tmp
operator|.
name|right
argument_list|()
operator|+
literal|1
argument_list|,
name|tmp
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|,
name|tmp
operator|.
name|right
argument_list|()
operator|+
literal|1
argument_list|,
name|tmp
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPoint
argument_list|(
name|tmp
operator|.
name|right
argument_list|()
argument_list|,
name|tmp
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|tmp
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|tmp
operator|.
name|bottom
argument_list|()
operator|+
literal|1
argument_list|,
name|tmp
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|tmp
operator|.
name|bottom
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPoint
argument_list|(
name|tmp
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|tmp
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPoint
argument_list|(
name|tmp
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|tmp
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPoint
argument_list|(
name|tmp
operator|.
name|right
argument_list|()
argument_list|,
name|tmp
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|/*!     \class QCleanlooksStyle     \brief The QCleanlooksStyle class provides a widget style similar to the     Clearlooks style available in GNOME.     \since 4.2      \inmodule QtWidgets       The Cleanlooks style provides a look and feel for widgets     that closely resembles the Clearlooks style, introduced by Richard     Stellingwerff and Daniel Borgmann.      \sa {Cleanlooks Style Widget Gallery}, QWindowsXPStyle, QMacStyle, QWindowsStyle,         QCDEStyle, QMotifStyle, QPlastiqueStyle */
end_comment
begin_comment
comment|/*!     Constructs a QCleanlooksStyle object. */
end_comment
begin_constructor
DECL|function|QCleanlooksStyle
name|QCleanlooksStyle
operator|::
name|QCleanlooksStyle
parameter_list|()
member_init_list|:
name|QWindowsStyle
argument_list|(
operator|*
operator|new
name|QCleanlooksStylePrivate
argument_list|)
block|{
name|setObjectName
argument_list|(
name|QLatin1String
argument_list|(
literal|"CleanLooks"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_comment
comment|/*!     \internal      Constructs a QCleanlooksStyle object. */
end_comment
begin_constructor
DECL|function|QCleanlooksStyle
name|QCleanlooksStyle
operator|::
name|QCleanlooksStyle
parameter_list|(
name|QCleanlooksStylePrivate
modifier|&
name|dd
parameter_list|)
member_init_list|:
name|QWindowsStyle
argument_list|(
name|dd
argument_list|)
block|{ }
end_constructor
begin_comment
comment|/*!     Destroys the QCleanlooksStyle object. */
end_comment
begin_destructor
DECL|function|~QCleanlooksStyle
name|QCleanlooksStyle
operator|::
name|~
name|QCleanlooksStyle
parameter_list|()
block|{ }
end_destructor
begin_comment
comment|/*!     \fn void QCleanlooksStyle::drawItemText(QPainter *painter, const QRect&rectangle, int alignment, const QPalette&palette,                                     bool enabled, const QString& text, QPalette::ColorRole textRole) const      Draws the given \a text in the specified \a rectangle using the     provided \a painter and \a palette.      Text is drawn using the painter's pen. If an explicit \a textRole     is specified, then the text is drawn using the \a palette's color     for the specified role.  The \a enabled value indicates whether or     not the item is enabled; when reimplementing, this value should     influence how the item is drawn.      The text is aligned and wrapped according to the specified \a     alignment.      \sa Qt::Alignment */
end_comment
begin_function
DECL|function|drawItemText
name|void
name|QCleanlooksStyle
operator|::
name|drawItemText
parameter_list|(
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QRect
modifier|&
name|rect
parameter_list|,
name|int
name|alignment
parameter_list|,
specifier|const
name|QPalette
modifier|&
name|pal
parameter_list|,
name|bool
name|enabled
parameter_list|,
specifier|const
name|QString
modifier|&
name|text
parameter_list|,
name|QPalette
operator|::
name|ColorRole
name|textRole
parameter_list|)
specifier|const
block|{
if|if
condition|(
name|text
operator|.
name|isEmpty
argument_list|()
condition|)
return|return;
name|QPen
name|savedPen
init|=
name|painter
operator|->
name|pen
argument_list|()
decl_stmt|;
if|if
condition|(
name|textRole
operator|!=
name|QPalette
operator|::
name|NoRole
condition|)
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|pal
operator|.
name|brush
argument_list|(
name|textRole
argument_list|)
argument_list|,
name|savedPen
operator|.
name|widthF
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|enabled
condition|)
block|{
name|QPen
name|pen
init|=
name|painter
operator|->
name|pen
argument_list|()
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|pen
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|drawText
argument_list|(
name|rect
argument_list|,
name|alignment
argument_list|,
name|text
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|savedPen
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|mergedColors
specifier|static
name|QColor
name|mergedColors
parameter_list|(
specifier|const
name|QColor
modifier|&
name|colorA
parameter_list|,
specifier|const
name|QColor
modifier|&
name|colorB
parameter_list|,
name|int
name|factor
init|=
literal|50
parameter_list|)
block|{
specifier|const
name|int
name|maxFactor
init|=
literal|100
decl_stmt|;
name|QColor
name|tmp
init|=
name|colorA
decl_stmt|;
name|tmp
operator|.
name|setRed
argument_list|(
operator|(
name|tmp
operator|.
name|red
argument_list|()
operator|*
name|factor
operator|)
operator|/
name|maxFactor
operator|+
operator|(
name|colorB
operator|.
name|red
argument_list|()
operator|*
operator|(
name|maxFactor
operator|-
name|factor
operator|)
operator|)
operator|/
name|maxFactor
argument_list|)
expr_stmt|;
name|tmp
operator|.
name|setGreen
argument_list|(
operator|(
name|tmp
operator|.
name|green
argument_list|()
operator|*
name|factor
operator|)
operator|/
name|maxFactor
operator|+
operator|(
name|colorB
operator|.
name|green
argument_list|()
operator|*
operator|(
name|maxFactor
operator|-
name|factor
operator|)
operator|)
operator|/
name|maxFactor
argument_list|)
expr_stmt|;
name|tmp
operator|.
name|setBlue
argument_list|(
operator|(
name|tmp
operator|.
name|blue
argument_list|()
operator|*
name|factor
operator|)
operator|/
name|maxFactor
operator|+
operator|(
name|colorB
operator|.
name|blue
argument_list|()
operator|*
operator|(
name|maxFactor
operator|-
name|factor
operator|)
operator|)
operator|/
name|maxFactor
argument_list|)
expr_stmt|;
return|return
name|tmp
return|;
block|}
end_function
begin_comment
comment|/*!     \reimp */
end_comment
begin_function
DECL|function|drawPrimitive
name|void
name|QCleanlooksStyle
operator|::
name|drawPrimitive
parameter_list|(
name|PrimitiveElement
name|elem
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|option
parameter_list|,
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
name|Q_ASSERT
argument_list|(
name|option
argument_list|)
expr_stmt|;
name|QRect
name|rect
init|=
name|option
operator|->
name|rect
decl_stmt|;
name|int
name|state
init|=
name|option
operator|->
name|state
decl_stmt|;
name|QColor
name|button
init|=
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
operator|.
name|color
argument_list|()
decl_stmt|;
name|QColor
name|buttonShadow
init|=
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|110
argument_list|)
decl_stmt|;
name|QColor
name|buttonShadowAlpha
init|=
name|buttonShadow
decl_stmt|;
name|buttonShadowAlpha
operator|.
name|setAlpha
argument_list|(
literal|128
argument_list|)
expr_stmt|;
name|QColor
name|darkOutline
decl_stmt|;
name|QColor
name|dark
decl_stmt|;
name|darkOutline
operator|.
name|setHsv
argument_list|(
name|button
operator|.
name|hue
argument_list|()
argument_list|,
name|qMin
argument_list|(
literal|255
argument_list|,
call|(
name|int
call|)
argument_list|(
name|button
operator|.
name|saturation
argument_list|()
operator|*
literal|3.0
argument_list|)
argument_list|)
argument_list|,
name|qMin
argument_list|(
literal|255
argument_list|,
call|(
name|int
call|)
argument_list|(
name|button
operator|.
name|value
argument_list|()
operator|*
literal|0.6
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|dark
operator|.
name|setHsv
argument_list|(
name|button
operator|.
name|hue
argument_list|()
argument_list|,
name|qMin
argument_list|(
literal|255
argument_list|,
call|(
name|int
call|)
argument_list|(
name|button
operator|.
name|saturation
argument_list|()
operator|*
literal|1.9
argument_list|)
argument_list|)
argument_list|,
name|qMin
argument_list|(
literal|255
argument_list|,
call|(
name|int
call|)
argument_list|(
name|button
operator|.
name|value
argument_list|()
operator|*
literal|0.7
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QColor
name|tabFrameColor
init|=
name|mergedColors
argument_list|(
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
name|dark
operator|.
name|lighter
argument_list|(
literal|135
argument_list|)
argument_list|,
literal|60
argument_list|)
decl_stmt|;
switch|switch
condition|(
name|elem
condition|)
block|{
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
case|case
name|PE_FrameTabBarBase
case|:
if|if
condition|(
specifier|const
name|QStyleOptionTabBarBase
modifier|*
name|tbb
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionTabBarBase
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|darkOutline
operator|.
name|lighter
argument_list|(
literal|110
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
switch|switch
condition|(
name|tbb
operator|->
name|shape
condition|)
block|{
case|case
name|QTabBar
operator|::
name|RoundedNorth
case|:
block|{
name|QRegion
name|region
argument_list|(
name|tbb
operator|->
name|rect
argument_list|)
decl_stmt|;
name|region
operator|-=
name|tbb
operator|->
name|selectedTabRect
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|tbb
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|tbb
operator|->
name|rect
operator|.
name|topRight
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setClipRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|light
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|tbb
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|tbb
operator|->
name|rect
operator|.
name|topRight
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|QTabBar
operator|::
name|RoundedWest
case|:
name|painter
operator|->
name|drawLine
argument_list|(
name|tbb
operator|->
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|tbb
operator|->
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|tbb
operator|->
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|tbb
operator|->
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|QTabBar
operator|::
name|RoundedSouth
case|:
name|painter
operator|->
name|drawLine
argument_list|(
name|tbb
operator|->
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|tbb
operator|->
name|rect
operator|.
name|bottom
argument_list|()
argument_list|,
name|tbb
operator|->
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|tbb
operator|->
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|QTabBar
operator|::
name|RoundedEast
case|:
name|painter
operator|->
name|drawLine
argument_list|(
name|tbb
operator|->
name|rect
operator|.
name|topRight
argument_list|()
argument_list|,
name|tbb
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|QTabBar
operator|::
name|TriangularNorth
case|:
case|case
name|QTabBar
operator|::
name|TriangularEast
case|:
case|case
name|QTabBar
operator|::
name|TriangularWest
case|:
case|case
name|QTabBar
operator|::
name|TriangularSouth
case|:
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
name|QWindowsStyle
operator|::
name|drawPrimitive
argument_list|(
name|elem
argument_list|,
name|option
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
return|return;
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
return|return;
endif|#
directive|endif
comment|// QT_NO_TABBAR
case|case
name|PE_IndicatorViewItemCheck
case|:
block|{
name|QStyleOptionButton
name|button
decl_stmt|;
name|button
operator|.
name|QStyleOption
operator|::
name|operator
name|=
argument_list|(
operator|*
name|option
argument_list|)
expr_stmt|;
name|button
operator|.
name|state
operator|&=
operator|~
name|State_MouseOver
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_IndicatorCheckBox
argument_list|,
operator|&
name|button
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
return|return;
case|case
name|PE_IndicatorHeaderArrow
case|:
if|if
condition|(
specifier|const
name|QStyleOptionHeader
modifier|*
name|header
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionHeader
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|QRect
name|r
init|=
name|header
operator|->
name|rect
decl_stmt|;
name|QImage
name|arrow
decl_stmt|;
if|if
condition|(
name|header
operator|->
name|sortIndicator
operator|&
name|QStyleOptionHeader
operator|::
name|SortUp
condition|)
name|arrow
operator|=
name|QImage
argument_list|(
name|qt_cleanlooks_arrow_up_xpm
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|header
operator|->
name|sortIndicator
operator|&
name|QStyleOptionHeader
operator|::
name|SortDown
condition|)
name|arrow
operator|=
name|QImage
argument_list|(
name|qt_cleanlooks_arrow_down_xpm
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|arrow
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|r
operator|.
name|setSize
argument_list|(
name|arrow
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|r
operator|.
name|moveCenter
argument_list|(
name|header
operator|->
name|rect
operator|.
name|center
argument_list|()
argument_list|)
expr_stmt|;
name|arrow
operator|.
name|setColor
argument_list|(
literal|1
argument_list|,
name|header
operator|->
name|palette
operator|.
name|foreground
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawImage
argument_list|(
name|r
argument_list|,
name|arrow
argument_list|)
expr_stmt|;
block|}
block|}
break|break;
case|case
name|PE_IndicatorButtonDropDown
case|:
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_PanelButtonCommand
argument_list|,
name|option
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
break|break;
case|case
name|PE_IndicatorToolBarSeparator
case|:
block|{
name|QRect
name|rect
init|=
name|option
operator|->
name|rect
decl_stmt|;
specifier|const
name|int
name|margin
init|=
literal|6
decl_stmt|;
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|State_Horizontal
condition|)
block|{
specifier|const
name|int
name|offset
init|=
name|rect
operator|.
name|width
argument_list|()
operator|/
literal|2
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|110
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|rect
operator|.
name|bottomLeft
argument_list|()
operator|.
name|x
argument_list|()
operator|+
name|offset
argument_list|,
name|rect
operator|.
name|bottomLeft
argument_list|()
operator|.
name|y
argument_list|()
operator|-
name|margin
argument_list|,
name|rect
operator|.
name|topLeft
argument_list|()
operator|.
name|x
argument_list|()
operator|+
name|offset
argument_list|,
name|rect
operator|.
name|topLeft
argument_list|()
operator|.
name|y
argument_list|()
operator|+
name|margin
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|110
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|rect
operator|.
name|bottomLeft
argument_list|()
operator|.
name|x
argument_list|()
operator|+
name|offset
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|bottomLeft
argument_list|()
operator|.
name|y
argument_list|()
operator|-
name|margin
argument_list|,
name|rect
operator|.
name|topLeft
argument_list|()
operator|.
name|x
argument_list|()
operator|+
name|offset
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|topLeft
argument_list|()
operator|.
name|y
argument_list|()
operator|+
name|margin
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|//Draw vertical separator
specifier|const
name|int
name|offset
init|=
name|rect
operator|.
name|height
argument_list|()
operator|/
literal|2
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|110
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|rect
operator|.
name|topLeft
argument_list|()
operator|.
name|x
argument_list|()
operator|+
name|margin
argument_list|,
name|rect
operator|.
name|topLeft
argument_list|()
operator|.
name|y
argument_list|()
operator|+
name|offset
argument_list|,
name|rect
operator|.
name|topRight
argument_list|()
operator|.
name|x
argument_list|()
operator|-
name|margin
argument_list|,
name|rect
operator|.
name|topRight
argument_list|()
operator|.
name|y
argument_list|()
operator|+
name|offset
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|110
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|rect
operator|.
name|topLeft
argument_list|()
operator|.
name|x
argument_list|()
operator|+
name|margin
argument_list|,
name|rect
operator|.
name|topLeft
argument_list|()
operator|.
name|y
argument_list|()
operator|+
name|offset
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|topRight
argument_list|()
operator|.
name|x
argument_list|()
operator|-
name|margin
argument_list|,
name|rect
operator|.
name|topRight
argument_list|()
operator|.
name|y
argument_list|()
operator|+
name|offset
operator|+
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
break|break;
case|case
name|PE_Frame
case|:
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|dark
operator|.
name|lighter
argument_list|(
literal|108
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
case|case
name|PE_FrameMenu
case|:
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|darkOutline
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QColor
name|frameLight
init|=
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|160
argument_list|)
decl_stmt|;
name|QColor
name|frameShadow
init|=
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|110
argument_list|)
decl_stmt|;
comment|//paint beveleffect
name|QRect
name|frame
init|=
name|option
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|frameLight
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|frame
operator|.
name|topLeft
argument_list|()
argument_list|,
name|frame
operator|.
name|bottomLeft
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|frame
operator|.
name|topLeft
argument_list|()
argument_list|,
name|frame
operator|.
name|topRight
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|frameShadow
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|frame
operator|.
name|topRight
argument_list|()
argument_list|,
name|frame
operator|.
name|bottomRight
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|frame
operator|.
name|bottomLeft
argument_list|()
argument_list|,
name|frame
operator|.
name|bottomRight
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
case|case
name|PE_FrameDockWidget
case|:
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
block|{
name|QColor
name|softshadow
init|=
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|120
argument_list|)
decl_stmt|;
name|QRect
name|rect
init|=
name|option
operator|->
name|rect
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|softshadow
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|light
argument_list|()
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|120
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
case|case
name|PE_PanelButtonTool
case|:
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
name|option
operator|->
name|state
operator|&
name|State_Enabled
operator|||
name|option
operator|->
name|state
operator|&
name|State_On
operator|)
operator|||
operator|!
operator|(
name|option
operator|->
name|state
operator|&
name|State_AutoRaise
operator|)
condition|)
block|{
name|QPen
name|oldPen
init|=
name|painter
operator|->
name|pen
argument_list|()
decl_stmt|;
if|if
condition|(
name|widget
operator|&&
name|widget
operator|->
name|inherits
argument_list|(
literal|"QDockWidgetTitleButton"
argument_list|)
condition|)
block|{
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|State_MouseOver
condition|)
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_PanelButtonCommand
argument_list|,
name|option
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_PanelButtonCommand
argument_list|,
name|option
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
case|case
name|PE_IndicatorDockWidgetResizeHandle
case|:
block|{
name|QStyleOption
name|dockWidgetHandle
init|=
operator|*
name|option
decl_stmt|;
name|bool
name|horizontal
init|=
name|option
operator|->
name|state
operator|&
name|State_Horizontal
decl_stmt|;
if|if
condition|(
name|horizontal
condition|)
name|dockWidgetHandle
operator|.
name|state
operator|&=
operator|~
name|State_Horizontal
expr_stmt|;
else|else
name|dockWidgetHandle
operator|.
name|state
operator||=
name|State_Horizontal
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawControl
argument_list|(
name|CE_Splitter
argument_list|,
operator|&
name|dockWidgetHandle
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|PE_FrameWindow
case|:
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
block|{
name|QRect
name|rect
init|=
name|option
operator|->
name|rect
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|dark
operator|.
name|darker
argument_list|(
literal|150
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|light
argument_list|()
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|120
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
ifndef|#
directive|ifndef
name|QT_NO_LINEEDIT
case|case
name|PE_FrameLineEdit
case|:
comment|// fall through
endif|#
directive|endif
comment|// QT_NO_LINEEDIT
block|{
name|QPen
name|oldPen
init|=
name|painter
operator|->
name|pen
argument_list|()
decl_stmt|;
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|State_Enabled
condition|)
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|rect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|painter
operator|->
name|fillRect
argument_list|(
name|rect
argument_list|,
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|QRect
name|r
init|=
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|)
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|buttonShadowAlpha
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
specifier|const
name|QPoint
name|points
index|[
literal|8
index|]
init|=
block|{
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|r
operator|.
name|top
argument_list|()
argument_list|)
block|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
argument_list|)
block|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|r
operator|.
name|top
argument_list|()
argument_list|)
block|,
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
argument_list|)
block|,
name|QPoint
argument_list|(
argument|r.left()
argument_list|,
argument|r.bottom() -
literal|1
argument_list|)
block|}
decl_stmt|;
name|painter
operator|->
name|drawPoints
argument_list|(
name|points
argument_list|,
literal|8
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|State_HasFocus
condition|)
block|{
name|QColor
name|darkoutline
init|=
name|option
operator|->
name|palette
operator|.
name|highlight
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|150
argument_list|)
decl_stmt|;
name|QColor
name|innerline
init|=
name|mergedColors
argument_list|(
name|option
operator|->
name|palette
operator|.
name|highlight
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
name|Qt
operator|::
name|white
argument_list|)
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|innerline
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|rect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
operator|-
literal|2
argument_list|,
operator|-
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|darkoutline
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QColor
name|highlight
init|=
name|Qt
operator|::
name|white
decl_stmt|;
name|highlight
operator|.
name|setAlpha
argument_list|(
literal|130
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|base
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|120
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|base
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|highlight
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPoint
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPoint
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|darkOutline
operator|.
name|lighter
argument_list|(
literal|115
argument_list|)
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
specifier|const
name|QPoint
name|points2
index|[
literal|4
index|]
init|=
block|{
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
argument|r.left() +
literal|1
argument_list|,
argument|r.top() +
literal|1
argument_list|)
block|}
decl_stmt|;
name|painter
operator|->
name|drawPoints
argument_list|(
name|points2
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|r
operator|.
name|top
argument_list|()
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|r
operator|.
name|top
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|oldPen
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|PE_IndicatorCheckBox
case|:
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
if|if
condition|(
specifier|const
name|QStyleOptionButton
modifier|*
name|checkbox
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionButton
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|QRect
name|checkRect
decl_stmt|;
name|checkRect
operator|.
name|setX
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|)
expr_stmt|;
name|checkRect
operator|.
name|setY
argument_list|(
name|rect
operator|.
name|top
argument_list|()
argument_list|)
expr_stmt|;
name|checkRect
operator|.
name|setWidth
argument_list|(
name|rect
operator|.
name|width
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|checkRect
operator|.
name|setHeight
argument_list|(
name|rect
operator|.
name|height
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
if|if
condition|(
name|state
operator|&
name|State_Sunken
condition|)
name|painter
operator|->
name|setBrush
argument_list|(
name|dark
operator|.
name|lighter
argument_list|(
literal|130
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|painter
operator|->
name|setBrush
argument_list|(
name|option
operator|->
name|palette
operator|.
name|base
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|dark
operator|.
name|lighter
argument_list|(
literal|110
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|checkRect
argument_list|)
expr_stmt|;
if|if
condition|(
name|checkbox
operator|->
name|state
operator|&
operator|(
name|State_On
operator||
name|State_Sunken
operator||
name|State_NoChange
operator|)
condition|)
block|{
name|QImage
name|image
argument_list|(
name|qt_cleanlooks_checkbox_checked
argument_list|)
decl_stmt|;
name|QColor
name|fillColor
init|=
name|option
operator|->
name|palette
operator|.
name|text
argument_list|()
operator|.
name|color
argument_list|()
decl_stmt|;
name|image
operator|.
name|setColor
argument_list|(
literal|1
argument_list|,
name|fillColor
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
name|fillColor
operator|.
name|setAlpha
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|image
operator|.
name|setColor
argument_list|(
literal|2
argument_list|,
name|fillColor
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawImage
argument_list|(
name|rect
argument_list|,
name|image
argument_list|)
expr_stmt|;
if|if
condition|(
name|checkbox
operator|->
name|state
operator|&
name|State_NoChange
condition|)
block|{
name|QColor
name|bgc
init|=
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
decl_stmt|;
name|bgc
operator|.
name|setAlpha
argument_list|(
literal|127
argument_list|)
expr_stmt|;
name|painter
operator|->
name|fillRect
argument_list|(
name|checkRect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|bgc
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
case|case
name|PE_IndicatorRadioButton
case|:
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
block|{
name|painter
operator|->
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|SmoothPixmapTransform
argument_list|)
expr_stmt|;
name|QRect
name|checkRect
init|=
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
if|if
condition|(
name|state
operator|&
operator|(
name|State_On
operator|)
condition|)
block|{
name|painter
operator|->
name|drawImage
argument_list|(
name|rect
argument_list|,
name|QImage
argument_list|(
name|qt_cleanlooks_radiobutton
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawImage
argument_list|(
name|checkRect
argument_list|,
name|QImage
argument_list|(
name|qt_cleanlooks_radiobutton_checked
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|state
operator|&
name|State_Sunken
condition|)
block|{
name|painter
operator|->
name|drawImage
argument_list|(
name|rect
argument_list|,
name|QImage
argument_list|(
name|qt_cleanlooks_radiobutton
argument_list|)
argument_list|)
expr_stmt|;
name|QColor
name|bgc
init|=
name|buttonShadow
decl_stmt|;
name|painter
operator|->
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|bgc
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawEllipse
argument_list|(
name|rect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|painter
operator|->
name|drawImage
argument_list|(
name|rect
argument_list|,
name|QImage
argument_list|(
name|qt_cleanlooks_radiobutton
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
case|case
name|PE_IndicatorToolBarHandle
case|:
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|State_Horizontal
condition|)
block|{
for|for
control|(
name|int
name|i
init|=
name|rect
operator|.
name|height
argument_list|()
operator|/
literal|5
init|;
name|i
operator|<=
literal|4
operator|*
operator|(
name|rect
operator|.
name|height
argument_list|()
operator|/
literal|5
operator|)
condition|;
operator|++
name|i
control|)
block|{
name|int
name|y
init|=
name|rect
operator|.
name|topLeft
argument_list|()
operator|.
name|y
argument_list|()
operator|+
name|i
operator|+
literal|1
decl_stmt|;
name|int
name|x1
init|=
name|rect
operator|.
name|topLeft
argument_list|()
operator|.
name|x
argument_list|()
operator|+
literal|3
decl_stmt|;
name|int
name|x2
init|=
name|rect
operator|.
name|topRight
argument_list|()
operator|.
name|x
argument_list|()
operator|-
literal|2
decl_stmt|;
if|if
condition|(
name|i
operator|%
literal|2
operator|==
literal|0
condition|)
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|light
argument_list|()
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|dark
operator|.
name|lighter
argument_list|(
literal|110
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|x1
argument_list|,
name|y
argument_list|,
name|x2
argument_list|,
name|y
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
comment|//vertical toolbar
for|for
control|(
name|int
name|i
init|=
name|rect
operator|.
name|width
argument_list|()
operator|/
literal|5
init|;
name|i
operator|<=
literal|4
operator|*
operator|(
name|rect
operator|.
name|width
argument_list|()
operator|/
literal|5
operator|)
condition|;
operator|++
name|i
control|)
block|{
name|int
name|x
init|=
name|rect
operator|.
name|topLeft
argument_list|()
operator|.
name|x
argument_list|()
operator|+
name|i
operator|+
literal|1
decl_stmt|;
name|int
name|y1
init|=
name|rect
operator|.
name|topLeft
argument_list|()
operator|.
name|y
argument_list|()
operator|+
literal|3
decl_stmt|;
name|int
name|y2
init|=
name|rect
operator|.
name|topLeft
argument_list|()
operator|.
name|y
argument_list|()
operator|+
literal|5
decl_stmt|;
if|if
condition|(
name|i
operator|%
literal|2
operator|==
literal|0
condition|)
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|light
argument_list|()
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|dark
operator|.
name|lighter
argument_list|(
literal|110
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|x
argument_list|,
name|y1
argument_list|,
name|x
argument_list|,
name|y2
argument_list|)
expr_stmt|;
block|}
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
case|case
name|PE_FrameDefaultButton
case|:
case|case
name|PE_FrameFocusRect
case|:
if|if
condition|(
specifier|const
name|QStyleOptionFocusRect
modifier|*
name|focusFrame
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionFocusRect
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
if|if
condition|(
operator|!
operator|(
name|focusFrame
operator|->
name|state
operator|&
name|State_KeyboardFocusChange
operator|)
condition|)
return|return;
name|QRect
name|rect
init|=
name|focusFrame
operator|->
name|rect
decl_stmt|;
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
name|painter
operator|->
name|setBackgroundMode
argument_list|(
name|Qt
operator|::
name|TransparentMode
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|QBrush
argument_list|(
name|dark
operator|.
name|darker
argument_list|(
literal|120
argument_list|)
argument_list|,
name|Qt
operator|::
name|Dense4Pattern
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrushOrigin
argument_list|(
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
specifier|const
name|QRect
name|rects
index|[
literal|4
index|]
init|=
block|{
name|QRect
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|rect
operator|.
name|width
argument_list|()
argument_list|,
literal|1
argument_list|)
block|,
comment|// Top
name|QRect
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
argument_list|,
name|rect
operator|.
name|width
argument_list|()
argument_list|,
literal|1
argument_list|)
block|,
comment|// Bottom
name|QRect
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|,
literal|1
argument_list|,
name|rect
operator|.
name|height
argument_list|()
argument_list|)
block|,
comment|// Left
name|QRect
argument_list|(
argument|rect.right()
argument_list|,
argument|rect.top()
argument_list|,
literal|1
argument_list|,
argument|rect.height()
argument_list|)
comment|// Right
block|}
decl_stmt|;
name|painter
operator|->
name|drawRects
argument_list|(
name|rects
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
break|break;
case|case
name|PE_PanelButtonCommand
case|:
block|{
name|bool
name|isDefault
init|=
literal|false
decl_stmt|;
name|bool
name|isFlat
init|=
literal|false
decl_stmt|;
name|bool
name|isDown
init|=
operator|(
name|option
operator|->
name|state
operator|&
name|State_Sunken
operator|)
operator|||
operator|(
name|option
operator|->
name|state
operator|&
name|State_On
operator|)
decl_stmt|;
name|QPen
name|oldPen
init|=
name|painter
operator|->
name|pen
argument_list|()
decl_stmt|;
name|QBrush
name|oldBrush
init|=
name|painter
operator|->
name|brush
argument_list|()
decl_stmt|;
name|QRect
name|r
decl_stmt|;
if|if
condition|(
specifier|const
name|QStyleOptionButton
modifier|*
name|button
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionButton
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|isDefault
operator|=
operator|(
name|button
operator|->
name|features
operator|&
name|QStyleOptionButton
operator|::
name|DefaultButton
operator|)
operator|&&
operator|(
name|button
operator|->
name|state
operator|&
name|State_Enabled
operator|)
expr_stmt|;
name|isFlat
operator|=
operator|(
name|button
operator|->
name|features
operator|&
name|QStyleOptionButton
operator|::
name|Flat
operator|)
expr_stmt|;
block|}
if|if
condition|(
name|isFlat
operator|&&
operator|!
name|isDown
condition|)
block|{
if|if
condition|(
name|isDefault
condition|)
block|{
name|r
operator|=
name|option
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
specifier|const
name|QLine
name|lines
index|[
literal|4
index|]
init|=
block|{
name|QLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|r
operator|.
name|top
argument_list|()
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|r
operator|.
name|top
argument_list|()
argument_list|)
argument_list|)
block|,
name|QLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
argument_list|)
block|,
name|QLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
argument_list|)
block|,
name|QLine
argument_list|(
argument|QPoint(r.left() +
literal|2
argument|, r.bottom())
argument_list|,
argument|QPoint(r.right() -
literal|2
argument|, r.bottom())
argument_list|)
block|}
decl_stmt|;
name|painter
operator|->
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|4
argument_list|)
expr_stmt|;
specifier|const
name|QPoint
name|points
index|[
literal|4
index|]
init|=
block|{
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
argument|r.left() +
literal|1
argument_list|,
argument|r.top() +
literal|1
argument_list|)
block|}
decl_stmt|;
name|painter
operator|->
name|drawPoints
argument_list|(
name|points
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|oldPen
argument_list|)
expr_stmt|;
block|}
return|return;
block|}
name|BEGIN_STYLE_PIXMAPCACHE
argument_list|(
argument|QString::fromLatin1(
literal|"pushbutton-%1"
argument|).arg(isDefault)
argument_list|)
name|r
operator|=
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|bool
name|isEnabled
init|=
operator|(
name|option
operator|->
name|state
operator|&
name|State_Enabled
operator|)
decl_stmt|;
name|QColor
name|highlightedGradientStartColor
init|=
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|107
argument_list|)
decl_stmt|;
name|QColor
name|highlightedGradientMidColor
init|=
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|105
argument_list|)
decl_stmt|;
name|QColor
name|highlightedGradientStopColor
init|=
name|buttonShadow
operator|.
name|lighter
argument_list|(
literal|107
argument_list|)
decl_stmt|;
name|QColor
name|gradientStartColor
init|=
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|108
argument_list|)
decl_stmt|;
name|QColor
name|buttonColor
init|=
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
operator|.
name|color
argument_list|()
decl_stmt|;
name|QColor
name|gradientMidColor
init|=
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
operator|.
name|color
argument_list|()
decl_stmt|;
name|QColor
name|gradientStopColor
decl_stmt|;
name|gradientStopColor
operator|.
name|setHsv
argument_list|(
name|buttonColor
operator|.
name|hue
argument_list|()
argument_list|,
name|qMin
argument_list|(
literal|255
argument_list|,
call|(
name|int
call|)
argument_list|(
name|buttonColor
operator|.
name|saturation
argument_list|()
operator|*
literal|1.9
argument_list|)
argument_list|)
argument_list|,
name|qMin
argument_list|(
literal|255
argument_list|,
call|(
name|int
call|)
argument_list|(
name|buttonColor
operator|.
name|value
argument_list|()
operator|*
literal|0.96
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QRect
name|gradRect
init|=
name|rect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|2
argument_list|)
decl_stmt|;
comment|// gradient fill
name|QRect
name|innerBorder
init|=
name|r
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|0
argument_list|)
decl_stmt|;
if|if
condition|(
name|isDown
condition|)
block|{
name|QBrush
name|fillColor
init|=
name|gradientStopColor
operator|.
name|darker
argument_list|(
literal|110
argument_list|)
decl_stmt|;
if|if
condition|(
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
operator|.
name|gradient
argument_list|()
condition|)
name|fillColor
operator|=
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
expr_stmt|;
name|p
operator|->
name|fillRect
argument_list|(
name|gradRect
argument_list|,
name|fillColor
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|gradientStopColor
operator|.
name|darker
argument_list|(
literal|125
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|innerBorder
operator|.
name|topLeft
argument_list|()
argument_list|,
name|innerBorder
operator|.
name|topRight
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|innerBorder
operator|.
name|topLeft
argument_list|()
argument_list|,
name|innerBorder
operator|.
name|bottomLeft
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|isEnabled
operator|&&
name|option
operator|->
name|state
operator|&
name|State_MouseOver
condition|)
block|{
name|qt_cleanlooks_draw_buttongradient
argument_list|(
name|p
argument_list|,
name|gradRect
argument_list|,
name|highlightedGradientStartColor
argument_list|,
name|highlightedGradientMidColor
argument_list|,
name|highlightedGradientStopColor
argument_list|,
name|TopDown
argument_list|,
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|qt_cleanlooks_draw_buttongradient
argument_list|(
name|p
argument_list|,
name|gradRect
argument_list|,
name|gradientStartColor
argument_list|,
name|gradientMidColor
argument_list|,
name|gradientStopColor
argument_list|,
name|TopDown
argument_list|,
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|bool
name|hasFocus
init|=
name|option
operator|->
name|state
operator|&
name|State_HasFocus
decl_stmt|;
if|if
condition|(
operator|!
name|isEnabled
condition|)
name|p
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|dark
operator|.
name|lighter
argument_list|(
literal|115
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|isDefault
condition|)
name|p
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|p
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|darkOutline
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
specifier|const
name|QPoint
name|points
index|[
literal|4
index|]
init|=
block|{
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
argument|r.left() +
literal|1
argument_list|,
argument|r.top() +
literal|1
argument_list|)
block|}
decl_stmt|;
name|p
operator|->
name|drawPoints
argument_list|(
name|points
argument_list|,
literal|4
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|isDefault
operator|&&
operator|!
name|hasFocus
operator|&&
name|isEnabled
condition|)
name|p
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|darkOutline
operator|.
name|darker
argument_list|(
literal|110
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|r
operator|.
name|top
argument_list|()
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|r
operator|.
name|top
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QColor
name|highlight
init|=
name|Qt
operator|::
name|white
decl_stmt|;
name|highlight
operator|.
name|setAlpha
argument_list|(
literal|110
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|highlight
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|3
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|3
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QColor
name|topShadow
init|=
name|darkOutline
decl_stmt|;
name|topShadow
operator|.
name|setAlpha
argument_list|(
literal|60
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|topShadow
argument_list|)
expr_stmt|;
specifier|const
name|QPoint
name|points2
index|[
literal|8
index|]
init|=
block|{
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|r
operator|.
name|top
argument_list|()
argument_list|)
block|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
argument_list|)
block|,
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
argument_list|)
block|,
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|r
operator|.
name|top
argument_list|()
argument_list|)
block|,
name|QPoint
argument_list|(
argument|r.left()
argument_list|,
argument|r.top() +
literal|1
argument_list|)
block|}
decl_stmt|;
name|p
operator|->
name|drawPoints
argument_list|(
name|points2
argument_list|,
literal|8
argument_list|)
expr_stmt|;
name|topShadow
operator|.
name|setAlpha
argument_list|(
literal|30
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|topShadow
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|isDefault
condition|)
block|{
name|r
operator|.
name|adjust
argument_list|(
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|buttonShadowAlpha
operator|.
name|darker
argument_list|(
literal|120
argument_list|)
argument_list|)
expr_stmt|;
specifier|const
name|QLine
name|lines
index|[
literal|4
index|]
init|=
block|{
name|QLine
argument_list|(
name|r
operator|.
name|topLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
argument_list|,
name|r
operator|.
name|topRight
argument_list|()
operator|-
name|QPoint
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
argument_list|)
block|,
name|QLine
argument_list|(
name|r
operator|.
name|bottomLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
argument_list|,
name|r
operator|.
name|bottomRight
argument_list|()
operator|-
name|QPoint
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
argument_list|)
block|,
name|QLine
argument_list|(
name|r
operator|.
name|topLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
argument_list|,
name|r
operator|.
name|bottomLeft
argument_list|()
operator|-
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
argument_list|)
block|,
name|QLine
argument_list|(
argument|r.topRight() + QPoint(
literal|0
argument|,
literal|3
argument|)
argument_list|,
argument|r.bottomRight() - QPoint(
literal|0
argument|,
literal|3
argument|)
argument_list|)
block|}
decl_stmt|;
name|p
operator|->
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|4
argument_list|)
expr_stmt|;
specifier|const
name|QPoint
name|points3
index|[
literal|8
index|]
init|=
block|{
name|r
operator|.
name|topRight
argument_list|()
operator|+
name|QPoint
argument_list|(
operator|-
literal|2
argument_list|,
literal|1
argument_list|)
block|,
name|r
operator|.
name|topRight
argument_list|()
operator|+
name|QPoint
argument_list|(
operator|-
literal|1
argument_list|,
literal|2
argument_list|)
block|,
name|r
operator|.
name|bottomRight
argument_list|()
operator|+
name|QPoint
argument_list|(
operator|-
literal|1
argument_list|,
operator|-
literal|2
argument_list|)
block|,
name|r
operator|.
name|bottomRight
argument_list|()
operator|+
name|QPoint
argument_list|(
operator|-
literal|2
argument_list|,
operator|-
literal|1
argument_list|)
block|,
name|r
operator|.
name|topLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
block|,
name|r
operator|.
name|topLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
block|,
name|r
operator|.
name|bottomLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|1
argument_list|,
operator|-
literal|2
argument_list|)
block|,
name|r
operator|.
name|bottomLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|2
argument_list|,
argument|-
literal|1
argument_list|)
block|}
decl_stmt|;
name|p
operator|->
name|drawPoints
argument_list|(
name|points3
argument_list|,
literal|8
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|setPen
argument_list|(
name|oldPen
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|oldBrush
argument_list|)
expr_stmt|;
name|END_STYLE_PIXMAPCACHE
block|}
break|break;
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
case|case
name|PE_FrameTabWidget
case|:
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
block|{
name|painter
operator|->
name|fillRect
argument_list|(
name|option
operator|->
name|rect
argument_list|,
name|tabFrameColor
argument_list|)
expr_stmt|;
block|}
ifndef|#
directive|ifndef
name|QT_NO_TABWIDGET
if|if
condition|(
specifier|const
name|QStyleOptionTabWidgetFrame
modifier|*
name|twf
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionTabWidgetFrame
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|QColor
name|borderColor
init|=
name|darkOutline
operator|.
name|lighter
argument_list|(
literal|110
argument_list|)
decl_stmt|;
name|QColor
name|alphaCornerColor
init|=
name|mergedColors
argument_list|(
name|borderColor
argument_list|,
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
decl_stmt|;
name|int
name|borderThickness
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_TabBarBaseOverlap
argument_list|,
name|twf
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|bool
name|reverse
init|=
operator|(
name|twf
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
operator|)
decl_stmt|;
name|QRect
name|tabBarRect
decl_stmt|;
switch|switch
condition|(
name|twf
operator|->
name|shape
condition|)
block|{
case|case
name|QTabBar
operator|::
name|RoundedNorth
case|:
if|if
condition|(
name|reverse
condition|)
block|{
name|tabBarRect
operator|=
name|QRect
argument_list|(
name|twf
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
name|twf
operator|->
name|leftCornerWidgetSize
operator|.
name|width
argument_list|()
operator|-
name|twf
operator|->
name|tabBarSize
operator|.
name|width
argument_list|()
operator|+
literal|1
argument_list|,
name|twf
operator|->
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|twf
operator|->
name|tabBarSize
operator|.
name|width
argument_list|()
argument_list|,
name|borderThickness
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|tabBarRect
operator|=
name|QRect
argument_list|(
name|twf
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
name|twf
operator|->
name|leftCornerWidgetSize
operator|.
name|width
argument_list|()
argument_list|,
name|twf
operator|->
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|twf
operator|->
name|tabBarSize
operator|.
name|width
argument_list|()
argument_list|,
name|borderThickness
argument_list|)
expr_stmt|;
block|}
break|break ;
case|case
name|QTabBar
operator|::
name|RoundedWest
case|:
name|tabBarRect
operator|=
name|QRect
argument_list|(
name|twf
operator|->
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|twf
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
name|twf
operator|->
name|leftCornerWidgetSize
operator|.
name|height
argument_list|()
argument_list|,
name|borderThickness
argument_list|,
name|twf
operator|->
name|tabBarSize
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
name|tabBarRect
operator|=
name|tabBarRect
expr_stmt|;
comment|//adjust
break|break ;
case|case
name|QTabBar
operator|::
name|RoundedEast
case|:
name|tabBarRect
operator|=
name|QRect
argument_list|(
name|twf
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
name|borderThickness
operator|+
literal|1
argument_list|,
name|twf
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
name|twf
operator|->
name|leftCornerWidgetSize
operator|.
name|height
argument_list|()
argument_list|,
literal|0
argument_list|,
name|twf
operator|->
name|tabBarSize
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
break|break ;
case|case
name|QTabBar
operator|::
name|RoundedSouth
case|:
if|if
condition|(
name|reverse
condition|)
block|{
name|tabBarRect
operator|=
name|QRect
argument_list|(
name|twf
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
name|twf
operator|->
name|leftCornerWidgetSize
operator|.
name|width
argument_list|()
operator|-
name|twf
operator|->
name|tabBarSize
operator|.
name|width
argument_list|()
operator|+
literal|1
argument_list|,
name|twf
operator|->
name|rect
operator|.
name|bottom
argument_list|()
operator|+
literal|1
argument_list|,
name|twf
operator|->
name|tabBarSize
operator|.
name|width
argument_list|()
argument_list|,
name|borderThickness
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|tabBarRect
operator|=
name|QRect
argument_list|(
name|twf
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
name|twf
operator|->
name|leftCornerWidgetSize
operator|.
name|width
argument_list|()
argument_list|,
name|twf
operator|->
name|rect
operator|.
name|bottom
argument_list|()
operator|+
literal|1
argument_list|,
name|twf
operator|->
name|tabBarSize
operator|.
name|width
argument_list|()
argument_list|,
name|borderThickness
argument_list|)
expr_stmt|;
block|}
break|break;
default|default:
break|break;
block|}
name|QRegion
name|region
argument_list|(
name|twf
operator|->
name|rect
argument_list|)
decl_stmt|;
name|region
operator|-=
name|tabBarRect
expr_stmt|;
name|painter
operator|->
name|setClipRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
comment|// Outer border
name|QLine
name|leftLine
init|=
name|QLine
argument_list|(
name|twf
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|,
name|twf
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
operator|-
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
decl_stmt|;
name|QLine
name|rightLine
init|=
name|QLine
argument_list|(
name|twf
operator|->
name|rect
operator|.
name|topRight
argument_list|()
argument_list|,
name|twf
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
operator|-
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
decl_stmt|;
name|QLine
name|bottomLine
init|=
name|QLine
argument_list|(
name|twf
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
argument_list|,
name|twf
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
operator|-
name|QPoint
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|QLine
name|topLine
init|=
name|QLine
argument_list|(
name|twf
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|twf
operator|->
name|rect
operator|.
name|topRight
argument_list|()
argument_list|)
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|borderColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|topLine
argument_list|)
expr_stmt|;
comment|// Inner border
name|QLine
name|innerLeftLine
init|=
name|QLine
argument_list|(
name|leftLine
operator|.
name|p1
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|,
name|leftLine
operator|.
name|p2
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|QLine
name|innerRightLine
init|=
name|QLine
argument_list|(
name|rightLine
operator|.
name|p1
argument_list|()
operator|-
name|QPoint
argument_list|(
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|rightLine
operator|.
name|p2
argument_list|()
operator|-
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|QLine
name|innerBottomLine
init|=
name|QLine
argument_list|(
name|bottomLine
operator|.
name|p1
argument_list|()
operator|-
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|bottomLine
operator|.
name|p2
argument_list|()
operator|-
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|QLine
name|innerTopLine
init|=
name|QLine
argument_list|(
name|topLine
operator|.
name|p1
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|topLine
operator|.
name|p2
argument_list|()
operator|+
name|QPoint
argument_list|(
operator|-
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
decl_stmt|;
comment|// Rounded Corner
name|QPoint
name|leftBottomOuterCorner
init|=
name|QPoint
argument_list|(
name|innerLeftLine
operator|.
name|p2
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|QPoint
name|leftBottomInnerCorner1
init|=
name|QPoint
argument_list|(
name|leftLine
operator|.
name|p2
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|QPoint
name|leftBottomInnerCorner2
init|=
name|QPoint
argument_list|(
name|bottomLine
operator|.
name|p1
argument_list|()
operator|-
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|QPoint
name|rightBottomOuterCorner
init|=
name|QPoint
argument_list|(
name|innerRightLine
operator|.
name|p2
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|QPoint
name|rightBottomInnerCorner1
init|=
name|QPoint
argument_list|(
name|rightLine
operator|.
name|p2
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|QPoint
name|rightBottomInnerCorner2
init|=
name|QPoint
argument_list|(
name|bottomLine
operator|.
name|p2
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|QPoint
name|leftTopOuterCorner
init|=
name|QPoint
argument_list|(
name|innerLeftLine
operator|.
name|p1
argument_list|()
operator|-
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|QPoint
name|leftTopInnerCorner1
init|=
name|QPoint
argument_list|(
name|leftLine
operator|.
name|p1
argument_list|()
operator|-
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|QPoint
name|leftTopInnerCorner2
init|=
name|QPoint
argument_list|(
name|topLine
operator|.
name|p1
argument_list|()
operator|-
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|borderColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|leftLine
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|rightLine
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|bottomLine
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPoint
argument_list|(
name|leftBottomOuterCorner
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPoint
argument_list|(
name|rightBottomOuterCorner
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPoint
argument_list|(
name|leftTopOuterCorner
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|light
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|innerLeftLine
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|innerTopLine
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|buttonShadowAlpha
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|innerRightLine
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|innerBottomLine
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|alphaCornerColor
argument_list|)
expr_stmt|;
specifier|const
name|QPoint
name|points
index|[
literal|6
index|]
init|=
block|{
name|leftBottomInnerCorner1
block|,
name|leftBottomInnerCorner2
block|,
name|rightBottomInnerCorner1
block|,
name|rightBottomInnerCorner2
block|,
name|leftTopInnerCorner1
block|,
name|leftTopInnerCorner2
block|}
decl_stmt|;
name|painter
operator|->
name|drawPoints
argument_list|(
name|points
argument_list|,
literal|6
argument_list|)
expr_stmt|;
block|}
endif|#
directive|endif
comment|// QT_NO_TABWIDGET
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break ;
case|case
name|PE_FrameStatusBarItem
case|:
break|break;
case|case
name|PE_IndicatorTabClose
case|:
block|{
name|Q_D
argument_list|(
specifier|const
name|QCleanlooksStyle
argument_list|)
expr_stmt|;
if|if
condition|(
name|d
operator|->
name|tabBarcloseButtonIcon
operator|.
name|isNull
argument_list|()
condition|)
name|d
operator|->
name|tabBarcloseButtonIcon
operator|=
name|standardIcon
argument_list|(
name|SP_DialogCloseButton
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
expr_stmt|;
if|if
condition|(
operator|(
name|option
operator|->
name|state
operator|&
name|State_Enabled
operator|)
operator|&&
operator|(
name|option
operator|->
name|state
operator|&
name|State_MouseOver
operator|)
condition|)
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_PanelButtonCommand
argument_list|,
name|option
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|QPixmap
name|pixmap
init|=
name|d
operator|->
name|tabBarcloseButtonIcon
operator|.
name|pixmap
argument_list|(
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|,
name|QIcon
operator|::
name|Normal
argument_list|,
name|QIcon
operator|::
name|On
argument_list|)
decl_stmt|;
name|proxy
argument_list|()
operator|->
name|drawItemPixmap
argument_list|(
name|painter
argument_list|,
name|option
operator|->
name|rect
argument_list|,
name|Qt
operator|::
name|AlignCenter
argument_list|,
name|pixmap
argument_list|)
expr_stmt|;
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_TABBAR
default|default:
name|QWindowsStyle
operator|::
name|drawPrimitive
argument_list|(
name|elem
argument_list|,
name|option
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
end_function
begin_comment
comment|/*!   \reimp */
end_comment
begin_function
DECL|function|drawControl
name|void
name|QCleanlooksStyle
operator|::
name|drawControl
parameter_list|(
name|ControlElement
name|element
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|option
parameter_list|,
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
name|QColor
name|button
init|=
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
operator|.
name|color
argument_list|()
decl_stmt|;
name|QColor
name|dark
decl_stmt|;
name|dark
operator|.
name|setHsv
argument_list|(
name|button
operator|.
name|hue
argument_list|()
argument_list|,
name|qMin
argument_list|(
literal|255
argument_list|,
call|(
name|int
call|)
argument_list|(
name|button
operator|.
name|saturation
argument_list|()
operator|*
literal|1.9
argument_list|)
argument_list|)
argument_list|,
name|qMin
argument_list|(
literal|255
argument_list|,
call|(
name|int
call|)
argument_list|(
name|button
operator|.
name|value
argument_list|()
operator|*
literal|0.7
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QColor
name|darkOutline
decl_stmt|;
name|darkOutline
operator|.
name|setHsv
argument_list|(
name|button
operator|.
name|hue
argument_list|()
argument_list|,
name|qMin
argument_list|(
literal|255
argument_list|,
call|(
name|int
call|)
argument_list|(
name|button
operator|.
name|saturation
argument_list|()
operator|*
literal|2.0
argument_list|)
argument_list|)
argument_list|,
name|qMin
argument_list|(
literal|255
argument_list|,
call|(
name|int
call|)
argument_list|(
name|button
operator|.
name|value
argument_list|()
operator|*
literal|0.6
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QRect
name|rect
init|=
name|option
operator|->
name|rect
decl_stmt|;
name|QColor
name|shadow
init|=
name|mergedColors
argument_list|(
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|120
argument_list|)
argument_list|,
name|dark
operator|.
name|lighter
argument_list|(
literal|130
argument_list|)
argument_list|,
literal|60
argument_list|)
decl_stmt|;
name|QColor
name|tabFrameColor
init|=
name|mergedColors
argument_list|(
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
name|dark
operator|.
name|lighter
argument_list|(
literal|135
argument_list|)
argument_list|,
literal|60
argument_list|)
decl_stmt|;
name|QColor
name|highlight
init|=
name|option
operator|->
name|palette
operator|.
name|highlight
argument_list|()
operator|.
name|color
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|element
condition|)
block|{
case|case
name|CE_RadioButton
case|:
comment|//fall through
case|case
name|CE_CheckBox
case|:
if|if
condition|(
specifier|const
name|QStyleOptionButton
modifier|*
name|btn
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionButton
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|bool
name|hover
init|=
operator|(
name|btn
operator|->
name|state
operator|&
name|State_MouseOver
operator|&&
name|btn
operator|->
name|state
operator|&
name|State_Enabled
operator|)
decl_stmt|;
if|if
condition|(
name|hover
condition|)
name|painter
operator|->
name|fillRect
argument_list|(
name|rect
argument_list|,
name|btn
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|104
argument_list|)
argument_list|)
expr_stmt|;
name|QStyleOptionButton
name|copy
init|=
operator|*
name|btn
decl_stmt|;
name|copy
operator|.
name|rect
operator|.
name|adjust
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|,
operator|-
literal|2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QWindowsStyle
operator|::
name|drawControl
argument_list|(
name|element
argument_list|,
operator|&
name|copy
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|CE_Splitter
case|:
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
block|{
comment|// hover appearance
name|QBrush
name|fillColor
init|=
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
decl_stmt|;
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|State_MouseOver
operator|&&
name|option
operator|->
name|state
operator|&
name|State_Enabled
condition|)
name|fillColor
operator|=
name|fillColor
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|106
argument_list|)
expr_stmt|;
name|painter
operator|->
name|fillRect
argument_list|(
name|option
operator|->
name|rect
argument_list|,
name|fillColor
argument_list|)
expr_stmt|;
name|QColor
name|grooveColor
init|=
name|mergedColors
argument_list|(
name|dark
operator|.
name|lighter
argument_list|(
literal|110
argument_list|)
argument_list|,
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
literal|40
argument_list|)
decl_stmt|;
name|QColor
name|gripShadow
init|=
name|grooveColor
operator|.
name|darker
argument_list|(
literal|110
argument_list|)
decl_stmt|;
name|QPalette
name|palette
init|=
name|option
operator|->
name|palette
decl_stmt|;
name|bool
name|vertical
init|=
operator|!
operator|(
name|option
operator|->
name|state
operator|&
name|State_Horizontal
operator|)
decl_stmt|;
name|QRect
name|scrollBarSlider
init|=
name|option
operator|->
name|rect
decl_stmt|;
name|int
name|gripMargin
init|=
literal|4
decl_stmt|;
comment|//draw grips
if|if
condition|(
name|vertical
condition|)
block|{
for|for
control|(
name|int
name|i
init|=
operator|-
literal|20
init|;
name|i
operator|<
literal|20
condition|;
name|i
operator|+=
literal|2
control|)
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|gripShadow
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|scrollBarSlider
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|+
name|i
argument_list|,
name|scrollBarSlider
operator|.
name|top
argument_list|()
operator|+
name|gripMargin
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|scrollBarSlider
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|+
name|i
argument_list|,
name|scrollBarSlider
operator|.
name|bottom
argument_list|()
operator|-
name|gripMargin
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|palette
operator|.
name|light
argument_list|()
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|scrollBarSlider
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|+
name|i
operator|+
literal|1
argument_list|,
name|scrollBarSlider
operator|.
name|top
argument_list|()
operator|+
name|gripMargin
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|scrollBarSlider
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|+
name|i
operator|+
literal|1
argument_list|,
name|scrollBarSlider
operator|.
name|bottom
argument_list|()
operator|-
name|gripMargin
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
for|for
control|(
name|int
name|i
init|=
operator|-
literal|20
init|;
name|i
operator|<
literal|20
condition|;
name|i
operator|+=
literal|2
control|)
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|gripShadow
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|scrollBarSlider
operator|.
name|left
argument_list|()
operator|+
name|gripMargin
argument_list|,
name|scrollBarSlider
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|+
name|i
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|scrollBarSlider
operator|.
name|right
argument_list|()
operator|-
name|gripMargin
argument_list|,
name|scrollBarSlider
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|+
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|palette
operator|.
name|light
argument_list|()
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|scrollBarSlider
operator|.
name|left
argument_list|()
operator|+
name|gripMargin
argument_list|,
name|scrollBarSlider
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|+
literal|1
operator|+
name|i
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|scrollBarSlider
operator|.
name|right
argument_list|()
operator|-
name|gripMargin
argument_list|,
name|scrollBarSlider
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|+
literal|1
operator|+
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
ifndef|#
directive|ifndef
name|QT_NO_SIZEGRIP
case|case
name|CE_SizeGrip
case|:
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
block|{
name|int
name|x
decl_stmt|,
name|y
decl_stmt|,
name|w
decl_stmt|,
name|h
decl_stmt|;
name|option
operator|->
name|rect
operator|.
name|getRect
argument_list|(
operator|&
name|x
argument_list|,
operator|&
name|y
argument_list|,
operator|&
name|w
argument_list|,
operator|&
name|h
argument_list|)
expr_stmt|;
name|int
name|sw
init|=
name|qMin
argument_list|(
name|h
argument_list|,
name|w
argument_list|)
decl_stmt|;
if|if
condition|(
name|h
operator|>
name|w
condition|)
name|painter
operator|->
name|translate
argument_list|(
literal|0
argument_list|,
name|h
operator|-
name|w
argument_list|)
expr_stmt|;
else|else
name|painter
operator|->
name|translate
argument_list|(
name|w
operator|-
name|h
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|int
name|sx
init|=
name|x
decl_stmt|;
name|int
name|sy
init|=
name|y
decl_stmt|;
name|int
name|s
init|=
literal|4
decl_stmt|;
if|if
condition|(
name|option
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
condition|)
block|{
name|sx
operator|=
name|x
operator|+
name|sw
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|4
condition|;
operator|++
name|i
control|)
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|light
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|x
argument_list|,
name|sy
operator|-
literal|1
argument_list|,
name|sx
operator|+
literal|1
argument_list|,
name|sw
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|dark
operator|.
name|lighter
argument_list|(
literal|120
argument_list|)
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|x
argument_list|,
name|sy
argument_list|,
name|sx
argument_list|,
name|sw
argument_list|)
expr_stmt|;
name|sx
operator|-=
name|s
expr_stmt|;
name|sy
operator|+=
name|s
expr_stmt|;
block|}
block|}
else|else
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|4
condition|;
operator|++
name|i
control|)
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|light
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|sx
operator|-
literal|1
argument_list|,
name|sw
argument_list|,
name|sw
argument_list|,
name|sy
operator|-
literal|1
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|dark
operator|.
name|lighter
argument_list|(
literal|120
argument_list|)
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|sx
argument_list|,
name|sw
argument_list|,
name|sw
argument_list|,
name|sy
argument_list|)
expr_stmt|;
name|sx
operator|+=
name|s
expr_stmt|;
name|sy
operator|+=
name|s
expr_stmt|;
block|}
block|}
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
endif|#
directive|endif
comment|// QT_NO_SIZEGRIP
ifndef|#
directive|ifndef
name|QT_NO_TOOLBAR
case|case
name|CE_ToolBar
case|:
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
if|if
condition|(
specifier|const
name|QStyleOptionToolBar
modifier|*
name|toolbar
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionToolBar
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|QRect
name|rect
init|=
name|option
operator|->
name|rect
decl_stmt|;
name|bool
name|paintLeftBorder
init|=
literal|true
decl_stmt|;
name|bool
name|paintRightBorder
init|=
literal|true
decl_stmt|;
name|bool
name|paintBottomBorder
init|=
literal|true
decl_stmt|;
switch|switch
condition|(
name|toolbar
operator|->
name|toolBarArea
condition|)
block|{
case|case
name|Qt
operator|::
name|BottomToolBarArea
case|:
switch|switch
condition|(
name|toolbar
operator|->
name|positionOfLine
condition|)
block|{
case|case
name|QStyleOptionToolBar
operator|::
name|Beginning
case|:
case|case
name|QStyleOptionToolBar
operator|::
name|OnlyOne
case|:
name|paintBottomBorder
operator|=
literal|false
expr_stmt|;
default|default:
break|break;
block|}
case|case
name|Qt
operator|::
name|TopToolBarArea
case|:
switch|switch
condition|(
name|toolbar
operator|->
name|positionWithinLine
condition|)
block|{
case|case
name|QStyleOptionToolBar
operator|::
name|Beginning
case|:
name|paintLeftBorder
operator|=
literal|false
expr_stmt|;
break|break;
case|case
name|QStyleOptionToolBar
operator|::
name|End
case|:
name|paintRightBorder
operator|=
literal|false
expr_stmt|;
break|break;
case|case
name|QStyleOptionToolBar
operator|::
name|OnlyOne
case|:
name|paintRightBorder
operator|=
literal|false
expr_stmt|;
name|paintLeftBorder
operator|=
literal|false
expr_stmt|;
default|default:
break|break;
block|}
if|if
condition|(
name|toolbar
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
condition|)
block|{
comment|//reverse layout changes the order of Beginning/end
name|bool
name|tmp
init|=
name|paintLeftBorder
decl_stmt|;
name|paintRightBorder
operator|=
name|paintLeftBorder
expr_stmt|;
name|paintLeftBorder
operator|=
name|tmp
expr_stmt|;
block|}
break|break;
case|case
name|Qt
operator|::
name|RightToolBarArea
case|:
switch|switch
condition|(
name|toolbar
operator|->
name|positionOfLine
condition|)
block|{
case|case
name|QStyleOptionToolBar
operator|::
name|Beginning
case|:
case|case
name|QStyleOptionToolBar
operator|::
name|OnlyOne
case|:
name|paintRightBorder
operator|=
literal|false
expr_stmt|;
break|break;
default|default:
break|break;
block|}
break|break;
case|case
name|Qt
operator|::
name|LeftToolBarArea
case|:
switch|switch
condition|(
name|toolbar
operator|->
name|positionOfLine
condition|)
block|{
case|case
name|QStyleOptionToolBar
operator|::
name|Beginning
case|:
case|case
name|QStyleOptionToolBar
operator|::
name|OnlyOne
case|:
name|paintLeftBorder
operator|=
literal|false
expr_stmt|;
break|break;
default|default:
break|break;
block|}
break|break;
default|default:
break|break;
block|}
name|QColor
name|light
init|=
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|110
argument_list|)
decl_stmt|;
comment|//draw top border
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|light
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|rect
operator|.
name|topLeft
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|rect
operator|.
name|topLeft
argument_list|()
operator|.
name|y
argument_list|()
argument_list|,
name|rect
operator|.
name|topRight
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|rect
operator|.
name|topRight
argument_list|()
operator|.
name|y
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|paintLeftBorder
condition|)
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|light
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|rect
operator|.
name|topLeft
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|rect
operator|.
name|topLeft
argument_list|()
operator|.
name|y
argument_list|()
argument_list|,
name|rect
operator|.
name|bottomLeft
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|rect
operator|.
name|bottomLeft
argument_list|()
operator|.
name|y
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|paintRightBorder
condition|)
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|shadow
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|rect
operator|.
name|topRight
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|rect
operator|.
name|topRight
argument_list|()
operator|.
name|y
argument_list|()
argument_list|,
name|rect
operator|.
name|bottomRight
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|rect
operator|.
name|bottomRight
argument_list|()
operator|.
name|y
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|paintBottomBorder
condition|)
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|shadow
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|rect
operator|.
name|bottomLeft
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|rect
operator|.
name|bottomLeft
argument_list|()
operator|.
name|y
argument_list|()
argument_list|,
name|rect
operator|.
name|bottomRight
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|rect
operator|.
name|bottomRight
argument_list|()
operator|.
name|y
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
endif|#
directive|endif
comment|// QT_NO_TOOLBAR
ifndef|#
directive|ifndef
name|QT_NO_DOCKWIDGET
case|case
name|CE_DockWidgetTitle
case|:
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
if|if
condition|(
specifier|const
name|QStyleOptionDockWidget
modifier|*
name|dwOpt
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionDockWidget
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
specifier|const
name|QStyleOptionDockWidgetV2
modifier|*
name|v2
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionDockWidgetV2
operator|*
argument_list|>
argument_list|(
name|dwOpt
argument_list|)
decl_stmt|;
name|bool
name|verticalTitleBar
init|=
name|v2
operator|==
literal|0
condition|?
literal|false
else|:
name|v2
operator|->
name|verticalTitleBar
decl_stmt|;
name|QRect
name|rect
init|=
name|dwOpt
operator|->
name|rect
decl_stmt|;
name|QRect
name|titleRect
init|=
name|subElementRect
argument_list|(
name|SE_DockWidgetTitleBarText
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|QRect
name|r
init|=
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
literal|0
argument_list|)
decl_stmt|;
if|if
condition|(
name|verticalTitleBar
condition|)
name|r
operator|.
name|adjust
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|light
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|r
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|shadow
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|r
argument_list|)
expr_stmt|;
if|if
condition|(
name|verticalTitleBar
condition|)
block|{
name|QRect
name|r
init|=
name|rect
decl_stmt|;
name|QSize
name|s
init|=
name|r
operator|.
name|size
argument_list|()
decl_stmt|;
name|s
operator|.
name|transpose
argument_list|()
expr_stmt|;
name|r
operator|.
name|setSize
argument_list|(
name|s
argument_list|)
expr_stmt|;
name|titleRect
operator|=
name|QRect
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
name|rect
operator|.
name|bottom
argument_list|()
operator|-
name|titleRect
operator|.
name|bottom
argument_list|()
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
name|titleRect
operator|.
name|left
argument_list|()
operator|-
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|titleRect
operator|.
name|height
argument_list|()
argument_list|,
name|titleRect
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|translate
argument_list|(
name|r
operator|.
name|left
argument_list|()
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
name|r
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|rotate
argument_list|(
operator|-
literal|90
argument_list|)
expr_stmt|;
name|painter
operator|->
name|translate
argument_list|(
operator|-
name|r
operator|.
name|left
argument_list|()
argument_list|,
operator|-
name|r
operator|.
name|top
argument_list|()
argument_list|)
expr_stmt|;
name|rect
operator|=
name|r
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|dwOpt
operator|->
name|title
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|QString
name|titleText
init|=
name|painter
operator|->
name|fontMetrics
argument_list|()
operator|.
name|elidedText
argument_list|(
name|dwOpt
operator|->
name|title
argument_list|,
name|Qt
operator|::
name|ElideRight
argument_list|,
name|titleRect
operator|.
name|width
argument_list|()
argument_list|)
decl_stmt|;
name|proxy
argument_list|()
operator|->
name|drawItemText
argument_list|(
name|painter
argument_list|,
name|titleRect
argument_list|,
name|Qt
operator|::
name|AlignLeft
operator||
name|Qt
operator|::
name|AlignVCenter
operator||
name|Qt
operator|::
name|TextShowMnemonic
argument_list|,
name|dwOpt
operator|->
name|palette
argument_list|,
name|dwOpt
operator|->
name|state
operator|&
name|State_Enabled
argument_list|,
name|titleText
argument_list|,
name|QPalette
operator|::
name|WindowText
argument_list|)
expr_stmt|;
block|}
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
endif|#
directive|endif
comment|// QT_NO_DOCKWIDGET
case|case
name|CE_HeaderSection
case|:
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
comment|// Draws the header in tables.
if|if
condition|(
specifier|const
name|QStyleOptionHeader
modifier|*
name|header
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionHeader
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|QPixmap
name|cache
decl_stmt|;
name|QString
name|pixmapName
init|=
name|QStyleHelper
operator|::
name|uniqueName
argument_list|(
name|QLatin1String
argument_list|(
literal|"headersection"
argument_list|)
argument_list|,
name|option
argument_list|,
name|option
operator|->
name|rect
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
name|pixmapName
operator|+=
name|QString
operator|::
name|number
argument_list|(
operator|-
name|int
argument_list|(
name|header
operator|->
name|position
argument_list|)
argument_list|)
expr_stmt|;
name|pixmapName
operator|+=
name|QString
operator|::
name|number
argument_list|(
operator|-
name|int
argument_list|(
name|header
operator|->
name|orientation
argument_list|)
argument_list|)
expr_stmt|;
name|QRect
name|r
init|=
name|option
operator|->
name|rect
decl_stmt|;
name|QColor
name|gradientStopColor
decl_stmt|;
name|QColor
name|gradientStartColor
init|=
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
operator|.
name|color
argument_list|()
decl_stmt|;
name|gradientStopColor
operator|.
name|setHsv
argument_list|(
name|gradientStartColor
operator|.
name|hue
argument_list|()
argument_list|,
name|qMin
argument_list|(
literal|255
argument_list|,
call|(
name|int
call|)
argument_list|(
name|gradientStartColor
operator|.
name|saturation
argument_list|()
operator|*
literal|2
argument_list|)
argument_list|)
argument_list|,
name|qMin
argument_list|(
literal|255
argument_list|,
call|(
name|int
call|)
argument_list|(
name|gradientStartColor
operator|.
name|value
argument_list|()
operator|*
literal|0.96
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QLinearGradient
name|gradient
argument_list|(
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|gradient
argument_list|()
condition|)
block|{
name|gradient
operator|.
name|setStops
argument_list|(
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|gradient
argument_list|()
operator|->
name|stops
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|gradientStartColor
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0.8
argument_list|,
name|gradientStartColor
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|1
argument_list|,
name|gradientStopColor
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|fillRect
argument_list|(
name|r
argument_list|,
name|gradient
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|QPixmapCache
operator|::
name|find
argument_list|(
name|pixmapName
argument_list|,
name|cache
argument_list|)
condition|)
block|{
name|cache
operator|=
name|QPixmap
argument_list|(
name|r
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|cache
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|transparent
argument_list|)
expr_stmt|;
name|QRect
name|pixmapRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|r
operator|.
name|width
argument_list|()
argument_list|,
name|r
operator|.
name|height
argument_list|()
argument_list|)
decl_stmt|;
name|QPainter
name|cachePainter
argument_list|(
operator|&
name|cache
argument_list|)
decl_stmt|;
if|if
condition|(
name|header
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Vertical
condition|)
block|{
name|cachePainter
operator|.
name|setPen
argument_list|(
name|QPen
argument_list|(
name|dark
argument_list|)
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|pixmapRect
operator|.
name|topRight
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|bottomRight
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|header
operator|->
name|position
operator|!=
name|QStyleOptionHeader
operator|::
name|End
condition|)
block|{
name|cachePainter
operator|.
name|setPen
argument_list|(
name|QPen
argument_list|(
name|shadow
argument_list|)
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|pixmapRect
operator|.
name|bottomLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|3
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|pixmapRect
operator|.
name|bottomRight
argument_list|()
operator|+
name|QPoint
argument_list|(
operator|-
literal|3
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|setPen
argument_list|(
name|QPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|light
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|pixmapRect
operator|.
name|bottomLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
argument_list|,
name|pixmapRect
operator|.
name|bottomRight
argument_list|()
operator|+
name|QPoint
argument_list|(
operator|-
literal|3
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|cachePainter
operator|.
name|setPen
argument_list|(
name|QPen
argument_list|(
name|dark
argument_list|)
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|pixmapRect
operator|.
name|bottomLeft
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|bottomRight
argument_list|()
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|setPen
argument_list|(
name|QPen
argument_list|(
name|shadow
argument_list|)
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|pixmapRect
operator|.
name|topRight
argument_list|()
operator|+
name|QPoint
argument_list|(
operator|-
literal|1
argument_list|,
literal|3
argument_list|)
argument_list|,
name|pixmapRect
operator|.
name|bottomRight
argument_list|()
operator|+
name|QPoint
argument_list|(
operator|-
literal|1
argument_list|,
operator|-
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|setPen
argument_list|(
name|QPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|light
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|pixmapRect
operator|.
name|topRight
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
argument_list|,
name|pixmapRect
operator|.
name|bottomRight
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|0
argument_list|,
operator|-
literal|3
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|cachePainter
operator|.
name|end
argument_list|()
expr_stmt|;
name|QPixmapCache
operator|::
name|insert
argument_list|(
name|pixmapName
argument_list|,
name|cache
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|drawPixmap
argument_list|(
name|r
operator|.
name|topLeft
argument_list|()
argument_list|,
name|cache
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
case|case
name|CE_ProgressBarGroove
case|:
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
block|{
name|painter
operator|->
name|fillRect
argument_list|(
name|rect
argument_list|,
name|option
operator|->
name|palette
operator|.
name|base
argument_list|()
argument_list|)
expr_stmt|;
name|QColor
name|borderColor
init|=
name|dark
operator|.
name|lighter
argument_list|(
literal|110
argument_list|)
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|borderColor
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
specifier|const
name|QLine
name|lines
index|[
literal|4
index|]
init|=
block|{
name|QLine
argument_list|(
name|QPoint
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|)
argument_list|)
block|,
name|QLine
argument_list|(
name|QPoint
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|)
block|,
name|QLine
argument_list|(
name|QPoint
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
block|,
name|QLine
argument_list|(
argument|QPoint(rect.right(), rect.top() +
literal|1
argument|)
argument_list|,
argument|QPoint(rect.right(), rect.bottom() -
literal|1
argument|)
argument_list|)
block|}
decl_stmt|;
name|painter
operator|->
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QColor
name|alphaCorner
init|=
name|mergedColors
argument_list|(
name|borderColor
argument_list|,
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
decl_stmt|;
name|QColor
name|innerShadow
init|=
name|mergedColors
argument_list|(
name|borderColor
argument_list|,
name|option
operator|->
name|palette
operator|.
name|base
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
decl_stmt|;
comment|//corner smoothing
name|painter
operator|->
name|setPen
argument_list|(
name|alphaCorner
argument_list|)
expr_stmt|;
specifier|const
name|QPoint
name|points
index|[
literal|4
index|]
init|=
block|{
name|rect
operator|.
name|topRight
argument_list|()
block|,
name|rect
operator|.
name|topLeft
argument_list|()
block|,
name|rect
operator|.
name|bottomRight
argument_list|()
block|,
name|rect
operator|.
name|bottomLeft
argument_list|()
block|}
decl_stmt|;
name|painter
operator|->
name|drawPoints
argument_list|(
name|points
argument_list|,
literal|4
argument_list|)
expr_stmt|;
comment|//inner shadow
name|painter
operator|->
name|setPen
argument_list|(
name|innerShadow
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
case|case
name|CE_ProgressBarContents
case|:
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
if|if
condition|(
specifier|const
name|QStyleOptionProgressBar
modifier|*
name|bar
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionProgressBar
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|QRect
name|rect
init|=
name|bar
operator|->
name|rect
decl_stmt|;
name|bool
name|vertical
init|=
literal|false
decl_stmt|;
name|bool
name|inverted
init|=
literal|false
decl_stmt|;
name|bool
name|indeterminate
init|=
operator|(
name|bar
operator|->
name|minimum
operator|==
literal|0
operator|&&
name|bar
operator|->
name|maximum
operator|==
literal|0
operator|)
decl_stmt|;
comment|// Get extra style options if version 2
if|if
condition|(
specifier|const
name|QStyleOptionProgressBarV2
modifier|*
name|bar2
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionProgressBarV2
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|vertical
operator|=
operator|(
name|bar2
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Vertical
operator|)
expr_stmt|;
name|inverted
operator|=
name|bar2
operator|->
name|invertedAppearance
expr_stmt|;
block|}
comment|// If the orientation is vertical, we use a transform to rotate
comment|// the progress bar 90 degrees clockwise.  This way we can use the
comment|// same rendering code for both orientations.
if|if
condition|(
name|vertical
condition|)
block|{
name|rect
operator|=
name|QRect
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|rect
operator|.
name|height
argument_list|()
argument_list|,
name|rect
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
comment|// flip width and height
name|QTransform
name|m
init|=
name|QTransform
operator|::
name|fromTranslate
argument_list|(
name|rect
operator|.
name|height
argument_list|()
operator|-
literal|1
argument_list|,
operator|-
literal|1.0
argument_list|)
decl_stmt|;
name|m
operator|.
name|rotate
argument_list|(
literal|90.0
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setTransform
argument_list|(
name|m
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
name|int
name|maxWidth
init|=
name|rect
operator|.
name|width
argument_list|()
operator|-
literal|4
decl_stmt|;
name|int
name|minWidth
init|=
literal|4
decl_stmt|;
name|qreal
name|progress
init|=
name|qMax
argument_list|(
name|bar
operator|->
name|progress
argument_list|,
name|bar
operator|->
name|minimum
argument_list|)
decl_stmt|;
comment|// workaround for bug in QProgressBar
name|int
name|progressBarWidth
init|=
operator|(
name|progress
operator|-
name|bar
operator|->
name|minimum
operator|)
operator|*
name|qreal
argument_list|(
name|maxWidth
argument_list|)
operator|/
name|qMax
argument_list|(
name|qreal
argument_list|(
literal|1.0
argument_list|)
argument_list|,
name|qreal
argument_list|(
name|bar
operator|->
name|maximum
argument_list|)
operator|-
name|bar
operator|->
name|minimum
argument_list|)
decl_stmt|;
name|int
name|width
init|=
name|indeterminate
condition|?
name|maxWidth
else|:
name|qMax
argument_list|(
name|minWidth
argument_list|,
name|progressBarWidth
argument_list|)
decl_stmt|;
name|bool
name|reverse
init|=
operator|(
operator|!
name|vertical
operator|&&
operator|(
name|bar
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
operator|)
operator|)
operator|||
name|vertical
decl_stmt|;
if|if
condition|(
name|inverted
condition|)
name|reverse
operator|=
operator|!
name|reverse
expr_stmt|;
name|QRect
name|progressBar
decl_stmt|;
if|if
condition|(
operator|!
name|indeterminate
condition|)
block|{
if|if
condition|(
operator|!
name|reverse
condition|)
block|{
name|progressBar
operator|.
name|setRect
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|width
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|height
argument_list|()
operator|-
literal|3
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|progressBar
operator|.
name|setRect
argument_list|(
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
operator|-
name|width
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|width
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|height
argument_list|()
operator|-
literal|3
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|Q_D
argument_list|(
specifier|const
name|QCleanlooksStyle
argument_list|)
expr_stmt|;
name|int
name|slideWidth
init|=
operator|(
operator|(
name|rect
operator|.
name|width
argument_list|()
operator|-
literal|4
operator|)
operator|*
literal|2
operator|)
operator|/
literal|3
decl_stmt|;
name|int
name|step
init|=
operator|(
operator|(
name|d
operator|->
name|animateStep
operator|*
name|slideWidth
operator|)
operator|/
name|d
operator|->
name|animationFps
operator|)
operator|%
name|slideWidth
decl_stmt|;
if|if
condition|(
operator|(
operator|(
operator|(
name|d
operator|->
name|animateStep
operator|*
name|slideWidth
operator|)
operator|/
name|d
operator|->
name|animationFps
operator|)
operator|%
operator|(
literal|2
operator|*
name|slideWidth
operator|)
operator|)
operator|>=
name|slideWidth
condition|)
name|step
operator|=
name|slideWidth
operator|-
name|step
expr_stmt|;
name|progressBar
operator|.
name|setRect
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|1
operator|+
name|step
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|slideWidth
operator|/
literal|2
argument_list|,
name|rect
operator|.
name|height
argument_list|()
operator|-
literal|3
argument_list|)
expr_stmt|;
block|}
name|QColor
name|highlight
init|=
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Normal
argument_list|,
name|QPalette
operator|::
name|Highlight
argument_list|)
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|highlight
operator|.
name|darker
argument_list|(
literal|140
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QColor
name|highlightedGradientStartColor
init|=
name|highlight
operator|.
name|lighter
argument_list|(
literal|100
argument_list|)
decl_stmt|;
name|QColor
name|highlightedGradientStopColor
init|=
name|highlight
operator|.
name|lighter
argument_list|(
literal|130
argument_list|)
decl_stmt|;
name|QLinearGradient
name|gradient
argument_list|(
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|QPoint
argument_list|(
name|rect
operator|.
name|bottomLeft
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|rect
operator|.
name|bottomLeft
argument_list|()
operator|.
name|y
argument_list|()
operator|*
literal|2
argument_list|)
argument_list|)
decl_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|highlightedGradientStartColor
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|1
argument_list|,
name|highlightedGradientStopColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|gradient
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|progressBar
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|highlight
operator|.
name|lighter
argument_list|(
literal|120
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|progressBar
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|progressBar
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|progressBar
operator|.
name|right
argument_list|()
argument_list|,
name|progressBar
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|progressBar
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|progressBar
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|progressBar
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|progressBar
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|highlightedGradientStartColor
argument_list|,
literal|7.0
argument_list|)
argument_list|)
expr_stmt|;
comment|//QPen(option->palette.highlight(), 3));
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
name|painter
operator|->
name|setClipRect
argument_list|(
name|progressBar
operator|.
name|adjusted
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|x
init|=
name|progressBar
operator|.
name|left
argument_list|()
operator|-
literal|32
init|;
name|x
operator|<
name|rect
operator|.
name|right
argument_list|()
condition|;
name|x
operator|+=
literal|18
control|)
block|{
name|painter
operator|->
name|drawLine
argument_list|(
name|x
argument_list|,
name|progressBar
operator|.
name|bottom
argument_list|()
operator|+
literal|1
argument_list|,
name|x
operator|+
literal|23
argument_list|,
name|progressBar
operator|.
name|top
argument_list|()
operator|-
literal|2
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
case|case
name|CE_MenuBarItem
case|:
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
if|if
condition|(
specifier|const
name|QStyleOptionMenuItem
modifier|*
name|mbi
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionMenuItem
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|QStyleOptionMenuItem
name|item
init|=
operator|*
name|mbi
decl_stmt|;
name|item
operator|.
name|rect
operator|=
name|mbi
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QColor
name|highlightOutline
init|=
name|highlight
operator|.
name|darker
argument_list|(
literal|125
argument_list|)
decl_stmt|;
name|QLinearGradient
name|gradient
argument_list|(
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|QPoint
argument_list|(
name|rect
operator|.
name|bottomLeft
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|rect
operator|.
name|bottomLeft
argument_list|()
operator|.
name|y
argument_list|()
operator|*
literal|2
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
operator|.
name|gradient
argument_list|()
condition|)
block|{
name|gradient
operator|.
name|setStops
argument_list|(
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
operator|.
name|gradient
argument_list|()
operator|->
name|stops
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|1
argument_list|,
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|110
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|fillRect
argument_list|(
name|rect
argument_list|,
name|gradient
argument_list|)
expr_stmt|;
name|QCommonStyle
operator|::
name|drawControl
argument_list|(
name|element
argument_list|,
operator|&
name|item
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|bool
name|act
init|=
name|mbi
operator|->
name|state
operator|&
name|State_Selected
operator|&&
name|mbi
operator|->
name|state
operator|&
name|State_Sunken
decl_stmt|;
name|bool
name|dis
init|=
operator|!
operator|(
name|mbi
operator|->
name|state
operator|&
name|State_Enabled
operator|)
decl_stmt|;
name|QRect
name|r
init|=
name|option
operator|->
name|rect
decl_stmt|;
if|if
condition|(
name|act
condition|)
block|{
name|qt_cleanlooks_draw_gradient
argument_list|(
name|painter
argument_list|,
name|r
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|highlight
argument_list|,
name|highlightOutline
argument_list|,
name|TopDown
argument_list|,
name|option
operator|->
name|palette
operator|.
name|highlight
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|highlightOutline
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
specifier|const
name|QLine
name|lines
index|[
literal|4
index|]
init|=
block|{
name|QLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|)
block|,
name|QLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|)
block|,
name|QLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|)
block|,
name|QLine
argument_list|(
argument|QPoint(r.left() +
literal|1
argument|, r.top())
argument_list|,
argument|QPoint(r.right() -
literal|1
argument|, r.top())
argument_list|)
block|}
decl_stmt|;
name|painter
operator|->
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|4
argument_list|)
expr_stmt|;
comment|//draw text
name|QPalette
operator|::
name|ColorRole
name|textRole
init|=
name|dis
condition|?
name|QPalette
operator|::
name|Text
else|:
name|QPalette
operator|::
name|HighlightedText
decl_stmt|;
name|uint
name|alignment
init|=
name|Qt
operator|::
name|AlignCenter
operator||
name|Qt
operator|::
name|TextShowMnemonic
operator||
name|Qt
operator|::
name|TextDontClip
operator||
name|Qt
operator|::
name|TextSingleLine
decl_stmt|;
if|if
condition|(
operator|!
name|styleHint
argument_list|(
name|SH_UnderlineShortcut
argument_list|,
name|mbi
argument_list|,
name|widget
argument_list|)
condition|)
name|alignment
operator||=
name|Qt
operator|::
name|TextHideMnemonic
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawItemText
argument_list|(
name|painter
argument_list|,
name|item
operator|.
name|rect
argument_list|,
name|alignment
argument_list|,
name|mbi
operator|->
name|palette
argument_list|,
name|mbi
operator|->
name|state
operator|&
name|State_Enabled
argument_list|,
name|mbi
operator|->
name|text
argument_list|,
name|textRole
argument_list|)
expr_stmt|;
block|}
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
case|case
name|CE_MenuItem
case|:
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
comment|// Draws one item in a popup menu.
if|if
condition|(
specifier|const
name|QStyleOptionMenuItem
modifier|*
name|menuItem
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionMenuItem
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|QColor
name|highlightOutline
init|=
name|highlight
operator|.
name|darker
argument_list|(
literal|125
argument_list|)
decl_stmt|;
name|QColor
name|menuBackground
init|=
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|104
argument_list|)
decl_stmt|;
name|QColor
name|borderColor
init|=
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|160
argument_list|)
decl_stmt|;
name|QColor
name|alphaCornerColor
decl_stmt|;
if|if
condition|(
name|widget
condition|)
block|{
comment|// ### backgroundrole/foregroundrole should be part of the style option
name|alphaCornerColor
operator|=
name|mergedColors
argument_list|(
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|widget
operator|->
name|backgroundRole
argument_list|()
argument_list|)
argument_list|,
name|borderColor
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|alphaCornerColor
operator|=
name|mergedColors
argument_list|(
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
name|borderColor
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|menuItem
operator|->
name|menuItemType
operator|==
name|QStyleOptionMenuItem
operator|::
name|Separator
condition|)
block|{
name|painter
operator|->
name|fillRect
argument_list|(
name|menuItem
operator|->
name|rect
argument_list|,
name|menuBackground
argument_list|)
expr_stmt|;
name|int
name|w
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|!
name|menuItem
operator|->
name|text
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|painter
operator|->
name|setFont
argument_list|(
name|menuItem
operator|->
name|font
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawItemText
argument_list|(
name|painter
argument_list|,
name|menuItem
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|5
argument_list|,
literal|0
argument_list|,
operator|-
literal|5
argument_list|,
literal|0
argument_list|)
argument_list|,
name|Qt
operator|::
name|AlignLeft
operator||
name|Qt
operator|::
name|AlignVCenter
argument_list|,
name|menuItem
operator|->
name|palette
argument_list|,
name|menuItem
operator|->
name|state
operator|&
name|State_Enabled
argument_list|,
name|menuItem
operator|->
name|text
argument_list|,
name|QPalette
operator|::
name|Text
argument_list|)
expr_stmt|;
name|w
operator|=
name|menuItem
operator|->
name|fontMetrics
operator|.
name|width
argument_list|(
name|menuItem
operator|->
name|text
argument_list|)
operator|+
literal|5
expr_stmt|;
block|}
name|painter
operator|->
name|setPen
argument_list|(
name|shadow
operator|.
name|lighter
argument_list|(
literal|106
argument_list|)
argument_list|)
expr_stmt|;
name|bool
name|reverse
init|=
name|menuItem
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
decl_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|menuItem
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|5
operator|+
operator|(
name|reverse
condition|?
literal|0
else|:
name|w
operator|)
argument_list|,
name|menuItem
operator|->
name|rect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
argument_list|,
name|menuItem
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|5
operator|-
operator|(
name|reverse
condition|?
name|w
else|:
literal|0
operator|)
argument_list|,
name|menuItem
operator|->
name|rect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
block|}
name|bool
name|selected
init|=
name|menuItem
operator|->
name|state
operator|&
name|State_Selected
operator|&&
name|menuItem
operator|->
name|state
operator|&
name|State_Enabled
decl_stmt|;
if|if
condition|(
name|selected
condition|)
block|{
name|QRect
name|r
init|=
name|option
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
operator|-
literal|2
argument_list|,
operator|-
literal|1
argument_list|)
decl_stmt|;
name|qt_cleanlooks_draw_gradient
argument_list|(
name|painter
argument_list|,
name|r
argument_list|,
name|highlight
argument_list|,
name|highlightOutline
argument_list|,
name|TopDown
argument_list|,
name|highlight
argument_list|)
expr_stmt|;
name|r
operator|=
name|r
operator|.
name|adjusted
argument_list|(
operator|-
literal|1
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|highlightOutline
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
specifier|const
name|QLine
name|lines
index|[
literal|4
index|]
init|=
block|{
name|QLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
block|,
name|QLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
block|,
name|QLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|)
block|,
name|QLine
argument_list|(
argument|QPoint(r.left() +
literal|1
argument|, r.top())
argument_list|,
argument|QPoint(r.right() -
literal|1
argument|, r.top())
argument_list|)
block|}
decl_stmt|;
name|painter
operator|->
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|4
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|painter
operator|->
name|fillRect
argument_list|(
name|option
operator|->
name|rect
argument_list|,
name|menuBackground
argument_list|)
expr_stmt|;
block|}
name|bool
name|checkable
init|=
name|menuItem
operator|->
name|checkType
operator|!=
name|QStyleOptionMenuItem
operator|::
name|NotCheckable
decl_stmt|;
name|bool
name|checked
init|=
name|menuItem
operator|->
name|checked
decl_stmt|;
name|bool
name|sunken
init|=
name|menuItem
operator|->
name|state
operator|&
name|State_Sunken
decl_stmt|;
name|bool
name|enabled
init|=
name|menuItem
operator|->
name|state
operator|&
name|State_Enabled
decl_stmt|;
name|bool
name|ignoreCheckMark
init|=
literal|false
decl_stmt|;
name|int
name|checkcol
init|=
name|qMax
argument_list|(
name|menuItem
operator|->
name|maxIconWidth
argument_list|,
literal|20
argument_list|)
decl_stmt|;
ifndef|#
directive|ifndef
name|QT_NO_COMBOBOX
if|if
condition|(
name|qobject_cast
argument_list|<
specifier|const
name|QComboBox
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
condition|)
name|ignoreCheckMark
operator|=
literal|true
expr_stmt|;
comment|//ignore the checkmarks provided by the QComboMenuDelegate
endif|#
directive|endif
if|if
condition|(
operator|!
name|ignoreCheckMark
condition|)
block|{
comment|// Check
name|QRect
name|checkRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|7
argument_list|,
name|option
operator|->
name|rect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|-
literal|6
argument_list|,
literal|13
argument_list|,
literal|13
argument_list|)
decl_stmt|;
name|checkRect
operator|=
name|visualRect
argument_list|(
name|menuItem
operator|->
name|direction
argument_list|,
name|menuItem
operator|->
name|rect
argument_list|,
name|checkRect
argument_list|)
expr_stmt|;
if|if
condition|(
name|checkable
condition|)
block|{
if|if
condition|(
name|menuItem
operator|->
name|checkType
operator|&
name|QStyleOptionMenuItem
operator|::
name|Exclusive
condition|)
block|{
comment|// Radio button
if|if
condition|(
name|checked
operator|||
name|sunken
condition|)
block|{
name|painter
operator|->
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|QPalette
operator|::
name|ColorRole
name|textRole
init|=
operator|!
name|enabled
condition|?
name|QPalette
operator|::
name|Text
else|:
name|selected
condition|?
name|QPalette
operator|::
name|HighlightedText
else|:
name|QPalette
operator|::
name|ButtonText
decl_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|option
operator|->
name|palette
operator|.
name|brush
argument_list|(
name|option
operator|->
name|palette
operator|.
name|currentColorGroup
argument_list|()
argument_list|,
name|textRole
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawEllipse
argument_list|(
name|checkRect
operator|.
name|adjusted
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|,
operator|-
literal|4
argument_list|,
operator|-
literal|4
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
comment|// Check box
if|if
condition|(
name|menuItem
operator|->
name|icon
operator|.
name|isNull
argument_list|()
condition|)
block|{
if|if
condition|(
name|checked
operator|||
name|sunken
condition|)
block|{
name|QImage
name|image
argument_list|(
name|qt_cleanlooks_menuitem_checkbox_checked
argument_list|)
decl_stmt|;
if|if
condition|(
name|enabled
operator|&&
operator|(
name|menuItem
operator|->
name|state
operator|&
name|State_Selected
operator|)
condition|)
block|{
name|image
operator|.
name|setColor
argument_list|(
literal|1
argument_list|,
literal|0x55ffffff
argument_list|)
expr_stmt|;
name|image
operator|.
name|setColor
argument_list|(
literal|2
argument_list|,
literal|0xAAffffff
argument_list|)
expr_stmt|;
name|image
operator|.
name|setColor
argument_list|(
literal|3
argument_list|,
literal|0xBBffffff
argument_list|)
expr_stmt|;
name|image
operator|.
name|setColor
argument_list|(
literal|4
argument_list|,
literal|0xFFffffff
argument_list|)
expr_stmt|;
name|image
operator|.
name|setColor
argument_list|(
literal|5
argument_list|,
literal|0x33ffffff
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|image
operator|.
name|setColor
argument_list|(
literal|1
argument_list|,
literal|0x55000000
argument_list|)
expr_stmt|;
name|image
operator|.
name|setColor
argument_list|(
literal|2
argument_list|,
literal|0xAA000000
argument_list|)
expr_stmt|;
name|image
operator|.
name|setColor
argument_list|(
literal|3
argument_list|,
literal|0xBB000000
argument_list|)
expr_stmt|;
name|image
operator|.
name|setColor
argument_list|(
literal|4
argument_list|,
literal|0xFF000000
argument_list|)
expr_stmt|;
name|image
operator|.
name|setColor
argument_list|(
literal|5
argument_list|,
literal|0x33000000
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|drawImage
argument_list|(
name|QPoint
argument_list|(
name|checkRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|-
name|image
operator|.
name|width
argument_list|()
operator|/
literal|2
argument_list|,
name|checkRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|-
name|image
operator|.
name|height
argument_list|()
operator|/
literal|2
argument_list|)
argument_list|,
name|image
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
else|else
block|{
comment|//ignore checkmark
if|if
condition|(
name|menuItem
operator|->
name|icon
operator|.
name|isNull
argument_list|()
condition|)
name|checkcol
operator|=
literal|0
expr_stmt|;
else|else
name|checkcol
operator|=
name|menuItem
operator|->
name|maxIconWidth
expr_stmt|;
block|}
comment|// Text and icon, ripped from windows style
name|bool
name|dis
init|=
operator|!
operator|(
name|menuItem
operator|->
name|state
operator|&
name|State_Enabled
operator|)
decl_stmt|;
name|bool
name|act
init|=
name|menuItem
operator|->
name|state
operator|&
name|State_Selected
decl_stmt|;
specifier|const
name|QStyleOption
modifier|*
name|opt
init|=
name|option
decl_stmt|;
specifier|const
name|QStyleOptionMenuItem
modifier|*
name|menuitem
init|=
name|menuItem
decl_stmt|;
name|QPainter
modifier|*
name|p
init|=
name|painter
decl_stmt|;
name|QRect
name|vCheckRect
init|=
name|visualRect
argument_list|(
name|opt
operator|->
name|direction
argument_list|,
name|menuitem
operator|->
name|rect
argument_list|,
name|QRect
argument_list|(
name|menuitem
operator|->
name|rect
operator|.
name|x
argument_list|()
argument_list|,
name|menuitem
operator|->
name|rect
operator|.
name|y
argument_list|()
argument_list|,
name|checkcol
argument_list|,
name|menuitem
operator|->
name|rect
operator|.
name|height
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|menuItem
operator|->
name|icon
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|QIcon
operator|::
name|Mode
name|mode
init|=
name|dis
condition|?
name|QIcon
operator|::
name|Disabled
else|:
name|QIcon
operator|::
name|Normal
decl_stmt|;
if|if
condition|(
name|act
operator|&&
operator|!
name|dis
condition|)
name|mode
operator|=
name|QIcon
operator|::
name|Active
expr_stmt|;
name|QPixmap
name|pixmap
decl_stmt|;
name|int
name|smallIconSize
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_SmallIconSize
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|QSize
name|iconSize
argument_list|(
name|smallIconSize
argument_list|,
name|smallIconSize
argument_list|)
decl_stmt|;
ifndef|#
directive|ifndef
name|QT_NO_COMBOBOX
if|if
condition|(
specifier|const
name|QComboBox
modifier|*
name|combo
init|=
name|qobject_cast
argument_list|<
specifier|const
name|QComboBox
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
condition|)
name|iconSize
operator|=
name|combo
operator|->
name|iconSize
argument_list|()
expr_stmt|;
endif|#
directive|endif
comment|// QT_NO_COMBOBOX
if|if
condition|(
name|checked
condition|)
name|pixmap
operator|=
name|menuItem
operator|->
name|icon
operator|.
name|pixmap
argument_list|(
name|iconSize
argument_list|,
name|mode
argument_list|,
name|QIcon
operator|::
name|On
argument_list|)
expr_stmt|;
else|else
name|pixmap
operator|=
name|menuItem
operator|->
name|icon
operator|.
name|pixmap
argument_list|(
name|iconSize
argument_list|,
name|mode
argument_list|)
expr_stmt|;
name|int
name|pixw
init|=
name|pixmap
operator|.
name|width
argument_list|()
decl_stmt|;
name|int
name|pixh
init|=
name|pixmap
operator|.
name|height
argument_list|()
decl_stmt|;
name|QRect
name|pmr
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|pixw
argument_list|,
name|pixh
argument_list|)
decl_stmt|;
name|pmr
operator|.
name|moveCenter
argument_list|(
name|vCheckRect
operator|.
name|center
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|menuItem
operator|->
name|palette
operator|.
name|text
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|checkable
operator|&&
name|checked
condition|)
block|{
name|QStyleOption
name|opt
init|=
operator|*
name|option
decl_stmt|;
if|if
condition|(
name|act
condition|)
block|{
name|QColor
name|activeColor
init|=
name|mergedColors
argument_list|(
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
name|option
operator|->
name|palette
operator|.
name|highlight
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
decl_stmt|;
name|opt
operator|.
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Button
argument_list|,
name|activeColor
argument_list|)
expr_stmt|;
block|}
name|opt
operator|.
name|state
operator||=
name|State_Sunken
expr_stmt|;
name|opt
operator|.
name|rect
operator|=
name|vCheckRect
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_PanelButtonCommand
argument_list|,
operator|&
name|opt
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|drawPixmap
argument_list|(
name|pmr
operator|.
name|topLeft
argument_list|()
argument_list|,
name|pixmap
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|selected
condition|)
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|menuItem
operator|->
name|palette
operator|.
name|highlightedText
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|menuItem
operator|->
name|palette
operator|.
name|text
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|int
name|x
decl_stmt|,
name|y
decl_stmt|,
name|w
decl_stmt|,
name|h
decl_stmt|;
name|menuitem
operator|->
name|rect
operator|.
name|getRect
argument_list|(
operator|&
name|x
argument_list|,
operator|&
name|y
argument_list|,
operator|&
name|w
argument_list|,
operator|&
name|h
argument_list|)
expr_stmt|;
name|int
name|tab
init|=
name|menuitem
operator|->
name|tabWidth
decl_stmt|;
name|QColor
name|discol
decl_stmt|;
if|if
condition|(
name|dis
condition|)
block|{
name|discol
operator|=
name|menuitem
operator|->
name|palette
operator|.
name|text
argument_list|()
operator|.
name|color
argument_list|()
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|discol
argument_list|)
expr_stmt|;
block|}
name|int
name|xm
init|=
name|windowsItemFrame
operator|+
name|checkcol
operator|+
name|windowsItemHMargin
decl_stmt|;
name|int
name|xpos
init|=
name|menuitem
operator|->
name|rect
operator|.
name|x
argument_list|()
operator|+
name|xm
decl_stmt|;
name|QRect
name|textRect
argument_list|(
name|xpos
argument_list|,
name|y
operator|+
name|windowsItemVMargin
argument_list|,
name|w
operator|-
name|xm
operator|-
name|windowsRightBorder
operator|-
name|tab
operator|+
literal|1
argument_list|,
name|h
operator|-
literal|2
operator|*
name|windowsItemVMargin
argument_list|)
decl_stmt|;
name|QRect
name|vTextRect
init|=
name|visualRect
argument_list|(
name|opt
operator|->
name|direction
argument_list|,
name|menuitem
operator|->
name|rect
argument_list|,
name|textRect
argument_list|)
decl_stmt|;
name|QString
name|s
init|=
name|menuitem
operator|->
name|text
decl_stmt|;
if|if
condition|(
operator|!
name|s
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
comment|// draw text
name|p
operator|->
name|save
argument_list|()
expr_stmt|;
name|int
name|t
init|=
name|s
operator|.
name|indexOf
argument_list|(
name|QLatin1Char
argument_list|(
literal|'\t'
argument_list|)
argument_list|)
decl_stmt|;
name|int
name|text_flags
init|=
name|Qt
operator|::
name|AlignVCenter
operator||
name|Qt
operator|::
name|TextShowMnemonic
operator||
name|Qt
operator|::
name|TextDontClip
operator||
name|Qt
operator|::
name|TextSingleLine
decl_stmt|;
if|if
condition|(
operator|!
name|styleHint
argument_list|(
name|SH_UnderlineShortcut
argument_list|,
name|menuitem
argument_list|,
name|widget
argument_list|)
condition|)
name|text_flags
operator||=
name|Qt
operator|::
name|TextHideMnemonic
expr_stmt|;
name|text_flags
operator||=
name|Qt
operator|::
name|AlignLeft
expr_stmt|;
if|if
condition|(
name|t
operator|>=
literal|0
condition|)
block|{
name|QRect
name|vShortcutRect
init|=
name|visualRect
argument_list|(
name|opt
operator|->
name|direction
argument_list|,
name|menuitem
operator|->
name|rect
argument_list|,
name|QRect
argument_list|(
name|textRect
operator|.
name|topRight
argument_list|()
argument_list|,
name|QPoint
argument_list|(
name|menuitem
operator|->
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|textRect
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|dis
operator|&&
operator|!
name|act
operator|&&
name|proxy
argument_list|()
operator|->
name|styleHint
argument_list|(
name|SH_EtchDisabledText
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
condition|)
block|{
name|p
operator|->
name|setPen
argument_list|(
name|menuitem
operator|->
name|palette
operator|.
name|light
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawText
argument_list|(
name|vShortcutRect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|text_flags
argument_list|,
name|s
operator|.
name|mid
argument_list|(
name|t
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|discol
argument_list|)
expr_stmt|;
block|}
name|p
operator|->
name|drawText
argument_list|(
name|vShortcutRect
argument_list|,
name|text_flags
argument_list|,
name|s
operator|.
name|mid
argument_list|(
name|t
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|s
operator|=
name|s
operator|.
name|left
argument_list|(
name|t
argument_list|)
expr_stmt|;
block|}
name|QFont
name|font
init|=
name|menuitem
operator|->
name|font
decl_stmt|;
comment|// font may not have any "hard" flags set. We override
comment|// the point size so that when it is resolved against the device, this font will win.
comment|// This is mainly to handle cases where someone sets the font on the window
comment|// and then the combo inherits it and passes it onward. At that point the resolve mask
comment|// is very, very weak. This makes it stonger.
name|font
operator|.
name|setPointSizeF
argument_list|(
name|QFontInfo
argument_list|(
name|menuItem
operator|->
name|font
argument_list|)
operator|.
name|pointSizeF
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|menuitem
operator|->
name|menuItemType
operator|==
name|QStyleOptionMenuItem
operator|::
name|DefaultItem
condition|)
name|font
operator|.
name|setBold
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|p
operator|->
name|setFont
argument_list|(
name|font
argument_list|)
expr_stmt|;
if|if
condition|(
name|dis
operator|&&
operator|!
name|act
operator|&&
name|proxy
argument_list|()
operator|->
name|styleHint
argument_list|(
name|SH_EtchDisabledText
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
condition|)
block|{
name|p
operator|->
name|setPen
argument_list|(
name|menuitem
operator|->
name|palette
operator|.
name|light
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawText
argument_list|(
name|vTextRect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|text_flags
argument_list|,
name|s
operator|.
name|left
argument_list|(
name|t
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|discol
argument_list|)
expr_stmt|;
block|}
name|p
operator|->
name|drawText
argument_list|(
name|vTextRect
argument_list|,
name|text_flags
argument_list|,
name|s
operator|.
name|left
argument_list|(
name|t
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
comment|// Arrow
if|if
condition|(
name|menuItem
operator|->
name|menuItemType
operator|==
name|QStyleOptionMenuItem
operator|::
name|SubMenu
condition|)
block|{
comment|// draw sub menu arrow
name|int
name|dim
init|=
operator|(
name|menuItem
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
literal|4
operator|)
operator|/
literal|2
decl_stmt|;
name|PrimitiveElement
name|arrow
decl_stmt|;
name|arrow
operator|=
name|QApplication
operator|::
name|isRightToLeft
argument_list|()
condition|?
name|PE_IndicatorArrowLeft
else|:
name|PE_IndicatorArrowRight
expr_stmt|;
name|int
name|xpos
init|=
name|menuItem
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
name|menuItem
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|-
literal|3
operator|-
name|dim
decl_stmt|;
name|QRect
name|vSubMenuRect
init|=
name|visualRect
argument_list|(
name|option
operator|->
name|direction
argument_list|,
name|menuItem
operator|->
name|rect
argument_list|,
name|QRect
argument_list|(
name|xpos
argument_list|,
name|menuItem
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
name|menuItem
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|/
literal|2
operator|-
name|dim
operator|/
literal|2
argument_list|,
name|dim
argument_list|,
name|dim
argument_list|)
argument_list|)
decl_stmt|;
name|QStyleOptionMenuItem
name|newMI
init|=
operator|*
name|menuItem
decl_stmt|;
name|newMI
operator|.
name|rect
operator|=
name|vSubMenuRect
expr_stmt|;
name|newMI
operator|.
name|state
operator|=
operator|!
name|enabled
condition|?
name|State_None
else|:
name|State_Enabled
expr_stmt|;
if|if
condition|(
name|selected
condition|)
name|newMI
operator|.
name|palette
operator|.
name|setColor
argument_list|(
name|QPalette
operator|::
name|ButtonText
argument_list|,
name|newMI
operator|.
name|palette
operator|.
name|highlightedText
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|arrow
argument_list|,
operator|&
name|newMI
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
case|case
name|CE_MenuHMargin
case|:
case|case
name|CE_MenuVMargin
case|:
break|break;
case|case
name|CE_MenuEmptyArea
case|:
break|break;
case|case
name|CE_PushButtonLabel
case|:
if|if
condition|(
specifier|const
name|QStyleOptionButton
modifier|*
name|button
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionButton
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|QRect
name|ir
init|=
name|button
operator|->
name|rect
decl_stmt|;
name|uint
name|tf
init|=
name|Qt
operator|::
name|AlignVCenter
decl_stmt|;
if|if
condition|(
name|styleHint
argument_list|(
name|SH_UnderlineShortcut
argument_list|,
name|button
argument_list|,
name|widget
argument_list|)
condition|)
name|tf
operator||=
name|Qt
operator|::
name|TextShowMnemonic
expr_stmt|;
else|else
name|tf
operator||=
name|Qt
operator|::
name|TextHideMnemonic
expr_stmt|;
if|if
condition|(
operator|!
name|button
operator|->
name|icon
operator|.
name|isNull
argument_list|()
condition|)
block|{
comment|//Center both icon and text
name|QPoint
name|point
decl_stmt|;
name|QIcon
operator|::
name|Mode
name|mode
init|=
name|button
operator|->
name|state
operator|&
name|State_Enabled
condition|?
name|QIcon
operator|::
name|Normal
else|:
name|QIcon
operator|::
name|Disabled
decl_stmt|;
if|if
condition|(
name|mode
operator|==
name|QIcon
operator|::
name|Normal
operator|&&
name|button
operator|->
name|state
operator|&
name|State_HasFocus
condition|)
name|mode
operator|=
name|QIcon
operator|::
name|Active
expr_stmt|;
name|QIcon
operator|::
name|State
name|state
init|=
name|QIcon
operator|::
name|Off
decl_stmt|;
if|if
condition|(
name|button
operator|->
name|state
operator|&
name|State_On
condition|)
name|state
operator|=
name|QIcon
operator|::
name|On
expr_stmt|;
name|QPixmap
name|pixmap
init|=
name|button
operator|->
name|icon
operator|.
name|pixmap
argument_list|(
name|button
operator|->
name|iconSize
argument_list|,
name|mode
argument_list|,
name|state
argument_list|)
decl_stmt|;
name|int
name|w
init|=
name|pixmap
operator|.
name|width
argument_list|()
decl_stmt|;
name|int
name|h
init|=
name|pixmap
operator|.
name|height
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|button
operator|->
name|text
operator|.
name|isEmpty
argument_list|()
condition|)
name|w
operator|+=
name|button
operator|->
name|fontMetrics
operator|.
name|boundingRect
argument_list|(
name|option
operator|->
name|rect
argument_list|,
name|tf
argument_list|,
name|button
operator|->
name|text
argument_list|)
operator|.
name|width
argument_list|()
operator|+
literal|2
expr_stmt|;
name|point
operator|=
name|QPoint
argument_list|(
name|ir
operator|.
name|x
argument_list|()
operator|+
name|ir
operator|.
name|width
argument_list|()
operator|/
literal|2
operator|-
name|w
operator|/
literal|2
argument_list|,
name|ir
operator|.
name|y
argument_list|()
operator|+
name|ir
operator|.
name|height
argument_list|()
operator|/
literal|2
operator|-
name|h
operator|/
literal|2
argument_list|)
expr_stmt|;
if|if
condition|(
name|button
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
condition|)
name|point
operator|.
name|rx
argument_list|()
operator|+=
name|pixmap
operator|.
name|width
argument_list|()
expr_stmt|;
name|painter
operator|->
name|drawPixmap
argument_list|(
name|visualPos
argument_list|(
name|button
operator|->
name|direction
argument_list|,
name|button
operator|->
name|rect
argument_list|,
name|point
argument_list|)
argument_list|,
name|pixmap
argument_list|)
expr_stmt|;
if|if
condition|(
name|button
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
condition|)
name|ir
operator|.
name|translate
argument_list|(
operator|-
name|point
operator|.
name|x
argument_list|()
operator|-
literal|2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
else|else
name|ir
operator|.
name|translate
argument_list|(
name|point
operator|.
name|x
argument_list|()
operator|+
name|pixmap
operator|.
name|width
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// left-align text if there is
if|if
condition|(
operator|!
name|button
operator|->
name|text
operator|.
name|isEmpty
argument_list|()
condition|)
name|tf
operator||=
name|Qt
operator|::
name|AlignLeft
expr_stmt|;
block|}
else|else
block|{
name|tf
operator||=
name|Qt
operator|::
name|AlignHCenter
expr_stmt|;
block|}
if|if
condition|(
name|button
operator|->
name|features
operator|&
name|QStyleOptionButton
operator|::
name|HasMenu
condition|)
name|ir
operator|=
name|ir
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_MenuButtonIndicator
argument_list|,
name|button
argument_list|,
name|widget
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawItemText
argument_list|(
name|painter
argument_list|,
name|ir
argument_list|,
name|tf
argument_list|,
name|button
operator|->
name|palette
argument_list|,
operator|(
name|button
operator|->
name|state
operator|&
name|State_Enabled
operator|)
argument_list|,
name|button
operator|->
name|text
argument_list|,
name|QPalette
operator|::
name|ButtonText
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|CE_MenuBarEmptyArea
case|:
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
block|{
name|QColor
name|shadow
init|=
name|mergedColors
argument_list|(
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|120
argument_list|)
argument_list|,
name|dark
operator|.
name|lighter
argument_list|(
literal|140
argument_list|)
argument_list|,
literal|60
argument_list|)
decl_stmt|;
name|QLinearGradient
name|gradient
argument_list|(
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|QPoint
argument_list|(
name|rect
operator|.
name|bottomLeft
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|rect
operator|.
name|bottomLeft
argument_list|()
operator|.
name|y
argument_list|()
operator|*
literal|2
argument_list|)
argument_list|)
decl_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|1
argument_list|,
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|110
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|fillRect
argument_list|(
name|rect
argument_list|,
name|gradient
argument_list|)
expr_stmt|;
ifndef|#
directive|ifndef
name|QT_NO_MAINWINDOW
if|if
condition|(
name|widget
operator|&&
name|qobject_cast
argument_list|<
specifier|const
name|QMainWindow
operator|*
argument_list|>
argument_list|(
name|widget
operator|->
name|parentWidget
argument_list|()
argument_list|)
condition|)
block|{
name|QPen
name|oldPen
init|=
name|painter
operator|->
name|pen
argument_list|()
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|shadow
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
argument_list|)
expr_stmt|;
block|}
endif|#
directive|endif
comment|// QT_NO_MAINWINDOW
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
ifndef|#
directive|ifndef
name|QT_NO_TABBAR
case|case
name|CE_TabBarTabShape
case|:
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
if|if
condition|(
specifier|const
name|QStyleOptionTab
modifier|*
name|tab
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionTab
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|bool
name|rtlHorTabs
init|=
operator|(
name|tab
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
operator|&&
operator|(
name|tab
operator|->
name|shape
operator|==
name|QTabBar
operator|::
name|RoundedNorth
operator|||
name|tab
operator|->
name|shape
operator|==
name|QTabBar
operator|::
name|RoundedSouth
operator|)
operator|)
decl_stmt|;
name|bool
name|selected
init|=
name|tab
operator|->
name|state
operator|&
name|State_Selected
decl_stmt|;
name|bool
name|lastTab
init|=
operator|(
operator|(
operator|!
name|rtlHorTabs
operator|&&
name|tab
operator|->
name|position
operator|==
name|QStyleOptionTab
operator|::
name|End
operator|)
operator|||
operator|(
name|rtlHorTabs
operator|&&
name|tab
operator|->
name|position
operator|==
name|QStyleOptionTab
operator|::
name|Beginning
operator|)
operator|)
decl_stmt|;
name|bool
name|onlyTab
init|=
name|tab
operator|->
name|position
operator|==
name|QStyleOptionTab
operator|::
name|OnlyOneTab
decl_stmt|;
name|bool
name|leftCornerWidget
init|=
operator|(
name|tab
operator|->
name|cornerWidgets
operator|&
name|QStyleOptionTab
operator|::
name|LeftCornerWidget
operator|)
decl_stmt|;
name|bool
name|atBeginning
init|=
operator|(
operator|(
name|tab
operator|->
name|position
operator|==
operator|(
name|tab
operator|->
name|direction
operator|==
name|Qt
operator|::
name|LeftToRight
condition|?
name|QStyleOptionTab
operator|::
name|Beginning
else|:
name|QStyleOptionTab
operator|::
name|End
operator|)
operator|)
operator|||
name|onlyTab
operator|)
decl_stmt|;
name|bool
name|onlyOne
init|=
name|tab
operator|->
name|position
operator|==
name|QStyleOptionTab
operator|::
name|OnlyOneTab
decl_stmt|;
name|bool
name|previousSelected
init|=
operator|(
operator|(
operator|!
name|rtlHorTabs
operator|&&
name|tab
operator|->
name|selectedPosition
operator|==
name|QStyleOptionTab
operator|::
name|PreviousIsSelected
operator|)
operator|||
operator|(
name|rtlHorTabs
operator|&&
name|tab
operator|->
name|selectedPosition
operator|==
name|QStyleOptionTab
operator|::
name|NextIsSelected
operator|)
operator|)
decl_stmt|;
name|bool
name|nextSelected
init|=
operator|(
operator|(
operator|!
name|rtlHorTabs
operator|&&
name|tab
operator|->
name|selectedPosition
operator|==
name|QStyleOptionTab
operator|::
name|NextIsSelected
operator|)
operator|||
operator|(
name|rtlHorTabs
operator|&&
name|tab
operator|->
name|selectedPosition
operator|==
name|QStyleOptionTab
operator|::
name|PreviousIsSelected
operator|)
operator|)
decl_stmt|;
name|int
name|tabBarAlignment
init|=
name|proxy
argument_list|()
operator|->
name|styleHint
argument_list|(
name|SH_TabBar_Alignment
argument_list|,
name|tab
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|bool
name|leftAligned
init|=
operator|(
operator|!
name|rtlHorTabs
operator|&&
name|tabBarAlignment
operator|==
name|Qt
operator|::
name|AlignLeft
operator|)
operator|||
operator|(
name|rtlHorTabs
operator|&&
name|tabBarAlignment
operator|==
name|Qt
operator|::
name|AlignRight
operator|)
decl_stmt|;
name|bool
name|rightAligned
init|=
operator|(
operator|!
name|rtlHorTabs
operator|&&
name|tabBarAlignment
operator|==
name|Qt
operator|::
name|AlignRight
operator|)
operator|||
operator|(
name|rtlHorTabs
operator|&&
name|tabBarAlignment
operator|==
name|Qt
operator|::
name|AlignLeft
operator|)
decl_stmt|;
name|QColor
name|light
init|=
name|tab
operator|->
name|palette
operator|.
name|light
argument_list|()
operator|.
name|color
argument_list|()
decl_stmt|;
name|QColor
name|background
init|=
name|tab
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
decl_stmt|;
name|int
name|borderThinkness
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_TabBarBaseOverlap
argument_list|,
name|tab
argument_list|,
name|widget
argument_list|)
decl_stmt|;
if|if
condition|(
name|selected
condition|)
name|borderThinkness
operator|/=
literal|2
expr_stmt|;
name|QRect
name|r2
argument_list|(
name|option
operator|->
name|rect
argument_list|)
decl_stmt|;
name|int
name|x1
init|=
name|r2
operator|.
name|left
argument_list|()
decl_stmt|;
name|int
name|x2
init|=
name|r2
operator|.
name|right
argument_list|()
decl_stmt|;
name|int
name|y1
init|=
name|r2
operator|.
name|top
argument_list|()
decl_stmt|;
name|int
name|y2
init|=
name|r2
operator|.
name|bottom
argument_list|()
decl_stmt|;
name|QTransform
name|rotMatrix
decl_stmt|;
name|bool
name|flip
init|=
literal|false
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|shadow
argument_list|)
expr_stmt|;
name|QColor
name|activeHighlight
init|=
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Normal
argument_list|,
name|QPalette
operator|::
name|Highlight
argument_list|)
decl_stmt|;
switch|switch
condition|(
name|tab
operator|->
name|shape
condition|)
block|{
case|case
name|QTabBar
operator|::
name|RoundedNorth
case|:
break|break;
case|case
name|QTabBar
operator|::
name|RoundedSouth
case|:
name|rotMatrix
operator|.
name|rotate
argument_list|(
literal|180
argument_list|)
expr_stmt|;
name|rotMatrix
operator|.
name|translate
argument_list|(
literal|0
argument_list|,
operator|-
name|rect
operator|.
name|height
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
name|rotMatrix
operator|.
name|scale
argument_list|(
operator|-
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setTransform
argument_list|(
name|rotMatrix
argument_list|,
literal|true
argument_list|)
expr_stmt|;
break|break;
case|case
name|QTabBar
operator|::
name|RoundedWest
case|:
name|rotMatrix
operator|.
name|rotate
argument_list|(
literal|180
operator|+
literal|90
argument_list|)
expr_stmt|;
name|rotMatrix
operator|.
name|scale
argument_list|(
operator|-
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|flip
operator|=
literal|true
expr_stmt|;
name|painter
operator|->
name|setTransform
argument_list|(
name|rotMatrix
argument_list|,
literal|true
argument_list|)
expr_stmt|;
break|break;
case|case
name|QTabBar
operator|::
name|RoundedEast
case|:
name|rotMatrix
operator|.
name|rotate
argument_list|(
literal|90
argument_list|)
expr_stmt|;
name|rotMatrix
operator|.
name|translate
argument_list|(
literal|0
argument_list|,
operator|-
name|rect
operator|.
name|width
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
name|flip
operator|=
literal|true
expr_stmt|;
name|painter
operator|->
name|setTransform
argument_list|(
name|rotMatrix
argument_list|,
literal|true
argument_list|)
expr_stmt|;
break|break;
default|default:
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
name|QWindowsStyle
operator|::
name|drawControl
argument_list|(
name|element
argument_list|,
name|tab
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
return|return;
block|}
if|if
condition|(
name|flip
condition|)
block|{
name|QRect
name|tmp
init|=
name|rect
decl_stmt|;
name|rect
operator|=
name|QRect
argument_list|(
name|tmp
operator|.
name|y
argument_list|()
argument_list|,
name|tmp
operator|.
name|x
argument_list|()
argument_list|,
name|tmp
operator|.
name|height
argument_list|()
argument_list|,
name|tmp
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
name|int
name|temp
init|=
name|x1
decl_stmt|;
name|x1
operator|=
name|y1
expr_stmt|;
name|y1
operator|=
name|temp
expr_stmt|;
name|temp
operator|=
name|x2
expr_stmt|;
name|x2
operator|=
name|y2
expr_stmt|;
name|y2
operator|=
name|temp
expr_stmt|;
block|}
name|QLinearGradient
name|gradient
argument_list|(
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
operator|.
name|gradient
argument_list|()
condition|)
block|{
if|if
condition|(
name|selected
condition|)
name|gradient
operator|.
name|setStops
argument_list|(
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|gradient
argument_list|()
operator|->
name|stops
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|gradient
operator|.
name|setStops
argument_list|(
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|gradient
argument_list|()
operator|->
name|stops
argument_list|()
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|selected
condition|)
block|{
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|104
argument_list|)
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|1
argument_list|,
name|tabFrameColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|fillRect
argument_list|(
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|gradient
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|y1
operator|+=
literal|2
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|1
argument_list|,
name|dark
operator|.
name|lighter
argument_list|(
literal|120
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|fillRect
argument_list|(
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|,
operator|-
literal|2
argument_list|)
argument_list|,
name|gradient
argument_list|)
expr_stmt|;
block|}
comment|// Delete border
if|if
condition|(
name|selected
condition|)
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|activeHighlight
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|x1
operator|+
literal|1
argument_list|,
name|y1
operator|+
literal|1
argument_list|,
name|x2
operator|-
literal|1
argument_list|,
name|y1
operator|+
literal|1
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|x1
argument_list|,
name|y1
operator|+
literal|2
argument_list|,
name|x2
argument_list|,
name|y1
operator|+
literal|2
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|dark
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|x1
argument_list|,
name|y2
operator|-
literal|1
argument_list|,
name|x2
operator|+
literal|2
argument_list|,
name|y2
operator|-
literal|1
argument_list|)
expr_stmt|;
if|if
condition|(
name|tab
operator|->
name|shape
operator|==
name|QTabBar
operator|::
name|RoundedNorth
operator|||
name|tab
operator|->
name|shape
operator|==
name|QTabBar
operator|::
name|RoundedWest
condition|)
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|light
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|x1
argument_list|,
name|y2
argument_list|,
name|x2
argument_list|,
name|y2
argument_list|)
expr_stmt|;
block|}
block|}
comment|// Left
if|if
condition|(
name|atBeginning
operator|||
name|selected
condition|)
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|light
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|x1
operator|+
literal|1
argument_list|,
name|y1
operator|+
literal|2
operator|+
literal|1
argument_list|,
name|x1
operator|+
literal|1
argument_list|,
name|y2
operator|-
operator|(
operator|(
name|onlyOne
operator|||
name|atBeginning
operator|)
operator|&&
name|selected
operator|&&
name|leftAligned
condition|?
literal|0
else|:
name|borderThinkness
operator|)
operator|-
operator|(
name|atBeginning
operator|&&
name|leftCornerWidget
condition|?
literal|1
else|:
literal|0
operator|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPoint
argument_list|(
name|x1
operator|+
literal|1
argument_list|,
name|y1
operator|+
literal|1
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|dark
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|x1
argument_list|,
name|y1
operator|+
literal|2
argument_list|,
name|x1
argument_list|,
name|y2
operator|-
operator|(
operator|(
name|onlyOne
operator|||
name|atBeginning
operator|)
operator|&&
name|leftAligned
condition|?
literal|0
else|:
name|borderThinkness
operator|)
operator|-
operator|(
name|atBeginning
operator|&&
name|leftCornerWidget
condition|?
literal|1
else|:
literal|0
operator|)
argument_list|)
expr_stmt|;
block|}
comment|// Top
block|{
name|int
name|beg
init|=
name|x1
operator|+
operator|(
name|previousSelected
condition|?
literal|0
else|:
literal|2
operator|)
decl_stmt|;
name|int
name|end
init|=
name|x2
operator|-
operator|(
name|nextSelected
condition|?
literal|0
else|:
literal|2
operator|)
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|light
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|selected
condition|)
name|painter
operator|->
name|drawLine
argument_list|(
name|beg
operator|-
literal|2
argument_list|,
name|y1
operator|+
literal|1
argument_list|,
name|end
argument_list|,
name|y1
operator|+
literal|1
argument_list|)
expr_stmt|;
if|if
condition|(
name|selected
condition|)
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|activeHighlight
operator|.
name|darker
argument_list|(
literal|150
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|painter
operator|->
name|setPen
argument_list|(
name|darkOutline
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|beg
argument_list|,
name|y1
argument_list|,
name|end
argument_list|,
name|y1
argument_list|)
expr_stmt|;
if|if
condition|(
name|atBeginning
operator|||
name|selected
condition|)
block|{
name|painter
operator|->
name|drawPoint
argument_list|(
name|beg
operator|-
literal|1
argument_list|,
name|y1
operator|+
literal|1
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
operator|!
name|atBeginning
condition|)
block|{
name|painter
operator|->
name|drawPoint
argument_list|(
name|beg
operator|-
literal|1
argument_list|,
name|y1
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPoint
argument_list|(
name|beg
operator|-
literal|2
argument_list|,
name|y1
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|lastTab
condition|)
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|dark
operator|.
name|lighter
argument_list|(
literal|130
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPoint
argument_list|(
name|end
operator|+
literal|1
argument_list|,
name|y1
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPoint
argument_list|(
name|end
operator|+
literal|2
argument_list|,
name|y1
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPoint
argument_list|(
name|end
operator|+
literal|2
argument_list|,
name|y1
operator|+
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
block|}
comment|// Right
if|if
condition|(
name|lastTab
operator|||
name|selected
operator|||
name|onlyOne
operator|||
operator|!
name|nextSelected
condition|)
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|darkOutline
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|x2
argument_list|,
name|y1
operator|+
literal|2
argument_list|,
name|x2
argument_list|,
name|y2
operator|-
operator|(
operator|(
name|onlyOne
operator|||
name|lastTab
operator|)
operator|&&
name|selected
operator|&&
name|rightAligned
condition|?
literal|0
else|:
name|borderThinkness
operator|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|selected
condition|)
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|activeHighlight
operator|.
name|darker
argument_list|(
literal|150
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|painter
operator|->
name|setPen
argument_list|(
name|darkOutline
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPoint
argument_list|(
name|x2
operator|-
literal|1
argument_list|,
name|y1
operator|+
literal|1
argument_list|)
expr_stmt|;
if|if
condition|(
name|selected
condition|)
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|background
operator|.
name|darker
argument_list|(
literal|110
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|x2
operator|-
literal|1
argument_list|,
name|y1
operator|+
literal|3
argument_list|,
name|x2
operator|-
literal|1
argument_list|,
name|y2
operator|-
operator|(
operator|(
name|onlyOne
operator|||
name|lastTab
operator|)
operator|&&
name|selected
operator|&&
name|rightAligned
condition|?
literal|0
else|:
name|borderThinkness
operator|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
endif|#
directive|endif
comment|// QT_NO_TABBAR
default|default:
name|QWindowsStyle
operator|::
name|drawControl
argument_list|(
name|element
argument_list|,
name|option
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
end_function
begin_comment
comment|/*!   \reimp */
end_comment
begin_function
DECL|function|standardPalette
name|QPalette
name|QCleanlooksStyle
operator|::
name|standardPalette
parameter_list|()
specifier|const
block|{
name|QPalette
name|palette
init|=
name|QWindowsStyle
operator|::
name|standardPalette
argument_list|()
decl_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Active
argument_list|,
name|QPalette
operator|::
name|Highlight
argument_list|,
name|QColor
argument_list|(
literal|98
argument_list|,
literal|140
argument_list|,
literal|178
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Inactive
argument_list|,
name|QPalette
operator|::
name|Highlight
argument_list|,
name|QColor
argument_list|(
literal|145
argument_list|,
literal|141
argument_list|,
literal|126
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Disabled
argument_list|,
name|QPalette
operator|::
name|Highlight
argument_list|,
name|QColor
argument_list|(
literal|145
argument_list|,
literal|141
argument_list|,
literal|126
argument_list|)
argument_list|)
expr_stmt|;
name|QColor
name|backGround
argument_list|(
literal|239
argument_list|,
literal|235
argument_list|,
literal|231
argument_list|)
decl_stmt|;
name|QColor
name|light
init|=
name|backGround
operator|.
name|lighter
argument_list|(
literal|150
argument_list|)
decl_stmt|;
name|QColor
name|base
init|=
name|Qt
operator|::
name|white
decl_stmt|;
name|QColor
name|dark
init|=
name|QColor
argument_list|(
literal|170
argument_list|,
literal|156
argument_list|,
literal|143
argument_list|)
operator|.
name|darker
argument_list|(
literal|110
argument_list|)
decl_stmt|;
name|dark
operator|=
name|backGround
operator|.
name|darker
argument_list|(
literal|150
argument_list|)
expr_stmt|;
name|QColor
name|darkDisabled
init|=
name|QColor
argument_list|(
literal|209
argument_list|,
literal|200
argument_list|,
literal|191
argument_list|)
operator|.
name|darker
argument_list|(
literal|110
argument_list|)
decl_stmt|;
comment|//### Find the correct disabled text color
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Disabled
argument_list|,
name|QPalette
operator|::
name|Text
argument_list|,
name|QColor
argument_list|(
literal|190
argument_list|,
literal|190
argument_list|,
literal|190
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Window
argument_list|,
name|backGround
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Mid
argument_list|,
name|backGround
operator|.
name|darker
argument_list|(
literal|130
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Light
argument_list|,
name|light
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Active
argument_list|,
name|QPalette
operator|::
name|Base
argument_list|,
name|base
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Inactive
argument_list|,
name|QPalette
operator|::
name|Base
argument_list|,
name|base
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Disabled
argument_list|,
name|QPalette
operator|::
name|Base
argument_list|,
name|backGround
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Midlight
argument_list|,
name|palette
operator|.
name|mid
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|110
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|All
argument_list|,
name|QPalette
operator|::
name|Dark
argument_list|,
name|dark
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Disabled
argument_list|,
name|QPalette
operator|::
name|Dark
argument_list|,
name|darkDisabled
argument_list|)
expr_stmt|;
name|QColor
name|button
init|=
name|backGround
decl_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Button
argument_list|,
name|button
argument_list|)
expr_stmt|;
name|QColor
name|shadow
init|=
name|dark
operator|.
name|darker
argument_list|(
literal|135
argument_list|)
decl_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Shadow
argument_list|,
name|shadow
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Disabled
argument_list|,
name|QPalette
operator|::
name|Shadow
argument_list|,
name|shadow
operator|.
name|lighter
argument_list|(
literal|150
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|HighlightedText
argument_list|,
name|QColor
argument_list|(
name|QRgb
argument_list|(
literal|0xffffffff
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|palette
return|;
block|}
end_function
begin_comment
comment|/*!   \reimp */
end_comment
begin_function
DECL|function|drawComplexControl
name|void
name|QCleanlooksStyle
operator|::
name|drawComplexControl
parameter_list|(
name|ComplexControl
name|control
parameter_list|,
specifier|const
name|QStyleOptionComplex
modifier|*
name|option
parameter_list|,
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
name|QColor
name|button
init|=
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
operator|.
name|color
argument_list|()
decl_stmt|;
name|QColor
name|dark
decl_stmt|;
name|QColor
name|grooveColor
decl_stmt|;
name|QColor
name|darkOutline
decl_stmt|;
name|dark
operator|.
name|setHsv
argument_list|(
name|button
operator|.
name|hue
argument_list|()
argument_list|,
name|qMin
argument_list|(
literal|255
argument_list|,
call|(
name|int
call|)
argument_list|(
name|button
operator|.
name|saturation
argument_list|()
operator|*
literal|1.9
argument_list|)
argument_list|)
argument_list|,
name|qMin
argument_list|(
literal|255
argument_list|,
call|(
name|int
call|)
argument_list|(
name|button
operator|.
name|value
argument_list|()
operator|*
literal|0.7
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|grooveColor
operator|.
name|setHsv
argument_list|(
name|button
operator|.
name|hue
argument_list|()
argument_list|,
name|qMin
argument_list|(
literal|255
argument_list|,
call|(
name|int
call|)
argument_list|(
name|button
operator|.
name|saturation
argument_list|()
operator|*
literal|2.6
argument_list|)
argument_list|)
argument_list|,
name|qMin
argument_list|(
literal|255
argument_list|,
call|(
name|int
call|)
argument_list|(
name|button
operator|.
name|value
argument_list|()
operator|*
literal|0.9
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|darkOutline
operator|.
name|setHsv
argument_list|(
name|button
operator|.
name|hue
argument_list|()
argument_list|,
name|qMin
argument_list|(
literal|255
argument_list|,
call|(
name|int
call|)
argument_list|(
name|button
operator|.
name|saturation
argument_list|()
operator|*
literal|3.0
argument_list|)
argument_list|)
argument_list|,
name|qMin
argument_list|(
literal|255
argument_list|,
call|(
name|int
call|)
argument_list|(
name|button
operator|.
name|value
argument_list|()
operator|*
literal|0.6
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QColor
name|alphaCornerColor
decl_stmt|;
if|if
condition|(
name|widget
condition|)
block|{
comment|// ### backgroundrole/foregroundrole should be part of the style option
name|alphaCornerColor
operator|=
name|mergedColors
argument_list|(
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|widget
operator|->
name|backgroundRole
argument_list|()
argument_list|)
argument_list|,
name|darkOutline
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|alphaCornerColor
operator|=
name|mergedColors
argument_list|(
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
name|darkOutline
argument_list|)
expr_stmt|;
block|}
name|QColor
name|gripShadow
init|=
name|grooveColor
operator|.
name|darker
argument_list|(
literal|110
argument_list|)
decl_stmt|;
name|QColor
name|buttonShadow
init|=
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|110
argument_list|)
decl_stmt|;
name|QColor
name|gradientStartColor
init|=
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|108
argument_list|)
decl_stmt|;
name|QColor
name|gradientStopColor
init|=
name|mergedColors
argument_list|(
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|108
argument_list|)
argument_list|,
name|dark
operator|.
name|lighter
argument_list|(
literal|150
argument_list|)
argument_list|,
literal|70
argument_list|)
decl_stmt|;
name|QPalette
name|palette
init|=
name|option
operator|->
name|palette
decl_stmt|;
switch|switch
condition|(
name|control
condition|)
block|{
ifndef|#
directive|ifndef
name|QT_NO_SPINBOX
case|case
name|CC_SpinBox
case|:
if|if
condition|(
specifier|const
name|QStyleOptionSpinBox
modifier|*
name|spinBox
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSpinBox
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|QPixmap
name|cache
decl_stmt|;
name|QString
name|pixmapName
init|=
name|QStyleHelper
operator|::
name|uniqueName
argument_list|(
name|QLatin1String
argument_list|(
literal|"spinbox"
argument_list|)
argument_list|,
name|spinBox
argument_list|,
name|spinBox
operator|->
name|rect
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|QPixmapCache
operator|::
name|find
argument_list|(
name|pixmapName
argument_list|,
name|cache
argument_list|)
condition|)
block|{
name|cache
operator|=
name|QPixmap
argument_list|(
name|spinBox
operator|->
name|rect
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|cache
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|transparent
argument_list|)
expr_stmt|;
name|QRect
name|pixmapRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|spinBox
operator|->
name|rect
operator|.
name|width
argument_list|()
argument_list|,
name|spinBox
operator|->
name|rect
operator|.
name|height
argument_list|()
argument_list|)
decl_stmt|;
name|QPainter
name|cachePainter
argument_list|(
operator|&
name|cache
argument_list|)
decl_stmt|;
name|bool
name|isEnabled
init|=
operator|(
name|spinBox
operator|->
name|state
operator|&
name|State_Enabled
operator|)
decl_stmt|;
comment|//bool focus = isEnabled&& (spinBox->state& State_HasFocus);
name|bool
name|hover
init|=
name|isEnabled
operator|&&
operator|(
name|spinBox
operator|->
name|state
operator|&
name|State_MouseOver
operator|)
decl_stmt|;
name|bool
name|sunken
init|=
operator|(
name|spinBox
operator|->
name|state
operator|&
name|State_Sunken
operator|)
decl_stmt|;
name|bool
name|upIsActive
init|=
operator|(
name|spinBox
operator|->
name|activeSubControls
operator|==
name|SC_SpinBoxUp
operator|)
decl_stmt|;
name|bool
name|downIsActive
init|=
operator|(
name|spinBox
operator|->
name|activeSubControls
operator|==
name|SC_SpinBoxDown
operator|)
decl_stmt|;
name|QRect
name|rect
init|=
name|pixmapRect
decl_stmt|;
name|QStyleOptionSpinBox
name|spinBoxCopy
init|=
operator|*
name|spinBox
decl_stmt|;
name|spinBoxCopy
operator|.
name|rect
operator|=
name|pixmapRect
expr_stmt|;
name|QRect
name|upRect
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_SpinBox
argument_list|,
operator|&
name|spinBoxCopy
argument_list|,
name|SC_SpinBoxUp
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|QRect
name|downRect
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_SpinBox
argument_list|,
operator|&
name|spinBoxCopy
argument_list|,
name|SC_SpinBoxDown
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|int
name|fw
init|=
name|spinBoxCopy
operator|.
name|frame
condition|?
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_SpinBoxFrameWidth
argument_list|,
operator|&
name|spinBoxCopy
argument_list|,
name|widget
argument_list|)
else|:
literal|0
decl_stmt|;
name|cachePainter
operator|.
name|fillRect
argument_list|(
name|rect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
name|qMax
argument_list|(
name|fw
operator|-
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
name|fw
argument_list|)
argument_list|,
name|option
operator|->
name|palette
operator|.
name|base
argument_list|()
argument_list|)
expr_stmt|;
name|QRect
name|r
init|=
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|)
decl_stmt|;
if|if
condition|(
name|spinBox
operator|->
name|frame
condition|)
block|{
name|QColor
name|topShadow
init|=
name|darkOutline
decl_stmt|;
name|topShadow
operator|.
name|setAlpha
argument_list|(
literal|60
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|setPen
argument_list|(
name|topShadow
argument_list|)
expr_stmt|;
comment|// antialias corners
specifier|const
name|QPoint
name|points
index|[
literal|8
index|]
init|=
block|{
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|r
operator|.
name|top
argument_list|()
argument_list|)
block|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
argument_list|)
block|,
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
argument_list|)
block|,
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|r
operator|.
name|top
argument_list|()
argument_list|)
block|,
name|QPoint
argument_list|(
argument|r.left()
argument_list|,
argument|r.top() +
literal|1
argument_list|)
block|}
decl_stmt|;
name|cachePainter
operator|.
name|drawPoints
argument_list|(
name|points
argument_list|,
literal|8
argument_list|)
expr_stmt|;
comment|// draw frame
name|topShadow
operator|.
name|setAlpha
argument_list|(
literal|30
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|setPen
argument_list|(
name|topShadow
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|setPen
argument_list|(
name|QPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QColor
name|highlight
init|=
name|Qt
operator|::
name|white
decl_stmt|;
name|highlight
operator|.
name|setAlpha
argument_list|(
literal|130
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|base
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|120
argument_list|)
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|base
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|setPen
argument_list|(
name|highlight
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|3
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|3
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|setPen
argument_list|(
name|QPen
argument_list|(
name|darkOutline
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// top and bottom lines
specifier|const
name|QLine
name|lines
index|[
literal|4
index|]
init|=
block|{
name|QLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|)
block|,
name|QLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|r
operator|.
name|top
argument_list|()
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|r
operator|.
name|top
argument_list|()
argument_list|)
argument_list|)
block|,
name|QLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
argument_list|)
block|,
name|QLine
argument_list|(
argument|QPoint(r.left(), r.top() +
literal|2
argument|)
argument_list|,
argument|QPoint(r.left(), r.bottom() -
literal|2
argument|)
argument_list|)
block|}
decl_stmt|;
name|cachePainter
operator|.
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|4
argument_list|)
expr_stmt|;
block|}
comment|// gradients
name|qt_cleanlooks_draw_gradient
argument_list|(
operator|&
name|cachePainter
argument_list|,
name|upRect
argument_list|,
name|gradientStartColor
operator|.
name|darker
argument_list|(
literal|106
argument_list|)
argument_list|,
name|gradientStopColor
argument_list|,
name|TopDown
argument_list|,
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
argument_list|)
expr_stmt|;
name|qt_cleanlooks_draw_gradient
argument_list|(
operator|&
name|cachePainter
argument_list|,
name|downRect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|gradientStartColor
operator|.
name|darker
argument_list|(
literal|106
argument_list|)
argument_list|,
name|gradientStopColor
argument_list|,
name|TopDown
argument_list|,
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|isEnabled
condition|)
block|{
if|if
condition|(
name|upIsActive
condition|)
block|{
if|if
condition|(
name|sunken
condition|)
block|{
name|cachePainter
operator|.
name|fillRect
argument_list|(
name|upRect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|gradientStopColor
operator|.
name|darker
argument_list|(
literal|110
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|hover
condition|)
block|{
name|qt_cleanlooks_draw_gradient
argument_list|(
operator|&
name|cachePainter
argument_list|,
name|upRect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|gradientStartColor
operator|.
name|lighter
argument_list|(
literal|110
argument_list|)
argument_list|,
name|gradientStopColor
operator|.
name|lighter
argument_list|(
literal|110
argument_list|)
argument_list|,
name|TopDown
argument_list|,
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|downIsActive
condition|)
block|{
if|if
condition|(
name|sunken
condition|)
block|{
name|cachePainter
operator|.
name|fillRect
argument_list|(
name|downRect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|gradientStopColor
operator|.
name|darker
argument_list|(
literal|110
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|hover
condition|)
block|{
name|qt_cleanlooks_draw_gradient
argument_list|(
operator|&
name|cachePainter
argument_list|,
name|downRect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|gradientStartColor
operator|.
name|lighter
argument_list|(
literal|110
argument_list|)
argument_list|,
name|gradientStopColor
operator|.
name|lighter
argument_list|(
literal|110
argument_list|)
argument_list|,
name|TopDown
argument_list|,
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|spinBox
operator|->
name|frame
condition|)
block|{
comment|// rounded corners
specifier|const
name|QPoint
name|points
index|[
literal|4
index|]
init|=
block|{
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
argument|r.right() -
literal|1
argument_list|,
argument|r.top() +
literal|1
argument_list|)
block|}
decl_stmt|;
name|cachePainter
operator|.
name|drawPoints
argument_list|(
name|points
argument_list|,
literal|4
argument_list|)
expr_stmt|;
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|State_HasFocus
condition|)
block|{
name|QColor
name|darkoutline
init|=
name|option
operator|->
name|palette
operator|.
name|highlight
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|150
argument_list|)
decl_stmt|;
name|QColor
name|innerline
init|=
name|mergedColors
argument_list|(
name|option
operator|->
name|palette
operator|.
name|highlight
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
name|Qt
operator|::
name|white
argument_list|)
decl_stmt|;
name|cachePainter
operator|.
name|setPen
argument_list|(
name|QPen
argument_list|(
name|innerline
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|spinBox
operator|->
name|direction
operator|==
name|Qt
operator|::
name|LeftToRight
condition|)
block|{
name|cachePainter
operator|.
name|drawRect
argument_list|(
name|rect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
operator|-
literal|3
operator|-
name|downRect
operator|.
name|width
argument_list|()
argument_list|,
operator|-
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|setPen
argument_list|(
name|QPen
argument_list|(
name|darkoutline
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
specifier|const
name|QLine
name|lines
index|[
literal|4
index|]
init|=
block|{
name|QLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
name|downRect
operator|.
name|width
argument_list|()
operator|-
literal|1
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|)
block|,
name|QLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|r
operator|.
name|top
argument_list|()
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
name|downRect
operator|.
name|width
argument_list|()
operator|-
literal|1
argument_list|,
name|r
operator|.
name|top
argument_list|()
argument_list|)
argument_list|)
block|,
name|QLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
name|downRect
operator|.
name|width
argument_list|()
operator|-
literal|1
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
name|downRect
operator|.
name|width
argument_list|()
operator|-
literal|1
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
block|,
name|QLine
argument_list|(
argument|QPoint(r.left(), r.top() +
literal|2
argument|)
argument_list|,
argument|QPoint(r.left(), r.bottom() -
literal|2
argument|)
argument_list|)
block|}
decl_stmt|;
name|cachePainter
operator|.
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawPoint
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawPoint
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|cachePainter
operator|.
name|drawRect
argument_list|(
name|rect
operator|.
name|adjusted
argument_list|(
name|downRect
operator|.
name|width
argument_list|()
operator|+
literal|2
argument_list|,
literal|2
argument_list|,
operator|-
literal|2
argument_list|,
operator|-
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|setPen
argument_list|(
name|QPen
argument_list|(
name|darkoutline
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
name|downRect
operator|.
name|width
argument_list|()
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|2
operator|-
literal|1
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
name|downRect
operator|.
name|width
argument_list|()
argument_list|,
name|r
operator|.
name|top
argument_list|()
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|2
operator|-
literal|1
argument_list|,
name|r
operator|.
name|top
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawPoint
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawPoint
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
name|downRect
operator|.
name|width
argument_list|()
operator|+
literal|1
argument_list|,
name|r
operator|.
name|top
argument_list|()
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
name|downRect
operator|.
name|width
argument_list|()
operator|+
literal|1
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
comment|// outline the up/down buttons
name|cachePainter
operator|.
name|setPen
argument_list|(
name|darkOutline
argument_list|)
expr_stmt|;
name|QColor
name|light
init|=
name|option
operator|->
name|palette
operator|.
name|light
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|()
decl_stmt|;
if|if
condition|(
name|spinBox
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
condition|)
block|{
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|upRect
operator|.
name|right
argument_list|()
argument_list|,
name|upRect
operator|.
name|top
argument_list|()
operator|-
literal|1
argument_list|,
name|upRect
operator|.
name|right
argument_list|()
argument_list|,
name|downRect
operator|.
name|bottom
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|setPen
argument_list|(
name|light
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|upRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|upRect
operator|.
name|top
argument_list|()
operator|+
literal|3
argument_list|,
name|upRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|downRect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|upRect
operator|.
name|left
argument_list|()
argument_list|,
name|upRect
operator|.
name|top
argument_list|()
operator|-
literal|1
argument_list|,
name|upRect
operator|.
name|left
argument_list|()
argument_list|,
name|downRect
operator|.
name|bottom
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|setPen
argument_list|(
name|light
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|upRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|upRect
operator|.
name|top
argument_list|()
argument_list|,
name|upRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|downRect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|upIsActive
operator|&&
name|sunken
condition|)
block|{
name|cachePainter
operator|.
name|setPen
argument_list|(
name|gradientStopColor
operator|.
name|darker
argument_list|(
literal|130
argument_list|)
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|upRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|upRect
operator|.
name|top
argument_list|()
argument_list|,
name|upRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|upRect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|upRect
operator|.
name|left
argument_list|()
argument_list|,
name|upRect
operator|.
name|top
argument_list|()
operator|-
literal|1
argument_list|,
name|upRect
operator|.
name|right
argument_list|()
argument_list|,
name|upRect
operator|.
name|top
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|cachePainter
operator|.
name|setPen
argument_list|(
name|light
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|upRect
operator|.
name|topLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|upRect
operator|.
name|topRight
argument_list|()
operator|+
name|QPoint
argument_list|(
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|setPen
argument_list|(
name|darkOutline
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|upRect
operator|.
name|bottomLeft
argument_list|()
argument_list|,
name|upRect
operator|.
name|bottomRight
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|downIsActive
operator|&&
name|sunken
condition|)
block|{
name|cachePainter
operator|.
name|setPen
argument_list|(
name|gradientStopColor
operator|.
name|darker
argument_list|(
literal|130
argument_list|)
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|downRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|downRect
operator|.
name|top
argument_list|()
argument_list|,
name|downRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|downRect
operator|.
name|bottom
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|downRect
operator|.
name|left
argument_list|()
argument_list|,
name|downRect
operator|.
name|top
argument_list|()
argument_list|,
name|downRect
operator|.
name|right
argument_list|()
argument_list|,
name|downRect
operator|.
name|top
argument_list|()
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|setPen
argument_list|(
name|gradientStopColor
operator|.
name|darker
argument_list|(
literal|110
argument_list|)
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|downRect
operator|.
name|left
argument_list|()
argument_list|,
name|downRect
operator|.
name|bottom
argument_list|()
operator|+
literal|1
argument_list|,
name|downRect
operator|.
name|right
argument_list|()
argument_list|,
name|downRect
operator|.
name|bottom
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|cachePainter
operator|.
name|setPen
argument_list|(
name|light
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|downRect
operator|.
name|topLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
argument_list|,
name|downRect
operator|.
name|topRight
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|spinBox
operator|->
name|buttonSymbols
operator|==
name|QAbstractSpinBox
operator|::
name|PlusMinus
condition|)
block|{
name|int
name|centerX
init|=
name|upRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
decl_stmt|;
name|int
name|centerY
init|=
name|upRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
decl_stmt|;
name|cachePainter
operator|.
name|setPen
argument_list|(
name|spinBox
operator|->
name|palette
operator|.
name|foreground
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
comment|// plus/minus
if|if
condition|(
name|spinBox
operator|->
name|activeSubControls
operator|==
name|SC_SpinBoxUp
operator|&&
name|sunken
condition|)
block|{
name|cachePainter
operator|.
name|drawLine
argument_list|(
literal|1
operator|+
name|centerX
operator|-
literal|2
argument_list|,
literal|1
operator|+
name|centerY
argument_list|,
literal|1
operator|+
name|centerX
operator|+
literal|2
argument_list|,
literal|1
operator|+
name|centerY
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawLine
argument_list|(
literal|1
operator|+
name|centerX
argument_list|,
literal|1
operator|+
name|centerY
operator|-
literal|2
argument_list|,
literal|1
operator|+
name|centerX
argument_list|,
literal|1
operator|+
name|centerY
operator|+
literal|2
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|centerX
operator|-
literal|2
argument_list|,
name|centerY
argument_list|,
name|centerX
operator|+
literal|2
argument_list|,
name|centerY
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|centerX
argument_list|,
name|centerY
operator|-
literal|2
argument_list|,
name|centerX
argument_list|,
name|centerY
operator|+
literal|2
argument_list|)
expr_stmt|;
block|}
name|centerX
operator|=
name|downRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
expr_stmt|;
name|centerY
operator|=
name|downRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
expr_stmt|;
if|if
condition|(
name|spinBox
operator|->
name|activeSubControls
operator|==
name|SC_SpinBoxDown
operator|&&
name|sunken
condition|)
block|{
name|cachePainter
operator|.
name|drawLine
argument_list|(
literal|1
operator|+
name|centerX
operator|-
literal|2
argument_list|,
literal|1
operator|+
name|centerY
argument_list|,
literal|1
operator|+
name|centerX
operator|+
literal|2
argument_list|,
literal|1
operator|+
name|centerY
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|centerX
operator|-
literal|2
argument_list|,
name|centerY
argument_list|,
name|centerX
operator|+
literal|2
argument_list|,
name|centerY
argument_list|)
expr_stmt|;
block|}
block|}
elseif|else
if|if
condition|(
name|spinBox
operator|->
name|buttonSymbols
operator|==
name|QAbstractSpinBox
operator|::
name|UpDownArrows
condition|)
block|{
comment|// arrows
name|QImage
name|upArrow
argument_list|(
name|qt_spinbox_button_arrow_up
argument_list|)
decl_stmt|;
name|upArrow
operator|.
name|setColor
argument_list|(
literal|1
argument_list|,
name|spinBox
operator|->
name|palette
operator|.
name|foreground
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawImage
argument_list|(
name|upRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|-
name|upArrow
operator|.
name|width
argument_list|()
operator|/
literal|2
argument_list|,
name|upRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|-
name|upArrow
operator|.
name|height
argument_list|()
operator|/
literal|2
argument_list|,
name|upArrow
argument_list|)
expr_stmt|;
name|QImage
name|downArrow
argument_list|(
name|qt_spinbox_button_arrow_down
argument_list|)
decl_stmt|;
name|downArrow
operator|.
name|setColor
argument_list|(
literal|1
argument_list|,
name|spinBox
operator|->
name|palette
operator|.
name|foreground
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawImage
argument_list|(
name|downRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|-
name|downArrow
operator|.
name|width
argument_list|()
operator|/
literal|2
argument_list|,
name|downRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|-
name|downArrow
operator|.
name|height
argument_list|()
operator|/
literal|2
operator|+
literal|1
argument_list|,
name|downArrow
argument_list|)
expr_stmt|;
block|}
name|QColor
name|disabledColor
init|=
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
decl_stmt|;
name|disabledColor
operator|.
name|setAlpha
argument_list|(
literal|150
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
operator|(
name|spinBox
operator|->
name|stepEnabled
operator|&
name|QAbstractSpinBox
operator|::
name|StepUpEnabled
operator|)
condition|)
name|cachePainter
operator|.
name|fillRect
argument_list|(
name|upRect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|disabledColor
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
operator|(
name|spinBox
operator|->
name|stepEnabled
operator|&
name|QAbstractSpinBox
operator|::
name|StepDownEnabled
operator|)
condition|)
block|{
name|cachePainter
operator|.
name|fillRect
argument_list|(
name|downRect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|disabledColor
argument_list|)
expr_stmt|;
block|}
name|cachePainter
operator|.
name|end
argument_list|()
expr_stmt|;
name|QPixmapCache
operator|::
name|insert
argument_list|(
name|pixmapName
argument_list|,
name|cache
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|drawPixmap
argument_list|(
name|spinBox
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|cache
argument_list|)
expr_stmt|;
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_SPINBOX
case|case
name|CC_TitleBar
case|:
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
if|if
condition|(
specifier|const
name|QStyleOptionTitleBar
modifier|*
name|titleBar
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionTitleBar
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
specifier|const
name|int
name|buttonMargin
init|=
literal|5
decl_stmt|;
name|bool
name|active
init|=
operator|(
name|titleBar
operator|->
name|titleBarState
operator|&
name|State_Active
operator|)
decl_stmt|;
name|QRect
name|fullRect
init|=
name|titleBar
operator|->
name|rect
decl_stmt|;
name|QPalette
name|palette
init|=
name|option
operator|->
name|palette
decl_stmt|;
name|QColor
name|highlight
init|=
name|option
operator|->
name|palette
operator|.
name|highlight
argument_list|()
operator|.
name|color
argument_list|()
decl_stmt|;
name|QColor
name|titleBarFrameBorder
argument_list|(
name|active
condition|?
name|highlight
operator|.
name|darker
argument_list|(
literal|180
argument_list|)
else|:
name|dark
operator|.
name|darker
argument_list|(
literal|110
argument_list|)
argument_list|)
decl_stmt|;
name|QColor
name|titleBarHighlight
argument_list|(
name|active
condition|?
name|highlight
operator|.
name|lighter
argument_list|(
literal|120
argument_list|)
else|:
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|120
argument_list|)
argument_list|)
decl_stmt|;
name|QColor
name|textColor
argument_list|(
name|active
condition|?
literal|0xffffff
else|:
literal|0xff000000
argument_list|)
decl_stmt|;
name|QColor
name|textAlphaColor
argument_list|(
name|active
condition|?
literal|0xffffff
else|:
literal|0xff000000
argument_list|)
decl_stmt|;
block|{
comment|// Fill title bar gradient
name|QColor
name|titlebarColor
init|=
name|QColor
argument_list|(
name|active
condition|?
name|highlight
else|:
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
decl_stmt|;
name|QLinearGradient
name|gradient
argument_list|(
name|option
operator|->
name|rect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
decl_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|titlebarColor
operator|.
name|lighter
argument_list|(
literal|114
argument_list|)
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0.5
argument_list|,
name|titlebarColor
operator|.
name|lighter
argument_list|(
literal|102
argument_list|)
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0.51
argument_list|,
name|titlebarColor
operator|.
name|darker
argument_list|(
literal|104
argument_list|)
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|1
argument_list|,
name|titlebarColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|fillRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|,
name|gradient
argument_list|)
expr_stmt|;
comment|// Frame and rounded corners
name|painter
operator|->
name|setPen
argument_list|(
name|titleBarFrameBorder
argument_list|)
expr_stmt|;
comment|// top outline
name|painter
operator|->
name|drawLine
argument_list|(
name|fullRect
operator|.
name|left
argument_list|()
operator|+
literal|5
argument_list|,
name|fullRect
operator|.
name|top
argument_list|()
argument_list|,
name|fullRect
operator|.
name|right
argument_list|()
operator|-
literal|5
argument_list|,
name|fullRect
operator|.
name|top
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|fullRect
operator|.
name|left
argument_list|()
argument_list|,
name|fullRect
operator|.
name|top
argument_list|()
operator|+
literal|4
argument_list|,
name|fullRect
operator|.
name|left
argument_list|()
argument_list|,
name|fullRect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
specifier|const
name|QPoint
name|points
index|[
literal|5
index|]
init|=
block|{
name|QPoint
argument_list|(
name|fullRect
operator|.
name|left
argument_list|()
operator|+
literal|4
argument_list|,
name|fullRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
name|fullRect
operator|.
name|left
argument_list|()
operator|+
literal|3
argument_list|,
name|fullRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
name|fullRect
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|fullRect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|)
block|,
name|QPoint
argument_list|(
name|fullRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|fullRect
operator|.
name|top
argument_list|()
operator|+
literal|3
argument_list|)
block|,
name|QPoint
argument_list|(
argument|fullRect.left() +
literal|1
argument_list|,
argument|fullRect.top() +
literal|4
argument_list|)
block|}
decl_stmt|;
name|painter
operator|->
name|drawPoints
argument_list|(
name|points
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|fullRect
operator|.
name|right
argument_list|()
argument_list|,
name|fullRect
operator|.
name|top
argument_list|()
operator|+
literal|4
argument_list|,
name|fullRect
operator|.
name|right
argument_list|()
argument_list|,
name|fullRect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
specifier|const
name|QPoint
name|points2
index|[
literal|5
index|]
init|=
block|{
name|QPoint
argument_list|(
name|fullRect
operator|.
name|right
argument_list|()
operator|-
literal|3
argument_list|,
name|fullRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
name|fullRect
operator|.
name|right
argument_list|()
operator|-
literal|4
argument_list|,
name|fullRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
block|,
name|QPoint
argument_list|(
name|fullRect
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|fullRect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|)
block|,
name|QPoint
argument_list|(
name|fullRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|fullRect
operator|.
name|top
argument_list|()
operator|+
literal|3
argument_list|)
block|,
name|QPoint
argument_list|(
argument|fullRect.right() -
literal|1
argument_list|,
argument|fullRect.top() +
literal|4
argument_list|)
block|}
decl_stmt|;
name|painter
operator|->
name|drawPoints
argument_list|(
name|points2
argument_list|,
literal|5
argument_list|)
expr_stmt|;
comment|// draw bottomline
name|painter
operator|->
name|drawLine
argument_list|(
name|fullRect
operator|.
name|right
argument_list|()
argument_list|,
name|fullRect
operator|.
name|bottom
argument_list|()
argument_list|,
name|fullRect
operator|.
name|left
argument_list|()
argument_list|,
name|fullRect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
comment|// top highlight
name|painter
operator|->
name|setPen
argument_list|(
name|titleBarHighlight
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|fullRect
operator|.
name|left
argument_list|()
operator|+
literal|6
argument_list|,
name|fullRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|fullRect
operator|.
name|right
argument_list|()
operator|-
literal|6
argument_list|,
name|fullRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
block|}
comment|// draw title
name|QRect
name|textRect
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_TitleBar
argument_list|,
name|titleBar
argument_list|,
name|SC_TitleBarLabel
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|QFont
name|font
init|=
name|painter
operator|->
name|font
argument_list|()
decl_stmt|;
name|font
operator|.
name|setBold
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setFont
argument_list|(
name|font
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|active
condition|?
operator|(
name|titleBar
operator|->
name|palette
operator|.
name|text
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|120
argument_list|)
operator|)
else|:
name|titleBar
operator|->
name|palette
operator|.
name|text
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
comment|// Note workspace also does elliding but it does not use the correct font
name|QString
name|title
init|=
name|QFontMetrics
argument_list|(
name|font
argument_list|)
operator|.
name|elidedText
argument_list|(
name|titleBar
operator|->
name|text
argument_list|,
name|Qt
operator|::
name|ElideRight
argument_list|,
name|textRect
operator|.
name|width
argument_list|()
operator|-
literal|14
argument_list|)
decl_stmt|;
name|painter
operator|->
name|drawText
argument_list|(
name|textRect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|title
argument_list|,
name|QTextOption
argument_list|(
name|Qt
operator|::
name|AlignHCenter
operator||
name|Qt
operator|::
name|AlignVCenter
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
if|if
condition|(
name|active
condition|)
name|painter
operator|->
name|drawText
argument_list|(
name|textRect
argument_list|,
name|title
argument_list|,
name|QTextOption
argument_list|(
name|Qt
operator|::
name|AlignHCenter
operator||
name|Qt
operator|::
name|AlignVCenter
argument_list|)
argument_list|)
expr_stmt|;
comment|// min button
if|if
condition|(
operator|(
name|titleBar
operator|->
name|subControls
operator|&
name|SC_TitleBarMinButton
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowMinimizeButtonHint
operator|)
operator|&&
operator|!
operator|(
name|titleBar
operator|->
name|titleBarState
operator|&
name|Qt
operator|::
name|WindowMinimized
operator|)
condition|)
block|{
name|QRect
name|minButtonRect
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_TitleBar
argument_list|,
name|titleBar
argument_list|,
name|SC_TitleBarMinButton
argument_list|,
name|widget
argument_list|)
decl_stmt|;
if|if
condition|(
name|minButtonRect
operator|.
name|isValid
argument_list|()
condition|)
block|{
name|bool
name|hover
init|=
operator|(
name|titleBar
operator|->
name|activeSubControls
operator|&
name|SC_TitleBarMinButton
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|state
operator|&
name|State_MouseOver
operator|)
decl_stmt|;
name|bool
name|sunken
init|=
operator|(
name|titleBar
operator|->
name|activeSubControls
operator|&
name|SC_TitleBarMinButton
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|state
operator|&
name|State_Sunken
operator|)
decl_stmt|;
name|qt_cleanlooks_draw_mdibutton
argument_list|(
name|painter
argument_list|,
name|titleBar
argument_list|,
name|minButtonRect
argument_list|,
name|hover
argument_list|,
name|sunken
argument_list|)
expr_stmt|;
name|QRect
name|minButtonIconRect
init|=
name|minButtonRect
operator|.
name|adjusted
argument_list|(
name|buttonMargin
argument_list|,
name|buttonMargin
argument_list|,
operator|-
name|buttonMargin
argument_list|,
operator|-
name|buttonMargin
argument_list|)
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|textColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|minButtonIconRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|-
literal|2
argument_list|,
name|minButtonIconRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|+
literal|3
argument_list|,
name|minButtonIconRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|+
literal|3
argument_list|,
name|minButtonIconRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|+
literal|3
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|minButtonIconRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|-
literal|2
argument_list|,
name|minButtonIconRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|+
literal|4
argument_list|,
name|minButtonIconRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|+
literal|3
argument_list|,
name|minButtonIconRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|+
literal|4
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|textAlphaColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|minButtonIconRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|-
literal|3
argument_list|,
name|minButtonIconRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|+
literal|3
argument_list|,
name|minButtonIconRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|-
literal|3
argument_list|,
name|minButtonIconRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|+
literal|4
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|minButtonIconRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|+
literal|4
argument_list|,
name|minButtonIconRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|+
literal|3
argument_list|,
name|minButtonIconRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|+
literal|4
argument_list|,
name|minButtonIconRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|+
literal|4
argument_list|)
expr_stmt|;
block|}
block|}
comment|// max button
if|if
condition|(
operator|(
name|titleBar
operator|->
name|subControls
operator|&
name|SC_TitleBarMaxButton
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowMaximizeButtonHint
operator|)
operator|&&
operator|!
operator|(
name|titleBar
operator|->
name|titleBarState
operator|&
name|Qt
operator|::
name|WindowMaximized
operator|)
condition|)
block|{
name|QRect
name|maxButtonRect
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_TitleBar
argument_list|,
name|titleBar
argument_list|,
name|SC_TitleBarMaxButton
argument_list|,
name|widget
argument_list|)
decl_stmt|;
if|if
condition|(
name|maxButtonRect
operator|.
name|isValid
argument_list|()
condition|)
block|{
name|bool
name|hover
init|=
operator|(
name|titleBar
operator|->
name|activeSubControls
operator|&
name|SC_TitleBarMaxButton
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|state
operator|&
name|State_MouseOver
operator|)
decl_stmt|;
name|bool
name|sunken
init|=
operator|(
name|titleBar
operator|->
name|activeSubControls
operator|&
name|SC_TitleBarMaxButton
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|state
operator|&
name|State_Sunken
operator|)
decl_stmt|;
name|qt_cleanlooks_draw_mdibutton
argument_list|(
name|painter
argument_list|,
name|titleBar
argument_list|,
name|maxButtonRect
argument_list|,
name|hover
argument_list|,
name|sunken
argument_list|)
expr_stmt|;
name|QRect
name|maxButtonIconRect
init|=
name|maxButtonRect
operator|.
name|adjusted
argument_list|(
name|buttonMargin
argument_list|,
name|buttonMargin
argument_list|,
operator|-
name|buttonMargin
argument_list|,
operator|-
name|buttonMargin
argument_list|)
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|textColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|maxButtonIconRect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|maxButtonIconRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|maxButtonIconRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|maxButtonIconRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|maxButtonIconRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|textAlphaColor
argument_list|)
expr_stmt|;
specifier|const
name|QPoint
name|points
index|[
literal|4
index|]
init|=
block|{
name|maxButtonIconRect
operator|.
name|topLeft
argument_list|()
block|,
name|maxButtonIconRect
operator|.
name|topRight
argument_list|()
block|,
name|maxButtonIconRect
operator|.
name|bottomLeft
argument_list|()
block|,
name|maxButtonIconRect
operator|.
name|bottomRight
argument_list|()
block|}
decl_stmt|;
name|painter
operator|->
name|drawPoints
argument_list|(
name|points
argument_list|,
literal|4
argument_list|)
expr_stmt|;
block|}
block|}
comment|// close button
if|if
condition|(
operator|(
name|titleBar
operator|->
name|subControls
operator|&
name|SC_TitleBarCloseButton
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowSystemMenuHint
operator|)
condition|)
block|{
name|QRect
name|closeButtonRect
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_TitleBar
argument_list|,
name|titleBar
argument_list|,
name|SC_TitleBarCloseButton
argument_list|,
name|widget
argument_list|)
decl_stmt|;
if|if
condition|(
name|closeButtonRect
operator|.
name|isValid
argument_list|()
condition|)
block|{
name|bool
name|hover
init|=
operator|(
name|titleBar
operator|->
name|activeSubControls
operator|&
name|SC_TitleBarCloseButton
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|state
operator|&
name|State_MouseOver
operator|)
decl_stmt|;
name|bool
name|sunken
init|=
operator|(
name|titleBar
operator|->
name|activeSubControls
operator|&
name|SC_TitleBarCloseButton
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|state
operator|&
name|State_Sunken
operator|)
decl_stmt|;
name|qt_cleanlooks_draw_mdibutton
argument_list|(
name|painter
argument_list|,
name|titleBar
argument_list|,
name|closeButtonRect
argument_list|,
name|hover
argument_list|,
name|sunken
argument_list|)
expr_stmt|;
name|QRect
name|closeIconRect
init|=
name|closeButtonRect
operator|.
name|adjusted
argument_list|(
name|buttonMargin
argument_list|,
name|buttonMargin
argument_list|,
operator|-
name|buttonMargin
argument_list|,
operator|-
name|buttonMargin
argument_list|)
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|textAlphaColor
argument_list|)
expr_stmt|;
specifier|const
name|QLine
name|lines
index|[
literal|4
index|]
init|=
block|{
name|QLine
argument_list|(
name|closeIconRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|closeIconRect
operator|.
name|top
argument_list|()
argument_list|,
name|closeIconRect
operator|.
name|right
argument_list|()
argument_list|,
name|closeIconRect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
block|,
name|QLine
argument_list|(
name|closeIconRect
operator|.
name|left
argument_list|()
argument_list|,
name|closeIconRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|closeIconRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|closeIconRect
operator|.
name|bottom
argument_list|()
argument_list|)
block|,
name|QLine
argument_list|(
name|closeIconRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|closeIconRect
operator|.
name|top
argument_list|()
argument_list|,
name|closeIconRect
operator|.
name|left
argument_list|()
argument_list|,
name|closeIconRect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
block|,
name|QLine
argument_list|(
argument|closeIconRect.right()
argument_list|,
argument|closeIconRect.top() +
literal|1
argument_list|,
argument|closeIconRect.left() +
literal|1
argument_list|,
argument|closeIconRect.bottom()
argument_list|)
block|}
decl_stmt|;
name|painter
operator|->
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|4
argument_list|)
expr_stmt|;
specifier|const
name|QPoint
name|points
index|[
literal|4
index|]
init|=
block|{
name|closeIconRect
operator|.
name|topLeft
argument_list|()
block|,
name|closeIconRect
operator|.
name|topRight
argument_list|()
block|,
name|closeIconRect
operator|.
name|bottomLeft
argument_list|()
block|,
name|closeIconRect
operator|.
name|bottomRight
argument_list|()
block|}
decl_stmt|;
name|painter
operator|->
name|drawPoints
argument_list|(
name|points
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|textColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|closeIconRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|closeIconRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|closeIconRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|closeIconRect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|closeIconRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|closeIconRect
operator|.
name|bottom
argument_list|()
operator|-
literal|1
argument_list|,
name|closeIconRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|closeIconRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
comment|// normalize button
if|if
condition|(
operator|(
name|titleBar
operator|->
name|subControls
operator|&
name|SC_TitleBarNormalButton
operator|)
operator|&&
operator|(
operator|(
operator|(
name|titleBar
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowMinimizeButtonHint
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|titleBarState
operator|&
name|Qt
operator|::
name|WindowMinimized
operator|)
operator|)
operator|||
operator|(
operator|(
name|titleBar
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowMaximizeButtonHint
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|titleBarState
operator|&
name|Qt
operator|::
name|WindowMaximized
operator|)
operator|)
operator|)
condition|)
block|{
name|QRect
name|normalButtonRect
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_TitleBar
argument_list|,
name|titleBar
argument_list|,
name|SC_TitleBarNormalButton
argument_list|,
name|widget
argument_list|)
decl_stmt|;
if|if
condition|(
name|normalButtonRect
operator|.
name|isValid
argument_list|()
condition|)
block|{
name|bool
name|hover
init|=
operator|(
name|titleBar
operator|->
name|activeSubControls
operator|&
name|SC_TitleBarNormalButton
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|state
operator|&
name|State_MouseOver
operator|)
decl_stmt|;
name|bool
name|sunken
init|=
operator|(
name|titleBar
operator|->
name|activeSubControls
operator|&
name|SC_TitleBarNormalButton
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|state
operator|&
name|State_Sunken
operator|)
decl_stmt|;
name|QRect
name|normalButtonIconRect
init|=
name|normalButtonRect
operator|.
name|adjusted
argument_list|(
name|buttonMargin
argument_list|,
name|buttonMargin
argument_list|,
operator|-
name|buttonMargin
argument_list|,
operator|-
name|buttonMargin
argument_list|)
decl_stmt|;
name|qt_cleanlooks_draw_mdibutton
argument_list|(
name|painter
argument_list|,
name|titleBar
argument_list|,
name|normalButtonRect
argument_list|,
name|hover
argument_list|,
name|sunken
argument_list|)
expr_stmt|;
name|QRect
name|frontWindowRect
init|=
name|normalButtonIconRect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|,
operator|-
literal|3
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|textColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|frontWindowRect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|frontWindowRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|frontWindowRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|frontWindowRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|frontWindowRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|textAlphaColor
argument_list|)
expr_stmt|;
specifier|const
name|QPoint
name|points
index|[
literal|4
index|]
init|=
block|{
name|frontWindowRect
operator|.
name|topLeft
argument_list|()
block|,
name|frontWindowRect
operator|.
name|topRight
argument_list|()
block|,
name|frontWindowRect
operator|.
name|bottomLeft
argument_list|()
block|,
name|frontWindowRect
operator|.
name|bottomRight
argument_list|()
block|}
decl_stmt|;
name|painter
operator|->
name|drawPoints
argument_list|(
name|points
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QRect
name|backWindowRect
init|=
name|normalButtonIconRect
operator|.
name|adjusted
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|3
argument_list|)
decl_stmt|;
name|QRegion
name|clipRegion
init|=
name|backWindowRect
decl_stmt|;
name|clipRegion
operator|-=
name|frontWindowRect
expr_stmt|;
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
name|painter
operator|->
name|setClipRegion
argument_list|(
name|clipRegion
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|textColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|backWindowRect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|backWindowRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|backWindowRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|backWindowRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|backWindowRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|textAlphaColor
argument_list|)
expr_stmt|;
specifier|const
name|QPoint
name|points2
index|[
literal|4
index|]
init|=
block|{
name|backWindowRect
operator|.
name|topLeft
argument_list|()
block|,
name|backWindowRect
operator|.
name|topRight
argument_list|()
block|,
name|backWindowRect
operator|.
name|bottomLeft
argument_list|()
block|,
name|backWindowRect
operator|.
name|bottomRight
argument_list|()
block|}
decl_stmt|;
name|painter
operator|->
name|drawPoints
argument_list|(
name|points2
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
block|}
comment|// context help button
if|if
condition|(
name|titleBar
operator|->
name|subControls
operator|&
name|SC_TitleBarContextHelpButton
operator|&&
operator|(
name|titleBar
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowContextHelpButtonHint
operator|)
condition|)
block|{
name|QRect
name|contextHelpButtonRect
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_TitleBar
argument_list|,
name|titleBar
argument_list|,
name|SC_TitleBarContextHelpButton
argument_list|,
name|widget
argument_list|)
decl_stmt|;
if|if
condition|(
name|contextHelpButtonRect
operator|.
name|isValid
argument_list|()
condition|)
block|{
name|bool
name|hover
init|=
operator|(
name|titleBar
operator|->
name|activeSubControls
operator|&
name|SC_TitleBarContextHelpButton
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|state
operator|&
name|State_MouseOver
operator|)
decl_stmt|;
name|bool
name|sunken
init|=
operator|(
name|titleBar
operator|->
name|activeSubControls
operator|&
name|SC_TitleBarContextHelpButton
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|state
operator|&
name|State_Sunken
operator|)
decl_stmt|;
name|qt_cleanlooks_draw_mdibutton
argument_list|(
name|painter
argument_list|,
name|titleBar
argument_list|,
name|contextHelpButtonRect
argument_list|,
name|hover
argument_list|,
name|sunken
argument_list|)
expr_stmt|;
name|QColor
name|blend
decl_stmt|;
name|QImage
name|image
argument_list|(
name|qt_titlebar_context_help
argument_list|)
decl_stmt|;
name|QColor
name|alpha
init|=
name|textColor
decl_stmt|;
name|alpha
operator|.
name|setAlpha
argument_list|(
literal|128
argument_list|)
expr_stmt|;
name|image
operator|.
name|setColor
argument_list|(
literal|1
argument_list|,
name|textColor
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
name|image
operator|.
name|setColor
argument_list|(
literal|2
argument_list|,
name|alpha
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|SmoothPixmapTransform
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawImage
argument_list|(
name|contextHelpButtonRect
operator|.
name|adjusted
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|,
operator|-
literal|4
argument_list|,
operator|-
literal|4
argument_list|)
argument_list|,
name|image
argument_list|)
expr_stmt|;
block|}
block|}
comment|// shade button
if|if
condition|(
name|titleBar
operator|->
name|subControls
operator|&
name|SC_TitleBarShadeButton
operator|&&
operator|(
name|titleBar
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowShadeButtonHint
operator|)
condition|)
block|{
name|QRect
name|shadeButtonRect
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_TitleBar
argument_list|,
name|titleBar
argument_list|,
name|SC_TitleBarShadeButton
argument_list|,
name|widget
argument_list|)
decl_stmt|;
if|if
condition|(
name|shadeButtonRect
operator|.
name|isValid
argument_list|()
condition|)
block|{
name|bool
name|hover
init|=
operator|(
name|titleBar
operator|->
name|activeSubControls
operator|&
name|SC_TitleBarShadeButton
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|state
operator|&
name|State_MouseOver
operator|)
decl_stmt|;
name|bool
name|sunken
init|=
operator|(
name|titleBar
operator|->
name|activeSubControls
operator|&
name|SC_TitleBarShadeButton
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|state
operator|&
name|State_Sunken
operator|)
decl_stmt|;
name|qt_cleanlooks_draw_mdibutton
argument_list|(
name|painter
argument_list|,
name|titleBar
argument_list|,
name|shadeButtonRect
argument_list|,
name|hover
argument_list|,
name|sunken
argument_list|)
expr_stmt|;
name|QImage
name|image
argument_list|(
name|qt_scrollbar_button_arrow_up
argument_list|)
decl_stmt|;
name|image
operator|.
name|setColor
argument_list|(
literal|1
argument_list|,
name|textColor
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawImage
argument_list|(
name|shadeButtonRect
operator|.
name|adjusted
argument_list|(
literal|5
argument_list|,
literal|7
argument_list|,
operator|-
literal|5
argument_list|,
operator|-
literal|7
argument_list|)
argument_list|,
name|image
argument_list|)
expr_stmt|;
block|}
block|}
comment|// unshade button
if|if
condition|(
name|titleBar
operator|->
name|subControls
operator|&
name|SC_TitleBarUnshadeButton
operator|&&
operator|(
name|titleBar
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowShadeButtonHint
operator|)
condition|)
block|{
name|QRect
name|unshadeButtonRect
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_TitleBar
argument_list|,
name|titleBar
argument_list|,
name|SC_TitleBarUnshadeButton
argument_list|,
name|widget
argument_list|)
decl_stmt|;
if|if
condition|(
name|unshadeButtonRect
operator|.
name|isValid
argument_list|()
condition|)
block|{
name|bool
name|hover
init|=
operator|(
name|titleBar
operator|->
name|activeSubControls
operator|&
name|SC_TitleBarUnshadeButton
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|state
operator|&
name|State_MouseOver
operator|)
decl_stmt|;
name|bool
name|sunken
init|=
operator|(
name|titleBar
operator|->
name|activeSubControls
operator|&
name|SC_TitleBarUnshadeButton
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|state
operator|&
name|State_Sunken
operator|)
decl_stmt|;
name|qt_cleanlooks_draw_mdibutton
argument_list|(
name|painter
argument_list|,
name|titleBar
argument_list|,
name|unshadeButtonRect
argument_list|,
name|hover
argument_list|,
name|sunken
argument_list|)
expr_stmt|;
name|QImage
name|image
argument_list|(
name|qt_scrollbar_button_arrow_down
argument_list|)
decl_stmt|;
name|image
operator|.
name|setColor
argument_list|(
literal|1
argument_list|,
name|textColor
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawImage
argument_list|(
name|unshadeButtonRect
operator|.
name|adjusted
argument_list|(
literal|5
argument_list|,
literal|7
argument_list|,
operator|-
literal|5
argument_list|,
operator|-
literal|7
argument_list|)
argument_list|,
name|image
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
operator|(
name|titleBar
operator|->
name|subControls
operator|&
name|SC_TitleBarSysMenu
operator|)
operator|&&
operator|(
name|titleBar
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowSystemMenuHint
operator|)
condition|)
block|{
name|QRect
name|iconRect
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_TitleBar
argument_list|,
name|titleBar
argument_list|,
name|SC_TitleBarSysMenu
argument_list|,
name|widget
argument_list|)
decl_stmt|;
if|if
condition|(
name|iconRect
operator|.
name|isValid
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|titleBar
operator|->
name|icon
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|titleBar
operator|->
name|icon
operator|.
name|paint
argument_list|(
name|painter
argument_list|,
name|iconRect
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QStyleOption
name|tool
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|tool
operator|.
name|palette
operator|=
name|titleBar
operator|->
name|palette
expr_stmt|;
name|QPixmap
name|pm
init|=
name|standardIcon
argument_list|(
name|SP_TitleBarMenuButton
argument_list|,
operator|&
name|tool
argument_list|,
name|widget
argument_list|)
operator|.
name|pixmap
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
decl_stmt|;
name|tool
operator|.
name|rect
operator|=
name|iconRect
expr_stmt|;
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawItemPixmap
argument_list|(
name|painter
argument_list|,
name|iconRect
argument_list|,
name|Qt
operator|::
name|AlignCenter
argument_list|,
name|pm
argument_list|)
expr_stmt|;
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
block|}
block|}
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
ifndef|#
directive|ifndef
name|QT_NO_SCROLLBAR
case|case
name|CC_ScrollBar
case|:
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
if|if
condition|(
specifier|const
name|QStyleOptionSlider
modifier|*
name|scrollBar
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSlider
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|bool
name|isEnabled
init|=
name|scrollBar
operator|->
name|state
operator|&
name|State_Enabled
decl_stmt|;
name|bool
name|reverse
init|=
name|scrollBar
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
decl_stmt|;
name|bool
name|horizontal
init|=
name|scrollBar
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
decl_stmt|;
name|bool
name|sunken
init|=
name|scrollBar
operator|->
name|state
operator|&
name|State_Sunken
decl_stmt|;
name|painter
operator|->
name|fillRect
argument_list|(
name|option
operator|->
name|rect
argument_list|,
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
argument_list|)
expr_stmt|;
name|QRect
name|scrollBarSubLine
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|control
argument_list|,
name|scrollBar
argument_list|,
name|SC_ScrollBarSubLine
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|QRect
name|scrollBarAddLine
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|control
argument_list|,
name|scrollBar
argument_list|,
name|SC_ScrollBarAddLine
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|QRect
name|scrollBarSlider
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|control
argument_list|,
name|scrollBar
argument_list|,
name|SC_ScrollBarSlider
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|QRect
name|grooveRect
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|control
argument_list|,
name|scrollBar
argument_list|,
name|SC_ScrollBarGroove
argument_list|,
name|widget
argument_list|)
decl_stmt|;
comment|// paint groove
if|if
condition|(
name|scrollBar
operator|->
name|subControls
operator|&
name|SC_ScrollBarGroove
condition|)
block|{
name|painter
operator|->
name|setBrush
argument_list|(
name|grooveColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
if|if
condition|(
name|horizontal
condition|)
block|{
name|painter
operator|->
name|drawRect
argument_list|(
name|grooveRect
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|darkOutline
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|grooveRect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|grooveRect
operator|.
name|topRight
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|grooveRect
operator|.
name|bottomLeft
argument_list|()
argument_list|,
name|grooveRect
operator|.
name|bottomRight
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|painter
operator|->
name|drawRect
argument_list|(
name|grooveRect
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|darkOutline
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|grooveRect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|grooveRect
operator|.
name|bottomLeft
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|grooveRect
operator|.
name|topRight
argument_list|()
argument_list|,
name|grooveRect
operator|.
name|bottomRight
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
comment|//paint slider
if|if
condition|(
name|scrollBar
operator|->
name|subControls
operator|&
name|SC_ScrollBarSlider
condition|)
block|{
name|QRect
name|pixmapRect
init|=
name|scrollBarSlider
decl_stmt|;
if|if
condition|(
name|horizontal
condition|)
name|pixmapRect
operator|.
name|adjust
argument_list|(
operator|-
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
else|else
name|pixmapRect
operator|.
name|adjust
argument_list|(
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
name|isEnabled
condition|)
block|{
name|QLinearGradient
name|gradient
argument_list|(
name|pixmapRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|top
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|bottom
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|horizontal
condition|)
name|gradient
operator|=
name|QLinearGradient
argument_list|(
name|pixmapRect
operator|.
name|left
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|right
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
operator|.
name|gradient
argument_list|()
condition|)
block|{
name|gradient
operator|.
name|setStops
argument_list|(
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
operator|.
name|gradient
argument_list|()
operator|->
name|stops
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|sunken
operator|||
operator|(
name|option
operator|->
name|state
operator|&
name|State_MouseOver
operator|&&
operator|(
name|scrollBar
operator|->
name|activeSubControls
operator|&
name|SC_ScrollBarSlider
operator|)
operator|)
condition|)
block|{
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|gradientStartColor
operator|.
name|lighter
argument_list|(
literal|110
argument_list|)
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|1
argument_list|,
name|gradientStopColor
operator|.
name|lighter
argument_list|(
literal|110
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|gradientStartColor
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|1
argument_list|,
name|gradientStopColor
argument_list|)
expr_stmt|;
block|}
block|}
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|darkOutline
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|gradient
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|pixmapRect
argument_list|)
expr_stmt|;
comment|//calculate offsets used by highlight and shadow
name|int
name|yoffset
decl_stmt|,
name|xoffset
decl_stmt|;
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|State_Horizontal
condition|)
block|{
name|xoffset
operator|=
literal|0
expr_stmt|;
name|yoffset
operator|=
literal|1
expr_stmt|;
block|}
else|else
block|{
name|xoffset
operator|=
literal|1
expr_stmt|;
name|yoffset
operator|=
literal|0
expr_stmt|;
block|}
comment|//draw slider highlights
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|gradientStopColor
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|scrollBarSlider
operator|.
name|left
argument_list|()
operator|+
name|xoffset
argument_list|,
name|scrollBarSlider
operator|.
name|bottom
argument_list|()
operator|-
name|yoffset
argument_list|,
name|scrollBarSlider
operator|.
name|right
argument_list|()
operator|-
name|xoffset
argument_list|,
name|scrollBarSlider
operator|.
name|bottom
argument_list|()
operator|-
name|yoffset
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|scrollBarSlider
operator|.
name|right
argument_list|()
operator|-
name|xoffset
argument_list|,
name|scrollBarSlider
operator|.
name|top
argument_list|()
operator|+
name|yoffset
argument_list|,
name|scrollBarSlider
operator|.
name|right
argument_list|()
operator|-
name|xoffset
argument_list|,
name|scrollBarSlider
operator|.
name|bottom
argument_list|()
operator|-
name|yoffset
argument_list|)
expr_stmt|;
comment|//draw slider shadow
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|gradientStartColor
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|scrollBarSlider
operator|.
name|left
argument_list|()
operator|+
name|xoffset
argument_list|,
name|scrollBarSlider
operator|.
name|top
argument_list|()
operator|+
name|yoffset
argument_list|,
name|scrollBarSlider
operator|.
name|right
argument_list|()
operator|-
name|xoffset
argument_list|,
name|scrollBarSlider
operator|.
name|top
argument_list|()
operator|+
name|yoffset
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|scrollBarSlider
operator|.
name|left
argument_list|()
operator|+
name|xoffset
argument_list|,
name|scrollBarSlider
operator|.
name|top
argument_list|()
operator|+
name|yoffset
argument_list|,
name|scrollBarSlider
operator|.
name|left
argument_list|()
operator|+
name|xoffset
argument_list|,
name|scrollBarSlider
operator|.
name|bottom
argument_list|()
operator|-
name|yoffset
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QLinearGradient
name|gradient
argument_list|(
name|pixmapRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|top
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|bottom
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|horizontal
condition|)
block|{
name|gradient
operator|=
name|QLinearGradient
argument_list|(
name|pixmapRect
operator|.
name|left
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|right
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|sunken
condition|)
block|{
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|gradientStartColor
operator|.
name|lighter
argument_list|(
literal|110
argument_list|)
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|1
argument_list|,
name|gradientStopColor
operator|.
name|lighter
argument_list|(
literal|110
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|gradientStartColor
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|1
argument_list|,
name|gradientStopColor
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|setPen
argument_list|(
name|darkOutline
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|gradient
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|pixmapRect
argument_list|)
expr_stmt|;
block|}
name|int
name|gripMargin
init|=
literal|4
decl_stmt|;
comment|//draw grips
if|if
condition|(
name|horizontal
condition|)
block|{
for|for
control|(
name|int
name|i
init|=
operator|-
literal|3
init|;
name|i
operator|<
literal|6
condition|;
name|i
operator|+=
literal|3
control|)
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|gripShadow
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|scrollBarSlider
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|+
name|i
argument_list|,
name|scrollBarSlider
operator|.
name|top
argument_list|()
operator|+
name|gripMargin
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|scrollBarSlider
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|+
name|i
argument_list|,
name|scrollBarSlider
operator|.
name|bottom
argument_list|()
operator|-
name|gripMargin
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|palette
operator|.
name|light
argument_list|()
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|scrollBarSlider
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|+
name|i
operator|+
literal|1
argument_list|,
name|scrollBarSlider
operator|.
name|top
argument_list|()
operator|+
name|gripMargin
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|scrollBarSlider
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|+
name|i
operator|+
literal|1
argument_list|,
name|scrollBarSlider
operator|.
name|bottom
argument_list|()
operator|-
name|gripMargin
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
for|for
control|(
name|int
name|i
init|=
operator|-
literal|3
init|;
name|i
operator|<
literal|6
condition|;
name|i
operator|+=
literal|3
control|)
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|gripShadow
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|scrollBarSlider
operator|.
name|left
argument_list|()
operator|+
name|gripMargin
argument_list|,
name|scrollBarSlider
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|+
name|i
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|scrollBarSlider
operator|.
name|right
argument_list|()
operator|-
name|gripMargin
argument_list|,
name|scrollBarSlider
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|+
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|palette
operator|.
name|light
argument_list|()
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|scrollBarSlider
operator|.
name|left
argument_list|()
operator|+
name|gripMargin
argument_list|,
name|scrollBarSlider
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|+
literal|1
operator|+
name|i
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|scrollBarSlider
operator|.
name|right
argument_list|()
operator|-
name|gripMargin
argument_list|,
name|scrollBarSlider
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|+
literal|1
operator|+
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
comment|// The SubLine (up/left) buttons
if|if
condition|(
name|scrollBar
operator|->
name|subControls
operator|&
name|SC_ScrollBarSubLine
condition|)
block|{
comment|//int scrollBarExtent = proxy()->pixelMetric(PM_ScrollBarExtent, option, widget);
name|QRect
name|pixmapRect
init|=
name|scrollBarSubLine
decl_stmt|;
if|if
condition|(
name|isEnabled
condition|)
block|{
name|QRect
name|fillRect
init|=
name|pixmapRect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
decl_stmt|;
comment|// Gradients
if|if
condition|(
operator|(
name|scrollBar
operator|->
name|activeSubControls
operator|&
name|SC_ScrollBarSubLine
operator|)
operator|&&
name|sunken
condition|)
block|{
name|qt_cleanlooks_draw_gradient
argument_list|(
name|painter
argument_list|,
name|QRect
argument_list|(
name|fillRect
argument_list|)
argument_list|,
name|gradientStopColor
operator|.
name|darker
argument_list|(
literal|120
argument_list|)
argument_list|,
name|gradientStopColor
operator|.
name|darker
argument_list|(
literal|120
argument_list|)
argument_list|,
name|horizontal
condition|?
name|TopDown
else|:
name|FromLeft
argument_list|,
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|qt_cleanlooks_draw_gradient
argument_list|(
name|painter
argument_list|,
name|QRect
argument_list|(
name|fillRect
argument_list|)
argument_list|,
name|gradientStartColor
operator|.
name|lighter
argument_list|(
literal|105
argument_list|)
argument_list|,
name|gradientStopColor
argument_list|,
name|horizontal
condition|?
name|TopDown
else|:
name|FromLeft
argument_list|,
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
comment|// Details
name|QImage
name|subButton
decl_stmt|;
if|if
condition|(
name|horizontal
condition|)
block|{
name|subButton
operator|=
name|QImage
argument_list|(
name|reverse
condition|?
name|qt_scrollbar_button_right
else|:
name|qt_scrollbar_button_left
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|subButton
operator|=
name|QImage
argument_list|(
name|qt_scrollbar_button_up
argument_list|)
expr_stmt|;
block|}
name|subButton
operator|.
name|setColor
argument_list|(
literal|1
argument_list|,
name|alphaCornerColor
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
name|subButton
operator|.
name|setColor
argument_list|(
literal|2
argument_list|,
name|darkOutline
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
operator|(
name|scrollBar
operator|->
name|activeSubControls
operator|&
name|SC_ScrollBarSubLine
operator|)
operator|&&
name|sunken
condition|)
block|{
name|subButton
operator|.
name|setColor
argument_list|(
literal|3
argument_list|,
name|gradientStopColor
operator|.
name|darker
argument_list|(
literal|140
argument_list|)
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
name|subButton
operator|.
name|setColor
argument_list|(
literal|4
argument_list|,
name|gradientStopColor
operator|.
name|darker
argument_list|(
literal|120
argument_list|)
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|subButton
operator|.
name|setColor
argument_list|(
literal|3
argument_list|,
name|gradientStartColor
operator|.
name|lighter
argument_list|(
literal|105
argument_list|)
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
name|subButton
operator|.
name|setColor
argument_list|(
literal|4
argument_list|,
name|gradientStopColor
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|subButton
operator|.
name|setColor
argument_list|(
literal|5
argument_list|,
name|scrollBar
operator|->
name|palette
operator|.
name|text
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawImage
argument_list|(
name|pixmapRect
argument_list|,
name|subButton
argument_list|)
expr_stmt|;
comment|// Arrows
name|PrimitiveElement
name|arrow
decl_stmt|;
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|State_Horizontal
condition|)
name|arrow
operator|=
name|option
operator|->
name|direction
operator|==
name|Qt
operator|::
name|LeftToRight
condition|?
name|PE_IndicatorArrowLeft
else|:
name|PE_IndicatorArrowRight
expr_stmt|;
else|else
name|arrow
operator|=
name|PE_IndicatorArrowUp
expr_stmt|;
name|QStyleOption
name|arrowOpt
init|=
operator|*
name|option
decl_stmt|;
name|arrowOpt
operator|.
name|rect
operator|=
name|scrollBarSubLine
operator|.
name|adjusted
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|,
operator|-
literal|2
argument_list|,
operator|-
literal|2
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|arrow
argument_list|,
operator|&
name|arrowOpt
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
comment|// The AddLine (down/right) button
if|if
condition|(
name|scrollBar
operator|->
name|subControls
operator|&
name|SC_ScrollBarAddLine
condition|)
block|{
name|QString
name|addLinePixmapName
init|=
name|QStyleHelper
operator|::
name|uniqueName
argument_list|(
name|QLatin1String
argument_list|(
literal|"scrollbar_addline"
argument_list|)
argument_list|,
name|option
argument_list|,
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
decl_stmt|;
name|QRect
name|pixmapRect
init|=
name|scrollBarAddLine
decl_stmt|;
if|if
condition|(
name|isEnabled
condition|)
block|{
name|QRect
name|fillRect
init|=
name|pixmapRect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
decl_stmt|;
comment|// Gradients
if|if
condition|(
operator|(
name|scrollBar
operator|->
name|activeSubControls
operator|&
name|SC_ScrollBarAddLine
operator|)
operator|&&
name|sunken
condition|)
block|{
name|qt_cleanlooks_draw_gradient
argument_list|(
name|painter
argument_list|,
name|fillRect
argument_list|,
name|gradientStopColor
operator|.
name|darker
argument_list|(
literal|120
argument_list|)
argument_list|,
name|gradientStopColor
operator|.
name|darker
argument_list|(
literal|120
argument_list|)
argument_list|,
name|horizontal
condition|?
name|TopDown
else|:
name|FromLeft
argument_list|,
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|qt_cleanlooks_draw_gradient
argument_list|(
name|painter
argument_list|,
name|fillRect
argument_list|,
name|gradientStartColor
operator|.
name|lighter
argument_list|(
literal|105
argument_list|)
argument_list|,
name|gradientStopColor
argument_list|,
name|horizontal
condition|?
name|TopDown
else|:
name|FromLeft
argument_list|,
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
comment|// Details
name|QImage
name|addButton
decl_stmt|;
if|if
condition|(
name|horizontal
condition|)
block|{
name|addButton
operator|=
name|QImage
argument_list|(
name|reverse
condition|?
name|qt_scrollbar_button_left
else|:
name|qt_scrollbar_button_right
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|addButton
operator|=
name|QImage
argument_list|(
name|qt_scrollbar_button_down
argument_list|)
expr_stmt|;
block|}
name|addButton
operator|.
name|setColor
argument_list|(
literal|1
argument_list|,
name|alphaCornerColor
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
name|addButton
operator|.
name|setColor
argument_list|(
literal|2
argument_list|,
name|darkOutline
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
operator|(
name|scrollBar
operator|->
name|activeSubControls
operator|&
name|SC_ScrollBarAddLine
operator|)
operator|&&
name|sunken
condition|)
block|{
name|addButton
operator|.
name|setColor
argument_list|(
literal|3
argument_list|,
name|gradientStopColor
operator|.
name|darker
argument_list|(
literal|140
argument_list|)
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
name|addButton
operator|.
name|setColor
argument_list|(
literal|4
argument_list|,
name|gradientStopColor
operator|.
name|darker
argument_list|(
literal|120
argument_list|)
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|addButton
operator|.
name|setColor
argument_list|(
literal|3
argument_list|,
name|gradientStartColor
operator|.
name|lighter
argument_list|(
literal|105
argument_list|)
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
name|addButton
operator|.
name|setColor
argument_list|(
literal|4
argument_list|,
name|gradientStopColor
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|addButton
operator|.
name|setColor
argument_list|(
literal|5
argument_list|,
name|scrollBar
operator|->
name|palette
operator|.
name|text
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawImage
argument_list|(
name|pixmapRect
argument_list|,
name|addButton
argument_list|)
expr_stmt|;
name|PrimitiveElement
name|arrow
decl_stmt|;
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|State_Horizontal
condition|)
name|arrow
operator|=
name|option
operator|->
name|direction
operator|==
name|Qt
operator|::
name|LeftToRight
condition|?
name|PE_IndicatorArrowRight
else|:
name|PE_IndicatorArrowLeft
expr_stmt|;
else|else
name|arrow
operator|=
name|PE_IndicatorArrowDown
expr_stmt|;
name|QStyleOption
name|arrowOpt
init|=
operator|*
name|option
decl_stmt|;
name|arrowOpt
operator|.
name|rect
operator|=
name|scrollBarAddLine
operator|.
name|adjusted
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|,
operator|-
literal|2
argument_list|,
operator|-
literal|2
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|arrow
argument_list|,
operator|&
name|arrowOpt
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
empty_stmt|;
endif|#
directive|endif
comment|// QT_NO_SCROLLBAR
ifndef|#
directive|ifndef
name|QT_NO_COMBOBOX
case|case
name|CC_ComboBox
case|:
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
if|if
condition|(
specifier|const
name|QStyleOptionComboBox
modifier|*
name|comboBox
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionComboBox
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|bool
name|sunken
init|=
name|comboBox
operator|->
name|state
operator|&
name|State_On
decl_stmt|;
comment|// play dead, if combobox has no items
name|bool
name|isEnabled
init|=
operator|(
name|comboBox
operator|->
name|state
operator|&
name|State_Enabled
operator|)
decl_stmt|;
name|bool
name|focus
init|=
name|isEnabled
operator|&&
operator|(
name|comboBox
operator|->
name|state
operator|&
name|State_HasFocus
operator|)
decl_stmt|;
name|QPixmap
name|cache
decl_stmt|;
name|QString
name|pixmapName
init|=
name|QStyleHelper
operator|::
name|uniqueName
argument_list|(
name|QLatin1String
argument_list|(
literal|"combobox"
argument_list|)
argument_list|,
name|option
argument_list|,
name|comboBox
operator|->
name|rect
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|sunken
condition|)
name|pixmapName
operator|+=
name|QLatin1String
argument_list|(
literal|"-sunken"
argument_list|)
expr_stmt|;
if|if
condition|(
name|comboBox
operator|->
name|editable
condition|)
name|pixmapName
operator|+=
name|QLatin1String
argument_list|(
literal|"-editable"
argument_list|)
expr_stmt|;
if|if
condition|(
name|isEnabled
condition|)
name|pixmapName
operator|+=
name|QLatin1String
argument_list|(
literal|"-enabled"
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|QPixmapCache
operator|::
name|find
argument_list|(
name|pixmapName
argument_list|,
name|cache
argument_list|)
condition|)
block|{
name|cache
operator|=
name|QPixmap
argument_list|(
name|comboBox
operator|->
name|rect
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|cache
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|transparent
argument_list|)
expr_stmt|;
name|QPainter
name|cachePainter
argument_list|(
operator|&
name|cache
argument_list|)
decl_stmt|;
name|QRect
name|pixmapRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|comboBox
operator|->
name|rect
operator|.
name|width
argument_list|()
argument_list|,
name|comboBox
operator|->
name|rect
operator|.
name|height
argument_list|()
argument_list|)
decl_stmt|;
name|QStyleOptionComboBox
name|comboBoxCopy
init|=
operator|*
name|comboBox
decl_stmt|;
name|comboBoxCopy
operator|.
name|rect
operator|=
name|pixmapRect
expr_stmt|;
name|QRect
name|rect
init|=
name|pixmapRect
decl_stmt|;
name|QRect
name|downArrowRect
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_ComboBox
argument_list|,
operator|&
name|comboBoxCopy
argument_list|,
name|SC_ComboBoxArrow
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|QRect
name|editRect
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_ComboBox
argument_list|,
operator|&
name|comboBoxCopy
argument_list|,
name|SC_ComboBoxEditField
argument_list|,
name|widget
argument_list|)
decl_stmt|;
comment|// Draw a push button
if|if
condition|(
name|comboBox
operator|->
name|editable
condition|)
block|{
name|QStyleOptionFrame
name|buttonOption
decl_stmt|;
name|buttonOption
operator|.
name|QStyleOption
operator|::
name|operator
name|=
argument_list|(
operator|*
name|comboBox
argument_list|)
expr_stmt|;
name|buttonOption
operator|.
name|rect
operator|=
name|rect
expr_stmt|;
name|buttonOption
operator|.
name|state
operator|=
name|comboBox
operator|->
name|state
operator|&
operator|(
name|State_Enabled
operator||
name|State_MouseOver
operator|)
expr_stmt|;
if|if
condition|(
name|sunken
condition|)
block|{
name|buttonOption
operator|.
name|state
operator||=
name|State_Sunken
expr_stmt|;
name|buttonOption
operator|.
name|state
operator|&=
operator|~
name|State_MouseOver
expr_stmt|;
block|}
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_PanelButtonCommand
argument_list|,
operator|&
name|buttonOption
argument_list|,
operator|&
name|cachePainter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
comment|//remove shadow from left side of edit field when pressed:
if|if
condition|(
name|comboBox
operator|->
name|direction
operator|!=
name|Qt
operator|::
name|RightToLeft
condition|)
name|cachePainter
operator|.
name|fillRect
argument_list|(
name|editRect
operator|.
name|left
argument_list|()
operator|-
literal|1
argument_list|,
name|editRect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
name|editRect
operator|.
name|left
argument_list|()
argument_list|,
name|editRect
operator|.
name|bottom
argument_list|()
operator|-
literal|3
argument_list|,
name|option
operator|->
name|palette
operator|.
name|base
argument_list|()
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|setPen
argument_list|(
name|dark
operator|.
name|lighter
argument_list|(
literal|110
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|sunken
condition|)
block|{
name|int
name|borderSize
init|=
literal|2
decl_stmt|;
if|if
condition|(
name|comboBox
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
condition|)
block|{
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|downArrowRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|downArrowRect
operator|.
name|top
argument_list|()
operator|+
name|borderSize
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|downArrowRect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|downArrowRect
operator|.
name|bottom
argument_list|()
operator|-
name|borderSize
argument_list|)
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|light
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|downArrowRect
operator|.
name|right
argument_list|()
argument_list|,
name|downArrowRect
operator|.
name|top
argument_list|()
operator|+
name|borderSize
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|downArrowRect
operator|.
name|right
argument_list|()
argument_list|,
name|downArrowRect
operator|.
name|bottom
argument_list|()
operator|-
name|borderSize
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|downArrowRect
operator|.
name|left
argument_list|()
argument_list|,
name|downArrowRect
operator|.
name|top
argument_list|()
operator|+
name|borderSize
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|downArrowRect
operator|.
name|left
argument_list|()
argument_list|,
name|downArrowRect
operator|.
name|bottom
argument_list|()
operator|-
name|borderSize
argument_list|)
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|light
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|downArrowRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|downArrowRect
operator|.
name|top
argument_list|()
operator|+
name|borderSize
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|downArrowRect
operator|.
name|left
argument_list|()
operator|+
literal|1
argument_list|,
name|downArrowRect
operator|.
name|bottom
argument_list|()
operator|-
name|borderSize
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
name|comboBox
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
condition|)
block|{
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|downArrowRect
operator|.
name|right
argument_list|()
argument_list|,
name|downArrowRect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|downArrowRect
operator|.
name|right
argument_list|()
argument_list|,
name|downArrowRect
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|downArrowRect
operator|.
name|left
argument_list|()
argument_list|,
name|downArrowRect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|downArrowRect
operator|.
name|left
argument_list|()
argument_list|,
name|downArrowRect
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
else|else
block|{
name|QStyleOptionButton
name|buttonOption
decl_stmt|;
name|buttonOption
operator|.
name|QStyleOption
operator|::
name|operator
name|=
argument_list|(
operator|*
name|comboBox
argument_list|)
expr_stmt|;
name|buttonOption
operator|.
name|rect
operator|=
name|rect
expr_stmt|;
name|buttonOption
operator|.
name|state
operator|=
name|comboBox
operator|->
name|state
operator|&
operator|(
name|State_Enabled
operator||
name|State_MouseOver
operator|)
expr_stmt|;
if|if
condition|(
name|sunken
condition|)
block|{
name|buttonOption
operator|.
name|state
operator||=
name|State_Sunken
expr_stmt|;
name|buttonOption
operator|.
name|state
operator|&=
operator|~
name|State_MouseOver
expr_stmt|;
block|}
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_PanelButtonCommand
argument_list|,
operator|&
name|buttonOption
argument_list|,
operator|&
name|cachePainter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|setPen
argument_list|(
name|buttonShadow
operator|.
name|darker
argument_list|(
literal|102
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|borderSize
init|=
literal|4
decl_stmt|;
if|if
condition|(
operator|!
name|sunken
condition|)
block|{
if|if
condition|(
name|comboBox
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
condition|)
block|{
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|downArrowRect
operator|.
name|right
argument_list|()
operator|+
literal|1
argument_list|,
name|downArrowRect
operator|.
name|top
argument_list|()
operator|+
name|borderSize
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|downArrowRect
operator|.
name|right
argument_list|()
operator|+
literal|1
argument_list|,
name|downArrowRect
operator|.
name|bottom
argument_list|()
operator|-
name|borderSize
argument_list|)
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|light
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|downArrowRect
operator|.
name|right
argument_list|()
argument_list|,
name|downArrowRect
operator|.
name|top
argument_list|()
operator|+
name|borderSize
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|downArrowRect
operator|.
name|right
argument_list|()
argument_list|,
name|downArrowRect
operator|.
name|bottom
argument_list|()
operator|-
name|borderSize
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|downArrowRect
operator|.
name|left
argument_list|()
operator|-
literal|1
argument_list|,
name|downArrowRect
operator|.
name|top
argument_list|()
operator|+
name|borderSize
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|downArrowRect
operator|.
name|left
argument_list|()
operator|-
literal|1
argument_list|,
name|downArrowRect
operator|.
name|bottom
argument_list|()
operator|-
name|borderSize
argument_list|)
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|light
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|downArrowRect
operator|.
name|left
argument_list|()
argument_list|,
name|downArrowRect
operator|.
name|top
argument_list|()
operator|+
name|borderSize
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|downArrowRect
operator|.
name|left
argument_list|()
argument_list|,
name|downArrowRect
operator|.
name|bottom
argument_list|()
operator|-
name|borderSize
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|cachePainter
operator|.
name|setPen
argument_list|(
name|dark
operator|.
name|lighter
argument_list|(
literal|110
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|comboBox
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
condition|)
block|{
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|downArrowRect
operator|.
name|right
argument_list|()
operator|+
literal|1
argument_list|,
name|downArrowRect
operator|.
name|top
argument_list|()
operator|+
name|borderSize
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|downArrowRect
operator|.
name|right
argument_list|()
operator|+
literal|1
argument_list|,
name|downArrowRect
operator|.
name|bottom
argument_list|()
operator|-
name|borderSize
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|cachePainter
operator|.
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|downArrowRect
operator|.
name|left
argument_list|()
operator|-
literal|1
argument_list|,
name|downArrowRect
operator|.
name|top
argument_list|()
operator|+
name|borderSize
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|downArrowRect
operator|.
name|left
argument_list|()
operator|-
literal|1
argument_list|,
name|downArrowRect
operator|.
name|bottom
argument_list|()
operator|-
name|borderSize
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|comboBox
operator|->
name|subControls
operator|&
name|SC_ComboBoxArrow
condition|)
block|{
if|if
condition|(
name|comboBox
operator|->
name|editable
condition|)
block|{
comment|// Draw the down arrow
name|QImage
name|downArrow
argument_list|(
name|qt_cleanlooks_arrow_down_xpm
argument_list|)
decl_stmt|;
name|downArrow
operator|.
name|setColor
argument_list|(
literal|1
argument_list|,
name|comboBox
operator|->
name|palette
operator|.
name|foreground
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawImage
argument_list|(
name|downArrowRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|-
name|downArrow
operator|.
name|width
argument_list|()
operator|/
literal|2
argument_list|,
name|downArrowRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|-
name|downArrow
operator|.
name|height
argument_list|()
operator|/
literal|2
operator|+
literal|1
argument_list|,
name|downArrow
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// Draw the up/down arrow
name|QImage
name|upArrow
argument_list|(
name|qt_scrollbar_button_arrow_up
argument_list|)
decl_stmt|;
name|upArrow
operator|.
name|setColor
argument_list|(
literal|1
argument_list|,
name|comboBox
operator|->
name|palette
operator|.
name|foreground
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
name|QImage
name|downArrow
argument_list|(
name|qt_scrollbar_button_arrow_down
argument_list|)
decl_stmt|;
name|downArrow
operator|.
name|setColor
argument_list|(
literal|1
argument_list|,
name|comboBox
operator|->
name|palette
operator|.
name|foreground
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawImage
argument_list|(
name|downArrowRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|-
name|downArrow
operator|.
name|width
argument_list|()
operator|/
literal|2
argument_list|,
name|downArrowRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|-
name|upArrow
operator|.
name|height
argument_list|()
operator|-
literal|1
argument_list|,
name|upArrow
argument_list|)
expr_stmt|;
name|cachePainter
operator|.
name|drawImage
argument_list|(
name|downArrowRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|-
name|downArrow
operator|.
name|width
argument_list|()
operator|/
literal|2
argument_list|,
name|downArrowRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|+
literal|2
argument_list|,
name|downArrow
argument_list|)
expr_stmt|;
block|}
block|}
comment|// Draw the focus rect
if|if
condition|(
name|focus
operator|&&
operator|!
name|comboBox
operator|->
name|editable
operator|&&
operator|(
operator|(
name|option
operator|->
name|state
operator|&
name|State_KeyboardFocusChange
operator|)
operator|||
name|styleHint
argument_list|(
name|SH_UnderlineShortcut
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
operator|)
condition|)
block|{
name|QStyleOptionFocusRect
name|focus
decl_stmt|;
name|focus
operator|.
name|rect
operator|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_ComboBox
argument_list|,
operator|&
name|comboBoxCopy
argument_list|,
name|SC_ComboBoxEditField
argument_list|,
name|widget
argument_list|)
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|,
name|option
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
condition|?
literal|1
else|:
operator|-
literal|1
argument_list|,
operator|-
literal|2
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_FrameFocusRect
argument_list|,
operator|&
name|focus
argument_list|,
operator|&
name|cachePainter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
name|cachePainter
operator|.
name|end
argument_list|()
expr_stmt|;
name|QPixmapCache
operator|::
name|insert
argument_list|(
name|pixmapName
argument_list|,
name|cache
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|drawPixmap
argument_list|(
name|comboBox
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|cache
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
endif|#
directive|endif
comment|// QT_NO_COMBOBOX
ifndef|#
directive|ifndef
name|QT_NO_GROUPBOX
case|case
name|CC_GroupBox
case|:
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
if|if
condition|(
specifier|const
name|QStyleOptionGroupBox
modifier|*
name|groupBox
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionGroupBox
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|QRect
name|textRect
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_GroupBox
argument_list|,
name|groupBox
argument_list|,
name|SC_GroupBoxLabel
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|QRect
name|checkBoxRect
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_GroupBox
argument_list|,
name|groupBox
argument_list|,
name|SC_GroupBoxCheckBox
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|bool
name|flat
init|=
name|groupBox
operator|->
name|features
operator|&
name|QStyleOptionFrameV2
operator|::
name|Flat
decl_stmt|;
if|if
condition|(
operator|!
name|flat
condition|)
block|{
if|if
condition|(
name|groupBox
operator|->
name|subControls
operator|&
name|QStyle
operator|::
name|SC_GroupBoxFrame
condition|)
block|{
name|QStyleOptionFrameV2
name|frame
decl_stmt|;
name|frame
operator|.
name|QStyleOption
operator|::
name|operator
name|=
argument_list|(
operator|*
name|groupBox
argument_list|)
expr_stmt|;
name|frame
operator|.
name|features
operator|=
name|groupBox
operator|->
name|features
expr_stmt|;
name|frame
operator|.
name|lineWidth
operator|=
name|groupBox
operator|->
name|lineWidth
expr_stmt|;
name|frame
operator|.
name|midLineWidth
operator|=
name|groupBox
operator|->
name|midLineWidth
expr_stmt|;
name|frame
operator|.
name|rect
operator|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_GroupBox
argument_list|,
name|option
argument_list|,
name|SC_GroupBoxFrame
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
name|QRegion
name|region
argument_list|(
name|groupBox
operator|->
name|rect
argument_list|)
decl_stmt|;
name|bool
name|ltr
init|=
name|groupBox
operator|->
name|direction
operator|==
name|Qt
operator|::
name|LeftToRight
decl_stmt|;
name|region
operator|-=
name|checkBoxRect
operator|.
name|united
argument_list|(
name|textRect
argument_list|)
operator|.
name|adjusted
argument_list|(
name|ltr
condition|?
operator|-
literal|4
else|:
literal|0
argument_list|,
literal|0
argument_list|,
name|ltr
condition|?
literal|0
else|:
literal|4
argument_list|,
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|groupBox
operator|->
name|text
operator|.
name|isEmpty
argument_list|()
operator|||
name|groupBox
operator|->
name|subControls
operator|&
name|SC_GroupBoxCheckBox
condition|)
name|painter
operator|->
name|setClipRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
name|frame
operator|.
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Dark
argument_list|,
name|option
operator|->
name|palette
operator|.
name|mid
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|110
argument_list|)
argument_list|)
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_FrameGroupBox
argument_list|,
operator|&
name|frame
argument_list|,
name|painter
argument_list|)
expr_stmt|;
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
block|}
comment|// Draw title
if|if
condition|(
operator|(
name|groupBox
operator|->
name|subControls
operator|&
name|QStyle
operator|::
name|SC_GroupBoxLabel
operator|)
operator|&&
operator|!
name|groupBox
operator|->
name|text
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|groupBox
operator|->
name|text
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|QColor
name|textColor
init|=
name|groupBox
operator|->
name|textColor
decl_stmt|;
if|if
condition|(
name|textColor
operator|.
name|isValid
argument_list|()
condition|)
name|painter
operator|->
name|setPen
argument_list|(
name|textColor
argument_list|)
expr_stmt|;
name|int
name|alignment
init|=
name|int
argument_list|(
name|groupBox
operator|->
name|textAlignment
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|styleHint
argument_list|(
name|QStyle
operator|::
name|SH_UnderlineShortcut
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
condition|)
name|alignment
operator||=
name|Qt
operator|::
name|TextHideMnemonic
expr_stmt|;
if|if
condition|(
name|flat
condition|)
block|{
name|QFont
name|font
init|=
name|painter
operator|->
name|font
argument_list|()
decl_stmt|;
name|font
operator|.
name|setBold
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setFont
argument_list|(
name|font
argument_list|)
expr_stmt|;
if|if
condition|(
name|groupBox
operator|->
name|subControls
operator|&
name|SC_GroupBoxCheckBox
condition|)
block|{
name|textRect
operator|.
name|adjust
argument_list|(
name|checkBoxRect
operator|.
name|right
argument_list|()
operator|+
literal|4
argument_list|,
literal|0
argument_list|,
name|checkBoxRect
operator|.
name|right
argument_list|()
operator|+
literal|4
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
name|painter
operator|->
name|drawText
argument_list|(
name|textRect
argument_list|,
name|Qt
operator|::
name|TextShowMnemonic
operator||
name|Qt
operator|::
name|AlignLeft
operator||
name|alignment
argument_list|,
name|groupBox
operator|->
name|text
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|groupBox
operator|->
name|subControls
operator|&
name|SC_GroupBoxCheckBox
condition|)
block|{
name|QStyleOptionButton
name|box
decl_stmt|;
name|box
operator|.
name|QStyleOption
operator|::
name|operator
name|=
argument_list|(
operator|*
name|groupBox
argument_list|)
expr_stmt|;
name|box
operator|.
name|rect
operator|=
name|checkBoxRect
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_IndicatorCheckBox
argument_list|,
operator|&
name|box
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
endif|#
directive|endif
comment|// QT_NO_GROUPBOX
ifndef|#
directive|ifndef
name|QT_NO_SLIDER
case|case
name|CC_Slider
case|:
if|if
condition|(
specifier|const
name|QStyleOptionSlider
modifier|*
name|slider
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSlider
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|QRect
name|groove
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_Slider
argument_list|,
name|option
argument_list|,
name|SC_SliderGroove
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|QRect
name|handle
init|=
name|proxy
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|CC_Slider
argument_list|,
name|option
argument_list|,
name|SC_SliderHandle
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|bool
name|horizontal
init|=
name|slider
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
decl_stmt|;
name|bool
name|ticksAbove
init|=
name|slider
operator|->
name|tickPosition
operator|&
name|QSlider
operator|::
name|TicksAbove
decl_stmt|;
name|bool
name|ticksBelow
init|=
name|slider
operator|->
name|tickPosition
operator|&
name|QSlider
operator|::
name|TicksBelow
decl_stmt|;
name|QColor
name|activeHighlight
init|=
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Normal
argument_list|,
name|QPalette
operator|::
name|Highlight
argument_list|)
decl_stmt|;
name|QPixmap
name|cache
decl_stmt|;
name|QBrush
name|oldBrush
init|=
name|painter
operator|->
name|brush
argument_list|()
decl_stmt|;
name|QPen
name|oldPen
init|=
name|painter
operator|->
name|pen
argument_list|()
decl_stmt|;
name|QColor
name|shadowAlpha
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
decl_stmt|;
name|shadowAlpha
operator|.
name|setAlpha
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QColor
name|highlightAlpha
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
decl_stmt|;
name|highlightAlpha
operator|.
name|setAlpha
argument_list|(
literal|80
argument_list|)
expr_stmt|;
if|if
condition|(
operator|(
name|option
operator|->
name|subControls
operator|&
name|SC_SliderGroove
operator|)
operator|&&
name|groove
operator|.
name|isValid
argument_list|()
condition|)
block|{
name|QString
name|groovePixmapName
init|=
name|QStyleHelper
operator|::
name|uniqueName
argument_list|(
name|QLatin1String
argument_list|(
literal|"slider_groove"
argument_list|)
argument_list|,
name|option
argument_list|,
name|groove
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
name|QRect
name|pixmapRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|groove
operator|.
name|width
argument_list|()
argument_list|,
name|groove
operator|.
name|height
argument_list|()
argument_list|)
decl_stmt|;
comment|// draw background groove
if|if
condition|(
operator|!
name|QPixmapCache
operator|::
name|find
argument_list|(
name|groovePixmapName
argument_list|,
name|cache
argument_list|)
condition|)
block|{
name|cache
operator|=
name|QPixmap
argument_list|(
name|pixmapRect
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|cache
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|transparent
argument_list|)
expr_stmt|;
name|QPainter
name|groovePainter
argument_list|(
operator|&
name|cache
argument_list|)
decl_stmt|;
name|groovePainter
operator|.
name|setPen
argument_list|(
name|shadowAlpha
argument_list|)
expr_stmt|;
name|groovePainter
operator|.
name|drawLine
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
name|groove
operator|.
name|width
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|groovePainter
operator|.
name|drawLine
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|groove
operator|.
name|height
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|groovePainter
operator|.
name|setPen
argument_list|(
name|highlightAlpha
argument_list|)
expr_stmt|;
name|groovePainter
operator|.
name|drawLine
argument_list|(
literal|1
argument_list|,
name|groove
operator|.
name|height
argument_list|()
operator|-
literal|1
argument_list|,
name|groove
operator|.
name|width
argument_list|()
operator|-
literal|1
argument_list|,
name|groove
operator|.
name|height
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|groovePainter
operator|.
name|drawLine
argument_list|(
name|groove
operator|.
name|width
argument_list|()
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
name|groove
operator|.
name|width
argument_list|()
operator|-
literal|1
argument_list|,
name|groove
operator|.
name|height
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QLinearGradient
name|gradient
decl_stmt|;
if|if
condition|(
name|horizontal
condition|)
block|{
name|gradient
operator|.
name|setStart
argument_list|(
name|pixmapRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|top
argument_list|()
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setFinalStop
argument_list|(
name|pixmapRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|gradient
operator|.
name|setStart
argument_list|(
name|pixmapRect
operator|.
name|left
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setFinalStop
argument_list|(
name|pixmapRect
operator|.
name|right
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|groovePainter
operator|.
name|setPen
argument_list|(
name|QPen
argument_list|(
name|darkOutline
operator|.
name|darker
argument_list|(
literal|110
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|grooveColor
operator|.
name|darker
argument_list|(
literal|110
argument_list|)
argument_list|)
expr_stmt|;
comment|//dark.lighter(120));
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|1
argument_list|,
name|grooveColor
operator|.
name|lighter
argument_list|(
literal|110
argument_list|)
argument_list|)
expr_stmt|;
comment|//palette.button().color().darker(115));
name|groovePainter
operator|.
name|setBrush
argument_list|(
name|gradient
argument_list|)
expr_stmt|;
name|groovePainter
operator|.
name|drawRect
argument_list|(
name|pixmapRect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|2
argument_list|,
operator|-
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|groovePainter
operator|.
name|end
argument_list|()
expr_stmt|;
name|QPixmapCache
operator|::
name|insert
argument_list|(
name|groovePixmapName
argument_list|,
name|cache
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|drawPixmap
argument_list|(
name|groove
operator|.
name|topLeft
argument_list|()
argument_list|,
name|cache
argument_list|)
expr_stmt|;
comment|// draw blue groove highlight
name|QRect
name|clipRect
decl_stmt|;
name|groovePixmapName
operator|+=
name|QLatin1String
argument_list|(
literal|"_blue"
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|QPixmapCache
operator|::
name|find
argument_list|(
name|groovePixmapName
argument_list|,
name|cache
argument_list|)
condition|)
block|{
name|cache
operator|=
name|QPixmap
argument_list|(
name|pixmapRect
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|cache
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|transparent
argument_list|)
expr_stmt|;
name|QPainter
name|groovePainter
argument_list|(
operator|&
name|cache
argument_list|)
decl_stmt|;
name|QLinearGradient
name|gradient
decl_stmt|;
if|if
condition|(
name|horizontal
condition|)
block|{
name|gradient
operator|.
name|setStart
argument_list|(
name|pixmapRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|top
argument_list|()
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setFinalStop
argument_list|(
name|pixmapRect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|gradient
operator|.
name|setStart
argument_list|(
name|pixmapRect
operator|.
name|left
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setFinalStop
argument_list|(
name|pixmapRect
operator|.
name|right
argument_list|()
argument_list|,
name|pixmapRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|groovePainter
operator|.
name|setPen
argument_list|(
name|QPen
argument_list|(
name|activeHighlight
operator|.
name|darker
argument_list|(
literal|150
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|activeHighlight
operator|.
name|darker
argument_list|(
literal|120
argument_list|)
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|1
argument_list|,
name|activeHighlight
operator|.
name|lighter
argument_list|(
literal|160
argument_list|)
argument_list|)
expr_stmt|;
name|groovePainter
operator|.
name|setBrush
argument_list|(
name|gradient
argument_list|)
expr_stmt|;
name|groovePainter
operator|.
name|drawRect
argument_list|(
name|pixmapRect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|2
argument_list|,
operator|-
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|groovePainter
operator|.
name|end
argument_list|()
expr_stmt|;
name|QPixmapCache
operator|::
name|insert
argument_list|(
name|groovePixmapName
argument_list|,
name|cache
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|horizontal
condition|)
block|{
if|if
condition|(
name|slider
operator|->
name|upsideDown
condition|)
name|clipRect
operator|=
name|QRect
argument_list|(
name|handle
operator|.
name|right
argument_list|()
argument_list|,
name|groove
operator|.
name|top
argument_list|()
argument_list|,
name|groove
operator|.
name|right
argument_list|()
operator|-
name|handle
operator|.
name|right
argument_list|()
argument_list|,
name|groove
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|clipRect
operator|=
name|QRect
argument_list|(
name|groove
operator|.
name|left
argument_list|()
argument_list|,
name|groove
operator|.
name|top
argument_list|()
argument_list|,
name|handle
operator|.
name|left
argument_list|()
argument_list|,
name|groove
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|slider
operator|->
name|upsideDown
condition|)
name|clipRect
operator|=
name|QRect
argument_list|(
name|groove
operator|.
name|left
argument_list|()
argument_list|,
name|handle
operator|.
name|bottom
argument_list|()
argument_list|,
name|groove
operator|.
name|width
argument_list|()
argument_list|,
name|groove
operator|.
name|height
argument_list|()
operator|-
name|handle
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|clipRect
operator|=
name|QRect
argument_list|(
name|groove
operator|.
name|left
argument_list|()
argument_list|,
name|groove
operator|.
name|top
argument_list|()
argument_list|,
name|groove
operator|.
name|width
argument_list|()
argument_list|,
name|handle
operator|.
name|top
argument_list|()
operator|-
name|groove
operator|.
name|top
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
name|painter
operator|->
name|setClipRect
argument_list|(
name|clipRect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPixmap
argument_list|(
name|groove
operator|.
name|topLeft
argument_list|()
argument_list|,
name|cache
argument_list|)
expr_stmt|;
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
comment|// draw handle
if|if
condition|(
operator|(
name|option
operator|->
name|subControls
operator|&
name|SC_SliderHandle
operator|)
condition|)
block|{
name|QString
name|handlePixmapName
init|=
name|QStyleHelper
operator|::
name|uniqueName
argument_list|(
name|QLatin1String
argument_list|(
literal|"slider_handle"
argument_list|)
argument_list|,
name|option
argument_list|,
name|handle
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|QPixmapCache
operator|::
name|find
argument_list|(
name|handlePixmapName
argument_list|,
name|cache
argument_list|)
condition|)
block|{
name|cache
operator|=
name|QPixmap
argument_list|(
name|handle
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|cache
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|transparent
argument_list|)
expr_stmt|;
name|QRect
name|pixmapRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|handle
operator|.
name|width
argument_list|()
argument_list|,
name|handle
operator|.
name|height
argument_list|()
argument_list|)
decl_stmt|;
name|QPainter
name|handlePainter
argument_list|(
operator|&
name|cache
argument_list|)
decl_stmt|;
name|QColor
name|gradientStartColor
init|=
name|mergedColors
argument_list|(
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|155
argument_list|)
argument_list|,
name|dark
operator|.
name|lighter
argument_list|(
literal|155
argument_list|)
argument_list|,
literal|50
argument_list|)
decl_stmt|;
name|QColor
name|gradientStopColor
init|=
name|gradientStartColor
operator|.
name|darker
argument_list|(
literal|108
argument_list|)
decl_stmt|;
name|QRect
name|gradRect
init|=
name|pixmapRect
operator|.
name|adjusted
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
operator|-
literal|2
argument_list|,
operator|-
literal|2
argument_list|)
decl_stmt|;
name|QColor
name|gradientBgStartColor
init|=
name|gradientStartColor
decl_stmt|;
name|QColor
name|gradientBgStopColor
init|=
name|gradientStopColor
decl_stmt|;
name|QColor
name|outline
init|=
name|option
operator|->
name|state
operator|&
name|State_Enabled
condition|?
name|dark
else|:
name|dark
operator|.
name|lighter
argument_list|(
literal|130
argument_list|)
decl_stmt|;
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|State_Enabled
operator|&&
name|option
operator|->
name|activeSubControls
operator|&
name|SC_SliderHandle
condition|)
block|{
name|gradientBgStartColor
operator|=
name|option
operator|->
name|palette
operator|.
name|highlight
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|180
argument_list|)
expr_stmt|;
name|gradientBgStopColor
operator|=
name|option
operator|->
name|palette
operator|.
name|highlight
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|lighter
argument_list|(
literal|110
argument_list|)
expr_stmt|;
name|outline
operator|=
name|option
operator|->
name|palette
operator|.
name|highlight
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|130
argument_list|)
expr_stmt|;
block|}
comment|// gradient fill
name|QRect
name|r
init|=
name|pixmapRect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
decl_stmt|;
name|qt_cleanlooks_draw_gradient
argument_list|(
operator|&
name|handlePainter
argument_list|,
name|gradRect
argument_list|,
name|gradientBgStartColor
argument_list|,
name|gradientBgStopColor
argument_list|,
name|horizontal
condition|?
name|TopDown
else|:
name|FromLeft
argument_list|,
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
argument_list|)
expr_stmt|;
name|handlePainter
operator|.
name|setPen
argument_list|(
name|QPen
argument_list|(
name|outline
operator|.
name|darker
argument_list|(
literal|110
argument_list|)
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|handlePainter
operator|.
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
literal|3
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|-
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|handlePainter
operator|.
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
literal|3
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|-
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|handlePainter
operator|.
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|3
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|3
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|handlePainter
operator|.
name|save
argument_list|()
expr_stmt|;
name|handlePainter
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|)
expr_stmt|;
name|handlePainter
operator|.
name|translate
argument_list|(
literal|0.5
argument_list|,
literal|0.5
argument_list|)
expr_stmt|;
specifier|const
name|QLine
name|lines
index|[
literal|4
index|]
init|=
block|{
name|QLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|)
block|,
name|QLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|r
operator|.
name|top
argument_list|()
argument_list|)
argument_list|)
block|,
name|QLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|)
block|,
name|QLine
argument_list|(
argument|QPoint(r.right(), r.top() +
literal|2
argument|)
argument_list|,
argument|QPoint(r.right() -
literal|2
argument|, r.top())
argument_list|)
block|}
decl_stmt|;
name|handlePainter
operator|.
name|drawLines
argument_list|(
name|lines
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|handlePainter
operator|.
name|restore
argument_list|()
expr_stmt|;
empty_stmt|;
name|handlePainter
operator|.
name|setPen
argument_list|(
name|QPen
argument_list|(
name|outline
operator|.
name|darker
argument_list|(
literal|130
argument_list|)
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|handlePainter
operator|.
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|3
argument_list|,
name|r
operator|.
name|top
argument_list|()
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|3
argument_list|,
name|r
operator|.
name|top
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QColor
name|cornerAlpha
init|=
name|outline
operator|.
name|darker
argument_list|(
literal|120
argument_list|)
decl_stmt|;
name|cornerAlpha
operator|.
name|setAlpha
argument_list|(
literal|80
argument_list|)
expr_stmt|;
name|handlePainter
operator|.
name|setPen
argument_list|(
name|cornerAlpha
argument_list|)
expr_stmt|;
if|if
condition|(
name|horizontal
condition|)
block|{
name|handlePainter
operator|.
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|6
argument_list|,
name|r
operator|.
name|top
argument_list|()
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|6
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|handlePainter
operator|.
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|6
argument_list|,
name|r
operator|.
name|top
argument_list|()
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|6
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|handlePainter
operator|.
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
literal|6
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
literal|6
argument_list|)
argument_list|)
expr_stmt|;
name|handlePainter
operator|.
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|-
literal|6
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|-
literal|6
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|//handle shadow
name|handlePainter
operator|.
name|setPen
argument_list|(
name|shadowAlpha
argument_list|)
expr_stmt|;
name|handlePainter
operator|.
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|handlePainter
operator|.
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|+
literal|1
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|-
literal|3
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|+
literal|1
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|handlePainter
operator|.
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|+
literal|1
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|-
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|qt_cleanlooks_draw_gradient
argument_list|(
operator|&
name|handlePainter
argument_list|,
name|horizontal
condition|?
name|gradRect
operator|.
name|adjusted
argument_list|(
literal|6
argument_list|,
literal|0
argument_list|,
operator|-
literal|6
argument_list|,
literal|0
argument_list|)
else|:
name|gradRect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|6
argument_list|,
literal|0
argument_list|,
operator|-
literal|6
argument_list|)
argument_list|,
name|gradientStartColor
argument_list|,
name|gradientStopColor
operator|.
name|darker
argument_list|(
literal|106
argument_list|)
argument_list|,
name|horizontal
condition|?
name|TopDown
else|:
name|FromLeft
argument_list|,
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
argument_list|)
expr_stmt|;
comment|//draw grips
for|for
control|(
name|int
name|i
init|=
operator|-
literal|3
init|;
name|i
operator|<
literal|6
condition|;
name|i
operator|+=
literal|3
control|)
block|{
for|for
control|(
name|int
name|j
init|=
operator|-
literal|3
init|;
name|j
operator|<
literal|6
condition|;
name|j
operator|+=
literal|3
control|)
block|{
name|handlePainter
operator|.
name|fillRect
argument_list|(
name|r
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|+
name|i
argument_list|,
name|r
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|+
name|j
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|,
name|highlightAlpha
argument_list|)
expr_stmt|;
name|handlePainter
operator|.
name|setPen
argument_list|(
name|gripShadow
argument_list|)
expr_stmt|;
name|handlePainter
operator|.
name|drawPoint
argument_list|(
name|r
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|+
name|i
argument_list|,
name|r
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|+
name|j
argument_list|)
expr_stmt|;
block|}
block|}
name|handlePainter
operator|.
name|end
argument_list|()
expr_stmt|;
name|QPixmapCache
operator|::
name|insert
argument_list|(
name|handlePixmapName
argument_list|,
name|cache
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|drawPixmap
argument_list|(
name|handle
operator|.
name|topLeft
argument_list|()
argument_list|,
name|cache
argument_list|)
expr_stmt|;
if|if
condition|(
name|slider
operator|->
name|state
operator|&
name|State_HasFocus
condition|)
block|{
name|QStyleOptionFocusRect
name|fropt
decl_stmt|;
name|fropt
operator|.
name|QStyleOption
operator|::
name|operator
name|=
argument_list|(
operator|*
name|slider
argument_list|)
expr_stmt|;
name|fropt
operator|.
name|rect
operator|=
name|slider
operator|->
name|rect
expr_stmt|;
name|proxy
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|PE_FrameFocusRect
argument_list|,
operator|&
name|fropt
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|option
operator|->
name|subControls
operator|&
name|SC_SliderTickmarks
condition|)
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|darkOutline
argument_list|)
expr_stmt|;
name|int
name|tickSize
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_SliderTickmarkOffset
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|int
name|available
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_SliderSpaceAvailable
argument_list|,
name|slider
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|int
name|interval
init|=
name|slider
operator|->
name|tickInterval
decl_stmt|;
if|if
condition|(
name|interval
operator|<=
literal|0
condition|)
block|{
name|interval
operator|=
name|slider
operator|->
name|singleStep
expr_stmt|;
if|if
condition|(
name|QStyle
operator|::
name|sliderPositionFromValue
argument_list|(
name|slider
operator|->
name|minimum
argument_list|,
name|slider
operator|->
name|maximum
argument_list|,
name|interval
argument_list|,
name|available
argument_list|)
operator|-
name|QStyle
operator|::
name|sliderPositionFromValue
argument_list|(
name|slider
operator|->
name|minimum
argument_list|,
name|slider
operator|->
name|maximum
argument_list|,
literal|0
argument_list|,
name|available
argument_list|)
operator|<
literal|3
condition|)
name|interval
operator|=
name|slider
operator|->
name|pageStep
expr_stmt|;
block|}
if|if
condition|(
name|interval
operator|<=
literal|0
condition|)
name|interval
operator|=
literal|1
expr_stmt|;
name|int
name|v
init|=
name|slider
operator|->
name|minimum
decl_stmt|;
name|int
name|len
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_SliderLength
argument_list|,
name|slider
argument_list|,
name|widget
argument_list|)
decl_stmt|;
while|while
condition|(
name|v
operator|<=
name|slider
operator|->
name|maximum
operator|+
literal|1
condition|)
block|{
if|if
condition|(
name|v
operator|==
name|slider
operator|->
name|maximum
operator|+
literal|1
operator|&&
name|interval
operator|==
literal|1
condition|)
break|break;
specifier|const
name|int
name|v_
init|=
name|qMin
argument_list|(
name|v
argument_list|,
name|slider
operator|->
name|maximum
argument_list|)
decl_stmt|;
name|int
name|pos
init|=
name|sliderPositionFromValue
argument_list|(
name|slider
operator|->
name|minimum
argument_list|,
name|slider
operator|->
name|maximum
argument_list|,
name|v_
argument_list|,
operator|(
name|horizontal
condition|?
name|slider
operator|->
name|rect
operator|.
name|width
argument_list|()
else|:
name|slider
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|)
operator|-
name|len
argument_list|,
name|slider
operator|->
name|upsideDown
argument_list|)
operator|+
name|len
operator|/
literal|2
decl_stmt|;
name|int
name|extra
init|=
literal|2
operator|-
operator|(
operator|(
name|v_
operator|==
name|slider
operator|->
name|minimum
operator|||
name|v_
operator|==
name|slider
operator|->
name|maximum
operator|)
condition|?
literal|1
else|:
literal|0
operator|)
decl_stmt|;
if|if
condition|(
name|horizontal
condition|)
block|{
if|if
condition|(
name|ticksAbove
condition|)
block|{
name|painter
operator|->
name|drawLine
argument_list|(
name|pos
argument_list|,
name|slider
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
name|extra
argument_list|,
name|pos
argument_list|,
name|slider
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
name|tickSize
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|ticksBelow
condition|)
block|{
name|painter
operator|->
name|drawLine
argument_list|(
name|pos
argument_list|,
name|slider
operator|->
name|rect
operator|.
name|bottom
argument_list|()
operator|-
name|extra
argument_list|,
name|pos
argument_list|,
name|slider
operator|->
name|rect
operator|.
name|bottom
argument_list|()
operator|-
name|tickSize
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
name|ticksAbove
condition|)
block|{
name|painter
operator|->
name|drawLine
argument_list|(
name|slider
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
name|extra
argument_list|,
name|pos
argument_list|,
name|slider
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
name|tickSize
argument_list|,
name|pos
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|ticksBelow
condition|)
block|{
name|painter
operator|->
name|drawLine
argument_list|(
name|slider
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
name|extra
argument_list|,
name|pos
argument_list|,
name|slider
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
name|tickSize
argument_list|,
name|pos
argument_list|)
expr_stmt|;
block|}
block|}
comment|// in the case where maximum is max int
name|int
name|nextInterval
init|=
name|v
operator|+
name|interval
decl_stmt|;
if|if
condition|(
name|nextInterval
operator|<
name|v
condition|)
break|break;
name|v
operator|=
name|nextInterval
expr_stmt|;
block|}
block|}
name|painter
operator|->
name|setBrush
argument_list|(
name|oldBrush
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|oldPen
argument_list|)
expr_stmt|;
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_SLIDER
ifndef|#
directive|ifndef
name|QT_NO_DIAL
case|case
name|CC_Dial
case|:
if|if
condition|(
specifier|const
name|QStyleOptionSlider
modifier|*
name|dial
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSlider
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
name|QStyleHelper
operator|::
name|drawDial
argument_list|(
name|dial
argument_list|,
name|painter
argument_list|)
expr_stmt|;
break|break;
endif|#
directive|endif
comment|// QT_NO_DIAL
default|default:
name|QWindowsStyle
operator|::
name|drawComplexControl
argument_list|(
name|control
argument_list|,
name|option
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
end_function
begin_comment
comment|/*!   \reimp */
end_comment
begin_function
DECL|function|pixelMetric
name|int
name|QCleanlooksStyle
operator|::
name|pixelMetric
parameter_list|(
name|PixelMetric
name|metric
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|option
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
name|int
name|ret
init|=
operator|-
literal|1
decl_stmt|;
switch|switch
condition|(
name|metric
condition|)
block|{
case|case
name|PM_ToolTipLabelFrameWidth
case|:
name|ret
operator|=
literal|2
expr_stmt|;
break|break;
case|case
name|PM_ButtonDefaultIndicator
case|:
name|ret
operator|=
literal|0
expr_stmt|;
break|break;
case|case
name|PM_ButtonShiftHorizontal
case|:
case|case
name|PM_ButtonShiftVertical
case|:
name|ret
operator|=
literal|0
expr_stmt|;
break|break;
case|case
name|PM_MessageBoxIconSize
case|:
name|ret
operator|=
literal|48
expr_stmt|;
break|break;
case|case
name|PM_ListViewIconSize
case|:
name|ret
operator|=
literal|24
expr_stmt|;
break|break;
case|case
name|PM_DialogButtonsSeparator
case|:
case|case
name|PM_SplitterWidth
case|:
name|ret
operator|=
literal|6
expr_stmt|;
break|break;
case|case
name|PM_ScrollBarSliderMin
case|:
name|ret
operator|=
literal|26
expr_stmt|;
break|break;
case|case
name|PM_MenuPanelWidth
case|:
comment|//menu framewidth
name|ret
operator|=
literal|2
expr_stmt|;
break|break;
case|case
name|PM_TitleBarHeight
case|:
name|ret
operator|=
literal|24
expr_stmt|;
break|break;
case|case
name|PM_ScrollBarExtent
case|:
name|ret
operator|=
literal|15
expr_stmt|;
break|break;
case|case
name|PM_SliderThickness
case|:
name|ret
operator|=
literal|15
expr_stmt|;
break|break;
case|case
name|PM_SliderLength
case|:
name|ret
operator|=
literal|27
expr_stmt|;
break|break;
case|case
name|PM_DockWidgetTitleMargin
case|:
name|ret
operator|=
literal|1
expr_stmt|;
break|break;
case|case
name|PM_MenuBarVMargin
case|:
name|ret
operator|=
literal|1
expr_stmt|;
break|break;
case|case
name|PM_DefaultFrameWidth
case|:
name|ret
operator|=
literal|2
expr_stmt|;
break|break;
case|case
name|PM_SpinBoxFrameWidth
case|:
name|ret
operator|=
literal|3
expr_stmt|;
break|break;
case|case
name|PM_MenuBarItemSpacing
case|:
name|ret
operator|=
literal|6
expr_stmt|;
break|break;
case|case
name|PM_MenuBarHMargin
case|:
name|ret
operator|=
literal|0
expr_stmt|;
break|break;
case|case
name|PM_ToolBarHandleExtent
case|:
name|ret
operator|=
literal|9
expr_stmt|;
break|break;
case|case
name|PM_ToolBarItemSpacing
case|:
name|ret
operator|=
literal|2
expr_stmt|;
break|break;
case|case
name|PM_ToolBarFrameWidth
case|:
name|ret
operator|=
literal|0
expr_stmt|;
break|break;
case|case
name|PM_ToolBarItemMargin
case|:
name|ret
operator|=
literal|1
expr_stmt|;
break|break;
case|case
name|PM_SmallIconSize
case|:
name|ret
operator|=
literal|16
expr_stmt|;
break|break;
case|case
name|PM_ButtonIconSize
case|:
name|ret
operator|=
literal|24
expr_stmt|;
break|break;
case|case
name|PM_MenuVMargin
case|:
case|case
name|PM_MenuHMargin
case|:
name|ret
operator|=
literal|0
expr_stmt|;
break|break;
case|case
name|PM_DockWidgetTitleBarButtonMargin
case|:
name|ret
operator|=
literal|4
expr_stmt|;
break|break;
case|case
name|PM_MaximumDragDistance
case|:
return|return
operator|-
literal|1
return|;
case|case
name|PM_TabCloseIndicatorWidth
case|:
case|case
name|PM_TabCloseIndicatorHeight
case|:
return|return
literal|20
return|;
default|default:
break|break;
block|}
return|return
name|ret
operator|!=
operator|-
literal|1
condition|?
name|ret
else|:
name|QWindowsStyle
operator|::
name|pixelMetric
argument_list|(
name|metric
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
return|;
block|}
end_function
begin_comment
comment|/*!   \reimp */
end_comment
begin_function
DECL|function|sizeFromContents
name|QSize
name|QCleanlooksStyle
operator|::
name|sizeFromContents
parameter_list|(
name|ContentsType
name|type
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|option
parameter_list|,
specifier|const
name|QSize
modifier|&
name|size
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
name|QSize
name|newSize
init|=
name|QWindowsStyle
operator|::
name|sizeFromContents
argument_list|(
name|type
argument_list|,
name|option
argument_list|,
name|size
argument_list|,
name|widget
argument_list|)
decl_stmt|;
switch|switch
condition|(
name|type
condition|)
block|{
case|case
name|CT_PushButton
case|:
if|if
condition|(
specifier|const
name|QStyleOptionButton
modifier|*
name|btn
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionButton
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
if|if
condition|(
operator|!
name|btn
operator|->
name|text
operator|.
name|isEmpty
argument_list|()
operator|&&
name|newSize
operator|.
name|width
argument_list|()
operator|<
literal|80
condition|)
name|newSize
operator|.
name|setWidth
argument_list|(
literal|80
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|btn
operator|->
name|icon
operator|.
name|isNull
argument_list|()
operator|&&
name|btn
operator|->
name|iconSize
operator|.
name|height
argument_list|()
operator|>
literal|16
condition|)
name|newSize
operator|-=
name|QSize
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|newSize
operator|+=
name|QSize
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
specifier|const
name|QPushButton
modifier|*
name|button
init|=
name|qobject_cast
argument_list|<
specifier|const
name|QPushButton
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
condition|)
block|{
if|if
condition|(
name|qobject_cast
argument_list|<
specifier|const
name|QDialogButtonBox
operator|*
argument_list|>
argument_list|(
name|button
operator|->
name|parentWidget
argument_list|()
argument_list|)
condition|)
block|{
if|if
condition|(
name|newSize
operator|.
name|height
argument_list|()
operator|<
literal|32
condition|)
name|newSize
operator|.
name|setHeight
argument_list|(
literal|32
argument_list|)
expr_stmt|;
block|}
block|}
break|break;
ifndef|#
directive|ifndef
name|QT_NO_GROUPBOX
case|case
name|CT_GroupBox
case|:
comment|// Since we use a bold font we have to recalculate base width
if|if
condition|(
specifier|const
name|QGroupBox
modifier|*
name|gb
init|=
name|qobject_cast
argument_list|<
specifier|const
name|QGroupBox
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
condition|)
block|{
name|QFont
name|font
init|=
name|gb
operator|->
name|font
argument_list|()
decl_stmt|;
name|font
operator|.
name|setBold
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QFontMetrics
name|metrics
argument_list|(
name|font
argument_list|)
decl_stmt|;
name|int
name|baseWidth
init|=
name|metrics
operator|.
name|width
argument_list|(
name|gb
operator|->
name|title
argument_list|()
argument_list|)
operator|+
name|metrics
operator|.
name|width
argument_list|(
name|QLatin1Char
argument_list|(
literal|' '
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|gb
operator|->
name|isCheckable
argument_list|()
condition|)
block|{
name|baseWidth
operator|+=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|QStyle
operator|::
name|PM_IndicatorWidth
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|baseWidth
operator|+=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|QStyle
operator|::
name|PM_CheckBoxLabelSpacing
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
name|newSize
operator|.
name|setWidth
argument_list|(
name|qMax
argument_list|(
name|baseWidth
argument_list|,
name|newSize
operator|.
name|width
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|newSize
operator|+=
name|QSize
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
break|break;
endif|#
directive|endif
comment|//QT_NO_GROUPBOX
case|case
name|CT_RadioButton
case|:
case|case
name|CT_CheckBox
case|:
name|newSize
operator|+=
name|QSize
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
break|break;
case|case
name|CT_ToolButton
case|:
ifndef|#
directive|ifndef
name|QT_NO_TOOLBAR
if|if
condition|(
name|widget
operator|&&
name|qobject_cast
argument_list|<
name|QToolBar
operator|*
argument_list|>
argument_list|(
name|widget
operator|->
name|parentWidget
argument_list|()
argument_list|)
condition|)
name|newSize
operator|+=
name|QSize
argument_list|(
literal|4
argument_list|,
literal|6
argument_list|)
expr_stmt|;
endif|#
directive|endif
comment|// QT_NO_TOOLBAR
break|break;
case|case
name|CT_SpinBox
case|:
name|newSize
operator|+=
name|QSize
argument_list|(
literal|0
argument_list|,
operator|-
literal|2
argument_list|)
expr_stmt|;
break|break;
case|case
name|CT_ComboBox
case|:
name|newSize
operator|+=
name|QSize
argument_list|(
literal|2
argument_list|,
literal|4
argument_list|)
expr_stmt|;
break|break;
case|case
name|CT_LineEdit
case|:
name|newSize
operator|+=
name|QSize
argument_list|(
literal|0
argument_list|,
literal|4
argument_list|)
expr_stmt|;
break|break;
case|case
name|CT_MenuBarItem
case|:
name|newSize
operator|+=
name|QSize
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
break|break;
case|case
name|CT_MenuItem
case|:
if|if
condition|(
specifier|const
name|QStyleOptionMenuItem
modifier|*
name|menuItem
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionMenuItem
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
if|if
condition|(
name|menuItem
operator|->
name|menuItemType
operator|==
name|QStyleOptionMenuItem
operator|::
name|Separator
condition|)
block|{
if|if
condition|(
operator|!
name|menuItem
operator|->
name|text
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|newSize
operator|.
name|setHeight
argument_list|(
name|menuItem
operator|->
name|fontMetrics
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
ifndef|#
directive|ifndef
name|QT_NO_COMBOBOX
elseif|else
if|if
condition|(
operator|!
name|menuItem
operator|->
name|icon
operator|.
name|isNull
argument_list|()
condition|)
block|{
if|if
condition|(
specifier|const
name|QComboBox
modifier|*
name|combo
init|=
name|qobject_cast
argument_list|<
specifier|const
name|QComboBox
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
condition|)
block|{
name|newSize
operator|.
name|setHeight
argument_list|(
name|qMax
argument_list|(
name|combo
operator|->
name|iconSize
argument_list|()
operator|.
name|height
argument_list|()
operator|+
literal|2
argument_list|,
name|newSize
operator|.
name|height
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
endif|#
directive|endif
comment|// QT_NO_COMBOBOX
block|}
break|break;
case|case
name|CT_SizeGrip
case|:
name|newSize
operator|+=
name|QSize
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|)
expr_stmt|;
break|break;
case|case
name|CT_MdiControls
case|:
if|if
condition|(
specifier|const
name|QStyleOptionComplex
modifier|*
name|styleOpt
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionComplex
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|int
name|width
init|=
literal|0
decl_stmt|;
if|if
condition|(
name|styleOpt
operator|->
name|subControls
operator|&
name|SC_MdiMinButton
condition|)
name|width
operator|+=
literal|19
operator|+
literal|1
expr_stmt|;
if|if
condition|(
name|styleOpt
operator|->
name|subControls
operator|&
name|SC_MdiNormalButton
condition|)
name|width
operator|+=
literal|19
operator|+
literal|1
expr_stmt|;
if|if
condition|(
name|styleOpt
operator|->
name|subControls
operator|&
name|SC_MdiCloseButton
condition|)
name|width
operator|+=
literal|19
operator|+
literal|1
expr_stmt|;
name|newSize
operator|=
name|QSize
argument_list|(
name|width
argument_list|,
literal|19
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|newSize
operator|=
name|QSize
argument_list|(
literal|60
argument_list|,
literal|19
argument_list|)
expr_stmt|;
block|}
break|break;
default|default:
break|break;
block|}
return|return
name|newSize
return|;
block|}
end_function
begin_comment
comment|/*!   \reimp */
end_comment
begin_function
DECL|function|polish
name|void
name|QCleanlooksStyle
operator|::
name|polish
parameter_list|(
name|QApplication
modifier|*
name|app
parameter_list|)
block|{
name|QWindowsStyle
operator|::
name|polish
argument_list|(
name|app
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|/*!   \reimp */
end_comment
begin_function
DECL|function|polish
name|void
name|QCleanlooksStyle
operator|::
name|polish
parameter_list|(
name|QWidget
modifier|*
name|widget
parameter_list|)
block|{
name|QWindowsStyle
operator|::
name|polish
argument_list|(
name|widget
argument_list|)
expr_stmt|;
if|if
condition|(
name|qobject_cast
argument_list|<
name|QAbstractButton
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
ifndef|#
directive|ifndef
name|QT_NO_COMBOBOX
operator|||
name|qobject_cast
argument_list|<
name|QComboBox
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
endif|#
directive|endif
ifndef|#
directive|ifndef
name|QT_NO_PROGRESSBAR
operator|||
name|qobject_cast
argument_list|<
name|QProgressBar
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
endif|#
directive|endif
ifndef|#
directive|ifndef
name|QT_NO_SCROLLBAR
operator|||
name|qobject_cast
argument_list|<
name|QScrollBar
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
endif|#
directive|endif
ifndef|#
directive|ifndef
name|QT_NO_SPLITTER
operator|||
name|qobject_cast
argument_list|<
name|QSplitterHandle
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
endif|#
directive|endif
operator|||
name|qobject_cast
argument_list|<
name|QAbstractSlider
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
ifndef|#
directive|ifndef
name|QT_NO_SPINBOX
operator|||
name|qobject_cast
argument_list|<
name|QAbstractSpinBox
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
endif|#
directive|endif
operator|||
operator|(
name|widget
operator|->
name|inherits
argument_list|(
literal|"QDockSeparator"
argument_list|)
operator|)
operator|||
operator|(
name|widget
operator|->
name|inherits
argument_list|(
literal|"QDockWidgetSeparator"
argument_list|)
operator|)
condition|)
block|{
name|widget
operator|->
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_Hover
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_comment
comment|/*!   \reimp */
end_comment
begin_function
DECL|function|polish
name|void
name|QCleanlooksStyle
operator|::
name|polish
parameter_list|(
name|QPalette
modifier|&
name|pal
parameter_list|)
block|{
name|QWindowsStyle
operator|::
name|polish
argument_list|(
name|pal
argument_list|)
expr_stmt|;
comment|//this is a workaround for some themes such as Human, where the contrast
comment|//between text and background is too low.
name|QColor
name|highlight
init|=
name|pal
operator|.
name|highlight
argument_list|()
operator|.
name|color
argument_list|()
decl_stmt|;
name|QColor
name|highlightText
init|=
name|pal
operator|.
name|highlightedText
argument_list|()
operator|.
name|color
argument_list|()
decl_stmt|;
if|if
condition|(
name|qAbs
argument_list|(
name|qGray
argument_list|(
name|highlight
operator|.
name|rgb
argument_list|()
argument_list|)
operator|-
name|qGray
argument_list|(
name|highlightText
operator|.
name|rgb
argument_list|()
argument_list|)
argument_list|)
operator|<
literal|150
condition|)
block|{
if|if
condition|(
name|qGray
argument_list|(
name|highlightText
operator|.
name|rgb
argument_list|()
argument_list|)
operator|<
literal|128
condition|)
name|pal
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Highlight
argument_list|,
name|highlight
operator|.
name|lighter
argument_list|(
literal|145
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_comment
comment|/*!   \reimp */
end_comment
begin_function
DECL|function|unpolish
name|void
name|QCleanlooksStyle
operator|::
name|unpolish
parameter_list|(
name|QWidget
modifier|*
name|widget
parameter_list|)
block|{
name|QWindowsStyle
operator|::
name|unpolish
argument_list|(
name|widget
argument_list|)
expr_stmt|;
if|if
condition|(
name|qobject_cast
argument_list|<
name|QAbstractButton
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
ifndef|#
directive|ifndef
name|QT_NO_COMBOBOX
operator|||
name|qobject_cast
argument_list|<
name|QComboBox
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
endif|#
directive|endif
ifndef|#
directive|ifndef
name|QT_NO_PROGRESSBAR
operator|||
name|qobject_cast
argument_list|<
name|QProgressBar
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
endif|#
directive|endif
ifndef|#
directive|ifndef
name|QT_NO_SCROLLBAR
operator|||
name|qobject_cast
argument_list|<
name|QScrollBar
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
endif|#
directive|endif
ifndef|#
directive|ifndef
name|QT_NO_SPLITTER
operator|||
name|qobject_cast
argument_list|<
name|QSplitterHandle
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
endif|#
directive|endif
operator|||
name|qobject_cast
argument_list|<
name|QAbstractSlider
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
ifndef|#
directive|ifndef
name|QT_NO_SPINBOX
operator|||
name|qobject_cast
argument_list|<
name|QAbstractSpinBox
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
endif|#
directive|endif
operator|||
operator|(
name|widget
operator|->
name|inherits
argument_list|(
literal|"QDockSeparator"
argument_list|)
operator|)
operator|||
operator|(
name|widget
operator|->
name|inherits
argument_list|(
literal|"QDockWidgetSeparator"
argument_list|)
operator|)
condition|)
block|{
name|widget
operator|->
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_Hover
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_comment
comment|/*!   \reimp */
end_comment
begin_function
DECL|function|unpolish
name|void
name|QCleanlooksStyle
operator|::
name|unpolish
parameter_list|(
name|QApplication
modifier|*
name|app
parameter_list|)
block|{
name|QWindowsStyle
operator|::
name|unpolish
argument_list|(
name|app
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|/*!   \reimp */
end_comment
begin_function
DECL|function|subControlRect
name|QRect
name|QCleanlooksStyle
operator|::
name|subControlRect
parameter_list|(
name|ComplexControl
name|control
parameter_list|,
specifier|const
name|QStyleOptionComplex
modifier|*
name|option
parameter_list|,
name|SubControl
name|subControl
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
name|QRect
name|rect
init|=
name|QWindowsStyle
operator|::
name|subControlRect
argument_list|(
name|control
argument_list|,
name|option
argument_list|,
name|subControl
argument_list|,
name|widget
argument_list|)
decl_stmt|;
switch|switch
condition|(
name|control
condition|)
block|{
ifndef|#
directive|ifndef
name|QT_NO_SLIDER
case|case
name|CC_Slider
case|:
if|if
condition|(
specifier|const
name|QStyleOptionSlider
modifier|*
name|slider
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSlider
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|int
name|tickSize
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_SliderTickmarkOffset
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
decl_stmt|;
switch|switch
condition|(
name|subControl
condition|)
block|{
case|case
name|SC_SliderHandle
case|:
block|{
if|if
condition|(
name|slider
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
block|{
name|rect
operator|.
name|setHeight
argument_list|(
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_SliderThickness
argument_list|)
argument_list|)
expr_stmt|;
name|rect
operator|.
name|setWidth
argument_list|(
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_SliderLength
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|centerY
init|=
name|slider
operator|->
name|rect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|-
name|rect
operator|.
name|height
argument_list|()
operator|/
literal|2
decl_stmt|;
if|if
condition|(
name|slider
operator|->
name|tickPosition
operator|&
name|QSlider
operator|::
name|TicksAbove
condition|)
name|centerY
operator|+=
name|tickSize
expr_stmt|;
if|if
condition|(
name|slider
operator|->
name|tickPosition
operator|&
name|QSlider
operator|::
name|TicksBelow
condition|)
name|centerY
operator|-=
name|tickSize
expr_stmt|;
name|rect
operator|.
name|moveTop
argument_list|(
name|centerY
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|rect
operator|.
name|setWidth
argument_list|(
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_SliderThickness
argument_list|)
argument_list|)
expr_stmt|;
name|rect
operator|.
name|setHeight
argument_list|(
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_SliderLength
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|centerX
init|=
name|slider
operator|->
name|rect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|-
name|rect
operator|.
name|width
argument_list|()
operator|/
literal|2
decl_stmt|;
if|if
condition|(
name|slider
operator|->
name|tickPosition
operator|&
name|QSlider
operator|::
name|TicksAbove
condition|)
name|centerX
operator|+=
name|tickSize
expr_stmt|;
if|if
condition|(
name|slider
operator|->
name|tickPosition
operator|&
name|QSlider
operator|::
name|TicksBelow
condition|)
name|centerX
operator|-=
name|tickSize
expr_stmt|;
name|rect
operator|.
name|moveLeft
argument_list|(
name|centerX
argument_list|)
expr_stmt|;
block|}
block|}
break|break;
case|case
name|SC_SliderGroove
case|:
block|{
name|QPoint
name|grooveCenter
init|=
name|slider
operator|->
name|rect
operator|.
name|center
argument_list|()
decl_stmt|;
if|if
condition|(
name|slider
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
block|{
name|rect
operator|.
name|setHeight
argument_list|(
literal|7
argument_list|)
expr_stmt|;
if|if
condition|(
name|slider
operator|->
name|tickPosition
operator|&
name|QSlider
operator|::
name|TicksAbove
condition|)
name|grooveCenter
operator|.
name|ry
argument_list|()
operator|+=
name|tickSize
expr_stmt|;
if|if
condition|(
name|slider
operator|->
name|tickPosition
operator|&
name|QSlider
operator|::
name|TicksBelow
condition|)
name|grooveCenter
operator|.
name|ry
argument_list|()
operator|-=
name|tickSize
expr_stmt|;
block|}
else|else
block|{
name|rect
operator|.
name|setWidth
argument_list|(
literal|7
argument_list|)
expr_stmt|;
if|if
condition|(
name|slider
operator|->
name|tickPosition
operator|&
name|QSlider
operator|::
name|TicksAbove
condition|)
name|grooveCenter
operator|.
name|rx
argument_list|()
operator|+=
name|tickSize
expr_stmt|;
if|if
condition|(
name|slider
operator|->
name|tickPosition
operator|&
name|QSlider
operator|::
name|TicksBelow
condition|)
name|grooveCenter
operator|.
name|rx
argument_list|()
operator|-=
name|tickSize
expr_stmt|;
block|}
name|rect
operator|.
name|moveCenter
argument_list|(
name|grooveCenter
argument_list|)
expr_stmt|;
break|break;
block|}
default|default:
break|break;
block|}
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_SLIDER
case|case
name|CC_ScrollBar
case|:
break|break;
ifndef|#
directive|ifndef
name|QT_NO_SPINBOX
case|case
name|CC_SpinBox
case|:
if|if
condition|(
specifier|const
name|QStyleOptionSpinBox
modifier|*
name|spinbox
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSpinBox
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|QSize
name|bs
decl_stmt|;
name|int
name|center
init|=
name|spinbox
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|/
literal|2
decl_stmt|;
name|int
name|fw
init|=
name|spinbox
operator|->
name|frame
condition|?
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_SpinBoxFrameWidth
argument_list|,
name|spinbox
argument_list|,
name|widget
argument_list|)
else|:
literal|0
decl_stmt|;
name|int
name|y
init|=
name|fw
decl_stmt|;
name|bs
operator|.
name|setHeight
argument_list|(
name|qMax
argument_list|(
literal|8
argument_list|,
name|spinbox
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|/
literal|2
operator|-
name|y
argument_list|)
argument_list|)
expr_stmt|;
name|bs
operator|.
name|setWidth
argument_list|(
literal|15
argument_list|)
expr_stmt|;
name|int
name|x
decl_stmt|,
name|lx
decl_stmt|,
name|rx
decl_stmt|;
name|x
operator|=
name|spinbox
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|-
name|y
operator|-
name|bs
operator|.
name|width
argument_list|()
operator|+
literal|2
expr_stmt|;
name|lx
operator|=
name|fw
expr_stmt|;
name|rx
operator|=
name|x
operator|-
name|fw
expr_stmt|;
switch|switch
condition|(
name|subControl
condition|)
block|{
case|case
name|SC_SpinBoxUp
case|:
if|if
condition|(
name|spinbox
operator|->
name|buttonSymbols
operator|==
name|QAbstractSpinBox
operator|::
name|NoButtons
condition|)
return|return
name|QRect
argument_list|()
return|;
name|rect
operator|=
name|QRect
argument_list|(
name|x
argument_list|,
name|fw
argument_list|,
name|bs
operator|.
name|width
argument_list|()
argument_list|,
name|center
operator|-
name|fw
argument_list|)
expr_stmt|;
break|break;
case|case
name|SC_SpinBoxDown
case|:
if|if
condition|(
name|spinbox
operator|->
name|buttonSymbols
operator|==
name|QAbstractSpinBox
operator|::
name|NoButtons
condition|)
return|return
name|QRect
argument_list|()
return|;
name|rect
operator|=
name|QRect
argument_list|(
name|x
argument_list|,
name|center
argument_list|,
name|bs
operator|.
name|width
argument_list|()
argument_list|,
name|spinbox
operator|->
name|rect
operator|.
name|bottom
argument_list|()
operator|-
name|center
operator|-
name|fw
operator|+
literal|1
argument_list|)
expr_stmt|;
break|break;
case|case
name|SC_SpinBoxEditField
case|:
if|if
condition|(
name|spinbox
operator|->
name|buttonSymbols
operator|==
name|QAbstractSpinBox
operator|::
name|NoButtons
condition|)
block|{
name|rect
operator|=
name|QRect
argument_list|(
name|lx
argument_list|,
name|fw
argument_list|,
name|spinbox
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|-
literal|2
operator|*
name|fw
argument_list|,
name|spinbox
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
literal|2
operator|*
name|fw
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|rect
operator|=
name|QRect
argument_list|(
name|lx
argument_list|,
name|fw
argument_list|,
name|rx
operator|-
name|qMax
argument_list|(
name|fw
operator|-
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|,
name|spinbox
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
literal|2
operator|*
name|fw
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|SC_SpinBoxFrame
case|:
name|rect
operator|=
name|spinbox
operator|->
name|rect
expr_stmt|;
default|default:
break|break;
block|}
name|rect
operator|=
name|visualRect
argument_list|(
name|spinbox
operator|->
name|direction
argument_list|,
name|spinbox
operator|->
name|rect
argument_list|,
name|rect
argument_list|)
expr_stmt|;
block|}
break|break;
endif|#
directive|endif
comment|// Qt_NO_SPINBOX
ifndef|#
directive|ifndef
name|QT_NO_GROUPBOX
case|case
name|CC_GroupBox
case|:
if|if
condition|(
specifier|const
name|QStyleOptionGroupBox
modifier|*
name|groupBox
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionGroupBox
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|int
name|topMargin
init|=
literal|0
decl_stmt|;
name|int
name|topHeight
init|=
literal|0
decl_stmt|;
name|int
name|verticalAlignment
init|=
name|proxy
argument_list|()
operator|->
name|styleHint
argument_list|(
name|SH_GroupBox_TextLabelVerticalAlignment
argument_list|,
name|groupBox
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|bool
name|flat
init|=
name|groupBox
operator|->
name|features
operator|&
name|QStyleOptionFrameV2
operator|::
name|Flat
decl_stmt|;
if|if
condition|(
operator|!
name|groupBox
operator|->
name|text
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|topHeight
operator|=
name|groupBox
operator|->
name|fontMetrics
operator|.
name|height
argument_list|()
expr_stmt|;
if|if
condition|(
name|verticalAlignment
operator|&
name|Qt
operator|::
name|AlignVCenter
condition|)
name|topMargin
operator|=
name|topHeight
operator|/
literal|2
expr_stmt|;
elseif|else
if|if
condition|(
name|verticalAlignment
operator|&
name|Qt
operator|::
name|AlignTop
condition|)
name|topMargin
operator|=
name|topHeight
expr_stmt|;
block|}
name|QRect
name|frameRect
init|=
name|groupBox
operator|->
name|rect
decl_stmt|;
name|frameRect
operator|.
name|setTop
argument_list|(
name|topMargin
argument_list|)
expr_stmt|;
if|if
condition|(
name|subControl
operator|==
name|SC_GroupBoxFrame
condition|)
block|{
return|return
name|rect
return|;
block|}
elseif|else
if|if
condition|(
name|subControl
operator|==
name|SC_GroupBoxContents
condition|)
block|{
if|if
condition|(
name|flat
condition|)
block|{
name|int
name|margin
init|=
literal|0
decl_stmt|;
name|int
name|leftMarginExtension
init|=
literal|16
decl_stmt|;
name|rect
operator|=
name|frameRect
operator|.
name|adjusted
argument_list|(
name|leftMarginExtension
operator|+
name|margin
argument_list|,
name|margin
operator|+
name|topHeight
argument_list|,
operator|-
name|margin
argument_list|,
operator|-
name|margin
argument_list|)
expr_stmt|;
block|}
break|break;
block|}
if|if
condition|(
name|flat
condition|)
block|{
if|if
condition|(
specifier|const
name|QGroupBox
modifier|*
name|groupBoxWidget
init|=
name|qobject_cast
argument_list|<
specifier|const
name|QGroupBox
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
condition|)
block|{
comment|//Prepare metrics for a bold font
name|QFont
name|font
init|=
name|widget
operator|->
name|font
argument_list|()
decl_stmt|;
name|font
operator|.
name|setBold
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QFontMetrics
name|fontMetrics
argument_list|(
name|font
argument_list|)
decl_stmt|;
name|QSize
name|textRect
init|=
name|fontMetrics
operator|.
name|boundingRect
argument_list|(
name|groupBoxWidget
operator|->
name|title
argument_list|()
argument_list|)
operator|.
name|size
argument_list|()
operator|+
name|QSize
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
decl_stmt|;
if|if
condition|(
name|subControl
operator|==
name|SC_GroupBoxCheckBox
condition|)
block|{
name|int
name|indicatorWidth
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_IndicatorWidth
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|int
name|indicatorHeight
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_IndicatorHeight
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|rect
operator|.
name|setWidth
argument_list|(
name|indicatorWidth
argument_list|)
expr_stmt|;
name|rect
operator|.
name|setHeight
argument_list|(
name|indicatorHeight
argument_list|)
expr_stmt|;
name|rect
operator|.
name|moveTop
argument_list|(
operator|(
name|fontMetrics
operator|.
name|height
argument_list|()
operator|-
name|indicatorHeight
operator|)
operator|/
literal|2
operator|+
literal|2
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|subControl
operator|==
name|SC_GroupBoxLabel
condition|)
block|{
name|rect
operator|.
name|setSize
argument_list|(
name|textRect
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
return|return
name|rect
return|;
ifndef|#
directive|ifndef
name|QT_NO_COMBOBOX
case|case
name|CC_ComboBox
case|:
switch|switch
condition|(
name|subControl
condition|)
block|{
case|case
name|SC_ComboBoxArrow
case|:
name|rect
operator|=
name|visualRect
argument_list|(
name|option
operator|->
name|direction
argument_list|,
name|option
operator|->
name|rect
argument_list|,
name|rect
argument_list|)
expr_stmt|;
name|rect
operator|.
name|setRect
argument_list|(
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|18
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|-
literal|2
argument_list|,
literal|19
argument_list|,
name|rect
operator|.
name|height
argument_list|()
operator|+
literal|4
argument_list|)
expr_stmt|;
name|rect
operator|=
name|visualRect
argument_list|(
name|option
operator|->
name|direction
argument_list|,
name|option
operator|->
name|rect
argument_list|,
name|rect
argument_list|)
expr_stmt|;
break|break;
case|case
name|SC_ComboBoxEditField
case|:
block|{
name|int
name|frameWidth
init|=
name|proxy
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|PM_DefaultFrameWidth
argument_list|)
decl_stmt|;
name|rect
operator|=
name|visualRect
argument_list|(
name|option
operator|->
name|direction
argument_list|,
name|option
operator|->
name|rect
argument_list|,
name|rect
argument_list|)
expr_stmt|;
name|rect
operator|.
name|setRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
name|frameWidth
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
name|frameWidth
argument_list|,
name|option
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|-
literal|19
operator|-
literal|2
operator|*
name|frameWidth
argument_list|,
name|option
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
literal|2
operator|*
name|frameWidth
argument_list|)
expr_stmt|;
if|if
condition|(
specifier|const
name|QStyleOptionComboBox
modifier|*
name|box
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionComboBox
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
if|if
condition|(
operator|!
name|box
operator|->
name|editable
condition|)
block|{
name|rect
operator|.
name|adjust
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
name|box
operator|->
name|state
operator|&
operator|(
name|State_Sunken
operator||
name|State_On
operator|)
condition|)
name|rect
operator|.
name|translate
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
name|rect
operator|=
name|visualRect
argument_list|(
name|option
operator|->
name|direction
argument_list|,
name|option
operator|->
name|rect
argument_list|,
name|rect
argument_list|)
expr_stmt|;
break|break;
block|}
default|default:
break|break;
block|}
break|break;
endif|#
directive|endif
comment|// QT_NO_COMBOBOX
endif|#
directive|endif
comment|//QT_NO_GROUPBOX
case|case
name|CC_TitleBar
case|:
if|if
condition|(
specifier|const
name|QStyleOptionTitleBar
modifier|*
name|tb
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionTitleBar
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|SubControl
name|sc
init|=
name|subControl
decl_stmt|;
name|QRect
modifier|&
name|ret
init|=
name|rect
decl_stmt|;
specifier|const
name|int
name|indent
init|=
literal|3
decl_stmt|;
specifier|const
name|int
name|controlTopMargin
init|=
literal|3
decl_stmt|;
specifier|const
name|int
name|controlBottomMargin
init|=
literal|3
decl_stmt|;
specifier|const
name|int
name|controlWidthMargin
init|=
literal|2
decl_stmt|;
specifier|const
name|int
name|controlHeight
init|=
name|tb
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
name|controlTopMargin
operator|-
name|controlBottomMargin
decl_stmt|;
specifier|const
name|int
name|delta
init|=
name|controlHeight
operator|+
name|controlWidthMargin
decl_stmt|;
name|int
name|offset
init|=
literal|0
decl_stmt|;
name|bool
name|isMinimized
init|=
name|tb
operator|->
name|titleBarState
operator|&
name|Qt
operator|::
name|WindowMinimized
decl_stmt|;
name|bool
name|isMaximized
init|=
name|tb
operator|->
name|titleBarState
operator|&
name|Qt
operator|::
name|WindowMaximized
decl_stmt|;
switch|switch
condition|(
name|sc
condition|)
block|{
case|case
name|SC_TitleBarLabel
case|:
if|if
condition|(
name|tb
operator|->
name|titleBarFlags
operator|&
operator|(
name|Qt
operator|::
name|WindowTitleHint
operator||
name|Qt
operator|::
name|WindowSystemMenuHint
operator|)
condition|)
block|{
name|ret
operator|=
name|tb
operator|->
name|rect
expr_stmt|;
if|if
condition|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowSystemMenuHint
condition|)
name|ret
operator|.
name|adjust
argument_list|(
name|delta
argument_list|,
literal|0
argument_list|,
operator|-
name|delta
argument_list|,
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowMinimizeButtonHint
condition|)
name|ret
operator|.
name|adjust
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
name|delta
argument_list|,
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowMaximizeButtonHint
condition|)
name|ret
operator|.
name|adjust
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
name|delta
argument_list|,
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowShadeButtonHint
condition|)
name|ret
operator|.
name|adjust
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
name|delta
argument_list|,
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowContextHelpButtonHint
condition|)
name|ret
operator|.
name|adjust
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
name|delta
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|SC_TitleBarContextHelpButton
case|:
if|if
condition|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowContextHelpButtonHint
condition|)
name|offset
operator|+=
name|delta
expr_stmt|;
case|case
name|SC_TitleBarMinButton
case|:
if|if
condition|(
operator|!
name|isMinimized
operator|&&
operator|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowMinimizeButtonHint
operator|)
condition|)
name|offset
operator|+=
name|delta
expr_stmt|;
elseif|else
if|if
condition|(
name|sc
operator|==
name|SC_TitleBarMinButton
condition|)
break|break;
case|case
name|SC_TitleBarNormalButton
case|:
if|if
condition|(
name|isMinimized
operator|&&
operator|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowMinimizeButtonHint
operator|)
condition|)
name|offset
operator|+=
name|delta
expr_stmt|;
elseif|else
if|if
condition|(
name|isMaximized
operator|&&
operator|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowMaximizeButtonHint
operator|)
condition|)
name|offset
operator|+=
name|delta
expr_stmt|;
elseif|else
if|if
condition|(
name|sc
operator|==
name|SC_TitleBarNormalButton
condition|)
break|break;
case|case
name|SC_TitleBarMaxButton
case|:
if|if
condition|(
operator|!
name|isMaximized
operator|&&
operator|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowMaximizeButtonHint
operator|)
condition|)
name|offset
operator|+=
name|delta
expr_stmt|;
elseif|else
if|if
condition|(
name|sc
operator|==
name|SC_TitleBarMaxButton
condition|)
break|break;
case|case
name|SC_TitleBarShadeButton
case|:
if|if
condition|(
operator|!
name|isMinimized
operator|&&
operator|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowShadeButtonHint
operator|)
condition|)
name|offset
operator|+=
name|delta
expr_stmt|;
elseif|else
if|if
condition|(
name|sc
operator|==
name|SC_TitleBarShadeButton
condition|)
break|break;
case|case
name|SC_TitleBarUnshadeButton
case|:
if|if
condition|(
name|isMinimized
operator|&&
operator|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowShadeButtonHint
operator|)
condition|)
name|offset
operator|+=
name|delta
expr_stmt|;
elseif|else
if|if
condition|(
name|sc
operator|==
name|SC_TitleBarUnshadeButton
condition|)
break|break;
case|case
name|SC_TitleBarCloseButton
case|:
if|if
condition|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowSystemMenuHint
condition|)
name|offset
operator|+=
name|delta
expr_stmt|;
elseif|else
if|if
condition|(
name|sc
operator|==
name|SC_TitleBarCloseButton
condition|)
break|break;
name|ret
operator|.
name|setRect
argument_list|(
name|tb
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
name|indent
operator|-
name|offset
argument_list|,
name|tb
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
name|controlTopMargin
argument_list|,
name|controlHeight
argument_list|,
name|controlHeight
argument_list|)
expr_stmt|;
break|break;
case|case
name|SC_TitleBarSysMenu
case|:
if|if
condition|(
name|tb
operator|->
name|titleBarFlags
operator|&
name|Qt
operator|::
name|WindowSystemMenuHint
condition|)
block|{
name|ret
operator|.
name|setRect
argument_list|(
name|tb
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
name|controlWidthMargin
operator|+
name|indent
argument_list|,
name|tb
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
name|controlTopMargin
argument_list|,
name|controlHeight
argument_list|,
name|controlHeight
argument_list|)
expr_stmt|;
block|}
break|break;
default|default:
break|break;
block|}
name|ret
operator|=
name|visualRect
argument_list|(
name|tb
operator|->
name|direction
argument_list|,
name|tb
operator|->
name|rect
argument_list|,
name|ret
argument_list|)
expr_stmt|;
block|}
break|break;
default|default:
break|break;
block|}
return|return
name|rect
return|;
block|}
end_function
begin_comment
comment|/*!   \reimp */
end_comment
begin_function
DECL|function|itemPixmapRect
name|QRect
name|QCleanlooksStyle
operator|::
name|itemPixmapRect
parameter_list|(
specifier|const
name|QRect
modifier|&
name|r
parameter_list|,
name|int
name|flags
parameter_list|,
specifier|const
name|QPixmap
modifier|&
name|pixmap
parameter_list|)
specifier|const
block|{
return|return
name|QWindowsStyle
operator|::
name|itemPixmapRect
argument_list|(
name|r
argument_list|,
name|flags
argument_list|,
name|pixmap
argument_list|)
return|;
block|}
end_function
begin_comment
comment|/*!   \reimp */
end_comment
begin_function
DECL|function|drawItemPixmap
name|void
name|QCleanlooksStyle
operator|::
name|drawItemPixmap
parameter_list|(
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QRect
modifier|&
name|rect
parameter_list|,
name|int
name|alignment
parameter_list|,
specifier|const
name|QPixmap
modifier|&
name|pixmap
parameter_list|)
specifier|const
block|{
name|QWindowsStyle
operator|::
name|drawItemPixmap
argument_list|(
name|painter
argument_list|,
name|rect
argument_list|,
name|alignment
argument_list|,
name|pixmap
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|/*!   \reimp */
end_comment
begin_function
DECL|function|hitTestComplexControl
name|QStyle
operator|::
name|SubControl
name|QCleanlooksStyle
operator|::
name|hitTestComplexControl
parameter_list|(
name|ComplexControl
name|cc
parameter_list|,
specifier|const
name|QStyleOptionComplex
modifier|*
name|opt
parameter_list|,
specifier|const
name|QPoint
modifier|&
name|pt
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|w
parameter_list|)
specifier|const
block|{
return|return
name|QWindowsStyle
operator|::
name|hitTestComplexControl
argument_list|(
name|cc
argument_list|,
name|opt
argument_list|,
name|pt
argument_list|,
name|w
argument_list|)
return|;
block|}
end_function
begin_comment
comment|/*!   \reimp */
end_comment
begin_function
DECL|function|generatedIconPixmap
name|QPixmap
name|QCleanlooksStyle
operator|::
name|generatedIconPixmap
parameter_list|(
name|QIcon
operator|::
name|Mode
name|iconMode
parameter_list|,
specifier|const
name|QPixmap
modifier|&
name|pixmap
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|opt
parameter_list|)
specifier|const
block|{
return|return
name|QWindowsStyle
operator|::
name|generatedIconPixmap
argument_list|(
name|iconMode
argument_list|,
name|pixmap
argument_list|,
name|opt
argument_list|)
return|;
block|}
end_function
begin_comment
comment|/*!   \reimp */
end_comment
begin_function
DECL|function|styleHint
name|int
name|QCleanlooksStyle
operator|::
name|styleHint
parameter_list|(
name|StyleHint
name|hint
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|option
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|,
name|QStyleHintReturn
modifier|*
name|returnData
parameter_list|)
specifier|const
block|{
name|int
name|ret
init|=
literal|0
decl_stmt|;
switch|switch
condition|(
name|hint
condition|)
block|{
case|case
name|SH_ScrollBar_MiddleClickAbsolutePosition
case|:
name|ret
operator|=
literal|true
expr_stmt|;
break|break;
case|case
name|SH_EtchDisabledText
case|:
name|ret
operator|=
literal|1
expr_stmt|;
break|break;
case|case
name|SH_Menu_AllowActiveAndDisabled
case|:
name|ret
operator|=
literal|false
expr_stmt|;
break|break;
case|case
name|SH_MainWindow_SpaceBelowMenuBar
case|:
name|ret
operator|=
literal|0
expr_stmt|;
break|break;
case|case
name|SH_MenuBar_MouseTracking
case|:
name|ret
operator|=
literal|1
expr_stmt|;
break|break;
case|case
name|SH_TitleBar_AutoRaise
case|:
name|ret
operator|=
literal|1
expr_stmt|;
break|break;
case|case
name|SH_TitleBar_NoBorder
case|:
name|ret
operator|=
literal|1
expr_stmt|;
break|break;
case|case
name|SH_ItemView_ShowDecorationSelected
case|:
name|ret
operator|=
literal|true
expr_stmt|;
break|break;
case|case
name|SH_Table_GridLineColor
case|:
if|if
condition|(
name|option
condition|)
block|{
name|ret
operator|=
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|darker
argument_list|(
literal|120
argument_list|)
operator|.
name|rgb
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
name|SH_ComboBox_Popup
case|:
if|if
condition|(
specifier|const
name|QStyleOptionComboBox
modifier|*
name|cmb
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionComboBox
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
name|ret
operator|=
operator|!
name|cmb
operator|->
name|editable
expr_stmt|;
else|else
name|ret
operator|=
literal|0
expr_stmt|;
break|break;
case|case
name|SH_WindowFrame_Mask
case|:
name|ret
operator|=
literal|1
expr_stmt|;
if|if
condition|(
name|QStyleHintReturnMask
modifier|*
name|mask
init|=
name|qstyleoption_cast
argument_list|<
name|QStyleHintReturnMask
operator|*
argument_list|>
argument_list|(
name|returnData
argument_list|)
condition|)
block|{
comment|//left rounded corner
name|mask
operator|->
name|region
operator|=
name|option
operator|->
name|rect
expr_stmt|;
name|mask
operator|->
name|region
operator|-=
name|QRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
argument_list|,
literal|5
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|mask
operator|->
name|region
operator|-=
name|QRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
literal|3
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|mask
operator|->
name|region
operator|-=
name|QRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|mask
operator|->
name|region
operator|-=
name|QRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|3
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
comment|//right rounded corner
name|mask
operator|->
name|region
operator|-=
name|QRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|4
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
argument_list|,
literal|5
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|mask
operator|->
name|region
operator|-=
name|QRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|,
literal|3
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|mask
operator|->
name|region
operator|-=
name|QRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|1
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|mask
operator|->
name|region
operator|-=
name|QRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|3
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|SH_MessageBox_TextInteractionFlags
case|:
name|ret
operator|=
name|Qt
operator|::
name|TextSelectableByMouse
operator||
name|Qt
operator|::
name|LinksAccessibleByMouse
expr_stmt|;
break|break;
case|case
name|SH_DialogButtonBox_ButtonsHaveIcons
case|:
name|ret
operator|=
literal|true
expr_stmt|;
break|break;
case|case
name|SH_MessageBox_CenterButtons
case|:
name|ret
operator|=
literal|false
expr_stmt|;
break|break;
ifndef|#
directive|ifndef
name|QT_NO_WIZARD
case|case
name|SH_WizardStyle
case|:
name|ret
operator|=
name|QWizard
operator|::
name|ClassicStyle
expr_stmt|;
break|break;
endif|#
directive|endif
case|case
name|SH_ItemView_ArrowKeysNavigateIntoChildren
case|:
name|ret
operator|=
literal|false
expr_stmt|;
break|break;
case|case
name|SH_Menu_SubMenuPopupDelay
case|:
name|ret
operator|=
literal|225
expr_stmt|;
comment|// default from GtkMenu
break|break;
default|default:
name|ret
operator|=
name|QWindowsStyle
operator|::
name|styleHint
argument_list|(
name|hint
argument_list|,
name|option
argument_list|,
name|widget
argument_list|,
name|returnData
argument_list|)
expr_stmt|;
break|break;
block|}
return|return
name|ret
return|;
block|}
end_function
begin_comment
comment|/*! \reimp */
end_comment
begin_function
DECL|function|subElementRect
name|QRect
name|QCleanlooksStyle
operator|::
name|subElementRect
parameter_list|(
name|SubElement
name|sr
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|opt
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|w
parameter_list|)
specifier|const
block|{
name|QRect
name|r
init|=
name|QWindowsStyle
operator|::
name|subElementRect
argument_list|(
name|sr
argument_list|,
name|opt
argument_list|,
name|w
argument_list|)
decl_stmt|;
switch|switch
condition|(
name|sr
condition|)
block|{
case|case
name|SE_PushButtonFocusRect
case|:
name|r
operator|.
name|adjust
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
break|break;
case|case
name|SE_DockWidgetTitleBarText
case|:
block|{
specifier|const
name|QStyleOptionDockWidgetV2
modifier|*
name|v2
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionDockWidgetV2
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
decl_stmt|;
name|bool
name|verticalTitleBar
init|=
name|v2
operator|==
literal|0
condition|?
literal|false
else|:
name|v2
operator|->
name|verticalTitleBar
decl_stmt|;
if|if
condition|(
name|verticalTitleBar
condition|)
block|{
name|r
operator|.
name|adjust
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|4
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|opt
operator|->
name|direction
operator|==
name|Qt
operator|::
name|LeftToRight
condition|)
name|r
operator|.
name|adjust
argument_list|(
literal|4
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
else|else
name|r
operator|.
name|adjust
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|4
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
break|break;
block|}
case|case
name|SE_ProgressBarContents
case|:
name|r
operator|=
name|subElementRect
argument_list|(
name|SE_ProgressBarGroove
argument_list|,
name|opt
argument_list|,
name|w
argument_list|)
expr_stmt|;
break|break;
default|default:
break|break;
block|}
return|return
name|r
return|;
block|}
end_function
begin_comment
comment|/*!     \internal */
end_comment
begin_function
DECL|function|standardIconImplementation
name|QIcon
name|QCleanlooksStyle
operator|::
name|standardIconImplementation
parameter_list|(
name|StandardPixmap
name|standardIcon
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|option
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
return|return
name|QWindowsStyle
operator|::
name|standardIconImplementation
argument_list|(
name|standardIcon
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
return|;
block|}
end_function
begin_comment
comment|/*!  \reimp  */
end_comment
begin_function
DECL|function|standardPixmap
name|QPixmap
name|QCleanlooksStyle
operator|::
name|standardPixmap
parameter_list|(
name|StandardPixmap
name|standardPixmap
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|opt
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
name|QPixmap
name|pixmap
decl_stmt|;
ifndef|#
directive|ifndef
name|QT_NO_IMAGEFORMAT_XPM
switch|switch
condition|(
name|standardPixmap
condition|)
block|{
case|case
name|SP_TitleBarNormalButton
case|:
return|return
name|QPixmap
argument_list|(
operator|(
specifier|const
name|char
operator|*
operator|*
operator|)
name|dock_widget_restore_xpm
argument_list|)
return|;
case|case
name|SP_TitleBarMinButton
case|:
return|return
name|QPixmap
argument_list|(
operator|(
specifier|const
name|char
operator|*
operator|*
operator|)
name|workspace_minimize
argument_list|)
return|;
case|case
name|SP_TitleBarCloseButton
case|:
case|case
name|SP_DockWidgetCloseButton
case|:
return|return
name|QPixmap
argument_list|(
operator|(
specifier|const
name|char
operator|*
operator|*
operator|)
name|dock_widget_close_xpm
argument_list|)
return|;
default|default:
break|break;
block|}
endif|#
directive|endif
comment|//QT_NO_IMAGEFORMAT_XPM
return|return
name|QWindowsStyle
operator|::
name|standardPixmap
argument_list|(
name|standardPixmap
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
return|;
block|}
end_function
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_STYLE_CLEANLOOKS || QT_PLUGIN
end_comment
end_unit
