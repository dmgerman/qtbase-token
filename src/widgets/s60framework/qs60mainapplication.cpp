begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the Symbian application wrapper of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** No Commercial Usage ** This file contains pre-release code and may not be distributed. ** You may use this file in accordance with the terms and conditions ** contained in the Technology Preview License Agreement accompanying ** this package. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights.  These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** If you have questions regarding the use of this file, please contact ** Nokia at qt-info@nokia.com. ** ** ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_comment
comment|// INCLUDE FILES
end_comment
begin_include
include|#
directive|include
file|<exception>
end_include
begin_include
include|#
directive|include
file|<private/qcore_symbian_p.h>
end_include
begin_include
include|#
directive|include
file|"qs60maindocument.h"
end_include
begin_include
include|#
directive|include
file|"qs60mainapplication_p.h"
end_include
begin_include
include|#
directive|include
file|"qs60mainapplication.h"
end_include
begin_include
include|#
directive|include
file|<bautils.h>
end_include
begin_include
include|#
directive|include
file|<coemain.h>
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|Q_WS_S60
end_ifndef
begin_include
include|#
directive|include
file|<eikserverapp.h>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_function
name|QT_BEGIN_NAMESPACE
comment|/**  * factory function to create the QS60Main application class  */
DECL|function|newS60Application
name|CApaApplication
modifier|*
name|newS60Application
parameter_list|()
block|{
return|return
operator|new
name|QS60MainApplication
return|;
block|}
end_function
begin_comment
comment|/*!   \class QS60MainApplication   \since 4.6   \brief The QS60MainApplication class provides support for migration from S60.    \warning This class is provided only to get access to S60 specific   functionality in the application framework classes. It is not   portable. We strongly recommend against using it in new applications.    The QS60MainApplication provides a helper class for use in migrating   from existing S60 based applications to Qt based applications. It is   used in the exact same way as the \c CEikApplication class from   Symbian, but internally provides extensions used by Qt.    When modifying old S60 applications that rely on implementing   functions in \c CEikApplication, the class should be modified to   inherit from this class instead of \c CEikApplication. Then the   application can choose to override only certain functions. To make   Qt use the custom application objects, pass a factory function to   \c{QApplication::QApplication(QApplication::QS60MainApplicationFactory, int&, char **)}.    For more information on \c CEikApplication, please see the S60 documentation.    Unlike other Qt classes, QS60MainApplication behaves like an S60 class, and can throw Symbian   leaves.    \sa QS60MainDocument, QS60MainAppUi, QApplication::QS60MainApplicationFactory  */
end_comment
begin_comment
comment|/*!  * \brief Contructs an instance of QS60MainApplication.  */
end_comment
begin_constructor
DECL|function|QS60MainApplication
name|QS60MainApplication
operator|::
name|QS60MainApplication
parameter_list|()
block|{ }
end_constructor
begin_comment
comment|/*!  * \brief Destroys the QS60MainApplication.  */
end_comment
begin_destructor
DECL|function|~QS60MainApplication
name|QS60MainApplication
operator|::
name|~
name|QS60MainApplication
parameter_list|()
block|{ }
end_destructor
begin_comment
comment|/*!  * \brief Creates an instance of QS60MainDocument.  *  * \sa QS60MainDocument  */
end_comment
begin_function
DECL|function|CreateDocumentL
name|CApaDocument
modifier|*
name|QS60MainApplication
operator|::
name|CreateDocumentL
parameter_list|()
block|{
comment|// Create an QtS60Main document, and return a pointer to it
return|return
operator|new
operator|(
name|ELeave
operator|)
name|QS60MainDocument
argument_list|(
operator|*
name|this
argument_list|)
return|;
block|}
end_function
begin_comment
comment|/*!  * \brief Returns the UID of the application.  */
end_comment
begin_function
DECL|function|AppDllUid
name|TUid
name|QS60MainApplication
operator|::
name|AppDllUid
parameter_list|()
specifier|const
block|{
comment|// Return the UID for the QtS60Main application
return|return
name|RProcess
argument_list|()
operator|.
name|SecureId
argument_list|()
operator|.
name|operator
name|TUid
argument_list|()
return|;
block|}
end_function
begin_comment
comment|/*!  * \brief Returns the resource file name.  */
end_comment
begin_function
DECL|function|ResourceFileName
name|TFileName
name|QS60MainApplication
operator|::
name|ResourceFileName
parameter_list|()
specifier|const
block|{
return|return
name|KNullDesC
argument_list|()
return|;
block|}
end_function
begin_comment
comment|/*!   \internal */
end_comment
begin_function
DECL|function|PreDocConstructL
name|void
name|QS60MainApplication
operator|::
name|PreDocConstructL
parameter_list|()
block|{
name|QS60MainApplicationBase
operator|::
name|PreDocConstructL
argument_list|()
expr_stmt|;
block|}
end_function
begin_comment
comment|/*!   \internal */
end_comment
begin_function
DECL|function|OpenIniFileLC
name|CDictionaryStore
modifier|*
name|QS60MainApplication
operator|::
name|OpenIniFileLC
parameter_list|(
name|RFs
modifier|&
name|aFs
parameter_list|)
specifier|const
block|{
return|return
name|QS60MainApplicationBase
operator|::
name|OpenIniFileLC
argument_list|(
name|aFs
argument_list|)
return|;
block|}
end_function
begin_comment
comment|/*!   \internal */
end_comment
begin_function
DECL|function|NewAppServerL
name|void
name|QS60MainApplication
operator|::
name|NewAppServerL
parameter_list|(
name|CApaAppServer
modifier|*
modifier|&
name|aAppServer
parameter_list|)
block|{
ifdef|#
directive|ifdef
name|Q_WS_S60
name|QS60MainApplicationBase
operator|::
name|NewAppServerL
argument_list|(
name|aAppServer
argument_list|)
expr_stmt|;
else|#
directive|else
name|aAppServer
operator|=
operator|new
operator|(
name|ELeave
operator|)
name|CEikAppServer
expr_stmt|;
endif|#
directive|endif
block|}
end_function
begin_macro
name|QT_END_NAMESPACE
end_macro
end_unit
