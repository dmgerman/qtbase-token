begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QGRAPHICSWIDGET_P_H
end_ifndef
begin_define
DECL|macro|QGRAPHICSWIDGET_P_H
define|#
directive|define
name|QGRAPHICSWIDGET_P_H
end_define
begin_comment
comment|//
end_comment
begin_comment
comment|//  W A R N I N G
end_comment
begin_comment
comment|//  -------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// This file is not part of the Qt API.  It exists for the convenience
end_comment
begin_comment
comment|// of other Qt classes.  This header file may change from version to
end_comment
begin_comment
comment|// version without notice, or even be removed.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// We mean it.
end_comment
begin_comment
comment|//
end_comment
begin_include
include|#
directive|include
file|<private/qobject_p.h>
end_include
begin_include
include|#
directive|include
file|"qgraphicsitem_p.h"
end_include
begin_include
include|#
directive|include
file|"qgraphicswidget.h"
end_include
begin_include
include|#
directive|include
file|<QtGui/qfont.h>
end_include
begin_include
include|#
directive|include
file|<QtGui/qpalette.h>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/qsizepolicy.h>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/qstyle.h>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
DECL|variable|QGraphicsLayout
name|class
name|QGraphicsLayout
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QStyleOptionTitleBar
name|class
name|QStyleOptionTitleBar
decl_stmt|;
end_decl_stmt
begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_NO_GRAPHICSVIEW
argument_list|)
operator|||
operator|(
name|QT_EDITION
operator|&
name|QT_MODULE_GRAPHICSVIEW
operator|)
operator|!=
name|QT_MODULE_GRAPHICSVIEW
end_if
begin_decl_stmt
name|class
name|QGraphicsWidgetPrivate
range|:
name|public
name|QGraphicsItemPrivate
block|{
name|Q_DECLARE_PUBLIC
argument_list|(
argument|QGraphicsWidget
argument_list|)
name|public
operator|:
name|QGraphicsWidgetPrivate
argument_list|()
operator|:
name|margins
argument_list|(
literal|0
argument_list|)
block|,
name|layout
argument_list|(
literal|0
argument_list|)
block|,
name|inheritedPaletteResolveMask
argument_list|(
literal|0
argument_list|)
block|,
name|inheritedFontResolveMask
argument_list|(
literal|0
argument_list|)
block|,
name|inSetGeometry
argument_list|(
literal|0
argument_list|)
block|,
name|polished
argument_list|(
literal|0
argument_list|)
block|,
name|inSetPos
argument_list|(
literal|0
argument_list|)
block|,
name|autoFillBackground
argument_list|(
literal|0
argument_list|)
block|,
name|focusPolicy
argument_list|(
name|Qt
operator|::
name|NoFocus
argument_list|)
block|,
name|focusNext
argument_list|(
literal|0
argument_list|)
block|,
name|focusPrev
argument_list|(
literal|0
argument_list|)
block|,
name|windowFlags
argument_list|(
literal|0
argument_list|)
block|,
name|windowData
argument_list|(
literal|0
argument_list|)
block|,
name|setWindowFrameMargins
argument_list|(
name|false
argument_list|)
block|,
name|windowFrameMargins
argument_list|(
literal|0
argument_list|)
block|{ }
name|virtual
operator|~
name|QGraphicsWidgetPrivate
argument_list|()
block|;
name|void
name|init
argument_list|(
argument|QGraphicsItem *parentItem
argument_list|,
argument|Qt::WindowFlags wFlags
argument_list|)
block|;
name|qreal
name|titleBarHeight
argument_list|(
argument|const QStyleOptionTitleBar&options
argument_list|)
specifier|const
block|;
comment|// Margins
block|enum
block|{
name|Left
block|,
name|Top
block|,
name|Right
block|,
name|Bottom
block|}
block|;
name|mutable
name|qreal
operator|*
name|margins
block|;
name|void
name|ensureMargins
argument_list|()
specifier|const
block|;
name|void
name|fixFocusChainBeforeReparenting
argument_list|(
name|QGraphicsWidget
operator|*
name|newParent
argument_list|,
name|QGraphicsScene
operator|*
name|oldScene
argument_list|,
name|QGraphicsScene
operator|*
name|newScene
operator|=
literal|0
argument_list|)
block|;
name|void
name|setLayout_helper
argument_list|(
name|QGraphicsLayout
operator|*
name|l
argument_list|)
block|;
comment|// Layouts
name|QGraphicsLayout
operator|*
name|layout
block|;
name|void
name|setLayoutDirection_helper
argument_list|(
argument|Qt::LayoutDirection direction
argument_list|)
block|;
name|void
name|resolveLayoutDirection
argument_list|()
block|;
comment|// Style
name|QPalette
name|palette
block|;
name|uint
name|inheritedPaletteResolveMask
block|;
name|void
name|setPalette_helper
argument_list|(
specifier|const
name|QPalette
operator|&
name|palette
argument_list|)
block|;
name|void
name|resolvePalette
argument_list|(
argument|uint inheritedMask
argument_list|)
block|;
name|void
name|updatePalette
argument_list|(
specifier|const
name|QPalette
operator|&
name|palette
argument_list|)
block|;
name|QPalette
name|naturalWidgetPalette
argument_list|()
specifier|const
block|;
name|QFont
name|font
block|;
name|uint
name|inheritedFontResolveMask
block|;
name|void
name|setFont_helper
argument_list|(
specifier|const
name|QFont
operator|&
name|font
argument_list|)
block|;
name|void
name|resolveFont
argument_list|(
argument|uint inheritedMask
argument_list|)
block|;
name|void
name|updateFont
argument_list|(
specifier|const
name|QFont
operator|&
name|font
argument_list|)
block|;
name|QFont
name|naturalWidgetFont
argument_list|()
specifier|const
block|;
comment|// Window specific
name|void
name|initStyleOptionTitleBar
argument_list|(
name|QStyleOptionTitleBar
operator|*
name|option
argument_list|)
block|;
name|void
name|adjustWindowFlags
argument_list|(
name|Qt
operator|::
name|WindowFlags
operator|*
name|wFlags
argument_list|)
block|;
name|void
name|windowFrameMouseReleaseEvent
argument_list|(
name|QGraphicsSceneMouseEvent
operator|*
name|event
argument_list|)
block|;
name|void
name|windowFrameMousePressEvent
argument_list|(
name|QGraphicsSceneMouseEvent
operator|*
name|event
argument_list|)
block|;
name|void
name|windowFrameMouseMoveEvent
argument_list|(
name|QGraphicsSceneMouseEvent
operator|*
name|event
argument_list|)
block|;
name|void
name|windowFrameHoverMoveEvent
argument_list|(
name|QGraphicsSceneHoverEvent
operator|*
name|event
argument_list|)
block|;
name|void
name|windowFrameHoverLeaveEvent
argument_list|(
name|QGraphicsSceneHoverEvent
operator|*
name|event
argument_list|)
block|;
name|bool
name|hasDecoration
argument_list|()
specifier|const
block|;
comment|// Private Properties
name|qreal
name|width
argument_list|()
specifier|const
block|;
name|void
name|setWidth
argument_list|(
name|qreal
argument_list|)
block|;
name|void
name|resetWidth
argument_list|()
block|;
name|qreal
name|height
argument_list|()
specifier|const
block|;
name|void
name|setHeight
argument_list|(
name|qreal
argument_list|)
block|;
name|void
name|resetHeight
argument_list|()
block|;
name|void
name|setGeometryFromSetPos
argument_list|()
block|;
comment|// State
specifier|inline
name|int
name|attributeToBitIndex
argument_list|(
argument|Qt::WidgetAttribute att
argument_list|)
specifier|const
block|{
name|int
name|bit
operator|=
operator|-
literal|1
block|;
switch|switch
condition|(
name|att
condition|)
block|{
case|case
name|Qt
operator|::
name|WA_SetLayoutDirection
case|:
name|bit
operator|=
literal|0
expr_stmt|;
break|break;
case|case
name|Qt
operator|::
name|WA_RightToLeft
case|:
name|bit
operator|=
literal|1
expr_stmt|;
break|break;
case|case
name|Qt
operator|::
name|WA_SetStyle
case|:
name|bit
operator|=
literal|2
expr_stmt|;
break|break;
case|case
name|Qt
operator|::
name|WA_Resized
case|:
name|bit
operator|=
literal|3
expr_stmt|;
break|break;
case|case
name|Qt
operator|::
name|WA_DeleteOnClose
case|:
name|bit
operator|=
literal|4
expr_stmt|;
break|break;
case|case
name|Qt
operator|::
name|WA_NoSystemBackground
case|:
name|bit
operator|=
literal|5
expr_stmt|;
break|break;
case|case
name|Qt
operator|::
name|WA_OpaquePaintEvent
case|:
name|bit
operator|=
literal|6
expr_stmt|;
break|break;
case|case
name|Qt
operator|::
name|WA_SetPalette
case|:
name|bit
operator|=
literal|7
expr_stmt|;
break|break;
case|case
name|Qt
operator|::
name|WA_SetFont
case|:
name|bit
operator|=
literal|8
expr_stmt|;
break|break;
case|case
name|Qt
operator|::
name|WA_WindowPropagation
case|:
name|bit
operator|=
literal|9
expr_stmt|;
break|break;
default|default:
break|break;
block|}
return|return
name|bit
return|;
block|}
specifier|inline
name|void
name|setAttribute
argument_list|(
argument|Qt::WidgetAttribute att
argument_list|,
argument|bool value
argument_list|)
block|{
name|int
name|bit
operator|=
name|attributeToBitIndex
argument_list|(
name|att
argument_list|)
block|;
if|if
condition|(
name|bit
operator|==
operator|-
literal|1
condition|)
block|{
name|qWarning
argument_list|(
literal|"QGraphicsWidget::setAttribute: unsupported attribute %d"
argument_list|,
name|int
argument_list|(
name|att
argument_list|)
argument_list|)
expr_stmt|;
return|return;
block|}
if|if
condition|(
name|value
condition|)
name|attributes
operator||=
operator|(
literal|1
operator|<<
name|bit
operator|)
expr_stmt|;
else|else
name|attributes
operator|&=
operator|~
operator|(
literal|1
operator|<<
name|bit
operator|)
expr_stmt|;
block|}
specifier|inline
name|bool
name|testAttribute
argument_list|(
argument|Qt::WidgetAttribute att
argument_list|)
specifier|const
block|{
name|int
name|bit
operator|=
name|attributeToBitIndex
argument_list|(
name|att
argument_list|)
block|;
if|if
condition|(
name|bit
operator|==
operator|-
literal|1
condition|)
return|return
name|false
return|;
return|return
operator|(
name|attributes
operator|&
operator|(
literal|1
operator|<<
name|bit
operator|)
operator|)
operator|!=
literal|0
return|;
block|}
end_decl_stmt
begin_decl_stmt
name|quint32
name|attributes
range|:
literal|10
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|quint32
name|inSetGeometry
range|:
literal|1
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|quint32
name|polished
range|:
literal|1
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|quint32
name|inSetPos
range|:
literal|1
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|quint32
name|autoFillBackground
range|:
literal|1
decl_stmt|;
end_decl_stmt
begin_comment
comment|// Focus
end_comment
begin_expr_stmt
name|Qt
operator|::
name|FocusPolicy
name|focusPolicy
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|QGraphicsWidget
modifier|*
name|focusNext
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|QGraphicsWidget
modifier|*
name|focusPrev
decl_stmt|;
end_decl_stmt
begin_comment
comment|// Windows
end_comment
begin_expr_stmt
name|Qt
operator|::
name|WindowFlags
name|windowFlags
expr_stmt|;
end_expr_stmt
begin_struct
struct|struct
name|WindowData
block|{
name|QString
name|windowTitle
decl_stmt|;
name|QStyle
operator|::
name|SubControl
name|hoveredSubControl
expr_stmt|;
name|Qt
operator|::
name|WindowFrameSection
name|grabbedSection
expr_stmt|;
name|uint
name|buttonMouseOver
range|:
literal|1
decl_stmt|;
name|uint
name|buttonSunken
range|:
literal|1
decl_stmt|;
name|QRectF
name|startGeometry
decl_stmt|;
name|QRect
name|buttonRect
decl_stmt|;
name|WindowData
argument_list|()
operator|:
name|hoveredSubControl
argument_list|(
name|QStyle
operator|::
name|SC_None
argument_list|)
operator|,
name|grabbedSection
argument_list|(
name|Qt
operator|::
name|NoSection
argument_list|)
operator|,
name|buttonMouseOver
argument_list|(
name|false
argument_list|)
operator|,
name|buttonSunken
argument_list|(
argument|false
argument_list|)
block|{}
block|}
modifier|*
name|windowData
struct|;
end_struct
begin_function_decl
name|void
name|ensureWindowData
parameter_list|()
function_decl|;
end_function_decl
begin_decl_stmt
name|bool
name|setWindowFrameMargins
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|mutable
name|qreal
modifier|*
name|windowFrameMargins
decl_stmt|;
end_decl_stmt
begin_expr_stmt
name|void
name|ensureWindowFrameMargins
argument_list|()
specifier|const
expr_stmt|;
end_expr_stmt
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_ACTION
end_ifndef
begin_expr_stmt
name|QList
operator|<
name|QAction
operator|*
operator|>
name|actions
expr_stmt|;
end_expr_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_endif
unit|};
endif|#
directive|endif
end_endif
begin_comment
comment|//!defined(QT_NO_GRAPHICSVIEW) || (QT_EDITION& QT_MODULE_GRAPHICSVIEW) != QT_MODULE_GRAPHICSVIEW
end_comment
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|//QGRAPHICSWIDGET_P_H
end_comment
end_unit
