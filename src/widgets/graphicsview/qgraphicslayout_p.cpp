begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"qglobal.h"
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_GRAPHICSVIEW
end_ifndef
begin_include
include|#
directive|include
file|"qgraphicslayout_p.h"
end_include
begin_include
include|#
directive|include
file|"qgraphicslayout.h"
end_include
begin_include
include|#
directive|include
file|"qgraphicswidget.h"
end_include
begin_include
include|#
directive|include
file|"qapplication.h"
end_include
begin_function
name|QT_BEGIN_NAMESPACE
comment|/*!     \internal      \a mw is the new parent. all items in the layout will be a child of \a mw.  */
DECL|function|reparentChildItems
name|void
name|QGraphicsLayoutPrivate
operator|::
name|reparentChildItems
parameter_list|(
name|QGraphicsItem
modifier|*
name|newParent
parameter_list|)
block|{
name|Q_Q
argument_list|(
name|QGraphicsLayout
argument_list|)
expr_stmt|;
name|int
name|n
init|=
name|q
operator|->
name|count
argument_list|()
decl_stmt|;
comment|//bool mwVisible = mw&& mw->isVisible();
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|n
condition|;
operator|++
name|i
control|)
block|{
name|QGraphicsLayoutItem
modifier|*
name|layoutChild
init|=
name|q
operator|->
name|itemAt
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|layoutChild
condition|)
block|{
comment|// Skip stretch items
continue|continue;
block|}
if|if
condition|(
name|layoutChild
operator|->
name|isLayout
argument_list|()
condition|)
block|{
name|QGraphicsLayout
modifier|*
name|l
init|=
cast|static_cast
argument_list|<
name|QGraphicsLayout
operator|*
argument_list|>
argument_list|(
name|layoutChild
argument_list|)
decl_stmt|;
name|l
operator|->
name|d_func
argument_list|()
operator|->
name|reparentChildItems
argument_list|(
name|newParent
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|QGraphicsItem
modifier|*
name|itemChild
init|=
name|layoutChild
operator|->
name|graphicsItem
argument_list|()
condition|)
block|{
name|QGraphicsItem
modifier|*
name|childParent
init|=
name|itemChild
operator|->
name|parentItem
argument_list|()
decl_stmt|;
ifdef|#
directive|ifdef
name|QT_DEBUG
if|if
condition|(
name|childParent
operator|&&
name|childParent
operator|!=
name|newParent
operator|&&
name|itemChild
operator|->
name|isWidget
argument_list|()
operator|&&
name|qt_graphicsLayoutDebug
argument_list|()
condition|)
block|{
name|QGraphicsWidget
modifier|*
name|w
init|=
cast|static_cast
argument_list|<
name|QGraphicsWidget
operator|*
argument_list|>
argument_list|(
name|layoutChild
argument_list|)
decl_stmt|;
name|qWarning
argument_list|(
literal|"QGraphicsLayout::addChildLayout: widget %s \"%s\" in wrong parent; moved to correct parent"
argument_list|,
name|w
operator|->
name|metaObject
argument_list|()
operator|->
name|className
argument_list|()
argument_list|,
name|w
operator|->
name|objectName
argument_list|()
operator|.
name|toLocal8Bit
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|)
expr_stmt|;
block|}
endif|#
directive|endif
if|if
condition|(
name|childParent
operator|!=
name|newParent
condition|)
name|itemChild
operator|->
name|setParentItem
argument_list|(
name|newParent
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_function
begin_function
DECL|function|getMargin
name|void
name|QGraphicsLayoutPrivate
operator|::
name|getMargin
parameter_list|(
name|qreal
modifier|*
name|result
parameter_list|,
name|qreal
name|userMargin
parameter_list|,
name|QStyle
operator|::
name|PixelMetric
name|pm
parameter_list|)
specifier|const
block|{
if|if
condition|(
operator|!
name|result
condition|)
return|return;
name|Q_Q
argument_list|(
specifier|const
name|QGraphicsLayout
argument_list|)
expr_stmt|;
name|QGraphicsLayoutItem
modifier|*
name|parent
init|=
name|q
operator|->
name|parentLayoutItem
argument_list|()
decl_stmt|;
if|if
condition|(
name|userMargin
operator|>=
literal|0.0
condition|)
block|{
operator|*
name|result
operator|=
name|userMargin
expr_stmt|;
block|}
elseif|else
if|if
condition|(
operator|!
name|parent
condition|)
block|{
operator|*
name|result
operator|=
literal|0.0
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|parent
operator|->
name|isLayout
argument_list|()
condition|)
block|{
comment|// sublayouts have 0 margin by default
operator|*
name|result
operator|=
literal|0.0
expr_stmt|;
block|}
else|else
block|{
operator|*
name|result
operator|=
literal|0.0
expr_stmt|;
if|if
condition|(
name|QGraphicsItem
modifier|*
name|layoutParentItem
init|=
name|parentItem
argument_list|()
condition|)
block|{
if|if
condition|(
name|layoutParentItem
operator|->
name|isWidget
argument_list|()
condition|)
operator|*
name|result
operator|=
operator|(
name|qreal
operator|)
cast|static_cast
argument_list|<
name|QGraphicsWidget
operator|*
argument_list|>
argument_list|(
name|layoutParentItem
argument_list|)
operator|->
name|style
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|pm
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_function
begin_function
DECL|function|visualDirection
name|Qt
operator|::
name|LayoutDirection
name|QGraphicsLayoutPrivate
operator|::
name|visualDirection
parameter_list|()
specifier|const
block|{
if|if
condition|(
name|QGraphicsItem
modifier|*
name|maybeWidget
init|=
name|parentItem
argument_list|()
condition|)
block|{
if|if
condition|(
name|maybeWidget
operator|->
name|isWidget
argument_list|()
condition|)
return|return
cast|static_cast
argument_list|<
name|QGraphicsWidget
operator|*
argument_list|>
argument_list|(
name|maybeWidget
argument_list|)
operator|->
name|layoutDirection
argument_list|()
return|;
block|}
return|return
name|QApplication
operator|::
name|layoutDirection
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|removeLayoutItemFromLayout
specifier|static
name|bool
name|removeLayoutItemFromLayout
parameter_list|(
name|QGraphicsLayout
modifier|*
name|lay
parameter_list|,
name|QGraphicsLayoutItem
modifier|*
name|layoutItem
parameter_list|)
block|{
if|if
condition|(
operator|!
name|lay
condition|)
return|return
literal|false
return|;
for|for
control|(
name|int
name|i
init|=
name|lay
operator|->
name|count
argument_list|()
operator|-
literal|1
init|;
name|i
operator|>=
literal|0
condition|;
operator|--
name|i
control|)
block|{
name|QGraphicsLayoutItem
modifier|*
name|child
init|=
name|lay
operator|->
name|itemAt
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|child
operator|&&
name|child
operator|->
name|isLayout
argument_list|()
condition|)
block|{
if|if
condition|(
name|removeLayoutItemFromLayout
argument_list|(
cast|static_cast
argument_list|<
name|QGraphicsLayout
operator|*
argument_list|>
argument_list|(
name|child
argument_list|)
argument_list|,
name|layoutItem
argument_list|)
condition|)
return|return
literal|true
return|;
block|}
elseif|else
if|if
condition|(
name|child
operator|==
name|layoutItem
condition|)
block|{
name|lay
operator|->
name|removeAt
argument_list|(
name|i
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
block|}
return|return
literal|false
return|;
block|}
end_function
begin_comment
comment|/*!     \internal      This function is called from subclasses to add a layout item \a layoutItem     to a layout.      It takes care of automatically reparenting graphics items, if needed.      If \a layoutItem is a  is already in a layout, it will remove it  from that layout.  */
end_comment
begin_function
DECL|function|addChildLayoutItem
name|void
name|QGraphicsLayoutPrivate
operator|::
name|addChildLayoutItem
parameter_list|(
name|QGraphicsLayoutItem
modifier|*
name|layoutItem
parameter_list|)
block|{
name|Q_Q
argument_list|(
name|QGraphicsLayout
argument_list|)
expr_stmt|;
if|if
condition|(
name|QGraphicsLayoutItem
modifier|*
name|maybeLayout
init|=
name|layoutItem
operator|->
name|parentLayoutItem
argument_list|()
condition|)
block|{
if|if
condition|(
name|maybeLayout
operator|->
name|isLayout
argument_list|()
condition|)
name|removeLayoutItemFromLayout
argument_list|(
cast|static_cast
argument_list|<
name|QGraphicsLayout
operator|*
argument_list|>
argument_list|(
name|maybeLayout
argument_list|)
argument_list|,
name|layoutItem
argument_list|)
expr_stmt|;
block|}
name|layoutItem
operator|->
name|setParentLayoutItem
argument_list|(
name|q
argument_list|)
expr_stmt|;
if|if
condition|(
name|layoutItem
operator|->
name|isLayout
argument_list|()
condition|)
block|{
if|if
condition|(
name|QGraphicsItem
modifier|*
name|parItem
init|=
name|parentItem
argument_list|()
condition|)
block|{
cast|static_cast
argument_list|<
name|QGraphicsLayout
operator|*
argument_list|>
argument_list|(
name|layoutItem
argument_list|)
operator|->
name|d_func
argument_list|()
operator|->
name|reparentChildItems
argument_list|(
name|parItem
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
name|QGraphicsItem
modifier|*
name|item
init|=
name|layoutItem
operator|->
name|graphicsItem
argument_list|()
condition|)
block|{
name|QGraphicsItem
modifier|*
name|newParent
init|=
name|parentItem
argument_list|()
decl_stmt|;
name|QGraphicsItem
modifier|*
name|oldParent
init|=
name|item
operator|->
name|parentItem
argument_list|()
decl_stmt|;
if|if
condition|(
name|oldParent
operator|==
name|newParent
operator|||
operator|!
name|newParent
condition|)
return|return;
ifdef|#
directive|ifdef
name|QT_DEBUG
if|if
condition|(
name|oldParent
operator|&&
name|item
operator|->
name|isWidget
argument_list|()
condition|)
block|{
name|QGraphicsWidget
modifier|*
name|w
init|=
cast|static_cast
argument_list|<
name|QGraphicsWidget
operator|*
argument_list|>
argument_list|(
name|item
argument_list|)
decl_stmt|;
name|qWarning
argument_list|(
literal|"QGraphicsLayout::addChildLayoutItem: %s \"%s\" in wrong parent; moved to correct parent"
argument_list|,
name|w
operator|->
name|metaObject
argument_list|()
operator|->
name|className
argument_list|()
argument_list|,
name|w
operator|->
name|objectName
argument_list|()
operator|.
name|toLocal8Bit
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|)
expr_stmt|;
block|}
endif|#
directive|endif
name|item
operator|->
name|setParentItem
argument_list|(
name|newParent
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_function
begin_function
DECL|function|activateRecursive
name|void
name|QGraphicsLayoutPrivate
operator|::
name|activateRecursive
parameter_list|(
name|QGraphicsLayoutItem
modifier|*
name|item
parameter_list|)
block|{
if|if
condition|(
name|item
operator|->
name|isLayout
argument_list|()
condition|)
block|{
name|QGraphicsLayout
modifier|*
name|layout
init|=
cast|static_cast
argument_list|<
name|QGraphicsLayout
operator|*
argument_list|>
argument_list|(
name|item
argument_list|)
decl_stmt|;
if|if
condition|(
name|layout
operator|->
name|d_func
argument_list|()
operator|->
name|activated
condition|)
block|{
if|if
condition|(
name|QGraphicsLayout
operator|::
name|instantInvalidatePropagation
argument_list|()
condition|)
block|{
return|return;
block|}
else|else
block|{
name|layout
operator|->
name|invalidate
argument_list|()
expr_stmt|;
comment|// ### LOOKS SUSPICIOUSLY WRONG!!???
block|}
block|}
for|for
control|(
name|int
name|i
init|=
name|layout
operator|->
name|count
argument_list|()
operator|-
literal|1
init|;
name|i
operator|>=
literal|0
condition|;
operator|--
name|i
control|)
block|{
name|QGraphicsLayoutItem
modifier|*
name|childItem
init|=
name|layout
operator|->
name|itemAt
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|childItem
condition|)
name|activateRecursive
argument_list|(
name|childItem
argument_list|)
expr_stmt|;
block|}
name|layout
operator|->
name|d_func
argument_list|()
operator|->
name|activated
operator|=
literal|true
expr_stmt|;
block|}
block|}
end_function
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|//QT_NO_GRAPHICSVIEW
end_comment
end_unit
