begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QTREEWIDGETITEMITERATOR_H
end_ifndef
begin_define
DECL|macro|QTREEWIDGETITEMITERATOR_H
define|#
directive|define
name|QTREEWIDGETITEMITERATOR_H
end_define
begin_include
include|#
directive|include
file|<QtCore/qglobal.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qscopedpointer.h>
end_include
begin_function
name|QT_BEGIN_HEADER
name|QT_BEGIN_NAMESPACE
name|QT_MODULE
parameter_list|(
name|Gui
parameter_list|)
ifndef|#
directive|ifndef
name|QT_NO_TREEWIDGET
name|class
name|QTreeWidget
decl_stmt|;
DECL|variable|QTreeWidgetItem
name|class
name|QTreeWidgetItem
decl_stmt|;
DECL|variable|QTreeModel
name|class
name|QTreeModel
decl_stmt|;
DECL|variable|QTreeWidgetItemIteratorPrivate
name|class
name|QTreeWidgetItemIteratorPrivate
decl_stmt|;
name|class
name|Q_WIDGETS_EXPORT
name|QTreeWidgetItemIterator
decl_stmt|{     friend class QTreeModel;
end_function
begin_label
name|public
label|:
end_label
begin_enum
enum|enum
name|IteratorFlag
block|{
name|All
init|=
literal|0x00000000
block|,
name|Hidden
init|=
literal|0x00000001
block|,
name|NotHidden
init|=
literal|0x00000002
block|,
name|Selected
init|=
literal|0x00000004
block|,
name|Unselected
init|=
literal|0x00000008
block|,
name|Selectable
init|=
literal|0x00000010
block|,
name|NotSelectable
init|=
literal|0x00000020
block|,
name|DragEnabled
init|=
literal|0x00000040
block|,
name|DragDisabled
init|=
literal|0x00000080
block|,
name|DropEnabled
init|=
literal|0x00000100
block|,
name|DropDisabled
init|=
literal|0x00000200
block|,
name|HasChildren
init|=
literal|0x00000400
block|,
name|NoChildren
init|=
literal|0x00000800
block|,
name|Checked
init|=
literal|0x00001000
block|,
name|NotChecked
init|=
literal|0x00002000
block|,
name|Enabled
init|=
literal|0x00004000
block|,
name|Disabled
init|=
literal|0x00008000
block|,
name|Editable
init|=
literal|0x00010000
block|,
name|NotEditable
init|=
literal|0x00020000
block|,
name|UserFlag
init|=
literal|0x01000000
comment|// The first flag that can be used by the user.
block|}
enum|;
end_enum
begin_macro
name|Q_DECLARE_FLAGS
argument_list|(
argument|IteratorFlags
argument_list|,
argument|IteratorFlag
argument_list|)
end_macro
begin_expr_stmt
name|QTreeWidgetItemIterator
argument_list|(
specifier|const
name|QTreeWidgetItemIterator
operator|&
name|it
argument_list|)
expr_stmt|;
end_expr_stmt
begin_function_decl
name|explicit
name|QTreeWidgetItemIterator
parameter_list|(
name|QTreeWidget
modifier|*
name|widget
parameter_list|,
name|IteratorFlags
name|flags
init|=
name|All
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|explicit
name|QTreeWidgetItemIterator
parameter_list|(
name|QTreeWidgetItem
modifier|*
name|item
parameter_list|,
name|IteratorFlags
name|flags
init|=
name|All
parameter_list|)
function_decl|;
end_function_decl
begin_expr_stmt
operator|~
name|QTreeWidgetItemIterator
argument_list|()
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|QTreeWidgetItemIterator
modifier|&
name|operator
init|=
operator|(
specifier|const
name|QTreeWidgetItemIterator
operator|&
name|it
operator|)
decl_stmt|;
end_decl_stmt
begin_expr_stmt
name|QTreeWidgetItemIterator
operator|&
name|operator
operator|++
operator|(
operator|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
specifier|inline
specifier|const
name|QTreeWidgetItemIterator
name|operator
operator|++
operator|(
name|int
operator|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
specifier|inline
name|QTreeWidgetItemIterator
operator|&
name|operator
operator|+=
operator|(
name|int
name|n
operator|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|QTreeWidgetItemIterator
operator|&
name|operator
operator|--
operator|(
operator|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
specifier|inline
specifier|const
name|QTreeWidgetItemIterator
name|operator
operator|--
operator|(
name|int
operator|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
specifier|inline
name|QTreeWidgetItemIterator
operator|&
name|operator
operator|-=
operator|(
name|int
name|n
operator|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
specifier|inline
name|QTreeWidgetItem
operator|*
name|operator
operator|*
operator|(
operator|)
specifier|const
expr_stmt|;
end_expr_stmt
begin_label
name|private
label|:
end_label
begin_decl_stmt
name|bool
name|matchesFlags
argument_list|(
specifier|const
name|QTreeWidgetItem
operator|*
name|item
argument_list|)
decl|const
decl_stmt|;
end_decl_stmt
begin_expr_stmt
name|QScopedPointer
operator|<
name|QTreeWidgetItemIteratorPrivate
operator|>
name|d_ptr
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|QTreeWidgetItem
modifier|*
name|current
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|IteratorFlags
name|flags
decl_stmt|;
end_decl_stmt
begin_macro
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QTreeWidgetItemIterator
argument_list|)
end_macro
begin_expr_stmt
unit|};
DECL|function|operator
specifier|inline
specifier|const
name|QTreeWidgetItemIterator
name|QTreeWidgetItemIterator
operator|::
name|operator
operator|++
operator|(
name|int
operator|)
block|{
name|QTreeWidgetItemIterator
name|it
operator|=
operator|*
name|this
block|;
operator|++
operator|(
operator|*
name|this
operator|)
block|;
return|return
name|it
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|operator
specifier|inline
specifier|const
name|QTreeWidgetItemIterator
name|QTreeWidgetItemIterator
operator|::
name|operator
operator|--
operator|(
name|int
operator|)
block|{
name|QTreeWidgetItemIterator
name|it
operator|=
operator|*
name|this
block|;
operator|--
operator|(
operator|*
name|this
operator|)
block|;
return|return
name|it
return|;
block|}
end_expr_stmt
begin_expr_stmt
specifier|inline
name|QTreeWidgetItemIterator
operator|&
name|QTreeWidgetItemIterator
operator|::
name|operator
operator|+=
operator|(
name|int
name|n
operator|)
block|{
if|if
condition|(
name|n
operator|<
literal|0
condition|)
return|return
operator|(
operator|*
name|this
operator|)
operator|-=
operator|(
operator|-
name|n
operator|)
return|;
end_expr_stmt
begin_while
while|while
condition|(
name|current
operator|&&
name|n
operator|--
condition|)
operator|++
operator|(
operator|*
name|this
operator|)
expr_stmt|;
end_while
begin_return
return|return
operator|*
name|this
return|;
end_return
begin_expr_stmt
unit|}  inline
name|QTreeWidgetItemIterator
operator|&
name|QTreeWidgetItemIterator
operator|::
name|operator
operator|-=
operator|(
name|int
name|n
operator|)
block|{
if|if
condition|(
name|n
operator|<
literal|0
condition|)
return|return
operator|(
operator|*
name|this
operator|)
operator|+=
operator|(
operator|-
name|n
operator|)
return|;
end_expr_stmt
begin_while
while|while
condition|(
name|current
operator|&&
name|n
operator|--
condition|)
operator|--
operator|(
operator|*
name|this
operator|)
expr_stmt|;
end_while
begin_return
return|return
operator|*
name|this
return|;
end_return
begin_expr_stmt
unit|}  inline
name|QTreeWidgetItem
operator|*
name|QTreeWidgetItemIterator
operator|::
name|operator
operator|*
operator|(
operator|)
specifier|const
block|{
return|return
name|current
return|;
block|}
end_expr_stmt
begin_macro
name|Q_DECLARE_OPERATORS_FOR_FLAGS
argument_list|(
argument|QTreeWidgetItemIterator::IteratorFlags
argument_list|)
end_macro
begin_expr_stmt
name|QT_END_NAMESPACE
endif|#
directive|endif
comment|// QT_NO_TREEWIDGET
name|QT_END_HEADER
end_expr_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QTREEWIDGETITEMITERATOR_H
end_comment
end_unit
