begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the QtWidgets module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 3 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL3 included in the ** packaging of this file. Please review the following information to ** ensure the GNU Lesser General Public License version 3 requirements ** will be met: https://www.gnu.org/licenses/lgpl-3.0.html. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 2.0 or (at your option) the GNU General ** Public license version 3 or any later version approved by the KDE Free ** Qt Foundation. The licenses are as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL2 and LICENSE.GPL3 ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-2.0.html and ** https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QTREEWIDGETITEMITERATOR_H
end_ifndef
begin_define
DECL|macro|QTREEWIDGETITEMITERATOR_H
define|#
directive|define
name|QTREEWIDGETITEMITERATOR_H
end_define
begin_include
include|#
directive|include
file|<QtCore/qglobal.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qscopedpointer.h>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
ifndef|#
directive|ifndef
name|QT_NO_TREEWIDGET
DECL|variable|QTreeWidget
name|class
name|QTreeWidget
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QTreeWidgetItem
name|class
name|QTreeWidgetItem
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QTreeModel
name|class
name|QTreeModel
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QTreeWidgetItemIteratorPrivate
name|class
name|QTreeWidgetItemIteratorPrivate
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|Q_WIDGETS_EXPORT
name|QTreeWidgetItemIterator
block|{
name|friend
name|class
name|QTreeModel
decl_stmt|;
name|public
label|:
enum|enum
name|IteratorFlag
block|{
name|All
init|=
literal|0x00000000
block|,
name|Hidden
init|=
literal|0x00000001
block|,
name|NotHidden
init|=
literal|0x00000002
block|,
name|Selected
init|=
literal|0x00000004
block|,
name|Unselected
init|=
literal|0x00000008
block|,
name|Selectable
init|=
literal|0x00000010
block|,
name|NotSelectable
init|=
literal|0x00000020
block|,
name|DragEnabled
init|=
literal|0x00000040
block|,
name|DragDisabled
init|=
literal|0x00000080
block|,
name|DropEnabled
init|=
literal|0x00000100
block|,
name|DropDisabled
init|=
literal|0x00000200
block|,
name|HasChildren
init|=
literal|0x00000400
block|,
name|NoChildren
init|=
literal|0x00000800
block|,
name|Checked
init|=
literal|0x00001000
block|,
name|NotChecked
init|=
literal|0x00002000
block|,
name|Enabled
init|=
literal|0x00004000
block|,
name|Disabled
init|=
literal|0x00008000
block|,
name|Editable
init|=
literal|0x00010000
block|,
name|NotEditable
init|=
literal|0x00020000
block|,
name|UserFlag
init|=
literal|0x01000000
comment|// The first flag that can be used by the user.
block|}
enum|;
name|Q_DECLARE_FLAGS
argument_list|(
argument|IteratorFlags
argument_list|,
argument|IteratorFlag
argument_list|)
name|QTreeWidgetItemIterator
argument_list|(
specifier|const
name|QTreeWidgetItemIterator
operator|&
name|it
argument_list|)
expr_stmt|;
name|explicit
name|QTreeWidgetItemIterator
parameter_list|(
name|QTreeWidget
modifier|*
name|widget
parameter_list|,
name|IteratorFlags
name|flags
init|=
name|All
parameter_list|)
function_decl|;
name|explicit
name|QTreeWidgetItemIterator
parameter_list|(
name|QTreeWidgetItem
modifier|*
name|item
parameter_list|,
name|IteratorFlags
name|flags
init|=
name|All
parameter_list|)
function_decl|;
operator|~
name|QTreeWidgetItemIterator
argument_list|()
expr_stmt|;
name|QTreeWidgetItemIterator
modifier|&
name|operator
init|=
operator|(
specifier|const
name|QTreeWidgetItemIterator
operator|&
name|it
operator|)
decl_stmt|;
name|QTreeWidgetItemIterator
operator|&
name|operator
operator|++
operator|(
operator|)
expr_stmt|;
specifier|inline
specifier|const
name|QTreeWidgetItemIterator
name|operator
operator|++
operator|(
name|int
operator|)
expr_stmt|;
specifier|inline
name|QTreeWidgetItemIterator
operator|&
name|operator
operator|+=
operator|(
name|int
name|n
operator|)
expr_stmt|;
name|QTreeWidgetItemIterator
operator|&
name|operator
operator|--
operator|(
operator|)
expr_stmt|;
specifier|inline
specifier|const
name|QTreeWidgetItemIterator
name|operator
operator|--
operator|(
name|int
operator|)
expr_stmt|;
specifier|inline
name|QTreeWidgetItemIterator
operator|&
name|operator
operator|-=
operator|(
name|int
name|n
operator|)
expr_stmt|;
specifier|inline
name|QTreeWidgetItem
operator|*
name|operator
operator|*
operator|(
operator|)
specifier|const
expr_stmt|;
name|private
label|:
name|bool
name|matchesFlags
argument_list|(
specifier|const
name|QTreeWidgetItem
operator|*
name|item
argument_list|)
decl|const
decl_stmt|;
name|QScopedPointer
operator|<
name|QTreeWidgetItemIteratorPrivate
operator|>
name|d_ptr
expr_stmt|;
name|QTreeWidgetItem
modifier|*
name|current
decl_stmt|;
name|IteratorFlags
name|flags
decl_stmt|;
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QTreeWidgetItemIterator
argument_list|)
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_expr_stmt
DECL|function|operator
specifier|inline
specifier|const
name|QTreeWidgetItemIterator
name|QTreeWidgetItemIterator
operator|::
name|operator
operator|++
operator|(
name|int
operator|)
block|{
name|QTreeWidgetItemIterator
name|it
operator|=
operator|*
name|this
block|;
operator|++
operator|(
operator|*
name|this
operator|)
block|;
return|return
name|it
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|operator
specifier|inline
specifier|const
name|QTreeWidgetItemIterator
name|QTreeWidgetItemIterator
operator|::
name|operator
operator|--
operator|(
name|int
operator|)
block|{
name|QTreeWidgetItemIterator
name|it
operator|=
operator|*
name|this
block|;
operator|--
operator|(
operator|*
name|this
operator|)
block|;
return|return
name|it
return|;
block|}
end_expr_stmt
begin_expr_stmt
specifier|inline
name|QTreeWidgetItemIterator
operator|&
name|QTreeWidgetItemIterator
operator|::
name|operator
operator|+=
operator|(
name|int
name|n
operator|)
block|{
if|if
condition|(
name|n
operator|<
literal|0
condition|)
return|return
operator|(
operator|*
name|this
operator|)
operator|-=
operator|(
operator|-
name|n
operator|)
return|;
end_expr_stmt
begin_while
while|while
condition|(
name|current
operator|&&
name|n
operator|--
condition|)
operator|++
operator|(
operator|*
name|this
operator|)
expr_stmt|;
end_while
begin_return
return|return
operator|*
name|this
return|;
end_return
begin_expr_stmt
unit|}  inline
name|QTreeWidgetItemIterator
operator|&
name|QTreeWidgetItemIterator
operator|::
name|operator
operator|-=
operator|(
name|int
name|n
operator|)
block|{
if|if
condition|(
name|n
operator|<
literal|0
condition|)
return|return
operator|(
operator|*
name|this
operator|)
operator|+=
operator|(
operator|-
name|n
operator|)
return|;
end_expr_stmt
begin_while
while|while
condition|(
name|current
operator|&&
name|n
operator|--
condition|)
operator|--
operator|(
operator|*
name|this
operator|)
expr_stmt|;
end_while
begin_return
return|return
operator|*
name|this
return|;
end_return
begin_expr_stmt
unit|}  inline
name|QTreeWidgetItem
operator|*
name|QTreeWidgetItemIterator
operator|::
name|operator
operator|*
operator|(
operator|)
specifier|const
block|{
return|return
name|current
return|;
block|}
end_expr_stmt
begin_macro
name|Q_DECLARE_OPERATORS_FOR_FLAGS
argument_list|(
argument|QTreeWidgetItemIterator::IteratorFlags
argument_list|)
end_macro
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_TREEWIDGET
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QTREEWIDGETITEMITERATOR_H
end_comment
end_unit
