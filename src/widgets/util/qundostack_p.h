begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/ ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QUNDOSTACK_P_H
end_ifndef
begin_define
DECL|macro|QUNDOSTACK_P_H
define|#
directive|define
name|QUNDOSTACK_P_H
end_define
begin_include
include|#
directive|include
file|<private/qobject_p.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qlist.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qstring.h>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/qaction.h>
end_include
begin_include
include|#
directive|include
file|"qundostack.h"
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
DECL|variable|QUndoCommand
name|class
name|QUndoCommand
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QUndoGroup
name|class
name|QUndoGroup
decl_stmt|;
end_decl_stmt
begin_comment
comment|//
end_comment
begin_comment
comment|//  W A R N I N G
end_comment
begin_comment
comment|//  -------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// This file is not part of the Qt API.  It exists for the convenience
end_comment
begin_comment
comment|// of qapplication_*.cpp, qwidget*.cpp and qfiledialog.cpp.  This header
end_comment
begin_comment
comment|// file may change from version to version without notice, or even be removed.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// We mean it.
end_comment
begin_comment
comment|//
end_comment
begin_decl_stmt
name|class
name|QUndoCommandPrivate
block|{
name|public
label|:
name|QUndoCommandPrivate
argument_list|()
operator|:
name|id
argument_list|(
argument|-
literal|1
argument_list|)
block|{}
name|QList
operator|<
name|QUndoCommand
operator|*
operator|>
name|child_list
expr_stmt|;
name|QString
name|text
decl_stmt|;
name|QString
name|actionText
decl_stmt|;
name|int
name|id
decl_stmt|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_UNDOSTACK
end_ifndef
begin_decl_stmt
name|class
name|QUndoStackPrivate
range|:
name|public
name|QObjectPrivate
block|{
name|Q_DECLARE_PUBLIC
argument_list|(
argument|QUndoStack
argument_list|)
name|public
operator|:
name|QUndoStackPrivate
argument_list|()
operator|:
name|index
argument_list|(
literal|0
argument_list|)
block|,
name|clean_index
argument_list|(
literal|0
argument_list|)
block|,
name|group
argument_list|(
literal|0
argument_list|)
block|,
name|undo_limit
argument_list|(
literal|0
argument_list|)
block|{}
name|QList
operator|<
name|QUndoCommand
operator|*
operator|>
name|command_list
block|;
name|QList
operator|<
name|QUndoCommand
operator|*
operator|>
name|macro_stack
block|;
name|int
name|index
block|;
name|int
name|clean_index
block|;
name|QUndoGroup
operator|*
name|group
block|;
name|int
name|undo_limit
block|;
name|void
name|setIndex
argument_list|(
argument|int idx
argument_list|,
argument|bool clean
argument_list|)
block|;
name|bool
name|checkUndoLimit
argument_list|()
block|; }
decl_stmt|;
end_decl_stmt
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_ACTION
end_ifndef
begin_decl_stmt
name|class
name|QUndoAction
range|:
name|public
name|QAction
block|{
name|Q_OBJECT
name|public
operator|:
name|QUndoAction
argument_list|(
specifier|const
name|QString
operator|&
name|prefix
argument_list|,
name|QObject
operator|*
name|parent
operator|=
literal|0
argument_list|)
block|;
name|void
name|setTextFormat
argument_list|(
specifier|const
name|QString
operator|&
name|textFormat
argument_list|,
specifier|const
name|QString
operator|&
name|defaultText
argument_list|)
block|;
name|public
name|Q_SLOTS
operator|:
name|void
name|setPrefixedText
argument_list|(
specifier|const
name|QString
operator|&
name|text
argument_list|)
block|;
name|private
operator|:
name|QString
name|m_prefix
block|;
name|QString
name|m_defaultText
block|; }
decl_stmt|;
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_ACTION
end_comment
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_UNDOSTACK
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QUNDOSTACK_P_H
end_comment
end_unit
