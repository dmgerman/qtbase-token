begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** No Commercial Usage ** This file contains pre-release code and may not be distributed. ** You may use this file in accordance with the terms and conditions ** contained in the Technology Preview License Agreement accompanying ** this package. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights.  These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** If you have questions regarding the use of this file, please contact ** Nokia at qt-info@nokia.com. ** ** ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QSOUND_P_H
end_ifndef
begin_define
DECL|macro|QSOUND_P_H
define|#
directive|define
name|QSOUND_P_H
end_define
begin_comment
comment|//
end_comment
begin_comment
comment|//  W A R N I N G
end_comment
begin_comment
comment|//  -------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// This file is not part of the Qt API.  It exists for the convenience
end_comment
begin_comment
comment|// of other Qt classes.  This header file may change from version to
end_comment
begin_comment
comment|// version without notice, or even be removed.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// We mean it.
end_comment
begin_comment
comment|//
end_comment
begin_include
include|#
directive|include
file|"QtCore/qobject.h"
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
ifndef|#
directive|ifndef
name|QT_NO_SOUND
DECL|variable|QSound
name|class
name|QSound
decl_stmt|;
end_decl_stmt
begin_comment
comment|/*   QAuServer is an INTERNAL class.  If you wish to provide support for   additional audio servers, you can make a subclass of QAuServer to do   so, HOWEVER, your class may need to be re-engineered to some degree   with each new Qt release, including minor releases.    QAuBucket is whatever you want. */
end_comment
begin_decl_stmt
name|class
name|QAuBucket
block|{
name|public
label|:
name|virtual
operator|~
name|QAuBucket
argument_list|()
expr_stmt|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_decl_stmt
name|class
name|QAuServer
range|:
name|public
name|QObject
block|{
name|Q_OBJECT
name|public
operator|:
name|explicit
name|QAuServer
argument_list|(
name|QObject
operator|*
name|parent
argument_list|)
block|;
operator|~
name|QAuServer
argument_list|()
block|;
name|virtual
name|void
name|init
argument_list|(
name|QSound
operator|*
argument_list|)
block|;
name|virtual
name|void
name|play
argument_list|(
specifier|const
name|QString
operator|&
name|filename
argument_list|)
block|;
name|virtual
name|void
name|play
argument_list|(
name|QSound
operator|*
argument_list|)
operator|=
literal|0
block|;
name|virtual
name|void
name|stop
argument_list|(
name|QSound
operator|*
argument_list|)
operator|=
literal|0
block|;
name|virtual
name|bool
name|okay
argument_list|()
operator|=
literal|0
block|;
name|protected
operator|:
name|void
name|setBucket
argument_list|(
name|QSound
operator|*
argument_list|,
name|QAuBucket
operator|*
argument_list|)
block|;
name|QAuBucket
operator|*
name|bucket
argument_list|(
name|QSound
operator|*
argument_list|)
block|;
name|int
name|decLoop
argument_list|(
name|QSound
operator|*
argument_list|)
block|; }
decl_stmt|;
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_SOUND
end_comment
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QSOUND_P_H
end_comment
end_unit
