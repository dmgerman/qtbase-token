begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: http://www.qt-project.org/ ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QSOFTKEYMANAGER_P_H
end_ifndef
begin_define
DECL|macro|QSOFTKEYMANAGER_P_H
define|#
directive|define
name|QSOFTKEYMANAGER_P_H
end_define
begin_comment
comment|//
end_comment
begin_comment
comment|//  W A R N I N G
end_comment
begin_comment
comment|//  -------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// This file is not part of the Qt API.  It exists purely as an
end_comment
begin_comment
comment|// implementation detail.  This header file may change from version to
end_comment
begin_comment
comment|// version without notice, or even be removed.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// We mean it.
end_comment
begin_comment
comment|//
end_comment
begin_include
include|#
directive|include
file|<QtCore/qobject.h>
end_include
begin_include
include|#
directive|include
file|"QtWidgets/qaction.h"
end_include
begin_decl_stmt
name|QT_BEGIN_HEADER
ifndef|#
directive|ifndef
name|QT_NO_SOFTKEYMANAGER
name|QT_BEGIN_NAMESPACE
DECL|variable|QSoftKeyManagerPrivate
name|class
name|QSoftKeyManagerPrivate
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|Q_AUTOTEST_EXPORT
name|QSoftKeyManager
range|:
name|public
name|QObject
block|{
name|Q_OBJECT
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QSoftKeyManager
argument_list|)
name|public
operator|:
expr|enum
name|StandardSoftKey
block|{
name|OkSoftKey
block|,
name|SelectSoftKey
block|,
name|DoneSoftKey
block|,
name|MenuSoftKey
block|,
name|CancelSoftKey
block|}
block|;
specifier|static
name|void
name|updateSoftKeys
argument_list|()
block|;
ifdef|#
directive|ifdef
name|Q_WS_S60
specifier|static
name|bool
name|handleCommand
argument_list|(
name|int
argument_list|)
block|;
endif|#
directive|endif
specifier|static
name|QAction
operator|*
name|createAction
argument_list|(
argument|StandardSoftKey standardKey
argument_list|,
argument|QWidget *actionWidget
argument_list|)
block|;
specifier|static
name|QAction
operator|*
name|createKeyedAction
argument_list|(
argument|StandardSoftKey standardKey
argument_list|,
argument|Qt::Key key
argument_list|,
argument|QWidget *actionWidget
argument_list|)
block|;
specifier|static
name|QString
name|standardSoftKeyText
argument_list|(
argument|StandardSoftKey standardKey
argument_list|)
block|;
specifier|static
name|void
name|setForceEnabledInSoftkeys
argument_list|(
name|QAction
operator|*
name|action
argument_list|)
block|;
specifier|static
name|bool
name|isForceEnabledInSofkeys
argument_list|(
name|QAction
operator|*
name|action
argument_list|)
block|;
name|protected
operator|:
name|bool
name|event
argument_list|(
name|QEvent
operator|*
name|e
argument_list|)
block|;
name|private
operator|:
name|QSoftKeyManager
argument_list|()
block|;
specifier|static
name|QSoftKeyManager
operator|*
name|instance
argument_list|()
block|;
name|bool
name|appendSoftkeys
argument_list|(
argument|const QWidget&source
argument_list|,
argument|int level
argument_list|)
block|;
name|QWidget
operator|*
name|softkeySource
argument_list|(
name|QWidget
operator|*
name|previousSource
argument_list|,
name|bool
operator|&
name|recursiveMerging
argument_list|)
block|;
name|bool
name|handleUpdateSoftKeys
argument_list|()
block|;
name|private
name|Q_SLOTS
operator|:
name|void
name|cleanupHash
argument_list|(
name|QObject
operator|*
name|obj
argument_list|)
block|;
name|void
name|sendKeyEvent
argument_list|()
block|;
name|private
operator|:
name|Q_DISABLE_COPY
argument_list|(
argument|QSoftKeyManager
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
name|QT_END_NAMESPACE
endif|#
directive|endif
comment|//QT_NO_SOFTKEYMANAGER
name|QT_END_HEADER
end_expr_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|//QSOFTKEYMANAGER_P_H
end_comment
end_unit
