begin_unit
begin_comment
comment|/****************************************************************************  **  ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).  ** All rights reserved.  ** Contact: Nokia Corporation (qt-info@nokia.com)  **  ** This file is part of the QtGui module of the Qt Toolkit.  **  ** $QT_BEGIN_LICENSE:LGPL$  ** GNU Lesser General Public License Usage  ** This file may be used under the terms of the GNU Lesser General Public  ** License version 2.1 as published by the Free Software Foundation and  ** appearing in the file LICENSE.LGPL included in the packaging of this  ** file. Please review the following information to ensure the GNU Lesser  ** General Public License version 2.1 requirements will be met:  ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.  **  ** In addition, as a special exception, Nokia gives you certain additional  ** rights. These rights are described in the Nokia Qt LGPL Exception  ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.  **  ** GNU General Public License Usage  ** Alternatively, this file may be used under the terms of the GNU General  ** Public License version 3.0 as published by the Free Software Foundation  ** and appearing in the file LICENSE.GPL included in the packaging of this  ** file. Please review the following information to ensure the GNU General  ** Public License version 3.0 requirements will be met:  ** http://www.gnu.org/copyleft/gpl.html.  **  ** Other Usage  ** Alternatively, this file may be used in accordance with the terms and  ** conditions contained in a signed written agreement between you and Nokia.  **  **  **  **  **  ** $QT_END_LICENSE$  **  ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QPLATFORMDIALOGHELPER_H
end_ifndef
begin_define
DECL|macro|QPLATFORMDIALOGHELPER_H
define|#
directive|define
name|QPLATFORMDIALOGHELPER_H
end_define
begin_include
include|#
directive|include
file|<qglobal.h>
end_include
begin_include
include|#
directive|include
file|<qobject.h>
end_include
begin_decl_stmt
name|QT_BEGIN_HEADER
name|QT_BEGIN_NAMESPACE
name|QT_MODULE
argument_list|(
name|Gui
argument_list|)
name|class
name|QString
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QColor
name|class
name|QColor
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QFont
name|class
name|QFont
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QWindow
name|class
name|QWindow
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QVariant
name|class
name|QVariant
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|Q_WIDGETS_EXPORT
name|QPlatformDialogHelper
range|:
name|public
name|QObject
block|{
name|Q_OBJECT
name|public
operator|:
expr|enum
name|StyleHint
block|{
name|SnapToDefaultButton
block|}
block|;     enum
name|DialogCode
block|{
name|Rejected
block|,
name|Accepted
block|}
block|;
name|QPlatformDialogHelper
argument_list|()
block|;
name|virtual
operator|~
name|QPlatformDialogHelper
argument_list|()
block|;
name|virtual
name|QVariant
name|styleHint
argument_list|(
argument|StyleHint hint
argument_list|)
specifier|const
block|;
name|virtual
name|void
name|platformNativeDialogModalHelp
argument_list|()
operator|=
literal|0
block|;
name|virtual
name|void
name|_q_platformRunNativeAppModalPanel
argument_list|()
operator|=
literal|0
block|;
name|virtual
name|void
name|deleteNativeDialog_sys
argument_list|()
operator|=
literal|0
block|;
name|virtual
name|bool
name|show_sys
argument_list|(
name|QWindow
operator|*
name|parent
argument_list|)
operator|=
literal|0
block|;
name|virtual
name|void
name|hide_sys
argument_list|()
operator|=
literal|0
block|;
name|virtual
name|DialogCode
name|dialogResultCode_sys
argument_list|()
operator|=
literal|0
block|;
specifier|static
name|QVariant
name|defaultStyleHint
argument_list|(
argument|QPlatformDialogHelper::StyleHint hint
argument_list|)
block|; }
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|Q_WIDGETS_EXPORT
name|QPlatformColorDialogHelper
range|:
name|public
name|QPlatformDialogHelper
block|{
name|Q_OBJECT
name|public
operator|:
name|virtual
name|void
name|setCurrentColor_sys
argument_list|(
specifier|const
name|QColor
operator|&
argument_list|)
operator|=
literal|0
block|;
name|virtual
name|QColor
name|currentColor_sys
argument_list|()
specifier|const
operator|=
literal|0
block|;
name|Q_SIGNALS
operator|:
name|void
name|currentColorChanged
argument_list|(
specifier|const
name|QColor
operator|&
name|color
argument_list|)
block|;
name|void
name|colorSelected
argument_list|(
specifier|const
name|QColor
operator|&
name|color
argument_list|)
block|; }
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|Q_WIDGETS_EXPORT
name|QPlatformFontDialogHelper
range|:
name|public
name|QPlatformDialogHelper
block|{
name|Q_OBJECT
name|public
operator|:
name|virtual
name|void
name|setCurrentFont_sys
argument_list|(
specifier|const
name|QFont
operator|&
argument_list|)
operator|=
literal|0
block|;
name|virtual
name|QFont
name|currentFont_sys
argument_list|()
specifier|const
operator|=
literal|0
block|;
name|Q_SIGNALS
operator|:
name|void
name|currentFontChanged
argument_list|(
specifier|const
name|QFont
operator|&
name|font
argument_list|)
block|;
name|void
name|fontSelected
argument_list|(
specifier|const
name|QFont
operator|&
name|font
argument_list|)
block|; }
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|Q_WIDGETS_EXPORT
name|QPlatformFileDialogHelper
range|:
name|public
name|QPlatformDialogHelper
block|{
name|Q_OBJECT
name|public
operator|:
name|virtual
name|bool
name|defaultNameFilterDisables
argument_list|()
specifier|const
operator|=
literal|0
block|;
name|virtual
name|void
name|setDirectory_sys
argument_list|(
specifier|const
name|QString
operator|&
name|directory
argument_list|)
operator|=
literal|0
block|;
name|virtual
name|QString
name|directory_sys
argument_list|()
specifier|const
operator|=
literal|0
block|;
name|virtual
name|void
name|selectFile_sys
argument_list|(
specifier|const
name|QString
operator|&
name|filename
argument_list|)
operator|=
literal|0
block|;
name|virtual
name|QStringList
name|selectedFiles_sys
argument_list|()
specifier|const
operator|=
literal|0
block|;
name|virtual
name|void
name|setFilter_sys
argument_list|()
operator|=
literal|0
block|;
name|virtual
name|void
name|setNameFilters_sys
argument_list|(
specifier|const
name|QStringList
operator|&
name|filters
argument_list|)
operator|=
literal|0
block|;
name|virtual
name|void
name|selectNameFilter_sys
argument_list|(
specifier|const
name|QString
operator|&
name|filter
argument_list|)
operator|=
literal|0
block|;
name|virtual
name|QString
name|selectedNameFilter_sys
argument_list|()
specifier|const
operator|=
literal|0
block|;
name|Q_SIGNALS
operator|:
name|void
name|fileSelected
argument_list|(
specifier|const
name|QString
operator|&
name|file
argument_list|)
block|;
name|void
name|filesSelected
argument_list|(
specifier|const
name|QStringList
operator|&
name|files
argument_list|)
block|;
name|void
name|currentChanged
argument_list|(
specifier|const
name|QString
operator|&
name|path
argument_list|)
block|;
name|void
name|directoryEntered
argument_list|(
specifier|const
name|QString
operator|&
name|directory
argument_list|)
block|;
name|void
name|filterSelected
argument_list|(
specifier|const
name|QString
operator|&
name|filter
argument_list|)
block|; }
decl_stmt|;
end_decl_stmt
begin_expr_stmt
name|QT_END_NAMESPACE
name|QT_END_HEADER
end_expr_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QPLATFORMDIALOGHELPER_H
end_comment
end_unit
