begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QLAYOUT_H
end_ifndef
begin_define
DECL|macro|QLAYOUT_H
define|#
directive|define
name|QLAYOUT_H
end_define
begin_include
include|#
directive|include
file|<QtCore/qobject.h>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/qlayoutitem.h>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/qsizepolicy.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qrect.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qmargins.h>
end_include
begin_include
include|#
directive|include
file|<limits.h>
end_include
begin_decl_stmt
name|QT_BEGIN_HEADER
name|QT_BEGIN_NAMESPACE
name|QT_MODULE
argument_list|(
name|Gui
argument_list|)
name|class
name|QLayout
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QSize
name|class
name|QSize
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QLayoutPrivate
name|class
name|QLayoutPrivate
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QObject
name|class
name|Q_WIDGETS_EXPORT
name|QLayout
range|:
name|public
name|QObject
decl_stmt|,
name|public
name|QLayoutItem
block|{
name|Q_OBJECT
name|Q_DECLARE_PRIVATE
argument_list|(
name|QLayout
argument_list|)
name|Q_ENUMS
argument_list|(
name|SizeConstraint
argument_list|)
name|Q_PROPERTY
argument_list|(
name|int
name|margin
name|READ
name|margin
name|WRITE
name|setMargin
argument_list|)
name|Q_PROPERTY
argument_list|(
name|int
name|spacing
name|READ
name|spacing
name|WRITE
name|setSpacing
argument_list|)
name|Q_PROPERTY
argument_list|(
name|SizeConstraint
name|sizeConstraint
name|READ
name|sizeConstraint
name|WRITE
name|setSizeConstraint
argument_list|)
name|public
range|:     enum
name|SizeConstraint
block|{
name|SetDefaultConstraint
block|,
name|SetNoConstraint
block|,
name|SetMinimumSize
block|,
name|SetFixedSize
block|,
name|SetMaximumSize
block|,
name|SetMinAndMaxSize
block|}
decl_stmt|;
name|QLayout
argument_list|(
name|QWidget
operator|*
name|parent
argument_list|)
expr_stmt|;
name|QLayout
argument_list|()
expr_stmt|;
operator|~
name|QLayout
argument_list|()
expr_stmt|;
name|int
name|margin
argument_list|()
specifier|const
expr_stmt|;
name|int
name|spacing
argument_list|()
specifier|const
expr_stmt|;
name|void
name|setMargin
parameter_list|(
name|int
parameter_list|)
function_decl|;
name|void
name|setSpacing
parameter_list|(
name|int
parameter_list|)
function_decl|;
name|void
name|setContentsMargins
parameter_list|(
name|int
name|left
parameter_list|,
name|int
name|top
parameter_list|,
name|int
name|right
parameter_list|,
name|int
name|bottom
parameter_list|)
function_decl|;
name|void
name|setContentsMargins
parameter_list|(
specifier|const
name|QMargins
modifier|&
name|margins
parameter_list|)
function_decl|;
name|void
name|getContentsMargins
argument_list|(
name|int
operator|*
name|left
argument_list|,
name|int
operator|*
name|top
argument_list|,
name|int
operator|*
name|right
argument_list|,
name|int
operator|*
name|bottom
argument_list|)
decl|const
decl_stmt|;
name|QMargins
name|contentsMargins
argument_list|()
specifier|const
expr_stmt|;
name|QRect
name|contentsRect
argument_list|()
specifier|const
expr_stmt|;
name|bool
name|setAlignment
argument_list|(
name|QWidget
operator|*
name|w
argument_list|,
name|Qt
operator|::
name|Alignment
name|alignment
argument_list|)
decl_stmt|;
name|bool
name|setAlignment
argument_list|(
name|QLayout
operator|*
name|l
argument_list|,
name|Qt
operator|::
name|Alignment
name|alignment
argument_list|)
decl_stmt|;
ifdef|#
directive|ifdef
name|Q_NO_USING_KEYWORD
specifier|inline
name|void
name|setAlignment
argument_list|(
name|Qt
operator|::
name|Alignment
name|alignment
argument_list|)
block|{
name|QLayoutItem
operator|::
name|setAlignment
argument_list|(
name|alignment
argument_list|)
expr_stmt|;
block|}
else|#
directive|else
name|using
name|QLayoutItem
operator|::
name|setAlignment
expr_stmt|;
endif|#
directive|endif
name|void
name|setSizeConstraint
parameter_list|(
name|SizeConstraint
parameter_list|)
function_decl|;
name|SizeConstraint
name|sizeConstraint
argument_list|()
specifier|const
expr_stmt|;
name|void
name|setMenuBar
parameter_list|(
name|QWidget
modifier|*
name|w
parameter_list|)
function_decl|;
name|QWidget
operator|*
name|menuBar
argument_list|()
specifier|const
expr_stmt|;
name|QWidget
operator|*
name|parentWidget
argument_list|()
specifier|const
expr_stmt|;
name|void
name|invalidate
parameter_list|()
function_decl|;
name|QRect
name|geometry
argument_list|()
specifier|const
expr_stmt|;
name|bool
name|activate
parameter_list|()
function_decl|;
name|void
name|update
parameter_list|()
function_decl|;
name|void
name|addWidget
parameter_list|(
name|QWidget
modifier|*
name|w
parameter_list|)
function_decl|;
name|virtual
name|void
name|addItem
parameter_list|(
name|QLayoutItem
modifier|*
parameter_list|)
init|=
literal|0
function_decl|;
name|void
name|removeWidget
parameter_list|(
name|QWidget
modifier|*
name|w
parameter_list|)
function_decl|;
name|void
name|removeItem
parameter_list|(
name|QLayoutItem
modifier|*
parameter_list|)
function_decl|;
name|Qt
operator|::
name|Orientations
name|expandingDirections
argument_list|()
specifier|const
expr_stmt|;
name|QSize
name|minimumSize
argument_list|()
specifier|const
expr_stmt|;
name|QSize
name|maximumSize
argument_list|()
specifier|const
expr_stmt|;
name|virtual
name|void
name|setGeometry
parameter_list|(
specifier|const
name|QRect
modifier|&
parameter_list|)
function_decl|;
name|virtual
name|QLayoutItem
modifier|*
name|itemAt
argument_list|(
name|int
name|index
argument_list|)
decl|const
init|=
literal|0
decl_stmt|;
name|virtual
name|QLayoutItem
modifier|*
name|takeAt
parameter_list|(
name|int
name|index
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|int
name|indexOf
argument_list|(
name|QWidget
operator|*
argument_list|)
decl|const
decl_stmt|;
name|virtual
name|int
name|count
argument_list|()
specifier|const
operator|=
literal|0
expr_stmt|;
name|bool
name|isEmpty
argument_list|()
specifier|const
expr_stmt|;
name|int
name|totalHeightForWidth
argument_list|(
name|int
name|w
argument_list|)
decl|const
decl_stmt|;
name|QSize
name|totalMinimumSize
argument_list|()
specifier|const
expr_stmt|;
name|QSize
name|totalMaximumSize
argument_list|()
specifier|const
expr_stmt|;
name|QSize
name|totalSizeHint
argument_list|()
specifier|const
expr_stmt|;
name|QLayout
modifier|*
name|layout
parameter_list|()
function_decl|;
name|void
name|setEnabled
parameter_list|(
name|bool
parameter_list|)
function_decl|;
name|bool
name|isEnabled
argument_list|()
specifier|const
expr_stmt|;
specifier|static
name|QSize
name|closestAcceptableSize
parameter_list|(
specifier|const
name|QWidget
modifier|*
name|w
parameter_list|,
specifier|const
name|QSize
modifier|&
name|s
parameter_list|)
function_decl|;
name|protected
label|:
name|void
name|widgetEvent
parameter_list|(
name|QEvent
modifier|*
parameter_list|)
function_decl|;
name|void
name|childEvent
parameter_list|(
name|QChildEvent
modifier|*
name|e
parameter_list|)
function_decl|;
name|void
name|addChildLayout
parameter_list|(
name|QLayout
modifier|*
name|l
parameter_list|)
function_decl|;
name|void
name|addChildWidget
parameter_list|(
name|QWidget
modifier|*
name|w
parameter_list|)
function_decl|;
name|QRect
name|alignmentRect
argument_list|(
specifier|const
name|QRect
operator|&
argument_list|)
decl|const
decl_stmt|;
name|protected
label|:
name|QLayout
argument_list|(
name|QLayoutPrivate
operator|&
name|d
argument_list|,
name|QLayout
operator|*
argument_list|,
name|QWidget
operator|*
argument_list|)
expr_stmt|;
name|private
label|:
name|Q_DISABLE_COPY
argument_list|(
argument|QLayout
argument_list|)
specifier|static
name|void
name|activateRecursiveHelper
parameter_list|(
name|QLayoutItem
modifier|*
name|item
parameter_list|)
function_decl|;
name|friend
name|class
name|QApplicationPrivate
decl_stmt|;
name|friend
name|class
name|QWidget
decl_stmt|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_comment
comment|//### support old includes
end_comment
begin_expr_stmt
name|QT_BEGIN_INCLUDE_NAMESPACE
include|#
directive|include
file|<QtWidgets/qboxlayout.h>
include|#
directive|include
file|<QtWidgets/qgridlayout.h>
name|QT_END_INCLUDE_NAMESPACE
name|QT_END_NAMESPACE
name|QT_END_HEADER
end_expr_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QLAYOUT_H
end_comment
end_unit
