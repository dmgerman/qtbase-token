begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the plugins module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QLIBINPUTKEYBOARD_P_H
end_ifndef
begin_define
DECL|macro|QLIBINPUTKEYBOARD_P_H
define|#
directive|define
name|QLIBINPUTKEYBOARD_P_H
end_define
begin_include
include|#
directive|include
file|<QtCore/QPoint>
end_include
begin_include
include|#
directive|include
file|<QtCore/QTimer>
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_XKBCOMMON_EVDEV
end_ifndef
begin_include
include|#
directive|include
file|<xkbcommon/xkbcommon.h>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|//
end_comment
begin_comment
comment|//  W A R N I N G
end_comment
begin_comment
comment|//  -------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// This file is not part of the Qt API.  It exists purely as an
end_comment
begin_comment
comment|// implementation detail.  This header file may change from version to
end_comment
begin_comment
comment|// version without notice, or even be removed.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// We mean it.
end_comment
begin_comment
comment|//
end_comment
begin_struct_decl
struct_decl|struct
name|libinput_event_keyboard
struct_decl|;
end_struct_decl
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
name|class
name|QLibInputKeyboard
range|:
name|public
name|QObject
block|{
name|Q_OBJECT
name|public
operator|:
name|QLibInputKeyboard
argument_list|()
block|;
operator|~
name|QLibInputKeyboard
argument_list|()
block|;
name|void
name|processKey
argument_list|(
name|libinput_event_keyboard
operator|*
name|e
argument_list|)
block|;
ifndef|#
directive|ifndef
name|QT_NO_XKBCOMMON_EVDEV
name|private
name|slots
operator|:
name|void
name|handleRepeat
argument_list|()
block|;
name|private
operator|:
name|int
name|keysymToQtKey
argument_list|(
argument|xkb_keysym_t key
argument_list|)
specifier|const
block|;
name|int
name|keysymToQtKey
argument_list|(
argument|xkb_keysym_t keysym
argument_list|,
argument|Qt::KeyboardModifiers *modifiers
argument_list|,
argument|const QString&text
argument_list|)
specifier|const
block|;
name|xkb_context
operator|*
name|m_ctx
block|;
name|xkb_keymap
operator|*
name|m_keymap
block|;
name|xkb_state
operator|*
name|m_state
block|;
name|xkb_mod_index_t
name|m_modindex
index|[
literal|4
index|]
block|;
name|QTimer
name|m_repeatTimer
block|;      struct
block|{
name|int
name|qtkey
block|;
name|Qt
operator|::
name|KeyboardModifiers
name|mods
block|;
name|int
name|nativeScanCode
block|;
name|int
name|virtualKey
block|;
name|int
name|nativeMods
block|;
name|QString
name|unicodeText
block|;
name|int
name|repeatCount
block|;     }
name|m_repeatData
block|;
endif|#
directive|endif
block|}
decl_stmt|;
end_decl_stmt
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
end_unit
