begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QOPENGLCOMPOSITOR_H
end_ifndef
begin_define
DECL|macro|QOPENGLCOMPOSITOR_H
define|#
directive|define
name|QOPENGLCOMPOSITOR_H
end_define
begin_comment
comment|//
end_comment
begin_comment
comment|//  W A R N I N G
end_comment
begin_comment
comment|//  -------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// This file is not part of the Qt API.  It exists purely as an
end_comment
begin_comment
comment|// implementation detail.  This header file may change from version to
end_comment
begin_comment
comment|// version without notice, or even be removed.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// We mean it.
end_comment
begin_comment
comment|//
end_comment
begin_include
include|#
directive|include
file|<QtCore/QTimer>
end_include
begin_include
include|#
directive|include
file|<QtGui/private/qopengltextureblitter_p.h>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
DECL|variable|QOpenGLContext
name|class
name|QOpenGLContext
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QWindow
name|class
name|QWindow
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QPlatformTextureList
name|class
name|QPlatformTextureList
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|QOpenGLCompositorWindow
block|{
name|public
label|:
name|virtual
name|QWindow
operator|*
name|sourceWindow
argument_list|()
specifier|const
operator|=
literal|0
expr_stmt|;
name|virtual
specifier|const
name|QPlatformTextureList
operator|*
name|textures
argument_list|()
specifier|const
operator|=
literal|0
expr_stmt|;
name|virtual
name|void
name|beginCompositing
parameter_list|()
block|{ }
name|virtual
name|void
name|endCompositing
parameter_list|()
block|{ }
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_decl_stmt
name|class
name|QOpenGLCompositor
range|:
name|public
name|QObject
block|{
name|Q_OBJECT
name|public
operator|:
specifier|static
name|QOpenGLCompositor
operator|*
name|instance
argument_list|()
block|;
specifier|static
name|void
name|destroy
argument_list|()
block|;
name|void
name|setTarget
argument_list|(
name|QOpenGLContext
operator|*
name|context
argument_list|,
name|QWindow
operator|*
name|window
argument_list|)
block|;
name|QOpenGLContext
operator|*
name|context
argument_list|()
specifier|const
block|{
return|return
name|m_context
return|;
block|}
name|QWindow
operator|*
name|targetWindow
argument_list|()
specifier|const
block|{
return|return
name|m_targetWindow
return|;
block|}
name|void
name|update
argument_list|()
block|;
name|QList
operator|<
name|QOpenGLCompositorWindow
operator|*
operator|>
name|windows
argument_list|()
specifier|const
block|{
return|return
name|m_windows
return|;
block|}
name|void
name|addWindow
argument_list|(
name|QOpenGLCompositorWindow
operator|*
name|window
argument_list|)
block|;
name|void
name|removeWindow
argument_list|(
name|QOpenGLCompositorWindow
operator|*
name|window
argument_list|)
block|;
name|void
name|moveToTop
argument_list|(
name|QOpenGLCompositorWindow
operator|*
name|window
argument_list|)
block|;
name|void
name|changeWindowIndex
argument_list|(
argument|QOpenGLCompositorWindow *window
argument_list|,
argument|int newIdx
argument_list|)
block|;
name|signals
operator|:
name|void
name|topWindowChanged
argument_list|(
name|QOpenGLCompositorWindow
operator|*
name|window
argument_list|)
block|;
name|private
name|slots
operator|:
name|void
name|renderAll
argument_list|()
block|;
name|private
operator|:
name|QOpenGLCompositor
argument_list|()
block|;
operator|~
name|QOpenGLCompositor
argument_list|()
block|;
name|void
name|render
argument_list|(
name|QOpenGLCompositorWindow
operator|*
name|window
argument_list|)
block|;
name|QOpenGLContext
operator|*
name|m_context
block|;
name|QWindow
operator|*
name|m_targetWindow
block|;
name|QTimer
name|m_updateTimer
block|;
name|QOpenGLTextureBlitter
name|m_blitter
block|;
name|QList
operator|<
name|QOpenGLCompositorWindow
operator|*
operator|>
name|m_windows
block|; }
decl_stmt|;
end_decl_stmt
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QOPENGLCOMPOSITOR_H
end_comment
end_unit
