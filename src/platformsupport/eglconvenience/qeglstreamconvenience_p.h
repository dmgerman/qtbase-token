begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QEGLSTREAMCONVENIENCE_H
end_ifndef
begin_define
DECL|macro|QEGLSTREAMCONVENIENCE_H
define|#
directive|define
name|QEGLSTREAMCONVENIENCE_H
end_define
begin_comment
comment|//
end_comment
begin_comment
comment|//  W A R N I N G
end_comment
begin_comment
comment|//  -------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// This file is not part of the Qt API.  It exists purely as an
end_comment
begin_comment
comment|// implementation detail.  This header file may change from version to
end_comment
begin_comment
comment|// version without notice, or even be removed.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// We mean it.
end_comment
begin_comment
comment|//
end_comment
begin_include
include|#
directive|include
file|<qglobal.h>
end_include
begin_include
include|#
directive|include
file|<EGL/egl.h>
end_include
begin_include
include|#
directive|include
file|<EGL/eglext.h>
end_include
begin_comment
comment|// This provides runtime EGLDevice/Output/Stream support even when eglext.h in
end_comment
begin_comment
comment|// the sysroot is not up-to-date.
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|EGL_VERSION_1_5
end_ifndef
begin_typedef
DECL|typedef|EGLAttrib
typedef|typedef
name|intptr_t
name|EGLAttrib
typedef|;
end_typedef
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|EGL_EXT_platform_base
end_ifndef
begin_typedef
DECL|typedef|PFNEGLGETPLATFORMDISPLAYEXTPROC
typedef|typedef
name|EGLDisplay
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLGETPLATFORMDISPLAYEXTPROC
function_decl|)
parameter_list|(
name|EGLenum
name|platform
parameter_list|,
name|void
modifier|*
name|native_display
parameter_list|,
specifier|const
name|EGLint
modifier|*
name|attrib_list
parameter_list|)
function_decl|;
end_typedef
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|EGL_EXT_device_base
end_ifndef
begin_typedef
DECL|typedef|EGLDeviceEXT
typedef|typedef
name|void
modifier|*
name|EGLDeviceEXT
typedef|;
end_typedef
begin_define
DECL|macro|EGL_NO_DEVICE_EXT
define|#
directive|define
name|EGL_NO_DEVICE_EXT
value|((EGLDeviceEXT)(0))
end_define
begin_typedef
DECL|typedef|PFNEGLQUERYDEVICESEXTPROC
typedef|typedef
name|EGLBoolean
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLQUERYDEVICESEXTPROC
function_decl|)
parameter_list|(
name|EGLint
name|max_devices
parameter_list|,
name|EGLDeviceEXT
modifier|*
name|devices
parameter_list|,
name|EGLint
modifier|*
name|num_devices
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|PFNEGLQUERYDEVICESTRINGEXTPROC
typedef|typedef
specifier|const
name|char
modifier|*
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLQUERYDEVICESTRINGEXTPROC
function_decl|)
parameter_list|(
name|EGLDeviceEXT
name|device
parameter_list|,
name|EGLint
name|name
parameter_list|)
function_decl|;
end_typedef
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|EGL_EXT_output_base
end_ifndef
begin_typedef
DECL|typedef|EGLOutputLayerEXT
typedef|typedef
name|void
modifier|*
name|EGLOutputLayerEXT
typedef|;
end_typedef
begin_typedef
DECL|typedef|EGLOutputPortEXT
typedef|typedef
name|void
modifier|*
name|EGLOutputPortEXT
typedef|;
end_typedef
begin_define
DECL|macro|EGL_NO_OUTPUT_LAYER_EXT
define|#
directive|define
name|EGL_NO_OUTPUT_LAYER_EXT
value|((EGLOutputLayerEXT)0)
end_define
begin_typedef
DECL|typedef|PFNEGLGETOUTPUTLAYERSEXTPROC
typedef|typedef
name|EGLBoolean
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLGETOUTPUTLAYERSEXTPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
specifier|const
name|EGLAttrib
modifier|*
name|attrib_list
parameter_list|,
name|EGLOutputLayerEXT
modifier|*
name|layers
parameter_list|,
name|EGLint
name|max_layers
parameter_list|,
name|EGLint
modifier|*
name|num_layers
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|PFNEGLGETOUTPUTPORTSEXTPROC
typedef|typedef
name|EGLBoolean
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLGETOUTPUTPORTSEXTPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
specifier|const
name|EGLAttrib
modifier|*
name|attrib_list
parameter_list|,
name|EGLOutputPortEXT
modifier|*
name|ports
parameter_list|,
name|EGLint
name|max_ports
parameter_list|,
name|EGLint
modifier|*
name|num_ports
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|PFNEGLOUTPUTLAYERATTRIBEXTPROC
typedef|typedef
name|EGLBoolean
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLOUTPUTLAYERATTRIBEXTPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLOutputLayerEXT
name|layer
parameter_list|,
name|EGLint
name|attribute
parameter_list|,
name|EGLAttrib
name|value
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|PFNEGLQUERYOUTPUTLAYERATTRIBEXTPROC
typedef|typedef
name|EGLBoolean
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLQUERYOUTPUTLAYERATTRIBEXTPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLOutputLayerEXT
name|layer
parameter_list|,
name|EGLint
name|attribute
parameter_list|,
name|EGLAttrib
modifier|*
name|value
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|PFNEGLQUERYOUTPUTLAYERSTRINGEXTPROC
typedef|typedef
specifier|const
name|char
modifier|*
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLQUERYOUTPUTLAYERSTRINGEXTPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLOutputLayerEXT
name|layer
parameter_list|,
name|EGLint
name|name
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|PFNEGLQUERYOUTPUTPORTATTRIBEXTPROC
typedef|typedef
name|EGLBoolean
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLQUERYOUTPUTPORTATTRIBEXTPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLOutputPortEXT
name|port
parameter_list|,
name|EGLint
name|attribute
parameter_list|,
name|EGLAttrib
modifier|*
name|value
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|PFNEGLQUERYOUTPUTPORTSTRINGEXTPROC
typedef|typedef
specifier|const
name|char
modifier|*
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLQUERYOUTPUTPORTSTRINGEXTPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLOutputPortEXT
name|port
parameter_list|,
name|EGLint
name|name
parameter_list|)
function_decl|;
end_typedef
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|EGL_KHR_stream
end_ifndef
begin_typedef
DECL|typedef|EGLStreamKHR
typedef|typedef
name|void
modifier|*
name|EGLStreamKHR
typedef|;
end_typedef
begin_typedef
DECL|typedef|EGLuint64KHR
typedef|typedef
name|quint64
name|EGLuint64KHR
typedef|;
end_typedef
begin_define
DECL|macro|EGL_NO_STREAM_KHR
define|#
directive|define
name|EGL_NO_STREAM_KHR
value|((EGLStreamKHR)0)
end_define
begin_typedef
DECL|typedef|PFNEGLCREATESTREAMKHRPROC
typedef|typedef
name|EGLStreamKHR
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLCREATESTREAMKHRPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
specifier|const
name|EGLint
modifier|*
name|attrib_list
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|PFNEGLDESTROYSTREAMKHRPROC
typedef|typedef
name|EGLBoolean
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLDESTROYSTREAMKHRPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLStreamKHR
name|stream
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|PFNEGLSTREAMATTRIBKHRPROC
typedef|typedef
name|EGLBoolean
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLSTREAMATTRIBKHRPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLStreamKHR
name|stream
parameter_list|,
name|EGLenum
name|attribute
parameter_list|,
name|EGLint
name|value
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|PFNEGLQUERYSTREAMKHRPROC
typedef|typedef
name|EGLBoolean
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLQUERYSTREAMKHRPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLStreamKHR
name|stream
parameter_list|,
name|EGLenum
name|attribute
parameter_list|,
name|EGLint
modifier|*
name|value
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|PFNEGLQUERYSTREAMU64KHRPROC
typedef|typedef
name|EGLBoolean
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLQUERYSTREAMU64KHRPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLStreamKHR
name|stream
parameter_list|,
name|EGLenum
name|attribute
parameter_list|,
name|EGLuint64KHR
modifier|*
name|value
parameter_list|)
function_decl|;
end_typedef
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|EGL_KHR_stream_producer_eglsurface
end_ifndef
begin_define
DECL|macro|EGL_STREAM_BIT_KHR
define|#
directive|define
name|EGL_STREAM_BIT_KHR
value|0x0800
end_define
begin_typedef
DECL|typedef|PFNEGLCREATESTREAMPRODUCERSURFACEKHRPROC
typedef|typedef
name|EGLSurface
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLCREATESTREAMPRODUCERSURFACEKHRPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLConfig
name|config
parameter_list|,
name|EGLStreamKHR
name|stream
parameter_list|,
specifier|const
name|EGLint
modifier|*
name|attrib_list
parameter_list|)
function_decl|;
end_typedef
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|EGL_KHR_stream_cross_process_fd
end_ifndef
begin_typedef
DECL|typedef|EGLNativeFileDescriptorKHR
typedef|typedef
name|int
name|EGLNativeFileDescriptorKHR
typedef|;
end_typedef
begin_define
DECL|macro|EGL_NO_FILE_DESCRIPTOR_KHR
define|#
directive|define
name|EGL_NO_FILE_DESCRIPTOR_KHR
value|((EGLNativeFileDescriptorKHR)(-1))
end_define
begin_typedef
DECL|typedef|PFNEGLGETSTREAMFILEDESCRIPTORKHRPROC
typedef|typedef
name|EGLNativeFileDescriptorKHR
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLGETSTREAMFILEDESCRIPTORKHRPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLStreamKHR
name|stream
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|PFNEGLCREATESTREAMFROMFILEDESCRIPTORKHRPROC
typedef|typedef
name|EGLStreamKHR
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLCREATESTREAMFROMFILEDESCRIPTORKHRPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLNativeFileDescriptorKHR
name|file_descriptor
parameter_list|)
function_decl|;
end_typedef
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|EGL_KHR_stream_consumer_gltexture
end_ifndef
begin_typedef
DECL|typedef|PFNEGLSTREAMCONSUMERGLTEXTUREEXTERNALKHRPROC
typedef|typedef
name|EGLBoolean
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLSTREAMCONSUMERGLTEXTUREEXTERNALKHRPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLStreamKHR
name|stream
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|PFNEGLSTREAMCONSUMERACQUIREKHRPROC
typedef|typedef
name|EGLBoolean
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLSTREAMCONSUMERACQUIREKHRPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLStreamKHR
name|stream
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|PFNEGLSTREAMCONSUMERRELEASEKHRPROC
typedef|typedef
name|EGLBoolean
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLSTREAMCONSUMERRELEASEKHRPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLStreamKHR
name|stream
parameter_list|)
function_decl|;
end_typedef
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|EGL_EXT_stream_consumer_egloutput
end_ifndef
begin_typedef
DECL|typedef|PFNEGLSTREAMCONSUMEROUTPUTEXTPROC
typedef|typedef
name|EGLBoolean
function_decl|(
name|EGLAPIENTRYP
name|PFNEGLSTREAMCONSUMEROUTPUTEXTPROC
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLStreamKHR
name|stream
parameter_list|,
name|EGLOutputLayerEXT
name|layer
parameter_list|)
function_decl|;
end_typedef
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|EGL_EXT_platform_device
end_ifndef
begin_define
DECL|macro|EGL_PLATFORM_DEVICE_EXT
define|#
directive|define
name|EGL_PLATFORM_DEVICE_EXT
value|0x313F
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|EGL_EXT_device_drm
end_ifndef
begin_define
DECL|macro|EGL_DRM_DEVICE_FILE_EXT
define|#
directive|define
name|EGL_DRM_DEVICE_FILE_EXT
value|0x3233
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|EGL_EXT_output_drm
end_ifndef
begin_define
DECL|macro|EGL_DRM_CRTC_EXT
define|#
directive|define
name|EGL_DRM_CRTC_EXT
value|0x3234
end_define
begin_define
DECL|macro|EGL_DRM_PLANE_EXT
define|#
directive|define
name|EGL_DRM_PLANE_EXT
value|0x3235
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
name|class
name|QEGLStreamConvenience
block|{
name|public
label|:
name|QEGLStreamConvenience
argument_list|()
expr_stmt|;
name|void
name|initialize
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|)
function_decl|;
name|PFNEGLGETPLATFORMDISPLAYEXTPROC
name|get_platform_display
decl_stmt|;
name|PFNEGLQUERYDEVICESEXTPROC
name|query_devices
decl_stmt|;
name|PFNEGLQUERYDEVICESTRINGEXTPROC
name|query_device_string
decl_stmt|;
name|PFNEGLCREATESTREAMKHRPROC
name|create_stream
decl_stmt|;
name|PFNEGLDESTROYSTREAMKHRPROC
name|destroy_stream
decl_stmt|;
name|PFNEGLSTREAMATTRIBKHRPROC
name|stream_attrib
decl_stmt|;
name|PFNEGLQUERYSTREAMKHRPROC
name|query_stream
decl_stmt|;
name|PFNEGLQUERYSTREAMU64KHRPROC
name|query_stream_u64
decl_stmt|;
name|PFNEGLCREATESTREAMPRODUCERSURFACEKHRPROC
name|create_stream_producer_surface
decl_stmt|;
name|PFNEGLSTREAMCONSUMEROUTPUTEXTPROC
name|stream_consumer_output
decl_stmt|;
name|PFNEGLGETOUTPUTLAYERSEXTPROC
name|get_output_layers
decl_stmt|;
name|PFNEGLGETOUTPUTPORTSEXTPROC
name|get_output_ports
decl_stmt|;
name|PFNEGLOUTPUTLAYERATTRIBEXTPROC
name|output_layer_attrib
decl_stmt|;
name|PFNEGLQUERYOUTPUTLAYERATTRIBEXTPROC
name|query_output_layer_attrib
decl_stmt|;
name|PFNEGLQUERYOUTPUTLAYERSTRINGEXTPROC
name|query_output_layer_string
decl_stmt|;
name|PFNEGLQUERYOUTPUTPORTATTRIBEXTPROC
name|query_output_port_attrib
decl_stmt|;
name|PFNEGLQUERYOUTPUTPORTSTRINGEXTPROC
name|query_output_port_string
decl_stmt|;
name|PFNEGLGETSTREAMFILEDESCRIPTORKHRPROC
name|get_stream_file_descriptor
decl_stmt|;
name|PFNEGLCREATESTREAMFROMFILEDESCRIPTORKHRPROC
name|create_stream_from_file_descriptor
decl_stmt|;
name|PFNEGLSTREAMCONSUMERGLTEXTUREEXTERNALKHRPROC
name|stream_consumer_gltexture
decl_stmt|;
name|PFNEGLSTREAMCONSUMERACQUIREKHRPROC
name|stream_consumer_acquire
decl_stmt|;
name|PFNEGLSTREAMCONSUMERRELEASEKHRPROC
name|stream_consumer_release
decl_stmt|;
name|bool
name|initialized
decl_stmt|;
name|bool
name|has_egl_platform_device
decl_stmt|;
name|bool
name|has_egl_device_base
decl_stmt|;
name|bool
name|has_egl_stream
decl_stmt|;
name|bool
name|has_egl_stream_producer_eglsurface
decl_stmt|;
name|bool
name|has_egl_stream_consumer_egloutput
decl_stmt|;
name|bool
name|has_egl_output_drm
decl_stmt|;
name|bool
name|has_egl_output_base
decl_stmt|;
name|bool
name|has_egl_stream_cross_process_fd
decl_stmt|;
name|bool
name|has_egl_stream_consumer_gltexture
decl_stmt|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
end_unit
