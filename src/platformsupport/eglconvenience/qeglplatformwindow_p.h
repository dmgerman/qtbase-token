begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia. For licensing terms and ** conditions see http://qt.digia.com/licensing. For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights. These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QEGLPLATFORMWINDOW_H
end_ifndef
begin_define
DECL|macro|QEGLPLATFORMWINDOW_H
define|#
directive|define
name|QEGLPLATFORMWINDOW_H
end_define
begin_comment
comment|//
end_comment
begin_comment
comment|//  W A R N I N G
end_comment
begin_comment
comment|//  -------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// This file is not part of the Qt API.  It exists purely as an
end_comment
begin_comment
comment|// implementation detail.  This header file may change from version to
end_comment
begin_comment
comment|// version without notice, or even be removed.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// We mean it.
end_comment
begin_comment
comment|//
end_comment
begin_include
include|#
directive|include
file|<qpa/qplatformwindow.h>
end_include
begin_include
include|#
directive|include
file|<QtPlatformSupport/private/qopenglcompositor_p.h>
end_include
begin_include
include|#
directive|include
file|<EGL/egl.h>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
DECL|variable|QOpenGLCompositorBackingStore
name|class
name|QOpenGLCompositorBackingStore
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QPlatformTextureList
name|class
name|QPlatformTextureList
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QPlatformWindow
name|class
name|QEGLPlatformWindow
range|:
name|public
name|QPlatformWindow
decl_stmt|,
name|public
name|QOpenGLCompositorWindow
block|{
name|public
label|:
name|QEGLPlatformWindow
argument_list|(
name|QWindow
operator|*
name|w
argument_list|)
expr_stmt|;
name|virtual
name|void
name|create
parameter_list|()
function_decl|;
name|QOpenGLCompositorBackingStore
modifier|*
name|backingStore
parameter_list|()
block|{
return|return
name|m_backingStore
return|;
block|}
name|void
name|setBackingStore
parameter_list|(
name|QOpenGLCompositorBackingStore
modifier|*
name|backingStore
parameter_list|)
block|{
name|m_backingStore
operator|=
name|backingStore
expr_stmt|;
block|}
name|bool
name|isRaster
argument_list|()
specifier|const
expr_stmt|;
name|QWindow
operator|*
name|sourceWindow
argument_list|()
specifier|const
name|Q_DECL_OVERRIDE
expr_stmt|;
specifier|const
name|QPlatformTextureList
operator|*
name|textures
argument_list|()
specifier|const
name|Q_DECL_OVERRIDE
expr_stmt|;
name|void
name|endCompositing
argument_list|()
name|Q_DECL_OVERRIDE
expr_stmt|;
name|WId
name|winId
argument_list|()
specifier|const
name|Q_DECL_OVERRIDE
expr_stmt|;
name|void
name|setOpacity
argument_list|(
name|qreal
name|opacity
argument_list|)
name|Q_DECL_OVERRIDE
decl_stmt|;
name|virtual
name|EGLNativeWindowType
name|eglWindow
argument_list|()
specifier|const
operator|=
literal|0
expr_stmt|;
name|private
label|:
name|QOpenGLCompositorBackingStore
modifier|*
name|m_backingStore
decl_stmt|;
name|bool
name|m_raster
decl_stmt|;
name|WId
name|m_winId
decl_stmt|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QEGLPLATFORMWINDOW_H
end_comment
end_unit
