begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|Q_SPI_STRUCT_MARSHALLERS_H
end_ifndef
begin_define
DECL|macro|Q_SPI_STRUCT_MARSHALLERS_H
define|#
directive|define
name|Q_SPI_STRUCT_MARSHALLERS_H
end_define
begin_comment
comment|//
end_comment
begin_comment
comment|//  W A R N I N G
end_comment
begin_comment
comment|//  -------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// This file is not part of the Qt API.  It exists purely as an
end_comment
begin_comment
comment|// implementation detail.  This header file may change from version to
end_comment
begin_comment
comment|// version without notice, or even be removed.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// We mean it.
end_comment
begin_comment
comment|//
end_comment
begin_include
include|#
directive|include
file|<QtCore/qlist.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qpair.h>
end_include
begin_include
include|#
directive|include
file|<QtDBus/QDBusArgument>
end_include
begin_include
include|#
directive|include
file|<QtDBus/QDBusConnection>
end_include
begin_include
include|#
directive|include
file|<QtDBus/QDBusObjectPath>
end_include
begin_macro
name|QT_BEGIN_NAMESPACE
end_macro
begin_typedef
DECL|typedef|QSpiIntList
typedef|typedef
name|QList
operator|<
name|int
operator|>
name|QSpiIntList
expr_stmt|;
end_typedef
begin_typedef
DECL|typedef|QSpiUIntList
typedef|typedef
name|QList
operator|<
name|uint
operator|>
name|QSpiUIntList
expr_stmt|;
end_typedef
begin_comment
comment|// FIXME: make this copy on write
end_comment
begin_struct
DECL|struct|QSpiObjectReference
struct|struct
name|QSpiObjectReference
block|{
DECL|member|service
name|QString
name|service
decl_stmt|;
DECL|member|path
name|QDBusObjectPath
name|path
decl_stmt|;
name|QSpiObjectReference
argument_list|()
expr_stmt|;
DECL|function|QSpiObjectReference
name|QSpiObjectReference
argument_list|(
specifier|const
name|QDBusConnection
operator|&
name|connection
argument_list|,
specifier|const
name|QDBusObjectPath
operator|&
name|path
argument_list|)
operator|:
name|service
argument_list|(
name|connection
operator|.
name|baseService
argument_list|()
argument_list|)
operator|,
name|path
argument_list|(
argument|path
argument_list|)
block|{}
block|}
struct|;
end_struct
begin_expr_stmt
name|QDBusArgument
operator|&
name|operator
operator|<<
operator|(
name|QDBusArgument
operator|&
name|argument
operator|,
specifier|const
name|QSpiObjectReference
operator|&
name|address
operator|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
specifier|const
name|QDBusArgument
operator|&
name|operator
operator|>>
operator|(
specifier|const
name|QDBusArgument
operator|&
name|argument
operator|,
name|QSpiObjectReference
operator|&
name|address
operator|)
expr_stmt|;
end_expr_stmt
begin_typedef
DECL|typedef|QSpiObjectReferenceArray
typedef|typedef
name|QList
operator|<
name|QSpiObjectReference
operator|>
name|QSpiObjectReferenceArray
expr_stmt|;
end_typedef
begin_struct
DECL|struct|QSpiAccessibleCacheItem
struct|struct
name|QSpiAccessibleCacheItem
block|{
DECL|member|path
name|QSpiObjectReference
name|path
decl_stmt|;
DECL|member|application
name|QSpiObjectReference
name|application
decl_stmt|;
DECL|member|parent
name|QSpiObjectReference
name|parent
decl_stmt|;
DECL|member|children
name|QList
operator|<
name|QSpiObjectReference
operator|>
name|children
expr_stmt|;
DECL|member|supportedInterfaces
name|QStringList
name|supportedInterfaces
decl_stmt|;
DECL|member|name
name|QString
name|name
decl_stmt|;
DECL|member|role
name|uint
name|role
decl_stmt|;
DECL|member|description
name|QString
name|description
decl_stmt|;
DECL|member|state
name|QSpiUIntList
name|state
decl_stmt|;
block|}
struct|;
end_struct
begin_typedef
DECL|typedef|QSpiAccessibleCacheArray
typedef|typedef
name|QList
operator|<
name|QSpiAccessibleCacheItem
operator|>
name|QSpiAccessibleCacheArray
expr_stmt|;
end_typedef
begin_expr_stmt
name|QDBusArgument
operator|&
name|operator
operator|<<
operator|(
name|QDBusArgument
operator|&
name|argument
operator|,
specifier|const
name|QSpiAccessibleCacheItem
operator|&
name|item
operator|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
specifier|const
name|QDBusArgument
operator|&
name|operator
operator|>>
operator|(
specifier|const
name|QDBusArgument
operator|&
name|argument
operator|,
name|QSpiAccessibleCacheItem
operator|&
name|item
operator|)
expr_stmt|;
end_expr_stmt
begin_struct
DECL|struct|QSpiAction
struct|struct
name|QSpiAction
block|{
DECL|member|name
name|QString
name|name
decl_stmt|;
DECL|member|description
name|QString
name|description
decl_stmt|;
DECL|member|keyBinding
name|QString
name|keyBinding
decl_stmt|;
block|}
struct|;
end_struct
begin_typedef
DECL|typedef|QSpiActionArray
typedef|typedef
name|QList
operator|<
name|QSpiAction
operator|>
name|QSpiActionArray
expr_stmt|;
end_typedef
begin_expr_stmt
name|QDBusArgument
operator|&
name|operator
operator|<<
operator|(
name|QDBusArgument
operator|&
name|argument
operator|,
specifier|const
name|QSpiAction
operator|&
name|action
operator|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
specifier|const
name|QDBusArgument
operator|&
name|operator
operator|>>
operator|(
specifier|const
name|QDBusArgument
operator|&
name|argument
operator|,
name|QSpiAction
operator|&
name|action
operator|)
expr_stmt|;
end_expr_stmt
begin_struct
DECL|struct|QSpiEventListener
struct|struct
name|QSpiEventListener
block|{
DECL|member|listenerAddress
name|QString
name|listenerAddress
decl_stmt|;
DECL|member|eventName
name|QString
name|eventName
decl_stmt|;
block|}
struct|;
end_struct
begin_typedef
DECL|typedef|QSpiEventListenerArray
typedef|typedef
name|QList
operator|<
name|QSpiEventListener
operator|>
name|QSpiEventListenerArray
expr_stmt|;
end_typedef
begin_expr_stmt
name|QDBusArgument
operator|&
name|operator
operator|<<
operator|(
name|QDBusArgument
operator|&
name|argument
operator|,
specifier|const
name|QSpiEventListener
operator|&
name|action
operator|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
specifier|const
name|QDBusArgument
operator|&
name|operator
operator|>>
operator|(
specifier|const
name|QDBusArgument
operator|&
name|argument
operator|,
name|QSpiEventListener
operator|&
name|action
operator|)
expr_stmt|;
end_expr_stmt
begin_typedef
DECL|typedef|QSpiRelationArrayEntry
typedef|typedef
name|QPair
operator|<
name|unsigned
name|int
operator|,
name|QList
operator|<
name|QSpiObjectReference
operator|>
expr|>
name|QSpiRelationArrayEntry
expr_stmt|;
end_typedef
begin_typedef
DECL|typedef|QSpiRelationArray
typedef|typedef
name|QList
operator|<
name|QSpiRelationArrayEntry
operator|>
name|QSpiRelationArray
expr_stmt|;
end_typedef
begin_comment
comment|//a(iisv)
end_comment
begin_struct
DECL|struct|QSpiTextRange
struct|struct
name|QSpiTextRange
block|{
DECL|member|startOffset
name|int
name|startOffset
decl_stmt|;
DECL|member|endOffset
name|int
name|endOffset
decl_stmt|;
DECL|member|contents
name|QString
name|contents
decl_stmt|;
DECL|member|v
name|QVariant
name|v
decl_stmt|;
block|}
struct|;
end_struct
begin_typedef
DECL|typedef|QSpiTextRangeList
typedef|typedef
name|QList
operator|<
name|QSpiTextRange
operator|>
name|QSpiTextRangeList
expr_stmt|;
end_typedef
begin_typedef
DECL|typedef|QString
DECL|typedef|QSpiAttributeSet
typedef|typedef
name|QMap
operator|<
name|QString
operator|,
name|QString
operator|>
name|QSpiAttributeSet
expr_stmt|;
end_typedef
begin_enum
DECL|enum|QSpiAppUpdateType
enum|enum
name|QSpiAppUpdateType
block|{
DECL|enumerator|QSPI_APP_UPDATE_ADDED
name|QSPI_APP_UPDATE_ADDED
init|=
literal|0
block|,
DECL|enumerator|QSPI_APP_UPDATE_REMOVED
name|QSPI_APP_UPDATE_REMOVED
init|=
literal|1
block|}
enum|;
end_enum
begin_struct
DECL|struct|QSpiAppUpdate
struct|struct
name|QSpiAppUpdate
block|{
DECL|member|type
name|int
name|type
decl_stmt|;
comment|/* Is an application added or removed */
DECL|member|address
name|QString
name|address
decl_stmt|;
comment|/* D-Bus address of application added or removed */
block|}
struct|;
end_struct
begin_expr_stmt
name|QDBusArgument
operator|&
name|operator
operator|<<
operator|(
name|QDBusArgument
operator|&
name|argument
operator|,
specifier|const
name|QSpiAppUpdate
operator|&
name|update
operator|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
specifier|const
name|QDBusArgument
operator|&
name|operator
operator|>>
operator|(
specifier|const
name|QDBusArgument
operator|&
name|argument
operator|,
name|QSpiAppUpdate
operator|&
name|update
operator|)
expr_stmt|;
end_expr_stmt
begin_struct
DECL|struct|QSpiDeviceEvent
struct|struct
name|QSpiDeviceEvent
block|{
DECL|member|type
name|unsigned
name|int
name|type
decl_stmt|;
DECL|member|id
name|int
name|id
decl_stmt|;
DECL|member|hardwareCode
name|int
name|hardwareCode
decl_stmt|;
DECL|member|modifiers
name|int
name|modifiers
decl_stmt|;
DECL|member|timestamp
name|int
name|timestamp
decl_stmt|;
DECL|member|text
name|QString
name|text
decl_stmt|;
DECL|member|isText
name|bool
name|isText
decl_stmt|;
block|}
struct|;
end_struct
begin_expr_stmt
name|QDBusArgument
operator|&
name|operator
operator|<<
operator|(
name|QDBusArgument
operator|&
name|argument
operator|,
specifier|const
name|QSpiDeviceEvent
operator|&
name|event
operator|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
specifier|const
name|QDBusArgument
operator|&
name|operator
operator|>>
operator|(
specifier|const
name|QDBusArgument
operator|&
name|argument
operator|,
name|QSpiDeviceEvent
operator|&
name|event
operator|)
expr_stmt|;
end_expr_stmt
begin_function_decl
name|void
name|qSpiInitializeStructTypes
parameter_list|()
function_decl|;
end_function_decl
begin_decl_stmt
name|QT_END_NAMESPACE
name|Q_DECLARE_METATYPE
argument_list|(
name|QSpiIntList
argument_list|)
name|Q_DECLARE_METATYPE
argument_list|(
name|QSpiUIntList
argument_list|)
name|Q_DECLARE_METATYPE
argument_list|(
name|QSpiObjectReference
argument_list|)
name|Q_DECLARE_METATYPE
argument_list|(
name|QSpiObjectReferenceArray
argument_list|)
name|Q_DECLARE_METATYPE
argument_list|(
name|QSpiAccessibleCacheItem
argument_list|)
name|Q_DECLARE_METATYPE
argument_list|(
name|QSpiAccessibleCacheArray
argument_list|)
name|Q_DECLARE_METATYPE
argument_list|(
name|QSpiAction
argument_list|)
name|Q_DECLARE_METATYPE
argument_list|(
name|QSpiActionArray
argument_list|)
name|Q_DECLARE_METATYPE
argument_list|(
name|QSpiEventListener
argument_list|)
name|Q_DECLARE_METATYPE
argument_list|(
name|QSpiEventListenerArray
argument_list|)
name|Q_DECLARE_METATYPE
argument_list|(
name|QSpiRelationArrayEntry
argument_list|)
name|Q_DECLARE_METATYPE
argument_list|(
name|QSpiRelationArray
argument_list|)
name|Q_DECLARE_METATYPE
argument_list|(
name|QSpiTextRange
argument_list|)
name|Q_DECLARE_METATYPE
argument_list|(
name|QSpiTextRangeList
argument_list|)
name|Q_DECLARE_METATYPE
argument_list|(
name|QSpiAttributeSet
argument_list|)
name|Q_DECLARE_METATYPE
argument_list|(
name|QSpiAppUpdate
argument_list|)
name|Q_DECLARE_METATYPE
argument_list|(
name|QSpiDeviceEvent
argument_list|)
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/* Q_SPI_STRUCT_MARSHALLERS_H */
end_comment
end_unit
