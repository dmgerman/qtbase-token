begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 3 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL3 included in the ** packaging of this file. Please review the following information to ** ensure the GNU Lesser General Public License version 3 requirements ** will be met: https://www.gnu.org/licenses/lgpl-3.0.html. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 2.0 or (at your option) the GNU General ** Public license version 3 or any later version approved by the KDE Free ** Qt Foundation. The licenses are as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL2 and LICENSE.GPL3 ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-2.0.html and ** https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"bridge_p.h"
end_include
begin_include
include|#
directive|include
file|<atspi/atspi-constants.h>
end_include
begin_include
include|#
directive|include
file|<qstring.h>
end_include
begin_include
include|#
directive|include
file|"atspiadaptor_p.h"
end_include
begin_include
include|#
directive|include
file|"cache_p.h"
end_include
begin_include
include|#
directive|include
file|"constant_mappings_p.h"
end_include
begin_include
include|#
directive|include
file|"dbusconnection_p.h"
end_include
begin_include
include|#
directive|include
file|"struct_marshallers_p.h"
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_ACCESSIBILITY
end_ifndef
begin_include
include|#
directive|include
file|"deviceeventcontroller_adaptor.h"
end_include
begin_macro
name|QT_BEGIN_NAMESPACE
end_macro
begin_comment
comment|/*!     \class QSpiAccessibleBridge     \internal */
end_comment
begin_constructor
DECL|function|QSpiAccessibleBridge
name|QSpiAccessibleBridge
operator|::
name|QSpiAccessibleBridge
parameter_list|()
member_init_list|:
name|cache
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|dec
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|dbusAdaptor
argument_list|(
literal|0
argument_list|)
block|{
name|dbusConnection
operator|=
operator|new
name|DBusConnection
argument_list|()
expr_stmt|;
name|connect
argument_list|(
name|dbusConnection
argument_list|,
name|SIGNAL
argument_list|(
name|enabledChanged
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|enabledChanged
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_function
DECL|function|enabledChanged
name|void
name|QSpiAccessibleBridge
operator|::
name|enabledChanged
parameter_list|(
name|bool
name|enabled
parameter_list|)
block|{
name|setActive
argument_list|(
name|enabled
argument_list|)
expr_stmt|;
name|updateStatus
argument_list|()
expr_stmt|;
block|}
end_function
begin_destructor
DECL|function|~QSpiAccessibleBridge
name|QSpiAccessibleBridge
operator|::
name|~
name|QSpiAccessibleBridge
parameter_list|()
block|{
operator|delete
name|dbusConnection
expr_stmt|;
block|}
end_destructor
begin_comment
comment|// Qt currently doesn't delete plugins.
end_comment
begin_function
DECL|function|dBusConnection
name|QDBusConnection
name|QSpiAccessibleBridge
operator|::
name|dBusConnection
parameter_list|()
specifier|const
block|{
return|return
name|dbusConnection
operator|->
name|connection
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|updateStatus
name|void
name|QSpiAccessibleBridge
operator|::
name|updateStatus
parameter_list|()
block|{
comment|// create the adaptor to handle everything if we are in enabled state
if|if
condition|(
operator|!
name|dbusAdaptor
operator|&&
name|isActive
argument_list|()
condition|)
block|{
name|qSpiInitializeStructTypes
argument_list|()
expr_stmt|;
name|initializeConstantMappings
argument_list|()
expr_stmt|;
name|cache
operator|=
operator|new
name|QSpiDBusCache
argument_list|(
name|dbusConnection
operator|->
name|connection
argument_list|()
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|dec
operator|=
operator|new
name|DeviceEventControllerAdaptor
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|dbusConnection
operator|->
name|connection
argument_list|()
operator|.
name|registerObject
argument_list|(
name|QLatin1String
argument_list|(
name|ATSPI_DBUS_PATH_DEC
argument_list|)
argument_list|,
name|this
argument_list|,
name|QDBusConnection
operator|::
name|ExportAdaptors
argument_list|)
expr_stmt|;
name|dbusAdaptor
operator|=
operator|new
name|AtSpiAdaptor
argument_list|(
name|dbusConnection
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|dbusConnection
operator|->
name|connection
argument_list|()
operator|.
name|registerVirtualObject
argument_list|(
name|QLatin1String
argument_list|(
name|QSPI_OBJECT_PATH_ACCESSIBLE
argument_list|)
argument_list|,
name|dbusAdaptor
argument_list|,
name|QDBusConnection
operator|::
name|SubPath
argument_list|)
expr_stmt|;
name|dbusAdaptor
operator|->
name|registerApplication
argument_list|()
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|notifyAccessibilityUpdate
name|void
name|QSpiAccessibleBridge
operator|::
name|notifyAccessibilityUpdate
parameter_list|(
name|QAccessibleEvent
modifier|*
name|event
parameter_list|)
block|{
if|if
condition|(
operator|!
name|dbusAdaptor
condition|)
return|return;
if|if
condition|(
name|isActive
argument_list|()
operator|&&
name|event
operator|->
name|accessibleInterface
argument_list|()
condition|)
name|dbusAdaptor
operator|->
name|notify
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
end_function
begin_struct
DECL|struct|RoleMapping
struct|struct
name|RoleMapping
block|{
DECL|member|role
name|QAccessible
operator|::
name|Role
name|role
decl_stmt|;
DECL|member|spiRole
name|AtspiRole
name|spiRole
decl_stmt|;
DECL|member|name
specifier|const
name|char
modifier|*
name|name
decl_stmt|;
block|}
struct|;
end_struct
begin_decl_stmt
DECL|variable|map
specifier|static
name|RoleMapping
name|map
index|[]
init|=
block|{
comment|//: Role of an accessible object - the object is in an invalid state or could not be constructed
block|{
name|QAccessible
operator|::
name|NoRole
block|,
name|ATSPI_ROLE_INVALID
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"invalid role"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|TitleBar
block|,
name|ATSPI_ROLE_TEXT
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"title bar"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|MenuBar
block|,
name|ATSPI_ROLE_MENU_BAR
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"menu bar"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|ScrollBar
block|,
name|ATSPI_ROLE_SCROLL_BAR
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"scroll bar"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object - the grip is usually used for resizing another object
block|{
name|QAccessible
operator|::
name|Grip
block|,
name|ATSPI_ROLE_UNKNOWN
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"grip"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|Sound
block|,
name|ATSPI_ROLE_UNKNOWN
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"sound"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|Cursor
block|,
name|ATSPI_ROLE_UNKNOWN
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"cursor"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|Caret
block|,
name|ATSPI_ROLE_UNKNOWN
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"text caret"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|AlertMessage
block|,
name|ATSPI_ROLE_ALERT
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"alert message"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object: a window with frame and title
block|{
name|QAccessible
operator|::
name|Window
block|,
name|ATSPI_ROLE_FRAME
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"frame"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|Client
block|,
name|ATSPI_ROLE_FILLER
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"filler"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|PopupMenu
block|,
name|ATSPI_ROLE_POPUP_MENU
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"popup menu"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|MenuItem
block|,
name|ATSPI_ROLE_MENU_ITEM
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"menu item"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|ToolTip
block|,
name|ATSPI_ROLE_TOOL_TIP
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"tool tip"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|Application
block|,
name|ATSPI_ROLE_APPLICATION
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"application"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|Document
block|,
name|ATSPI_ROLE_DOCUMENT_FRAME
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"document"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|Pane
block|,
name|ATSPI_ROLE_PANEL
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"panel"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|Chart
block|,
name|ATSPI_ROLE_CHART
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"chart"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|Dialog
block|,
name|ATSPI_ROLE_DIALOG
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"dialog"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|Border
block|,
name|ATSPI_ROLE_FRAME
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"frame"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|Grouping
block|,
name|ATSPI_ROLE_PANEL
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"panel"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|Separator
block|,
name|ATSPI_ROLE_SEPARATOR
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"separator"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|ToolBar
block|,
name|ATSPI_ROLE_TOOL_BAR
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"tool bar"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|StatusBar
block|,
name|ATSPI_ROLE_STATUS_BAR
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"status bar"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|Table
block|,
name|ATSPI_ROLE_TABLE
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"table"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object - part of a table
block|{
name|QAccessible
operator|::
name|ColumnHeader
block|,
name|ATSPI_ROLE_TABLE_COLUMN_HEADER
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"column header"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object - part of a table
block|{
name|QAccessible
operator|::
name|RowHeader
block|,
name|ATSPI_ROLE_TABLE_ROW_HEADER
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"row header"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object - part of a table
block|{
name|QAccessible
operator|::
name|Column
block|,
name|ATSPI_ROLE_TABLE_CELL
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"column"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object - part of a table
block|{
name|QAccessible
operator|::
name|Row
block|,
name|ATSPI_ROLE_TABLE_ROW
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"row"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object - part of a table
block|{
name|QAccessible
operator|::
name|Cell
block|,
name|ATSPI_ROLE_TABLE_CELL
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"cell"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|Link
block|,
name|ATSPI_ROLE_LINK
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"link"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|HelpBalloon
block|,
name|ATSPI_ROLE_DIALOG
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"help balloon"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object - a helper dialog
block|{
name|QAccessible
operator|::
name|Assistant
block|,
name|ATSPI_ROLE_DIALOG
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"assistant"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|List
block|,
name|ATSPI_ROLE_LIST
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"list"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|ListItem
block|,
name|ATSPI_ROLE_LIST_ITEM
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"list item"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|Tree
block|,
name|ATSPI_ROLE_TREE
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"tree"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|TreeItem
block|,
name|ATSPI_ROLE_TABLE_CELL
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"tree item"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|PageTab
block|,
name|ATSPI_ROLE_PAGE_TAB
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"page tab"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|PropertyPage
block|,
name|ATSPI_ROLE_PAGE_TAB
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"property page"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|Indicator
block|,
name|ATSPI_ROLE_UNKNOWN
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"indicator"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|Graphic
block|,
name|ATSPI_ROLE_IMAGE
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"graphic"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|StaticText
block|,
name|ATSPI_ROLE_LABEL
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"label"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|EditableText
block|,
name|ATSPI_ROLE_TEXT
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"text"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|PushButton
block|,
name|ATSPI_ROLE_PUSH_BUTTON
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"push button"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|CheckBox
block|,
name|ATSPI_ROLE_CHECK_BOX
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"check box"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|RadioButton
block|,
name|ATSPI_ROLE_RADIO_BUTTON
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"radio button"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|ComboBox
block|,
name|ATSPI_ROLE_COMBO_BOX
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"combo box"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|ProgressBar
block|,
name|ATSPI_ROLE_PROGRESS_BAR
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"progress bar"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|Dial
block|,
name|ATSPI_ROLE_DIAL
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"dial"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|HotkeyField
block|,
name|ATSPI_ROLE_TEXT
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"hotkey field"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|Slider
block|,
name|ATSPI_ROLE_SLIDER
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"slider"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|SpinBox
block|,
name|ATSPI_ROLE_SPIN_BUTTON
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"spin box"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|Canvas
block|,
name|ATSPI_ROLE_CANVAS
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"canvas"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|Animation
block|,
name|ATSPI_ROLE_ANIMATION
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"animation"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|Equation
block|,
name|ATSPI_ROLE_TEXT
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"equation"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|ButtonDropDown
block|,
name|ATSPI_ROLE_PUSH_BUTTON
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"button with drop down"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|ButtonMenu
block|,
name|ATSPI_ROLE_PUSH_BUTTON
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"button menu"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object - a button that expands a grid.
block|{
name|QAccessible
operator|::
name|ButtonDropGrid
block|,
name|ATSPI_ROLE_PUSH_BUTTON
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"button with drop down grid"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object - blank space between other objects.
block|{
name|QAccessible
operator|::
name|Whitespace
block|,
name|ATSPI_ROLE_FILLER
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"space"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|PageTabList
block|,
name|ATSPI_ROLE_PAGE_TAB_LIST
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"page tab list"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|Clock
block|,
name|ATSPI_ROLE_UNKNOWN
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"clock"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|Splitter
block|,
name|ATSPI_ROLE_SPLIT_PANE
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"splitter"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|LayeredPane
block|,
name|ATSPI_ROLE_LAYERED_PANE
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"layered pane"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|WebDocument
block|,
name|ATSPI_ROLE_DOCUMENT_WEB
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"web document"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|Paragraph
block|,
name|ATSPI_ROLE_PARAGRAPH
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"paragraph"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|Section
block|,
name|ATSPI_ROLE_SECTION
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"section"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|ColorChooser
block|,
name|ATSPI_ROLE_COLOR_CHOOSER
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"color chooser"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|Footer
block|,
name|ATSPI_ROLE_FOOTER
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"footer"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|Form
block|,
name|ATSPI_ROLE_FORM
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"form"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|Heading
block|,
name|ATSPI_ROLE_HEADING
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"heading"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|Note
block|,
name|ATSPI_ROLE_COMMENT
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"note"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|ComplementaryContent
block|,
name|ATSPI_ROLE_SECTION
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"complementary content"
argument_list|)
block|}
block|,
comment|//: Role of an accessible object
block|{
name|QAccessible
operator|::
name|UserRole
block|,
name|ATSPI_ROLE_UNKNOWN
block|,
name|QT_TRANSLATE_NOOP
argument_list|(
literal|"QSpiAccessibleBridge"
argument_list|,
literal|"unknown"
argument_list|)
block|}
block|}
decl_stmt|;
end_decl_stmt
begin_function
DECL|function|initializeConstantMappings
name|void
name|QSpiAccessibleBridge
operator|::
name|initializeConstantMappings
parameter_list|()
block|{
for|for
control|(
name|uint
name|i
init|=
literal|0
init|;
name|i
operator|<
sizeof|sizeof
argument_list|(
name|map
argument_list|)
operator|/
sizeof|sizeof
argument_list|(
name|RoleMapping
argument_list|)
condition|;
operator|++
name|i
control|)
name|qSpiRoleMapping
operator|.
name|insert
argument_list|(
name|map
index|[
name|i
index|]
operator|.
name|role
argument_list|,
name|RoleNames
argument_list|(
name|map
index|[
name|i
index|]
operator|.
name|spiRole
argument_list|,
name|QLatin1String
argument_list|(
name|map
index|[
name|i
index|]
operator|.
name|name
argument_list|)
argument_list|,
name|tr
argument_list|(
name|map
index|[
name|i
index|]
operator|.
name|name
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|//QT_NO_ACCESSIBILITY
end_comment
end_unit
