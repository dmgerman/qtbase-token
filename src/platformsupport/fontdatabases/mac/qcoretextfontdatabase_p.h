begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 3 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL3 included in the ** packaging of this file. Please review the following information to ** ensure the GNU Lesser General Public License version 3 requirements ** will be met: https://www.gnu.org/licenses/lgpl-3.0.html. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 2.0 or (at your option) the GNU General ** Public license version 3 or any later version approved by the KDE Free ** Qt Foundation. The licenses are as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL2 and LICENSE.GPL3 ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-2.0.html and ** https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QCORETEXTFONTDATABASE_H
end_ifndef
begin_define
DECL|macro|QCORETEXTFONTDATABASE_H
define|#
directive|define
name|QCORETEXTFONTDATABASE_H
end_define
begin_comment
comment|//
end_comment
begin_comment
comment|//  W A R N I N G
end_comment
begin_comment
comment|//  -------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// This file is not part of the Qt API.  It exists purely as an
end_comment
begin_comment
comment|// implementation detail.  This header file may change from version to
end_comment
begin_comment
comment|// version without notice, or even be removed.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// We mean it.
end_comment
begin_comment
comment|//
end_comment
begin_include
include|#
directive|include
file|<qglobal.h>
end_include
begin_define
DECL|macro|HAVE_CORETEXT
define|#
directive|define
name|HAVE_CORETEXT
value|QT_MAC_PLATFORM_SDK_EQUAL_OR_ABOVE(__MAC_10_8, __IPHONE_4_1)
end_define
begin_define
DECL|macro|HAVE_ATS
define|#
directive|define
name|HAVE_ATS
value|QT_MAC_PLATFORM_SDK_EQUAL_OR_ABOVE(__MAC_10_5, __IPHONE_NA)
end_define
begin_include
include|#
directive|include
file|<qpa/qplatformfontdatabase.h>
end_include
begin_include
include|#
directive|include
file|<qpa/qplatformtheme.h>
end_include
begin_include
include|#
directive|include
file|<private/qcore_mac_p.h>
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|Q_OS_IOS
end_ifndef
begin_include
include|#
directive|include
file|<ApplicationServices/ApplicationServices.h>
end_include
begin_else
else|#
directive|else
end_else
begin_include
include|#
directive|include
file|<CoreText/CoreText.h>
end_include
begin_include
include|#
directive|include
file|<CoreGraphics/CoreGraphics.h>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_if
if|#
directive|if
name|HAVE_CORETEXT
end_if
begin_expr_stmt
name|Q_DECLARE_METATYPE
argument_list|(
name|QCFType
operator|<
name|CGFontRef
operator|>
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|Q_DECLARE_METATYPE
argument_list|(
name|QCFType
operator|<
name|CFURLRef
operator|>
argument_list|)
expr_stmt|;
end_expr_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_if
if|#
directive|if
name|HAVE_ATS
end_if
begin_expr_stmt
DECL|variable|ATSFontContainerRef
name|Q_DECLARE_METATYPE
argument_list|(
name|ATSFontContainerRef
argument_list|)
expr_stmt|;
end_expr_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
name|class
name|QCoreTextFontDatabase
range|:
name|public
name|QPlatformFontDatabase
block|{
name|public
operator|:
name|QCoreTextFontDatabase
argument_list|(
argument|bool useFreeType = false
argument_list|)
block|;
operator|~
name|QCoreTextFontDatabase
argument_list|()
block|;
name|void
name|populateFontDatabase
argument_list|()
name|Q_DECL_OVERRIDE
block|;
name|void
name|populateFamily
argument_list|(
argument|const QString&familyName
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|QFontEngine
operator|*
name|fontEngine
argument_list|(
argument|const QFontDef&fontDef
argument_list|,
argument|void *handle
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|QFontEngine
operator|*
name|fontEngine
argument_list|(
argument|const QByteArray&fontData
argument_list|,
argument|qreal pixelSize
argument_list|,
argument|QFont::HintingPreference hintingPreference
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|QStringList
name|fallbacksForFamily
argument_list|(
argument|const QString&family
argument_list|,
argument|QFont::Style style
argument_list|,
argument|QFont::StyleHint styleHint
argument_list|,
argument|QChar::Script script
argument_list|)
specifier|const
name|Q_DECL_OVERRIDE
block|;
name|QStringList
name|addApplicationFont
argument_list|(
argument|const QByteArray&fontData
argument_list|,
argument|const QString&fileName
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|void
name|releaseHandle
argument_list|(
argument|void *handle
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|bool
name|isPrivateFontFamily
argument_list|(
argument|const QString&family
argument_list|)
specifier|const
name|Q_DECL_OVERRIDE
block|;
name|QFont
name|defaultFont
argument_list|()
specifier|const
name|Q_DECL_OVERRIDE
block|;
name|bool
name|fontsAlwaysScalable
argument_list|()
specifier|const
name|Q_DECL_OVERRIDE
block|;
name|QList
operator|<
name|int
operator|>
name|standardSizes
argument_list|()
specifier|const
name|Q_DECL_OVERRIDE
block|;
comment|// For iOS and OS X platform themes
name|QFont
operator|*
name|themeFont
argument_list|(
argument|QPlatformTheme::Font
argument_list|)
specifier|const
block|;
specifier|const
name|QHash
operator|<
name|QPlatformTheme
operator|::
name|Font
block|,
name|QFont
operator|*
operator|>
operator|&
name|themeFonts
argument_list|()
specifier|const
block|;
name|private
operator|:
name|void
name|populateFromDescriptor
argument_list|(
argument|CTFontDescriptorRef font
argument_list|)
block|;
ifndef|#
directive|ifndef
name|QT_NO_FREETYPE
name|bool
name|m_useFreeType
block|;
name|QFontEngine
operator|*
name|freeTypeFontEngine
argument_list|(
specifier|const
name|QFontDef
operator|&
name|fontDef
argument_list|,
specifier|const
name|QByteArray
operator|&
name|filename
argument_list|,
specifier|const
name|QByteArray
operator|&
name|fontData
operator|=
name|QByteArray
argument_list|()
argument_list|)
block|;
endif|#
directive|endif
name|mutable
name|QString
name|defaultFontName
block|;
name|void
name|removeApplicationFonts
argument_list|()
block|;
name|QVector
operator|<
name|QVariant
operator|>
name|m_applicationFonts
block|;
name|mutable
name|QSet
operator|<
name|CTFontDescriptorRef
operator|>
name|m_systemFontDescriptors
block|;
name|mutable
name|QHash
operator|<
name|QPlatformTheme
operator|::
name|Font
block|,
name|QFont
operator|*
operator|>
name|m_themeFonts
block|; }
decl_stmt|;
end_decl_stmt
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QCORETEXTFONTDATABASE_H
end_comment
end_unit
