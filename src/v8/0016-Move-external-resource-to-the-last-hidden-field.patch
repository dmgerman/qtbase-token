From 8f15248619bb3bf49473dc3ede8a4e631bd5d199 Mon Sep 17 00:00:00 2001
From: Aaron Kennedy <aaron.kennedy@nokia.com>
Date: Tue, 4 Oct 2011 14:22:54 +1000
Subject: [PATCH 16/16] Move external resource to the last hidden field

---
 src/objects-inl.h |   10 +++++-----
 1 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/src/objects-inl.h b/src/objects-inl.h
index 1765441..c02e037 100644
--- a/src/objects-inl.h
+++ b/src/objects-inl.h
@@ -1398,7 +1398,7 @@ int JSObject::GetInternalFieldCount() {
 
 int JSObject::GetInternalFieldOffset(int index) {
   ASSERT(index < GetInternalFieldCount() && index >= 0);
-  return GetHeaderSize() + (kPointerSize * (index + map()->has_external_resource()?1:0));
+  return GetHeaderSize() + (kPointerSize * index);
 }
 
 
@@ -1407,7 +1407,7 @@ Object* JSObject::GetInternalField(int index) {
   // Internal objects do follow immediately after the header, whereas in-object
   // properties are at the end of the object. Therefore there is no need
   // to adjust the index here.
-  return READ_FIELD(this, GetHeaderSize() + (kPointerSize * (index + map()->has_external_resource()?1:0)));
+  return READ_FIELD(this, GetHeaderSize() + (kPointerSize * index));
 }
 
 
@@ -1416,7 +1416,7 @@ void JSObject::SetInternalField(int index, Object* value) {
   // Internal objects do follow immediately after the header, whereas in-object
   // properties are at the end of the object. Therefore there is no need
   // to adjust the index here.
-  int offset = GetHeaderSize() + (kPointerSize * (index + map()->has_external_resource()?1:0));
+  int offset = GetHeaderSize() + (kPointerSize * index);
   WRITE_FIELD(this, offset, value);
   WRITE_BARRIER(this, offset);
 }
@@ -1424,7 +1424,7 @@ void JSObject::SetInternalField(int index, Object* value) {
 
 void JSObject::SetExternalResourceObject(Object *value) {
   ASSERT(map()->has_external_resource());
-  int offset = GetHeaderSize();
+  int offset = GetHeaderSize() + kPointerSize * GetInternalFieldCount();
   WRITE_FIELD(this, offset, value);
   WRITE_BARRIER(this, offset);
 }
@@ -1432,7 +1432,7 @@ void JSObject::SetExternalResourceObject(Object *value) {
 
 Object *JSObject::GetExternalResourceObject() { 
   if (map()->has_external_resource()) {
-    return READ_FIELD(this, GetHeaderSize());
+    return READ_FIELD(this, GetHeaderSize() + kPointerSize * GetInternalFieldCount());
   } else {
     return GetHeap()->undefined_value();
   }
-- 
1.7.4.4

