begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the Symbian application wrapper of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor **     the names of its contributors may be used to endorse or promote **     products derived from this software without specific prior written **     permission. ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_comment
comment|// MCRT0.CPP
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// Portions copyright (c) 2005-2006 Nokia Corporation.  All rights reserved.
end_comment
begin_comment
comment|// Copyright (c) Symbian Software Ltd 1997-2004.  All rights reserved.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// EPOC32 version of crt0.c for C programs which always want multi-threaded support
end_comment
begin_include
include|#
directive|include
file|<e32std.h>
end_include
begin_include
include|#
directive|include
file|<exception>
end_include
begin_comment
comment|// must be before e32base.h so uncaught_exception gets defined
end_comment
begin_include
include|#
directive|include
file|<e32base.h>
end_include
begin_include
include|#
directive|include
file|"estlib.h"
end_include
begin_comment
comment|// Needed for QT_TRYCATCH_LEAVING.
end_comment
begin_include
include|#
directive|include
file|<qglobal.h>
end_include
begin_ifdef
ifdef|#
directive|ifdef
name|__ARMCC__
end_ifdef
begin_asm
DECL|function|CallMain
asm|__asm int CallMain(int argc, char *argv[], char *envp[])
end_asm
begin_block
block|{
name|import
type|main
name|code32
name|b
name|main
block|}
end_block
begin_define
DECL|macro|CALLMAIN
define|#
directive|define
name|CALLMAIN
parameter_list|(
name|argc
parameter_list|,
name|argv
parameter_list|,
name|envp
parameter_list|)
value|CallMain(argc, argv, envp)
end_define
begin_else
else|#
directive|else
end_else
begin_extern
extern|extern
literal|"C"
name|int
name|main
parameter_list|(
name|int
name|argc
parameter_list|,
name|char
modifier|*
name|argv
index|[]
parameter_list|,
name|char
modifier|*
name|envp
index|[]
parameter_list|)
function_decl|;
end_extern
begin_define
DECL|macro|CALLMAIN
define|#
directive|define
name|CALLMAIN
parameter_list|(
name|argc
parameter_list|,
name|argv
parameter_list|,
name|envp
parameter_list|)
value|main(argc, argv, envp)
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// Dummy function to handle GCCE toolchain problem
end_comment
begin_extern
DECL|function|__GccGlueInit
extern|extern
literal|"C"
name|GLDEF_C
name|int
name|__GccGlueInit
parameter_list|()
block|{
return|return
literal|0
return|;
block|}
end_extern
begin_extern
extern|extern
literal|"C"
name|IMPORT_C
name|void
name|exit
parameter_list|(
name|int
name|ret
parameter_list|)
function_decl|;
end_extern
begin_function
DECL|function|QtMainWrapper
name|GLDEF_C
name|TInt
name|QtMainWrapper
parameter_list|()
block|{
name|int
name|argc
init|=
literal|0
decl_stmt|;
comment|// these variables are declared static in the expectation that this function is not reentrant
comment|// and so that memory analysis tools can trace any memory allocated in __crt0() to global memory ownership.
specifier|static
name|char
modifier|*
modifier|*
name|argv
init|=
literal|0
decl_stmt|;
specifier|static
name|char
modifier|*
modifier|*
name|envp
init|=
literal|0
decl_stmt|;
comment|// get args& environment
name|__crt0
argument_list|(
name|argc
argument_list|,
name|argv
argument_list|,
name|envp
argument_list|)
expr_stmt|;
comment|//Call user(application)'s main
name|TRAPD
argument_list|(
argument|ret
argument_list|,
argument|QT_TRYCATCH_LEAVING(ret = CALLMAIN(argc, argv, envp);)
argument_list|)
empty_stmt|;
return|return
name|ret
return|;
block|}
end_function
begin_ifdef
ifdef|#
directive|ifdef
name|__GCC32__
end_ifdef
begin_comment
comment|/* stub function inserted into main() by GCC */
end_comment
begin_extern
DECL|function|__gccmain
extern|extern
literal|"C"
name|void
name|__gccmain
parameter_list|(
name|void
parameter_list|)
block|{}
end_extern
begin_comment
comment|/* Default GCC entrypoint */
end_comment
begin_extern
DECL|function|_mainCRTStartup
extern|extern
literal|"C"
name|TInt
name|_mainCRTStartup
parameter_list|(
name|void
parameter_list|)
block|{
specifier|extern
name|TInt
name|_E32Startup
argument_list|()
decl_stmt|;
return|return
name|_E32Startup
argument_list|()
return|;
block|}
end_extern
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/* __GCC32__ */
end_comment
begin_ifdef
ifdef|#
directive|ifdef
name|__EABI__
end_ifdef
begin_comment
comment|// standard entrypoint for C runtime, expected by some linkers
end_comment
begin_comment
comment|// Symbian OS does not currently use this function
end_comment
begin_extern
DECL|function|__main
extern|extern
literal|"C"
name|void
name|__main
parameter_list|()
block|{}
end_extern
begin_endif
endif|#
directive|endif
end_endif
end_unit
