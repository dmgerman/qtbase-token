begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the QtSql module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** No Commercial Usage ** This file contains pre-release code and may not be distributed. ** You may use this file in accordance with the terms and conditions ** contained in the Technology Preview License Agreement accompanying ** this package. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights.  These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** If you have questions regarding the use of this file, please contact ** Nokia at qt-info@nokia.com. ** ** ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QSQL_H
end_ifndef
begin_define
DECL|macro|QSQL_H
define|#
directive|define
name|QSQL_H
end_define
begin_include
include|#
directive|include
file|<QtCore/qglobal.h>
end_include
begin_function
name|QT_BEGIN_HEADER
name|QT_BEGIN_NAMESPACE
DECL|function|QT_MODULE
name|QT_MODULE
parameter_list|(
name|Sql
parameter_list|)
name|namespace
name|QSql
decl_stmt|{     enum Location
block|{
name|BeforeFirstRow
operator|=
operator|-
literal|1
operator|,
name|AfterLastRow
operator|=
operator|-
literal|2
ifdef|#
directive|ifdef
name|QT3_SUPPORT
operator|,
name|BeforeFirst
operator|=
name|BeforeFirstRow
operator|,
name|AfterLast
operator|=
name|AfterLastRow
endif|#
directive|endif
block|}
end_function
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_enum
enum|enum
name|ParamTypeFlag
block|{
name|In
init|=
literal|0x00000001
block|,
name|Out
init|=
literal|0x00000002
block|,
name|InOut
init|=
name|In
operator||
name|Out
block|,
name|Binary
init|=
literal|0x00000004
block|}
enum|;
end_enum
begin_expr_stmt
name|Q_DECLARE_FLAGS
argument_list|(
name|ParamType
argument_list|,
name|ParamTypeFlag
argument_list|)
expr|enum
name|TableType
block|{
name|Tables
operator|=
literal|0x01
block|,
name|SystemTables
operator|=
literal|0x02
block|,
name|Views
operator|=
literal|0x04
block|,
name|AllTables
operator|=
literal|0xff
block|}
expr_stmt|;
end_expr_stmt
begin_enum
enum|enum
name|NumericalPrecisionPolicy
block|{
name|LowPrecisionInt32
init|=
literal|0x01
block|,
name|LowPrecisionInt64
init|=
literal|0x02
block|,
name|LowPrecisionDouble
init|=
literal|0x04
block|,
name|HighPrecision
init|=
literal|0
block|}
enum|;
end_enum
begin_ifdef
ifdef|#
directive|ifdef
name|QT3_SUPPORT
end_ifdef
begin_enum
enum|enum
name|Op
block|{
name|None
init|=
operator|-
literal|1
block|,
name|Insert
init|=
literal|0
block|,
name|Update
init|=
literal|1
block|,
name|Delete
init|=
literal|2
block|}
enum|;
end_enum
begin_enum
enum|enum
name|Confirm
block|{
name|Cancel
init|=
operator|-
literal|1
block|,
name|No
init|=
literal|0
block|,
name|Yes
init|=
literal|1
block|}
enum|;
end_enum
begin_endif
endif|#
directive|endif
end_endif
begin_expr_stmt
unit|}  Q_DECLARE_OPERATORS_FOR_FLAGS
operator|(
name|QSql
operator|::
name|ParamType
operator|)
name|QT_END_NAMESPACE
name|QT_END_HEADER
end_expr_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QSQL_H
end_comment
end_unit
