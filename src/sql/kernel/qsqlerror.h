begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the QtSql module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QSQLERROR_H
end_ifndef
begin_define
DECL|macro|QSQLERROR_H
define|#
directive|define
name|QSQLERROR_H
end_define
begin_include
include|#
directive|include
file|<QtCore/qstring.h>
end_include
begin_include
include|#
directive|include
file|<QtSql/qsql.h>
end_include
begin_decl_stmt
name|QT_BEGIN_HEADER
name|QT_BEGIN_NAMESPACE
name|class
name|Q_SQL_EXPORT
name|QSqlError
block|{
name|public
label|:
enum|enum
name|ErrorType
block|{
name|NoError
block|,
name|ConnectionError
block|,
name|StatementError
block|,
name|TransactionError
block|,
name|UnknownError
block|}
enum|;
name|QSqlError
argument_list|(
argument|const QString& driverText = QString()
argument_list|,
argument|const QString& databaseText = QString()
argument_list|,
argument|ErrorType type = NoError
argument_list|,
argument|int number = -
literal|1
argument_list|)
empty_stmt|;
name|QSqlError
argument_list|(
specifier|const
name|QSqlError
operator|&
name|other
argument_list|)
expr_stmt|;
name|QSqlError
modifier|&
name|operator
init|=
operator|(
specifier|const
name|QSqlError
operator|&
name|other
operator|)
decl_stmt|;
name|bool
name|operator
operator|==
operator|(
specifier|const
name|QSqlError
operator|&
name|other
operator|)
specifier|const
expr_stmt|;
name|bool
name|operator
operator|!=
operator|(
specifier|const
name|QSqlError
operator|&
name|other
operator|)
specifier|const
expr_stmt|;
operator|~
name|QSqlError
argument_list|()
expr_stmt|;
name|QString
name|driverText
argument_list|()
specifier|const
expr_stmt|;
name|void
name|setDriverText
parameter_list|(
specifier|const
name|QString
modifier|&
name|driverText
parameter_list|)
function_decl|;
name|QString
name|databaseText
argument_list|()
specifier|const
expr_stmt|;
name|void
name|setDatabaseText
parameter_list|(
specifier|const
name|QString
modifier|&
name|databaseText
parameter_list|)
function_decl|;
name|ErrorType
name|type
argument_list|()
specifier|const
expr_stmt|;
name|void
name|setType
parameter_list|(
name|ErrorType
name|type
parameter_list|)
function_decl|;
name|int
name|number
argument_list|()
specifier|const
expr_stmt|;
name|void
name|setNumber
parameter_list|(
name|int
name|number
parameter_list|)
function_decl|;
name|QString
name|text
argument_list|()
specifier|const
expr_stmt|;
name|bool
name|isValid
argument_list|()
specifier|const
expr_stmt|;
name|private
label|:
name|QString
name|driverError
decl_stmt|;
name|QString
name|databaseError
decl_stmt|;
name|ErrorType
name|errorType
decl_stmt|;
name|int
name|errorNumber
decl_stmt|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_DEBUG_STREAM
end_ifndef
begin_expr_stmt
name|Q_SQL_EXPORT
name|QDebug
name|operator
operator|<<
operator|(
name|QDebug
operator|,
specifier|const
name|QSqlError
operator|&
operator|)
expr_stmt|;
end_expr_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_expr_stmt
name|QT_END_NAMESPACE
name|QT_END_HEADER
end_expr_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QSQLERROR_H
end_comment
end_unit
