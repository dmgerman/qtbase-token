begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the documentation of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** BSD License Usage ** Alternatively, you may use this file under the terms of the BSD license ** as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of The Qt Company Ltd nor the names of its **     contributors may be used to endorse or promote products derived **     from this software without specific prior written permission. ** ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<qfile.h>
end_include
begin_include
include|#
directive|include
file|<qxml.h>
end_include
begin_include
include|#
directive|include
file|"handler.h"
end_include
begin_include
include|#
directive|include
file|<iostream>
end_include
begin_function
DECL|function|main
name|int
name|main
parameter_list|(
name|int
name|argc
parameter_list|,
name|char
modifier|*
modifier|*
name|argv
parameter_list|)
block|{
if|if
condition|(
name|argc
operator|!=
literal|2
condition|)
block|{
name|std
operator|::
name|cout
operator|<<
literal|"Usage: "
operator|<<
name|argv
index|[
literal|0
index|]
operator|<<
literal|"<filename>"
operator|<<
name|std
operator|::
name|endl
expr_stmt|;
return|return
literal|1
return|;
block|}
name|QFile
modifier|*
name|file
init|=
operator|new
name|QFile
argument_list|(
name|argv
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
comment|//! [0]
name|QXmlSimpleReader
name|xmlReader
decl_stmt|;
name|QXmlInputSource
modifier|*
name|source
init|=
operator|new
name|QXmlInputSource
argument_list|(
name|file
argument_list|)
decl_stmt|;
comment|//! [0]
comment|//! [1]
name|Handler
modifier|*
name|handler
init|=
operator|new
name|Handler
decl_stmt|;
name|xmlReader
operator|.
name|setContentHandler
argument_list|(
name|handler
argument_list|)
expr_stmt|;
name|xmlReader
operator|.
name|setErrorHandler
argument_list|(
name|handler
argument_list|)
expr_stmt|;
comment|//! [1]
comment|//! [2]
name|bool
name|ok
init|=
name|xmlReader
operator|.
name|parse
argument_list|(
name|source
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|ok
condition|)
name|std
operator|::
name|cout
operator|<<
literal|"Parsing failed."
operator|<<
name|std
operator|::
name|endl
expr_stmt|;
comment|//! [2]
else|else
block|{
name|QStringList
name|names
init|=
name|handler
operator|->
name|names
argument_list|()
decl_stmt|;
name|QList
argument_list|<
name|int
argument_list|>
name|indentations
init|=
name|handler
operator|->
name|indentations
argument_list|()
decl_stmt|;
name|int
name|items
init|=
name|names
operator|.
name|count
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|items
condition|;
operator|++
name|i
control|)
block|{
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|indentations
index|[
name|i
index|]
condition|;
operator|++
name|j
control|)
name|std
operator|::
name|cout
operator|<<
literal|' '
expr_stmt|;
name|std
operator|::
name|cout
operator|<<
name|names
index|[
name|i
index|]
operator|.
name|toLocal8Bit
argument_list|()
operator|.
name|constData
argument_list|()
operator|<<
name|std
operator|::
name|endl
expr_stmt|;
block|}
block|}
return|return
literal|0
return|;
block|}
end_function
end_unit
