begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the documentation of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 3 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL3 included in the ** packaging of this file. Please review the following information to ** ensure the GNU Lesser General Public License version 3 requirements ** will be met: https://www.gnu.org/licenses/lgpl-3.0.html. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 2.0 or (at your option) the GNU General ** Public license version 3 or any later version approved by the KDE Free ** Qt Foundation. The licenses are as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL2 and LICENSE.GPL3 ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-2.0.html and ** https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_comment
comment|//! [0]
end_comment
begin_expr_stmt
name|Content
operator|-
name|Type
operator|:
name|text
operator|/
name|plain
name|Content
operator|-
name|Disposition
operator|:
name|form
operator|-
name|data
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|name
operator|=
literal|"text"
name|here
name|goes
name|the
name|body
comment|//! [0]
comment|//! [1]
name|QHttpPart
name|textPart
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|textPart
operator|.
name|setHeader
argument_list|(
name|QNetworkRequest
operator|::
name|ContentTypeHeader
argument_list|,
name|QVariant
argument_list|(
literal|"text/plain"
argument_list|)
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|textPart
operator|.
name|setHeader
argument_list|(
name|QNetworkRequest
operator|::
name|ContentDispositionHeader
argument_list|,
name|QVariant
argument_list|(
literal|"form-data; name=\"text\""
argument_list|)
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|textPart
operator|.
name|setBody
argument_list|(
literal|"here goes the body"
argument_list|)
expr_stmt|;
end_expr_stmt
begin_comment
comment|//! [1]
end_comment
begin_comment
comment|//! [2]
end_comment
begin_decl_stmt
DECL|variable|imagePart
name|QHttpPart
name|imagePart
decl_stmt|;
end_decl_stmt
begin_expr_stmt
name|imagePart
operator|.
name|setHeader
argument_list|(
name|QNetworkRequest
operator|::
name|ContentTypeHeader
argument_list|,
name|QVariant
argument_list|(
literal|"image/jpeg"
argument_list|)
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|imagePart
operator|.
name|setHeader
argument_list|(
name|QNetworkRequest
operator|::
name|ContentDispositionHeader
argument_list|,
name|QVariant
argument_list|(
literal|"form-data; name=\"image\""
argument_list|)
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|imagePart
operator|.
name|setRawHeader
argument_list|(
literal|"Content-ID"
argument_list|,
literal|"my@content.id"
argument_list|)
expr_stmt|;
end_expr_stmt
begin_comment
comment|// add any headers you like via setRawHeader()
end_comment
begin_decl_stmt
DECL|variable|file
name|QFile
modifier|*
name|file
init|=
operator|new
name|QFile
argument_list|(
literal|"image.jpg"
argument_list|)
decl_stmt|;
end_decl_stmt
begin_expr_stmt
name|file
operator|->
name|open
argument_list|(
name|QIODevice
operator|::
name|ReadOnly
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|imagePart
operator|.
name|setBodyDevice
argument_list|(
name|file
argument_list|)
expr_stmt|;
end_expr_stmt
begin_comment
comment|//! [2]
end_comment
end_unit
