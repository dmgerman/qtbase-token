begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/ ** ** This file is part of the QtNetwork module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QNETWORKDISKCACHE_P_H
end_ifndef
begin_define
DECL|macro|QNETWORKDISKCACHE_P_H
define|#
directive|define
name|QNETWORKDISKCACHE_P_H
end_define
begin_comment
comment|//
end_comment
begin_comment
comment|//  W A R N I N G
end_comment
begin_comment
comment|//  -------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// This file is not part of the Qt API.  It exists purely as an
end_comment
begin_comment
comment|// implementation detail.  This header file may change from version to
end_comment
begin_comment
comment|// version without notice, or even be removed.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// We mean it.
end_comment
begin_comment
comment|//
end_comment
begin_include
include|#
directive|include
file|"private/qabstractnetworkcache_p.h"
end_include
begin_include
include|#
directive|include
file|<qbuffer.h>
end_include
begin_include
include|#
directive|include
file|<qhash.h>
end_include
begin_include
include|#
directive|include
file|<qtemporaryfile.h>
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_NETWORKDISKCACHE
end_ifndef
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
DECL|variable|QFile
name|class
name|QFile
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|QCacheItem
block|{
name|public
label|:
name|QCacheItem
argument_list|()
operator|:
name|file
argument_list|(
literal|0
argument_list|)
block|{     }
operator|~
name|QCacheItem
argument_list|()
block|{
name|reset
argument_list|()
block|;     }
name|QNetworkCacheMetaData
name|metaData
expr_stmt|;
name|QBuffer
name|data
decl_stmt|;
name|QTemporaryFile
modifier|*
name|file
decl_stmt|;
specifier|inline
name|qint64
name|size
argument_list|()
specifier|const
block|{
return|return
name|file
operator|?
name|file
operator|->
name|size
argument_list|()
operator|:
name|data
operator|.
name|size
argument_list|()
return|;
block|}
specifier|inline
name|void
name|reset
parameter_list|()
block|{
name|metaData
operator|=
name|QNetworkCacheMetaData
argument_list|()
expr_stmt|;
name|data
operator|.
name|close
argument_list|()
expr_stmt|;
name|delete
name|file
decl_stmt|;
name|file
operator|=
literal|0
expr_stmt|;
block|}
name|void
name|writeHeader
argument_list|(
name|QFile
operator|*
name|device
argument_list|)
decl|const
decl_stmt|;
name|void
name|writeCompressedData
argument_list|(
name|QFile
operator|*
name|device
argument_list|)
decl|const
decl_stmt|;
name|bool
name|read
parameter_list|(
name|QFile
modifier|*
name|device
parameter_list|,
name|bool
name|readData
parameter_list|)
function_decl|;
name|bool
name|canCompress
argument_list|()
specifier|const
expr_stmt|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_decl_stmt
name|class
name|QNetworkDiskCachePrivate
range|:
name|public
name|QAbstractNetworkCachePrivate
block|{
name|public
operator|:
name|QNetworkDiskCachePrivate
argument_list|()
operator|:
name|QAbstractNetworkCachePrivate
argument_list|()
block|,
name|maximumCacheSize
argument_list|(
literal|1024
operator|*
literal|1024
operator|*
literal|50
argument_list|)
block|,
name|currentCacheSize
argument_list|(
argument|-
literal|1
argument_list|)
block|{}
specifier|static
name|QString
name|uniqueFileName
argument_list|(
specifier|const
name|QUrl
operator|&
name|url
argument_list|)
block|;
name|QString
name|cacheFileName
argument_list|(
argument|const QUrl&url
argument_list|)
specifier|const
block|;
name|QString
name|tmpCacheFileName
argument_list|()
specifier|const
block|;
name|bool
name|removeFile
argument_list|(
specifier|const
name|QString
operator|&
name|file
argument_list|)
block|;
name|void
name|storeItem
argument_list|(
name|QCacheItem
operator|*
name|item
argument_list|)
block|;
name|void
name|prepareLayout
argument_list|()
block|;
specifier|static
name|quint32
name|crc32
argument_list|(
argument|const char *data
argument_list|,
argument|uint len
argument_list|)
block|;
name|mutable
name|QCacheItem
name|lastItem
block|;
name|QString
name|cacheDirectory
block|;
name|QString
name|dataDirectory
block|;
name|qint64
name|maximumCacheSize
block|;
name|qint64
name|currentCacheSize
block|;
name|QHash
operator|<
name|QIODevice
operator|*
block|,
name|QCacheItem
operator|*
operator|>
name|inserting
block|;
name|Q_DECLARE_PUBLIC
argument_list|(
argument|QNetworkDiskCache
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_NETWORKDISKCACHE
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QNETWORKDISKCACHE_P_H
end_comment
end_unit
