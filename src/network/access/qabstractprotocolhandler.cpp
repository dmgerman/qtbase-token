begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2014 BlackBerry Limited. All rights reserved. ** Contact: http://www.qt-project.org/legal ** ** This file is part of the QtNetwork module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia. For licensing terms and ** conditions see http://qt.digia.com/licensing. For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights. These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<private/qabstractprotocolhandler_p.h>
end_include
begin_include
include|#
directive|include
file|<private/qhttpnetworkconnectionchannel_p.h>
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_HTTP
end_ifndef
begin_macro
name|QT_BEGIN_NAMESPACE
end_macro
begin_constructor
DECL|function|QAbstractProtocolHandler
name|QAbstractProtocolHandler
operator|::
name|QAbstractProtocolHandler
parameter_list|(
name|QHttpNetworkConnectionChannel
modifier|*
name|channel
parameter_list|)
member_init_list|:
name|m_channel
argument_list|(
name|channel
argument_list|)
member_init_list|,
name|m_reply
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|m_socket
argument_list|(
name|m_channel
operator|->
name|socket
argument_list|)
member_init_list|,
name|m_connection
argument_list|(
name|m_channel
operator|->
name|connection
argument_list|)
block|{
name|Q_ASSERT
argument_list|(
name|m_channel
argument_list|)
expr_stmt|;
name|Q_ASSERT
argument_list|(
name|m_socket
argument_list|)
expr_stmt|;
name|Q_ASSERT
argument_list|(
name|m_connection
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_destructor
DECL|function|~QAbstractProtocolHandler
name|QAbstractProtocolHandler
operator|::
name|~
name|QAbstractProtocolHandler
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|setReply
name|void
name|QAbstractProtocolHandler
operator|::
name|setReply
parameter_list|(
name|QHttpNetworkReply
modifier|*
name|reply
parameter_list|)
block|{
name|m_reply
operator|=
name|reply
expr_stmt|;
block|}
end_function
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_HTTP
end_comment
end_unit
