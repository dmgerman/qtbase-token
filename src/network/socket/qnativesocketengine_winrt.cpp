begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the QtNetwork module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"qnativesocketengine_winrt_p.h"
end_include
begin_include
include|#
directive|include
file|<qnetworkinterface.h>
end_include
begin_macro
name|QT_BEGIN_NAMESPACE
end_macro
begin_constructor
DECL|function|QNativeSocketEngine
name|QNativeSocketEngine
operator|::
name|QNativeSocketEngine
parameter_list|(
name|QObject
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QAbstractSocketEngine
argument_list|(
operator|*
operator|new
name|QNativeSocketEnginePrivate
argument_list|()
argument_list|,
name|parent
argument_list|)
block|{ }
end_constructor
begin_destructor
DECL|function|~QNativeSocketEngine
name|QNativeSocketEngine
operator|::
name|~
name|QNativeSocketEngine
parameter_list|()
block|{
name|close
argument_list|()
expr_stmt|;
block|}
end_destructor
begin_function
DECL|function|initialize
name|bool
name|QNativeSocketEngine
operator|::
name|initialize
parameter_list|(
name|QAbstractSocket
operator|::
name|SocketType
name|type
parameter_list|,
name|QAbstractSocket
operator|::
name|NetworkLayerProtocol
name|protocol
parameter_list|)
block|{
name|Q_UNIMPLEMENTED
argument_list|()
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|type
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|protocol
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|initialize
name|bool
name|QNativeSocketEngine
operator|::
name|initialize
parameter_list|(
name|qintptr
name|socketDescriptor
parameter_list|,
name|QAbstractSocket
operator|::
name|SocketState
name|socketState
parameter_list|)
block|{
name|Q_UNIMPLEMENTED
argument_list|()
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|socketDescriptor
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|socketState
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|socketDescriptor
name|qintptr
name|QNativeSocketEngine
operator|::
name|socketDescriptor
parameter_list|()
specifier|const
block|{
name|Q_UNIMPLEMENTED
argument_list|()
expr_stmt|;
return|return
operator|-
literal|1
return|;
block|}
end_function
begin_function
DECL|function|isValid
name|bool
name|QNativeSocketEngine
operator|::
name|isValid
parameter_list|()
specifier|const
block|{
name|Q_UNIMPLEMENTED
argument_list|()
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|connectToHost
name|bool
name|QNativeSocketEngine
operator|::
name|connectToHost
parameter_list|(
specifier|const
name|QHostAddress
modifier|&
name|address
parameter_list|,
name|quint16
name|port
parameter_list|)
block|{
name|Q_UNIMPLEMENTED
argument_list|()
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|address
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|port
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|connectToHostByName
name|bool
name|QNativeSocketEngine
operator|::
name|connectToHostByName
parameter_list|(
specifier|const
name|QString
modifier|&
name|name
parameter_list|,
name|quint16
name|port
parameter_list|)
block|{
name|Q_UNIMPLEMENTED
argument_list|()
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|port
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|bind
name|bool
name|QNativeSocketEngine
operator|::
name|bind
parameter_list|(
specifier|const
name|QHostAddress
modifier|&
name|address
parameter_list|,
name|quint16
name|port
parameter_list|)
block|{
name|Q_UNIMPLEMENTED
argument_list|()
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|address
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|port
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|listen
name|bool
name|QNativeSocketEngine
operator|::
name|listen
parameter_list|()
block|{
name|Q_UNIMPLEMENTED
argument_list|()
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|accept
name|int
name|QNativeSocketEngine
operator|::
name|accept
parameter_list|()
block|{
name|Q_UNIMPLEMENTED
argument_list|()
expr_stmt|;
return|return
operator|-
literal|1
return|;
block|}
end_function
begin_function
DECL|function|close
name|void
name|QNativeSocketEngine
operator|::
name|close
parameter_list|()
block|{ }
end_function
begin_function
DECL|function|joinMulticastGroup
name|bool
name|QNativeSocketEngine
operator|::
name|joinMulticastGroup
parameter_list|(
specifier|const
name|QHostAddress
modifier|&
name|groupAddress
parameter_list|,
specifier|const
name|QNetworkInterface
modifier|&
name|iface
parameter_list|)
block|{
name|Q_UNIMPLEMENTED
argument_list|()
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|groupAddress
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|iface
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|leaveMulticastGroup
name|bool
name|QNativeSocketEngine
operator|::
name|leaveMulticastGroup
parameter_list|(
specifier|const
name|QHostAddress
modifier|&
name|groupAddress
parameter_list|,
specifier|const
name|QNetworkInterface
modifier|&
name|iface
parameter_list|)
block|{
name|Q_UNIMPLEMENTED
argument_list|()
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|groupAddress
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|iface
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|multicastInterface
name|QNetworkInterface
name|QNativeSocketEngine
operator|::
name|multicastInterface
parameter_list|()
specifier|const
block|{
name|Q_UNIMPLEMENTED
argument_list|()
expr_stmt|;
return|return
name|QNetworkInterface
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|setMulticastInterface
name|bool
name|QNativeSocketEngine
operator|::
name|setMulticastInterface
parameter_list|(
specifier|const
name|QNetworkInterface
modifier|&
name|iface
parameter_list|)
block|{
name|Q_UNIMPLEMENTED
argument_list|()
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|iface
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|bytesAvailable
name|qint64
name|QNativeSocketEngine
operator|::
name|bytesAvailable
parameter_list|()
specifier|const
block|{
name|Q_UNIMPLEMENTED
argument_list|()
expr_stmt|;
return|return
operator|-
literal|1
return|;
block|}
end_function
begin_function
DECL|function|read
name|qint64
name|QNativeSocketEngine
operator|::
name|read
parameter_list|(
name|char
modifier|*
name|data
parameter_list|,
name|qint64
name|maxlen
parameter_list|)
block|{
name|Q_UNIMPLEMENTED
argument_list|()
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|data
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|maxlen
argument_list|)
expr_stmt|;
return|return
operator|-
literal|1
return|;
block|}
end_function
begin_function
DECL|function|write
name|qint64
name|QNativeSocketEngine
operator|::
name|write
parameter_list|(
specifier|const
name|char
modifier|*
name|data
parameter_list|,
name|qint64
name|len
parameter_list|)
block|{
name|Q_UNIMPLEMENTED
argument_list|()
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|data
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|len
argument_list|)
expr_stmt|;
return|return
operator|-
literal|1
return|;
block|}
end_function
begin_function
DECL|function|readDatagram
name|qint64
name|QNativeSocketEngine
operator|::
name|readDatagram
parameter_list|(
name|char
modifier|*
name|data
parameter_list|,
name|qint64
name|maxlen
parameter_list|,
name|QHostAddress
modifier|*
name|addr
parameter_list|,
name|quint16
modifier|*
name|port
parameter_list|)
block|{
name|Q_UNIMPLEMENTED
argument_list|()
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|data
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|maxlen
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|addr
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|port
argument_list|)
expr_stmt|;
return|return
operator|-
literal|1
return|;
block|}
end_function
begin_function
DECL|function|writeDatagram
name|qint64
name|QNativeSocketEngine
operator|::
name|writeDatagram
parameter_list|(
specifier|const
name|char
modifier|*
name|data
parameter_list|,
name|qint64
name|len
parameter_list|,
specifier|const
name|QHostAddress
modifier|&
name|addr
parameter_list|,
name|quint16
name|port
parameter_list|)
block|{
name|Q_UNIMPLEMENTED
argument_list|()
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|data
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|len
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|addr
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|port
argument_list|)
expr_stmt|;
return|return
operator|-
literal|1
return|;
block|}
end_function
begin_function
DECL|function|hasPendingDatagrams
name|bool
name|QNativeSocketEngine
operator|::
name|hasPendingDatagrams
parameter_list|()
specifier|const
block|{
name|Q_UNIMPLEMENTED
argument_list|()
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|pendingDatagramSize
name|qint64
name|QNativeSocketEngine
operator|::
name|pendingDatagramSize
parameter_list|()
specifier|const
block|{
name|Q_UNIMPLEMENTED
argument_list|()
expr_stmt|;
return|return
literal|0
return|;
block|}
end_function
begin_function
DECL|function|bytesToWrite
name|qint64
name|QNativeSocketEngine
operator|::
name|bytesToWrite
parameter_list|()
specifier|const
block|{
name|Q_UNIMPLEMENTED
argument_list|()
expr_stmt|;
return|return
literal|0
return|;
block|}
end_function
begin_function
DECL|function|receiveBufferSize
name|qint64
name|QNativeSocketEngine
operator|::
name|receiveBufferSize
parameter_list|()
specifier|const
block|{
name|Q_UNIMPLEMENTED
argument_list|()
expr_stmt|;
return|return
literal|0
return|;
block|}
end_function
begin_function
DECL|function|setReceiveBufferSize
name|void
name|QNativeSocketEngine
operator|::
name|setReceiveBufferSize
parameter_list|(
name|qint64
name|bufferSize
parameter_list|)
block|{
name|Q_UNIMPLEMENTED
argument_list|()
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|bufferSize
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|sendBufferSize
name|qint64
name|QNativeSocketEngine
operator|::
name|sendBufferSize
parameter_list|()
specifier|const
block|{
name|Q_UNIMPLEMENTED
argument_list|()
expr_stmt|;
return|return
literal|0
return|;
block|}
end_function
begin_function
DECL|function|setSendBufferSize
name|void
name|QNativeSocketEngine
operator|::
name|setSendBufferSize
parameter_list|(
name|qint64
name|bufferSize
parameter_list|)
block|{
name|Q_UNIMPLEMENTED
argument_list|()
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|bufferSize
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|option
name|int
name|QNativeSocketEngine
operator|::
name|option
parameter_list|(
name|QAbstractSocketEngine
operator|::
name|SocketOption
name|option
parameter_list|)
specifier|const
block|{
name|Q_UNIMPLEMENTED
argument_list|()
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|option
argument_list|)
expr_stmt|;
return|return
operator|-
literal|1
return|;
block|}
end_function
begin_function
DECL|function|setOption
name|bool
name|QNativeSocketEngine
operator|::
name|setOption
parameter_list|(
name|QAbstractSocketEngine
operator|::
name|SocketOption
name|option
parameter_list|,
name|int
name|value
parameter_list|)
block|{
name|Q_UNIMPLEMENTED
argument_list|()
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|option
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|value
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|waitForRead
name|bool
name|QNativeSocketEngine
operator|::
name|waitForRead
parameter_list|(
name|int
name|msecs
parameter_list|,
name|bool
modifier|*
name|timedOut
parameter_list|)
block|{
name|Q_UNIMPLEMENTED
argument_list|()
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|msecs
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|timedOut
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|waitForWrite
name|bool
name|QNativeSocketEngine
operator|::
name|waitForWrite
parameter_list|(
name|int
name|msecs
parameter_list|,
name|bool
modifier|*
name|timedOut
parameter_list|)
block|{
name|Q_UNIMPLEMENTED
argument_list|()
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|msecs
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|timedOut
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|waitForReadOrWrite
name|bool
name|QNativeSocketEngine
operator|::
name|waitForReadOrWrite
parameter_list|(
name|bool
modifier|*
name|readyToRead
parameter_list|,
name|bool
modifier|*
name|readyToWrite
parameter_list|,
name|bool
name|checkRead
parameter_list|,
name|bool
name|checkWrite
parameter_list|,
name|int
name|msecs
parameter_list|,
name|bool
modifier|*
name|timedOut
parameter_list|)
block|{
name|Q_UNIMPLEMENTED
argument_list|()
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|readyToRead
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|readyToWrite
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|checkRead
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|checkWrite
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|msecs
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|timedOut
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|isReadNotificationEnabled
name|bool
name|QNativeSocketEngine
operator|::
name|isReadNotificationEnabled
parameter_list|()
specifier|const
block|{
name|Q_UNIMPLEMENTED
argument_list|()
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|setReadNotificationEnabled
name|void
name|QNativeSocketEngine
operator|::
name|setReadNotificationEnabled
parameter_list|(
name|bool
name|enable
parameter_list|)
block|{
name|Q_UNIMPLEMENTED
argument_list|()
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|enable
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|isWriteNotificationEnabled
name|bool
name|QNativeSocketEngine
operator|::
name|isWriteNotificationEnabled
parameter_list|()
specifier|const
block|{
name|Q_UNIMPLEMENTED
argument_list|()
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|setWriteNotificationEnabled
name|void
name|QNativeSocketEngine
operator|::
name|setWriteNotificationEnabled
parameter_list|(
name|bool
name|enable
parameter_list|)
block|{
name|Q_UNIMPLEMENTED
argument_list|()
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|enable
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|isExceptionNotificationEnabled
name|bool
name|QNativeSocketEngine
operator|::
name|isExceptionNotificationEnabled
parameter_list|()
specifier|const
block|{
name|Q_UNIMPLEMENTED
argument_list|()
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|setExceptionNotificationEnabled
name|void
name|QNativeSocketEngine
operator|::
name|setExceptionNotificationEnabled
parameter_list|(
name|bool
name|enable
parameter_list|)
block|{
name|Q_UNIMPLEMENTED
argument_list|()
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|enable
argument_list|)
expr_stmt|;
block|}
end_function
begin_constructor
DECL|function|QNativeSocketEnginePrivate
name|QNativeSocketEnginePrivate
operator|::
name|QNativeSocketEnginePrivate
parameter_list|()
member_init_list|:
name|QAbstractSocketEnginePrivate
argument_list|()
block|{ }
end_constructor
begin_destructor
DECL|function|~QNativeSocketEnginePrivate
name|QNativeSocketEnginePrivate
operator|::
name|~
name|QNativeSocketEnginePrivate
parameter_list|()
block|{ }
end_destructor
begin_macro
name|QT_END_NAMESPACE
end_macro
end_unit
