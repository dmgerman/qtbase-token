begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the QtNetwork module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QNETWORKCONFIGURATION_H
end_ifndef
begin_define
DECL|macro|QNETWORKCONFIGURATION_H
define|#
directive|define
name|QNETWORKCONFIGURATION_H
end_define
begin_include
include|#
directive|include
file|<QtCore/qglobal.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qshareddata.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qstring.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qlist.h>
end_include
begin_if
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_WIN
argument_list|)
operator|&&
name|defined
argument_list|(
name|interface
argument_list|)
end_if
begin_undef
DECL|macro|interface
undef|#
directive|undef
name|interface
end_undef
begin_endif
endif|#
directive|endif
end_endif
begin_function
name|QT_BEGIN_HEADER
name|QT_BEGIN_NAMESPACE
name|QT_MODULE
parameter_list|(
name|Network
parameter_list|)
name|class
name|QNetworkConfigurationPrivate
decl_stmt|;
name|class
name|Q_NETWORK_EXPORT
name|QNetworkConfiguration
decl_stmt|{ public:     QNetworkConfiguration(
end_function
begin_empty_stmt
unit|)
empty_stmt|;
end_empty_stmt
begin_expr_stmt
name|QNetworkConfiguration
argument_list|(
specifier|const
name|QNetworkConfiguration
operator|&
name|other
argument_list|)
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|QNetworkConfiguration
modifier|&
name|operator
init|=
operator|(
specifier|const
name|QNetworkConfiguration
operator|&
name|other
operator|)
decl_stmt|;
end_decl_stmt
begin_expr_stmt
operator|~
name|QNetworkConfiguration
argument_list|()
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|bool
name|operator
operator|==
operator|(
specifier|const
name|QNetworkConfiguration
operator|&
name|other
operator|)
specifier|const
expr_stmt|;
end_expr_stmt
begin_expr_stmt
specifier|inline
name|bool
name|operator
operator|!=
operator|(
specifier|const
name|QNetworkConfiguration
operator|&
name|other
operator|)
specifier|const
block|{
return|return
operator|!
name|operator
operator|==
operator|(
name|other
operator|)
return|;
block|}
end_expr_stmt
begin_enum
enum|enum
name|Type
block|{
name|InternetAccessPoint
init|=
literal|0
block|,
name|ServiceNetwork
block|,
name|UserChoice
block|,
name|Invalid
block|}
enum|;
end_enum
begin_enum
enum|enum
name|Purpose
block|{
name|UnknownPurpose
init|=
literal|0
block|,
name|PublicPurpose
block|,
name|PrivatePurpose
block|,
name|ServiceSpecificPurpose
block|}
enum|;
end_enum
begin_enum
enum|enum
name|StateFlag
block|{
name|Undefined
init|=
literal|0x0000001
block|,
name|Defined
init|=
literal|0x0000002
block|,
name|Discovered
init|=
literal|0x0000006
block|,
name|Active
init|=
literal|0x000000e
block|}
enum|;
end_enum
begin_expr_stmt
name|Q_DECLARE_FLAGS
argument_list|(
name|StateFlags
argument_list|,
name|StateFlag
argument_list|)
expr|enum
name|BearerType
block|{
name|BearerUnknown
block|,
name|BearerEthernet
block|,
name|BearerWLAN
block|,
name|Bearer2G
block|,
name|BearerCDMA2000
block|,
name|BearerWCDMA
block|,
name|BearerHSPA
block|,
name|BearerBluetooth
block|,
name|BearerWiMAX
block|}
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|StateFlags
name|state
argument_list|()
specifier|const
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|Type
name|type
argument_list|()
specifier|const
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|Purpose
name|purpose
argument_list|()
specifier|const
expr_stmt|;
end_expr_stmt
begin_ifdef
ifdef|#
directive|ifdef
name|QT_DEPRECATED
end_ifdef
begin_comment
comment|// Required to maintain source compatibility with Qt Mobility.
end_comment
begin_expr_stmt
name|QT_DEPRECATED
specifier|inline
name|QString
name|bearerName
argument_list|()
specifier|const
block|{
return|return
name|bearerTypeName
argument_list|()
return|;
block|}
end_expr_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_expr_stmt
name|BearerType
name|bearerType
argument_list|()
specifier|const
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|QString
name|bearerTypeName
argument_list|()
specifier|const
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|QString
name|identifier
argument_list|()
specifier|const
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|bool
name|isRoamingAvailable
argument_list|()
specifier|const
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|QList
operator|<
name|QNetworkConfiguration
operator|>
name|children
argument_list|()
specifier|const
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|QString
name|name
argument_list|()
specifier|const
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|bool
name|isValid
argument_list|()
specifier|const
expr_stmt|;
end_expr_stmt
begin_label
name|private
label|:
end_label
begin_decl_stmt
name|friend
name|class
name|QNetworkConfigurationPrivate
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|friend
name|class
name|QNetworkConfigurationManager
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|friend
name|class
name|QNetworkConfigurationManagerPrivate
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|friend
name|class
name|QNetworkSessionPrivate
decl_stmt|;
end_decl_stmt
begin_expr_stmt
name|QExplicitlySharedDataPointer
operator|<
name|QNetworkConfigurationPrivate
operator|>
name|d
expr_stmt|;
end_expr_stmt
begin_expr_stmt
unit|};
name|QT_END_NAMESPACE
name|QT_END_HEADER
end_expr_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QNETWORKCONFIGURATION_H
end_comment
end_unit
