begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the QtNetwork module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QNETWORKCONFIGMANAGER_H
end_ifndef
begin_define
DECL|macro|QNETWORKCONFIGMANAGER_H
define|#
directive|define
name|QNETWORKCONFIGMANAGER_H
end_define
begin_include
include|#
directive|include
file|<QtCore/qobject.h>
end_include
begin_include
include|#
directive|include
file|<QtNetwork/qnetworkconfiguration.h>
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_BEARERMANAGEMENT
end_ifndef
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
DECL|variable|QNetworkConfigurationManagerPrivate
name|class
name|QNetworkConfigurationManagerPrivate
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|Q_NETWORK_EXPORT
name|QNetworkConfigurationManager
range|:
name|public
name|QObject
block|{
name|Q_OBJECT
name|public
operator|:
expr|enum
name|Capability
block|{
name|CanStartAndStopInterfaces
operator|=
literal|0x00000001
block|,
name|DirectConnectionRouting
operator|=
literal|0x00000002
block|,
name|SystemSessionSupport
operator|=
literal|0x00000004
block|,
name|ApplicationLevelRoaming
operator|=
literal|0x00000008
block|,
name|ForcedRoaming
operator|=
literal|0x00000010
block|,
name|DataStatistics
operator|=
literal|0x00000020
block|,
name|NetworkSessionRequired
operator|=
literal|0x00000040
block|}
block|;
name|Q_DECLARE_FLAGS
argument_list|(
argument|Capabilities
argument_list|,
argument|Capability
argument_list|)
name|explicit
name|QNetworkConfigurationManager
argument_list|(
name|QObject
operator|*
name|parent
operator|=
name|Q_NULLPTR
argument_list|)
block|;
name|virtual
operator|~
name|QNetworkConfigurationManager
argument_list|()
block|;
name|QNetworkConfigurationManager
operator|::
name|Capabilities
name|capabilities
argument_list|()
specifier|const
block|;
name|QNetworkConfiguration
name|defaultConfiguration
argument_list|()
specifier|const
block|;
name|QList
operator|<
name|QNetworkConfiguration
operator|>
name|allConfigurations
argument_list|(
argument|QNetworkConfiguration::StateFlags flags = QNetworkConfiguration::StateFlags()
argument_list|)
specifier|const
block|;
name|QNetworkConfiguration
name|configurationFromIdentifier
argument_list|(
argument|const QString&identifier
argument_list|)
specifier|const
block|;
name|bool
name|isOnline
argument_list|()
specifier|const
block|;
name|public
name|Q_SLOTS
operator|:
name|void
name|updateConfigurations
argument_list|()
block|;
name|Q_SIGNALS
operator|:
name|void
name|configurationAdded
argument_list|(
specifier|const
name|QNetworkConfiguration
operator|&
name|config
argument_list|)
block|;
name|void
name|configurationRemoved
argument_list|(
specifier|const
name|QNetworkConfiguration
operator|&
name|config
argument_list|)
block|;
name|void
name|configurationChanged
argument_list|(
specifier|const
name|QNetworkConfiguration
operator|&
name|config
argument_list|)
block|;
name|void
name|onlineStateChanged
argument_list|(
argument|bool isOnline
argument_list|)
block|;
name|void
name|updateCompleted
argument_list|()
block|;
name|private
operator|:
name|Q_DISABLE_COPY
argument_list|(
argument|QNetworkConfigurationManager
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_macro
name|Q_DECLARE_OPERATORS_FOR_FLAGS
argument_list|(
argument|QNetworkConfigurationManager::Capabilities
argument_list|)
end_macro
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_BEARERMANAGEMENT
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QNETWORKCONFIGMANAGER_H
end_comment
end_unit
