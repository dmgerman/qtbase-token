begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the QtNetwork module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_comment
comment|/**************************************************************************** ** ** In addition, as a special exception, the copyright holders listed above give ** permission to link the code of its release of Qt with the OpenSSL project's ** "OpenSSL" library (or modified versions of the "OpenSSL" library that use the ** same license as the original version), and distribute the linked executables. ** ** You must comply with the GNU General Public License version 2 in all ** respects for all of the code used other than the "OpenSSL" code.  If you ** modify this file, you may extend this exception to your version of the file, ** but you are not obligated to do so.  If you do not wish to do so, delete ** this exception statement from your version of this file. ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"qsslsocket_openssl_p.h"
end_include
begin_include
include|#
directive|include
file|<QtCore/private/qjni_p.h>
end_include
begin_function
name|QT_BEGIN_NAMESPACE
DECL|function|fetchSslCertificateData
name|QList
argument_list|<
name|QByteArray
argument_list|>
name|QSslSocketPrivate
operator|::
name|fetchSslCertificateData
parameter_list|()
block|{
name|QList
argument_list|<
name|QByteArray
argument_list|>
name|certificateData
decl_stmt|;
name|QJNIObjectPrivate
name|certificates
init|=
name|QJNIObjectPrivate
operator|::
name|callStaticObjectMethod
argument_list|(
literal|"org/qtproject/qt5/android/QtNative"
argument_list|,
literal|"getSSLCertificates"
argument_list|,
literal|"()[[B"
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|certificates
operator|.
name|isValid
argument_list|()
condition|)
return|return
name|certificateData
return|;
name|QJNIEnvironmentPrivate
name|env
decl_stmt|;
name|jobjectArray
name|jcertificates
init|=
cast|static_cast
argument_list|<
name|jobjectArray
argument_list|>
argument_list|(
name|certificates
operator|.
name|object
argument_list|()
argument_list|)
decl_stmt|;
specifier|const
name|jint
name|nCertificates
init|=
name|env
operator|->
name|GetArrayLength
argument_list|(
name|jcertificates
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|nCertificates
condition|;
operator|++
name|i
control|)
block|{
name|jbyteArray
name|jCert
init|=
cast|static_cast
argument_list|<
name|jbyteArray
argument_list|>
argument_list|(
name|env
operator|->
name|GetObjectArrayElement
argument_list|(
name|jcertificates
argument_list|,
name|i
argument_list|)
argument_list|)
decl_stmt|;
specifier|const
name|uint
name|sz
init|=
name|env
operator|->
name|GetArrayLength
argument_list|(
name|jCert
argument_list|)
decl_stmt|;
name|jbyte
modifier|*
name|buffer
init|=
name|env
operator|->
name|GetByteArrayElements
argument_list|(
name|jCert
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|certificateData
operator|.
name|append
argument_list|(
name|QByteArray
argument_list|(
cast|reinterpret_cast
argument_list|<
name|char
operator|*
argument_list|>
argument_list|(
name|buffer
argument_list|)
argument_list|,
name|sz
argument_list|)
argument_list|)
expr_stmt|;
name|env
operator|->
name|ReleaseByteArrayElements
argument_list|(
name|jCert
argument_list|,
name|buffer
argument_list|,
name|JNI_ABORT
argument_list|)
expr_stmt|;
comment|// don't copy back the elements
name|env
operator|->
name|DeleteLocalRef
argument_list|(
name|jCert
argument_list|)
expr_stmt|;
block|}
return|return
name|certificateData
return|;
block|}
end_function
begin_macro
name|QT_END_NAMESPACE
end_macro
end_unit
