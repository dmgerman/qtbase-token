begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Copyright (C) 2014 BlackBerry Limited. All rights reserved. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the QtNetwork module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 3 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL3 included in the ** packaging of this file. Please review the following information to ** ensure the GNU Lesser General Public License version 3 requirements ** will be met: https://www.gnu.org/licenses/lgpl-3.0.html. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 2.0 or (at your option) the GNU General ** Public license version 3 or any later version approved by the KDE Free ** Qt Foundation. The licenses are as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL2 and LICENSE.GPL3 ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-2.0.html and ** https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_comment
comment|/**************************************************************************** ** ** In addition, as a special exception, the copyright holders listed above give ** permission to link the code of its release of Qt with the OpenSSL project's ** "OpenSSL" library (or modified versions of the "OpenSSL" library that use the ** same license as the original version), and distribute the linked executables. ** ** You must comply with the GNU General Public License version 2 in all ** respects for all of the code used other than the "OpenSSL" code.  If you ** modify this file, you may extend this exception to your version of the file, ** but you are not obligated to do so.  If you do not wish to do so, delete ** this exception statement from your version of this file. ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QSSLCONFIGURATION_P_H
end_ifndef
begin_define
DECL|macro|QSSLCONFIGURATION_P_H
define|#
directive|define
name|QSSLCONFIGURATION_P_H
end_define
begin_comment
comment|//
end_comment
begin_comment
comment|//  W A R N I N G
end_comment
begin_comment
comment|//  -------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// This file is not part of the Qt API.  It exists for the convenience
end_comment
begin_comment
comment|// of the QSslSocket API.  This header file may change from
end_comment
begin_comment
comment|// version to version without notice, or even be removed.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// We mean it.
end_comment
begin_comment
comment|//
end_comment
begin_include
include|#
directive|include
file|"qsslconfiguration.h"
end_include
begin_include
include|#
directive|include
file|"qlist.h"
end_include
begin_include
include|#
directive|include
file|"qsslcertificate.h"
end_include
begin_include
include|#
directive|include
file|"qsslcipher.h"
end_include
begin_include
include|#
directive|include
file|"qsslkey.h"
end_include
begin_include
include|#
directive|include
file|"qsslellipticcurve.h"
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
name|class
name|QSslConfigurationPrivate
range|:
name|public
name|QSharedData
block|{
name|public
operator|:
name|QSslConfigurationPrivate
argument_list|()
operator|:
name|sessionProtocol
argument_list|(
name|QSsl
operator|::
name|UnknownProtocol
argument_list|)
block|,
name|protocol
argument_list|(
name|QSsl
operator|::
name|SecureProtocols
argument_list|)
block|,
name|peerVerifyMode
argument_list|(
name|QSslSocket
operator|::
name|AutoVerifyPeer
argument_list|)
block|,
name|peerVerifyDepth
argument_list|(
literal|0
argument_list|)
block|,
name|allowRootCertOnDemandLoading
argument_list|(
name|true
argument_list|)
block|,
name|peerSessionShared
argument_list|(
name|false
argument_list|)
block|,
name|sslOptions
argument_list|(
name|QSslConfigurationPrivate
operator|::
name|defaultSslOptions
argument_list|)
block|,
name|sslSessionTicketLifeTimeHint
argument_list|(
operator|-
literal|1
argument_list|)
block|,
name|ephemeralServerKey
argument_list|()
block|,
name|nextProtocolNegotiationStatus
argument_list|(
argument|QSslConfiguration::NextProtocolNegotiationNone
argument_list|)
block|{ }
name|QSslCertificate
name|peerCertificate
block|;
name|QList
operator|<
name|QSslCertificate
operator|>
name|peerCertificateChain
block|;
name|QList
operator|<
name|QSslCertificate
operator|>
name|localCertificateChain
block|;
name|QSslKey
name|privateKey
block|;
name|QSslCipher
name|sessionCipher
block|;
name|QSsl
operator|::
name|SslProtocol
name|sessionProtocol
block|;
name|QList
operator|<
name|QSslCipher
operator|>
name|ciphers
block|;
name|QList
operator|<
name|QSslCertificate
operator|>
name|caCertificates
block|;
name|QSsl
operator|::
name|SslProtocol
name|protocol
block|;
name|QSslSocket
operator|::
name|PeerVerifyMode
name|peerVerifyMode
block|;
name|int
name|peerVerifyDepth
block|;
name|bool
name|allowRootCertOnDemandLoading
block|;
name|bool
name|peerSessionShared
block|;
name|Q_AUTOTEST_EXPORT
specifier|static
name|bool
name|peerSessionWasShared
argument_list|(
specifier|const
name|QSslConfiguration
operator|&
name|configuration
argument_list|)
block|;
name|QSsl
operator|::
name|SslOptions
name|sslOptions
block|;
name|Q_AUTOTEST_EXPORT
specifier|static
specifier|const
name|QSsl
operator|::
name|SslOptions
name|defaultSslOptions
block|;
name|QVector
operator|<
name|QSslEllipticCurve
operator|>
name|ellipticCurves
block|;
name|QByteArray
name|sslSession
block|;
name|int
name|sslSessionTicketLifeTimeHint
block|;
name|QSslKey
name|ephemeralServerKey
block|;
name|QList
operator|<
name|QByteArray
operator|>
name|nextAllowedProtocols
block|;
name|QByteArray
name|nextNegotiatedProtocol
block|;
name|QSslConfiguration
operator|::
name|NextProtocolNegotiationStatus
name|nextProtocolNegotiationStatus
block|;
comment|// in qsslsocket.cpp:
specifier|static
name|QSslConfiguration
name|defaultConfiguration
argument_list|()
block|;
specifier|static
name|void
name|setDefaultConfiguration
argument_list|(
specifier|const
name|QSslConfiguration
operator|&
name|configuration
argument_list|)
block|;
specifier|static
name|void
name|deepCopyDefaultConfiguration
argument_list|(
name|QSslConfigurationPrivate
operator|*
name|config
argument_list|)
block|; }
decl_stmt|;
end_decl_stmt
begin_comment
comment|// implemented here for inlining purposes
end_comment
begin_expr_stmt
DECL|function|QSslConfiguration
specifier|inline
name|QSslConfiguration
operator|::
name|QSslConfiguration
argument_list|(
name|QSslConfigurationPrivate
operator|*
name|dd
argument_list|)
operator|:
name|d
argument_list|(
argument|dd
argument_list|)
block|{ }
name|QT_END_NAMESPACE
end_expr_stmt
begin_endif
endif|#
directive|endif
end_endif
end_unit
