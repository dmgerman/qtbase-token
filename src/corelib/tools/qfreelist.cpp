begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the QtCore module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"qfreelist_p.h"
end_include
begin_comment
comment|// default sizes and offsets (no need to define these when customizing)
end_comment
begin_enum
enum|enum
block|{
DECL|enumerator|Offset0
name|Offset0
init|=
literal|0x00000000
block|,
DECL|enumerator|Offset1
name|Offset1
init|=
literal|0x00008000
block|,
DECL|enumerator|Offset2
name|Offset2
init|=
literal|0x00080000
block|,
DECL|enumerator|Offset3
name|Offset3
init|=
literal|0x00800000
block|,
DECL|enumerator|Size0
name|Size0
init|=
name|Offset1
operator|-
name|Offset0
block|,
DECL|enumerator|Size1
name|Size1
init|=
name|Offset2
operator|-
name|Offset1
block|,
DECL|enumerator|Size2
name|Size2
init|=
name|Offset3
operator|-
name|Offset2
block|,
DECL|enumerator|Size3
name|Size3
init|=
name|QFreeListDefaultConstants
operator|::
name|MaxIndex
operator|-
name|Offset3
block|}
enum|;
end_enum
begin_decl_stmt
DECL|member|Sizes
specifier|const
name|int
name|QFreeListDefaultConstants
operator|::
name|Sizes
index|[
name|QFreeListDefaultConstants
operator|::
name|BlockCount
index|]
init|=
block|{
name|Size0
block|,
name|Size1
block|,
name|Size2
block|,
name|Size3
block|}
decl_stmt|;
end_decl_stmt
end_unit
