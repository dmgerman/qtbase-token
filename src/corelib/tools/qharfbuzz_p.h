begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the QtCore module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|//  W A R N I N G
end_comment
begin_comment
comment|//  -------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// This file is not part of the Qt API.  It exists purely as an
end_comment
begin_comment
comment|// implementation detail.  This header file may change from version to
end_comment
begin_comment
comment|// version without notice, or even be removed.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// We mean it.
end_comment
begin_comment
comment|//
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QHARFBUZZ_P_H
end_ifndef
begin_define
DECL|macro|QHARFBUZZ_P_H
define|#
directive|define
name|QHARFBUZZ_P_H
end_define
begin_include
include|#
directive|include
file|<QtCore/qchar.h>
end_include
begin_include
include|#
directive|include
file|<private/harfbuzz-shaper.h>
end_include
begin_function
name|QT_BEGIN_NAMESPACE
DECL|function|script_to_hbscript
specifier|static
specifier|inline
name|HB_Script
name|script_to_hbscript
parameter_list|(
name|uchar
name|script
parameter_list|)
block|{
switch|switch
condition|(
name|script
condition|)
block|{
case|case
name|QChar
operator|::
name|Script_Inherited
case|:
return|return
name|HB_Script_Inherited
return|;
case|case
name|QChar
operator|::
name|Script_Common
case|:
return|return
name|HB_Script_Common
return|;
case|case
name|QChar
operator|::
name|Script_Arabic
case|:
return|return
name|HB_Script_Arabic
return|;
case|case
name|QChar
operator|::
name|Script_Armenian
case|:
return|return
name|HB_Script_Armenian
return|;
case|case
name|QChar
operator|::
name|Script_Bengali
case|:
return|return
name|HB_Script_Bengali
return|;
case|case
name|QChar
operator|::
name|Script_Cyrillic
case|:
return|return
name|HB_Script_Cyrillic
return|;
case|case
name|QChar
operator|::
name|Script_Devanagari
case|:
return|return
name|HB_Script_Devanagari
return|;
case|case
name|QChar
operator|::
name|Script_Georgian
case|:
return|return
name|HB_Script_Georgian
return|;
case|case
name|QChar
operator|::
name|Script_Greek
case|:
return|return
name|HB_Script_Greek
return|;
case|case
name|QChar
operator|::
name|Script_Gujarati
case|:
return|return
name|HB_Script_Gujarati
return|;
case|case
name|QChar
operator|::
name|Script_Gurmukhi
case|:
return|return
name|HB_Script_Gurmukhi
return|;
case|case
name|QChar
operator|::
name|Script_Hangul
case|:
return|return
name|HB_Script_Hangul
return|;
case|case
name|QChar
operator|::
name|Script_Hebrew
case|:
return|return
name|HB_Script_Hebrew
return|;
case|case
name|QChar
operator|::
name|Script_Kannada
case|:
return|return
name|HB_Script_Kannada
return|;
case|case
name|QChar
operator|::
name|Script_Khmer
case|:
return|return
name|HB_Script_Khmer
return|;
case|case
name|QChar
operator|::
name|Script_Lao
case|:
return|return
name|HB_Script_Lao
return|;
case|case
name|QChar
operator|::
name|Script_Malayalam
case|:
return|return
name|HB_Script_Malayalam
return|;
case|case
name|QChar
operator|::
name|Script_Myanmar
case|:
return|return
name|HB_Script_Myanmar
return|;
case|case
name|QChar
operator|::
name|Script_Ogham
case|:
return|return
name|HB_Script_Ogham
return|;
case|case
name|QChar
operator|::
name|Script_Oriya
case|:
return|return
name|HB_Script_Oriya
return|;
case|case
name|QChar
operator|::
name|Script_Runic
case|:
return|return
name|HB_Script_Runic
return|;
case|case
name|QChar
operator|::
name|Script_Sinhala
case|:
return|return
name|HB_Script_Sinhala
return|;
case|case
name|QChar
operator|::
name|Script_Syriac
case|:
return|return
name|HB_Script_Syriac
return|;
case|case
name|QChar
operator|::
name|Script_Tamil
case|:
return|return
name|HB_Script_Tamil
return|;
case|case
name|QChar
operator|::
name|Script_Telugu
case|:
return|return
name|HB_Script_Telugu
return|;
case|case
name|QChar
operator|::
name|Script_Thaana
case|:
return|return
name|HB_Script_Thaana
return|;
case|case
name|QChar
operator|::
name|Script_Thai
case|:
return|return
name|HB_Script_Thai
return|;
case|case
name|QChar
operator|::
name|Script_Tibetan
case|:
return|return
name|HB_Script_Tibetan
return|;
case|case
name|QChar
operator|::
name|Script_Nko
case|:
return|return
name|HB_Script_Nko
return|;
default|default:
break|break;
block|}
empty_stmt|;
return|return
name|HB_Script_Common
return|;
block|}
end_function
begin_function
DECL|function|hbscript_to_script
specifier|static
specifier|inline
name|uchar
name|hbscript_to_script
parameter_list|(
name|uchar
name|script
parameter_list|)
block|{
switch|switch
condition|(
name|script
condition|)
block|{
case|case
name|HB_Script_Inherited
case|:
return|return
name|QChar
operator|::
name|Script_Inherited
return|;
case|case
name|HB_Script_Common
case|:
return|return
name|QChar
operator|::
name|Script_Common
return|;
case|case
name|HB_Script_Arabic
case|:
return|return
name|QChar
operator|::
name|Script_Arabic
return|;
case|case
name|HB_Script_Armenian
case|:
return|return
name|QChar
operator|::
name|Script_Armenian
return|;
case|case
name|HB_Script_Bengali
case|:
return|return
name|QChar
operator|::
name|Script_Bengali
return|;
case|case
name|HB_Script_Cyrillic
case|:
return|return
name|QChar
operator|::
name|Script_Cyrillic
return|;
case|case
name|HB_Script_Devanagari
case|:
return|return
name|QChar
operator|::
name|Script_Devanagari
return|;
case|case
name|HB_Script_Georgian
case|:
return|return
name|QChar
operator|::
name|Script_Georgian
return|;
case|case
name|HB_Script_Greek
case|:
return|return
name|QChar
operator|::
name|Script_Greek
return|;
case|case
name|HB_Script_Gujarati
case|:
return|return
name|QChar
operator|::
name|Script_Gujarati
return|;
case|case
name|HB_Script_Gurmukhi
case|:
return|return
name|QChar
operator|::
name|Script_Gurmukhi
return|;
case|case
name|HB_Script_Hangul
case|:
return|return
name|QChar
operator|::
name|Script_Hangul
return|;
case|case
name|HB_Script_Hebrew
case|:
return|return
name|QChar
operator|::
name|Script_Hebrew
return|;
case|case
name|HB_Script_Kannada
case|:
return|return
name|QChar
operator|::
name|Script_Kannada
return|;
case|case
name|HB_Script_Khmer
case|:
return|return
name|QChar
operator|::
name|Script_Khmer
return|;
case|case
name|HB_Script_Lao
case|:
return|return
name|QChar
operator|::
name|Script_Lao
return|;
case|case
name|HB_Script_Malayalam
case|:
return|return
name|QChar
operator|::
name|Script_Malayalam
return|;
case|case
name|HB_Script_Myanmar
case|:
return|return
name|QChar
operator|::
name|Script_Myanmar
return|;
case|case
name|HB_Script_Ogham
case|:
return|return
name|QChar
operator|::
name|Script_Ogham
return|;
case|case
name|HB_Script_Oriya
case|:
return|return
name|QChar
operator|::
name|Script_Oriya
return|;
case|case
name|HB_Script_Runic
case|:
return|return
name|QChar
operator|::
name|Script_Runic
return|;
case|case
name|HB_Script_Sinhala
case|:
return|return
name|QChar
operator|::
name|Script_Sinhala
return|;
case|case
name|HB_Script_Syriac
case|:
return|return
name|QChar
operator|::
name|Script_Syriac
return|;
case|case
name|HB_Script_Tamil
case|:
return|return
name|QChar
operator|::
name|Script_Tamil
return|;
case|case
name|HB_Script_Telugu
case|:
return|return
name|QChar
operator|::
name|Script_Telugu
return|;
case|case
name|HB_Script_Thaana
case|:
return|return
name|QChar
operator|::
name|Script_Thaana
return|;
case|case
name|HB_Script_Thai
case|:
return|return
name|QChar
operator|::
name|Script_Thai
return|;
case|case
name|HB_Script_Tibetan
case|:
return|return
name|QChar
operator|::
name|Script_Tibetan
return|;
case|case
name|HB_Script_Nko
case|:
return|return
name|QChar
operator|::
name|Script_Nko
return|;
default|default:
break|break;
block|}
empty_stmt|;
return|return
name|QChar
operator|::
name|Script_Common
return|;
block|}
end_function
begin_function_decl
name|Q_CORE_EXPORT
name|HB_Bool
name|qShapeItem
parameter_list|(
name|HB_ShaperItem
modifier|*
name|item
parameter_list|)
function_decl|;
end_function_decl
begin_comment
comment|// ### temporary
end_comment
begin_function_decl
name|Q_CORE_EXPORT
name|HB_Face
name|qHBNewFace
parameter_list|(
name|void
modifier|*
name|font
parameter_list|,
name|HB_GetFontTableFunc
name|tableFunc
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|Q_CORE_EXPORT
name|void
name|qHBFreeFace
parameter_list|(
name|HB_Face
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|Q_CORE_EXPORT
name|HB_Face
name|qHBLoadFace
parameter_list|(
name|HB_Face
name|face
parameter_list|)
function_decl|;
end_function_decl
begin_expr_stmt
name|Q_DECLARE_TYPEINFO
argument_list|(
name|HB_GlyphAttributes
argument_list|,
name|Q_PRIMITIVE_TYPE
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|Q_DECLARE_TYPEINFO
argument_list|(
name|HB_FixedPoint
argument_list|,
name|Q_PRIMITIVE_TYPE
argument_list|)
expr_stmt|;
end_expr_stmt
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
end_unit
