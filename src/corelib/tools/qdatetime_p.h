begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the QtCore module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QDATETIME_P_H
end_ifndef
begin_define
DECL|macro|QDATETIME_P_H
define|#
directive|define
name|QDATETIME_P_H
end_define
begin_comment
comment|//
end_comment
begin_comment
comment|//  W A R N I N G
end_comment
begin_comment
comment|//  -------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// This file is not part of the Qt API.  It exists purely as an
end_comment
begin_comment
comment|// implementation detail.  This header file may change from version to
end_comment
begin_comment
comment|// version without notice, or even be removed.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// We mean it.
end_comment
begin_comment
comment|//
end_comment
begin_include
include|#
directive|include
file|"qplatformdefs.h"
end_include
begin_include
include|#
directive|include
file|"QtCore/qatomic.h"
end_include
begin_include
include|#
directive|include
file|"QtCore/qdatetime.h"
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
name|class
name|QDateTimePrivate
range|:
name|public
name|QSharedData
block|{
name|public
operator|:
expr|enum
name|Spec
block|{
name|LocalUnknown
operator|=
operator|-
literal|1
block|,
name|LocalStandard
operator|=
literal|0
block|,
name|LocalDST
operator|=
literal|1
block|,
name|UTC
operator|=
literal|2
block|,
name|OffsetFromUTC
operator|=
literal|3
block|}
block|;
name|QDateTimePrivate
argument_list|()
operator|:
name|spec
argument_list|(
name|LocalUnknown
argument_list|)
block|,
name|m_offsetFromUtc
argument_list|(
literal|0
argument_list|)
block|{}
name|QDateTimePrivate
argument_list|(
argument|const QDate&toDate
argument_list|,
argument|const QTime&toTime
argument_list|,
argument|Qt::TimeSpec toSpec
argument_list|,
argument|int offsetSeconds
argument_list|)
block|;
name|QDateTimePrivate
argument_list|(
specifier|const
name|QDateTimePrivate
operator|&
name|other
argument_list|)
operator|:
name|QSharedData
argument_list|(
name|other
argument_list|)
block|,
name|date
argument_list|(
name|other
operator|.
name|date
argument_list|)
block|,
name|time
argument_list|(
name|other
operator|.
name|time
argument_list|)
block|,
name|spec
argument_list|(
name|other
operator|.
name|spec
argument_list|)
block|,
name|m_offsetFromUtc
argument_list|(
argument|other.m_offsetFromUtc
argument_list|)
block|{}
name|QDate
name|date
block|;
name|QTime
name|time
block|;
name|Spec
name|spec
block|;
name|int
name|m_offsetFromUtc
block|;
comment|// Get current date/time in LocalTime and put result in outDate and outTime
name|Spec
name|getLocal
argument_list|(
argument|QDate&outDate
argument_list|,
argument|QTime&outTime
argument_list|)
specifier|const
block|;
comment|// Get current date/time in UTC and put result in outDate and outTime
name|void
name|getUTC
argument_list|(
argument|QDate&outDate
argument_list|,
argument|QTime&outTime
argument_list|)
specifier|const
block|;
comment|// Add msecs to given datetime and return result
specifier|static
name|QDateTime
name|addMSecs
argument_list|(
argument|const QDateTime&dt
argument_list|,
argument|qint64 msecs
argument_list|)
block|;
comment|// Add msecs to given datetime and put result in utcDate and utcTime
specifier|static
name|void
name|addMSecs
argument_list|(
argument|QDate&utcDate
argument_list|,
argument|QTime&utcTime
argument_list|,
argument|qint64 msecs
argument_list|)
block|;
specifier|static
specifier|inline
name|qint64
name|minJd
argument_list|()
block|{
return|return
name|QDate
operator|::
name|minJd
argument_list|()
return|;
block|}
specifier|static
specifier|inline
name|qint64
name|maxJd
argument_list|()
block|{
return|return
name|QDate
operator|::
name|maxJd
argument_list|()
return|;
block|}
expr|}
block|;
name|QT_END_NAMESPACE
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QDATETIME_P_H
end_comment
end_unit
