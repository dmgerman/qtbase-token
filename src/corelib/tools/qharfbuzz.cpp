begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the QtCore module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"qharfbuzz_p.h"
end_include
begin_include
include|#
directive|include
file|"qunicodetables_p.h"
end_include
begin_include
include|#
directive|include
file|"qlibrary.h"
end_include
begin_expr_stmt
name|QT_USE_NAMESPACE
specifier|extern
literal|"C"
block|{
DECL|function|HB_GetUnicodeCharProperties
name|void
name|HB_GetUnicodeCharProperties
argument_list|(
argument|HB_UChar32 ch
argument_list|,
argument|HB_CharCategory *category
argument_list|,
argument|int *combiningClass
argument_list|)
block|{
specifier|const
name|QUnicodeTables
operator|::
name|Properties
operator|*
name|prop
operator|=
name|QUnicodeTables
operator|::
name|properties
argument_list|(
name|ch
argument_list|)
block|;
operator|*
name|category
operator|=
operator|(
name|HB_CharCategory
operator|)
name|prop
operator|->
name|category
block|;
operator|*
name|combiningClass
operator|=
name|prop
operator|->
name|combiningClass
block|; }
DECL|function|HB_GetUnicodeCharCategory
name|HB_CharCategory
name|HB_GetUnicodeCharCategory
argument_list|(
argument|HB_UChar32 ch
argument_list|)
block|{
return|return
operator|(
name|HB_CharCategory
operator|)
name|QChar
operator|::
name|category
argument_list|(
name|ch
argument_list|)
return|;
block|}
DECL|function|HB_GetUnicodeCharCombiningClass
name|int
name|HB_GetUnicodeCharCombiningClass
argument_list|(
argument|HB_UChar32 ch
argument_list|)
block|{
return|return
name|QChar
operator|::
name|combiningClass
argument_list|(
name|ch
argument_list|)
return|;
block|}
end_expr_stmt
begin_function
DECL|function|HB_GetMirroredChar
name|HB_UChar16
name|HB_GetMirroredChar
parameter_list|(
name|HB_UChar16
name|ch
parameter_list|)
block|{
return|return
name|QChar
operator|::
name|mirroredChar
argument_list|(
name|ch
argument_list|)
return|;
block|}
end_function
begin_macro
DECL|function|HB_Library_Resolve
name|void
argument_list|(
argument|*HB_Library_Resolve(const char *library, int version, const char *symbol)
argument_list|)
end_macro
begin_expr_stmt
DECL|function|HB_Library_Resolve
operator|(
operator|)
block|{
ifdef|#
directive|ifdef
name|QT_NO_LIBRARY
return|return
literal|0
return|;
end_expr_stmt
begin_else
else|#
directive|else
end_else
begin_return
return|return
name|QLibrary
operator|::
name|resolve
argument_list|(
name|QLatin1String
argument_list|(
name|library
argument_list|)
argument_list|,
name|version
argument_list|,
name|symbol
argument_list|)
return|;
end_return
begin_endif
endif|#
directive|endif
end_endif
begin_comment
unit|}  }
comment|// extern "C"
end_comment
begin_function
name|QT_BEGIN_NAMESPACE
DECL|function|qShapeItem
name|HB_Bool
name|qShapeItem
parameter_list|(
name|HB_ShaperItem
modifier|*
name|item
parameter_list|)
block|{
return|return
name|HB_ShapeItem
argument_list|(
name|item
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|qHBNewFace
name|HB_Face
name|qHBNewFace
parameter_list|(
name|void
modifier|*
name|font
parameter_list|,
name|HB_GetFontTableFunc
name|tableFunc
parameter_list|)
block|{
return|return
name|HB_AllocFace
argument_list|(
name|font
argument_list|,
name|tableFunc
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|qHBLoadFace
name|HB_Face
name|qHBLoadFace
parameter_list|(
name|HB_Face
name|face
parameter_list|)
block|{
return|return
name|HB_LoadFace
argument_list|(
name|face
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|qHBFreeFace
name|void
name|qHBFreeFace
parameter_list|(
name|HB_Face
name|face
parameter_list|)
block|{
name|HB_FreeFace
argument_list|(
name|face
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QT_END_NAMESPACE
end_macro
end_unit
