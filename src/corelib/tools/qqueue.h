begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the QtCore module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 3 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL3 included in the ** packaging of this file. Please review the following information to ** ensure the GNU Lesser General Public License version 3 requirements ** will be met: https://www.gnu.org/licenses/lgpl-3.0.html. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 2.0 or (at your option) the GNU General ** Public license version 3 or any later version approved by the KDE Free ** Qt Foundation. The licenses are as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL2 and LICENSE.GPL3 ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-2.0.html and ** https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QQUEUE_H
end_ifndef
begin_define
DECL|macro|QQUEUE_H
define|#
directive|define
name|QQUEUE_H
end_define
begin_include
include|#
directive|include
file|<QtCore/qlist.h>
end_include
begin_expr_stmt
name|QT_BEGIN_NAMESPACE
name|template
operator|<
name|class
name|T
operator|>
name|class
name|QQueue
operator|:
name|public
name|QList
operator|<
name|T
operator|>
block|{
name|public
operator|:
comment|// compiler-generated special member functions are fine!
specifier|inline
name|void
name|swap
argument_list|(
argument|QQueue<T>&other
argument_list|)
name|Q_DECL_NOTHROW
block|{
name|QList
operator|<
name|T
operator|>
operator|::
name|swap
argument_list|(
name|other
argument_list|)
block|; }
comment|// prevent QList<->QQueue swaps
ifndef|#
directive|ifndef
name|Q_QDOC
comment|// bring in QList::swap(int, int). We cannot say using QList<T>::swap,
comment|// because we don't want to make swap(QList&) available.
specifier|inline
name|void
name|swap
argument_list|(
argument|int i
argument_list|,
argument|int j
argument_list|)
block|{
name|QList
operator|<
name|T
operator|>
operator|::
name|swap
argument_list|(
name|i
argument_list|,
name|j
argument_list|)
block|; }
endif|#
directive|endif
specifier|inline
name|void
name|enqueue
argument_list|(
argument|const T&t
argument_list|)
block|{
name|QList
operator|<
name|T
operator|>
operator|::
name|append
argument_list|(
name|t
argument_list|)
block|; }
specifier|inline
name|T
name|dequeue
argument_list|()
block|{
return|return
name|QList
operator|<
name|T
operator|>
operator|::
name|takeFirst
argument_list|()
return|;
block|}
specifier|inline
name|T
operator|&
name|head
argument_list|()
block|{
return|return
name|QList
operator|<
name|T
operator|>
operator|::
name|first
argument_list|()
return|;
block|}
end_expr_stmt
begin_expr_stmt
specifier|inline
specifier|const
name|T
operator|&
name|head
argument_list|()
specifier|const
block|{
return|return
name|QList
operator|<
name|T
operator|>
operator|::
name|first
argument_list|()
return|;
block|}
end_expr_stmt
begin_macro
unit|};
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QQUEUE_H
end_comment
end_unit
