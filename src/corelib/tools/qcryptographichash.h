begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Copyright (C) 2013 Richard J. Moore<rich@kde.org>. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the QtCore module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QCRYPTOGRAPHICHASH_H
end_ifndef
begin_define
DECL|macro|QCRYPTOGRAPHICHASH_H
define|#
directive|define
name|QCRYPTOGRAPHICHASH_H
end_define
begin_include
include|#
directive|include
file|<QtCore/qbytearray.h>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
DECL|variable|QCryptographicHashPrivate
name|class
name|QCryptographicHashPrivate
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QIODevice
name|class
name|QIODevice
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|Q_CORE_EXPORT
name|QCryptographicHash
block|{
name|public
label|:
enum|enum
name|Algorithm
block|{
ifndef|#
directive|ifndef
name|QT_CRYPTOGRAPHICHASH_ONLY_SHA1
name|Md4
block|,
name|Md5
block|,
endif|#
directive|endif
name|Sha1
init|=
literal|2
block|,
ifndef|#
directive|ifndef
name|QT_CRYPTOGRAPHICHASH_ONLY_SHA1
name|Sha224
block|,
name|Sha256
block|,
name|Sha384
block|,
name|Sha512
block|,
name|Sha3_224
block|,
name|Sha3_256
block|,
name|Sha3_384
block|,
name|Sha3_512
endif|#
directive|endif
block|}
enum|;
name|explicit
name|QCryptographicHash
parameter_list|(
name|Algorithm
name|method
parameter_list|)
function_decl|;
operator|~
name|QCryptographicHash
argument_list|()
expr_stmt|;
name|void
name|reset
parameter_list|()
function_decl|;
name|void
name|addData
parameter_list|(
specifier|const
name|char
modifier|*
name|data
parameter_list|,
name|int
name|length
parameter_list|)
function_decl|;
name|void
name|addData
parameter_list|(
specifier|const
name|QByteArray
modifier|&
name|data
parameter_list|)
function_decl|;
name|bool
name|addData
parameter_list|(
name|QIODevice
modifier|*
name|device
parameter_list|)
function_decl|;
name|QByteArray
name|result
argument_list|()
specifier|const
expr_stmt|;
specifier|static
name|QByteArray
name|hash
parameter_list|(
specifier|const
name|QByteArray
modifier|&
name|data
parameter_list|,
name|Algorithm
name|method
parameter_list|)
function_decl|;
name|private
label|:
name|Q_DISABLE_COPY
argument_list|(
argument|QCryptographicHash
argument_list|)
name|QCryptographicHashPrivate
modifier|*
name|d
decl_stmt|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
end_unit
