begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: http://www.qt-project.org/ ** ** This file is part of the QtCore module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QTEXTBOUNDARYFINDER_H
end_ifndef
begin_define
DECL|macro|QTEXTBOUNDARYFINDER_H
define|#
directive|define
name|QTEXTBOUNDARYFINDER_H
end_define
begin_include
include|#
directive|include
file|<QtCore/qchar.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qstring.h>
end_include
begin_decl_stmt
name|QT_BEGIN_HEADER
name|QT_BEGIN_NAMESPACE
DECL|variable|QTextBoundaryFinderPrivate
name|class
name|QTextBoundaryFinderPrivate
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|Q_CORE_EXPORT
name|QTextBoundaryFinder
block|{
name|public
label|:
name|QTextBoundaryFinder
argument_list|()
expr_stmt|;
name|QTextBoundaryFinder
argument_list|(
specifier|const
name|QTextBoundaryFinder
operator|&
name|other
argument_list|)
expr_stmt|;
name|QTextBoundaryFinder
modifier|&
name|operator
init|=
operator|(
specifier|const
name|QTextBoundaryFinder
operator|&
name|other
operator|)
decl_stmt|;
operator|~
name|QTextBoundaryFinder
argument_list|()
expr_stmt|;
enum|enum
name|BoundaryType
block|{
name|Grapheme
block|,
name|Word
block|,
name|Line
block|,
name|Sentence
block|}
enum|;
enum|enum
name|BoundaryReason
block|{
name|NotAtBoundary
init|=
literal|0
block|,
name|StartWord
init|=
literal|1
block|,
name|EndWord
init|=
literal|2
comment|//Hyphen
block|}
enum|;
name|Q_DECLARE_FLAGS
argument_list|(
argument|BoundaryReasons
argument_list|,
argument|BoundaryReason
argument_list|)
name|QTextBoundaryFinder
argument_list|(
argument|BoundaryType type
argument_list|,
argument|const QString&string
argument_list|)
empty_stmt|;
name|QTextBoundaryFinder
argument_list|(
argument|BoundaryType type
argument_list|,
argument|const QChar *chars
argument_list|,
argument|int length
argument_list|,
argument|unsigned char *buffer =
literal|0
argument_list|,
argument|int bufferSize =
literal|0
argument_list|)
empty_stmt|;
specifier|inline
name|bool
name|isValid
argument_list|()
specifier|const
block|{
return|return
name|d
return|;
block|}
specifier|inline
name|BoundaryType
name|type
argument_list|()
specifier|const
block|{
return|return
name|t
return|;
block|}
name|QString
name|string
argument_list|()
specifier|const
expr_stmt|;
name|void
name|toStart
parameter_list|()
function_decl|;
name|void
name|toEnd
parameter_list|()
function_decl|;
name|int
name|position
argument_list|()
specifier|const
expr_stmt|;
name|void
name|setPosition
parameter_list|(
name|int
name|position
parameter_list|)
function_decl|;
name|int
name|toNextBoundary
parameter_list|()
function_decl|;
name|int
name|toPreviousBoundary
parameter_list|()
function_decl|;
name|bool
name|isAtBoundary
argument_list|()
specifier|const
expr_stmt|;
name|BoundaryReasons
name|boundaryReasons
argument_list|()
specifier|const
expr_stmt|;
name|private
label|:
name|BoundaryType
name|t
decl_stmt|;
name|QString
name|s
decl_stmt|;
specifier|const
name|QChar
modifier|*
name|chars
decl_stmt|;
name|int
name|length
decl_stmt|;
name|int
name|pos
decl_stmt|;
name|uint
name|freePrivate
range|:
literal|1
decl_stmt|;
name|uint
name|unused
range|:
literal|31
decl_stmt|;
name|QTextBoundaryFinderPrivate
modifier|*
name|d
decl_stmt|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_expr_stmt
name|QT_END_NAMESPACE
name|QT_END_HEADER
end_expr_stmt
begin_endif
endif|#
directive|endif
end_endif
end_unit
