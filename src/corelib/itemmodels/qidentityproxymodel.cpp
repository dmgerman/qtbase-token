begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 KlarÃ¤lvdalens Datakonsult AB, a KDAB Group company, info@kdab.com, author Stephen Kelly<stephen.kelly@kdab.com> ** Contact: http://www.qt-project.org/ ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"qidentityproxymodel.h"
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_IDENTITYPROXYMODEL
end_ifndef
begin_include
include|#
directive|include
file|"qitemselectionmodel.h"
end_include
begin_include
include|#
directive|include
file|<private/qabstractproxymodel_p.h>
end_include
begin_macro
name|QT_BEGIN_NAMESPACE
end_macro
begin_class
DECL|class|QIdentityProxyModelPrivate
class|class
name|QIdentityProxyModelPrivate
super|:
specifier|public
name|QAbstractProxyModelPrivate
block|{
DECL|function|QIdentityProxyModelPrivate
name|QIdentityProxyModelPrivate
parameter_list|()
block|{      }
name|Q_DECLARE_PUBLIC
parameter_list|(
name|QIdentityProxyModel
parameter_list|)
DECL|member|layoutChangePersistentIndexes
name|QList
argument_list|<
name|QPersistentModelIndex
argument_list|>
name|layoutChangePersistentIndexes
decl_stmt|;
DECL|member|proxyIndexes
name|QModelIndexList
name|proxyIndexes
decl_stmt|;
name|void
name|_q_sourceRowsAboutToBeInserted
constructor_decl|(
specifier|const
name|QModelIndex
modifier|&
name|parent
decl_stmt|,
name|int
name|start
decl_stmt|,
name|int
name|end
decl_stmt|);
name|void
name|_q_sourceRowsInserted
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|parent
parameter_list|,
name|int
name|start
parameter_list|,
name|int
name|end
parameter_list|)
function_decl|;
name|void
name|_q_sourceRowsAboutToBeRemoved
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|parent
parameter_list|,
name|int
name|start
parameter_list|,
name|int
name|end
parameter_list|)
function_decl|;
name|void
name|_q_sourceRowsRemoved
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|parent
parameter_list|,
name|int
name|start
parameter_list|,
name|int
name|end
parameter_list|)
function_decl|;
name|void
name|_q_sourceRowsAboutToBeMoved
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|sourceParent
parameter_list|,
name|int
name|sourceStart
parameter_list|,
name|int
name|sourceEnd
parameter_list|,
specifier|const
name|QModelIndex
modifier|&
name|destParent
parameter_list|,
name|int
name|dest
parameter_list|)
function_decl|;
name|void
name|_q_sourceRowsMoved
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|sourceParent
parameter_list|,
name|int
name|sourceStart
parameter_list|,
name|int
name|sourceEnd
parameter_list|,
specifier|const
name|QModelIndex
modifier|&
name|destParent
parameter_list|,
name|int
name|dest
parameter_list|)
function_decl|;
name|void
name|_q_sourceColumnsAboutToBeInserted
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|parent
parameter_list|,
name|int
name|start
parameter_list|,
name|int
name|end
parameter_list|)
function_decl|;
name|void
name|_q_sourceColumnsInserted
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|parent
parameter_list|,
name|int
name|start
parameter_list|,
name|int
name|end
parameter_list|)
function_decl|;
name|void
name|_q_sourceColumnsAboutToBeRemoved
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|parent
parameter_list|,
name|int
name|start
parameter_list|,
name|int
name|end
parameter_list|)
function_decl|;
name|void
name|_q_sourceColumnsRemoved
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|parent
parameter_list|,
name|int
name|start
parameter_list|,
name|int
name|end
parameter_list|)
function_decl|;
name|void
name|_q_sourceColumnsAboutToBeMoved
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|sourceParent
parameter_list|,
name|int
name|sourceStart
parameter_list|,
name|int
name|sourceEnd
parameter_list|,
specifier|const
name|QModelIndex
modifier|&
name|destParent
parameter_list|,
name|int
name|dest
parameter_list|)
function_decl|;
name|void
name|_q_sourceColumnsMoved
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|sourceParent
parameter_list|,
name|int
name|sourceStart
parameter_list|,
name|int
name|sourceEnd
parameter_list|,
specifier|const
name|QModelIndex
modifier|&
name|destParent
parameter_list|,
name|int
name|dest
parameter_list|)
function_decl|;
name|void
name|_q_sourceDataChanged
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|topLeft
parameter_list|,
specifier|const
name|QModelIndex
modifier|&
name|bottomRight
parameter_list|)
function_decl|;
name|void
name|_q_sourceHeaderDataChanged
parameter_list|(
name|Qt
operator|::
name|Orientation
name|orientation
parameter_list|,
name|int
name|first
parameter_list|,
name|int
name|last
parameter_list|)
function_decl|;
name|void
name|_q_sourceLayoutAboutToBeChanged
parameter_list|()
function_decl|;
name|void
name|_q_sourceLayoutChanged
parameter_list|()
function_decl|;
name|void
name|_q_sourceModelAboutToBeReset
parameter_list|()
function_decl|;
name|void
name|_q_sourceModelReset
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_comment
comment|/*!     \since 4.8     \class QIdentityProxyModel     \brief The QIdentityProxyModel class proxies its source model unmodified      \ingroup model-view     \inmodule QtCore      QIdentityProxyModel can be used to forward the structure of a source model exactly, with no sorting, filtering or other transformation.     This is similar in concept to an identity matrix where A.I = A.      Because it does no sorting or filtering, this class is most suitable to proxy models which transform the data() of the source model.     For example, a proxy model could be created to define the font used, or the background colour, or the tooltip etc. This removes the     need to implement all data handling in the same class that creates the structure of the model, and can also be used to create     re-usable components.      This also provides a way to change the data in the case where a source model is supplied by a third party which can not be modified.      \snippet doc/src/snippets/code/src_gui_itemviews_qidentityproxymodel.cpp 0      \sa QAbstractProxyModel, {Model/View Programming}, QAbstractItemModel  */
end_comment
begin_comment
comment|/*!     Constructs an identity model with the given \a parent. */
end_comment
begin_constructor
DECL|function|QIdentityProxyModel
name|QIdentityProxyModel
operator|::
name|QIdentityProxyModel
parameter_list|(
name|QObject
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QAbstractProxyModel
argument_list|(
operator|*
operator|new
name|QIdentityProxyModelPrivate
argument_list|,
name|parent
argument_list|)
block|{  }
end_constructor
begin_comment
comment|/*! \internal  */
end_comment
begin_constructor
DECL|function|QIdentityProxyModel
name|QIdentityProxyModel
operator|::
name|QIdentityProxyModel
parameter_list|(
name|QIdentityProxyModelPrivate
modifier|&
name|dd
parameter_list|,
name|QObject
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QAbstractProxyModel
argument_list|(
name|dd
argument_list|,
name|parent
argument_list|)
block|{  }
end_constructor
begin_comment
comment|/*!     Destroys this identity model. */
end_comment
begin_destructor
DECL|function|~QIdentityProxyModel
name|QIdentityProxyModel
operator|::
name|~
name|QIdentityProxyModel
parameter_list|()
block|{ }
end_destructor
begin_comment
comment|/*!     \reimp  */
end_comment
begin_function
DECL|function|columnCount
name|int
name|QIdentityProxyModel
operator|::
name|columnCount
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|parent
parameter_list|)
specifier|const
block|{
name|Q_ASSERT
argument_list|(
name|parent
operator|.
name|isValid
argument_list|()
condition|?
name|parent
operator|.
name|model
argument_list|()
operator|==
name|this
else|:
literal|true
argument_list|)
expr_stmt|;
name|Q_D
argument_list|(
specifier|const
name|QIdentityProxyModel
argument_list|)
expr_stmt|;
return|return
name|d
operator|->
name|model
operator|->
name|columnCount
argument_list|(
name|mapToSource
argument_list|(
name|parent
argument_list|)
argument_list|)
return|;
block|}
end_function
begin_comment
comment|/*!     \reimp  */
end_comment
begin_function
DECL|function|dropMimeData
name|bool
name|QIdentityProxyModel
operator|::
name|dropMimeData
parameter_list|(
specifier|const
name|QMimeData
modifier|*
name|data
parameter_list|,
name|Qt
operator|::
name|DropAction
name|action
parameter_list|,
name|int
name|row
parameter_list|,
name|int
name|column
parameter_list|,
specifier|const
name|QModelIndex
modifier|&
name|parent
parameter_list|)
block|{
name|Q_ASSERT
argument_list|(
name|parent
operator|.
name|isValid
argument_list|()
condition|?
name|parent
operator|.
name|model
argument_list|()
operator|==
name|this
else|:
literal|true
argument_list|)
expr_stmt|;
name|Q_D
argument_list|(
name|QIdentityProxyModel
argument_list|)
expr_stmt|;
return|return
name|d
operator|->
name|model
operator|->
name|dropMimeData
argument_list|(
name|data
argument_list|,
name|action
argument_list|,
name|row
argument_list|,
name|column
argument_list|,
name|mapToSource
argument_list|(
name|parent
argument_list|)
argument_list|)
return|;
block|}
end_function
begin_comment
comment|/*!     \reimp  */
end_comment
begin_function
DECL|function|index
name|QModelIndex
name|QIdentityProxyModel
operator|::
name|index
parameter_list|(
name|int
name|row
parameter_list|,
name|int
name|column
parameter_list|,
specifier|const
name|QModelIndex
modifier|&
name|parent
parameter_list|)
specifier|const
block|{
name|Q_ASSERT
argument_list|(
name|parent
operator|.
name|isValid
argument_list|()
condition|?
name|parent
operator|.
name|model
argument_list|()
operator|==
name|this
else|:
literal|true
argument_list|)
expr_stmt|;
name|Q_D
argument_list|(
specifier|const
name|QIdentityProxyModel
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|hasIndex
argument_list|(
name|row
argument_list|,
name|column
argument_list|,
name|parent
argument_list|)
condition|)
return|return
name|QModelIndex
argument_list|()
return|;
specifier|const
name|QModelIndex
name|sourceParent
init|=
name|mapToSource
argument_list|(
name|parent
argument_list|)
decl_stmt|;
specifier|const
name|QModelIndex
name|sourceIndex
init|=
name|d
operator|->
name|model
operator|->
name|index
argument_list|(
name|row
argument_list|,
name|column
argument_list|,
name|sourceParent
argument_list|)
decl_stmt|;
name|Q_ASSERT
argument_list|(
name|sourceIndex
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|mapFromSource
argument_list|(
name|sourceIndex
argument_list|)
return|;
block|}
end_function
begin_comment
comment|/*!     \reimp  */
end_comment
begin_function
DECL|function|insertColumns
name|bool
name|QIdentityProxyModel
operator|::
name|insertColumns
parameter_list|(
name|int
name|column
parameter_list|,
name|int
name|count
parameter_list|,
specifier|const
name|QModelIndex
modifier|&
name|parent
parameter_list|)
block|{
name|Q_ASSERT
argument_list|(
name|parent
operator|.
name|isValid
argument_list|()
condition|?
name|parent
operator|.
name|model
argument_list|()
operator|==
name|this
else|:
literal|true
argument_list|)
expr_stmt|;
name|Q_D
argument_list|(
name|QIdentityProxyModel
argument_list|)
expr_stmt|;
return|return
name|d
operator|->
name|model
operator|->
name|insertColumns
argument_list|(
name|column
argument_list|,
name|count
argument_list|,
name|mapToSource
argument_list|(
name|parent
argument_list|)
argument_list|)
return|;
block|}
end_function
begin_comment
comment|/*!     \reimp  */
end_comment
begin_function
DECL|function|insertRows
name|bool
name|QIdentityProxyModel
operator|::
name|insertRows
parameter_list|(
name|int
name|row
parameter_list|,
name|int
name|count
parameter_list|,
specifier|const
name|QModelIndex
modifier|&
name|parent
parameter_list|)
block|{
name|Q_ASSERT
argument_list|(
name|parent
operator|.
name|isValid
argument_list|()
condition|?
name|parent
operator|.
name|model
argument_list|()
operator|==
name|this
else|:
literal|true
argument_list|)
expr_stmt|;
name|Q_D
argument_list|(
name|QIdentityProxyModel
argument_list|)
expr_stmt|;
return|return
name|d
operator|->
name|model
operator|->
name|insertRows
argument_list|(
name|row
argument_list|,
name|count
argument_list|,
name|mapToSource
argument_list|(
name|parent
argument_list|)
argument_list|)
return|;
block|}
end_function
begin_comment
comment|/*!     \reimp  */
end_comment
begin_function
DECL|function|mapFromSource
name|QModelIndex
name|QIdentityProxyModel
operator|::
name|mapFromSource
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|sourceIndex
parameter_list|)
specifier|const
block|{
name|Q_D
argument_list|(
specifier|const
name|QIdentityProxyModel
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|d
operator|->
name|model
operator|||
operator|!
name|sourceIndex
operator|.
name|isValid
argument_list|()
condition|)
return|return
name|QModelIndex
argument_list|()
return|;
name|Q_ASSERT
argument_list|(
name|sourceIndex
operator|.
name|model
argument_list|()
operator|==
name|d
operator|->
name|model
argument_list|)
expr_stmt|;
return|return
name|createIndex
argument_list|(
name|sourceIndex
operator|.
name|row
argument_list|()
argument_list|,
name|sourceIndex
operator|.
name|column
argument_list|()
argument_list|,
name|sourceIndex
operator|.
name|internalPointer
argument_list|()
argument_list|)
return|;
block|}
end_function
begin_comment
comment|/*!     \reimp  */
end_comment
begin_function
DECL|function|mapSelectionFromSource
name|QItemSelection
name|QIdentityProxyModel
operator|::
name|mapSelectionFromSource
parameter_list|(
specifier|const
name|QItemSelection
modifier|&
name|selection
parameter_list|)
specifier|const
block|{
name|Q_D
argument_list|(
specifier|const
name|QIdentityProxyModel
argument_list|)
expr_stmt|;
name|QItemSelection
name|proxySelection
decl_stmt|;
if|if
condition|(
operator|!
name|d
operator|->
name|model
condition|)
return|return
name|proxySelection
return|;
name|QItemSelection
operator|::
name|const_iterator
name|it
init|=
name|selection
operator|.
name|constBegin
argument_list|()
decl_stmt|;
specifier|const
name|QItemSelection
operator|::
name|const_iterator
name|end
init|=
name|selection
operator|.
name|constEnd
argument_list|()
decl_stmt|;
for|for
control|(
init|;
name|it
operator|!=
name|end
condition|;
operator|++
name|it
control|)
block|{
name|Q_ASSERT
argument_list|(
name|it
operator|->
name|model
argument_list|()
operator|==
name|d
operator|->
name|model
argument_list|)
expr_stmt|;
specifier|const
name|QItemSelectionRange
name|range
argument_list|(
name|mapFromSource
argument_list|(
name|it
operator|->
name|topLeft
argument_list|()
argument_list|)
argument_list|,
name|mapFromSource
argument_list|(
name|it
operator|->
name|bottomRight
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|proxySelection
operator|.
name|append
argument_list|(
name|range
argument_list|)
expr_stmt|;
block|}
return|return
name|proxySelection
return|;
block|}
end_function
begin_comment
comment|/*!     \reimp  */
end_comment
begin_function
DECL|function|mapSelectionToSource
name|QItemSelection
name|QIdentityProxyModel
operator|::
name|mapSelectionToSource
parameter_list|(
specifier|const
name|QItemSelection
modifier|&
name|selection
parameter_list|)
specifier|const
block|{
name|Q_D
argument_list|(
specifier|const
name|QIdentityProxyModel
argument_list|)
expr_stmt|;
name|QItemSelection
name|sourceSelection
decl_stmt|;
if|if
condition|(
operator|!
name|d
operator|->
name|model
condition|)
return|return
name|sourceSelection
return|;
name|QItemSelection
operator|::
name|const_iterator
name|it
init|=
name|selection
operator|.
name|constBegin
argument_list|()
decl_stmt|;
specifier|const
name|QItemSelection
operator|::
name|const_iterator
name|end
init|=
name|selection
operator|.
name|constEnd
argument_list|()
decl_stmt|;
for|for
control|(
init|;
name|it
operator|!=
name|end
condition|;
operator|++
name|it
control|)
block|{
name|Q_ASSERT
argument_list|(
name|it
operator|->
name|model
argument_list|()
operator|==
name|this
argument_list|)
expr_stmt|;
specifier|const
name|QItemSelectionRange
name|range
argument_list|(
name|mapToSource
argument_list|(
name|it
operator|->
name|topLeft
argument_list|()
argument_list|)
argument_list|,
name|mapToSource
argument_list|(
name|it
operator|->
name|bottomRight
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|sourceSelection
operator|.
name|append
argument_list|(
name|range
argument_list|)
expr_stmt|;
block|}
return|return
name|sourceSelection
return|;
block|}
end_function
begin_comment
comment|/*!     \reimp  */
end_comment
begin_function
DECL|function|mapToSource
name|QModelIndex
name|QIdentityProxyModel
operator|::
name|mapToSource
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|proxyIndex
parameter_list|)
specifier|const
block|{
name|Q_D
argument_list|(
specifier|const
name|QIdentityProxyModel
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|d
operator|->
name|model
operator|||
operator|!
name|proxyIndex
operator|.
name|isValid
argument_list|()
condition|)
return|return
name|QModelIndex
argument_list|()
return|;
name|Q_ASSERT
argument_list|(
name|proxyIndex
operator|.
name|model
argument_list|()
operator|==
name|this
argument_list|)
expr_stmt|;
return|return
name|d
operator|->
name|model
operator|->
name|createIndex
argument_list|(
name|proxyIndex
operator|.
name|row
argument_list|()
argument_list|,
name|proxyIndex
operator|.
name|column
argument_list|()
argument_list|,
name|proxyIndex
operator|.
name|internalPointer
argument_list|()
argument_list|)
return|;
block|}
end_function
begin_comment
comment|/*!     \reimp  */
end_comment
begin_function
DECL|function|match
name|QModelIndexList
name|QIdentityProxyModel
operator|::
name|match
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|start
parameter_list|,
name|int
name|role
parameter_list|,
specifier|const
name|QVariant
modifier|&
name|value
parameter_list|,
name|int
name|hits
parameter_list|,
name|Qt
operator|::
name|MatchFlags
name|flags
parameter_list|)
specifier|const
block|{
name|Q_D
argument_list|(
specifier|const
name|QIdentityProxyModel
argument_list|)
expr_stmt|;
name|Q_ASSERT
argument_list|(
name|start
operator|.
name|isValid
argument_list|()
condition|?
name|start
operator|.
name|model
argument_list|()
operator|==
name|this
else|:
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|d
operator|->
name|model
condition|)
return|return
name|QModelIndexList
argument_list|()
return|;
specifier|const
name|QModelIndexList
name|sourceList
init|=
name|d
operator|->
name|model
operator|->
name|match
argument_list|(
name|mapToSource
argument_list|(
name|start
argument_list|)
argument_list|,
name|role
argument_list|,
name|value
argument_list|,
name|hits
argument_list|,
name|flags
argument_list|)
decl_stmt|;
name|QModelIndexList
operator|::
name|const_iterator
name|it
init|=
name|sourceList
operator|.
name|constBegin
argument_list|()
decl_stmt|;
specifier|const
name|QModelIndexList
operator|::
name|const_iterator
name|end
init|=
name|sourceList
operator|.
name|constEnd
argument_list|()
decl_stmt|;
name|QModelIndexList
name|proxyList
decl_stmt|;
for|for
control|(
init|;
name|it
operator|!=
name|end
condition|;
operator|++
name|it
control|)
name|proxyList
operator|.
name|append
argument_list|(
name|mapFromSource
argument_list|(
operator|*
name|it
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|proxyList
return|;
block|}
end_function
begin_comment
comment|/*!     \reimp  */
end_comment
begin_function
DECL|function|parent
name|QModelIndex
name|QIdentityProxyModel
operator|::
name|parent
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|child
parameter_list|)
specifier|const
block|{
name|Q_ASSERT
argument_list|(
name|child
operator|.
name|isValid
argument_list|()
condition|?
name|child
operator|.
name|model
argument_list|()
operator|==
name|this
else|:
literal|true
argument_list|)
expr_stmt|;
specifier|const
name|QModelIndex
name|sourceIndex
init|=
name|mapToSource
argument_list|(
name|child
argument_list|)
decl_stmt|;
specifier|const
name|QModelIndex
name|sourceParent
init|=
name|sourceIndex
operator|.
name|parent
argument_list|()
decl_stmt|;
return|return
name|mapFromSource
argument_list|(
name|sourceParent
argument_list|)
return|;
block|}
end_function
begin_comment
comment|/*!     \reimp  */
end_comment
begin_function
DECL|function|removeColumns
name|bool
name|QIdentityProxyModel
operator|::
name|removeColumns
parameter_list|(
name|int
name|column
parameter_list|,
name|int
name|count
parameter_list|,
specifier|const
name|QModelIndex
modifier|&
name|parent
parameter_list|)
block|{
name|Q_ASSERT
argument_list|(
name|parent
operator|.
name|isValid
argument_list|()
condition|?
name|parent
operator|.
name|model
argument_list|()
operator|==
name|this
else|:
literal|true
argument_list|)
expr_stmt|;
name|Q_D
argument_list|(
name|QIdentityProxyModel
argument_list|)
expr_stmt|;
return|return
name|d
operator|->
name|model
operator|->
name|removeColumns
argument_list|(
name|column
argument_list|,
name|count
argument_list|,
name|mapToSource
argument_list|(
name|parent
argument_list|)
argument_list|)
return|;
block|}
end_function
begin_comment
comment|/*!     \reimp  */
end_comment
begin_function
DECL|function|removeRows
name|bool
name|QIdentityProxyModel
operator|::
name|removeRows
parameter_list|(
name|int
name|row
parameter_list|,
name|int
name|count
parameter_list|,
specifier|const
name|QModelIndex
modifier|&
name|parent
parameter_list|)
block|{
name|Q_ASSERT
argument_list|(
name|parent
operator|.
name|isValid
argument_list|()
condition|?
name|parent
operator|.
name|model
argument_list|()
operator|==
name|this
else|:
literal|true
argument_list|)
expr_stmt|;
name|Q_D
argument_list|(
name|QIdentityProxyModel
argument_list|)
expr_stmt|;
return|return
name|d
operator|->
name|model
operator|->
name|removeRows
argument_list|(
name|row
argument_list|,
name|count
argument_list|,
name|mapToSource
argument_list|(
name|parent
argument_list|)
argument_list|)
return|;
block|}
end_function
begin_comment
comment|/*!     \reimp  */
end_comment
begin_function
DECL|function|rowCount
name|int
name|QIdentityProxyModel
operator|::
name|rowCount
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|parent
parameter_list|)
specifier|const
block|{
name|Q_ASSERT
argument_list|(
name|parent
operator|.
name|isValid
argument_list|()
condition|?
name|parent
operator|.
name|model
argument_list|()
operator|==
name|this
else|:
literal|true
argument_list|)
expr_stmt|;
name|Q_D
argument_list|(
specifier|const
name|QIdentityProxyModel
argument_list|)
expr_stmt|;
return|return
name|d
operator|->
name|model
operator|->
name|rowCount
argument_list|(
name|mapToSource
argument_list|(
name|parent
argument_list|)
argument_list|)
return|;
block|}
end_function
begin_comment
comment|/*!     \reimp  */
end_comment
begin_function
DECL|function|headerData
name|QVariant
name|QIdentityProxyModel
operator|::
name|headerData
parameter_list|(
name|int
name|section
parameter_list|,
name|Qt
operator|::
name|Orientation
name|orientation
parameter_list|,
name|int
name|role
parameter_list|)
specifier|const
block|{
name|Q_D
argument_list|(
specifier|const
name|QIdentityProxyModel
argument_list|)
expr_stmt|;
return|return
name|d
operator|->
name|model
operator|->
name|headerData
argument_list|(
name|section
argument_list|,
name|orientation
argument_list|,
name|role
argument_list|)
return|;
block|}
end_function
begin_comment
comment|/*!     \reimp  */
end_comment
begin_function
DECL|function|setSourceModel
name|void
name|QIdentityProxyModel
operator|::
name|setSourceModel
parameter_list|(
name|QAbstractItemModel
modifier|*
name|sourceModel
parameter_list|)
block|{
name|beginResetModel
argument_list|()
expr_stmt|;
if|if
condition|(
name|sourceModel
condition|)
block|{
name|disconnect
argument_list|(
name|sourceModel
argument_list|,
name|SIGNAL
argument_list|(
name|rowsAboutToBeInserted
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|_q_sourceRowsAboutToBeInserted
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|disconnect
argument_list|(
name|sourceModel
argument_list|,
name|SIGNAL
argument_list|(
name|rowsInserted
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|_q_sourceRowsInserted
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|disconnect
argument_list|(
name|sourceModel
argument_list|,
name|SIGNAL
argument_list|(
name|rowsAboutToBeRemoved
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|_q_sourceRowsAboutToBeRemoved
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|disconnect
argument_list|(
name|sourceModel
argument_list|,
name|SIGNAL
argument_list|(
name|rowsRemoved
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|_q_sourceRowsRemoved
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|disconnect
argument_list|(
name|sourceModel
argument_list|,
name|SIGNAL
argument_list|(
name|rowsAboutToBeMoved
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|,
name|int
argument_list|,
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|_q_sourceRowsAboutToBeMoved
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|,
name|int
argument_list|,
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|disconnect
argument_list|(
name|sourceModel
argument_list|,
name|SIGNAL
argument_list|(
name|rowsMoved
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|,
name|int
argument_list|,
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|_q_sourceRowsMoved
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|,
name|int
argument_list|,
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|disconnect
argument_list|(
name|sourceModel
argument_list|,
name|SIGNAL
argument_list|(
name|columnsAboutToBeInserted
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|_q_sourceColumnsAboutToBeInserted
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|disconnect
argument_list|(
name|sourceModel
argument_list|,
name|SIGNAL
argument_list|(
name|columnsInserted
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|_q_sourceColumnsInserted
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|disconnect
argument_list|(
name|sourceModel
argument_list|,
name|SIGNAL
argument_list|(
name|columnsAboutToBeRemoved
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|_q_sourceColumnsAboutToBeRemoved
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|disconnect
argument_list|(
name|sourceModel
argument_list|,
name|SIGNAL
argument_list|(
name|columnsRemoved
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|_q_sourceColumnsRemoved
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|disconnect
argument_list|(
name|sourceModel
argument_list|,
name|SIGNAL
argument_list|(
name|columnsAboutToBeMoved
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|,
name|int
argument_list|,
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|_q_sourceColumnsAboutToBeMoved
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|,
name|int
argument_list|,
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|disconnect
argument_list|(
name|sourceModel
argument_list|,
name|SIGNAL
argument_list|(
name|columnsMoved
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|,
name|int
argument_list|,
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|_q_sourceColumnsMoved
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|,
name|int
argument_list|,
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|disconnect
argument_list|(
name|sourceModel
argument_list|,
name|SIGNAL
argument_list|(
name|modelAboutToBeReset
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|_q_sourceModelAboutToBeReset
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|disconnect
argument_list|(
name|sourceModel
argument_list|,
name|SIGNAL
argument_list|(
name|modelReset
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|_q_sourceModelReset
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|disconnect
argument_list|(
name|sourceModel
argument_list|,
name|SIGNAL
argument_list|(
name|dataChanged
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|,
specifier|const
name|QModelIndex
operator|&
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|_q_sourceDataChanged
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|,
specifier|const
name|QModelIndex
operator|&
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|disconnect
argument_list|(
name|sourceModel
argument_list|,
name|SIGNAL
argument_list|(
name|headerDataChanged
argument_list|(
name|Qt
operator|::
name|Orientation
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|_q_sourceHeaderDataChanged
argument_list|(
name|Qt
operator|::
name|Orientation
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|disconnect
argument_list|(
name|sourceModel
argument_list|,
name|SIGNAL
argument_list|(
name|layoutAboutToBeChanged
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|_q_sourceLayoutAboutToBeChanged
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|disconnect
argument_list|(
name|sourceModel
argument_list|,
name|SIGNAL
argument_list|(
name|layoutChanged
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|_q_sourceLayoutChanged
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QAbstractProxyModel
operator|::
name|setSourceModel
argument_list|(
name|sourceModel
argument_list|)
expr_stmt|;
if|if
condition|(
name|sourceModel
condition|)
block|{
name|connect
argument_list|(
name|sourceModel
argument_list|,
name|SIGNAL
argument_list|(
name|rowsAboutToBeInserted
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|_q_sourceRowsAboutToBeInserted
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|sourceModel
argument_list|,
name|SIGNAL
argument_list|(
name|rowsInserted
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|_q_sourceRowsInserted
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|sourceModel
argument_list|,
name|SIGNAL
argument_list|(
name|rowsAboutToBeRemoved
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|_q_sourceRowsAboutToBeRemoved
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|sourceModel
argument_list|,
name|SIGNAL
argument_list|(
name|rowsRemoved
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|_q_sourceRowsRemoved
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|sourceModel
argument_list|,
name|SIGNAL
argument_list|(
name|rowsAboutToBeMoved
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|,
name|int
argument_list|,
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|_q_sourceRowsAboutToBeMoved
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|,
name|int
argument_list|,
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|sourceModel
argument_list|,
name|SIGNAL
argument_list|(
name|rowsMoved
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|,
name|int
argument_list|,
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|_q_sourceRowsMoved
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|,
name|int
argument_list|,
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|sourceModel
argument_list|,
name|SIGNAL
argument_list|(
name|columnsAboutToBeInserted
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|_q_sourceColumnsAboutToBeInserted
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|sourceModel
argument_list|,
name|SIGNAL
argument_list|(
name|columnsInserted
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|_q_sourceColumnsInserted
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|sourceModel
argument_list|,
name|SIGNAL
argument_list|(
name|columnsAboutToBeRemoved
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|_q_sourceColumnsAboutToBeRemoved
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|sourceModel
argument_list|,
name|SIGNAL
argument_list|(
name|columnsRemoved
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|_q_sourceColumnsRemoved
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|sourceModel
argument_list|,
name|SIGNAL
argument_list|(
name|columnsAboutToBeMoved
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|,
name|int
argument_list|,
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|_q_sourceColumnsAboutToBeMoved
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|,
name|int
argument_list|,
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|sourceModel
argument_list|,
name|SIGNAL
argument_list|(
name|columnsMoved
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|,
name|int
argument_list|,
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|_q_sourceColumnsMoved
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|,
name|int
argument_list|,
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|sourceModel
argument_list|,
name|SIGNAL
argument_list|(
name|modelAboutToBeReset
argument_list|()
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|_q_sourceModelAboutToBeReset
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|sourceModel
argument_list|,
name|SIGNAL
argument_list|(
name|modelReset
argument_list|()
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|_q_sourceModelReset
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|sourceModel
argument_list|,
name|SIGNAL
argument_list|(
name|dataChanged
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|,
specifier|const
name|QModelIndex
operator|&
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|_q_sourceDataChanged
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|,
specifier|const
name|QModelIndex
operator|&
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|sourceModel
argument_list|,
name|SIGNAL
argument_list|(
name|headerDataChanged
argument_list|(
name|Qt
operator|::
name|Orientation
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|_q_sourceHeaderDataChanged
argument_list|(
name|Qt
operator|::
name|Orientation
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|sourceModel
argument_list|,
name|SIGNAL
argument_list|(
name|layoutAboutToBeChanged
argument_list|()
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|_q_sourceLayoutAboutToBeChanged
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|sourceModel
argument_list|,
name|SIGNAL
argument_list|(
name|layoutChanged
argument_list|()
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|_q_sourceLayoutChanged
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|endResetModel
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|_q_sourceColumnsAboutToBeInserted
name|void
name|QIdentityProxyModelPrivate
operator|::
name|_q_sourceColumnsAboutToBeInserted
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|parent
parameter_list|,
name|int
name|start
parameter_list|,
name|int
name|end
parameter_list|)
block|{
name|Q_ASSERT
argument_list|(
name|parent
operator|.
name|isValid
argument_list|()
condition|?
name|parent
operator|.
name|model
argument_list|()
operator|==
name|model
else|:
literal|true
argument_list|)
expr_stmt|;
name|Q_Q
argument_list|(
name|QIdentityProxyModel
argument_list|)
expr_stmt|;
name|q
operator|->
name|beginInsertColumns
argument_list|(
name|q
operator|->
name|mapFromSource
argument_list|(
name|parent
argument_list|)
argument_list|,
name|start
argument_list|,
name|end
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|_q_sourceColumnsAboutToBeMoved
name|void
name|QIdentityProxyModelPrivate
operator|::
name|_q_sourceColumnsAboutToBeMoved
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|sourceParent
parameter_list|,
name|int
name|sourceStart
parameter_list|,
name|int
name|sourceEnd
parameter_list|,
specifier|const
name|QModelIndex
modifier|&
name|destParent
parameter_list|,
name|int
name|dest
parameter_list|)
block|{
name|Q_ASSERT
argument_list|(
name|sourceParent
operator|.
name|isValid
argument_list|()
condition|?
name|sourceParent
operator|.
name|model
argument_list|()
operator|==
name|model
else|:
literal|true
argument_list|)
expr_stmt|;
name|Q_ASSERT
argument_list|(
name|destParent
operator|.
name|isValid
argument_list|()
condition|?
name|destParent
operator|.
name|model
argument_list|()
operator|==
name|model
else|:
literal|true
argument_list|)
expr_stmt|;
name|Q_Q
argument_list|(
name|QIdentityProxyModel
argument_list|)
expr_stmt|;
name|q
operator|->
name|beginMoveColumns
argument_list|(
name|q
operator|->
name|mapFromSource
argument_list|(
name|sourceParent
argument_list|)
argument_list|,
name|sourceStart
argument_list|,
name|sourceEnd
argument_list|,
name|q
operator|->
name|mapFromSource
argument_list|(
name|destParent
argument_list|)
argument_list|,
name|dest
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|_q_sourceColumnsAboutToBeRemoved
name|void
name|QIdentityProxyModelPrivate
operator|::
name|_q_sourceColumnsAboutToBeRemoved
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|parent
parameter_list|,
name|int
name|start
parameter_list|,
name|int
name|end
parameter_list|)
block|{
name|Q_ASSERT
argument_list|(
name|parent
operator|.
name|isValid
argument_list|()
condition|?
name|parent
operator|.
name|model
argument_list|()
operator|==
name|model
else|:
literal|true
argument_list|)
expr_stmt|;
name|Q_Q
argument_list|(
name|QIdentityProxyModel
argument_list|)
expr_stmt|;
name|q
operator|->
name|beginRemoveColumns
argument_list|(
name|q
operator|->
name|mapFromSource
argument_list|(
name|parent
argument_list|)
argument_list|,
name|start
argument_list|,
name|end
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|_q_sourceColumnsInserted
name|void
name|QIdentityProxyModelPrivate
operator|::
name|_q_sourceColumnsInserted
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|parent
parameter_list|,
name|int
name|start
parameter_list|,
name|int
name|end
parameter_list|)
block|{
name|Q_ASSERT
argument_list|(
name|parent
operator|.
name|isValid
argument_list|()
condition|?
name|parent
operator|.
name|model
argument_list|()
operator|==
name|model
else|:
literal|true
argument_list|)
expr_stmt|;
name|Q_Q
argument_list|(
name|QIdentityProxyModel
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
argument|parent
argument_list|)
name|Q_UNUSED
argument_list|(
argument|start
argument_list|)
name|Q_UNUSED
argument_list|(
argument|end
argument_list|)
name|q
operator|->
name|endInsertColumns
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|_q_sourceColumnsMoved
name|void
name|QIdentityProxyModelPrivate
operator|::
name|_q_sourceColumnsMoved
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|sourceParent
parameter_list|,
name|int
name|sourceStart
parameter_list|,
name|int
name|sourceEnd
parameter_list|,
specifier|const
name|QModelIndex
modifier|&
name|destParent
parameter_list|,
name|int
name|dest
parameter_list|)
block|{
name|Q_ASSERT
argument_list|(
name|sourceParent
operator|.
name|isValid
argument_list|()
condition|?
name|sourceParent
operator|.
name|model
argument_list|()
operator|==
name|model
else|:
literal|true
argument_list|)
expr_stmt|;
name|Q_ASSERT
argument_list|(
name|destParent
operator|.
name|isValid
argument_list|()
condition|?
name|destParent
operator|.
name|model
argument_list|()
operator|==
name|model
else|:
literal|true
argument_list|)
expr_stmt|;
name|Q_Q
argument_list|(
name|QIdentityProxyModel
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
argument|sourceParent
argument_list|)
name|Q_UNUSED
argument_list|(
argument|sourceStart
argument_list|)
name|Q_UNUSED
argument_list|(
argument|sourceEnd
argument_list|)
name|Q_UNUSED
argument_list|(
argument|destParent
argument_list|)
name|Q_UNUSED
argument_list|(
argument|dest
argument_list|)
name|q
operator|->
name|endMoveColumns
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|_q_sourceColumnsRemoved
name|void
name|QIdentityProxyModelPrivate
operator|::
name|_q_sourceColumnsRemoved
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|parent
parameter_list|,
name|int
name|start
parameter_list|,
name|int
name|end
parameter_list|)
block|{
name|Q_ASSERT
argument_list|(
name|parent
operator|.
name|isValid
argument_list|()
condition|?
name|parent
operator|.
name|model
argument_list|()
operator|==
name|model
else|:
literal|true
argument_list|)
expr_stmt|;
name|Q_Q
argument_list|(
name|QIdentityProxyModel
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
argument|parent
argument_list|)
name|Q_UNUSED
argument_list|(
argument|start
argument_list|)
name|Q_UNUSED
argument_list|(
argument|end
argument_list|)
name|q
operator|->
name|endRemoveColumns
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|_q_sourceDataChanged
name|void
name|QIdentityProxyModelPrivate
operator|::
name|_q_sourceDataChanged
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|topLeft
parameter_list|,
specifier|const
name|QModelIndex
modifier|&
name|bottomRight
parameter_list|)
block|{
name|Q_ASSERT
argument_list|(
name|topLeft
operator|.
name|isValid
argument_list|()
condition|?
name|topLeft
operator|.
name|model
argument_list|()
operator|==
name|model
else|:
literal|true
argument_list|)
expr_stmt|;
name|Q_ASSERT
argument_list|(
name|bottomRight
operator|.
name|isValid
argument_list|()
condition|?
name|bottomRight
operator|.
name|model
argument_list|()
operator|==
name|model
else|:
literal|true
argument_list|)
expr_stmt|;
name|Q_Q
argument_list|(
name|QIdentityProxyModel
argument_list|)
expr_stmt|;
name|q
operator|->
name|dataChanged
argument_list|(
name|q
operator|->
name|mapFromSource
argument_list|(
name|topLeft
argument_list|)
argument_list|,
name|q
operator|->
name|mapFromSource
argument_list|(
name|bottomRight
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|_q_sourceHeaderDataChanged
name|void
name|QIdentityProxyModelPrivate
operator|::
name|_q_sourceHeaderDataChanged
parameter_list|(
name|Qt
operator|::
name|Orientation
name|orientation
parameter_list|,
name|int
name|first
parameter_list|,
name|int
name|last
parameter_list|)
block|{
name|Q_Q
argument_list|(
name|QIdentityProxyModel
argument_list|)
expr_stmt|;
name|q
operator|->
name|headerDataChanged
argument_list|(
name|orientation
argument_list|,
name|first
argument_list|,
name|last
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|_q_sourceLayoutAboutToBeChanged
name|void
name|QIdentityProxyModelPrivate
operator|::
name|_q_sourceLayoutAboutToBeChanged
parameter_list|()
block|{
name|Q_Q
argument_list|(
name|QIdentityProxyModel
argument_list|)
expr_stmt|;
foreach|foreach
control|(
specifier|const
name|QPersistentModelIndex
modifier|&
name|proxyPersistentIndex
decl|,
name|q
operator|->
name|persistentIndexList
argument_list|()
control|)
block|{
name|proxyIndexes
operator|<<
name|proxyPersistentIndex
expr_stmt|;
name|Q_ASSERT
argument_list|(
name|proxyPersistentIndex
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
specifier|const
name|QPersistentModelIndex
name|srcPersistentIndex
init|=
name|q
operator|->
name|mapToSource
argument_list|(
name|proxyPersistentIndex
argument_list|)
decl_stmt|;
name|Q_ASSERT
argument_list|(
name|srcPersistentIndex
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|layoutChangePersistentIndexes
operator|<<
name|srcPersistentIndex
expr_stmt|;
block|}
name|q
operator|->
name|layoutAboutToBeChanged
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|_q_sourceLayoutChanged
name|void
name|QIdentityProxyModelPrivate
operator|::
name|_q_sourceLayoutChanged
parameter_list|()
block|{
name|Q_Q
argument_list|(
name|QIdentityProxyModel
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|proxyIndexes
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|q
operator|->
name|changePersistentIndex
argument_list|(
name|proxyIndexes
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|,
name|q
operator|->
name|mapFromSource
argument_list|(
name|layoutChangePersistentIndexes
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|layoutChangePersistentIndexes
operator|.
name|clear
argument_list|()
expr_stmt|;
name|proxyIndexes
operator|.
name|clear
argument_list|()
expr_stmt|;
name|q
operator|->
name|layoutChanged
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|_q_sourceModelAboutToBeReset
name|void
name|QIdentityProxyModelPrivate
operator|::
name|_q_sourceModelAboutToBeReset
parameter_list|()
block|{
name|Q_Q
argument_list|(
name|QIdentityProxyModel
argument_list|)
expr_stmt|;
name|q
operator|->
name|beginResetModel
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|_q_sourceModelReset
name|void
name|QIdentityProxyModelPrivate
operator|::
name|_q_sourceModelReset
parameter_list|()
block|{
name|Q_Q
argument_list|(
name|QIdentityProxyModel
argument_list|)
expr_stmt|;
name|q
operator|->
name|endResetModel
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|_q_sourceRowsAboutToBeInserted
name|void
name|QIdentityProxyModelPrivate
operator|::
name|_q_sourceRowsAboutToBeInserted
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|parent
parameter_list|,
name|int
name|start
parameter_list|,
name|int
name|end
parameter_list|)
block|{
name|Q_ASSERT
argument_list|(
name|parent
operator|.
name|isValid
argument_list|()
condition|?
name|parent
operator|.
name|model
argument_list|()
operator|==
name|model
else|:
literal|true
argument_list|)
expr_stmt|;
name|Q_Q
argument_list|(
name|QIdentityProxyModel
argument_list|)
expr_stmt|;
name|q
operator|->
name|beginInsertRows
argument_list|(
name|q
operator|->
name|mapFromSource
argument_list|(
name|parent
argument_list|)
argument_list|,
name|start
argument_list|,
name|end
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|_q_sourceRowsAboutToBeMoved
name|void
name|QIdentityProxyModelPrivate
operator|::
name|_q_sourceRowsAboutToBeMoved
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|sourceParent
parameter_list|,
name|int
name|sourceStart
parameter_list|,
name|int
name|sourceEnd
parameter_list|,
specifier|const
name|QModelIndex
modifier|&
name|destParent
parameter_list|,
name|int
name|dest
parameter_list|)
block|{
name|Q_ASSERT
argument_list|(
name|sourceParent
operator|.
name|isValid
argument_list|()
condition|?
name|sourceParent
operator|.
name|model
argument_list|()
operator|==
name|model
else|:
literal|true
argument_list|)
expr_stmt|;
name|Q_ASSERT
argument_list|(
name|destParent
operator|.
name|isValid
argument_list|()
condition|?
name|destParent
operator|.
name|model
argument_list|()
operator|==
name|model
else|:
literal|true
argument_list|)
expr_stmt|;
name|Q_Q
argument_list|(
name|QIdentityProxyModel
argument_list|)
expr_stmt|;
name|q
operator|->
name|beginMoveRows
argument_list|(
name|q
operator|->
name|mapFromSource
argument_list|(
name|sourceParent
argument_list|)
argument_list|,
name|sourceStart
argument_list|,
name|sourceEnd
argument_list|,
name|q
operator|->
name|mapFromSource
argument_list|(
name|destParent
argument_list|)
argument_list|,
name|dest
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|_q_sourceRowsAboutToBeRemoved
name|void
name|QIdentityProxyModelPrivate
operator|::
name|_q_sourceRowsAboutToBeRemoved
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|parent
parameter_list|,
name|int
name|start
parameter_list|,
name|int
name|end
parameter_list|)
block|{
name|Q_ASSERT
argument_list|(
name|parent
operator|.
name|isValid
argument_list|()
condition|?
name|parent
operator|.
name|model
argument_list|()
operator|==
name|model
else|:
literal|true
argument_list|)
expr_stmt|;
name|Q_Q
argument_list|(
name|QIdentityProxyModel
argument_list|)
expr_stmt|;
name|q
operator|->
name|beginRemoveRows
argument_list|(
name|q
operator|->
name|mapFromSource
argument_list|(
name|parent
argument_list|)
argument_list|,
name|start
argument_list|,
name|end
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|_q_sourceRowsInserted
name|void
name|QIdentityProxyModelPrivate
operator|::
name|_q_sourceRowsInserted
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|parent
parameter_list|,
name|int
name|start
parameter_list|,
name|int
name|end
parameter_list|)
block|{
name|Q_ASSERT
argument_list|(
name|parent
operator|.
name|isValid
argument_list|()
condition|?
name|parent
operator|.
name|model
argument_list|()
operator|==
name|model
else|:
literal|true
argument_list|)
expr_stmt|;
name|Q_Q
argument_list|(
name|QIdentityProxyModel
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
argument|parent
argument_list|)
name|Q_UNUSED
argument_list|(
argument|start
argument_list|)
name|Q_UNUSED
argument_list|(
argument|end
argument_list|)
name|q
operator|->
name|endInsertRows
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|_q_sourceRowsMoved
name|void
name|QIdentityProxyModelPrivate
operator|::
name|_q_sourceRowsMoved
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|sourceParent
parameter_list|,
name|int
name|sourceStart
parameter_list|,
name|int
name|sourceEnd
parameter_list|,
specifier|const
name|QModelIndex
modifier|&
name|destParent
parameter_list|,
name|int
name|dest
parameter_list|)
block|{
name|Q_ASSERT
argument_list|(
name|sourceParent
operator|.
name|isValid
argument_list|()
condition|?
name|sourceParent
operator|.
name|model
argument_list|()
operator|==
name|model
else|:
literal|true
argument_list|)
expr_stmt|;
name|Q_ASSERT
argument_list|(
name|destParent
operator|.
name|isValid
argument_list|()
condition|?
name|destParent
operator|.
name|model
argument_list|()
operator|==
name|model
else|:
literal|true
argument_list|)
expr_stmt|;
name|Q_Q
argument_list|(
name|QIdentityProxyModel
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
argument|sourceParent
argument_list|)
name|Q_UNUSED
argument_list|(
argument|sourceStart
argument_list|)
name|Q_UNUSED
argument_list|(
argument|sourceEnd
argument_list|)
name|Q_UNUSED
argument_list|(
argument|destParent
argument_list|)
name|Q_UNUSED
argument_list|(
argument|dest
argument_list|)
name|q
operator|->
name|endMoveRows
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|_q_sourceRowsRemoved
name|void
name|QIdentityProxyModelPrivate
operator|::
name|_q_sourceRowsRemoved
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|parent
parameter_list|,
name|int
name|start
parameter_list|,
name|int
name|end
parameter_list|)
block|{
name|Q_ASSERT
argument_list|(
name|parent
operator|.
name|isValid
argument_list|()
condition|?
name|parent
operator|.
name|model
argument_list|()
operator|==
name|model
else|:
literal|true
argument_list|)
expr_stmt|;
name|Q_Q
argument_list|(
name|QIdentityProxyModel
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
argument|parent
argument_list|)
name|Q_UNUSED
argument_list|(
argument|start
argument_list|)
name|Q_UNUSED
argument_list|(
argument|end
argument_list|)
name|q
operator|->
name|endRemoveRows
argument_list|()
expr_stmt|;
block|}
end_function
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_include
include|#
directive|include
file|"moc_qidentityproxymodel.cpp"
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_IDENTITYPROXYMODEL
end_comment
end_unit
