begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the QtCore module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QFILESYSTEMWATCHER_SYMBIAN_P_H
end_ifndef
begin_define
DECL|macro|QFILESYSTEMWATCHER_SYMBIAN_P_H
define|#
directive|define
name|QFILESYSTEMWATCHER_SYMBIAN_P_H
end_define
begin_comment
comment|//
end_comment
begin_comment
comment|//  W A R N I N G
end_comment
begin_comment
comment|//  -------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// This file is not part of the Qt API.  It exists purely as an
end_comment
begin_comment
comment|// implementation detail.  This header file may change from version to
end_comment
begin_comment
comment|// version without notice, or even be removed.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// We mean it.
end_comment
begin_comment
comment|//
end_comment
begin_include
include|#
directive|include
file|"qfilesystemwatcher_p.h"
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_FILESYSTEMWATCHER
end_ifndef
begin_include
include|#
directive|include
file|"qhash.h"
end_include
begin_include
include|#
directive|include
file|"qmutex.h"
end_include
begin_include
include|#
directive|include
file|"qwaitcondition.h"
end_include
begin_include
include|#
directive|include
file|<e32base.h>
end_include
begin_include
include|#
directive|include
file|<f32file.h>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
DECL|variable|QSymbianFileSystemWatcherEngine
name|class
name|QSymbianFileSystemWatcherEngine
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|QNotifyChangeEvent
range|:
name|public
name|CActive
block|{
name|public
operator|:
name|QNotifyChangeEvent
argument_list|(
argument|RFs&fsSession
argument_list|,
argument|const TDesC&file
argument_list|,
argument|QSymbianFileSystemWatcherEngine *engine
argument_list|,
argument|bool aIsDir
argument_list|,
argument|TInt aPriority = EPriorityStandard
argument_list|)
block|;
operator|~
name|QNotifyChangeEvent
argument_list|()
block|;
name|bool
name|isDir
block|;
name|private
operator|:
name|void
name|RunL
argument_list|()
block|;
name|void
name|DoCancel
argument_list|()
block|;
name|RFs
operator|&
name|fsSession
block|;
name|TPath
name|watchedPath
block|;
name|QSymbianFileSystemWatcherEngine
operator|*
name|engine
block|;
name|int
name|failureCount
block|; }
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|QSymbianFileSystemWatcherEngine
range|:
name|public
name|QFileSystemWatcherEngine
block|{
name|Q_OBJECT
name|public
operator|:
name|QSymbianFileSystemWatcherEngine
argument_list|()
block|;
operator|~
name|QSymbianFileSystemWatcherEngine
argument_list|()
block|;
name|QStringList
name|addPaths
argument_list|(
specifier|const
name|QStringList
operator|&
name|paths
argument_list|,
name|QStringList
operator|*
name|files
argument_list|,
name|QStringList
operator|*
name|directories
argument_list|)
block|;
name|QStringList
name|removePaths
argument_list|(
specifier|const
name|QStringList
operator|&
name|paths
argument_list|,
name|QStringList
operator|*
name|files
argument_list|,
name|QStringList
operator|*
name|directories
argument_list|)
block|;
name|void
name|stop
argument_list|()
block|;
name|protected
operator|:
name|void
name|run
argument_list|()
block|;
name|public
name|Q_SLOTS
operator|:
name|void
name|addNativeListener
argument_list|(
specifier|const
name|QString
operator|&
name|directoryPath
argument_list|)
block|;
name|void
name|removeNativeListener
argument_list|()
block|;
name|private
operator|:
name|friend
name|class
name|QNotifyChangeEvent
block|;
name|void
name|emitPathChanged
argument_list|(
name|QNotifyChangeEvent
operator|*
name|e
argument_list|)
block|;
name|void
name|startWatcher
argument_list|()
block|;
name|QHash
operator|<
name|QNotifyChangeEvent
operator|*
block|,
name|QString
operator|>
name|activeObjectToPath
block|;
name|QMutex
name|mutex
block|;
name|QWaitCondition
name|syncCondition
block|;
name|bool
name|watcherStarted
block|;
name|QNotifyChangeEvent
operator|*
name|currentAddEvent
block|;
name|QNotifyChangeEvent
operator|*
name|currentRemoveEvent
block|; }
decl_stmt|;
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_FILESYSTEMWATCHER
end_comment
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QFILESYSTEMWATCHER_WIN_P_H
end_comment
end_unit
