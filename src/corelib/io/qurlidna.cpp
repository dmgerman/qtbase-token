begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the QtCore module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"qurl_p.h"
end_include
begin_include
include|#
directive|include
file|<QtCore/qstringlist.h>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
comment|// needed by the punycode encoder/decoder
DECL|macro|Q_MAXINT
define|#
directive|define
name|Q_MAXINT
value|((uint)((uint)(-1)>>1))
DECL|variable|base
specifier|static
specifier|const
name|uint
name|base
init|=
literal|36
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|tmin
specifier|static
specifier|const
name|uint
name|tmin
init|=
literal|1
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|tmax
specifier|static
specifier|const
name|uint
name|tmax
init|=
literal|26
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|skew
specifier|static
specifier|const
name|uint
name|skew
init|=
literal|38
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|damp
specifier|static
specifier|const
name|uint
name|damp
init|=
literal|700
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|initial_bias
specifier|static
specifier|const
name|uint
name|initial_bias
init|=
literal|72
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|initial_n
specifier|static
specifier|const
name|uint
name|initial_n
init|=
literal|128
decl_stmt|;
end_decl_stmt
begin_struct
DECL|struct|NameprepCaseFoldingEntry
struct|struct
name|NameprepCaseFoldingEntry
block|{
DECL|member|uc
name|uint
name|uc
decl_stmt|;
DECL|member|mapping
name|ushort
name|mapping
index|[
literal|4
index|]
decl_stmt|;
block|}
struct|;
end_struct
begin_function
DECL|function|operator <
specifier|inline
name|bool
name|operator
name|<
parameter_list|(
name|uint
name|one
parameter_list|,
specifier|const
name|NameprepCaseFoldingEntry
modifier|&
name|other
parameter_list|)
block|{
return|return
name|one
operator|<
name|other
operator|.
name|uc
return|;
block|}
end_function
begin_function
DECL|function|operator <
specifier|inline
name|bool
name|operator
name|<
parameter_list|(
specifier|const
name|NameprepCaseFoldingEntry
modifier|&
name|one
parameter_list|,
name|uint
name|other
parameter_list|)
block|{
return|return
name|one
operator|.
name|uc
operator|<
name|other
return|;
block|}
end_function
begin_decl_stmt
DECL|variable|NameprepCaseFolding
specifier|static
specifier|const
name|NameprepCaseFoldingEntry
name|NameprepCaseFolding
index|[]
init|=
block|{
comment|/*	{ 0x0041, { 0x0061, 0x0000, 0x0000, 0x0000 } },         { 0x0042, { 0x0062, 0x0000, 0x0000, 0x0000 } },         { 0x0043, { 0x0063, 0x0000, 0x0000, 0x0000 } },         { 0x0044, { 0x0064, 0x0000, 0x0000, 0x0000 } },         { 0x0045, { 0x0065, 0x0000, 0x0000, 0x0000 } },         { 0x0046, { 0x0066, 0x0000, 0x0000, 0x0000 } },         { 0x0047, { 0x0067, 0x0000, 0x0000, 0x0000 } },         { 0x0048, { 0x0068, 0x0000, 0x0000, 0x0000 } },         { 0x0049, { 0x0069, 0x0000, 0x0000, 0x0000 } },         { 0x004A, { 0x006A, 0x0000, 0x0000, 0x0000 } },         { 0x004B, { 0x006B, 0x0000, 0x0000, 0x0000 } },         { 0x004C, { 0x006C, 0x0000, 0x0000, 0x0000 } },         { 0x004D, { 0x006D, 0x0000, 0x0000, 0x0000 } },         { 0x004E, { 0x006E, 0x0000, 0x0000, 0x0000 } },         { 0x004F, { 0x006F, 0x0000, 0x0000, 0x0000 } },         { 0x0050, { 0x0070, 0x0000, 0x0000, 0x0000 } },         { 0x0051, { 0x0071, 0x0000, 0x0000, 0x0000 } },         { 0x0052, { 0x0072, 0x0000, 0x0000, 0x0000 } },         { 0x0053, { 0x0073, 0x0000, 0x0000, 0x0000 } },         { 0x0054, { 0x0074, 0x0000, 0x0000, 0x0000 } },         { 0x0055, { 0x0075, 0x0000, 0x0000, 0x0000 } },         { 0x0056, { 0x0076, 0x0000, 0x0000, 0x0000 } },         { 0x0057, { 0x0077, 0x0000, 0x0000, 0x0000 } },         { 0x0058, { 0x0078, 0x0000, 0x0000, 0x0000 } },         { 0x0059, { 0x0079, 0x0000, 0x0000, 0x0000 } },         { 0x005A, { 0x007A, 0x0000, 0x0000, 0x0000 } },*/
block|{
literal|0x00B5
block|,
block|{
literal|0x03BC
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x00C0
block|,
block|{
literal|0x00E0
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x00C1
block|,
block|{
literal|0x00E1
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x00C2
block|,
block|{
literal|0x00E2
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x00C3
block|,
block|{
literal|0x00E3
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x00C4
block|,
block|{
literal|0x00E4
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x00C5
block|,
block|{
literal|0x00E5
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x00C6
block|,
block|{
literal|0x00E6
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x00C7
block|,
block|{
literal|0x00E7
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x00C8
block|,
block|{
literal|0x00E8
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x00C9
block|,
block|{
literal|0x00E9
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x00CA
block|,
block|{
literal|0x00EA
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x00CB
block|,
block|{
literal|0x00EB
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x00CC
block|,
block|{
literal|0x00EC
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x00CD
block|,
block|{
literal|0x00ED
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x00CE
block|,
block|{
literal|0x00EE
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x00CF
block|,
block|{
literal|0x00EF
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x00D0
block|,
block|{
literal|0x00F0
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x00D1
block|,
block|{
literal|0x00F1
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x00D2
block|,
block|{
literal|0x00F2
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x00D3
block|,
block|{
literal|0x00F3
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x00D4
block|,
block|{
literal|0x00F4
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x00D5
block|,
block|{
literal|0x00F5
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x00D6
block|,
block|{
literal|0x00F6
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x00D8
block|,
block|{
literal|0x00F8
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x00D9
block|,
block|{
literal|0x00F9
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x00DA
block|,
block|{
literal|0x00FA
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x00DB
block|,
block|{
literal|0x00FB
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x00DC
block|,
block|{
literal|0x00FC
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x00DD
block|,
block|{
literal|0x00FD
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x00DE
block|,
block|{
literal|0x00FE
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x00DF
block|,
block|{
literal|0x0073
block|,
literal|0x0073
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0100
block|,
block|{
literal|0x0101
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0102
block|,
block|{
literal|0x0103
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0104
block|,
block|{
literal|0x0105
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0106
block|,
block|{
literal|0x0107
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0108
block|,
block|{
literal|0x0109
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x010A
block|,
block|{
literal|0x010B
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x010C
block|,
block|{
literal|0x010D
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x010E
block|,
block|{
literal|0x010F
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0110
block|,
block|{
literal|0x0111
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0112
block|,
block|{
literal|0x0113
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0114
block|,
block|{
literal|0x0115
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0116
block|,
block|{
literal|0x0117
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0118
block|,
block|{
literal|0x0119
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x011A
block|,
block|{
literal|0x011B
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x011C
block|,
block|{
literal|0x011D
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x011E
block|,
block|{
literal|0x011F
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0120
block|,
block|{
literal|0x0121
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0122
block|,
block|{
literal|0x0123
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0124
block|,
block|{
literal|0x0125
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0126
block|,
block|{
literal|0x0127
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0128
block|,
block|{
literal|0x0129
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x012A
block|,
block|{
literal|0x012B
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x012C
block|,
block|{
literal|0x012D
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x012E
block|,
block|{
literal|0x012F
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0130
block|,
block|{
literal|0x0069
block|,
literal|0x0307
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0132
block|,
block|{
literal|0x0133
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0134
block|,
block|{
literal|0x0135
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0136
block|,
block|{
literal|0x0137
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0139
block|,
block|{
literal|0x013A
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x013B
block|,
block|{
literal|0x013C
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x013D
block|,
block|{
literal|0x013E
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x013F
block|,
block|{
literal|0x0140
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0141
block|,
block|{
literal|0x0142
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0143
block|,
block|{
literal|0x0144
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0145
block|,
block|{
literal|0x0146
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0147
block|,
block|{
literal|0x0148
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0149
block|,
block|{
literal|0x02BC
block|,
literal|0x006E
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x014A
block|,
block|{
literal|0x014B
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x014C
block|,
block|{
literal|0x014D
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x014E
block|,
block|{
literal|0x014F
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0150
block|,
block|{
literal|0x0151
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0152
block|,
block|{
literal|0x0153
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0154
block|,
block|{
literal|0x0155
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0156
block|,
block|{
literal|0x0157
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0158
block|,
block|{
literal|0x0159
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x015A
block|,
block|{
literal|0x015B
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x015C
block|,
block|{
literal|0x015D
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x015E
block|,
block|{
literal|0x015F
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0160
block|,
block|{
literal|0x0161
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0162
block|,
block|{
literal|0x0163
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0164
block|,
block|{
literal|0x0165
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0166
block|,
block|{
literal|0x0167
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0168
block|,
block|{
literal|0x0169
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x016A
block|,
block|{
literal|0x016B
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x016C
block|,
block|{
literal|0x016D
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x016E
block|,
block|{
literal|0x016F
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0170
block|,
block|{
literal|0x0171
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0172
block|,
block|{
literal|0x0173
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0174
block|,
block|{
literal|0x0175
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0176
block|,
block|{
literal|0x0177
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0178
block|,
block|{
literal|0x00FF
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0179
block|,
block|{
literal|0x017A
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x017B
block|,
block|{
literal|0x017C
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x017D
block|,
block|{
literal|0x017E
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x017F
block|,
block|{
literal|0x0073
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0181
block|,
block|{
literal|0x0253
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0182
block|,
block|{
literal|0x0183
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0184
block|,
block|{
literal|0x0185
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0186
block|,
block|{
literal|0x0254
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0187
block|,
block|{
literal|0x0188
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0189
block|,
block|{
literal|0x0256
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x018A
block|,
block|{
literal|0x0257
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x018B
block|,
block|{
literal|0x018C
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x018E
block|,
block|{
literal|0x01DD
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x018F
block|,
block|{
literal|0x0259
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0190
block|,
block|{
literal|0x025B
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0191
block|,
block|{
literal|0x0192
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0193
block|,
block|{
literal|0x0260
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0194
block|,
block|{
literal|0x0263
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0196
block|,
block|{
literal|0x0269
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0197
block|,
block|{
literal|0x0268
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0198
block|,
block|{
literal|0x0199
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x019C
block|,
block|{
literal|0x026F
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x019D
block|,
block|{
literal|0x0272
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x019F
block|,
block|{
literal|0x0275
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x01A0
block|,
block|{
literal|0x01A1
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x01A2
block|,
block|{
literal|0x01A3
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x01A4
block|,
block|{
literal|0x01A5
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x01A6
block|,
block|{
literal|0x0280
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x01A7
block|,
block|{
literal|0x01A8
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x01A9
block|,
block|{
literal|0x0283
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x01AC
block|,
block|{
literal|0x01AD
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x01AE
block|,
block|{
literal|0x0288
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x01AF
block|,
block|{
literal|0x01B0
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x01B1
block|,
block|{
literal|0x028A
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x01B2
block|,
block|{
literal|0x028B
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x01B3
block|,
block|{
literal|0x01B4
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x01B5
block|,
block|{
literal|0x01B6
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x01B7
block|,
block|{
literal|0x0292
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x01B8
block|,
block|{
literal|0x01B9
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x01BC
block|,
block|{
literal|0x01BD
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x01C4
block|,
block|{
literal|0x01C6
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x01C5
block|,
block|{
literal|0x01C6
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x01C7
block|,
block|{
literal|0x01C9
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x01C8
block|,
block|{
literal|0x01C9
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x01CA
block|,
block|{
literal|0x01CC
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x01CB
block|,
block|{
literal|0x01CC
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x01CD
block|,
block|{
literal|0x01CE
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x01CF
block|,
block|{
literal|0x01D0
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x01D1
block|,
block|{
literal|0x01D2
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x01D3
block|,
block|{
literal|0x01D4
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x01D5
block|,
block|{
literal|0x01D6
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x01D7
block|,
block|{
literal|0x01D8
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x01D9
block|,
block|{
literal|0x01DA
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x01DB
block|,
block|{
literal|0x01DC
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x01DE
block|,
block|{
literal|0x01DF
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x01E0
block|,
block|{
literal|0x01E1
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x01E2
block|,
block|{
literal|0x01E3
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x01E4
block|,
block|{
literal|0x01E5
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x01E6
block|,
block|{
literal|0x01E7
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x01E8
block|,
block|{
literal|0x01E9
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x01EA
block|,
block|{
literal|0x01EB
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x01EC
block|,
block|{
literal|0x01ED
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x01EE
block|,
block|{
literal|0x01EF
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x01F0
block|,
block|{
literal|0x006A
block|,
literal|0x030C
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x01F1
block|,
block|{
literal|0x01F3
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x01F2
block|,
block|{
literal|0x01F3
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x01F4
block|,
block|{
literal|0x01F5
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x01F6
block|,
block|{
literal|0x0195
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x01F7
block|,
block|{
literal|0x01BF
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x01F8
block|,
block|{
literal|0x01F9
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x01FA
block|,
block|{
literal|0x01FB
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x01FC
block|,
block|{
literal|0x01FD
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x01FE
block|,
block|{
literal|0x01FF
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0200
block|,
block|{
literal|0x0201
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0202
block|,
block|{
literal|0x0203
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0204
block|,
block|{
literal|0x0205
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0206
block|,
block|{
literal|0x0207
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0208
block|,
block|{
literal|0x0209
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x020A
block|,
block|{
literal|0x020B
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x020C
block|,
block|{
literal|0x020D
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x020E
block|,
block|{
literal|0x020F
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0210
block|,
block|{
literal|0x0211
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0212
block|,
block|{
literal|0x0213
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0214
block|,
block|{
literal|0x0215
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0216
block|,
block|{
literal|0x0217
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0218
block|,
block|{
literal|0x0219
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x021A
block|,
block|{
literal|0x021B
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x021C
block|,
block|{
literal|0x021D
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x021E
block|,
block|{
literal|0x021F
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0220
block|,
block|{
literal|0x019E
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0222
block|,
block|{
literal|0x0223
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0224
block|,
block|{
literal|0x0225
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0226
block|,
block|{
literal|0x0227
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0228
block|,
block|{
literal|0x0229
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x022A
block|,
block|{
literal|0x022B
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x022C
block|,
block|{
literal|0x022D
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x022E
block|,
block|{
literal|0x022F
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0230
block|,
block|{
literal|0x0231
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0232
block|,
block|{
literal|0x0233
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0345
block|,
block|{
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x037A
block|,
block|{
literal|0x0020
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0386
block|,
block|{
literal|0x03AC
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0388
block|,
block|{
literal|0x03AD
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0389
block|,
block|{
literal|0x03AE
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x038A
block|,
block|{
literal|0x03AF
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x038C
block|,
block|{
literal|0x03CC
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x038E
block|,
block|{
literal|0x03CD
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x038F
block|,
block|{
literal|0x03CE
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0390
block|,
block|{
literal|0x03B9
block|,
literal|0x0308
block|,
literal|0x0301
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0391
block|,
block|{
literal|0x03B1
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0392
block|,
block|{
literal|0x03B2
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0393
block|,
block|{
literal|0x03B3
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0394
block|,
block|{
literal|0x03B4
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0395
block|,
block|{
literal|0x03B5
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0396
block|,
block|{
literal|0x03B6
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0397
block|,
block|{
literal|0x03B7
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0398
block|,
block|{
literal|0x03B8
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0399
block|,
block|{
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x039A
block|,
block|{
literal|0x03BA
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x039B
block|,
block|{
literal|0x03BB
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x039C
block|,
block|{
literal|0x03BC
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x039D
block|,
block|{
literal|0x03BD
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x039E
block|,
block|{
literal|0x03BE
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x039F
block|,
block|{
literal|0x03BF
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x03A0
block|,
block|{
literal|0x03C0
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x03A1
block|,
block|{
literal|0x03C1
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x03A3
block|,
block|{
literal|0x03C3
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x03A4
block|,
block|{
literal|0x03C4
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x03A5
block|,
block|{
literal|0x03C5
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x03A6
block|,
block|{
literal|0x03C6
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x03A7
block|,
block|{
literal|0x03C7
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x03A8
block|,
block|{
literal|0x03C8
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x03A9
block|,
block|{
literal|0x03C9
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x03AA
block|,
block|{
literal|0x03CA
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x03AB
block|,
block|{
literal|0x03CB
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x03B0
block|,
block|{
literal|0x03C5
block|,
literal|0x0308
block|,
literal|0x0301
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x03C2
block|,
block|{
literal|0x03C3
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x03D0
block|,
block|{
literal|0x03B2
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x03D1
block|,
block|{
literal|0x03B8
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x03D2
block|,
block|{
literal|0x03C5
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x03D3
block|,
block|{
literal|0x03CD
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x03D4
block|,
block|{
literal|0x03CB
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x03D5
block|,
block|{
literal|0x03C6
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x03D6
block|,
block|{
literal|0x03C0
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x03D8
block|,
block|{
literal|0x03D9
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x03DA
block|,
block|{
literal|0x03DB
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x03DC
block|,
block|{
literal|0x03DD
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x03DE
block|,
block|{
literal|0x03DF
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x03E0
block|,
block|{
literal|0x03E1
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x03E2
block|,
block|{
literal|0x03E3
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x03E4
block|,
block|{
literal|0x03E5
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x03E6
block|,
block|{
literal|0x03E7
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x03E8
block|,
block|{
literal|0x03E9
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x03EA
block|,
block|{
literal|0x03EB
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x03EC
block|,
block|{
literal|0x03ED
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x03EE
block|,
block|{
literal|0x03EF
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x03F0
block|,
block|{
literal|0x03BA
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x03F1
block|,
block|{
literal|0x03C1
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x03F2
block|,
block|{
literal|0x03C3
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x03F4
block|,
block|{
literal|0x03B8
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x03F5
block|,
block|{
literal|0x03B5
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0400
block|,
block|{
literal|0x0450
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0401
block|,
block|{
literal|0x0451
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0402
block|,
block|{
literal|0x0452
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0403
block|,
block|{
literal|0x0453
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0404
block|,
block|{
literal|0x0454
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0405
block|,
block|{
literal|0x0455
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0406
block|,
block|{
literal|0x0456
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0407
block|,
block|{
literal|0x0457
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0408
block|,
block|{
literal|0x0458
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0409
block|,
block|{
literal|0x0459
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x040A
block|,
block|{
literal|0x045A
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x040B
block|,
block|{
literal|0x045B
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x040C
block|,
block|{
literal|0x045C
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x040D
block|,
block|{
literal|0x045D
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x040E
block|,
block|{
literal|0x045E
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x040F
block|,
block|{
literal|0x045F
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0410
block|,
block|{
literal|0x0430
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0411
block|,
block|{
literal|0x0431
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0412
block|,
block|{
literal|0x0432
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0413
block|,
block|{
literal|0x0433
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0414
block|,
block|{
literal|0x0434
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0415
block|,
block|{
literal|0x0435
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0416
block|,
block|{
literal|0x0436
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0417
block|,
block|{
literal|0x0437
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0418
block|,
block|{
literal|0x0438
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0419
block|,
block|{
literal|0x0439
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x041A
block|,
block|{
literal|0x043A
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x041B
block|,
block|{
literal|0x043B
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x041C
block|,
block|{
literal|0x043C
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x041D
block|,
block|{
literal|0x043D
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x041E
block|,
block|{
literal|0x043E
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x041F
block|,
block|{
literal|0x043F
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0420
block|,
block|{
literal|0x0440
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0421
block|,
block|{
literal|0x0441
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0422
block|,
block|{
literal|0x0442
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0423
block|,
block|{
literal|0x0443
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0424
block|,
block|{
literal|0x0444
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0425
block|,
block|{
literal|0x0445
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0426
block|,
block|{
literal|0x0446
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0427
block|,
block|{
literal|0x0447
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0428
block|,
block|{
literal|0x0448
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0429
block|,
block|{
literal|0x0449
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x042A
block|,
block|{
literal|0x044A
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x042B
block|,
block|{
literal|0x044B
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x042C
block|,
block|{
literal|0x044C
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x042D
block|,
block|{
literal|0x044D
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x042E
block|,
block|{
literal|0x044E
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x042F
block|,
block|{
literal|0x044F
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0460
block|,
block|{
literal|0x0461
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0462
block|,
block|{
literal|0x0463
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0464
block|,
block|{
literal|0x0465
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0466
block|,
block|{
literal|0x0467
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0468
block|,
block|{
literal|0x0469
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x046A
block|,
block|{
literal|0x046B
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x046C
block|,
block|{
literal|0x046D
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x046E
block|,
block|{
literal|0x046F
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0470
block|,
block|{
literal|0x0471
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0472
block|,
block|{
literal|0x0473
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0474
block|,
block|{
literal|0x0475
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0476
block|,
block|{
literal|0x0477
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0478
block|,
block|{
literal|0x0479
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x047A
block|,
block|{
literal|0x047B
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x047C
block|,
block|{
literal|0x047D
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x047E
block|,
block|{
literal|0x047F
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0480
block|,
block|{
literal|0x0481
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x048A
block|,
block|{
literal|0x048B
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x048C
block|,
block|{
literal|0x048D
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x048E
block|,
block|{
literal|0x048F
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0490
block|,
block|{
literal|0x0491
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0492
block|,
block|{
literal|0x0493
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0494
block|,
block|{
literal|0x0495
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0496
block|,
block|{
literal|0x0497
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0498
block|,
block|{
literal|0x0499
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x049A
block|,
block|{
literal|0x049B
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x049C
block|,
block|{
literal|0x049D
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x049E
block|,
block|{
literal|0x049F
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x04A0
block|,
block|{
literal|0x04A1
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x04A2
block|,
block|{
literal|0x04A3
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x04A4
block|,
block|{
literal|0x04A5
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x04A6
block|,
block|{
literal|0x04A7
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x04A8
block|,
block|{
literal|0x04A9
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x04AA
block|,
block|{
literal|0x04AB
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x04AC
block|,
block|{
literal|0x04AD
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x04AE
block|,
block|{
literal|0x04AF
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x04B0
block|,
block|{
literal|0x04B1
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x04B2
block|,
block|{
literal|0x04B3
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x04B4
block|,
block|{
literal|0x04B5
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x04B6
block|,
block|{
literal|0x04B7
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x04B8
block|,
block|{
literal|0x04B9
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x04BA
block|,
block|{
literal|0x04BB
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x04BC
block|,
block|{
literal|0x04BD
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x04BE
block|,
block|{
literal|0x04BF
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x04C1
block|,
block|{
literal|0x04C2
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x04C3
block|,
block|{
literal|0x04C4
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x04C5
block|,
block|{
literal|0x04C6
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x04C7
block|,
block|{
literal|0x04C8
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x04C9
block|,
block|{
literal|0x04CA
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x04CB
block|,
block|{
literal|0x04CC
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x04CD
block|,
block|{
literal|0x04CE
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x04D0
block|,
block|{
literal|0x04D1
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x04D2
block|,
block|{
literal|0x04D3
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x04D4
block|,
block|{
literal|0x04D5
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x04D6
block|,
block|{
literal|0x04D7
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x04D8
block|,
block|{
literal|0x04D9
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x04DA
block|,
block|{
literal|0x04DB
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x04DC
block|,
block|{
literal|0x04DD
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x04DE
block|,
block|{
literal|0x04DF
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x04E0
block|,
block|{
literal|0x04E1
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x04E2
block|,
block|{
literal|0x04E3
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x04E4
block|,
block|{
literal|0x04E5
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x04E6
block|,
block|{
literal|0x04E7
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x04E8
block|,
block|{
literal|0x04E9
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x04EA
block|,
block|{
literal|0x04EB
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x04EC
block|,
block|{
literal|0x04ED
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x04EE
block|,
block|{
literal|0x04EF
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x04F0
block|,
block|{
literal|0x04F1
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x04F2
block|,
block|{
literal|0x04F3
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x04F4
block|,
block|{
literal|0x04F5
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x04F8
block|,
block|{
literal|0x04F9
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0500
block|,
block|{
literal|0x0501
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0502
block|,
block|{
literal|0x0503
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0504
block|,
block|{
literal|0x0505
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0506
block|,
block|{
literal|0x0507
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0508
block|,
block|{
literal|0x0509
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x050A
block|,
block|{
literal|0x050B
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x050C
block|,
block|{
literal|0x050D
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x050E
block|,
block|{
literal|0x050F
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0531
block|,
block|{
literal|0x0561
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0532
block|,
block|{
literal|0x0562
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0533
block|,
block|{
literal|0x0563
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0534
block|,
block|{
literal|0x0564
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0535
block|,
block|{
literal|0x0565
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0536
block|,
block|{
literal|0x0566
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0537
block|,
block|{
literal|0x0567
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0538
block|,
block|{
literal|0x0568
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0539
block|,
block|{
literal|0x0569
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x053A
block|,
block|{
literal|0x056A
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x053B
block|,
block|{
literal|0x056B
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x053C
block|,
block|{
literal|0x056C
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x053D
block|,
block|{
literal|0x056D
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x053E
block|,
block|{
literal|0x056E
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x053F
block|,
block|{
literal|0x056F
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0540
block|,
block|{
literal|0x0570
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0541
block|,
block|{
literal|0x0571
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0542
block|,
block|{
literal|0x0572
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0543
block|,
block|{
literal|0x0573
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0544
block|,
block|{
literal|0x0574
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0545
block|,
block|{
literal|0x0575
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0546
block|,
block|{
literal|0x0576
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0547
block|,
block|{
literal|0x0577
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0548
block|,
block|{
literal|0x0578
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0549
block|,
block|{
literal|0x0579
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x054A
block|,
block|{
literal|0x057A
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x054B
block|,
block|{
literal|0x057B
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x054C
block|,
block|{
literal|0x057C
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x054D
block|,
block|{
literal|0x057D
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x054E
block|,
block|{
literal|0x057E
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x054F
block|,
block|{
literal|0x057F
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0550
block|,
block|{
literal|0x0580
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0551
block|,
block|{
literal|0x0581
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0552
block|,
block|{
literal|0x0582
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0553
block|,
block|{
literal|0x0583
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0554
block|,
block|{
literal|0x0584
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0555
block|,
block|{
literal|0x0585
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0556
block|,
block|{
literal|0x0586
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x0587
block|,
block|{
literal|0x0565
block|,
literal|0x0582
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E00
block|,
block|{
literal|0x1E01
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E02
block|,
block|{
literal|0x1E03
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E04
block|,
block|{
literal|0x1E05
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E06
block|,
block|{
literal|0x1E07
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E08
block|,
block|{
literal|0x1E09
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E0A
block|,
block|{
literal|0x1E0B
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E0C
block|,
block|{
literal|0x1E0D
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E0E
block|,
block|{
literal|0x1E0F
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E10
block|,
block|{
literal|0x1E11
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E12
block|,
block|{
literal|0x1E13
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E14
block|,
block|{
literal|0x1E15
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E16
block|,
block|{
literal|0x1E17
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E18
block|,
block|{
literal|0x1E19
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E1A
block|,
block|{
literal|0x1E1B
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E1C
block|,
block|{
literal|0x1E1D
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E1E
block|,
block|{
literal|0x1E1F
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E20
block|,
block|{
literal|0x1E21
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E22
block|,
block|{
literal|0x1E23
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E24
block|,
block|{
literal|0x1E25
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E26
block|,
block|{
literal|0x1E27
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E28
block|,
block|{
literal|0x1E29
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E2A
block|,
block|{
literal|0x1E2B
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E2C
block|,
block|{
literal|0x1E2D
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E2E
block|,
block|{
literal|0x1E2F
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E30
block|,
block|{
literal|0x1E31
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E32
block|,
block|{
literal|0x1E33
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E34
block|,
block|{
literal|0x1E35
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E36
block|,
block|{
literal|0x1E37
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E38
block|,
block|{
literal|0x1E39
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E3A
block|,
block|{
literal|0x1E3B
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E3C
block|,
block|{
literal|0x1E3D
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E3E
block|,
block|{
literal|0x1E3F
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E40
block|,
block|{
literal|0x1E41
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E42
block|,
block|{
literal|0x1E43
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E44
block|,
block|{
literal|0x1E45
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E46
block|,
block|{
literal|0x1E47
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E48
block|,
block|{
literal|0x1E49
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E4A
block|,
block|{
literal|0x1E4B
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E4C
block|,
block|{
literal|0x1E4D
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E4E
block|,
block|{
literal|0x1E4F
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E50
block|,
block|{
literal|0x1E51
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E52
block|,
block|{
literal|0x1E53
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E54
block|,
block|{
literal|0x1E55
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E56
block|,
block|{
literal|0x1E57
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E58
block|,
block|{
literal|0x1E59
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E5A
block|,
block|{
literal|0x1E5B
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E5C
block|,
block|{
literal|0x1E5D
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E5E
block|,
block|{
literal|0x1E5F
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E60
block|,
block|{
literal|0x1E61
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E62
block|,
block|{
literal|0x1E63
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E64
block|,
block|{
literal|0x1E65
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E66
block|,
block|{
literal|0x1E67
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E68
block|,
block|{
literal|0x1E69
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E6A
block|,
block|{
literal|0x1E6B
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E6C
block|,
block|{
literal|0x1E6D
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E6E
block|,
block|{
literal|0x1E6F
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E70
block|,
block|{
literal|0x1E71
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E72
block|,
block|{
literal|0x1E73
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E74
block|,
block|{
literal|0x1E75
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E76
block|,
block|{
literal|0x1E77
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E78
block|,
block|{
literal|0x1E79
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E7A
block|,
block|{
literal|0x1E7B
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E7C
block|,
block|{
literal|0x1E7D
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E7E
block|,
block|{
literal|0x1E7F
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E80
block|,
block|{
literal|0x1E81
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E82
block|,
block|{
literal|0x1E83
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E84
block|,
block|{
literal|0x1E85
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E86
block|,
block|{
literal|0x1E87
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E88
block|,
block|{
literal|0x1E89
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E8A
block|,
block|{
literal|0x1E8B
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E8C
block|,
block|{
literal|0x1E8D
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E8E
block|,
block|{
literal|0x1E8F
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E90
block|,
block|{
literal|0x1E91
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E92
block|,
block|{
literal|0x1E93
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E94
block|,
block|{
literal|0x1E95
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E96
block|,
block|{
literal|0x0068
block|,
literal|0x0331
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E97
block|,
block|{
literal|0x0074
block|,
literal|0x0308
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E98
block|,
block|{
literal|0x0077
block|,
literal|0x030A
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E99
block|,
block|{
literal|0x0079
block|,
literal|0x030A
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E9A
block|,
block|{
literal|0x0061
block|,
literal|0x02BE
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1E9B
block|,
block|{
literal|0x1E61
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1EA0
block|,
block|{
literal|0x1EA1
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1EA2
block|,
block|{
literal|0x1EA3
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1EA4
block|,
block|{
literal|0x1EA5
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1EA6
block|,
block|{
literal|0x1EA7
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1EA8
block|,
block|{
literal|0x1EA9
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1EAA
block|,
block|{
literal|0x1EAB
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1EAC
block|,
block|{
literal|0x1EAD
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1EAE
block|,
block|{
literal|0x1EAF
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1EB0
block|,
block|{
literal|0x1EB1
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1EB2
block|,
block|{
literal|0x1EB3
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1EB4
block|,
block|{
literal|0x1EB5
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1EB6
block|,
block|{
literal|0x1EB7
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1EB8
block|,
block|{
literal|0x1EB9
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1EBA
block|,
block|{
literal|0x1EBB
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1EBC
block|,
block|{
literal|0x1EBD
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1EBE
block|,
block|{
literal|0x1EBF
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1EC0
block|,
block|{
literal|0x1EC1
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1EC2
block|,
block|{
literal|0x1EC3
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1EC4
block|,
block|{
literal|0x1EC5
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1EC6
block|,
block|{
literal|0x1EC7
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1EC8
block|,
block|{
literal|0x1EC9
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1ECA
block|,
block|{
literal|0x1ECB
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1ECC
block|,
block|{
literal|0x1ECD
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1ECE
block|,
block|{
literal|0x1ECF
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1ED0
block|,
block|{
literal|0x1ED1
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1ED2
block|,
block|{
literal|0x1ED3
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1ED4
block|,
block|{
literal|0x1ED5
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1ED6
block|,
block|{
literal|0x1ED7
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1ED8
block|,
block|{
literal|0x1ED9
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1EDA
block|,
block|{
literal|0x1EDB
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1EDC
block|,
block|{
literal|0x1EDD
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1EDE
block|,
block|{
literal|0x1EDF
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1EE0
block|,
block|{
literal|0x1EE1
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1EE2
block|,
block|{
literal|0x1EE3
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1EE4
block|,
block|{
literal|0x1EE5
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1EE6
block|,
block|{
literal|0x1EE7
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1EE8
block|,
block|{
literal|0x1EE9
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1EEA
block|,
block|{
literal|0x1EEB
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1EEC
block|,
block|{
literal|0x1EED
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1EEE
block|,
block|{
literal|0x1EEF
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1EF0
block|,
block|{
literal|0x1EF1
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1EF2
block|,
block|{
literal|0x1EF3
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1EF4
block|,
block|{
literal|0x1EF5
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1EF6
block|,
block|{
literal|0x1EF7
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1EF8
block|,
block|{
literal|0x1EF9
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F08
block|,
block|{
literal|0x1F00
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F09
block|,
block|{
literal|0x1F01
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F0A
block|,
block|{
literal|0x1F02
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F0B
block|,
block|{
literal|0x1F03
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F0C
block|,
block|{
literal|0x1F04
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F0D
block|,
block|{
literal|0x1F05
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F0E
block|,
block|{
literal|0x1F06
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F0F
block|,
block|{
literal|0x1F07
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F18
block|,
block|{
literal|0x1F10
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F19
block|,
block|{
literal|0x1F11
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F1A
block|,
block|{
literal|0x1F12
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F1B
block|,
block|{
literal|0x1F13
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F1C
block|,
block|{
literal|0x1F14
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F1D
block|,
block|{
literal|0x1F15
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F28
block|,
block|{
literal|0x1F20
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F29
block|,
block|{
literal|0x1F21
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F2A
block|,
block|{
literal|0x1F22
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F2B
block|,
block|{
literal|0x1F23
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F2C
block|,
block|{
literal|0x1F24
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F2D
block|,
block|{
literal|0x1F25
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F2E
block|,
block|{
literal|0x1F26
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F2F
block|,
block|{
literal|0x1F27
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F38
block|,
block|{
literal|0x1F30
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F39
block|,
block|{
literal|0x1F31
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F3A
block|,
block|{
literal|0x1F32
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F3B
block|,
block|{
literal|0x1F33
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F3C
block|,
block|{
literal|0x1F34
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F3D
block|,
block|{
literal|0x1F35
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F3E
block|,
block|{
literal|0x1F36
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F3F
block|,
block|{
literal|0x1F37
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F48
block|,
block|{
literal|0x1F40
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F49
block|,
block|{
literal|0x1F41
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F4A
block|,
block|{
literal|0x1F42
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F4B
block|,
block|{
literal|0x1F43
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F4C
block|,
block|{
literal|0x1F44
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F4D
block|,
block|{
literal|0x1F45
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F50
block|,
block|{
literal|0x03C5
block|,
literal|0x0313
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F52
block|,
block|{
literal|0x03C5
block|,
literal|0x0313
block|,
literal|0x0300
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F54
block|,
block|{
literal|0x03C5
block|,
literal|0x0313
block|,
literal|0x0301
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F56
block|,
block|{
literal|0x03C5
block|,
literal|0x0313
block|,
literal|0x0342
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F59
block|,
block|{
literal|0x1F51
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F5B
block|,
block|{
literal|0x1F53
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F5D
block|,
block|{
literal|0x1F55
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F5F
block|,
block|{
literal|0x1F57
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F68
block|,
block|{
literal|0x1F60
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F69
block|,
block|{
literal|0x1F61
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F6A
block|,
block|{
literal|0x1F62
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F6B
block|,
block|{
literal|0x1F63
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F6C
block|,
block|{
literal|0x1F64
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F6D
block|,
block|{
literal|0x1F65
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F6E
block|,
block|{
literal|0x1F66
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F6F
block|,
block|{
literal|0x1F67
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F80
block|,
block|{
literal|0x1F00
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F81
block|,
block|{
literal|0x1F01
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F82
block|,
block|{
literal|0x1F02
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F83
block|,
block|{
literal|0x1F03
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F84
block|,
block|{
literal|0x1F04
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F85
block|,
block|{
literal|0x1F05
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F86
block|,
block|{
literal|0x1F06
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F87
block|,
block|{
literal|0x1F07
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F88
block|,
block|{
literal|0x1F00
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F89
block|,
block|{
literal|0x1F01
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F8A
block|,
block|{
literal|0x1F02
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F8B
block|,
block|{
literal|0x1F03
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F8C
block|,
block|{
literal|0x1F04
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F8D
block|,
block|{
literal|0x1F05
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F8E
block|,
block|{
literal|0x1F06
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F8F
block|,
block|{
literal|0x1F07
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F90
block|,
block|{
literal|0x1F20
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F91
block|,
block|{
literal|0x1F21
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F92
block|,
block|{
literal|0x1F22
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F93
block|,
block|{
literal|0x1F23
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F94
block|,
block|{
literal|0x1F24
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F95
block|,
block|{
literal|0x1F25
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F96
block|,
block|{
literal|0x1F26
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F97
block|,
block|{
literal|0x1F27
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F98
block|,
block|{
literal|0x1F20
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F99
block|,
block|{
literal|0x1F21
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F9A
block|,
block|{
literal|0x1F22
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F9B
block|,
block|{
literal|0x1F23
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F9C
block|,
block|{
literal|0x1F24
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F9D
block|,
block|{
literal|0x1F25
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F9E
block|,
block|{
literal|0x1F26
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1F9F
block|,
block|{
literal|0x1F27
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FA0
block|,
block|{
literal|0x1F60
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FA1
block|,
block|{
literal|0x1F61
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FA2
block|,
block|{
literal|0x1F62
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FA3
block|,
block|{
literal|0x1F63
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FA4
block|,
block|{
literal|0x1F64
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FA5
block|,
block|{
literal|0x1F65
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FA6
block|,
block|{
literal|0x1F66
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FA7
block|,
block|{
literal|0x1F67
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FA8
block|,
block|{
literal|0x1F60
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FA9
block|,
block|{
literal|0x1F61
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FAA
block|,
block|{
literal|0x1F62
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FAB
block|,
block|{
literal|0x1F63
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FAC
block|,
block|{
literal|0x1F64
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FAD
block|,
block|{
literal|0x1F65
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FAE
block|,
block|{
literal|0x1F66
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FAF
block|,
block|{
literal|0x1F67
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FB2
block|,
block|{
literal|0x1F70
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FB3
block|,
block|{
literal|0x03B1
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FB4
block|,
block|{
literal|0x03AC
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FB6
block|,
block|{
literal|0x03B1
block|,
literal|0x0342
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FB7
block|,
block|{
literal|0x03B1
block|,
literal|0x0342
block|,
literal|0x03B9
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FB8
block|,
block|{
literal|0x1FB0
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FB9
block|,
block|{
literal|0x1FB1
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FBA
block|,
block|{
literal|0x1F70
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FBB
block|,
block|{
literal|0x1F71
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FBC
block|,
block|{
literal|0x03B1
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FBE
block|,
block|{
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FC2
block|,
block|{
literal|0x1F74
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FC3
block|,
block|{
literal|0x03B7
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FC4
block|,
block|{
literal|0x03AE
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FC6
block|,
block|{
literal|0x03B7
block|,
literal|0x0342
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FC7
block|,
block|{
literal|0x03B7
block|,
literal|0x0342
block|,
literal|0x03B9
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FC8
block|,
block|{
literal|0x1F72
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FC9
block|,
block|{
literal|0x1F73
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FCA
block|,
block|{
literal|0x1F74
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FCB
block|,
block|{
literal|0x1F75
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FCC
block|,
block|{
literal|0x03B7
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FD2
block|,
block|{
literal|0x03B9
block|,
literal|0x0308
block|,
literal|0x0300
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FD3
block|,
block|{
literal|0x03B9
block|,
literal|0x0308
block|,
literal|0x0301
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FD6
block|,
block|{
literal|0x03B9
block|,
literal|0x0342
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FD7
block|,
block|{
literal|0x03B9
block|,
literal|0x0308
block|,
literal|0x0342
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FD8
block|,
block|{
literal|0x1FD0
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FD9
block|,
block|{
literal|0x1FD1
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FDA
block|,
block|{
literal|0x1F76
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FDB
block|,
block|{
literal|0x1F77
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FE2
block|,
block|{
literal|0x03C5
block|,
literal|0x0308
block|,
literal|0x0300
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FE3
block|,
block|{
literal|0x03C5
block|,
literal|0x0308
block|,
literal|0x0301
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FE4
block|,
block|{
literal|0x03C1
block|,
literal|0x0313
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FE6
block|,
block|{
literal|0x03C5
block|,
literal|0x0342
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FE7
block|,
block|{
literal|0x03C5
block|,
literal|0x0308
block|,
literal|0x0342
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FE8
block|,
block|{
literal|0x1FE0
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FE9
block|,
block|{
literal|0x1FE1
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FEA
block|,
block|{
literal|0x1F7A
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FEB
block|,
block|{
literal|0x1F7B
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FEC
block|,
block|{
literal|0x1FE5
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FF2
block|,
block|{
literal|0x1F7C
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FF3
block|,
block|{
literal|0x03C9
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FF4
block|,
block|{
literal|0x03CE
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FF6
block|,
block|{
literal|0x03C9
block|,
literal|0x0342
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FF7
block|,
block|{
literal|0x03C9
block|,
literal|0x0342
block|,
literal|0x03B9
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FF8
block|,
block|{
literal|0x1F78
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FF9
block|,
block|{
literal|0x1F79
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FFA
block|,
block|{
literal|0x1F7C
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FFB
block|,
block|{
literal|0x1F7D
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1FFC
block|,
block|{
literal|0x03C9
block|,
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x20A8
block|,
block|{
literal|0x0072
block|,
literal|0x0073
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x2102
block|,
block|{
literal|0x0063
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x2103
block|,
block|{
literal|0x00B0
block|,
literal|0x0063
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x2107
block|,
block|{
literal|0x025B
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x2109
block|,
block|{
literal|0x00B0
block|,
literal|0x0066
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x210B
block|,
block|{
literal|0x0068
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x210C
block|,
block|{
literal|0x0068
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x210D
block|,
block|{
literal|0x0068
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x2110
block|,
block|{
literal|0x0069
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x2111
block|,
block|{
literal|0x0069
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x2112
block|,
block|{
literal|0x006C
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x2115
block|,
block|{
literal|0x006E
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x2116
block|,
block|{
literal|0x006E
block|,
literal|0x006F
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x2119
block|,
block|{
literal|0x0070
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x211A
block|,
block|{
literal|0x0071
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x211B
block|,
block|{
literal|0x0072
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x211C
block|,
block|{
literal|0x0072
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x211D
block|,
block|{
literal|0x0072
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x2120
block|,
block|{
literal|0x0073
block|,
literal|0x006D
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x2121
block|,
block|{
literal|0x0074
block|,
literal|0x0065
block|,
literal|0x006C
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x2122
block|,
block|{
literal|0x0074
block|,
literal|0x006D
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x2124
block|,
block|{
literal|0x007A
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x2126
block|,
block|{
literal|0x03C9
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x2128
block|,
block|{
literal|0x007A
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x212A
block|,
block|{
literal|0x006B
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x212B
block|,
block|{
literal|0x00E5
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x212C
block|,
block|{
literal|0x0062
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x212D
block|,
block|{
literal|0x0063
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x2130
block|,
block|{
literal|0x0065
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x2131
block|,
block|{
literal|0x0066
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x2133
block|,
block|{
literal|0x006D
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x213E
block|,
block|{
literal|0x03B3
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x213F
block|,
block|{
literal|0x03C0
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x2145
block|,
block|{
literal|0x0064
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x2160
block|,
block|{
literal|0x2170
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x2161
block|,
block|{
literal|0x2171
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x2162
block|,
block|{
literal|0x2172
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x2163
block|,
block|{
literal|0x2173
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x2164
block|,
block|{
literal|0x2174
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x2165
block|,
block|{
literal|0x2175
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x2166
block|,
block|{
literal|0x2176
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x2167
block|,
block|{
literal|0x2177
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x2168
block|,
block|{
literal|0x2178
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x2169
block|,
block|{
literal|0x2179
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x216A
block|,
block|{
literal|0x217A
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x216B
block|,
block|{
literal|0x217B
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x216C
block|,
block|{
literal|0x217C
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x216D
block|,
block|{
literal|0x217D
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x216E
block|,
block|{
literal|0x217E
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x216F
block|,
block|{
literal|0x217F
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x24B6
block|,
block|{
literal|0x24D0
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x24B7
block|,
block|{
literal|0x24D1
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x24B8
block|,
block|{
literal|0x24D2
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x24B9
block|,
block|{
literal|0x24D3
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x24BA
block|,
block|{
literal|0x24D4
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x24BB
block|,
block|{
literal|0x24D5
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x24BC
block|,
block|{
literal|0x24D6
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x24BD
block|,
block|{
literal|0x24D7
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x24BE
block|,
block|{
literal|0x24D8
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x24BF
block|,
block|{
literal|0x24D9
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x24C0
block|,
block|{
literal|0x24DA
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x24C1
block|,
block|{
literal|0x24DB
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x24C2
block|,
block|{
literal|0x24DC
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x24C3
block|,
block|{
literal|0x24DD
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x24C4
block|,
block|{
literal|0x24DE
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x24C5
block|,
block|{
literal|0x24DF
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x24C6
block|,
block|{
literal|0x24E0
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x24C7
block|,
block|{
literal|0x24E1
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x24C8
block|,
block|{
literal|0x24E2
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x24C9
block|,
block|{
literal|0x24E3
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x24CA
block|,
block|{
literal|0x24E4
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x24CB
block|,
block|{
literal|0x24E5
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x24CC
block|,
block|{
literal|0x24E6
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x24CD
block|,
block|{
literal|0x24E7
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x24CE
block|,
block|{
literal|0x24E8
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x24CF
block|,
block|{
literal|0x24E9
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x3371
block|,
block|{
literal|0x0068
block|,
literal|0x0070
block|,
literal|0x0061
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x3373
block|,
block|{
literal|0x0061
block|,
literal|0x0075
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x3375
block|,
block|{
literal|0x006F
block|,
literal|0x0076
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x3380
block|,
block|{
literal|0x0070
block|,
literal|0x0061
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x3381
block|,
block|{
literal|0x006E
block|,
literal|0x0061
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x3382
block|,
block|{
literal|0x03BC
block|,
literal|0x0061
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x3383
block|,
block|{
literal|0x006D
block|,
literal|0x0061
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x3384
block|,
block|{
literal|0x006B
block|,
literal|0x0061
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x3385
block|,
block|{
literal|0x006B
block|,
literal|0x0062
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x3386
block|,
block|{
literal|0x006D
block|,
literal|0x0062
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x3387
block|,
block|{
literal|0x0067
block|,
literal|0x0062
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x338A
block|,
block|{
literal|0x0070
block|,
literal|0x0066
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x338B
block|,
block|{
literal|0x006E
block|,
literal|0x0066
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x338C
block|,
block|{
literal|0x03BC
block|,
literal|0x0066
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x3390
block|,
block|{
literal|0x0068
block|,
literal|0x007A
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x3391
block|,
block|{
literal|0x006B
block|,
literal|0x0068
block|,
literal|0x007A
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x3392
block|,
block|{
literal|0x006D
block|,
literal|0x0068
block|,
literal|0x007A
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x3393
block|,
block|{
literal|0x0067
block|,
literal|0x0068
block|,
literal|0x007A
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x3394
block|,
block|{
literal|0x0074
block|,
literal|0x0068
block|,
literal|0x007A
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x33A9
block|,
block|{
literal|0x0070
block|,
literal|0x0061
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x33AA
block|,
block|{
literal|0x006B
block|,
literal|0x0070
block|,
literal|0x0061
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x33AB
block|,
block|{
literal|0x006D
block|,
literal|0x0070
block|,
literal|0x0061
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x33AC
block|,
block|{
literal|0x0067
block|,
literal|0x0070
block|,
literal|0x0061
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x33B4
block|,
block|{
literal|0x0070
block|,
literal|0x0076
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x33B5
block|,
block|{
literal|0x006E
block|,
literal|0x0076
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x33B6
block|,
block|{
literal|0x03BC
block|,
literal|0x0076
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x33B7
block|,
block|{
literal|0x006D
block|,
literal|0x0076
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x33B8
block|,
block|{
literal|0x006B
block|,
literal|0x0076
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x33B9
block|,
block|{
literal|0x006D
block|,
literal|0x0076
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x33BA
block|,
block|{
literal|0x0070
block|,
literal|0x0077
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x33BB
block|,
block|{
literal|0x006E
block|,
literal|0x0077
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x33BC
block|,
block|{
literal|0x03BC
block|,
literal|0x0077
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x33BD
block|,
block|{
literal|0x006D
block|,
literal|0x0077
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x33BE
block|,
block|{
literal|0x006B
block|,
literal|0x0077
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x33BF
block|,
block|{
literal|0x006D
block|,
literal|0x0077
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x33C0
block|,
block|{
literal|0x006B
block|,
literal|0x03C9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x33C1
block|,
block|{
literal|0x006D
block|,
literal|0x03C9
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x33C3
block|,
block|{
literal|0x0062
block|,
literal|0x0071
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x33C6
block|,
block|{
literal|0x0063
block|,
literal|0x2215
block|,
literal|0x006B
block|,
literal|0x0067
block|}
block|}
block|,
block|{
literal|0x33C7
block|,
block|{
literal|0x0063
block|,
literal|0x006F
block|,
literal|0x002E
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x33C8
block|,
block|{
literal|0x0064
block|,
literal|0x0062
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x33C9
block|,
block|{
literal|0x0067
block|,
literal|0x0079
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x33CB
block|,
block|{
literal|0x0068
block|,
literal|0x0070
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x33CD
block|,
block|{
literal|0x006B
block|,
literal|0x006B
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x33CE
block|,
block|{
literal|0x006B
block|,
literal|0x006D
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x33D7
block|,
block|{
literal|0x0070
block|,
literal|0x0068
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x33D9
block|,
block|{
literal|0x0070
block|,
literal|0x0070
block|,
literal|0x006D
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x33DA
block|,
block|{
literal|0x0070
block|,
literal|0x0072
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x33DC
block|,
block|{
literal|0x0073
block|,
literal|0x0076
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x33DD
block|,
block|{
literal|0x0077
block|,
literal|0x0062
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0xFB00
block|,
block|{
literal|0x0066
block|,
literal|0x0066
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0xFB01
block|,
block|{
literal|0x0066
block|,
literal|0x0069
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0xFB02
block|,
block|{
literal|0x0066
block|,
literal|0x006C
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0xFB03
block|,
block|{
literal|0x0066
block|,
literal|0x0066
block|,
literal|0x0069
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0xFB04
block|,
block|{
literal|0x0066
block|,
literal|0x0066
block|,
literal|0x006C
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0xFB05
block|,
block|{
literal|0x0073
block|,
literal|0x0074
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0xFB06
block|,
block|{
literal|0x0073
block|,
literal|0x0074
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0xFB13
block|,
block|{
literal|0x0574
block|,
literal|0x0576
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0xFB14
block|,
block|{
literal|0x0574
block|,
literal|0x0565
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0xFB15
block|,
block|{
literal|0x0574
block|,
literal|0x056B
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0xFB16
block|,
block|{
literal|0x057E
block|,
literal|0x0576
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0xFB17
block|,
block|{
literal|0x0574
block|,
literal|0x056D
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0xFF21
block|,
block|{
literal|0xFF41
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0xFF22
block|,
block|{
literal|0xFF42
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0xFF23
block|,
block|{
literal|0xFF43
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0xFF24
block|,
block|{
literal|0xFF44
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0xFF25
block|,
block|{
literal|0xFF45
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0xFF26
block|,
block|{
literal|0xFF46
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0xFF27
block|,
block|{
literal|0xFF47
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0xFF28
block|,
block|{
literal|0xFF48
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0xFF29
block|,
block|{
literal|0xFF49
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0xFF2A
block|,
block|{
literal|0xFF4A
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0xFF2B
block|,
block|{
literal|0xFF4B
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0xFF2C
block|,
block|{
literal|0xFF4C
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0xFF2D
block|,
block|{
literal|0xFF4D
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0xFF2E
block|,
block|{
literal|0xFF4E
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0xFF2F
block|,
block|{
literal|0xFF4F
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0xFF30
block|,
block|{
literal|0xFF50
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0xFF31
block|,
block|{
literal|0xFF51
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0xFF32
block|,
block|{
literal|0xFF52
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0xFF33
block|,
block|{
literal|0xFF53
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0xFF34
block|,
block|{
literal|0xFF54
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0xFF35
block|,
block|{
literal|0xFF55
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0xFF36
block|,
block|{
literal|0xFF56
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0xFF37
block|,
block|{
literal|0xFF57
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0xFF38
block|,
block|{
literal|0xFF58
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0xFF39
block|,
block|{
literal|0xFF59
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0xFF3A
block|,
block|{
literal|0xFF5A
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x10400
block|,
block|{
literal|0xd801
block|,
literal|0xdc28
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x10401
block|,
block|{
literal|0xd801
block|,
literal|0xdc29
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x10402
block|,
block|{
literal|0xd801
block|,
literal|0xdc2A
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x10403
block|,
block|{
literal|0xd801
block|,
literal|0xdc2B
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x10404
block|,
block|{
literal|0xd801
block|,
literal|0xdc2C
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x10405
block|,
block|{
literal|0xd801
block|,
literal|0xdc2D
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x10406
block|,
block|{
literal|0xd801
block|,
literal|0xdc2E
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x10407
block|,
block|{
literal|0xd801
block|,
literal|0xdc2F
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x10408
block|,
block|{
literal|0xd801
block|,
literal|0xdc30
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x10409
block|,
block|{
literal|0xd801
block|,
literal|0xdc31
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1040A
block|,
block|{
literal|0xd801
block|,
literal|0xdc32
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1040B
block|,
block|{
literal|0xd801
block|,
literal|0xdc33
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1040C
block|,
block|{
literal|0xd801
block|,
literal|0xdc34
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1040D
block|,
block|{
literal|0xd801
block|,
literal|0xdc35
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1040E
block|,
block|{
literal|0xd801
block|,
literal|0xdc36
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1040F
block|,
block|{
literal|0xd801
block|,
literal|0xdc37
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x10410
block|,
block|{
literal|0xd801
block|,
literal|0xdc38
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x10411
block|,
block|{
literal|0xd801
block|,
literal|0xdc39
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x10412
block|,
block|{
literal|0xd801
block|,
literal|0xdc3A
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x10413
block|,
block|{
literal|0xd801
block|,
literal|0xdc3B
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x10414
block|,
block|{
literal|0xd801
block|,
literal|0xdc3C
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x10415
block|,
block|{
literal|0xd801
block|,
literal|0xdc3D
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x10416
block|,
block|{
literal|0xd801
block|,
literal|0xdc3E
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x10417
block|,
block|{
literal|0xd801
block|,
literal|0xdc3F
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x10418
block|,
block|{
literal|0xd801
block|,
literal|0xdc40
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x10419
block|,
block|{
literal|0xd801
block|,
literal|0xdc41
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1041A
block|,
block|{
literal|0xd801
block|,
literal|0xdc42
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1041B
block|,
block|{
literal|0xd801
block|,
literal|0xdc43
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1041C
block|,
block|{
literal|0xd801
block|,
literal|0xdc44
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1041D
block|,
block|{
literal|0xd801
block|,
literal|0xdc45
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1041E
block|,
block|{
literal|0xd801
block|,
literal|0xdc46
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1041F
block|,
block|{
literal|0xd801
block|,
literal|0xdc47
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x10420
block|,
block|{
literal|0xd801
block|,
literal|0xdc48
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x10421
block|,
block|{
literal|0xd801
block|,
literal|0xdc49
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x10422
block|,
block|{
literal|0xd801
block|,
literal|0xdc4A
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x10423
block|,
block|{
literal|0xd801
block|,
literal|0xdc4B
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x10424
block|,
block|{
literal|0xd801
block|,
literal|0xdc4C
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x10425
block|,
block|{
literal|0xd801
block|,
literal|0xdc4D
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D400
block|,
block|{
literal|0x0061
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D401
block|,
block|{
literal|0x0062
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D402
block|,
block|{
literal|0x0063
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D403
block|,
block|{
literal|0x0064
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D404
block|,
block|{
literal|0x0065
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D405
block|,
block|{
literal|0x0066
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D406
block|,
block|{
literal|0x0067
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D407
block|,
block|{
literal|0x0068
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D408
block|,
block|{
literal|0x0069
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D409
block|,
block|{
literal|0x006A
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D40A
block|,
block|{
literal|0x006B
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D40B
block|,
block|{
literal|0x006C
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D40C
block|,
block|{
literal|0x006D
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D40D
block|,
block|{
literal|0x006E
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D40E
block|,
block|{
literal|0x006F
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D40F
block|,
block|{
literal|0x0070
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D410
block|,
block|{
literal|0x0071
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D411
block|,
block|{
literal|0x0072
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D412
block|,
block|{
literal|0x0073
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D413
block|,
block|{
literal|0x0074
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D414
block|,
block|{
literal|0x0075
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D415
block|,
block|{
literal|0x0076
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D416
block|,
block|{
literal|0x0077
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D417
block|,
block|{
literal|0x0078
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D418
block|,
block|{
literal|0x0079
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D419
block|,
block|{
literal|0x007A
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D434
block|,
block|{
literal|0x0061
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D435
block|,
block|{
literal|0x0062
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D436
block|,
block|{
literal|0x0063
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D437
block|,
block|{
literal|0x0064
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D438
block|,
block|{
literal|0x0065
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D439
block|,
block|{
literal|0x0066
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D43A
block|,
block|{
literal|0x0067
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D43B
block|,
block|{
literal|0x0068
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D43C
block|,
block|{
literal|0x0069
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D43D
block|,
block|{
literal|0x006A
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D43E
block|,
block|{
literal|0x006B
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D43F
block|,
block|{
literal|0x006C
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D440
block|,
block|{
literal|0x006D
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D441
block|,
block|{
literal|0x006E
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D442
block|,
block|{
literal|0x006F
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D443
block|,
block|{
literal|0x0070
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D444
block|,
block|{
literal|0x0071
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D445
block|,
block|{
literal|0x0072
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D446
block|,
block|{
literal|0x0073
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D447
block|,
block|{
literal|0x0074
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D448
block|,
block|{
literal|0x0075
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D449
block|,
block|{
literal|0x0076
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D44A
block|,
block|{
literal|0x0077
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D44B
block|,
block|{
literal|0x0078
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D44C
block|,
block|{
literal|0x0079
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D44D
block|,
block|{
literal|0x007A
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D468
block|,
block|{
literal|0x0061
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D469
block|,
block|{
literal|0x0062
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D46A
block|,
block|{
literal|0x0063
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D46B
block|,
block|{
literal|0x0064
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D46C
block|,
block|{
literal|0x0065
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D46D
block|,
block|{
literal|0x0066
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D46E
block|,
block|{
literal|0x0067
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D46F
block|,
block|{
literal|0x0068
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D470
block|,
block|{
literal|0x0069
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D471
block|,
block|{
literal|0x006A
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D472
block|,
block|{
literal|0x006B
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D473
block|,
block|{
literal|0x006C
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D474
block|,
block|{
literal|0x006D
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D475
block|,
block|{
literal|0x006E
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D476
block|,
block|{
literal|0x006F
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D477
block|,
block|{
literal|0x0070
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D478
block|,
block|{
literal|0x0071
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D479
block|,
block|{
literal|0x0072
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D47A
block|,
block|{
literal|0x0073
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D47B
block|,
block|{
literal|0x0074
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D47C
block|,
block|{
literal|0x0075
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D47D
block|,
block|{
literal|0x0076
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D47E
block|,
block|{
literal|0x0077
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D47F
block|,
block|{
literal|0x0078
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D480
block|,
block|{
literal|0x0079
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D481
block|,
block|{
literal|0x007A
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D49C
block|,
block|{
literal|0x0061
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D49E
block|,
block|{
literal|0x0063
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D49F
block|,
block|{
literal|0x0064
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D4A2
block|,
block|{
literal|0x0067
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D4A5
block|,
block|{
literal|0x006A
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D4A6
block|,
block|{
literal|0x006B
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D4A9
block|,
block|{
literal|0x006E
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D4AA
block|,
block|{
literal|0x006F
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D4AB
block|,
block|{
literal|0x0070
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D4AC
block|,
block|{
literal|0x0071
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D4AE
block|,
block|{
literal|0x0073
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D4AF
block|,
block|{
literal|0x0074
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D4B0
block|,
block|{
literal|0x0075
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D4B1
block|,
block|{
literal|0x0076
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D4B2
block|,
block|{
literal|0x0077
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D4B3
block|,
block|{
literal|0x0078
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D4B4
block|,
block|{
literal|0x0079
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D4B5
block|,
block|{
literal|0x007A
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D4D0
block|,
block|{
literal|0x0061
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D4D1
block|,
block|{
literal|0x0062
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D4D2
block|,
block|{
literal|0x0063
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D4D3
block|,
block|{
literal|0x0064
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D4D4
block|,
block|{
literal|0x0065
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D4D5
block|,
block|{
literal|0x0066
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D4D6
block|,
block|{
literal|0x0067
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D4D7
block|,
block|{
literal|0x0068
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D4D8
block|,
block|{
literal|0x0069
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D4D9
block|,
block|{
literal|0x006A
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D4DA
block|,
block|{
literal|0x006B
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D4DB
block|,
block|{
literal|0x006C
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D4DC
block|,
block|{
literal|0x006D
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D4DD
block|,
block|{
literal|0x006E
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D4DE
block|,
block|{
literal|0x006F
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D4DF
block|,
block|{
literal|0x0070
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D4E0
block|,
block|{
literal|0x0071
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D4E1
block|,
block|{
literal|0x0072
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D4E2
block|,
block|{
literal|0x0073
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D4E3
block|,
block|{
literal|0x0074
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D4E4
block|,
block|{
literal|0x0075
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D4E5
block|,
block|{
literal|0x0076
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D4E6
block|,
block|{
literal|0x0077
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D4E7
block|,
block|{
literal|0x0078
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D4E8
block|,
block|{
literal|0x0079
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D4E9
block|,
block|{
literal|0x007A
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D504
block|,
block|{
literal|0x0061
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D505
block|,
block|{
literal|0x0062
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D507
block|,
block|{
literal|0x0064
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D508
block|,
block|{
literal|0x0065
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D509
block|,
block|{
literal|0x0066
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D50A
block|,
block|{
literal|0x0067
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D50D
block|,
block|{
literal|0x006A
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D50E
block|,
block|{
literal|0x006B
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D50F
block|,
block|{
literal|0x006C
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D510
block|,
block|{
literal|0x006D
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D511
block|,
block|{
literal|0x006E
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D512
block|,
block|{
literal|0x006F
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D513
block|,
block|{
literal|0x0070
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D514
block|,
block|{
literal|0x0071
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D516
block|,
block|{
literal|0x0073
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D517
block|,
block|{
literal|0x0074
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D518
block|,
block|{
literal|0x0075
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D519
block|,
block|{
literal|0x0076
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D51A
block|,
block|{
literal|0x0077
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D51B
block|,
block|{
literal|0x0078
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D51C
block|,
block|{
literal|0x0079
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D538
block|,
block|{
literal|0x0061
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D539
block|,
block|{
literal|0x0062
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D53B
block|,
block|{
literal|0x0064
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D53C
block|,
block|{
literal|0x0065
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D53D
block|,
block|{
literal|0x0066
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D53E
block|,
block|{
literal|0x0067
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D540
block|,
block|{
literal|0x0069
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D541
block|,
block|{
literal|0x006A
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D542
block|,
block|{
literal|0x006B
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D543
block|,
block|{
literal|0x006C
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D544
block|,
block|{
literal|0x006D
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D546
block|,
block|{
literal|0x006F
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D54A
block|,
block|{
literal|0x0073
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D54B
block|,
block|{
literal|0x0074
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D54C
block|,
block|{
literal|0x0075
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D54D
block|,
block|{
literal|0x0076
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D54E
block|,
block|{
literal|0x0077
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D54F
block|,
block|{
literal|0x0078
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D550
block|,
block|{
literal|0x0079
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D56C
block|,
block|{
literal|0x0061
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D56D
block|,
block|{
literal|0x0062
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D56E
block|,
block|{
literal|0x0063
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D56F
block|,
block|{
literal|0x0064
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D570
block|,
block|{
literal|0x0065
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D571
block|,
block|{
literal|0x0066
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D572
block|,
block|{
literal|0x0067
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D573
block|,
block|{
literal|0x0068
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D574
block|,
block|{
literal|0x0069
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D575
block|,
block|{
literal|0x006A
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D576
block|,
block|{
literal|0x006B
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D577
block|,
block|{
literal|0x006C
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D578
block|,
block|{
literal|0x006D
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D579
block|,
block|{
literal|0x006E
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D57A
block|,
block|{
literal|0x006F
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D57B
block|,
block|{
literal|0x0070
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D57C
block|,
block|{
literal|0x0071
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D57D
block|,
block|{
literal|0x0072
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D57E
block|,
block|{
literal|0x0073
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D57F
block|,
block|{
literal|0x0074
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D580
block|,
block|{
literal|0x0075
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D581
block|,
block|{
literal|0x0076
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D582
block|,
block|{
literal|0x0077
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D583
block|,
block|{
literal|0x0078
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D584
block|,
block|{
literal|0x0079
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D585
block|,
block|{
literal|0x007A
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D5A0
block|,
block|{
literal|0x0061
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D5A1
block|,
block|{
literal|0x0062
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D5A2
block|,
block|{
literal|0x0063
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D5A3
block|,
block|{
literal|0x0064
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D5A4
block|,
block|{
literal|0x0065
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D5A5
block|,
block|{
literal|0x0066
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D5A6
block|,
block|{
literal|0x0067
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D5A7
block|,
block|{
literal|0x0068
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D5A8
block|,
block|{
literal|0x0069
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D5A9
block|,
block|{
literal|0x006A
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D5AA
block|,
block|{
literal|0x006B
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D5AB
block|,
block|{
literal|0x006C
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D5AC
block|,
block|{
literal|0x006D
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D5AD
block|,
block|{
literal|0x006E
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D5AE
block|,
block|{
literal|0x006F
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D5AF
block|,
block|{
literal|0x0070
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D5B0
block|,
block|{
literal|0x0071
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D5B1
block|,
block|{
literal|0x0072
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D5B2
block|,
block|{
literal|0x0073
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D5B3
block|,
block|{
literal|0x0074
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D5B4
block|,
block|{
literal|0x0075
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D5B5
block|,
block|{
literal|0x0076
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D5B6
block|,
block|{
literal|0x0077
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D5B7
block|,
block|{
literal|0x0078
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D5B8
block|,
block|{
literal|0x0079
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D5B9
block|,
block|{
literal|0x007A
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D5D4
block|,
block|{
literal|0x0061
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D5D5
block|,
block|{
literal|0x0062
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D5D6
block|,
block|{
literal|0x0063
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D5D7
block|,
block|{
literal|0x0064
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D5D8
block|,
block|{
literal|0x0065
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D5D9
block|,
block|{
literal|0x0066
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D5DA
block|,
block|{
literal|0x0067
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D5DB
block|,
block|{
literal|0x0068
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D5DC
block|,
block|{
literal|0x0069
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D5DD
block|,
block|{
literal|0x006A
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D5DE
block|,
block|{
literal|0x006B
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D5DF
block|,
block|{
literal|0x006C
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D5E0
block|,
block|{
literal|0x006D
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D5E1
block|,
block|{
literal|0x006E
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D5E2
block|,
block|{
literal|0x006F
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D5E3
block|,
block|{
literal|0x0070
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D5E4
block|,
block|{
literal|0x0071
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D5E5
block|,
block|{
literal|0x0072
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D5E6
block|,
block|{
literal|0x0073
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D5E7
block|,
block|{
literal|0x0074
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D5E8
block|,
block|{
literal|0x0075
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D5E9
block|,
block|{
literal|0x0076
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D5EA
block|,
block|{
literal|0x0077
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D5EB
block|,
block|{
literal|0x0078
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D5EC
block|,
block|{
literal|0x0079
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D5ED
block|,
block|{
literal|0x007A
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D608
block|,
block|{
literal|0x0061
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D609
block|,
block|{
literal|0x0062
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D60A
block|,
block|{
literal|0x0063
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D60B
block|,
block|{
literal|0x0064
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D60C
block|,
block|{
literal|0x0065
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D60D
block|,
block|{
literal|0x0066
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D60E
block|,
block|{
literal|0x0067
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D60F
block|,
block|{
literal|0x0068
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D610
block|,
block|{
literal|0x0069
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D611
block|,
block|{
literal|0x006A
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D612
block|,
block|{
literal|0x006B
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D613
block|,
block|{
literal|0x006C
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D614
block|,
block|{
literal|0x006D
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D615
block|,
block|{
literal|0x006E
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D616
block|,
block|{
literal|0x006F
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D617
block|,
block|{
literal|0x0070
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D618
block|,
block|{
literal|0x0071
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D619
block|,
block|{
literal|0x0072
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D61A
block|,
block|{
literal|0x0073
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D61B
block|,
block|{
literal|0x0074
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D61C
block|,
block|{
literal|0x0075
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D61D
block|,
block|{
literal|0x0076
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D61E
block|,
block|{
literal|0x0077
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D61F
block|,
block|{
literal|0x0078
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D620
block|,
block|{
literal|0x0079
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D621
block|,
block|{
literal|0x007A
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D63C
block|,
block|{
literal|0x0061
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D63D
block|,
block|{
literal|0x0062
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D63E
block|,
block|{
literal|0x0063
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D63F
block|,
block|{
literal|0x0064
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D640
block|,
block|{
literal|0x0065
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D641
block|,
block|{
literal|0x0066
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D642
block|,
block|{
literal|0x0067
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D643
block|,
block|{
literal|0x0068
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D644
block|,
block|{
literal|0x0069
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D645
block|,
block|{
literal|0x006A
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D646
block|,
block|{
literal|0x006B
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D647
block|,
block|{
literal|0x006C
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D648
block|,
block|{
literal|0x006D
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D649
block|,
block|{
literal|0x006E
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D64A
block|,
block|{
literal|0x006F
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D64B
block|,
block|{
literal|0x0070
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D64C
block|,
block|{
literal|0x0071
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D64D
block|,
block|{
literal|0x0072
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D64E
block|,
block|{
literal|0x0073
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D64F
block|,
block|{
literal|0x0074
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D650
block|,
block|{
literal|0x0075
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D651
block|,
block|{
literal|0x0076
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D652
block|,
block|{
literal|0x0077
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D653
block|,
block|{
literal|0x0078
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D654
block|,
block|{
literal|0x0079
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D655
block|,
block|{
literal|0x007A
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D670
block|,
block|{
literal|0x0061
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D671
block|,
block|{
literal|0x0062
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D672
block|,
block|{
literal|0x0063
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D673
block|,
block|{
literal|0x0064
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D674
block|,
block|{
literal|0x0065
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D675
block|,
block|{
literal|0x0066
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D676
block|,
block|{
literal|0x0067
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D677
block|,
block|{
literal|0x0068
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D678
block|,
block|{
literal|0x0069
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D679
block|,
block|{
literal|0x006A
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D67A
block|,
block|{
literal|0x006B
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D67B
block|,
block|{
literal|0x006C
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D67C
block|,
block|{
literal|0x006D
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D67D
block|,
block|{
literal|0x006E
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D67E
block|,
block|{
literal|0x006F
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D67F
block|,
block|{
literal|0x0070
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D680
block|,
block|{
literal|0x0071
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D681
block|,
block|{
literal|0x0072
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D682
block|,
block|{
literal|0x0073
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D683
block|,
block|{
literal|0x0074
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D684
block|,
block|{
literal|0x0075
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D685
block|,
block|{
literal|0x0076
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D686
block|,
block|{
literal|0x0077
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D687
block|,
block|{
literal|0x0078
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D688
block|,
block|{
literal|0x0079
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D689
block|,
block|{
literal|0x007A
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D6A8
block|,
block|{
literal|0x03B1
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D6A9
block|,
block|{
literal|0x03B2
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D6AA
block|,
block|{
literal|0x03B3
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D6AB
block|,
block|{
literal|0x03B4
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D6AC
block|,
block|{
literal|0x03B5
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D6AD
block|,
block|{
literal|0x03B6
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D6AE
block|,
block|{
literal|0x03B7
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D6AF
block|,
block|{
literal|0x03B8
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D6B0
block|,
block|{
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D6B1
block|,
block|{
literal|0x03BA
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D6B2
block|,
block|{
literal|0x03BB
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D6B3
block|,
block|{
literal|0x03BC
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D6B4
block|,
block|{
literal|0x03BD
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D6B5
block|,
block|{
literal|0x03BE
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D6B6
block|,
block|{
literal|0x03BF
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D6B7
block|,
block|{
literal|0x03C0
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D6B8
block|,
block|{
literal|0x03C1
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D6B9
block|,
block|{
literal|0x03B8
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D6BA
block|,
block|{
literal|0x03C3
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D6BB
block|,
block|{
literal|0x03C4
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D6BC
block|,
block|{
literal|0x03C5
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D6BD
block|,
block|{
literal|0x03C6
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D6BE
block|,
block|{
literal|0x03C7
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D6BF
block|,
block|{
literal|0x03C8
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D6C0
block|,
block|{
literal|0x03C9
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D6D3
block|,
block|{
literal|0x03C3
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D6E2
block|,
block|{
literal|0x03B1
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D6E3
block|,
block|{
literal|0x03B2
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D6E4
block|,
block|{
literal|0x03B3
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D6E5
block|,
block|{
literal|0x03B4
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D6E6
block|,
block|{
literal|0x03B5
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D6E7
block|,
block|{
literal|0x03B6
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D6E8
block|,
block|{
literal|0x03B7
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D6E9
block|,
block|{
literal|0x03B8
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D6EA
block|,
block|{
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D6EB
block|,
block|{
literal|0x03BA
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D6EC
block|,
block|{
literal|0x03BB
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D6ED
block|,
block|{
literal|0x03BC
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D6EE
block|,
block|{
literal|0x03BD
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D6EF
block|,
block|{
literal|0x03BE
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D6F0
block|,
block|{
literal|0x03BF
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D6F1
block|,
block|{
literal|0x03C0
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D6F2
block|,
block|{
literal|0x03C1
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D6F3
block|,
block|{
literal|0x03B8
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D6F4
block|,
block|{
literal|0x03C3
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D6F5
block|,
block|{
literal|0x03C4
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D6F6
block|,
block|{
literal|0x03C5
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D6F7
block|,
block|{
literal|0x03C6
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D6F8
block|,
block|{
literal|0x03C7
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D6F9
block|,
block|{
literal|0x03C8
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D6FA
block|,
block|{
literal|0x03C9
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D70D
block|,
block|{
literal|0x03C3
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D71C
block|,
block|{
literal|0x03B1
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D71D
block|,
block|{
literal|0x03B2
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D71E
block|,
block|{
literal|0x03B3
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D71F
block|,
block|{
literal|0x03B4
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D720
block|,
block|{
literal|0x03B5
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D721
block|,
block|{
literal|0x03B6
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D722
block|,
block|{
literal|0x03B7
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D723
block|,
block|{
literal|0x03B8
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D724
block|,
block|{
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D725
block|,
block|{
literal|0x03BA
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D726
block|,
block|{
literal|0x03BB
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D727
block|,
block|{
literal|0x03BC
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D728
block|,
block|{
literal|0x03BD
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D729
block|,
block|{
literal|0x03BE
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D72A
block|,
block|{
literal|0x03BF
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D72B
block|,
block|{
literal|0x03C0
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D72C
block|,
block|{
literal|0x03C1
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D72D
block|,
block|{
literal|0x03B8
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D72E
block|,
block|{
literal|0x03C3
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D72F
block|,
block|{
literal|0x03C4
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D730
block|,
block|{
literal|0x03C5
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D731
block|,
block|{
literal|0x03C6
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D732
block|,
block|{
literal|0x03C7
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D733
block|,
block|{
literal|0x03C8
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D734
block|,
block|{
literal|0x03C9
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D747
block|,
block|{
literal|0x03C3
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D756
block|,
block|{
literal|0x03B1
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D757
block|,
block|{
literal|0x03B2
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D758
block|,
block|{
literal|0x03B3
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D759
block|,
block|{
literal|0x03B4
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D75A
block|,
block|{
literal|0x03B5
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D75B
block|,
block|{
literal|0x03B6
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D75C
block|,
block|{
literal|0x03B7
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D75D
block|,
block|{
literal|0x03B8
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D75E
block|,
block|{
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D75F
block|,
block|{
literal|0x03BA
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D760
block|,
block|{
literal|0x03BB
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D761
block|,
block|{
literal|0x03BC
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D762
block|,
block|{
literal|0x03BD
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D763
block|,
block|{
literal|0x03BE
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D764
block|,
block|{
literal|0x03BF
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D765
block|,
block|{
literal|0x03C0
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D766
block|,
block|{
literal|0x03C1
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D767
block|,
block|{
literal|0x03B8
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D768
block|,
block|{
literal|0x03C3
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D769
block|,
block|{
literal|0x03C4
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D76A
block|,
block|{
literal|0x03C5
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D76B
block|,
block|{
literal|0x03C6
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D76C
block|,
block|{
literal|0x03C7
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D76D
block|,
block|{
literal|0x03C8
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D76E
block|,
block|{
literal|0x03C9
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D781
block|,
block|{
literal|0x03C3
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D790
block|,
block|{
literal|0x03B1
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D791
block|,
block|{
literal|0x03B2
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D792
block|,
block|{
literal|0x03B3
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D793
block|,
block|{
literal|0x03B4
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D794
block|,
block|{
literal|0x03B5
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D795
block|,
block|{
literal|0x03B6
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D796
block|,
block|{
literal|0x03B7
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D797
block|,
block|{
literal|0x03B8
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D798
block|,
block|{
literal|0x03B9
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D799
block|,
block|{
literal|0x03BA
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D79A
block|,
block|{
literal|0x03BB
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D79B
block|,
block|{
literal|0x03BC
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D79C
block|,
block|{
literal|0x03BD
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D79D
block|,
block|{
literal|0x03BE
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D79E
block|,
block|{
literal|0x03BF
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D79F
block|,
block|{
literal|0x03C0
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D7A0
block|,
block|{
literal|0x03C1
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D7A1
block|,
block|{
literal|0x03B8
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D7A2
block|,
block|{
literal|0x03C3
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D7A3
block|,
block|{
literal|0x03C4
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D7A4
block|,
block|{
literal|0x03C5
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D7A5
block|,
block|{
literal|0x03C6
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D7A6
block|,
block|{
literal|0x03C7
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D7A7
block|,
block|{
literal|0x03C8
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D7A8
block|,
block|{
literal|0x03C9
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|,
block|{
literal|0x1D7BB
block|,
block|{
literal|0x03C3
block|,
literal|0x0000
block|,
literal|0x0000
block|,
literal|0x0000
block|}
block|}
block|}
decl_stmt|;
end_decl_stmt
begin_function
DECL|function|mapToLowerCase
specifier|static
name|void
name|mapToLowerCase
parameter_list|(
name|QString
modifier|*
name|str
parameter_list|,
name|int
name|from
parameter_list|)
block|{
name|int
name|N
init|=
sizeof|sizeof
argument_list|(
name|NameprepCaseFolding
argument_list|)
operator|/
sizeof|sizeof
argument_list|(
name|NameprepCaseFolding
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|ushort
modifier|*
name|d
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
name|from
init|;
name|i
operator|<
name|str
operator|->
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|uint
name|uc
init|=
name|str
operator|->
name|at
argument_list|(
name|i
argument_list|)
operator|.
name|unicode
argument_list|()
decl_stmt|;
if|if
condition|(
name|uc
operator|<
literal|0x80
condition|)
block|{
if|if
condition|(
name|uc
operator|<=
literal|'Z'
operator|&&
name|uc
operator|>=
literal|'A'
condition|)
block|{
if|if
condition|(
operator|!
name|d
condition|)
name|d
operator|=
cast|reinterpret_cast
argument_list|<
name|ushort
operator|*
argument_list|>
argument_list|(
name|str
operator|->
name|data
argument_list|()
argument_list|)
expr_stmt|;
name|d
index|[
name|i
index|]
operator|=
operator|(
name|uc
operator||
literal|0x20
operator|)
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
name|QChar
argument_list|(
name|uc
argument_list|)
operator|.
name|isHighSurrogate
argument_list|()
operator|&&
name|i
operator|<
name|str
operator|->
name|size
argument_list|()
operator|-
literal|1
condition|)
block|{
name|ushort
name|low
init|=
name|str
operator|->
name|at
argument_list|(
name|i
operator|+
literal|1
argument_list|)
operator|.
name|unicode
argument_list|()
decl_stmt|;
if|if
condition|(
name|QChar
argument_list|(
name|low
argument_list|)
operator|.
name|isLowSurrogate
argument_list|()
condition|)
block|{
name|uc
operator|=
name|QChar
operator|::
name|surrogateToUcs4
argument_list|(
name|uc
argument_list|,
name|low
argument_list|)
expr_stmt|;
operator|++
name|i
expr_stmt|;
block|}
block|}
specifier|const
name|NameprepCaseFoldingEntry
modifier|*
name|entry
init|=
name|qBinaryFind
argument_list|(
name|NameprepCaseFolding
argument_list|,
name|NameprepCaseFolding
operator|+
name|N
argument_list|,
name|uc
argument_list|)
decl_stmt|;
if|if
condition|(
operator|(
name|entry
operator|-
name|NameprepCaseFolding
operator|)
operator|!=
name|N
condition|)
block|{
name|int
name|l
init|=
literal|1
decl_stmt|;
while|while
condition|(
name|l
operator|<
literal|4
operator|&&
name|entry
operator|->
name|mapping
index|[
name|l
index|]
condition|)
operator|++
name|l
expr_stmt|;
if|if
condition|(
name|l
operator|>
literal|1
operator|||
name|uc
operator|>
literal|0xffff
condition|)
block|{
if|if
condition|(
name|uc
operator|<=
literal|0xffff
condition|)
name|str
operator|->
name|replace
argument_list|(
name|i
argument_list|,
literal|1
argument_list|,
cast|reinterpret_cast
argument_list|<
specifier|const
name|QChar
operator|*
argument_list|>
argument_list|(
operator|&
name|entry
operator|->
name|mapping
index|[
literal|0
index|]
argument_list|)
argument_list|,
name|l
argument_list|)
expr_stmt|;
else|else
name|str
operator|->
name|replace
argument_list|(
operator|--
name|i
argument_list|,
literal|2
argument_list|,
cast|reinterpret_cast
argument_list|<
specifier|const
name|QChar
operator|*
argument_list|>
argument_list|(
operator|&
name|entry
operator|->
name|mapping
index|[
literal|0
index|]
argument_list|)
argument_list|,
name|l
argument_list|)
expr_stmt|;
name|i
operator|+=
name|l
operator|-
literal|1
expr_stmt|;
name|d
operator|=
literal|0
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
operator|!
name|d
condition|)
name|d
operator|=
cast|reinterpret_cast
argument_list|<
name|ushort
operator|*
argument_list|>
argument_list|(
name|str
operator|->
name|data
argument_list|()
argument_list|)
expr_stmt|;
name|d
index|[
name|i
index|]
operator|=
name|entry
operator|->
name|mapping
index|[
literal|0
index|]
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
end_function
begin_function
DECL|function|isMappedToNothing
specifier|static
name|bool
name|isMappedToNothing
parameter_list|(
name|uint
name|uc
parameter_list|)
block|{
if|if
condition|(
name|uc
operator|<
literal|0xad
condition|)
return|return
literal|false
return|;
switch|switch
condition|(
name|uc
condition|)
block|{
case|case
literal|0x00AD
case|:
case|case
literal|0x034F
case|:
case|case
literal|0x1806
case|:
case|case
literal|0x180B
case|:
case|case
literal|0x180C
case|:
case|case
literal|0x180D
case|:
case|case
literal|0x200B
case|:
case|case
literal|0x200C
case|:
case|case
literal|0x200D
case|:
case|case
literal|0x2060
case|:
case|case
literal|0xFE00
case|:
case|case
literal|0xFE01
case|:
case|case
literal|0xFE02
case|:
case|case
literal|0xFE03
case|:
case|case
literal|0xFE04
case|:
case|case
literal|0xFE05
case|:
case|case
literal|0xFE06
case|:
case|case
literal|0xFE07
case|:
case|case
literal|0xFE08
case|:
case|case
literal|0xFE09
case|:
case|case
literal|0xFE0A
case|:
case|case
literal|0xFE0B
case|:
case|case
literal|0xFE0C
case|:
case|case
literal|0xFE0D
case|:
case|case
literal|0xFE0E
case|:
case|case
literal|0xFE0F
case|:
case|case
literal|0xFEFF
case|:
return|return
literal|true
return|;
default|default:
return|return
literal|false
return|;
block|}
block|}
end_function
begin_function
DECL|function|containsProhibitedOuptut
specifier|static
name|bool
name|containsProhibitedOuptut
parameter_list|(
specifier|const
name|QString
modifier|*
name|str
parameter_list|,
name|int
name|from
parameter_list|)
block|{
specifier|const
name|ushort
modifier|*
name|in
init|=
cast|reinterpret_cast
argument_list|<
specifier|const
name|ushort
operator|*
argument_list|>
argument_list|(
name|str
operator|->
name|begin
argument_list|()
operator|+
name|from
argument_list|)
decl_stmt|;
specifier|const
name|ushort
modifier|*
name|end
init|=
operator|(
name|ushort
operator|*
operator|)
name|str
operator|->
name|data
argument_list|()
operator|+
name|str
operator|->
name|size
argument_list|()
decl_stmt|;
for|for
control|(
init|;
name|in
operator|<
name|end
condition|;
operator|++
name|in
control|)
block|{
name|uint
name|uc
init|=
operator|*
name|in
decl_stmt|;
if|if
condition|(
name|QChar
argument_list|(
name|uc
argument_list|)
operator|.
name|isHighSurrogate
argument_list|()
operator|&&
name|in
operator|<
name|end
operator|-
literal|1
condition|)
block|{
name|ushort
name|low
init|=
operator|*
operator|(
name|in
operator|+
literal|1
operator|)
decl_stmt|;
if|if
condition|(
name|QChar
argument_list|(
name|low
argument_list|)
operator|.
name|isLowSurrogate
argument_list|()
condition|)
block|{
operator|++
name|in
expr_stmt|;
name|uc
operator|=
name|QChar
operator|::
name|surrogateToUcs4
argument_list|(
name|uc
argument_list|,
name|low
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// unpaired surrogates are prohibited
return|return
literal|true
return|;
block|}
block|}
if|if
condition|(
name|uc
operator|<=
literal|0xFFFF
condition|)
block|{
if|if
condition|(
name|uc
operator|<
literal|0x80
operator|||
operator|!
operator|(
name|uc
operator|<=
literal|0x009F
operator|||
name|uc
operator|==
literal|0x00A0
operator|||
name|uc
operator|==
literal|0x0340
operator|||
name|uc
operator|==
literal|0x0341
operator|||
name|uc
operator|==
literal|0x06DD
operator|||
name|uc
operator|==
literal|0x070F
operator|||
name|uc
operator|==
literal|0x1680
operator|||
name|uc
operator|==
literal|0x180E
operator|||
operator|(
name|uc
operator|>=
literal|0x2000
operator|&&
name|uc
operator|<=
literal|0x200F
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x2028
operator|&&
name|uc
operator|<=
literal|0x202F
operator|)
operator|||
name|uc
operator|==
literal|0x205F
operator|||
operator|(
name|uc
operator|>=
literal|0x2060
operator|&&
name|uc
operator|<=
literal|0x2063
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x206A
operator|&&
name|uc
operator|<=
literal|0x206F
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x2FF0
operator|&&
name|uc
operator|<=
literal|0x2FFB
operator|)
operator|||
name|uc
operator|==
literal|0x3000
operator|||
operator|(
name|uc
operator|>=
literal|0xD800
operator|&&
name|uc
operator|<=
literal|0xDFFF
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0xE000
operator|&&
name|uc
operator|<=
literal|0xF8FF
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0xFDD0
operator|&&
name|uc
operator|<=
literal|0xFDEF
operator|)
operator|||
name|uc
operator|==
literal|0xFEFF
operator|||
operator|(
name|uc
operator|>=
literal|0xFFF9
operator|&&
name|uc
operator|<=
literal|0xFFFF
operator|)
operator|)
condition|)
block|{
continue|continue;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|uc
operator|>=
literal|0x1D173
operator|&&
name|uc
operator|<=
literal|0x1D17A
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1FFFE
operator|&&
name|uc
operator|<=
literal|0x1FFFF
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x2FFFE
operator|&&
name|uc
operator|<=
literal|0x2FFFF
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x3FFFE
operator|&&
name|uc
operator|<=
literal|0x3FFFF
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x4FFFE
operator|&&
name|uc
operator|<=
literal|0x4FFFF
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x5FFFE
operator|&&
name|uc
operator|<=
literal|0x5FFFF
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x6FFFE
operator|&&
name|uc
operator|<=
literal|0x6FFFF
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x7FFFE
operator|&&
name|uc
operator|<=
literal|0x7FFFF
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x8FFFE
operator|&&
name|uc
operator|<=
literal|0x8FFFF
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x9FFFE
operator|&&
name|uc
operator|<=
literal|0x9FFFF
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0xAFFFE
operator|&&
name|uc
operator|<=
literal|0xAFFFF
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0xBFFFE
operator|&&
name|uc
operator|<=
literal|0xBFFFF
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0xCFFFE
operator|&&
name|uc
operator|<=
literal|0xCFFFF
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0xDFFFE
operator|&&
name|uc
operator|<=
literal|0xDFFFF
operator|)
operator|||
name|uc
operator|==
literal|0xE0001
operator|||
operator|(
name|uc
operator|>=
literal|0xE0020
operator|&&
name|uc
operator|<=
literal|0xE007F
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0xEFFFE
operator|&&
name|uc
operator|<=
literal|0xEFFFF
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0xF0000
operator|&&
name|uc
operator|<=
literal|0xFFFFD
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0xFFFFE
operator|&&
name|uc
operator|<=
literal|0xFFFFF
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x100000
operator|&&
name|uc
operator|<=
literal|0x10FFFD
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x10FFFE
operator|&&
name|uc
operator|<=
literal|0x10FFFF
operator|)
operator|)
condition|)
block|{
continue|continue;
block|}
block|}
return|return
literal|true
return|;
block|}
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|isBidirectionalRorAL
specifier|static
name|bool
name|isBidirectionalRorAL
parameter_list|(
name|uint
name|uc
parameter_list|)
block|{
if|if
condition|(
name|uc
operator|<
literal|0x5b0
condition|)
return|return
literal|false
return|;
return|return
name|uc
operator|==
literal|0x05BE
operator|||
name|uc
operator|==
literal|0x05C0
operator|||
name|uc
operator|==
literal|0x05C3
operator|||
operator|(
name|uc
operator|>=
literal|0x05D0
operator|&&
name|uc
operator|<=
literal|0x05EA
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x05F0
operator|&&
name|uc
operator|<=
literal|0x05F4
operator|)
operator|||
name|uc
operator|==
literal|0x061B
operator|||
name|uc
operator|==
literal|0x061F
operator|||
operator|(
name|uc
operator|>=
literal|0x0621
operator|&&
name|uc
operator|<=
literal|0x063A
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0640
operator|&&
name|uc
operator|<=
literal|0x064A
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x066D
operator|&&
name|uc
operator|<=
literal|0x066F
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0671
operator|&&
name|uc
operator|<=
literal|0x06D5
operator|)
operator|||
name|uc
operator|==
literal|0x06DD
operator|||
operator|(
name|uc
operator|>=
literal|0x06E5
operator|&&
name|uc
operator|<=
literal|0x06E6
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x06FA
operator|&&
name|uc
operator|<=
literal|0x06FE
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0700
operator|&&
name|uc
operator|<=
literal|0x070D
operator|)
operator|||
name|uc
operator|==
literal|0x0710
operator|||
operator|(
name|uc
operator|>=
literal|0x0712
operator|&&
name|uc
operator|<=
literal|0x072C
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0780
operator|&&
name|uc
operator|<=
literal|0x07A5
operator|)
operator|||
name|uc
operator|==
literal|0x07B1
operator|||
name|uc
operator|==
literal|0x200F
operator|||
name|uc
operator|==
literal|0xFB1D
operator|||
operator|(
name|uc
operator|>=
literal|0xFB1F
operator|&&
name|uc
operator|<=
literal|0xFB28
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0xFB2A
operator|&&
name|uc
operator|<=
literal|0xFB36
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0xFB38
operator|&&
name|uc
operator|<=
literal|0xFB3C
operator|)
operator|||
name|uc
operator|==
literal|0xFB3E
operator|||
operator|(
name|uc
operator|>=
literal|0xFB40
operator|&&
name|uc
operator|<=
literal|0xFB41
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0xFB43
operator|&&
name|uc
operator|<=
literal|0xFB44
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0xFB46
operator|&&
name|uc
operator|<=
literal|0xFBB1
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0xFBD3
operator|&&
name|uc
operator|<=
literal|0xFD3D
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0xFD50
operator|&&
name|uc
operator|<=
literal|0xFD8F
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0xFD92
operator|&&
name|uc
operator|<=
literal|0xFDC7
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0xFDF0
operator|&&
name|uc
operator|<=
literal|0xFDFC
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0xFE70
operator|&&
name|uc
operator|<=
literal|0xFE74
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0xFE76
operator|&&
name|uc
operator|<=
literal|0xFEFC
operator|)
return|;
block|}
end_function
begin_function
DECL|function|isBidirectionalL
specifier|static
name|bool
name|isBidirectionalL
parameter_list|(
name|uint
name|uc
parameter_list|)
block|{
if|if
condition|(
name|uc
operator|<
literal|0xaa
condition|)
return|return
operator|(
name|uc
operator|>=
literal|0x0041
operator|&&
name|uc
operator|<=
literal|0x005A
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0061
operator|&&
name|uc
operator|<=
literal|0x007A
operator|)
return|;
if|if
condition|(
name|uc
operator|==
literal|0x00AA
operator|||
name|uc
operator|==
literal|0x00B5
operator|||
name|uc
operator|==
literal|0x00BA
operator|||
operator|(
name|uc
operator|>=
literal|0x00C0
operator|&&
name|uc
operator|<=
literal|0x00D6
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x00D8
operator|&&
name|uc
operator|<=
literal|0x00F6
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x00F8
operator|&&
name|uc
operator|<=
literal|0x0220
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0222
operator|&&
name|uc
operator|<=
literal|0x0233
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0250
operator|&&
name|uc
operator|<=
literal|0x02AD
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x02B0
operator|&&
name|uc
operator|<=
literal|0x02B8
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x02BB
operator|&&
name|uc
operator|<=
literal|0x02C1
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x02D0
operator|&&
name|uc
operator|<=
literal|0x02D1
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x02E0
operator|&&
name|uc
operator|<=
literal|0x02E4
operator|)
operator|||
name|uc
operator|==
literal|0x02EE
operator|||
name|uc
operator|==
literal|0x037A
operator|||
name|uc
operator|==
literal|0x0386
operator|||
operator|(
name|uc
operator|>=
literal|0x0388
operator|&&
name|uc
operator|<=
literal|0x038A
operator|)
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
name|uc
operator|==
literal|0x038C
operator|||
operator|(
name|uc
operator|>=
literal|0x038E
operator|&&
name|uc
operator|<=
literal|0x03A1
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x03A3
operator|&&
name|uc
operator|<=
literal|0x03CE
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x03D0
operator|&&
name|uc
operator|<=
literal|0x03F5
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0400
operator|&&
name|uc
operator|<=
literal|0x0482
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x048A
operator|&&
name|uc
operator|<=
literal|0x04CE
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x04D0
operator|&&
name|uc
operator|<=
literal|0x04F5
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x04F8
operator|&&
name|uc
operator|<=
literal|0x04F9
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0500
operator|&&
name|uc
operator|<=
literal|0x050F
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0531
operator|&&
name|uc
operator|<=
literal|0x0556
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0559
operator|&&
name|uc
operator|<=
literal|0x055F
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0561
operator|&&
name|uc
operator|<=
literal|0x0587
operator|)
operator|||
name|uc
operator|==
literal|0x0589
operator|||
name|uc
operator|==
literal|0x0903
operator|||
operator|(
name|uc
operator|>=
literal|0x0905
operator|&&
name|uc
operator|<=
literal|0x0939
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x093D
operator|&&
name|uc
operator|<=
literal|0x0940
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0949
operator|&&
name|uc
operator|<=
literal|0x094C
operator|)
operator|||
name|uc
operator|==
literal|0x0950
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|(
name|uc
operator|>=
literal|0x0958
operator|&&
name|uc
operator|<=
literal|0x0961
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0964
operator|&&
name|uc
operator|<=
literal|0x0970
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0982
operator|&&
name|uc
operator|<=
literal|0x0983
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0985
operator|&&
name|uc
operator|<=
literal|0x098C
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x098F
operator|&&
name|uc
operator|<=
literal|0x0990
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0993
operator|&&
name|uc
operator|<=
literal|0x09A8
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x09AA
operator|&&
name|uc
operator|<=
literal|0x09B0
operator|)
operator|||
name|uc
operator|==
literal|0x09B2
operator|||
operator|(
name|uc
operator|>=
literal|0x09B6
operator|&&
name|uc
operator|<=
literal|0x09B9
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x09BE
operator|&&
name|uc
operator|<=
literal|0x09C0
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x09C7
operator|&&
name|uc
operator|<=
literal|0x09C8
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x09CB
operator|&&
name|uc
operator|<=
literal|0x09CC
operator|)
operator|||
name|uc
operator|==
literal|0x09D7
operator|||
operator|(
name|uc
operator|>=
literal|0x09DC
operator|&&
name|uc
operator|<=
literal|0x09DD
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x09DF
operator|&&
name|uc
operator|<=
literal|0x09E1
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x09E6
operator|&&
name|uc
operator|<=
literal|0x09F1
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x09F4
operator|&&
name|uc
operator|<=
literal|0x09FA
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0A05
operator|&&
name|uc
operator|<=
literal|0x0A0A
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0A0F
operator|&&
name|uc
operator|<=
literal|0x0A10
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0A13
operator|&&
name|uc
operator|<=
literal|0x0A28
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0A2A
operator|&&
name|uc
operator|<=
literal|0x0A30
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0A32
operator|&&
name|uc
operator|<=
literal|0x0A33
operator|)
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|(
name|uc
operator|>=
literal|0x0A35
operator|&&
name|uc
operator|<=
literal|0x0A36
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0A38
operator|&&
name|uc
operator|<=
literal|0x0A39
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0A3E
operator|&&
name|uc
operator|<=
literal|0x0A40
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0A59
operator|&&
name|uc
operator|<=
literal|0x0A5C
operator|)
operator|||
name|uc
operator|==
literal|0x0A5E
operator|||
operator|(
name|uc
operator|>=
literal|0x0A66
operator|&&
name|uc
operator|<=
literal|0x0A6F
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0A72
operator|&&
name|uc
operator|<=
literal|0x0A74
operator|)
operator|||
name|uc
operator|==
literal|0x0A83
operator|||
operator|(
name|uc
operator|>=
literal|0x0A85
operator|&&
name|uc
operator|<=
literal|0x0A8B
operator|)
operator|||
name|uc
operator|==
literal|0x0A8D
operator|||
operator|(
name|uc
operator|>=
literal|0x0A8F
operator|&&
name|uc
operator|<=
literal|0x0A91
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0A93
operator|&&
name|uc
operator|<=
literal|0x0AA8
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0AAA
operator|&&
name|uc
operator|<=
literal|0x0AB0
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0AB2
operator|&&
name|uc
operator|<=
literal|0x0AB3
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0AB5
operator|&&
name|uc
operator|<=
literal|0x0AB9
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0ABD
operator|&&
name|uc
operator|<=
literal|0x0AC0
operator|)
operator|||
name|uc
operator|==
literal|0x0AC9
operator|||
operator|(
name|uc
operator|>=
literal|0x0ACB
operator|&&
name|uc
operator|<=
literal|0x0ACC
operator|)
operator|||
name|uc
operator|==
literal|0x0AD0
operator|||
name|uc
operator|==
literal|0x0AE0
operator|||
operator|(
name|uc
operator|>=
literal|0x0AE6
operator|&&
name|uc
operator|<=
literal|0x0AEF
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0B02
operator|&&
name|uc
operator|<=
literal|0x0B03
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0B05
operator|&&
name|uc
operator|<=
literal|0x0B0C
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0B0F
operator|&&
name|uc
operator|<=
literal|0x0B10
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0B13
operator|&&
name|uc
operator|<=
literal|0x0B28
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0B2A
operator|&&
name|uc
operator|<=
literal|0x0B30
operator|)
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|(
name|uc
operator|>=
literal|0x0B32
operator|&&
name|uc
operator|<=
literal|0x0B33
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0B36
operator|&&
name|uc
operator|<=
literal|0x0B39
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0B3D
operator|&&
name|uc
operator|<=
literal|0x0B3E
operator|)
operator|||
name|uc
operator|==
literal|0x0B40
operator|||
operator|(
name|uc
operator|>=
literal|0x0B47
operator|&&
name|uc
operator|<=
literal|0x0B48
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0B4B
operator|&&
name|uc
operator|<=
literal|0x0B4C
operator|)
operator|||
name|uc
operator|==
literal|0x0B57
operator|||
operator|(
name|uc
operator|>=
literal|0x0B5C
operator|&&
name|uc
operator|<=
literal|0x0B5D
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0B5F
operator|&&
name|uc
operator|<=
literal|0x0B61
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0B66
operator|&&
name|uc
operator|<=
literal|0x0B70
operator|)
operator|||
name|uc
operator|==
literal|0x0B83
operator|||
operator|(
name|uc
operator|>=
literal|0x0B85
operator|&&
name|uc
operator|<=
literal|0x0B8A
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0B8E
operator|&&
name|uc
operator|<=
literal|0x0B90
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0B92
operator|&&
name|uc
operator|<=
literal|0x0B95
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0B99
operator|&&
name|uc
operator|<=
literal|0x0B9A
operator|)
operator|||
name|uc
operator|==
literal|0x0B9C
operator|||
operator|(
name|uc
operator|>=
literal|0x0B9E
operator|&&
name|uc
operator|<=
literal|0x0B9F
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0BA3
operator|&&
name|uc
operator|<=
literal|0x0BA4
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0BA8
operator|&&
name|uc
operator|<=
literal|0x0BAA
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0BAE
operator|&&
name|uc
operator|<=
literal|0x0BB5
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0BB7
operator|&&
name|uc
operator|<=
literal|0x0BB9
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0BBE
operator|&&
name|uc
operator|<=
literal|0x0BBF
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0BC1
operator|&&
name|uc
operator|<=
literal|0x0BC2
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0BC6
operator|&&
name|uc
operator|<=
literal|0x0BC8
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0BCA
operator|&&
name|uc
operator|<=
literal|0x0BCC
operator|)
operator|||
name|uc
operator|==
literal|0x0BD7
operator|||
operator|(
name|uc
operator|>=
literal|0x0BE7
operator|&&
name|uc
operator|<=
literal|0x0BF2
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0C01
operator|&&
name|uc
operator|<=
literal|0x0C03
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0C05
operator|&&
name|uc
operator|<=
literal|0x0C0C
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0C0E
operator|&&
name|uc
operator|<=
literal|0x0C10
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0C12
operator|&&
name|uc
operator|<=
literal|0x0C28
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0C2A
operator|&&
name|uc
operator|<=
literal|0x0C33
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0C35
operator|&&
name|uc
operator|<=
literal|0x0C39
operator|)
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|(
name|uc
operator|>=
literal|0x0C41
operator|&&
name|uc
operator|<=
literal|0x0C44
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0C60
operator|&&
name|uc
operator|<=
literal|0x0C61
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0C66
operator|&&
name|uc
operator|<=
literal|0x0C6F
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0C82
operator|&&
name|uc
operator|<=
literal|0x0C83
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0C85
operator|&&
name|uc
operator|<=
literal|0x0C8C
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0C8E
operator|&&
name|uc
operator|<=
literal|0x0C90
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0C92
operator|&&
name|uc
operator|<=
literal|0x0CA8
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0CAA
operator|&&
name|uc
operator|<=
literal|0x0CB3
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0CB5
operator|&&
name|uc
operator|<=
literal|0x0CB9
operator|)
operator|||
name|uc
operator|==
literal|0x0CBE
operator|||
operator|(
name|uc
operator|>=
literal|0x0CC0
operator|&&
name|uc
operator|<=
literal|0x0CC4
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0CC7
operator|&&
name|uc
operator|<=
literal|0x0CC8
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0CCA
operator|&&
name|uc
operator|<=
literal|0x0CCB
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0CD5
operator|&&
name|uc
operator|<=
literal|0x0CD6
operator|)
operator|||
name|uc
operator|==
literal|0x0CDE
operator|||
operator|(
name|uc
operator|>=
literal|0x0CE0
operator|&&
name|uc
operator|<=
literal|0x0CE1
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0CE6
operator|&&
name|uc
operator|<=
literal|0x0CEF
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0D02
operator|&&
name|uc
operator|<=
literal|0x0D03
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0D05
operator|&&
name|uc
operator|<=
literal|0x0D0C
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0D0E
operator|&&
name|uc
operator|<=
literal|0x0D10
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0D12
operator|&&
name|uc
operator|<=
literal|0x0D28
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0D2A
operator|&&
name|uc
operator|<=
literal|0x0D39
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0D3E
operator|&&
name|uc
operator|<=
literal|0x0D40
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0D46
operator|&&
name|uc
operator|<=
literal|0x0D48
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0D4A
operator|&&
name|uc
operator|<=
literal|0x0D4C
operator|)
operator|||
name|uc
operator|==
literal|0x0D57
operator|||
operator|(
name|uc
operator|>=
literal|0x0D60
operator|&&
name|uc
operator|<=
literal|0x0D61
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0D66
operator|&&
name|uc
operator|<=
literal|0x0D6F
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0D82
operator|&&
name|uc
operator|<=
literal|0x0D83
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0D85
operator|&&
name|uc
operator|<=
literal|0x0D96
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0D9A
operator|&&
name|uc
operator|<=
literal|0x0DB1
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0DB3
operator|&&
name|uc
operator|<=
literal|0x0DBB
operator|)
operator|||
name|uc
operator|==
literal|0x0DBD
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|(
name|uc
operator|>=
literal|0x0DC0
operator|&&
name|uc
operator|<=
literal|0x0DC6
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0DCF
operator|&&
name|uc
operator|<=
literal|0x0DD1
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0DD8
operator|&&
name|uc
operator|<=
literal|0x0DDF
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0DF2
operator|&&
name|uc
operator|<=
literal|0x0DF4
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0E01
operator|&&
name|uc
operator|<=
literal|0x0E30
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0E32
operator|&&
name|uc
operator|<=
literal|0x0E33
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0E40
operator|&&
name|uc
operator|<=
literal|0x0E46
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0E4F
operator|&&
name|uc
operator|<=
literal|0x0E5B
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0E81
operator|&&
name|uc
operator|<=
literal|0x0E82
operator|)
operator|||
name|uc
operator|==
literal|0x0E84
operator|||
operator|(
name|uc
operator|>=
literal|0x0E87
operator|&&
name|uc
operator|<=
literal|0x0E88
operator|)
operator|||
name|uc
operator|==
literal|0x0E8A
operator|||
name|uc
operator|==
literal|0x0E8D
operator|||
operator|(
name|uc
operator|>=
literal|0x0E94
operator|&&
name|uc
operator|<=
literal|0x0E97
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0E99
operator|&&
name|uc
operator|<=
literal|0x0E9F
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0EA1
operator|&&
name|uc
operator|<=
literal|0x0EA3
operator|)
operator|||
name|uc
operator|==
literal|0x0EA5
operator|||
name|uc
operator|==
literal|0x0EA7
operator|||
operator|(
name|uc
operator|>=
literal|0x0EAA
operator|&&
name|uc
operator|<=
literal|0x0EAB
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0EAD
operator|&&
name|uc
operator|<=
literal|0x0EB0
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0EB2
operator|&&
name|uc
operator|<=
literal|0x0EB3
operator|)
operator|||
name|uc
operator|==
literal|0x0EBD
operator|||
operator|(
name|uc
operator|>=
literal|0x0EC0
operator|&&
name|uc
operator|<=
literal|0x0EC4
operator|)
operator|||
name|uc
operator|==
literal|0x0EC6
operator|||
operator|(
name|uc
operator|>=
literal|0x0ED0
operator|&&
name|uc
operator|<=
literal|0x0ED9
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0EDC
operator|&&
name|uc
operator|<=
literal|0x0EDD
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0F00
operator|&&
name|uc
operator|<=
literal|0x0F17
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0F1A
operator|&&
name|uc
operator|<=
literal|0x0F34
operator|)
operator|||
name|uc
operator|==
literal|0x0F36
operator|||
name|uc
operator|==
literal|0x0F38
operator|||
operator|(
name|uc
operator|>=
literal|0x0F3E
operator|&&
name|uc
operator|<=
literal|0x0F47
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0F49
operator|&&
name|uc
operator|<=
literal|0x0F6A
operator|)
operator|||
name|uc
operator|==
literal|0x0F7F
operator|||
name|uc
operator|==
literal|0x0F85
operator|||
operator|(
name|uc
operator|>=
literal|0x0F88
operator|&&
name|uc
operator|<=
literal|0x0F8B
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0FBE
operator|&&
name|uc
operator|<=
literal|0x0FC5
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x0FC7
operator|&&
name|uc
operator|<=
literal|0x0FCC
operator|)
operator|||
name|uc
operator|==
literal|0x0FCF
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|(
name|uc
operator|>=
literal|0x1000
operator|&&
name|uc
operator|<=
literal|0x1021
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1023
operator|&&
name|uc
operator|<=
literal|0x1027
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1029
operator|&&
name|uc
operator|<=
literal|0x102A
operator|)
operator|||
name|uc
operator|==
literal|0x102C
operator|||
name|uc
operator|==
literal|0x1031
operator|||
name|uc
operator|==
literal|0x1038
operator|||
operator|(
name|uc
operator|>=
literal|0x1040
operator|&&
name|uc
operator|<=
literal|0x1057
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x10A0
operator|&&
name|uc
operator|<=
literal|0x10C5
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x10D0
operator|&&
name|uc
operator|<=
literal|0x10F8
operator|)
operator|||
name|uc
operator|==
literal|0x10FB
operator|||
operator|(
name|uc
operator|>=
literal|0x1100
operator|&&
name|uc
operator|<=
literal|0x1159
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x115F
operator|&&
name|uc
operator|<=
literal|0x11A2
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x11A8
operator|&&
name|uc
operator|<=
literal|0x11F9
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1200
operator|&&
name|uc
operator|<=
literal|0x1206
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1208
operator|&&
name|uc
operator|<=
literal|0x1246
operator|)
operator|||
name|uc
operator|==
literal|0x1248
operator|||
operator|(
name|uc
operator|>=
literal|0x124A
operator|&&
name|uc
operator|<=
literal|0x124D
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1250
operator|&&
name|uc
operator|<=
literal|0x1256
operator|)
operator|||
name|uc
operator|==
literal|0x1258
operator|||
operator|(
name|uc
operator|>=
literal|0x125A
operator|&&
name|uc
operator|<=
literal|0x125D
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1260
operator|&&
name|uc
operator|<=
literal|0x1286
operator|)
operator|||
name|uc
operator|==
literal|0x1288
operator|||
operator|(
name|uc
operator|>=
literal|0x128A
operator|&&
name|uc
operator|<=
literal|0x128D
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1290
operator|&&
name|uc
operator|<=
literal|0x12AE
operator|)
operator|||
name|uc
operator|==
literal|0x12B0
operator|||
operator|(
name|uc
operator|>=
literal|0x12B2
operator|&&
name|uc
operator|<=
literal|0x12B5
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x12B8
operator|&&
name|uc
operator|<=
literal|0x12BE
operator|)
operator|||
name|uc
operator|==
literal|0x12C0
operator|||
operator|(
name|uc
operator|>=
literal|0x12C2
operator|&&
name|uc
operator|<=
literal|0x12C5
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x12C8
operator|&&
name|uc
operator|<=
literal|0x12CE
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x12D0
operator|&&
name|uc
operator|<=
literal|0x12D6
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x12D8
operator|&&
name|uc
operator|<=
literal|0x12EE
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x12F0
operator|&&
name|uc
operator|<=
literal|0x130E
operator|)
operator|||
name|uc
operator|==
literal|0x1310
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|(
name|uc
operator|>=
literal|0x1312
operator|&&
name|uc
operator|<=
literal|0x1315
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1318
operator|&&
name|uc
operator|<=
literal|0x131E
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1320
operator|&&
name|uc
operator|<=
literal|0x1346
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1348
operator|&&
name|uc
operator|<=
literal|0x135A
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1361
operator|&&
name|uc
operator|<=
literal|0x137C
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x13A0
operator|&&
name|uc
operator|<=
literal|0x13F4
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1401
operator|&&
name|uc
operator|<=
literal|0x1676
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1681
operator|&&
name|uc
operator|<=
literal|0x169A
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x16A0
operator|&&
name|uc
operator|<=
literal|0x16F0
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1700
operator|&&
name|uc
operator|<=
literal|0x170C
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x170E
operator|&&
name|uc
operator|<=
literal|0x1711
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1720
operator|&&
name|uc
operator|<=
literal|0x1731
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1735
operator|&&
name|uc
operator|<=
literal|0x1736
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1740
operator|&&
name|uc
operator|<=
literal|0x1751
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1760
operator|&&
name|uc
operator|<=
literal|0x176C
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x176E
operator|&&
name|uc
operator|<=
literal|0x1770
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1780
operator|&&
name|uc
operator|<=
literal|0x17B6
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x17BE
operator|&&
name|uc
operator|<=
literal|0x17C5
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x17C7
operator|&&
name|uc
operator|<=
literal|0x17C8
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x17D4
operator|&&
name|uc
operator|<=
literal|0x17DA
operator|)
operator|||
name|uc
operator|==
literal|0x17DC
operator|||
operator|(
name|uc
operator|>=
literal|0x17E0
operator|&&
name|uc
operator|<=
literal|0x17E9
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1810
operator|&&
name|uc
operator|<=
literal|0x1819
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1820
operator|&&
name|uc
operator|<=
literal|0x1877
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1880
operator|&&
name|uc
operator|<=
literal|0x18A8
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1E00
operator|&&
name|uc
operator|<=
literal|0x1E9B
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1EA0
operator|&&
name|uc
operator|<=
literal|0x1EF9
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1F00
operator|&&
name|uc
operator|<=
literal|0x1F15
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1F18
operator|&&
name|uc
operator|<=
literal|0x1F1D
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1F20
operator|&&
name|uc
operator|<=
literal|0x1F45
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1F48
operator|&&
name|uc
operator|<=
literal|0x1F4D
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1F50
operator|&&
name|uc
operator|<=
literal|0x1F57
operator|)
operator|||
name|uc
operator|==
literal|0x1F59
operator|||
name|uc
operator|==
literal|0x1F5B
operator|||
name|uc
operator|==
literal|0x1F5D
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|(
name|uc
operator|>=
literal|0x1F5F
operator|&&
name|uc
operator|<=
literal|0x1F7D
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1F80
operator|&&
name|uc
operator|<=
literal|0x1FB4
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1FB6
operator|&&
name|uc
operator|<=
literal|0x1FBC
operator|)
operator|||
name|uc
operator|==
literal|0x1FBE
operator|||
operator|(
name|uc
operator|>=
literal|0x1FC2
operator|&&
name|uc
operator|<=
literal|0x1FC4
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1FC6
operator|&&
name|uc
operator|<=
literal|0x1FCC
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1FD0
operator|&&
name|uc
operator|<=
literal|0x1FD3
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1FD6
operator|&&
name|uc
operator|<=
literal|0x1FDB
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1FE0
operator|&&
name|uc
operator|<=
literal|0x1FEC
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1FF2
operator|&&
name|uc
operator|<=
literal|0x1FF4
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1FF6
operator|&&
name|uc
operator|<=
literal|0x1FFC
operator|)
operator|||
name|uc
operator|==
literal|0x200E
operator|||
name|uc
operator|==
literal|0x2071
operator|||
name|uc
operator|==
literal|0x207F
operator|||
name|uc
operator|==
literal|0x2102
operator|||
name|uc
operator|==
literal|0x2107
operator|||
operator|(
name|uc
operator|>=
literal|0x210A
operator|&&
name|uc
operator|<=
literal|0x2113
operator|)
operator|||
name|uc
operator|==
literal|0x2115
operator|||
operator|(
name|uc
operator|>=
literal|0x2119
operator|&&
name|uc
operator|<=
literal|0x211D
operator|)
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
name|uc
operator|==
literal|0x2124
operator|||
name|uc
operator|==
literal|0x2126
operator|||
name|uc
operator|==
literal|0x2128
operator|||
operator|(
name|uc
operator|>=
literal|0x212A
operator|&&
name|uc
operator|<=
literal|0x212D
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x212F
operator|&&
name|uc
operator|<=
literal|0x2131
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x2133
operator|&&
name|uc
operator|<=
literal|0x2139
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x213D
operator|&&
name|uc
operator|<=
literal|0x213F
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x2145
operator|&&
name|uc
operator|<=
literal|0x2149
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x2160
operator|&&
name|uc
operator|<=
literal|0x2183
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x2336
operator|&&
name|uc
operator|<=
literal|0x237A
operator|)
operator|||
name|uc
operator|==
literal|0x2395
operator|||
operator|(
name|uc
operator|>=
literal|0x249C
operator|&&
name|uc
operator|<=
literal|0x24E9
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x3005
operator|&&
name|uc
operator|<=
literal|0x3007
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x3021
operator|&&
name|uc
operator|<=
literal|0x3029
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x3031
operator|&&
name|uc
operator|<=
literal|0x3035
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x3038
operator|&&
name|uc
operator|<=
literal|0x303C
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x3041
operator|&&
name|uc
operator|<=
literal|0x3096
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x309D
operator|&&
name|uc
operator|<=
literal|0x309F
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x30A1
operator|&&
name|uc
operator|<=
literal|0x30FA
operator|)
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|(
name|uc
operator|>=
literal|0x30FC
operator|&&
name|uc
operator|<=
literal|0x30FF
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x3105
operator|&&
name|uc
operator|<=
literal|0x312C
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x3131
operator|&&
name|uc
operator|<=
literal|0x318E
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x3190
operator|&&
name|uc
operator|<=
literal|0x31B7
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x31F0
operator|&&
name|uc
operator|<=
literal|0x321C
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x3220
operator|&&
name|uc
operator|<=
literal|0x3243
operator|)
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|(
name|uc
operator|>=
literal|0x3260
operator|&&
name|uc
operator|<=
literal|0x327B
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x327F
operator|&&
name|uc
operator|<=
literal|0x32B0
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x32C0
operator|&&
name|uc
operator|<=
literal|0x32CB
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x32D0
operator|&&
name|uc
operator|<=
literal|0x32FE
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x3300
operator|&&
name|uc
operator|<=
literal|0x3376
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x337B
operator|&&
name|uc
operator|<=
literal|0x33DD
operator|)
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|(
name|uc
operator|>=
literal|0x33E0
operator|&&
name|uc
operator|<=
literal|0x33FE
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x3400
operator|&&
name|uc
operator|<=
literal|0x4DB5
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x4E00
operator|&&
name|uc
operator|<=
literal|0x9FA5
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0xA000
operator|&&
name|uc
operator|<=
literal|0xA48C
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0xAC00
operator|&&
name|uc
operator|<=
literal|0xD7A3
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0xD800
operator|&&
name|uc
operator|<=
literal|0xFA2D
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0xFA30
operator|&&
name|uc
operator|<=
literal|0xFA6A
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0xFB00
operator|&&
name|uc
operator|<=
literal|0xFB06
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0xFB13
operator|&&
name|uc
operator|<=
literal|0xFB17
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0xFF21
operator|&&
name|uc
operator|<=
literal|0xFF3A
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0xFF41
operator|&&
name|uc
operator|<=
literal|0xFF5A
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0xFF66
operator|&&
name|uc
operator|<=
literal|0xFFBE
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0xFFC2
operator|&&
name|uc
operator|<=
literal|0xFFC7
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0xFFCA
operator|&&
name|uc
operator|<=
literal|0xFFCF
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0xFFD2
operator|&&
name|uc
operator|<=
literal|0xFFD7
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0xFFDA
operator|&&
name|uc
operator|<=
literal|0xFFDC
operator|)
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|(
name|uc
operator|>=
literal|0x10300
operator|&&
name|uc
operator|<=
literal|0x1031E
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x10320
operator|&&
name|uc
operator|<=
literal|0x10323
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x10330
operator|&&
name|uc
operator|<=
literal|0x1034A
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x10400
operator|&&
name|uc
operator|<=
literal|0x10425
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x10428
operator|&&
name|uc
operator|<=
literal|0x1044D
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1D000
operator|&&
name|uc
operator|<=
literal|0x1D0F5
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1D100
operator|&&
name|uc
operator|<=
literal|0x1D126
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1D12A
operator|&&
name|uc
operator|<=
literal|0x1D166
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1D16A
operator|&&
name|uc
operator|<=
literal|0x1D172
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1D183
operator|&&
name|uc
operator|<=
literal|0x1D184
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1D18C
operator|&&
name|uc
operator|<=
literal|0x1D1A9
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1D1AE
operator|&&
name|uc
operator|<=
literal|0x1D1DD
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1D400
operator|&&
name|uc
operator|<=
literal|0x1D454
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1D456
operator|&&
name|uc
operator|<=
literal|0x1D49C
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1D49E
operator|&&
name|uc
operator|<=
literal|0x1D49F
operator|)
operator|||
name|uc
operator|==
literal|0x1D4A2
operator|||
operator|(
name|uc
operator|>=
literal|0x1D4A5
operator|&&
name|uc
operator|<=
literal|0x1D4A6
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1D4A9
operator|&&
name|uc
operator|<=
literal|0x1D4AC
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1D4AE
operator|&&
name|uc
operator|<=
literal|0x1D4B9
operator|)
operator|||
name|uc
operator|==
literal|0x1D4BB
operator|||
operator|(
name|uc
operator|>=
literal|0x1D4BD
operator|&&
name|uc
operator|<=
literal|0x1D4C0
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1D4C2
operator|&&
name|uc
operator|<=
literal|0x1D4C3
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1D4C5
operator|&&
name|uc
operator|<=
literal|0x1D505
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1D507
operator|&&
name|uc
operator|<=
literal|0x1D50A
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1D50D
operator|&&
name|uc
operator|<=
literal|0x1D514
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1D516
operator|&&
name|uc
operator|<=
literal|0x1D51C
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1D51E
operator|&&
name|uc
operator|<=
literal|0x1D539
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1D53B
operator|&&
name|uc
operator|<=
literal|0x1D53E
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1D540
operator|&&
name|uc
operator|<=
literal|0x1D544
operator|)
operator|||
name|uc
operator|==
literal|0x1D546
operator|||
operator|(
name|uc
operator|>=
literal|0x1D54A
operator|&&
name|uc
operator|<=
literal|0x1D550
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1D552
operator|&&
name|uc
operator|<=
literal|0x1D6A3
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x1D6A8
operator|&&
name|uc
operator|<=
literal|0x1D7C9
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x20000
operator|&&
name|uc
operator|<=
literal|0x2A6D6
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x2F800
operator|&&
name|uc
operator|<=
literal|0x2FA1D
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0xF0000
operator|&&
name|uc
operator|<=
literal|0xFFFFD
operator|)
operator|||
operator|(
name|uc
operator|>=
literal|0x100000
operator|&&
name|uc
operator|<=
literal|0x10FFFD
operator|)
condition|)
block|{
return|return
literal|true
return|;
block|}
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|qt_nameprep
name|Q_AUTOTEST_EXPORT
name|void
name|qt_nameprep
parameter_list|(
name|QString
modifier|*
name|source
parameter_list|,
name|int
name|from
parameter_list|)
block|{
name|QChar
modifier|*
name|src
init|=
name|source
operator|->
name|data
argument_list|()
decl_stmt|;
comment|// causes a detach, so we're sure the only one using it
name|QChar
modifier|*
name|out
init|=
name|src
operator|+
name|from
decl_stmt|;
specifier|const
name|QChar
modifier|*
name|e
init|=
name|src
operator|+
name|source
operator|->
name|size
argument_list|()
decl_stmt|;
for|for
control|(
init|;
name|out
operator|<
name|e
condition|;
operator|++
name|out
control|)
block|{
name|ushort
name|uc
init|=
name|out
operator|->
name|unicode
argument_list|()
decl_stmt|;
if|if
condition|(
name|uc
operator|>=
literal|0x80
condition|)
block|{
break|break;
block|}
elseif|else
if|if
condition|(
name|uc
operator|>=
literal|'A'
operator|&&
name|uc
operator|<=
literal|'Z'
condition|)
block|{
operator|*
name|out
operator|=
name|QChar
argument_list|(
name|uc
operator||
literal|0x20
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|out
operator|==
name|e
condition|)
return|return;
comment|// everything was mapped easily (lowercased, actually)
name|int
name|firstNonAscii
init|=
name|out
operator|-
name|src
decl_stmt|;
comment|// Characters unassigned in Unicode 3.2 are not allowed in "stored string" scheme
comment|// but allowed in "query" scheme
comment|// (Table A.1)
specifier|const
name|bool
name|isUnassignedAllowed
init|=
literal|false
decl_stmt|;
comment|// ###
comment|// Characters commonly mapped to nothing are simply removed
comment|// (Table B.1)
specifier|const
name|QChar
modifier|*
name|in
init|=
name|out
decl_stmt|;
for|for
control|(
init|;
name|in
operator|<
name|e
condition|;
operator|++
name|in
control|)
block|{
name|uint
name|uc
init|=
name|in
operator|->
name|unicode
argument_list|()
decl_stmt|;
if|if
condition|(
name|QChar
argument_list|(
name|uc
argument_list|)
operator|.
name|isHighSurrogate
argument_list|()
operator|&&
name|in
operator|<
name|e
operator|-
literal|1
condition|)
block|{
name|ushort
name|low
init|=
name|in
index|[
literal|1
index|]
operator|.
name|unicode
argument_list|()
decl_stmt|;
if|if
condition|(
name|QChar
argument_list|(
name|low
argument_list|)
operator|.
name|isLowSurrogate
argument_list|()
condition|)
block|{
operator|++
name|in
expr_stmt|;
name|uc
operator|=
name|QChar
operator|::
name|surrogateToUcs4
argument_list|(
name|uc
argument_list|,
name|low
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
operator|!
name|isUnassignedAllowed
condition|)
block|{
name|QChar
operator|::
name|UnicodeVersion
name|version
init|=
name|QChar
operator|::
name|unicodeVersion
argument_list|(
name|uc
argument_list|)
decl_stmt|;
if|if
condition|(
name|version
operator|==
name|QChar
operator|::
name|Unicode_Unassigned
operator|||
name|version
operator|>
name|QChar
operator|::
name|Unicode_3_2
condition|)
block|{
name|source
operator|->
name|resize
argument_list|(
name|from
argument_list|)
expr_stmt|;
comment|// not allowed, clear the label
return|return;
block|}
block|}
if|if
condition|(
operator|!
name|isMappedToNothing
argument_list|(
name|uc
argument_list|)
condition|)
block|{
if|if
condition|(
name|uc
operator|<=
literal|0xFFFF
condition|)
block|{
operator|*
name|out
operator|++
operator|=
operator|*
name|in
expr_stmt|;
block|}
else|else
block|{
operator|*
name|out
operator|++
operator|=
name|in
index|[
operator|-
literal|1
index|]
expr_stmt|;
operator|*
name|out
operator|++
operator|=
name|in
index|[
literal|0
index|]
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|out
operator|!=
name|in
condition|)
name|source
operator|->
name|truncate
argument_list|(
name|out
operator|-
name|src
argument_list|)
expr_stmt|;
comment|// Map to lowercase (Table B.2)
name|mapToLowerCase
argument_list|(
name|source
argument_list|,
name|firstNonAscii
argument_list|)
expr_stmt|;
comment|// Normalize to Unicode 3.2 form KC
specifier|extern
name|void
name|qt_string_normalize
argument_list|(
name|QString
operator|*
name|data
argument_list|,
name|QString
operator|::
name|NormalizationForm
name|mode
argument_list|,
name|QChar
operator|::
name|UnicodeVersion
name|version
argument_list|,
name|int
name|from
argument_list|)
decl_stmt|;
name|qt_string_normalize
argument_list|(
name|source
argument_list|,
name|QString
operator|::
name|NormalizationForm_KC
argument_list|,
name|QChar
operator|::
name|Unicode_3_2
argument_list|,
name|firstNonAscii
operator|>
name|from
condition|?
name|firstNonAscii
operator|-
literal|1
else|:
name|from
argument_list|)
expr_stmt|;
comment|// Strip prohibited output
if|if
condition|(
name|containsProhibitedOuptut
argument_list|(
name|source
argument_list|,
name|firstNonAscii
argument_list|)
condition|)
block|{
name|source
operator|->
name|resize
argument_list|(
name|from
argument_list|)
expr_stmt|;
return|return;
block|}
comment|// Check for valid bidirectional characters
name|bool
name|containsLCat
init|=
literal|false
decl_stmt|;
name|bool
name|containsRandALCat
init|=
literal|false
decl_stmt|;
name|src
operator|=
name|source
operator|->
name|data
argument_list|()
expr_stmt|;
name|e
operator|=
name|src
operator|+
name|source
operator|->
name|size
argument_list|()
expr_stmt|;
for|for
control|(
name|in
operator|=
name|src
operator|+
name|from
init|;
name|in
operator|<
name|e
operator|&&
operator|(
operator|!
name|containsLCat
operator|||
operator|!
name|containsRandALCat
operator|)
condition|;
operator|++
name|in
control|)
block|{
name|uint
name|uc
init|=
name|in
operator|->
name|unicode
argument_list|()
decl_stmt|;
if|if
condition|(
name|QChar
argument_list|(
name|uc
argument_list|)
operator|.
name|isHighSurrogate
argument_list|()
operator|&&
name|in
operator|<
name|e
operator|-
literal|1
condition|)
block|{
name|ushort
name|low
init|=
name|in
index|[
literal|1
index|]
operator|.
name|unicode
argument_list|()
decl_stmt|;
if|if
condition|(
name|QChar
argument_list|(
name|low
argument_list|)
operator|.
name|isLowSurrogate
argument_list|()
condition|)
block|{
operator|++
name|in
expr_stmt|;
name|uc
operator|=
name|QChar
operator|::
name|surrogateToUcs4
argument_list|(
name|uc
argument_list|,
name|low
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|isBidirectionalL
argument_list|(
name|uc
argument_list|)
condition|)
name|containsLCat
operator|=
literal|true
expr_stmt|;
elseif|else
if|if
condition|(
name|isBidirectionalRorAL
argument_list|(
name|uc
argument_list|)
condition|)
name|containsRandALCat
operator|=
literal|true
expr_stmt|;
block|}
if|if
condition|(
name|containsRandALCat
condition|)
block|{
if|if
condition|(
name|containsLCat
operator|||
operator|(
operator|!
name|isBidirectionalRorAL
argument_list|(
name|src
index|[
name|from
index|]
operator|.
name|unicode
argument_list|()
argument_list|)
operator|||
operator|!
name|isBidirectionalRorAL
argument_list|(
name|e
index|[
operator|-
literal|1
index|]
operator|.
name|unicode
argument_list|()
argument_list|)
operator|)
condition|)
name|source
operator|->
name|resize
argument_list|(
name|from
argument_list|)
expr_stmt|;
comment|// not allowed, clear the label
block|}
block|}
end_function
begin_function
DECL|function|qt_check_std3rules
name|Q_AUTOTEST_EXPORT
name|bool
name|qt_check_std3rules
parameter_list|(
specifier|const
name|QChar
modifier|*
name|uc
parameter_list|,
name|int
name|len
parameter_list|)
block|{
if|if
condition|(
name|len
operator|>
literal|63
condition|)
return|return
literal|false
return|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|len
condition|;
operator|++
name|i
control|)
block|{
name|ushort
name|c
init|=
name|uc
index|[
name|i
index|]
operator|.
name|unicode
argument_list|()
decl_stmt|;
if|if
condition|(
name|c
operator|==
literal|'-'
operator|&&
operator|(
name|i
operator|==
literal|0
operator|||
name|i
operator|==
name|len
operator|-
literal|1
operator|)
condition|)
return|return
literal|false
return|;
comment|// verifying the absence of non-LDH is the same as verifying that
comment|// only LDH is present
if|if
condition|(
name|c
operator|==
literal|'-'
operator|||
operator|(
name|c
operator|>=
literal|'0'
operator|&&
name|c
operator|<=
literal|'9'
operator|)
operator|||
operator|(
name|c
operator|>=
literal|'A'
operator|&&
name|c
operator|<=
literal|'Z'
operator|)
operator|||
operator|(
name|c
operator|>=
literal|'a'
operator|&&
name|c
operator|<=
literal|'z'
operator|)
comment|//underscore is not supposed to be allowed, but other browser accept it (QTBUG-7434)
operator|||
name|c
operator|==
literal|'_'
condition|)
continue|continue;
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
end_function
begin_function
DECL|function|encodeDigit
specifier|static
specifier|inline
name|uint
name|encodeDigit
parameter_list|(
name|uint
name|digit
parameter_list|)
block|{
return|return
name|digit
operator|+
literal|22
operator|+
literal|75
operator|*
operator|(
name|digit
operator|<
literal|26
operator|)
return|;
block|}
end_function
begin_function
DECL|function|adapt
specifier|static
specifier|inline
name|uint
name|adapt
parameter_list|(
name|uint
name|delta
parameter_list|,
name|uint
name|numpoints
parameter_list|,
name|bool
name|firsttime
parameter_list|)
block|{
name|delta
operator|/=
operator|(
name|firsttime
condition|?
name|damp
else|:
literal|2
operator|)
expr_stmt|;
name|delta
operator|+=
operator|(
name|delta
operator|/
name|numpoints
operator|)
expr_stmt|;
name|uint
name|k
init|=
literal|0
decl_stmt|;
for|for
control|(
init|;
name|delta
operator|>
operator|(
operator|(
name|base
operator|-
name|tmin
operator|)
operator|*
name|tmax
operator|)
operator|/
literal|2
condition|;
name|k
operator|+=
name|base
control|)
name|delta
operator|/=
operator|(
name|base
operator|-
name|tmin
operator|)
expr_stmt|;
return|return
name|k
operator|+
operator|(
operator|(
operator|(
name|base
operator|-
name|tmin
operator|+
literal|1
operator|)
operator|*
name|delta
operator|)
operator|/
operator|(
name|delta
operator|+
name|skew
operator|)
operator|)
return|;
block|}
end_function
begin_function
DECL|function|appendEncode
specifier|static
specifier|inline
name|void
name|appendEncode
parameter_list|(
name|QString
modifier|*
name|output
parameter_list|,
name|uint
modifier|&
name|delta
parameter_list|,
name|uint
modifier|&
name|bias
parameter_list|,
name|uint
modifier|&
name|b
parameter_list|,
name|uint
modifier|&
name|h
parameter_list|)
block|{
name|uint
name|qq
decl_stmt|;
name|uint
name|k
decl_stmt|;
name|uint
name|t
decl_stmt|;
comment|// insert the variable length delta integer; fail on
comment|// overflow.
for|for
control|(
name|qq
operator|=
name|delta
operator|,
name|k
operator|=
name|base
init|;
condition|;
name|k
operator|+=
name|base
control|)
block|{
comment|// stop generating digits when the threshold is
comment|// detected.
name|t
operator|=
operator|(
name|k
operator|<=
name|bias
operator|)
condition|?
name|tmin
else|:
operator|(
name|k
operator|>=
name|bias
operator|+
name|tmax
operator|)
condition|?
name|tmax
else|:
name|k
operator|-
name|bias
expr_stmt|;
if|if
condition|(
name|qq
operator|<
name|t
condition|)
break|break;
operator|*
name|output
operator|+=
name|QChar
argument_list|(
name|encodeDigit
argument_list|(
name|t
operator|+
operator|(
name|qq
operator|-
name|t
operator|)
operator|%
operator|(
name|base
operator|-
name|t
operator|)
argument_list|)
argument_list|)
expr_stmt|;
name|qq
operator|=
operator|(
name|qq
operator|-
name|t
operator|)
operator|/
operator|(
name|base
operator|-
name|t
operator|)
expr_stmt|;
block|}
operator|*
name|output
operator|+=
name|QChar
argument_list|(
name|encodeDigit
argument_list|(
name|qq
argument_list|)
argument_list|)
expr_stmt|;
name|bias
operator|=
name|adapt
argument_list|(
name|delta
argument_list|,
name|h
operator|+
literal|1
argument_list|,
name|h
operator|==
name|b
argument_list|)
expr_stmt|;
name|delta
operator|=
literal|0
expr_stmt|;
operator|++
name|h
expr_stmt|;
block|}
end_function
begin_function
DECL|function|qt_punycodeEncoder
name|Q_AUTOTEST_EXPORT
name|void
name|qt_punycodeEncoder
parameter_list|(
specifier|const
name|QChar
modifier|*
name|s
parameter_list|,
name|int
name|ucLength
parameter_list|,
name|QString
modifier|*
name|output
parameter_list|)
block|{
name|uint
name|n
init|=
name|initial_n
decl_stmt|;
name|uint
name|delta
init|=
literal|0
decl_stmt|;
name|uint
name|bias
init|=
name|initial_bias
decl_stmt|;
name|int
name|outLen
init|=
name|output
operator|->
name|length
argument_list|()
decl_stmt|;
name|output
operator|->
name|resize
argument_list|(
name|outLen
operator|+
name|ucLength
argument_list|)
expr_stmt|;
name|QChar
modifier|*
name|d
init|=
name|output
operator|->
name|data
argument_list|()
operator|+
name|outLen
decl_stmt|;
name|bool
name|skipped
init|=
literal|false
decl_stmt|;
comment|// copy all basic code points verbatim to output.
for|for
control|(
name|uint
name|j
init|=
literal|0
init|;
name|j
operator|<
operator|(
name|uint
operator|)
name|ucLength
condition|;
operator|++
name|j
control|)
block|{
name|ushort
name|js
init|=
name|s
index|[
name|j
index|]
operator|.
name|unicode
argument_list|()
decl_stmt|;
if|if
condition|(
name|js
operator|<
literal|0x80
condition|)
operator|*
name|d
operator|++
operator|=
name|js
expr_stmt|;
else|else
name|skipped
operator|=
literal|true
expr_stmt|;
block|}
comment|// if there were only basic code points, just return them
comment|// directly; don't do any encoding.
if|if
condition|(
operator|!
name|skipped
condition|)
return|return;
name|output
operator|->
name|truncate
argument_list|(
name|d
operator|-
name|output
operator|->
name|constData
argument_list|()
argument_list|)
expr_stmt|;
name|int
name|copied
init|=
name|output
operator|->
name|size
argument_list|()
operator|-
name|outLen
decl_stmt|;
comment|// h and b now contain the number of basic code points in input.
name|uint
name|b
init|=
name|copied
decl_stmt|;
name|uint
name|h
init|=
name|copied
decl_stmt|;
comment|// if basic code points were copied, add the delimiter character.
if|if
condition|(
name|h
operator|>
literal|0
condition|)
operator|*
name|output
operator|+=
name|QChar
argument_list|(
literal|0x2d
argument_list|)
expr_stmt|;
comment|// while there are still unprocessed non-basic code points left in
comment|// the input string...
while|while
condition|(
name|h
operator|<
operator|(
name|uint
operator|)
name|ucLength
condition|)
block|{
comment|// find the character in the input string with the lowest
comment|// unicode value.
name|uint
name|m
init|=
name|Q_MAXINT
decl_stmt|;
name|uint
name|j
decl_stmt|;
for|for
control|(
name|j
operator|=
literal|0
init|;
name|j
operator|<
operator|(
name|uint
operator|)
name|ucLength
condition|;
operator|++
name|j
control|)
block|{
if|if
condition|(
name|s
index|[
name|j
index|]
operator|.
name|unicode
argument_list|()
operator|>=
name|n
operator|&&
name|s
index|[
name|j
index|]
operator|.
name|unicode
argument_list|()
operator|<
name|m
condition|)
name|m
operator|=
operator|(
name|uint
operator|)
name|s
index|[
name|j
index|]
operator|.
name|unicode
argument_list|()
expr_stmt|;
block|}
comment|// reject out-of-bounds unicode characters
if|if
condition|(
name|m
operator|-
name|n
operator|>
operator|(
name|Q_MAXINT
operator|-
name|delta
operator|)
operator|/
operator|(
name|h
operator|+
literal|1
operator|)
condition|)
block|{
name|output
operator|->
name|truncate
argument_list|(
name|outLen
argument_list|)
expr_stmt|;
return|return;
comment|// punycode_overflow
block|}
name|delta
operator|+=
operator|(
name|m
operator|-
name|n
operator|)
operator|*
operator|(
name|h
operator|+
literal|1
operator|)
expr_stmt|;
name|n
operator|=
name|m
expr_stmt|;
comment|// for each code point in the input string
for|for
control|(
name|j
operator|=
literal|0
init|;
name|j
operator|<
operator|(
name|uint
operator|)
name|ucLength
condition|;
operator|++
name|j
control|)
block|{
comment|// increase delta until we reach the character with the
comment|// lowest unicode code. fail if delta overflows.
if|if
condition|(
name|s
index|[
name|j
index|]
operator|.
name|unicode
argument_list|()
operator|<
name|n
condition|)
block|{
operator|++
name|delta
expr_stmt|;
if|if
condition|(
operator|!
name|delta
condition|)
block|{
name|output
operator|->
name|truncate
argument_list|(
name|outLen
argument_list|)
expr_stmt|;
return|return;
comment|// punycode_overflow
block|}
block|}
comment|// if j is the index of the character with the lowest
comment|// unicode code...
if|if
condition|(
name|s
index|[
name|j
index|]
operator|.
name|unicode
argument_list|()
operator|==
name|n
condition|)
block|{
name|appendEncode
argument_list|(
name|output
argument_list|,
name|delta
argument_list|,
name|bias
argument_list|,
name|b
argument_list|,
name|h
argument_list|)
expr_stmt|;
block|}
block|}
operator|++
name|delta
expr_stmt|;
operator|++
name|n
expr_stmt|;
block|}
comment|// prepend ACE prefix
name|output
operator|->
name|insert
argument_list|(
name|outLen
argument_list|,
name|QStringLiteral
argument_list|(
literal|"xn--"
argument_list|)
argument_list|)
expr_stmt|;
return|return;
block|}
end_function
begin_function
DECL|function|qt_punycodeDecoder
name|Q_AUTOTEST_EXPORT
name|QString
name|qt_punycodeDecoder
parameter_list|(
specifier|const
name|QString
modifier|&
name|pc
parameter_list|)
block|{
name|uint
name|n
init|=
name|initial_n
decl_stmt|;
name|uint
name|i
init|=
literal|0
decl_stmt|;
name|uint
name|bias
init|=
name|initial_bias
decl_stmt|;
comment|// strip any ACE prefix
name|int
name|start
init|=
name|pc
operator|.
name|startsWith
argument_list|(
name|QLatin1String
argument_list|(
literal|"xn--"
argument_list|)
argument_list|)
condition|?
literal|4
else|:
literal|0
decl_stmt|;
if|if
condition|(
operator|!
name|start
condition|)
return|return
name|pc
return|;
comment|// find the last delimiter character '-' in the input array. copy
comment|// all data before this delimiter directly to the output array.
name|int
name|delimiterPos
init|=
name|pc
operator|.
name|lastIndexOf
argument_list|(
name|QChar
argument_list|(
literal|0x2d
argument_list|)
argument_list|)
decl_stmt|;
name|QString
name|output
init|=
name|delimiterPos
operator|<
literal|4
condition|?
name|QString
argument_list|()
else|:
name|pc
operator|.
name|mid
argument_list|(
name|start
argument_list|,
name|delimiterPos
operator|-
name|start
argument_list|)
decl_stmt|;
comment|// if a delimiter was found, skip to the position after it;
comment|// otherwise start at the front of the input string. everything
comment|// before the delimiter is assumed to be basic code points.
name|uint
name|cnt
init|=
name|delimiterPos
operator|+
literal|1
decl_stmt|;
comment|// loop through the rest of the input string, inserting non-basic
comment|// characters into output as we go.
while|while
condition|(
name|cnt
operator|<
operator|(
name|uint
operator|)
name|pc
operator|.
name|size
argument_list|()
condition|)
block|{
name|uint
name|oldi
init|=
name|i
decl_stmt|;
name|uint
name|w
init|=
literal|1
decl_stmt|;
comment|// find the next index for inserting a non-basic character.
for|for
control|(
name|uint
name|k
init|=
name|base
init|;
name|cnt
operator|<
operator|(
name|uint
operator|)
name|pc
operator|.
name|size
argument_list|()
condition|;
name|k
operator|+=
name|base
control|)
block|{
comment|// grab a character from the punycode input and find its
comment|// delta digit (each digit code is part of the
comment|// variable-length integer delta)
name|uint
name|digit
init|=
name|pc
operator|.
name|at
argument_list|(
name|cnt
operator|++
argument_list|)
operator|.
name|unicode
argument_list|()
decl_stmt|;
if|if
condition|(
name|digit
operator|-
literal|48
operator|<
literal|10
condition|)
name|digit
operator|-=
literal|22
expr_stmt|;
elseif|else
if|if
condition|(
name|digit
operator|-
literal|65
operator|<
literal|26
condition|)
name|digit
operator|-=
literal|65
expr_stmt|;
elseif|else
if|if
condition|(
name|digit
operator|-
literal|97
operator|<
literal|26
condition|)
name|digit
operator|-=
literal|97
expr_stmt|;
else|else
name|digit
operator|=
name|base
expr_stmt|;
comment|// reject out of range digits
if|if
condition|(
name|digit
operator|>=
name|base
operator|||
name|digit
operator|>
operator|(
name|Q_MAXINT
operator|-
name|i
operator|)
operator|/
name|w
condition|)
return|return
name|QStringLiteral
argument_list|(
literal|""
argument_list|)
return|;
name|i
operator|+=
operator|(
name|digit
operator|*
name|w
operator|)
expr_stmt|;
comment|// detect threshold to stop reading delta digits
name|uint
name|t
decl_stmt|;
if|if
condition|(
name|k
operator|<=
name|bias
condition|)
name|t
operator|=
name|tmin
expr_stmt|;
elseif|else
if|if
condition|(
name|k
operator|>=
name|bias
operator|+
name|tmax
condition|)
name|t
operator|=
name|tmax
expr_stmt|;
else|else
name|t
operator|=
name|k
operator|-
name|bias
expr_stmt|;
if|if
condition|(
name|digit
operator|<
name|t
condition|)
break|break;
name|w
operator|*=
operator|(
name|base
operator|-
name|t
operator|)
expr_stmt|;
block|}
comment|// find new bias and calculate the next non-basic code
comment|// character.
name|bias
operator|=
name|adapt
argument_list|(
name|i
operator|-
name|oldi
argument_list|,
name|output
operator|.
name|length
argument_list|()
operator|+
literal|1
argument_list|,
name|oldi
operator|==
literal|0
argument_list|)
expr_stmt|;
name|n
operator|+=
name|i
operator|/
operator|(
name|output
operator|.
name|length
argument_list|()
operator|+
literal|1
operator|)
expr_stmt|;
comment|// allow the deltas to wrap around
name|i
operator|%=
operator|(
name|output
operator|.
name|length
argument_list|()
operator|+
literal|1
operator|)
expr_stmt|;
comment|// insert the character n at position i
name|output
operator|.
name|insert
argument_list|(
operator|(
name|uint
operator|)
name|i
argument_list|,
name|QChar
argument_list|(
operator|(
name|ushort
operator|)
name|n
argument_list|)
argument_list|)
expr_stmt|;
operator|++
name|i
expr_stmt|;
block|}
return|return
name|output
return|;
block|}
end_function
begin_decl_stmt
DECL|variable|idn_whitelist
specifier|static
specifier|const
name|char
modifier|*
specifier|const
name|idn_whitelist
index|[]
init|=
block|{
literal|"ac"
block|,
literal|"ar"
block|,
literal|"asia"
block|,
literal|"at"
block|,
literal|"biz"
block|,
literal|"br"
block|,
literal|"cat"
block|,
literal|"ch"
block|,
literal|"cl"
block|,
literal|"cn"
block|,
literal|"com"
block|,
literal|"de"
block|,
literal|"dk"
block|,
literal|"es"
block|,
literal|"fi"
block|,
literal|"gr"
block|,
literal|"hu"
block|,
literal|"il"
block|,
literal|"info"
block|,
literal|"io"
block|,
literal|"is"
block|,
literal|"ir"
block|,
literal|"jp"
block|,
literal|"kr"
block|,
literal|"li"
block|,
literal|"lt"
block|,
literal|"lu"
block|,
literal|"lv"
block|,
literal|"museum"
block|,
literal|"name"
block|,
literal|"net"
block|,
literal|"no"
block|,
literal|"nu"
block|,
literal|"nz"
block|,
literal|"org"
block|,
literal|"pl"
block|,
literal|"pr"
block|,
literal|"se"
block|,
literal|"sh"
block|,
literal|"tel"
block|,
literal|"th"
block|,
literal|"tm"
block|,
literal|"tw"
block|,
literal|"ua"
block|,
literal|"vn"
block|,
literal|"xn--fiqs8s"
block|,
comment|// China
literal|"xn--fiqz9s"
block|,
comment|// China
literal|"xn--fzc2c9e2c"
block|,
comment|// Sri Lanka
literal|"xn--j6w193g"
block|,
comment|// Hong Kong
literal|"xn--kprw13d"
block|,
comment|// Taiwan
literal|"xn--kpry57d"
block|,
comment|// Taiwan
literal|"xn--mgba3a4f16a"
block|,
comment|// Iran
literal|"xn--mgba3a4fra"
block|,
comment|// Iran
literal|"xn--mgbaam7a8h"
block|,
comment|// UAE
literal|"xn--mgbayh7gpa"
block|,
comment|// Jordan
literal|"xn--mgberp4a5d4ar"
block|,
comment|// Saudi Arabia
literal|"xn--ogbpf8fl"
block|,
comment|// Syria
literal|"xn--p1ai"
block|,
comment|// Russian Federation
literal|"xn--wgbh1c"
block|,
comment|// Egypt
literal|"xn--wgbl6a"
block|,
comment|// Qatar
literal|"xn--xkc2al3hye2a"
comment|// Sri Lanka
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|idn_whitelist_size
specifier|static
specifier|const
name|size_t
name|idn_whitelist_size
init|=
sizeof|sizeof
name|idn_whitelist
operator|/
sizeof|sizeof
expr|*
name|idn_whitelist
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|user_idn_whitelist
specifier|static
name|QStringList
modifier|*
name|user_idn_whitelist
init|=
literal|0
decl_stmt|;
end_decl_stmt
begin_function
DECL|function|lessThan
specifier|static
name|bool
name|lessThan
parameter_list|(
specifier|const
name|QChar
modifier|*
name|a
parameter_list|,
name|int
name|l
parameter_list|,
specifier|const
name|char
modifier|*
name|c
parameter_list|)
block|{
specifier|const
name|ushort
modifier|*
name|uc
init|=
operator|(
specifier|const
name|ushort
operator|*
operator|)
name|a
decl_stmt|;
specifier|const
name|ushort
modifier|*
name|e
init|=
name|uc
operator|+
name|l
decl_stmt|;
if|if
condition|(
operator|!
name|c
operator|||
operator|*
name|c
operator|==
literal|0
condition|)
return|return
literal|false
return|;
while|while
condition|(
operator|*
name|c
condition|)
block|{
if|if
condition|(
name|uc
operator|==
name|e
operator|||
operator|*
name|uc
operator|!=
operator|*
name|c
condition|)
break|break;
operator|++
name|uc
expr_stmt|;
operator|++
name|c
expr_stmt|;
block|}
return|return
operator|(
name|uc
operator|==
name|e
condition|?
operator|*
name|c
else|:
operator|*
name|uc
operator|<
operator|*
name|c
operator|)
return|;
block|}
end_function
begin_function
DECL|function|equal
specifier|static
name|bool
name|equal
parameter_list|(
specifier|const
name|QChar
modifier|*
name|a
parameter_list|,
name|int
name|l
parameter_list|,
specifier|const
name|char
modifier|*
name|b
parameter_list|)
block|{
while|while
condition|(
name|l
operator|&&
name|a
operator|->
name|unicode
argument_list|()
operator|&&
operator|*
name|b
condition|)
block|{
if|if
condition|(
operator|*
name|a
operator|!=
name|QLatin1Char
argument_list|(
operator|*
name|b
argument_list|)
condition|)
return|return
literal|false
return|;
operator|++
name|a
expr_stmt|;
operator|++
name|b
expr_stmt|;
operator|--
name|l
expr_stmt|;
block|}
return|return
name|l
operator|==
literal|0
return|;
block|}
end_function
begin_function
DECL|function|qt_is_idn_enabled
specifier|static
name|bool
name|qt_is_idn_enabled
parameter_list|(
specifier|const
name|QString
modifier|&
name|domain
parameter_list|)
block|{
name|int
name|idx
init|=
name|domain
operator|.
name|lastIndexOf
argument_list|(
name|QLatin1Char
argument_list|(
literal|'.'
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|idx
operator|==
operator|-
literal|1
condition|)
return|return
literal|false
return|;
name|int
name|len
init|=
name|domain
operator|.
name|size
argument_list|()
operator|-
name|idx
operator|-
literal|1
decl_stmt|;
name|QString
name|tldString
argument_list|(
name|domain
operator|.
name|constData
argument_list|()
operator|+
name|idx
operator|+
literal|1
argument_list|,
name|len
argument_list|)
decl_stmt|;
name|qt_nameprep
argument_list|(
operator|&
name|tldString
argument_list|,
literal|0
argument_list|)
expr_stmt|;
specifier|const
name|QChar
modifier|*
name|tld
init|=
name|tldString
operator|.
name|constData
argument_list|()
decl_stmt|;
if|if
condition|(
name|user_idn_whitelist
condition|)
return|return
name|user_idn_whitelist
operator|->
name|contains
argument_list|(
name|tldString
argument_list|)
return|;
name|int
name|l
init|=
literal|0
decl_stmt|;
name|int
name|r
init|=
name|idn_whitelist_size
operator|-
literal|1
decl_stmt|;
name|int
name|i
init|=
operator|(
name|l
operator|+
name|r
operator|+
literal|1
operator|)
operator|/
literal|2
decl_stmt|;
while|while
condition|(
name|r
operator|!=
name|l
condition|)
block|{
if|if
condition|(
name|lessThan
argument_list|(
name|tld
argument_list|,
name|len
argument_list|,
name|idn_whitelist
index|[
name|i
index|]
argument_list|)
condition|)
name|r
operator|=
name|i
operator|-
literal|1
expr_stmt|;
else|else
name|l
operator|=
name|i
expr_stmt|;
name|i
operator|=
operator|(
name|l
operator|+
name|r
operator|+
literal|1
operator|)
operator|/
literal|2
expr_stmt|;
block|}
return|return
name|equal
argument_list|(
name|tld
argument_list|,
name|len
argument_list|,
name|idn_whitelist
index|[
name|i
index|]
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|isDotDelimiter
specifier|static
specifier|inline
name|bool
name|isDotDelimiter
parameter_list|(
name|ushort
name|uc
parameter_list|)
block|{
comment|// IDNA / rfc3490 describes these four delimiters used for
comment|// separating labels in unicode international domain
comment|// names.
return|return
name|uc
operator|==
literal|0x2e
operator|||
name|uc
operator|==
literal|0x3002
operator|||
name|uc
operator|==
literal|0xff0e
operator|||
name|uc
operator|==
literal|0xff61
return|;
block|}
end_function
begin_function
DECL|function|nextDotDelimiter
specifier|static
name|int
name|nextDotDelimiter
parameter_list|(
specifier|const
name|QString
modifier|&
name|domain
parameter_list|,
name|int
name|from
init|=
literal|0
parameter_list|)
block|{
specifier|const
name|QChar
modifier|*
name|b
init|=
name|domain
operator|.
name|unicode
argument_list|()
decl_stmt|;
specifier|const
name|QChar
modifier|*
name|ch
init|=
name|b
operator|+
name|from
decl_stmt|;
specifier|const
name|QChar
modifier|*
name|e
init|=
name|b
operator|+
name|domain
operator|.
name|length
argument_list|()
decl_stmt|;
while|while
condition|(
name|ch
operator|<
name|e
condition|)
block|{
if|if
condition|(
name|isDotDelimiter
argument_list|(
name|ch
operator|->
name|unicode
argument_list|()
argument_list|)
condition|)
break|break;
else|else
operator|++
name|ch
expr_stmt|;
block|}
return|return
name|ch
operator|-
name|b
return|;
block|}
end_function
begin_function
DECL|function|qt_ACE_do
name|QString
name|qt_ACE_do
parameter_list|(
specifier|const
name|QString
modifier|&
name|domain
parameter_list|,
name|AceOperation
name|op
parameter_list|)
block|{
if|if
condition|(
name|domain
operator|.
name|isEmpty
argument_list|()
condition|)
return|return
name|domain
return|;
name|QString
name|result
decl_stmt|;
name|result
operator|.
name|reserve
argument_list|(
name|domain
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
specifier|const
name|bool
name|isIdnEnabled
init|=
name|op
operator|==
name|NormalizeAce
condition|?
name|qt_is_idn_enabled
argument_list|(
name|domain
argument_list|)
else|:
literal|false
decl_stmt|;
name|int
name|lastIdx
init|=
literal|0
decl_stmt|;
name|QString
name|aceForm
decl_stmt|;
comment|// this variable is here for caching
while|while
condition|(
literal|1
condition|)
block|{
name|int
name|idx
init|=
name|nextDotDelimiter
argument_list|(
name|domain
argument_list|,
name|lastIdx
argument_list|)
decl_stmt|;
name|int
name|labelLength
init|=
name|idx
operator|-
name|lastIdx
decl_stmt|;
if|if
condition|(
name|labelLength
operator|==
literal|0
condition|)
block|{
if|if
condition|(
name|idx
operator|==
name|domain
operator|.
name|length
argument_list|()
condition|)
break|break;
if|if
condition|(
name|idx
operator|>
literal|0
condition|)
return|return
name|QString
argument_list|()
return|;
comment|// two delimiters in a row -- empty label not allowed
block|}
comment|// RFC 3490 says, about the ToASCII operation:
comment|//   3. If the UseSTD3ASCIIRules flag is set, then perform these checks:
comment|//
comment|//     (a) Verify the absence of non-LDH ASCII code points; that is, the
comment|//         absence of 0..2C, 2E..2F, 3A..40, 5B..60, and 7B..7F.
comment|//
comment|//     (b) Verify the absence of leading and trailing hyphen-minus; that
comment|//         is, the absence of U+002D at the beginning and end of the
comment|//         sequence.
comment|// and:
comment|//   8. Verify that the number of code points is in the range 1 to 63
comment|//      inclusive.
comment|// copy the label to the destination, which also serves as our scratch area, lowercasing it
name|int
name|prevLen
init|=
name|result
operator|.
name|size
argument_list|()
decl_stmt|;
name|bool
name|simple
init|=
literal|true
decl_stmt|;
name|result
operator|.
name|resize
argument_list|(
name|prevLen
operator|+
name|labelLength
argument_list|)
expr_stmt|;
block|{
name|QChar
modifier|*
name|out
init|=
name|result
operator|.
name|data
argument_list|()
operator|+
name|prevLen
decl_stmt|;
specifier|const
name|QChar
modifier|*
name|in
init|=
name|domain
operator|.
name|constData
argument_list|()
operator|+
name|lastIdx
decl_stmt|;
specifier|const
name|QChar
modifier|*
name|e
init|=
name|in
operator|+
name|labelLength
decl_stmt|;
for|for
control|(
init|;
name|in
operator|<
name|e
condition|;
operator|++
name|in
operator|,
operator|++
name|out
control|)
block|{
name|ushort
name|uc
init|=
name|in
operator|->
name|unicode
argument_list|()
decl_stmt|;
if|if
condition|(
name|uc
operator|>
literal|0x7f
condition|)
name|simple
operator|=
literal|false
expr_stmt|;
if|if
condition|(
name|uc
operator|>=
literal|'A'
operator|&&
name|uc
operator|<=
literal|'Z'
condition|)
operator|*
name|out
operator|=
name|QChar
argument_list|(
name|uc
operator||
literal|0x20
argument_list|)
expr_stmt|;
else|else
operator|*
name|out
operator|=
operator|*
name|in
expr_stmt|;
block|}
block|}
if|if
condition|(
name|simple
operator|&&
name|labelLength
operator|>
literal|6
condition|)
block|{
comment|// ACE form domains contain only ASCII characters, but we can't consider them simple
comment|// is this an ACE form?
comment|// the shortest valid ACE domain is 6 characters long (U+0080 would be 1, but it's not allowed)
specifier|static
specifier|const
name|ushort
name|acePrefixUtf16
index|[]
init|=
block|{
literal|'x'
block|,
literal|'n'
block|,
literal|'-'
block|,
literal|'-'
block|}
decl_stmt|;
if|if
condition|(
name|memcmp
argument_list|(
name|result
operator|.
name|constData
argument_list|()
operator|+
name|prevLen
argument_list|,
name|acePrefixUtf16
argument_list|,
sizeof|sizeof
name|acePrefixUtf16
argument_list|)
operator|==
literal|0
condition|)
name|simple
operator|=
literal|false
expr_stmt|;
block|}
if|if
condition|(
name|simple
condition|)
block|{
comment|// fastest case: this is the common case (non IDN-domains)
comment|// so we're done
if|if
condition|(
operator|!
name|qt_check_std3rules
argument_list|(
name|result
operator|.
name|constData
argument_list|()
operator|+
name|prevLen
argument_list|,
name|labelLength
argument_list|)
condition|)
return|return
name|QString
argument_list|()
return|;
block|}
else|else
block|{
comment|// Punycode encoding and decoding cannot be done in-place
comment|// That means we need one or two temporaries
name|qt_nameprep
argument_list|(
operator|&
name|result
argument_list|,
name|prevLen
argument_list|)
expr_stmt|;
name|labelLength
operator|=
name|result
operator|.
name|length
argument_list|()
operator|-
name|prevLen
expr_stmt|;
name|int
name|toReserve
init|=
name|labelLength
operator|+
literal|4
operator|+
literal|6
decl_stmt|;
comment|// "xn--" plus some extra bytes
name|aceForm
operator|.
name|resize
argument_list|(
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
name|toReserve
operator|>
name|aceForm
operator|.
name|capacity
argument_list|()
condition|)
name|aceForm
operator|.
name|reserve
argument_list|(
name|toReserve
argument_list|)
expr_stmt|;
name|qt_punycodeEncoder
argument_list|(
name|result
operator|.
name|constData
argument_list|()
operator|+
name|prevLen
argument_list|,
name|result
operator|.
name|size
argument_list|()
operator|-
name|prevLen
argument_list|,
operator|&
name|aceForm
argument_list|)
expr_stmt|;
comment|// We use resize()+memcpy() here because we're overwriting the data we've copied
if|if
condition|(
name|isIdnEnabled
condition|)
block|{
name|QString
name|tmp
init|=
name|qt_punycodeDecoder
argument_list|(
name|aceForm
argument_list|)
decl_stmt|;
if|if
condition|(
name|tmp
operator|.
name|isEmpty
argument_list|()
condition|)
return|return
name|QString
argument_list|()
return|;
comment|// shouldn't happen, since we've just punycode-encoded it
name|result
operator|.
name|resize
argument_list|(
name|prevLen
operator|+
name|tmp
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|memcpy
argument_list|(
name|result
operator|.
name|data
argument_list|()
operator|+
name|prevLen
argument_list|,
name|tmp
operator|.
name|constData
argument_list|()
argument_list|,
name|tmp
operator|.
name|size
argument_list|()
operator|*
sizeof|sizeof
argument_list|(
name|QChar
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|resize
argument_list|(
name|prevLen
operator|+
name|aceForm
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|memcpy
argument_list|(
name|result
operator|.
name|data
argument_list|()
operator|+
name|prevLen
argument_list|,
name|aceForm
operator|.
name|constData
argument_list|()
argument_list|,
name|aceForm
operator|.
name|size
argument_list|()
operator|*
sizeof|sizeof
argument_list|(
name|QChar
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|qt_check_std3rules
argument_list|(
name|aceForm
operator|.
name|constData
argument_list|()
argument_list|,
name|aceForm
operator|.
name|size
argument_list|()
argument_list|)
condition|)
return|return
name|QString
argument_list|()
return|;
block|}
name|lastIdx
operator|=
name|idx
operator|+
literal|1
expr_stmt|;
if|if
condition|(
name|lastIdx
operator|<
name|domain
operator|.
name|size
argument_list|()
operator|+
literal|1
condition|)
name|result
operator|+=
name|QLatin1Char
argument_list|(
literal|'.'
argument_list|)
expr_stmt|;
else|else
break|break;
block|}
return|return
name|result
return|;
block|}
end_function
begin_comment
comment|/*!     \since 4.2      Returns the current whitelist of top-level domains that are allowed     to have non-ASCII characters in their compositions.      See setIdnWhitelist() for the rationale of this list. */
end_comment
begin_function
DECL|function|idnWhitelist
name|QStringList
name|QUrl
operator|::
name|idnWhitelist
parameter_list|()
block|{
if|if
condition|(
name|user_idn_whitelist
condition|)
return|return
operator|*
name|user_idn_whitelist
return|;
name|QStringList
name|list
decl_stmt|;
name|list
operator|.
name|reserve
argument_list|(
name|idn_whitelist_size
argument_list|)
expr_stmt|;
name|unsigned
name|int
name|i
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|i
operator|<
name|idn_whitelist_size
condition|)
block|{
name|list
operator|<<
name|QLatin1String
argument_list|(
name|idn_whitelist
index|[
name|i
index|]
argument_list|)
expr_stmt|;
operator|++
name|i
expr_stmt|;
block|}
return|return
name|list
return|;
block|}
end_function
begin_comment
comment|/*!     \since 4.2      Sets the whitelist of Top-Level Domains (TLDs) that are allowed to have     non-ASCII characters in domains to the value of \a list.      Note that if you call this function, you need to do so \e before     you start any threads that might access idnWhitelist().      Qt has comes a default list that contains the Internet top-level domains     that have published support for Internationalized Domain Names (IDNs)     and rules to guarantee that no deception can happen between similarly-looking     characters (such as the Latin lowercase letter \c 'a' and the Cyrillic     equivalent, which in most fonts are visually identical).      This list is periodically maintained, as registrars publish new rules.      This function is provided for those who need to manipulate the list, in     order to add or remove a TLD. It is not recommended to change its value     for purposes other than testing, as it may expose users to security risks. */
end_comment
begin_function
DECL|function|setIdnWhitelist
name|void
name|QUrl
operator|::
name|setIdnWhitelist
parameter_list|(
specifier|const
name|QStringList
modifier|&
name|list
parameter_list|)
block|{
if|if
condition|(
operator|!
name|user_idn_whitelist
condition|)
name|user_idn_whitelist
operator|=
operator|new
name|QStringList
expr_stmt|;
operator|*
name|user_idn_whitelist
operator|=
name|list
expr_stmt|;
block|}
end_function
begin_macro
name|QT_END_NAMESPACE
end_macro
end_unit
