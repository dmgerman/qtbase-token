begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the QtCore module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QTEMPORARYFILE_H
end_ifndef
begin_define
DECL|macro|QTEMPORARYFILE_H
define|#
directive|define
name|QTEMPORARYFILE_H
end_define
begin_include
include|#
directive|include
file|<QtCore/qiodevice.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qfile.h>
end_include
begin_ifdef
ifdef|#
directive|ifdef
name|open
end_ifdef
begin_error
error|#
directive|error
error|qtemporaryfile.h must be included before any header file that defines open
end_error
begin_endif
endif|#
directive|endif
end_endif
begin_decl_stmt
name|QT_BEGIN_HEADER
name|QT_BEGIN_NAMESPACE
ifndef|#
directive|ifndef
name|QT_NO_TEMPORARYFILE
DECL|variable|QTemporaryFilePrivate
name|class
name|QTemporaryFilePrivate
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|Q_CORE_EXPORT
name|QTemporaryFile
range|:
name|public
name|QFile
block|{
ifndef|#
directive|ifndef
name|QT_NO_QOBJECT
name|Q_OBJECT
endif|#
directive|endif
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QTemporaryFile
argument_list|)
name|public
operator|:
name|QTemporaryFile
argument_list|()
block|;
name|explicit
name|QTemporaryFile
argument_list|(
specifier|const
name|QString
operator|&
name|templateName
argument_list|)
block|;
ifndef|#
directive|ifndef
name|QT_NO_QOBJECT
name|explicit
name|QTemporaryFile
argument_list|(
name|QObject
operator|*
name|parent
argument_list|)
block|;
name|QTemporaryFile
argument_list|(
specifier|const
name|QString
operator|&
name|templateName
argument_list|,
name|QObject
operator|*
name|parent
argument_list|)
block|;
endif|#
directive|endif
operator|~
name|QTemporaryFile
argument_list|()
block|;
name|bool
name|autoRemove
argument_list|()
specifier|const
block|;
name|void
name|setAutoRemove
argument_list|(
argument|bool b
argument_list|)
block|;
comment|// ### Hides open(flags)
name|bool
name|open
argument_list|()
block|{
return|return
name|open
argument_list|(
name|QIODevice
operator|::
name|ReadWrite
argument_list|)
return|;
block|}
name|QString
name|fileName
argument_list|()
specifier|const
block|;
name|QString
name|fileTemplate
argument_list|()
specifier|const
block|;
name|void
name|setFileTemplate
argument_list|(
specifier|const
name|QString
operator|&
name|name
argument_list|)
block|;
if|#
directive|if
name|QT_DEPRECATED_SINCE
argument_list|(
literal|5
operator|,
literal|1
argument_list|)
name|QT_DEPRECATED
specifier|inline
specifier|static
name|QTemporaryFile
operator|*
name|createLocalFile
argument_list|(
argument|const QString&fileName
argument_list|)
block|{
return|return
name|createNativeFile
argument_list|(
name|fileName
argument_list|)
return|;
block|}
name|QT_DEPRECATED
specifier|inline
specifier|static
name|QTemporaryFile
operator|*
name|createLocalFile
argument_list|(
argument|QFile&file
argument_list|)
block|{
return|return
name|createNativeFile
argument_list|(
name|file
argument_list|)
return|;
block|}
endif|#
directive|endif
specifier|inline
specifier|static
name|QTemporaryFile
operator|*
name|createNativeFile
argument_list|(
argument|const QString&fileName
argument_list|)
block|{
name|QFile
name|file
argument_list|(
name|fileName
argument_list|)
block|;
return|return
name|createNativeFile
argument_list|(
name|file
argument_list|)
return|;
block|}
specifier|static
name|QTemporaryFile
operator|*
name|createNativeFile
argument_list|(
name|QFile
operator|&
name|file
argument_list|)
block|;
name|protected
operator|:
name|bool
name|open
argument_list|(
argument|OpenMode flags
argument_list|)
block|;
name|private
operator|:
name|friend
name|class
name|QFile
block|;
name|Q_DISABLE_COPY
argument_list|(
argument|QTemporaryFile
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_TEMPORARYFILE
end_comment
begin_expr_stmt
name|QT_END_NAMESPACE
name|QT_END_HEADER
end_expr_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QTEMPORARYFILE_H
end_comment
end_unit
