begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the QtCore module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QURL_P_H
end_ifndef
begin_define
DECL|macro|QURL_P_H
define|#
directive|define
name|QURL_P_H
end_define
begin_comment
comment|//
end_comment
begin_comment
comment|//  W A R N I N G
end_comment
begin_comment
comment|//  -------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// This file is not part of the Qt API. It exists for the convenience of
end_comment
begin_comment
comment|// qurl*.cpp This header file may change from version to version without
end_comment
begin_comment
comment|// notice, or even be removed.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// We mean it.
end_comment
begin_comment
comment|//
end_comment
begin_include
include|#
directive|include
file|"qurl.h"
end_include
begin_macro
name|QT_BEGIN_NAMESPACE
end_macro
begin_struct
DECL|struct|QUrlErrorInfo
struct|struct
name|QUrlErrorInfo
block|{
DECL|function|QUrlErrorInfo
specifier|inline
name|QUrlErrorInfo
argument_list|()
operator|:
name|_source
argument_list|(
literal|0
argument_list|)
operator|,
name|_message
argument_list|(
literal|0
argument_list|)
operator|,
name|_expected
argument_list|(
literal|0
argument_list|)
operator|,
name|_found
argument_list|(
literal|0
argument_list|)
block|{ }
DECL|member|_source
specifier|const
name|char
operator|*
name|_source
expr_stmt|;
DECL|member|_message
specifier|const
name|char
modifier|*
name|_message
decl_stmt|;
DECL|member|_expected
name|char
name|_expected
decl_stmt|;
DECL|member|_found
name|char
name|_found
decl_stmt|;
DECL|function|setParams
specifier|inline
name|void
name|setParams
parameter_list|(
specifier|const
name|char
modifier|*
name|source
parameter_list|,
specifier|const
name|char
modifier|*
name|message
parameter_list|,
name|char
name|expected
parameter_list|,
name|char
name|found
parameter_list|)
block|{
name|_source
operator|=
name|source
expr_stmt|;
name|_message
operator|=
name|message
expr_stmt|;
name|_expected
operator|=
name|expected
expr_stmt|;
name|_found
operator|=
name|found
expr_stmt|;
block|}
block|}
struct|;
end_struct
begin_struct
DECL|struct|QUrlParseData
struct|struct
name|QUrlParseData
block|{
DECL|member|scheme
specifier|const
name|char
modifier|*
name|scheme
decl_stmt|;
DECL|member|schemeLength
name|int
name|schemeLength
decl_stmt|;
DECL|member|userInfo
specifier|const
name|char
modifier|*
name|userInfo
decl_stmt|;
DECL|member|userInfoDelimIndex
name|int
name|userInfoDelimIndex
decl_stmt|;
DECL|member|userInfoLength
name|int
name|userInfoLength
decl_stmt|;
DECL|member|host
specifier|const
name|char
modifier|*
name|host
decl_stmt|;
DECL|member|hostLength
name|int
name|hostLength
decl_stmt|;
DECL|member|port
name|int
name|port
decl_stmt|;
DECL|member|path
specifier|const
name|char
modifier|*
name|path
decl_stmt|;
DECL|member|pathLength
name|int
name|pathLength
decl_stmt|;
DECL|member|query
specifier|const
name|char
modifier|*
name|query
decl_stmt|;
DECL|member|queryLength
name|int
name|queryLength
decl_stmt|;
DECL|member|fragment
specifier|const
name|char
modifier|*
name|fragment
decl_stmt|;
DECL|member|fragmentLength
name|int
name|fragmentLength
decl_stmt|;
DECL|member|errorInfo
name|QUrlErrorInfo
modifier|*
name|errorInfo
decl_stmt|;
block|}
struct|;
end_struct
begin_comment
comment|// in qurlrecode.cpp
end_comment
begin_decl_stmt
specifier|extern
name|Q_AUTOTEST_EXPORT
name|int
name|qt_urlRecode
argument_list|(
name|QString
operator|&
name|appendTo
argument_list|,
specifier|const
name|QChar
operator|*
name|begin
argument_list|,
specifier|const
name|QChar
operator|*
name|end
argument_list|,
name|QUrl
operator|::
name|ComponentFormattingOptions
name|encoding
argument_list|,
specifier|const
name|ushort
operator|*
name|tableModifications
argument_list|)
decl_stmt|;
end_decl_stmt
begin_comment
comment|// in qurlidna.cpp
end_comment
begin_enum
DECL|enum|AceOperation
DECL|enumerator|ToAceOnly
DECL|enumerator|NormalizeAce
enum|enum
name|AceOperation
block|{
name|ToAceOnly
block|,
name|NormalizeAce
block|}
enum|;
end_enum
begin_function_decl
specifier|extern
name|QString
name|qt_ACE_do
parameter_list|(
specifier|const
name|QString
modifier|&
name|domain
parameter_list|,
name|AceOperation
name|op
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
specifier|extern
name|Q_AUTOTEST_EXPORT
name|void
name|qt_nameprep
parameter_list|(
name|QString
modifier|*
name|source
parameter_list|,
name|int
name|from
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
specifier|extern
name|Q_AUTOTEST_EXPORT
name|bool
name|qt_check_std3rules
parameter_list|(
specifier|const
name|QChar
modifier|*
name|uc
parameter_list|,
name|int
name|len
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
specifier|extern
name|Q_AUTOTEST_EXPORT
name|void
name|qt_punycodeEncoder
parameter_list|(
specifier|const
name|QChar
modifier|*
name|s
parameter_list|,
name|int
name|ucLength
parameter_list|,
name|QString
modifier|*
name|output
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
specifier|extern
name|Q_AUTOTEST_EXPORT
name|QString
name|qt_punycodeDecoder
parameter_list|(
specifier|const
name|QString
modifier|&
name|pc
parameter_list|)
function_decl|;
end_function_decl
begin_comment
comment|// in qurlparser.cpp
end_comment
begin_function_decl
specifier|extern
name|bool
name|qt_urlParse
parameter_list|(
specifier|const
name|char
modifier|*
name|ptr
parameter_list|,
name|QUrlParseData
modifier|&
name|parseData
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
specifier|extern
name|bool
name|qt_isValidUrlIP
parameter_list|(
specifier|const
name|char
modifier|*
name|ptr
parameter_list|)
function_decl|;
end_function_decl
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QURL_P_H
end_comment
end_unit
