begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the QtCore module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 3 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL3 included in the ** packaging of this file. Please review the following information to ** ensure the GNU Lesser General Public License version 3 requirements ** will be met: https://www.gnu.org/licenses/lgpl-3.0.html. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 2.0 or (at your option) the GNU General ** Public license version 3 or any later version approved by the KDE Free ** Qt Foundation. The licenses are as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL2 and LICENSE.GPL3 ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-2.0.html and ** https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QSTANDARDPATHS_H
end_ifndef
begin_define
DECL|macro|QSTANDARDPATHS_H
define|#
directive|define
name|QSTANDARDPATHS_H
end_define
begin_include
include|#
directive|include
file|<QtCore/qstringlist.h>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
ifndef|#
directive|ifndef
name|QT_NO_STANDARDPATHS
name|class
name|Q_CORE_EXPORT
name|QStandardPaths
block|{
name|public
label|:
comment|// Do not re-order, must match QDesktopServices
enum|enum
name|StandardLocation
block|{
name|DesktopLocation
block|,
name|DocumentsLocation
block|,
name|FontsLocation
block|,
name|ApplicationsLocation
block|,
name|MusicLocation
block|,
name|MoviesLocation
block|,
name|PicturesLocation
block|,
name|TempLocation
block|,
name|HomeLocation
block|,
name|DataLocation
block|,
name|CacheLocation
block|,
name|GenericDataLocation
block|,
name|RuntimeLocation
block|,
name|ConfigLocation
block|,
name|DownloadLocation
block|,
name|GenericCacheLocation
block|,
name|GenericConfigLocation
block|,
name|AppDataLocation
block|,
name|AppConfigLocation
block|,
name|AppLocalDataLocation
init|=
name|DataLocation
block|}
enum|;
specifier|static
name|QString
name|writableLocation
parameter_list|(
name|StandardLocation
name|type
parameter_list|)
function_decl|;
specifier|static
name|QStringList
name|standardLocations
parameter_list|(
name|StandardLocation
name|type
parameter_list|)
function_decl|;
enum|enum
name|LocateOption
block|{
name|LocateFile
init|=
literal|0x0
block|,
name|LocateDirectory
init|=
literal|0x1
block|}
enum|;
name|Q_DECLARE_FLAGS
argument_list|(
argument|LocateOptions
argument_list|,
argument|LocateOption
argument_list|)
specifier|static
name|QString
name|locate
parameter_list|(
name|StandardLocation
name|type
parameter_list|,
specifier|const
name|QString
modifier|&
name|fileName
parameter_list|,
name|LocateOptions
name|options
init|=
name|LocateFile
parameter_list|)
function_decl|;
specifier|static
name|QStringList
name|locateAll
parameter_list|(
name|StandardLocation
name|type
parameter_list|,
specifier|const
name|QString
modifier|&
name|fileName
parameter_list|,
name|LocateOptions
name|options
init|=
name|LocateFile
parameter_list|)
function_decl|;
ifndef|#
directive|ifndef
name|QT_BOOTSTRAPPED
specifier|static
name|QString
name|displayName
parameter_list|(
name|StandardLocation
name|type
parameter_list|)
function_decl|;
endif|#
directive|endif
specifier|static
name|QString
name|findExecutable
parameter_list|(
specifier|const
name|QString
modifier|&
name|executableName
parameter_list|,
specifier|const
name|QStringList
modifier|&
name|paths
init|=
name|QStringList
argument_list|()
parameter_list|)
function_decl|;
if|#
directive|if
name|QT_DEPRECATED_SINCE
argument_list|(
literal|5
operator|,
literal|2
argument_list|)
specifier|static
name|QT_DEPRECATED
name|void
name|enableTestMode
parameter_list|(
name|bool
name|testMode
parameter_list|)
function_decl|;
endif|#
directive|endif
specifier|static
name|void
name|setTestModeEnabled
parameter_list|(
name|bool
name|testMode
parameter_list|)
function_decl|;
specifier|static
name|bool
name|isTestModeEnabled
parameter_list|()
function_decl|;
name|private
label|:
comment|// prevent construction
name|QStandardPaths
argument_list|()
expr_stmt|;
operator|~
name|QStandardPaths
argument_list|()
expr_stmt|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_STANDARDPATHS
end_comment
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QSTANDARDPATHS_H
end_comment
end_unit
