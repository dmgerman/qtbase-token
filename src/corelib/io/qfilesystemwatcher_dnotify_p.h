begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the QtCore module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** No Commercial Usage ** This file contains pre-release code and may not be distributed. ** You may use this file in accordance with the terms and conditions ** contained in the Technology Preview License Agreement accompanying ** this package. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights.  These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** If you have questions regarding the use of this file, please contact ** Nokia at qt-info@nokia.com. ** ** ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QFILESYSTEMWATCHER_DNOTIFY_P_H
end_ifndef
begin_define
DECL|macro|QFILESYSTEMWATCHER_DNOTIFY_P_H
define|#
directive|define
name|QFILESYSTEMWATCHER_DNOTIFY_P_H
end_define
begin_comment
comment|//
end_comment
begin_comment
comment|//  W A R N I N G
end_comment
begin_comment
comment|//  -------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// This file is not part of the Qt API.  It exists for the convenience
end_comment
begin_comment
comment|// of the QLibrary class.  This header file may change from
end_comment
begin_comment
comment|// version to version without notice, or even be removed.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// We mean it.
end_comment
begin_comment
comment|//
end_comment
begin_include
include|#
directive|include
file|"qfilesystemwatcher_p.h"
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_FILESYSTEMWATCHER
end_ifndef
begin_include
include|#
directive|include
file|<qmutex.h>
end_include
begin_include
include|#
directive|include
file|<qhash.h>
end_include
begin_include
include|#
directive|include
file|<qdatetime.h>
end_include
begin_include
include|#
directive|include
file|<qfile.h>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
name|class
name|QDnotifyFileSystemWatcherEngine
range|:
name|public
name|QFileSystemWatcherEngine
block|{
name|Q_OBJECT
name|public
operator|:
name|virtual
operator|~
name|QDnotifyFileSystemWatcherEngine
argument_list|()
block|;
specifier|static
name|QDnotifyFileSystemWatcherEngine
operator|*
name|create
argument_list|()
block|;
name|void
name|run
argument_list|()
block|;
name|QStringList
name|addPaths
argument_list|(
specifier|const
name|QStringList
operator|&
name|paths
argument_list|,
name|QStringList
operator|*
name|files
argument_list|,
name|QStringList
operator|*
name|directories
argument_list|)
block|;
name|QStringList
name|removePaths
argument_list|(
specifier|const
name|QStringList
operator|&
name|paths
argument_list|,
name|QStringList
operator|*
name|files
argument_list|,
name|QStringList
operator|*
name|directories
argument_list|)
block|;
name|void
name|stop
argument_list|()
block|;
name|private
name|Q_SLOTS
operator|:
name|void
name|refresh
argument_list|(
name|int
argument_list|)
block|;
name|private
operator|:
expr|struct
name|Directory
block|{
name|Directory
argument_list|()
operator|:
name|fd
argument_list|(
literal|0
argument_list|)
block|,
name|parentFd
argument_list|(
literal|0
argument_list|)
block|,
name|isMonitored
argument_list|(
argument|false
argument_list|)
block|{}
name|Directory
argument_list|(
specifier|const
name|Directory
operator|&
name|o
argument_list|)
operator|:
name|path
argument_list|(
name|o
operator|.
name|path
argument_list|)
block|,
name|fd
argument_list|(
name|o
operator|.
name|fd
argument_list|)
block|,
name|parentFd
argument_list|(
name|o
operator|.
name|parentFd
argument_list|)
block|,
name|isMonitored
argument_list|(
name|o
operator|.
name|isMonitored
argument_list|)
block|,
name|files
argument_list|(
argument|o.files
argument_list|)
block|{}
name|QString
name|path
block|;
name|int
name|fd
block|;
name|int
name|parentFd
block|;
name|bool
name|isMonitored
block|;          struct
name|File
block|{
name|File
argument_list|()
operator|:
name|ownerId
argument_list|(
literal|0u
argument_list|)
block|,
name|groupId
argument_list|(
literal|0u
argument_list|)
block|,
name|permissions
argument_list|(
literal|0u
argument_list|)
block|{ }
name|File
argument_list|(
specifier|const
name|File
operator|&
name|o
argument_list|)
operator|:
name|path
argument_list|(
name|o
operator|.
name|path
argument_list|)
block|,
name|ownerId
argument_list|(
name|o
operator|.
name|ownerId
argument_list|)
block|,
name|groupId
argument_list|(
name|o
operator|.
name|groupId
argument_list|)
block|,
name|permissions
argument_list|(
name|o
operator|.
name|permissions
argument_list|)
block|,
name|lastWrite
argument_list|(
argument|o.lastWrite
argument_list|)
block|{}
name|QString
name|path
block|;
name|bool
name|updateInfo
argument_list|()
block|;
name|uint
name|ownerId
block|;
name|uint
name|groupId
block|;
name|QFile
operator|::
name|Permissions
name|permissions
block|;
name|QDateTime
name|lastWrite
block|;         }
block|;
name|QList
operator|<
name|File
operator|>
name|files
block|;     }
block|;
name|QDnotifyFileSystemWatcherEngine
argument_list|()
block|;
name|QMutex
name|mutex
block|;
name|QHash
operator|<
name|QString
block|,
name|int
operator|>
name|pathToFD
block|;
name|QHash
operator|<
name|int
block|,
name|Directory
operator|>
name|fdToDirectory
block|;
name|QHash
operator|<
name|int
block|,
name|int
operator|>
name|parentToFD
block|; }
decl_stmt|;
end_decl_stmt
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_FILESYSTEMWATCHER
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QFILESYSTEMWATCHER_DNOTIFY_P_H
end_comment
end_unit
