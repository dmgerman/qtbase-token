begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the QtCore module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|__E32_COMMON_H__
end_ifndef
begin_define
DECL|macro|__E32_COMMON_H__
define|#
directive|define
name|__E32_COMMON_H__
end_define
begin_ifdef
ifdef|#
directive|ifdef
name|__KERNEL_MODE__
end_ifdef
begin_include
include|#
directive|include
file|<e32cmn.h>
end_include
begin_include
include|#
directive|include
file|<e32panic.h>
end_include
begin_include
include|#
directive|include
file|"u32std.h"
end_include
begin_else
else|#
directive|else
end_else
begin_include
include|#
directive|include
file|<e32std.h>
end_include
begin_include
include|#
directive|include
file|<e32base.h>
end_include
begin_include
include|#
directive|include
file|<e32math.h>
end_include
begin_include
include|#
directive|include
file|<e32svr.h>
end_include
begin_include
include|#
directive|include
file|<e32ver.h>
end_include
begin_include
include|#
directive|include
file|<e32hal.h>
end_include
begin_include
include|#
directive|include
file|<e32panic.h>
end_include
begin_comment
comment|// backport of Symbian^4 allocator to Symbian^3 SDK does not contain u32exec.h
end_comment
begin_comment
comment|//#include<u32exec.h>
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_function_decl
name|GLREF_C
name|void
name|Panic
parameter_list|(
name|TCdtPanic
name|aPanic
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|GLDEF_C
name|void
name|PanicBadArrayIndex
parameter_list|()
function_decl|;
end_function_decl
begin_function_decl
name|GLREF_C
name|TInt
name|__DoConvertNum
parameter_list|(
name|TUint
parameter_list|,
name|TRadix
parameter_list|,
name|TUint
parameter_list|,
name|TUint8
modifier|*
modifier|&
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|GLREF_C
name|TInt
name|__DoConvertNum
parameter_list|(
name|Uint64
parameter_list|,
name|TRadix
parameter_list|,
name|TUint
parameter_list|,
name|TUint8
modifier|*
modifier|&
parameter_list|)
function_decl|;
end_function_decl
begin_ifdef
ifdef|#
directive|ifdef
name|__KERNEL_MODE__
end_ifdef
begin_function_decl
name|GLREF_C
name|void
name|KernHeapFault
parameter_list|(
name|TCdtPanic
name|aPanic
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|GLREF_C
name|void
name|KHeapCheckThreadState
parameter_list|()
function_decl|;
end_function_decl
begin_function_decl
name|TInt
name|StringLength
parameter_list|(
specifier|const
name|TUint16
modifier|*
name|aPtr
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|TInt
name|StringLength
parameter_list|(
specifier|const
name|TUint8
modifier|*
name|aPtr
parameter_list|)
function_decl|;
end_function_decl
begin_define
DECL|macro|STD_CLASS
define|#
directive|define
name|STD_CLASS
value|Kern
end_define
begin_define
DECL|macro|STRING_LENGTH
define|#
directive|define
name|STRING_LENGTH
parameter_list|(
name|s
parameter_list|)
value|StringLength(s)
end_define
begin_define
DECL|macro|STRING_LENGTH_16
define|#
directive|define
name|STRING_LENGTH_16
parameter_list|(
name|s
parameter_list|)
value|StringLength(s)
end_define
begin_define
DECL|macro|PANIC_CURRENT_THREAD
define|#
directive|define
name|PANIC_CURRENT_THREAD
parameter_list|(
name|c
parameter_list|,
name|r
parameter_list|)
value|Kern::PanicCurrentThread(c, r)
end_define
begin_define
DECL|macro|__KERNEL_CHECK_RADIX
define|#
directive|define
name|__KERNEL_CHECK_RADIX
parameter_list|(
name|r
parameter_list|)
value|__ASSERT_ALWAYS(((r)==EDecimal)||((r)==EHex),Panic(EInvalidRadix))
end_define
begin_define
DECL|macro|APPEND_BUF_SIZE
define|#
directive|define
name|APPEND_BUF_SIZE
value|10
end_define
begin_define
DECL|macro|APPEND_BUF_SIZE_64
define|#
directive|define
name|APPEND_BUF_SIZE_64
value|20
end_define
begin_define
DECL|macro|HEAP_PANIC
define|#
directive|define
name|HEAP_PANIC
parameter_list|(
name|r
parameter_list|)
value|Kern::Printf("HEAP CORRUPTED %s %d", __FILE__, __LINE__), RHeapK::Fault(r)
end_define
begin_define
DECL|macro|GET_PAGE_SIZE
define|#
directive|define
name|GET_PAGE_SIZE
parameter_list|(
name|x
parameter_list|)
value|x = M::PageSizeInBytes()
end_define
begin_define
DECL|macro|DIVISION_BY_ZERO
define|#
directive|define
name|DIVISION_BY_ZERO
parameter_list|()
value|FAULT()
end_define
begin_ifdef
ifdef|#
directive|ifdef
name|_DEBUG
end_ifdef
begin_define
DECL|macro|__CHECK_THREAD_STATE
define|#
directive|define
name|__CHECK_THREAD_STATE
value|RHeapK::CheckThreadState()
end_define
begin_else
else|#
directive|else
end_else
begin_define
DECL|macro|__CHECK_THREAD_STATE
define|#
directive|define
name|__CHECK_THREAD_STATE
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_else
else|#
directive|else
end_else
begin_define
DECL|macro|STD_CLASS
define|#
directive|define
name|STD_CLASS
value|User
end_define
begin_define
DECL|macro|STRING_LENGTH
define|#
directive|define
name|STRING_LENGTH
parameter_list|(
name|s
parameter_list|)
value|User::StringLength(s)
end_define
begin_define
DECL|macro|STRING_LENGTH_16
define|#
directive|define
name|STRING_LENGTH_16
parameter_list|(
name|s
parameter_list|)
value|User::StringLength(s)
end_define
begin_define
DECL|macro|PANIC_CURRENT_THREAD
define|#
directive|define
name|PANIC_CURRENT_THREAD
parameter_list|(
name|c
parameter_list|,
name|r
parameter_list|)
value|User::Panic(c, r)
end_define
begin_define
DECL|macro|MEM_COMPARE_16
define|#
directive|define
name|MEM_COMPARE_16
value|Mem::Compare
end_define
begin_define
DECL|macro|__KERNEL_CHECK_RADIX
define|#
directive|define
name|__KERNEL_CHECK_RADIX
parameter_list|(
name|r
parameter_list|)
end_define
begin_define
DECL|macro|APPEND_BUF_SIZE
define|#
directive|define
name|APPEND_BUF_SIZE
value|32
end_define
begin_define
DECL|macro|APPEND_BUF_SIZE_64
define|#
directive|define
name|APPEND_BUF_SIZE_64
value|64
end_define
begin_define
DECL|macro|HEAP_PANIC
define|#
directive|define
name|HEAP_PANIC
parameter_list|(
name|r
parameter_list|)
value|RDebug::Printf("HEAP CORRUPTED %s %d", __FILE__, __LINE__), Panic(r)
end_define
begin_define
DECL|macro|GET_PAGE_SIZE
define|#
directive|define
name|GET_PAGE_SIZE
parameter_list|(
name|x
parameter_list|)
value|UserHal::PageSizeInBytes(x)
end_define
begin_define
DECL|macro|DIVISION_BY_ZERO
define|#
directive|define
name|DIVISION_BY_ZERO
parameter_list|()
value|User::RaiseException(EExcIntegerDivideByZero)
end_define
begin_define
DECL|macro|__CHECK_THREAD_STATE
define|#
directive|define
name|__CHECK_THREAD_STATE
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// __KERNEL_MODE__
end_comment
begin_endif
endif|#
directive|endif
end_endif
end_unit
