begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the QtCore module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|__KERNEL_MODE__
end_ifndef
begin_decl_stmt
DECL|variable|MAXSMALLPAGEBITS
specifier|const
name|int
name|MAXSMALLPAGEBITS
init|=
literal|68
operator|<<
literal|3
decl_stmt|;
end_decl_stmt
begin_define
DECL|macro|MINPAGEPOWER
define|#
directive|define
name|MINPAGEPOWER
value|PAGESHIFT+2
end_define
begin_struct
DECL|struct|paged_bitmap
struct|struct
name|paged_bitmap
block|{
DECL|member|public
name|public
label|:
specifier|inline
name|paged_bitmap
argument_list|()
operator|:
name|iBase
argument_list|(
literal|0
argument_list|)
operator|,
name|iNbits
argument_list|(
literal|0
argument_list|)
block|{}
name|void
name|Init
argument_list|(
argument|unsigned char* p
argument_list|,
argument|unsigned size
argument_list|,
argument|unsigned bit
argument_list|)
expr_stmt|;
comment|//
specifier|inline
name|unsigned
name|char
operator|*
name|Addr
argument_list|()
specifier|const
expr_stmt|;
specifier|inline
name|unsigned
name|Size
argument_list|()
specifier|const
expr_stmt|;
comment|//
specifier|inline
name|void
name|Set
parameter_list|(
name|unsigned
name|ix
parameter_list|,
name|unsigned
name|bit
parameter_list|)
function_decl|;
specifier|inline
name|unsigned
name|operator
index|[]
argument_list|(
name|unsigned
name|ix
argument_list|)
decl|const
decl_stmt|;
name|bool
name|Is
argument_list|(
name|unsigned
name|ix
argument_list|,
name|unsigned
name|len
argument_list|,
name|unsigned
name|bit
argument_list|)
decl|const
decl_stmt|;
name|void
name|Set
parameter_list|(
name|unsigned
name|ix
parameter_list|,
name|unsigned
name|len
parameter_list|,
name|unsigned
name|val
parameter_list|)
function_decl|;
name|void
name|Setn
parameter_list|(
name|unsigned
name|ix
parameter_list|,
name|unsigned
name|len
parameter_list|,
name|unsigned
name|bit
parameter_list|)
function_decl|;
name|unsigned
name|Bits
argument_list|(
name|unsigned
name|ix
argument_list|,
name|unsigned
name|len
argument_list|)
decl|const
decl_stmt|;
comment|// little endian
name|int
name|Find
argument_list|(
name|unsigned
name|start
argument_list|,
name|unsigned
name|bit
argument_list|)
decl|const
decl_stmt|;
DECL|member|private
name|private
label|:
name|unsigned
name|char
modifier|*
name|iBase
decl_stmt|;
DECL|member|iNbits
name|unsigned
name|iNbits
decl_stmt|;
block|}
struct|;
end_struct
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// __KERNEL_MODE__
end_comment
end_unit
