begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the documentation of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of Digia Plc and its Subsidiary(-ies) nor the names **     of its contributors may be used to endorse or promote products derived **     from this software without specific prior written permission. ** ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_comment
comment|//! [0]
end_comment
begin_decl_stmt
name|QSize
name|t1
argument_list|(
literal|10
argument_list|,
literal|12
argument_list|)
decl_stmt|;
end_decl_stmt
begin_expr_stmt
name|t1
operator|.
name|scale
argument_list|(
literal|60
argument_list|,
literal|60
argument_list|,
name|Qt
operator|::
name|IgnoreAspectRatio
argument_list|)
expr_stmt|;
end_expr_stmt
begin_comment
comment|// t1 is (60, 60)
end_comment
begin_decl_stmt
name|QSize
name|t2
argument_list|(
literal|10
argument_list|,
literal|12
argument_list|)
decl_stmt|;
end_decl_stmt
begin_expr_stmt
name|t2
operator|.
name|scale
argument_list|(
literal|60
argument_list|,
literal|60
argument_list|,
name|Qt
operator|::
name|KeepAspectRatio
argument_list|)
expr_stmt|;
end_expr_stmt
begin_comment
comment|// t2 is (50, 60)
end_comment
begin_decl_stmt
name|QSize
name|t3
argument_list|(
literal|10
argument_list|,
literal|12
argument_list|)
decl_stmt|;
end_decl_stmt
begin_expr_stmt
name|t3
operator|.
name|scale
argument_list|(
literal|60
argument_list|,
literal|60
argument_list|,
name|Qt
operator|::
name|KeepAspectRatioByExpanding
argument_list|)
expr_stmt|;
end_expr_stmt
begin_comment
comment|// t3 is (60, 72)
end_comment
begin_comment
comment|//! [0]
end_comment
begin_comment
comment|//! [1]
end_comment
begin_decl_stmt
name|QSize
name|size
argument_list|(
literal|100
argument_list|,
literal|10
argument_list|)
decl_stmt|;
end_decl_stmt
begin_expr_stmt
name|size
operator|.
name|rwidth
argument_list|()
operator|+=
literal|20
expr_stmt|;
end_expr_stmt
begin_comment
comment|// size becomes (120,10)
end_comment
begin_comment
comment|//! [1]
end_comment
begin_comment
comment|//! [2]
end_comment
begin_decl_stmt
name|QSize
name|size
argument_list|(
literal|100
argument_list|,
literal|10
argument_list|)
decl_stmt|;
end_decl_stmt
begin_expr_stmt
name|size
operator|.
name|rheight
argument_list|()
operator|+=
literal|5
expr_stmt|;
end_expr_stmt
begin_comment
comment|// size becomes (100,15)
end_comment
begin_comment
comment|//! [2]
end_comment
begin_comment
comment|//! [3]
end_comment
begin_decl_stmt
name|QSize
name|s
argument_list|(
literal|3
argument_list|,
literal|7
argument_list|)
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|QSize
name|r
argument_list|(
operator|-
literal|1
argument_list|,
literal|4
argument_list|)
decl_stmt|;
end_decl_stmt
begin_expr_stmt
name|s
operator|+=
name|r
expr_stmt|;
end_expr_stmt
begin_comment
comment|// s becomes (2,11)
end_comment
begin_comment
comment|//! [3]
end_comment
begin_comment
comment|//! [4]
end_comment
begin_decl_stmt
name|QSize
name|s
argument_list|(
literal|3
argument_list|,
literal|7
argument_list|)
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|QSize
name|r
argument_list|(
operator|-
literal|1
argument_list|,
literal|4
argument_list|)
decl_stmt|;
end_decl_stmt
begin_expr_stmt
name|s
operator|-=
name|r
expr_stmt|;
end_expr_stmt
begin_comment
comment|// s becomes (4,3)
end_comment
begin_comment
comment|//! [4]
end_comment
begin_comment
comment|//! [5]
end_comment
begin_decl_stmt
name|QSizeF
name|t1
argument_list|(
literal|10
argument_list|,
literal|12
argument_list|)
decl_stmt|;
end_decl_stmt
begin_expr_stmt
name|t1
operator|.
name|scale
argument_list|(
literal|60
argument_list|,
literal|60
argument_list|,
name|Qt
operator|::
name|IgnoreAspectRatio
argument_list|)
expr_stmt|;
end_expr_stmt
begin_comment
comment|// t1 is (60, 60)
end_comment
begin_decl_stmt
name|QSizeF
name|t2
argument_list|(
literal|10
argument_list|,
literal|12
argument_list|)
decl_stmt|;
end_decl_stmt
begin_expr_stmt
name|t2
operator|.
name|scale
argument_list|(
literal|60
argument_list|,
literal|60
argument_list|,
name|Qt
operator|::
name|KeepAspectRatio
argument_list|)
expr_stmt|;
end_expr_stmt
begin_comment
comment|// t2 is (50, 60)
end_comment
begin_decl_stmt
name|QSizeF
name|t3
argument_list|(
literal|10
argument_list|,
literal|12
argument_list|)
decl_stmt|;
end_decl_stmt
begin_expr_stmt
name|t3
operator|.
name|scale
argument_list|(
literal|60
argument_list|,
literal|60
argument_list|,
name|Qt
operator|::
name|KeepAspectRatioByExpanding
argument_list|)
expr_stmt|;
end_expr_stmt
begin_comment
comment|// t3 is (60, 72)
end_comment
begin_comment
comment|//! [5]
end_comment
begin_comment
comment|//! [6]
end_comment
begin_decl_stmt
name|QSizeF
name|size
argument_list|(
literal|100.3
argument_list|,
literal|10
argument_list|)
decl_stmt|;
end_decl_stmt
begin_expr_stmt
name|size
operator|.
name|rwidth
argument_list|()
operator|+=
literal|20.5
expr_stmt|;
end_expr_stmt
begin_comment
comment|// size becomes (120.8,10)
end_comment
begin_comment
comment|//! [6]
end_comment
begin_comment
comment|//! [7]
end_comment
begin_decl_stmt
name|QSizeF
name|size
argument_list|(
literal|100
argument_list|,
literal|10.2
argument_list|)
decl_stmt|;
end_decl_stmt
begin_expr_stmt
name|size
operator|.
name|rheight
argument_list|()
operator|+=
literal|5.5
expr_stmt|;
end_expr_stmt
begin_comment
comment|// size becomes (100,15.7)
end_comment
begin_comment
comment|//! [7]
end_comment
begin_comment
comment|//! [8]
end_comment
begin_decl_stmt
name|QSizeF
name|s
argument_list|(
literal|3
argument_list|,
literal|7
argument_list|)
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|QSizeF
name|r
argument_list|(
operator|-
literal|1
argument_list|,
literal|4
argument_list|)
decl_stmt|;
end_decl_stmt
begin_expr_stmt
name|s
operator|+=
name|r
expr_stmt|;
end_expr_stmt
begin_comment
comment|// s becomes (2,11)
end_comment
begin_comment
comment|//! [8]
end_comment
begin_comment
comment|//! [9]
end_comment
begin_decl_stmt
name|QSizeF
name|s
argument_list|(
literal|3
argument_list|,
literal|7
argument_list|)
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|QSizeF
name|r
argument_list|(
operator|-
literal|1
argument_list|,
literal|4
argument_list|)
decl_stmt|;
end_decl_stmt
begin_expr_stmt
name|s
operator|-=
name|r
expr_stmt|;
end_expr_stmt
begin_comment
comment|// s becomes (4,3)
end_comment
begin_comment
comment|//! [9]
end_comment
end_unit
