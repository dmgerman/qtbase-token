begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the documentation of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of The Qt Company Ltd and its Subsidiary(-ies) nor the **     names of its contributors may be used to endorse or promote products **     derived from this software without specific prior written permission. ** ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_comment
comment|//! [0]
end_comment
begin_function
DECL|function|myfunc
name|int
name|myfunc
parameter_list|(
name|int
name|n
parameter_list|)
block|{
name|int
name|table
index|[
name|n
operator|+
literal|1
index|]
decl_stmt|;
comment|// WRONG
operator|...
return|return
name|table
index|[
name|n
index|]
return|;
block|}
end_function
begin_comment
comment|//! [0]
end_comment
begin_comment
comment|//! [1]
end_comment
begin_function
DECL|function|myfunc
name|int
name|myfunc
parameter_list|(
name|int
name|n
parameter_list|)
block|{
name|int
modifier|*
name|table
init|=
operator|new
name|int
index|[
name|n
operator|+
literal|1
index|]
decl_stmt|;
operator|...
name|int
name|ret
operator|=
name|table
index|[
name|n
index|]
expr_stmt|;
operator|delete
index|[]
name|table
expr_stmt|;
return|return
name|ret
return|;
block|}
end_function
begin_comment
comment|//! [1]
end_comment
begin_comment
comment|//! [2]
end_comment
begin_function
DECL|function|myfunc
name|int
name|myfunc
parameter_list|(
name|int
name|n
parameter_list|)
block|{
name|QVarLengthArray
argument_list|<
name|int
argument_list|,
literal|1024
argument_list|>
name|array
argument_list|(
name|n
operator|+
literal|1
argument_list|)
decl_stmt|;
operator|...
return|return
name|array
index|[
name|n
index|]
return|;
block|}
end_function
begin_comment
comment|//! [2]
end_comment
begin_comment
comment|//! [3]
end_comment
begin_decl_stmt
name|QVarLengthArray
argument_list|<
name|int
argument_list|>
name|array
argument_list|(
literal|10
argument_list|)
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|data
name|int
modifier|*
name|data
init|=
name|array
operator|.
name|data
argument_list|()
decl_stmt|;
end_decl_stmt
begin_for
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
operator|++
name|i
control|)
name|data
index|[
name|i
index|]
operator|=
literal|2
operator|*
name|i
expr_stmt|;
end_for
begin_comment
comment|//! [3]
end_comment
end_unit
