begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the documentation of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of Digia Plc and its Subsidiary(-ies) nor the names **     of its contributors may be used to endorse or promote products derived **     from this software without specific prior written permission. ** ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_comment
comment|//! [0]
end_comment
begin_decl_stmt
DECL|variable|list
name|QList
argument_list|<
name|float
argument_list|>
name|list
decl_stmt|;
end_decl_stmt
begin_expr_stmt
operator|...
name|QListIterator
argument_list|<
name|float
argument_list|>
name|i
argument_list|(
name|list
argument_list|)
expr_stmt|;
end_expr_stmt
begin_while
while|while
condition|(
name|i
operator|.
name|hasNext
argument_list|()
condition|)
name|qDebug
argument_list|()
operator|<<
name|i
operator|.
name|next
argument_list|()
expr_stmt|;
end_while
begin_comment
comment|//! [0]
end_comment
begin_comment
comment|//! [1]
end_comment
begin_function_decl
name|QListIterator
argument_list|<
name|float
argument_list|>
name|i
parameter_list|(
name|list
parameter_list|)
function_decl|;
end_function_decl
begin_expr_stmt
name|i
operator|.
name|toBack
argument_list|()
expr_stmt|;
end_expr_stmt
begin_while
while|while
condition|(
name|i
operator|.
name|hasPrevious
argument_list|()
condition|)
name|qDebug
argument_list|()
operator|<<
name|i
operator|.
name|previous
argument_list|()
expr_stmt|;
end_while
begin_comment
comment|//! [1]
end_comment
begin_comment
comment|//! [2]
end_comment
begin_decl_stmt
DECL|variable|list
name|QLinkedList
argument_list|<
name|float
argument_list|>
name|list
decl_stmt|;
end_decl_stmt
begin_expr_stmt
operator|...
name|QLinkedListIterator
argument_list|<
name|float
argument_list|>
name|i
argument_list|(
name|list
argument_list|)
expr_stmt|;
end_expr_stmt
begin_while
while|while
condition|(
name|i
operator|.
name|hasNext
argument_list|()
condition|)
name|qDebug
argument_list|()
operator|<<
name|i
operator|.
name|next
argument_list|()
expr_stmt|;
end_while
begin_comment
comment|//! [2]
end_comment
begin_comment
comment|//! [3]
end_comment
begin_function_decl
name|QLinkedListIterator
argument_list|<
name|float
argument_list|>
name|i
parameter_list|(
name|list
parameter_list|)
function_decl|;
end_function_decl
begin_expr_stmt
name|i
operator|.
name|toBack
argument_list|()
expr_stmt|;
end_expr_stmt
begin_while
while|while
condition|(
name|i
operator|.
name|hasPrevious
argument_list|()
condition|)
name|qDebug
argument_list|()
operator|<<
name|i
operator|.
name|previous
argument_list|()
expr_stmt|;
end_while
begin_comment
comment|//! [3]
end_comment
begin_comment
comment|//! [4]
end_comment
begin_decl_stmt
DECL|variable|vector
name|QVector
argument_list|<
name|float
argument_list|>
name|vector
decl_stmt|;
end_decl_stmt
begin_expr_stmt
operator|...
name|QVectorIterator
argument_list|<
name|float
argument_list|>
name|i
argument_list|(
name|vector
argument_list|)
expr_stmt|;
end_expr_stmt
begin_while
while|while
condition|(
name|i
operator|.
name|hasNext
argument_list|()
condition|)
name|qDebug
argument_list|()
operator|<<
name|i
operator|.
name|next
argument_list|()
expr_stmt|;
end_while
begin_comment
comment|//! [4]
end_comment
begin_comment
comment|//! [5]
end_comment
begin_function_decl
name|QVectorIterator
argument_list|<
name|float
argument_list|>
name|i
parameter_list|(
name|vector
parameter_list|)
function_decl|;
end_function_decl
begin_expr_stmt
name|i
operator|.
name|toBack
argument_list|()
expr_stmt|;
end_expr_stmt
begin_while
while|while
condition|(
name|i
operator|.
name|hasPrevious
argument_list|()
condition|)
name|qDebug
argument_list|()
operator|<<
name|i
operator|.
name|previous
argument_list|()
expr_stmt|;
end_while
begin_comment
comment|//! [5]
end_comment
begin_comment
comment|//! [6]
end_comment
begin_decl_stmt
DECL|variable|set
name|QSet
argument_list|<
name|QString
argument_list|>
name|set
decl_stmt|;
end_decl_stmt
begin_expr_stmt
operator|...
name|QSetIterator
argument_list|<
name|QString
argument_list|>
name|i
argument_list|(
name|set
argument_list|)
expr_stmt|;
end_expr_stmt
begin_while
while|while
condition|(
name|i
operator|.
name|hasNext
argument_list|()
condition|)
name|qDebug
argument_list|()
operator|<<
name|i
operator|.
name|next
argument_list|()
expr_stmt|;
end_while
begin_comment
comment|//! [6]
end_comment
begin_comment
comment|//! [7]
end_comment
begin_function_decl
name|QSetIterator
argument_list|<
name|QString
argument_list|>
name|i
parameter_list|(
name|set
parameter_list|)
function_decl|;
end_function_decl
begin_expr_stmt
name|i
operator|.
name|toBack
argument_list|()
expr_stmt|;
end_expr_stmt
begin_while
while|while
condition|(
name|i
operator|.
name|hasPrevious
argument_list|()
condition|)
name|qDebug
argument_list|()
operator|<<
name|i
operator|.
name|previous
argument_list|()
expr_stmt|;
end_while
begin_comment
comment|//! [7]
end_comment
begin_comment
comment|//! [8]
end_comment
begin_decl_stmt
DECL|variable|list
name|QList
argument_list|<
name|float
argument_list|>
name|list
decl_stmt|;
end_decl_stmt
begin_expr_stmt
operator|...
name|QMutableListIterator
argument_list|<
name|float
argument_list|>
name|i
argument_list|(
name|list
argument_list|)
expr_stmt|;
end_expr_stmt
begin_while
while|while
condition|(
name|i
operator|.
name|hasNext
argument_list|()
condition|)
name|qDebug
argument_list|()
operator|<<
name|i
operator|.
name|next
argument_list|()
expr_stmt|;
end_while
begin_comment
comment|//! [8]
end_comment
begin_comment
comment|//! [9]
end_comment
begin_function_decl
name|QMutableListIterator
argument_list|<
name|float
argument_list|>
name|i
parameter_list|(
name|list
parameter_list|)
function_decl|;
end_function_decl
begin_expr_stmt
name|i
operator|.
name|toBack
argument_list|()
expr_stmt|;
end_expr_stmt
begin_while
while|while
condition|(
name|i
operator|.
name|hasPrevious
argument_list|()
condition|)
name|qDebug
argument_list|()
operator|<<
name|i
operator|.
name|previous
argument_list|()
expr_stmt|;
end_while
begin_comment
comment|//! [9]
end_comment
begin_comment
comment|//! [10]
end_comment
begin_function_decl
name|QMutableListIterator
argument_list|<
name|int
argument_list|>
name|i
parameter_list|(
name|list
parameter_list|)
function_decl|;
end_function_decl
begin_while
while|while
condition|(
name|i
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|int
name|val
init|=
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|val
operator|<
literal|0
condition|)
block|{
name|i
operator|.
name|setValue
argument_list|(
operator|-
name|val
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|val
operator|==
literal|0
condition|)
block|{
name|i
operator|.
name|remove
argument_list|()
expr_stmt|;
block|}
block|}
end_while
begin_comment
comment|//! [10]
end_comment
begin_comment
comment|//! [11]
end_comment
begin_decl_stmt
DECL|variable|list
name|QLinkedList
argument_list|<
name|float
argument_list|>
name|list
decl_stmt|;
end_decl_stmt
begin_expr_stmt
operator|...
name|QMutableLinkedListIterator
argument_list|<
name|float
argument_list|>
name|i
argument_list|(
name|list
argument_list|)
expr_stmt|;
end_expr_stmt
begin_while
while|while
condition|(
name|i
operator|.
name|hasNext
argument_list|()
condition|)
name|qDebug
argument_list|()
operator|<<
name|i
operator|.
name|next
argument_list|()
expr_stmt|;
end_while
begin_comment
comment|//! [11]
end_comment
begin_comment
comment|//! [12]
end_comment
begin_function_decl
name|QMutableLinkedListIterator
argument_list|<
name|float
argument_list|>
name|i
parameter_list|(
name|list
parameter_list|)
function_decl|;
end_function_decl
begin_expr_stmt
name|i
operator|.
name|toBack
argument_list|()
expr_stmt|;
end_expr_stmt
begin_while
while|while
condition|(
name|i
operator|.
name|hasPrevious
argument_list|()
condition|)
name|qDebug
argument_list|()
operator|<<
name|i
operator|.
name|previous
argument_list|()
expr_stmt|;
end_while
begin_comment
comment|//! [12]
end_comment
begin_comment
comment|//! [13]
end_comment
begin_function_decl
name|QMutableLinkedListIterator
argument_list|<
name|int
argument_list|>
name|i
parameter_list|(
name|list
parameter_list|)
function_decl|;
end_function_decl
begin_while
while|while
condition|(
name|i
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|int
name|val
init|=
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|val
operator|<
literal|0
condition|)
block|{
name|i
operator|.
name|setValue
argument_list|(
operator|-
name|val
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|val
operator|==
literal|0
condition|)
block|{
name|i
operator|.
name|remove
argument_list|()
expr_stmt|;
block|}
block|}
end_while
begin_comment
comment|//! [13]
end_comment
begin_comment
comment|//! [14]
end_comment
begin_decl_stmt
DECL|variable|vector
name|QVector
argument_list|<
name|float
argument_list|>
name|vector
decl_stmt|;
end_decl_stmt
begin_expr_stmt
operator|...
name|QMutableVectorIterator
argument_list|<
name|float
argument_list|>
name|i
argument_list|(
name|vector
argument_list|)
expr_stmt|;
end_expr_stmt
begin_while
while|while
condition|(
name|i
operator|.
name|hasNext
argument_list|()
condition|)
name|qDebug
argument_list|()
operator|<<
name|i
operator|.
name|next
argument_list|()
expr_stmt|;
end_while
begin_comment
comment|//! [14]
end_comment
begin_comment
comment|//! [15]
end_comment
begin_function_decl
name|QMutableVectorIterator
argument_list|<
name|float
argument_list|>
name|i
parameter_list|(
name|vector
parameter_list|)
function_decl|;
end_function_decl
begin_expr_stmt
name|i
operator|.
name|toBack
argument_list|()
expr_stmt|;
end_expr_stmt
begin_while
while|while
condition|(
name|i
operator|.
name|hasPrevious
argument_list|()
condition|)
name|qDebug
argument_list|()
operator|<<
name|i
operator|.
name|previous
argument_list|()
expr_stmt|;
end_while
begin_comment
comment|//! [15]
end_comment
begin_comment
comment|//! [16]
end_comment
begin_function_decl
name|QMutableVectorIterator
argument_list|<
name|int
argument_list|>
name|i
parameter_list|(
name|vector
parameter_list|)
function_decl|;
end_function_decl
begin_while
while|while
condition|(
name|i
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|int
name|val
init|=
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|val
operator|<
literal|0
condition|)
block|{
name|i
operator|.
name|setValue
argument_list|(
operator|-
name|val
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|val
operator|==
literal|0
condition|)
block|{
name|i
operator|.
name|remove
argument_list|()
expr_stmt|;
block|}
block|}
end_while
begin_comment
comment|//! [16]
end_comment
begin_comment
comment|//! [17]
end_comment
begin_decl_stmt
DECL|variable|set
name|QSet
argument_list|<
name|float
argument_list|>
name|set
decl_stmt|;
end_decl_stmt
begin_expr_stmt
operator|...
name|QMutableSetIterator
argument_list|<
name|float
argument_list|>
name|i
argument_list|(
name|set
argument_list|)
expr_stmt|;
end_expr_stmt
begin_while
while|while
condition|(
name|i
operator|.
name|hasNext
argument_list|()
condition|)
name|qDebug
argument_list|()
operator|<<
name|i
operator|.
name|next
argument_list|()
expr_stmt|;
end_while
begin_comment
comment|//! [17]
end_comment
begin_comment
comment|//! [18]
end_comment
begin_function_decl
name|QMutableSetIterator
argument_list|<
name|float
argument_list|>
name|i
parameter_list|(
name|set
parameter_list|)
function_decl|;
end_function_decl
begin_expr_stmt
name|i
operator|.
name|toBack
argument_list|()
expr_stmt|;
end_expr_stmt
begin_while
while|while
condition|(
name|i
operator|.
name|hasPrevious
argument_list|()
condition|)
name|qDebug
argument_list|()
operator|<<
name|i
operator|.
name|previous
argument_list|()
expr_stmt|;
end_while
begin_comment
comment|//! [18]
end_comment
begin_comment
comment|//! [19]
end_comment
begin_function_decl
name|QMutableListIterator
argument_list|<
name|int
argument_list|>
name|i
parameter_list|(
name|list
parameter_list|)
function_decl|;
end_function_decl
begin_while
while|while
condition|(
name|i
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|int
name|val
init|=
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|val
argument_list|<
operator|-
literal|32768
operator|||
name|val
argument_list|>
literal|32767
condition|)
name|i
operator|.
name|remove
argument_list|()
expr_stmt|;
block|}
end_while
begin_comment
comment|//! [19]
end_comment
begin_comment
comment|//! [20]
end_comment
begin_function_decl
name|QMutableLinkedListIterator
argument_list|<
name|int
argument_list|>
name|i
parameter_list|(
name|list
parameter_list|)
function_decl|;
end_function_decl
begin_while
while|while
condition|(
name|i
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|int
name|val
init|=
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|val
argument_list|<
operator|-
literal|32768
operator|||
name|val
argument_list|>
literal|32767
condition|)
name|i
operator|.
name|remove
argument_list|()
expr_stmt|;
block|}
end_while
begin_comment
comment|//! [20]
end_comment
begin_comment
comment|//! [21]
end_comment
begin_function_decl
name|QMutableVectorIterator
argument_list|<
name|int
argument_list|>
name|i
parameter_list|(
name|vector
parameter_list|)
function_decl|;
end_function_decl
begin_while
while|while
condition|(
name|i
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|int
name|val
init|=
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|val
argument_list|<
operator|-
literal|32768
operator|||
name|val
argument_list|>
literal|32767
condition|)
name|i
operator|.
name|remove
argument_list|()
expr_stmt|;
block|}
end_while
begin_comment
comment|//! [21]
end_comment
begin_comment
comment|//! [22]
end_comment
begin_function_decl
name|QMutableSetIterator
argument_list|<
name|int
argument_list|>
name|i
parameter_list|(
name|set
parameter_list|)
function_decl|;
end_function_decl
begin_while
while|while
condition|(
name|i
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|int
name|val
init|=
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|val
argument_list|<
operator|-
literal|32768
operator|||
name|val
argument_list|>
literal|32767
condition|)
name|i
operator|.
name|remove
argument_list|()
expr_stmt|;
block|}
end_while
begin_comment
comment|//! [22]
end_comment
begin_comment
comment|//! [23]
end_comment
begin_function_decl
name|QMutableListIterator
argument_list|<
name|double
argument_list|>
name|i
parameter_list|(
name|list
parameter_list|)
function_decl|;
end_function_decl
begin_while
while|while
condition|(
name|i
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|double
name|val
init|=
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
name|i
operator|.
name|setValue
argument_list|(
name|sqrt
argument_list|(
name|val
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_while
begin_comment
comment|//! [23]
end_comment
begin_comment
comment|//! [24]
end_comment
begin_function_decl
name|QMutableLinkedListIterator
argument_list|<
name|double
argument_list|>
name|i
parameter_list|(
name|list
parameter_list|)
function_decl|;
end_function_decl
begin_while
while|while
condition|(
name|i
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|double
name|val
init|=
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
name|i
operator|.
name|setValue
argument_list|(
name|sqrt
argument_list|(
name|val
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_while
begin_comment
comment|//! [24]
end_comment
begin_comment
comment|//! [25]
end_comment
begin_function_decl
name|QMutableVectorIterator
argument_list|<
name|double
argument_list|>
name|i
parameter_list|(
name|list
parameter_list|)
function_decl|;
end_function_decl
begin_while
while|while
condition|(
name|i
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|double
name|val
init|=
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
name|i
operator|.
name|setValue
argument_list|(
name|sqrt
argument_list|(
name|val
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_while
begin_comment
comment|//! [25]
end_comment
begin_comment
comment|//! [26]
end_comment
begin_decl_stmt
DECL|variable|map
name|QMap
argument_list|<
name|int
argument_list|,
name|QWidget
modifier|*
argument_list|>
name|map
decl_stmt|;
end_decl_stmt
begin_expr_stmt
operator|...
name|QMapIterator
argument_list|<
name|int
argument_list|,
name|QWidget
operator|*
argument_list|>
name|i
argument_list|(
name|map
argument_list|)
expr_stmt|;
end_expr_stmt
begin_while
while|while
condition|(
name|i
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|i
operator|.
name|next
argument_list|()
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
name|i
operator|.
name|key
argument_list|()
operator|<<
literal|": "
operator|<<
name|i
operator|.
name|value
argument_list|()
expr_stmt|;
block|}
end_while
begin_comment
comment|//! [26]
end_comment
begin_comment
comment|//! [27]
end_comment
begin_function_decl
name|QMapIterator
argument_list|<
name|int
argument_list|,
name|QWidget
modifier|*
argument_list|>
name|i
parameter_list|(
name|map
parameter_list|)
function_decl|;
end_function_decl
begin_expr_stmt
name|i
operator|.
name|toBack
argument_list|()
expr_stmt|;
end_expr_stmt
begin_while
while|while
condition|(
name|i
operator|.
name|hasPrevious
argument_list|()
condition|)
block|{
name|i
operator|.
name|previous
argument_list|()
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
name|i
operator|.
name|key
argument_list|()
operator|<<
literal|": "
operator|<<
name|i
operator|.
name|value
argument_list|()
expr_stmt|;
block|}
end_while
begin_comment
comment|//! [27]
end_comment
begin_comment
comment|//! [28]
end_comment
begin_function_decl
name|QMapIterator
argument_list|<
name|int
argument_list|,
name|QWidget
modifier|*
argument_list|>
name|i
parameter_list|(
name|map
parameter_list|)
function_decl|;
end_function_decl
begin_while
while|while
condition|(
name|i
operator|.
name|findNext
argument_list|(
name|widget
argument_list|)
condition|)
block|{
name|qDebug
argument_list|()
operator|<<
literal|"Found widget "
operator|<<
name|widget
operator|<<
literal|" under key "
operator|<<
name|i
operator|.
name|key
argument_list|()
expr_stmt|;
block|}
end_while
begin_comment
comment|//! [28]
end_comment
begin_comment
comment|//! [29]
end_comment
begin_decl_stmt
DECL|variable|hash
name|QHash
argument_list|<
name|int
argument_list|,
name|QWidget
modifier|*
argument_list|>
name|hash
decl_stmt|;
end_decl_stmt
begin_expr_stmt
operator|...
name|QHashIterator
argument_list|<
name|int
argument_list|,
name|QWidget
operator|*
argument_list|>
name|i
argument_list|(
name|hash
argument_list|)
expr_stmt|;
end_expr_stmt
begin_while
while|while
condition|(
name|i
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|i
operator|.
name|next
argument_list|()
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
name|i
operator|.
name|key
argument_list|()
operator|<<
literal|": "
operator|<<
name|i
operator|.
name|value
argument_list|()
expr_stmt|;
block|}
end_while
begin_comment
comment|//! [29]
end_comment
begin_comment
comment|//! [30]
end_comment
begin_function_decl
name|QHashIterator
argument_list|<
name|int
argument_list|,
name|QWidget
modifier|*
argument_list|>
name|i
parameter_list|(
name|hash
parameter_list|)
function_decl|;
end_function_decl
begin_expr_stmt
name|i
operator|.
name|toBack
argument_list|()
expr_stmt|;
end_expr_stmt
begin_while
while|while
condition|(
name|i
operator|.
name|hasPrevious
argument_list|()
condition|)
block|{
name|i
operator|.
name|previous
argument_list|()
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
name|i
operator|.
name|key
argument_list|()
operator|<<
literal|": "
operator|<<
name|i
operator|.
name|value
argument_list|()
expr_stmt|;
block|}
end_while
begin_comment
comment|//! [30]
end_comment
begin_comment
comment|//! [31]
end_comment
begin_function_decl
name|QHashIterator
argument_list|<
name|int
argument_list|,
name|QWidget
modifier|*
argument_list|>
name|i
parameter_list|(
name|hash
parameter_list|)
function_decl|;
end_function_decl
begin_while
while|while
condition|(
name|i
operator|.
name|findNext
argument_list|(
name|widget
argument_list|)
condition|)
block|{
name|qDebug
argument_list|()
operator|<<
literal|"Found widget "
operator|<<
name|widget
operator|<<
literal|" under key "
operator|<<
name|i
operator|.
name|key
argument_list|()
expr_stmt|;
block|}
end_while
begin_comment
comment|//! [31]
end_comment
begin_comment
comment|//! [32]
end_comment
begin_decl_stmt
DECL|variable|map
name|QMap
argument_list|<
name|int
argument_list|,
name|QWidget
modifier|*
argument_list|>
name|map
decl_stmt|;
end_decl_stmt
begin_expr_stmt
operator|...
name|QMutableMapIterator
argument_list|<
name|int
argument_list|,
name|QWidget
operator|*
argument_list|>
name|i
argument_list|(
name|map
argument_list|)
expr_stmt|;
end_expr_stmt
begin_while
while|while
condition|(
name|i
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|i
operator|.
name|next
argument_list|()
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
name|i
operator|.
name|key
argument_list|()
operator|<<
literal|": "
operator|<<
name|i
operator|.
name|value
argument_list|()
expr_stmt|;
block|}
end_while
begin_comment
comment|//! [32]
end_comment
begin_comment
comment|//! [33]
end_comment
begin_function_decl
name|QMutableMapIterator
argument_list|<
name|int
argument_list|,
name|QWidget
modifier|*
argument_list|>
name|i
parameter_list|(
name|map
parameter_list|)
function_decl|;
end_function_decl
begin_expr_stmt
name|i
operator|.
name|toBack
argument_list|()
expr_stmt|;
end_expr_stmt
begin_while
while|while
condition|(
name|i
operator|.
name|hasPrevious
argument_list|()
condition|)
block|{
name|i
operator|.
name|previous
argument_list|()
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
name|i
operator|.
name|key
argument_list|()
operator|<<
literal|": "
operator|<<
name|i
operator|.
name|value
argument_list|()
expr_stmt|;
block|}
end_while
begin_comment
comment|//! [33]
end_comment
begin_comment
comment|//! [34]
end_comment
begin_function_decl
name|QMutableMapIterator
argument_list|<
name|int
argument_list|,
name|QWidget
modifier|*
argument_list|>
name|i
parameter_list|(
name|map
parameter_list|)
function_decl|;
end_function_decl
begin_while
while|while
condition|(
name|i
operator|.
name|findNext
argument_list|(
name|widget
argument_list|)
condition|)
block|{
name|qDebug
argument_list|()
operator|<<
literal|"Found widget "
operator|<<
name|widget
operator|<<
literal|" under key "
operator|<<
name|i
operator|.
name|key
argument_list|()
expr_stmt|;
block|}
end_while
begin_comment
comment|//! [34]
end_comment
begin_comment
comment|//! [35]
end_comment
begin_function_decl
name|QMutableMapIterator
argument_list|<
name|QString
argument_list|,
name|QString
argument_list|>
name|i
parameter_list|(
name|map
parameter_list|)
function_decl|;
end_function_decl
begin_while
while|while
condition|(
name|i
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|i
operator|.
name|next
argument_list|()
expr_stmt|;
if|if
condition|(
name|i
operator|.
name|key
argument_list|()
operator|==
name|i
operator|.
name|value
argument_list|()
condition|)
name|i
operator|.
name|remove
argument_list|()
expr_stmt|;
block|}
end_while
begin_comment
comment|//! [35]
end_comment
begin_comment
comment|//! [36]
end_comment
begin_decl_stmt
DECL|variable|hash
name|QHash
argument_list|<
name|int
argument_list|,
name|QWidget
modifier|*
argument_list|>
name|hash
decl_stmt|;
end_decl_stmt
begin_expr_stmt
operator|...
name|QMutableHashIterator
argument_list|<
name|QString
argument_list|,
name|QWidget
operator|*
argument_list|>
name|i
argument_list|(
name|hash
argument_list|)
expr_stmt|;
end_expr_stmt
begin_while
while|while
condition|(
name|i
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|i
operator|.
name|next
argument_list|()
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
name|i
operator|.
name|key
argument_list|()
operator|<<
literal|": "
operator|<<
name|i
operator|.
name|value
argument_list|()
expr_stmt|;
block|}
end_while
begin_comment
comment|//! [36]
end_comment
begin_comment
comment|//! [37]
end_comment
begin_function_decl
name|QMutableHashIterator
argument_list|<
name|int
argument_list|,
name|QWidget
modifier|*
argument_list|>
name|i
parameter_list|(
name|hash
parameter_list|)
function_decl|;
end_function_decl
begin_expr_stmt
name|i
operator|.
name|toBack
argument_list|()
expr_stmt|;
end_expr_stmt
begin_while
while|while
condition|(
name|i
operator|.
name|hasPrevious
argument_list|()
condition|)
block|{
name|i
operator|.
name|previous
argument_list|()
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
name|i
operator|.
name|key
argument_list|()
operator|<<
literal|": "
operator|<<
name|i
operator|.
name|value
argument_list|()
expr_stmt|;
block|}
end_while
begin_comment
comment|//! [37]
end_comment
begin_comment
comment|//! [38]
end_comment
begin_function_decl
name|QMutableHashIterator
argument_list|<
name|int
argument_list|,
name|QWidget
modifier|*
argument_list|>
name|i
parameter_list|(
name|hash
parameter_list|)
function_decl|;
end_function_decl
begin_while
while|while
condition|(
name|i
operator|.
name|findNext
argument_list|(
name|widget
argument_list|)
condition|)
block|{
name|qDebug
argument_list|()
operator|<<
literal|"Found widget "
operator|<<
name|widget
operator|<<
literal|" under key "
operator|<<
name|i
operator|.
name|key
argument_list|()
expr_stmt|;
block|}
end_while
begin_comment
comment|//! [38]
end_comment
begin_comment
comment|//! [39]
end_comment
begin_function_decl
name|QMutableHashIterator
argument_list|<
name|QString
argument_list|,
name|QString
argument_list|>
name|i
parameter_list|(
name|hash
parameter_list|)
function_decl|;
end_function_decl
begin_while
while|while
condition|(
name|i
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|i
operator|.
name|next
argument_list|()
expr_stmt|;
if|if
condition|(
name|i
operator|.
name|key
argument_list|()
operator|==
name|i
operator|.
name|value
argument_list|()
condition|)
name|i
operator|.
name|remove
argument_list|()
expr_stmt|;
block|}
end_while
begin_comment
comment|//! [39]
end_comment
end_unit
