begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the documentation of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of The Qt Company Ltd and its Subsidiary(-ies) nor the **     names of its contributors may be used to endorse or promote products **     derived from this software without specific prior written permission. ** ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_comment
comment|//! [0]
end_comment
begin_expr_stmt
name|DEFINES
operator|+=
name|QT_NO_CAST_FROM_ASCII
expr|\
name|QT_NO_CAST_TO_ASCII
comment|//! [0]
comment|//! [1]
name|QString
name|url
operator|=
name|QLatin1String
argument_list|(
literal|"http://www.unicode.org/"
argument_list|)
expr_stmt|;
end_expr_stmt
begin_comment
comment|//! [1]
end_comment
begin_comment
comment|//! [2]
end_comment
begin_decl_stmt
DECL|variable|d
name|double
name|d
init|=
literal|12.34
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|str
name|QString
name|str
init|=
name|QString
argument_list|(
literal|"delta: %1"
argument_list|)
operator|.
name|arg
argument_list|(
name|d
argument_list|,
literal|0
argument_list|,
literal|'E'
argument_list|,
literal|3
argument_list|)
decl_stmt|;
end_decl_stmt
begin_comment
comment|// str == "delta: 1.234E+01"
end_comment
begin_comment
comment|//! [2]
end_comment
begin_comment
comment|//! [3]
end_comment
begin_if
if|if
condition|(
name|str
operator|==
literal|"auto"
operator|||
name|str
operator|==
literal|"extern"
operator|||
name|str
operator|==
literal|"static"
operator|||
name|str
operator|==
literal|"register"
condition|)
block|{
operator|...
block|}
end_if
begin_comment
comment|//! [3]
end_comment
begin_comment
comment|//! [4]
end_comment
begin_if
if|if
condition|(
name|str
operator|==
name|QString
argument_list|(
literal|"auto"
argument_list|)
operator|||
name|str
operator|==
name|QString
argument_list|(
literal|"extern"
argument_list|)
operator|||
name|str
operator|==
name|QString
argument_list|(
literal|"static"
argument_list|)
operator|||
name|str
operator|==
name|QString
argument_list|(
literal|"register"
argument_list|)
condition|)
block|{
operator|...
block|}
end_if
begin_comment
comment|//! [4]
end_comment
begin_comment
comment|//! [5]
end_comment
begin_if
if|if
condition|(
name|str
operator|==
name|QLatin1String
argument_list|(
literal|"auto"
argument_list|)
operator|||
name|str
operator|==
name|QLatin1String
argument_list|(
literal|"extern"
argument_list|)
operator|||
name|str
operator|==
name|QLatin1String
argument_list|(
literal|"static"
argument_list|)
operator|||
name|str
operator|==
name|QLatin1String
argument_list|(
literal|"register"
argument_list|)
block|{
operator|...
block|}
end_if
begin_comment
comment|//! [5]
end_comment
begin_comment
comment|//! [6]
end_comment
begin_decl_stmt
name|QLabel
modifier|*
name|label
init|=
operator|new
name|QLabel
argument_list|(
name|QLatin1String
argument_list|(
literal|"MOD"
argument_list|)
argument_list|,
name|this
argument_list|)
decl_stmt|;
end_decl_stmt
begin_comment
comment|//! [6]
end_comment
begin_comment
comment|//! [7]
end_comment
begin_decl_stmt
name|QString
name|plain
init|=
literal|"#include<QtCore>"
name|QString
name|html
operator|=
name|plain
operator|.
name|toHtmlEscaped
argument_list|()
decl_stmt|;
end_decl_stmt
begin_comment
comment|// html == "#include&lt;QtCore&gt;"
end_comment
begin_comment
comment|//! [7]
end_comment
end_unit
