begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the QtNetwork module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** BSD License Usage ** Alternatively, you may use this file under the terms of the BSD license ** as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of The Qt Company Ltd nor the names of its **     contributors may be used to endorse or promote products derived **     from this software without specific prior written permission. ** ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtCore>
end_include
begin_function
DECL|function|slowOperation1
name|void
name|slowOperation1
parameter_list|()
block|{
specifier|static
name|char
name|buf
index|[
literal|256
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
operator|(
literal|1
operator|<<
literal|20
operator|)
condition|;
operator|++
name|i
control|)
name|buf
index|[
name|i
operator|%
sizeof|sizeof
name|buf
index|]
operator|=
name|i
expr_stmt|;
block|}
end_function
begin_function
DECL|function|slowOperation2
name|void
name|slowOperation2
parameter_list|(
name|int
parameter_list|)
block|{
name|slowOperation1
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|startExample
name|void
name|startExample
parameter_list|()
block|{
comment|//![0]
name|QElapsedTimer
name|timer
decl_stmt|;
name|timer
operator|.
name|start
argument_list|()
expr_stmt|;
name|slowOperation1
argument_list|()
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
literal|"The slow operation took"
operator|<<
name|timer
operator|.
name|elapsed
argument_list|()
operator|<<
literal|"milliseconds"
expr_stmt|;
comment|//![0]
block|}
end_function
begin_comment
comment|//![1]
end_comment
begin_function
DECL|function|executeSlowOperations
name|void
name|executeSlowOperations
parameter_list|(
name|int
name|timeout
parameter_list|)
block|{
name|QElapsedTimer
name|timer
decl_stmt|;
name|timer
operator|.
name|start
argument_list|()
expr_stmt|;
name|slowOperation1
argument_list|()
expr_stmt|;
name|int
name|remainingTime
init|=
name|timeout
operator|-
name|timer
operator|.
name|elapsed
argument_list|()
decl_stmt|;
if|if
condition|(
name|remainingTime
operator|>
literal|0
condition|)
name|slowOperation2
argument_list|(
name|remainingTime
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//![1]
end_comment
begin_comment
comment|//![2]
end_comment
begin_function
DECL|function|executeOperationsForTime
name|void
name|executeOperationsForTime
parameter_list|(
name|int
name|ms
parameter_list|)
block|{
name|QElapsedTimer
name|timer
decl_stmt|;
name|timer
operator|.
name|start
argument_list|()
expr_stmt|;
while|while
condition|(
operator|!
name|timer
operator|.
name|hasExpired
argument_list|(
name|ms
argument_list|)
condition|)
name|slowOperation1
argument_list|()
expr_stmt|;
block|}
end_function
begin_comment
comment|//![2]
end_comment
begin_function
DECL|function|restartExample
name|int
name|restartExample
parameter_list|()
block|{
comment|//![3]
name|QElapsedTimer
name|timer
decl_stmt|;
name|int
name|count
init|=
literal|1
decl_stmt|;
name|timer
operator|.
name|start
argument_list|()
expr_stmt|;
do|do
block|{
name|count
operator|*=
literal|2
expr_stmt|;
name|slowOperation2
argument_list|(
name|count
argument_list|)
expr_stmt|;
block|}
do|while
condition|(
name|timer
operator|.
name|restart
argument_list|()
operator|<
literal|250
condition|)
do|;
return|return
name|count
return|;
comment|//![3]
block|}
end_function
begin_function
DECL|function|main
name|int
name|main
parameter_list|(
name|int
name|argc
parameter_list|,
name|char
modifier|*
modifier|*
name|argv
parameter_list|)
block|{
name|QCoreApplication
name|app
argument_list|(
name|argc
argument_list|,
name|argv
argument_list|)
decl_stmt|;
name|startExample
argument_list|()
expr_stmt|;
name|restartExample
argument_list|()
expr_stmt|;
name|executeSlowOperations
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|executeOperationsForTime
argument_list|(
literal|5
argument_list|)
expr_stmt|;
block|}
end_function
end_unit
