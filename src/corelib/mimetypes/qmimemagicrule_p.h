begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the QtCore module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 3 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL3 included in the ** packaging of this file. Please review the following information to ** ensure the GNU Lesser General Public License version 3 requirements ** will be met: https://www.gnu.org/licenses/lgpl-3.0.html. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 2.0 or (at your option) the GNU General ** Public license version 3 or any later version approved by the KDE Free ** Qt Foundation. The licenses are as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL2 and LICENSE.GPL3 ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-2.0.html and ** https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QMIMEMAGICRULE_P_H
end_ifndef
begin_define
DECL|macro|QMIMEMAGICRULE_P_H
define|#
directive|define
name|QMIMEMAGICRULE_P_H
end_define
begin_comment
comment|//
end_comment
begin_comment
comment|//  W A R N I N G
end_comment
begin_comment
comment|//  -------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// This file is not part of the Qt API.  It exists purely as an
end_comment
begin_comment
comment|// implementation detail.  This header file may change from version to
end_comment
begin_comment
comment|// version without notice, or even be removed.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// We mean it.
end_comment
begin_comment
comment|//
end_comment
begin_include
include|#
directive|include
file|<QtCore/qglobal.h>
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_MIMETYPE
end_ifndef
begin_include
include|#
directive|include
file|<QtCore/qbytearray.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qscopedpointer.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qlist.h>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
DECL|variable|QMimeMagicRulePrivate
name|class
name|QMimeMagicRulePrivate
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|QMimeMagicRule
block|{
name|public
label|:
enum|enum
name|Type
block|{
name|Invalid
init|=
literal|0
block|,
name|String
block|,
name|Host16
block|,
name|Host32
block|,
name|Big16
block|,
name|Big32
block|,
name|Little16
block|,
name|Little32
block|,
name|Byte
block|}
enum|;
name|QMimeMagicRule
argument_list|(
specifier|const
name|QString
operator|&
name|typeStr
argument_list|,
specifier|const
name|QByteArray
operator|&
name|value
argument_list|,
specifier|const
name|QString
operator|&
name|offsets
argument_list|,
specifier|const
name|QByteArray
operator|&
name|mask
argument_list|,
name|QString
operator|*
name|errorString
argument_list|)
expr_stmt|;
name|QMimeMagicRule
argument_list|(
specifier|const
name|QMimeMagicRule
operator|&
name|other
argument_list|)
expr_stmt|;
operator|~
name|QMimeMagicRule
argument_list|()
expr_stmt|;
name|QMimeMagicRule
modifier|&
name|operator
init|=
operator|(
specifier|const
name|QMimeMagicRule
operator|&
name|other
operator|)
decl_stmt|;
name|bool
name|operator
operator|==
operator|(
specifier|const
name|QMimeMagicRule
operator|&
name|other
operator|)
specifier|const
expr_stmt|;
name|Type
name|type
argument_list|()
specifier|const
expr_stmt|;
name|QByteArray
name|value
argument_list|()
specifier|const
expr_stmt|;
name|int
name|startPos
argument_list|()
specifier|const
expr_stmt|;
name|int
name|endPos
argument_list|()
specifier|const
expr_stmt|;
name|QByteArray
name|mask
argument_list|()
specifier|const
expr_stmt|;
name|bool
name|isValid
argument_list|()
specifier|const
expr_stmt|;
name|bool
name|matches
argument_list|(
specifier|const
name|QByteArray
operator|&
name|data
argument_list|)
decl|const
decl_stmt|;
name|QList
operator|<
name|QMimeMagicRule
operator|>
name|m_subMatches
expr_stmt|;
specifier|static
name|Type
name|type
parameter_list|(
specifier|const
name|QByteArray
modifier|&
name|type
parameter_list|)
function_decl|;
specifier|static
name|QByteArray
name|typeName
parameter_list|(
name|Type
name|type
parameter_list|)
function_decl|;
specifier|static
name|bool
name|matchSubstring
parameter_list|(
specifier|const
name|char
modifier|*
name|dataPtr
parameter_list|,
name|int
name|dataSize
parameter_list|,
name|int
name|rangeStart
parameter_list|,
name|int
name|rangeLength
parameter_list|,
name|int
name|valueLength
parameter_list|,
specifier|const
name|char
modifier|*
name|valueData
parameter_list|,
specifier|const
name|char
modifier|*
name|mask
parameter_list|)
function_decl|;
name|private
label|:
specifier|const
name|QScopedPointer
operator|<
name|QMimeMagicRulePrivate
operator|>
name|d
expr_stmt|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_expr_stmt
name|Q_DECLARE_TYPEINFO
argument_list|(
name|QMimeMagicRule
argument_list|,
name|Q_MOVABLE_TYPE
argument_list|)
expr_stmt|;
end_expr_stmt
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_MIMETYPE
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QMIMEMAGICRULE_H
end_comment
end_unit
