begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the QtCore module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 3 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL3 included in the ** packaging of this file. Please review the following information to ** ensure the GNU Lesser General Public License version 3 requirements ** will be met: https://www.gnu.org/licenses/lgpl-3.0.html. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 2.0 or (at your option) the GNU General ** Public license version 3 or any later version approved by the KDE Free ** Qt Foundation. The licenses are as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL2 and LICENSE.GPL3 ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-2.0.html and ** https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QMIMETYPE_P_H
end_ifndef
begin_define
DECL|macro|QMIMETYPE_P_H
define|#
directive|define
name|QMIMETYPE_P_H
end_define
begin_comment
comment|//
end_comment
begin_comment
comment|//  W A R N I N G
end_comment
begin_comment
comment|//  -------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// This file is not part of the Qt API.  It exists purely as an
end_comment
begin_comment
comment|// implementation detail.  This header file may change from version to
end_comment
begin_comment
comment|// version without notice, or even be removed.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// We mean it.
end_comment
begin_comment
comment|//
end_comment
begin_include
include|#
directive|include
file|"qmimetype.h"
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_MIMETYPE
end_ifndef
begin_include
include|#
directive|include
file|<QtCore/qhash.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qstringlist.h>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
name|class
name|Q_AUTOTEST_EXPORT
name|QMimeTypePrivate
range|:
name|public
name|QSharedData
block|{
name|public
operator|:
typedef|typedef
name|QHash
operator|<
name|QString
operator|,
name|QString
operator|>
name|LocaleHash
expr_stmt|;
name|QMimeTypePrivate
argument_list|()
decl_stmt|;
end_decl_stmt
begin_function_decl
name|explicit
name|QMimeTypePrivate
parameter_list|(
specifier|const
name|QMimeType
modifier|&
name|other
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|void
name|clear
parameter_list|()
function_decl|;
end_function_decl
begin_function_decl
name|void
name|addGlobPattern
parameter_list|(
specifier|const
name|QString
modifier|&
name|pattern
parameter_list|)
function_decl|;
end_function_decl
begin_decl_stmt
name|bool
name|loaded
decl_stmt|;
end_decl_stmt
begin_comment
comment|// QSharedData leaves a 4 byte gap, so don't put 8 byte members first
end_comment
begin_decl_stmt
name|QString
name|name
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|LocaleHash
name|localeComments
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|QString
name|genericIconName
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|QString
name|iconName
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|QStringList
name|globPatterns
decl_stmt|;
end_decl_stmt
begin_macro
unit|};
name|QT_END_NAMESPACE
end_macro
begin_define
DECL|macro|QMIMETYPE_BUILDER
define|#
directive|define
name|QMIMETYPE_BUILDER
define|\
value|QT_BEGIN_NAMESPACE \     static QMimeType buildQMimeType ( \                          const QString&name, \                          const QString&genericIconName, \                          const QString&iconName, \                          const QStringList&globPatterns \                      ) \     { \         QMimeTypePrivate qMimeTypeData; \         qMimeTypeData.name = name; \         qMimeTypeData.genericIconName = genericIconName; \         qMimeTypeData.iconName = iconName; \         qMimeTypeData.globPatterns = globPatterns; \         return QMimeType(qMimeTypeData); \     } \     QT_END_NAMESPACE
end_define
begin_ifdef
ifdef|#
directive|ifdef
name|Q_COMPILER_RVALUE_REFS
end_ifdef
begin_define
DECL|macro|QMIMETYPE_BUILDER_FROM_RVALUE_REFS
define|#
directive|define
name|QMIMETYPE_BUILDER_FROM_RVALUE_REFS
define|\
value|QT_BEGIN_NAMESPACE \     static QMimeType buildQMimeType ( \                          QString&&name, \                          QString&&genericIconName, \                          QString&&iconName, \                          QStringList&&globPatterns \                      ) \     { \         QMimeTypePrivate qMimeTypeData; \         qMimeTypeData.name = std::move(name); \         qMimeTypeData.genericIconName = std::move(genericIconName); \         qMimeTypeData.iconName = std::move(iconName); \         qMimeTypeData.globPatterns = std::move(globPatterns); \         return QMimeType(qMimeTypeData); \     } \     QT_END_NAMESPACE
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_MIMETYPE
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QMIMETYPE_P_H
end_comment
end_unit
