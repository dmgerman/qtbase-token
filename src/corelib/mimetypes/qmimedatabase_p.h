begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the QtCore module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QMIMEDATABASE_P_H
end_ifndef
begin_define
DECL|macro|QMIMEDATABASE_P_H
define|#
directive|define
name|QMIMEDATABASE_P_H
end_define
begin_include
include|#
directive|include
file|<QtCore/qhash.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qmutex.h>
end_include
begin_include
include|#
directive|include
file|"qmimetype.h"
end_include
begin_include
include|#
directive|include
file|"qmimetype_p.h"
end_include
begin_include
include|#
directive|include
file|"qmimeglobpattern_p.h"
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
DECL|variable|QMimeDatabase
name|class
name|QMimeDatabase
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QMimeProviderBase
name|class
name|QMimeProviderBase
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|QMimeDatabasePrivate
block|{
name|public
label|:
name|Q_DISABLE_COPY
argument_list|(
argument|QMimeDatabasePrivate
argument_list|)
name|QMimeDatabasePrivate
argument_list|()
expr_stmt|;
operator|~
name|QMimeDatabasePrivate
argument_list|()
expr_stmt|;
specifier|static
name|QMimeDatabasePrivate
modifier|*
name|instance
parameter_list|()
function_decl|;
name|QMimeProviderBase
modifier|*
name|provider
parameter_list|()
function_decl|;
name|void
name|setProvider
parameter_list|(
name|QMimeProviderBase
modifier|*
name|theProvider
parameter_list|)
function_decl|;
specifier|inline
name|QString
name|defaultMimeType
argument_list|()
specifier|const
block|{
return|return
name|m_defaultMimeType
return|;
block|}
name|bool
name|inherits
parameter_list|(
specifier|const
name|QString
modifier|&
name|mime
parameter_list|,
specifier|const
name|QString
modifier|&
name|parent
parameter_list|)
function_decl|;
name|QList
operator|<
name|QMimeType
operator|>
name|allMimeTypes
argument_list|()
expr_stmt|;
name|QMimeType
name|mimeTypeForName
parameter_list|(
specifier|const
name|QString
modifier|&
name|nameOrAlias
parameter_list|)
function_decl|;
name|QMimeType
name|mimeTypeForFileNameAndData
parameter_list|(
specifier|const
name|QString
modifier|&
name|fileName
parameter_list|,
name|QIODevice
modifier|*
name|device
parameter_list|,
name|int
modifier|*
name|priorityPtr
parameter_list|)
function_decl|;
name|QMimeType
name|findByData
parameter_list|(
specifier|const
name|QByteArray
modifier|&
name|data
parameter_list|,
name|int
modifier|*
name|priorityPtr
parameter_list|)
function_decl|;
name|QStringList
name|mimeTypeForFileName
parameter_list|(
specifier|const
name|QString
modifier|&
name|fileName
parameter_list|,
name|QString
modifier|*
name|foundSuffix
init|=
literal|0
parameter_list|)
function_decl|;
name|mutable
name|QMimeProviderBase
modifier|*
name|m_provider
decl_stmt|;
specifier|const
name|QString
name|m_defaultMimeType
decl_stmt|;
name|QMutex
name|mutex
decl_stmt|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QMIMEDATABASE_P_H
end_comment
end_unit
