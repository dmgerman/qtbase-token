begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/ ** ** This file is part of the QtCore module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QTEXTCODEC_P_H
end_ifndef
begin_define
DECL|macro|QTEXTCODEC_P_H
define|#
directive|define
name|QTEXTCODEC_P_H
end_define
begin_comment
comment|//
end_comment
begin_comment
comment|//  W A R N I N G
end_comment
begin_comment
comment|//  -------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// This file is not part of the Qt API.  It exists for the convenience
end_comment
begin_comment
comment|// of the QTextCodec class.  This header file may change from
end_comment
begin_comment
comment|// version to version without notice, or even be removed.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// We mean it.
end_comment
begin_comment
comment|//
end_comment
begin_include
include|#
directive|include
file|"qtextcodec.h"
end_include
begin_include
include|#
directive|include
file|<string.h>
end_include
begin_macro
name|QT_BEGIN_NAMESPACE
end_macro
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_TEXTCODEC
end_ifndef
begin_typedef
DECL|typedef|QTextCodecStateFreeFunction
typedef|typedef
name|void
argument_list|(
operator|*
name|QTextCodecStateFreeFunction
argument_list|)
argument_list|(
name|QTextCodec
operator|::
name|ConverterState
operator|*
argument_list|)
expr_stmt|;
end_typedef
begin_struct
DECL|struct|QTextCodecUnalignedPointer
struct|struct
name|QTextCodecUnalignedPointer
block|{
DECL|function|decode
specifier|static
specifier|inline
name|QTextCodecStateFreeFunction
name|decode
parameter_list|(
specifier|const
name|uint
modifier|*
name|src
parameter_list|)
block|{
name|quintptr
name|data
decl_stmt|;
name|memcpy
argument_list|(
operator|&
name|data
argument_list|,
name|src
argument_list|,
sizeof|sizeof
argument_list|(
name|data
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|reinterpret_cast
operator|<
name|QTextCodecStateFreeFunction
operator|>
operator|(
name|data
operator|)
return|;
block|}
DECL|function|encode
specifier|static
specifier|inline
name|void
name|encode
parameter_list|(
name|uint
modifier|*
name|dst
parameter_list|,
name|QTextCodecStateFreeFunction
name|fn
parameter_list|)
block|{
name|quintptr
name|data
init|=
name|reinterpret_cast
operator|<
name|quintptr
operator|>
operator|(
name|fn
operator|)
decl_stmt|;
name|memcpy
argument_list|(
name|dst
argument_list|,
operator|&
name|data
argument_list|,
sizeof|sizeof
argument_list|(
name|data
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
struct|;
end_struct
begin_else
else|#
directive|else
end_else
begin_decl_stmt
name|class
name|QTextCodec
block|{
name|public
label|:
enum|enum
name|ConversionFlag
block|{
name|DefaultConversion
block|,
name|ConvertInvalidToNull
init|=
literal|0x80000000
block|,
name|IgnoreHeader
init|=
literal|0x1
block|,
name|FreeFunction
init|=
literal|0x2
block|}
enum|;
name|Q_DECLARE_FLAGS
argument_list|(
argument|ConversionFlags
argument_list|,
argument|ConversionFlag
argument_list|)
struct|struct
name|ConverterState
block|{
name|ConverterState
argument_list|(
argument|ConversionFlags f = DefaultConversion
argument_list|)
block|:
name|flags
argument_list|(
name|f
argument_list|)
operator|,
name|remainingChars
argument_list|(
literal|0
argument_list|)
operator|,
name|invalidChars
argument_list|(
literal|0
argument_list|)
operator|,
name|d
argument_list|(
literal|0
argument_list|)
block|{
name|state_data
index|[
literal|0
index|]
operator|=
name|state_data
index|[
literal|1
index|]
operator|=
name|state_data
index|[
literal|2
index|]
operator|=
literal|0
block|; }
operator|~
name|ConverterState
argument_list|()
block|{ }
name|ConversionFlags
name|flags
expr_stmt|;
name|int
name|remainingChars
decl_stmt|;
name|int
name|invalidChars
decl_stmt|;
name|uint
name|state_data
index|[
literal|3
index|]
decl_stmt|;
name|void
modifier|*
name|d
decl_stmt|;
name|private
label|:
name|Q_DISABLE_COPY
argument_list|(
argument|ConverterState
argument_list|)
block|}
struct|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|//QT_NO_TEXTCODEC
end_comment
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
end_unit
