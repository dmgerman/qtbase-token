begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the QtCore module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QTCONCURRENT_COMPILERTEST_H
end_ifndef
begin_define
DECL|macro|QTCONCURRENT_COMPILERTEST_H
define|#
directive|define
name|QTCONCURRENT_COMPILERTEST_H
end_define
begin_include
include|#
directive|include
file|<QtCore/qglobal.h>
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_CONCURRENT
end_ifndef
begin_function
name|QT_BEGIN_HEADER
name|QT_BEGIN_NAMESPACE
DECL|function|QT_MODULE
name|QT_MODULE
parameter_list|(
name|Core
parameter_list|)
if|#
directive|if
name|defined
argument_list|(
name|Q_CC_MSVC
argument_list|)
operator|&&
operator|(
name|_MSC_VER
operator|<
literal|1300
operator|)
DECL|macro|QT_TYPENAME
define|#
directive|define
name|QT_TYPENAME
else|#
directive|else
define|#
directive|define
name|QT_TYPENAME
value|typename
endif|#
directive|endif
name|namespace
name|QtPrivate
decl_stmt|{  template<class T> class HasResultType
block|{
typedef|typedef
name|char
name|Yes
typedef|;
typedef|typedef
name|void
modifier|*
name|No
typedef|;
name|template
operator|<
name|typename
name|U
operator|>
specifier|static
name|Yes
name|test
argument_list|(
argument|int
argument_list|,
argument|const typename U::result_type * =
literal|0
argument_list|)
expr_stmt|;
name|template
operator|<
name|typename
name|U
operator|>
specifier|static
name|No
name|test
argument_list|(
name|double
argument_list|)
expr_stmt|;
name|public
label|:
enum|enum
block|{
name|Value
init|=
operator|(
sizeof|sizeof
argument_list|(
name|test
operator|<
name|T
operator|>
operator|(
literal|0
operator|)
argument_list|)
operator|==
sizeof|sizeof
argument_list|(
name|Yes
argument_list|)
operator|)
block|}
enum|;
block|}
end_function
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_macro
unit|}  QT_END_NAMESPACE
name|QT_END_HEADER
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_CONCURRENT
end_comment
begin_endif
endif|#
directive|endif
end_endif
end_unit
