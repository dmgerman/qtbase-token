begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: http://www.qt-project.org/ ** ** This file is part of the QtCore module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QRUNNABLE_H
end_ifndef
begin_define
DECL|macro|QRUNNABLE_H
define|#
directive|define
name|QRUNNABLE_H
end_define
begin_include
include|#
directive|include
file|<QtCore/qglobal.h>
end_include
begin_function
name|QT_BEGIN_HEADER
name|QT_BEGIN_NAMESPACE
DECL|function|QT_MODULE
name|QT_MODULE
parameter_list|(
name|Core
parameter_list|)
name|class
name|QRunnable
decl_stmt|{     int ref;
end_function
begin_decl_stmt
name|friend
name|class
name|QThreadPool
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|friend
name|class
name|QThreadPoolPrivate
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|friend
name|class
name|QThreadPoolThread
decl_stmt|;
end_decl_stmt
begin_label
name|public
label|:
end_label
begin_function_decl
name|virtual
name|void
name|run
parameter_list|()
init|=
literal|0
function_decl|;
end_function_decl
begin_expr_stmt
name|QRunnable
argument_list|()
operator|:
name|ref
argument_list|(
literal|0
argument_list|)
block|{ }
name|virtual
operator|~
name|QRunnable
argument_list|()
block|{ }
name|bool
name|autoDelete
argument_list|()
specifier|const
block|{
return|return
name|ref
operator|!=
operator|-
literal|1
return|;
block|}
end_expr_stmt
begin_function
name|void
name|setAutoDelete
parameter_list|(
name|bool
name|_autoDelete
parameter_list|)
block|{
name|ref
operator|=
name|_autoDelete
condition|?
literal|0
else|:
operator|-
literal|1
expr_stmt|;
block|}
end_function
begin_expr_stmt
unit|};
name|QT_END_NAMESPACE
name|QT_END_HEADER
end_expr_stmt
begin_endif
endif|#
directive|endif
end_endif
end_unit
