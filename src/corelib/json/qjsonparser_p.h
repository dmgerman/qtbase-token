begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/ ** ** This file is part of the QtCore module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QJSONPARSER_P_H
end_ifndef
begin_define
DECL|macro|QJSONPARSER_P_H
define|#
directive|define
name|QJSONPARSER_P_H
end_define
begin_comment
comment|//
end_comment
begin_comment
comment|//  W A R N I N G
end_comment
begin_comment
comment|//  -------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// This file is not part of the Qt API.  It exists purely as an
end_comment
begin_comment
comment|// implementation detail.  This header file may change from version to
end_comment
begin_comment
comment|// version without notice, or even be removed.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// We mean it.
end_comment
begin_comment
comment|//
end_comment
begin_include
include|#
directive|include
file|<qjsondocument.h>
end_include
begin_include
include|#
directive|include
file|<qvarlengtharray.h>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
name|namespace
name|QJsonPrivate
block|{
name|class
name|Parser
block|{
name|public
label|:
name|Parser
argument_list|(
argument|const char *json
argument_list|,
argument|int length
argument_list|)
empty_stmt|;
name|QJsonDocument
name|parse
parameter_list|(
name|QJsonParseError
modifier|*
name|error
parameter_list|)
function_decl|;
name|class
name|ParsedObject
block|{
name|public
label|:
name|ParsedObject
argument_list|(
argument|Parser *p
argument_list|,
argument|int pos
argument_list|)
block|:
name|parser
argument_list|(
name|p
argument_list|)
operator|,
name|objectPosition
argument_list|(
argument|pos
argument_list|)
block|{}
name|void
name|insert
argument_list|(
argument|uint offset
argument_list|)
expr_stmt|;
name|Parser
modifier|*
name|parser
decl_stmt|;
name|int
name|objectPosition
decl_stmt|;
name|QVarLengthArray
operator|<
name|uint
operator|>
name|offsets
expr_stmt|;
specifier|inline
name|QJsonPrivate
operator|::
name|Entry
operator|*
name|entryAt
argument_list|(
argument|int i
argument_list|)
specifier|const
block|{
return|return
name|reinterpret_cast
operator|<
name|QJsonPrivate
operator|::
name|Entry
operator|*
operator|>
operator|(
name|parser
operator|->
name|data
operator|+
name|objectPosition
operator|+
name|offsets
index|[
name|i
index|]
operator|)
return|;
block|}
block|}
empty_stmt|;
name|private
label|:
specifier|inline
name|void
name|eatBOM
parameter_list|()
function_decl|;
specifier|inline
name|bool
name|eatSpace
parameter_list|()
function_decl|;
specifier|inline
name|char
name|nextToken
parameter_list|()
function_decl|;
name|bool
name|parseObject
parameter_list|()
function_decl|;
name|bool
name|parseArray
parameter_list|()
function_decl|;
name|bool
name|parseMember
parameter_list|(
name|int
name|baseOffset
parameter_list|)
function_decl|;
name|bool
name|parseString
parameter_list|(
name|bool
modifier|*
name|latin1
parameter_list|)
function_decl|;
name|bool
name|parseValue
argument_list|(
name|QJsonPrivate
operator|::
name|Value
operator|*
name|val
argument_list|,
name|int
name|baseOffset
argument_list|)
decl_stmt|;
name|bool
name|parseNumber
argument_list|(
name|QJsonPrivate
operator|::
name|Value
operator|*
name|val
argument_list|,
name|int
name|baseOffset
argument_list|)
decl_stmt|;
specifier|const
name|char
modifier|*
name|head
decl_stmt|;
specifier|const
name|char
modifier|*
name|json
decl_stmt|;
specifier|const
name|char
modifier|*
name|end
decl_stmt|;
name|char
modifier|*
name|data
decl_stmt|;
name|int
name|dataLength
decl_stmt|;
name|int
name|current
decl_stmt|;
name|QJsonParseError
operator|::
name|ParseError
name|lastError
expr_stmt|;
specifier|inline
name|int
name|reserveSpace
parameter_list|(
name|int
name|space
parameter_list|)
block|{
if|if
condition|(
name|current
operator|+
name|space
operator|>=
name|dataLength
condition|)
block|{
name|dataLength
operator|=
literal|2
operator|*
name|dataLength
operator|+
name|space
expr_stmt|;
name|data
operator|=
operator|(
name|char
operator|*
operator|)
name|realloc
argument_list|(
name|data
argument_list|,
name|dataLength
argument_list|)
expr_stmt|;
block|}
name|int
name|pos
init|=
name|current
decl_stmt|;
name|current
operator|+=
name|space
expr_stmt|;
return|return
name|pos
return|;
block|}
block|}
empty_stmt|;
block|}
end_decl_stmt
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
end_unit
