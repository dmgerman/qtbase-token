begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the QtCore module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 3 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL3 included in the ** packaging of this file. Please review the following information to ** ensure the GNU Lesser General Public License version 3 requirements ** will be met: https://www.gnu.org/licenses/lgpl-3.0.html. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 2.0 or (at your option) the GNU General ** Public license version 3 or any later version approved by the KDE Free ** Qt Foundation. The licenses are as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL2 and LICENSE.GPL3 ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-2.0.html and ** https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|//  W A R N I N G
end_comment
begin_comment
comment|//  -------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// This file is not part of the Qt API.  It exists for the convenience
end_comment
begin_comment
comment|// of other Qt classes.  This header file may change from version to
end_comment
begin_comment
comment|// version without notice, or even be removed.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// We mean it.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// This file was generated by qlalr - DO NOT EDIT!
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QXMLSTREAM_P_H
end_ifndef
begin_define
DECL|macro|QXMLSTREAM_P_H
define|#
directive|define
name|QXMLSTREAM_P_H
end_define
begin_if
if|#
directive|if
name|defined
argument_list|(
name|ERROR
argument_list|)
end_if
begin_undef
DECL|macro|ERROR
undef|#
directive|undef
name|ERROR
end_undef
begin_endif
endif|#
directive|endif
end_endif
begin_decl_stmt
name|class
name|QXmlStreamReader_Table
block|{
name|public
label|:
enum|enum
name|VariousConstants
block|{
name|EOF_SYMBOL
init|=
literal|0
block|,
name|AMPERSAND
init|=
literal|5
block|,
name|ANY
init|=
literal|41
block|,
name|ATTLIST
init|=
literal|31
block|,
name|BANG
init|=
literal|25
block|,
name|CDATA
init|=
literal|47
block|,
name|CDATA_START
init|=
literal|28
block|,
name|COLON
init|=
literal|17
block|,
name|COMMA
init|=
literal|19
block|,
name|DASH
init|=
literal|20
block|,
name|DBLQUOTE
init|=
literal|8
block|,
name|DIGIT
init|=
literal|27
block|,
name|DOCTYPE
init|=
literal|29
block|,
name|DOT
init|=
literal|23
block|,
name|ELEMENT
init|=
literal|30
block|,
name|EMPTY
init|=
literal|40
block|,
name|ENTITIES
init|=
literal|51
block|,
name|ENTITY
init|=
literal|32
block|,
name|ENTITY_DONE
init|=
literal|45
block|,
name|EQ
init|=
literal|14
block|,
name|ERROR
init|=
literal|43
block|,
name|FIXED
init|=
literal|39
block|,
name|HASH
init|=
literal|6
block|,
name|ID
init|=
literal|48
block|,
name|IDREF
init|=
literal|49
block|,
name|IDREFS
init|=
literal|50
block|,
name|IMPLIED
init|=
literal|38
block|,
name|LANGLE
init|=
literal|3
block|,
name|LBRACK
init|=
literal|9
block|,
name|LETTER
init|=
literal|26
block|,
name|LPAREN
init|=
literal|11
block|,
name|NDATA
init|=
literal|36
block|,
name|NMTOKEN
init|=
literal|52
block|,
name|NMTOKENS
init|=
literal|53
block|,
name|NOTATION
init|=
literal|33
block|,
name|NOTOKEN
init|=
literal|1
block|,
name|PARSE_ENTITY
init|=
literal|44
block|,
name|PCDATA
init|=
literal|42
block|,
name|PERCENT
init|=
literal|15
block|,
name|PIPE
init|=
literal|13
block|,
name|PLUS
init|=
literal|21
block|,
name|PUBLIC
init|=
literal|35
block|,
name|QUESTIONMARK
init|=
literal|24
block|,
name|QUOTE
init|=
literal|7
block|,
name|RANGLE
init|=
literal|4
block|,
name|RBRACK
init|=
literal|10
block|,
name|REQUIRED
init|=
literal|37
block|,
name|RPAREN
init|=
literal|12
block|,
name|SEMICOLON
init|=
literal|18
block|,
name|SHIFT_THERE
init|=
literal|56
block|,
name|SLASH
init|=
literal|16
block|,
name|SPACE
init|=
literal|2
block|,
name|STAR
init|=
literal|22
block|,
name|SYSTEM
init|=
literal|34
block|,
name|UNRESOLVED_ENTITY
init|=
literal|46
block|,
name|VERSION
init|=
literal|55
block|,
name|XML
init|=
literal|54
block|,
name|ACCEPT_STATE
init|=
literal|416
block|,
name|RULE_COUNT
init|=
literal|270
block|,
name|STATE_COUNT
init|=
literal|427
block|,
name|TERMINAL_COUNT
init|=
literal|57
block|,
name|NON_TERMINAL_COUNT
init|=
literal|84
block|,
name|GOTO_INDEX_OFFSET
init|=
literal|427
block|,
name|GOTO_INFO_OFFSET
init|=
literal|1017
block|,
name|GOTO_CHECK_OFFSET
init|=
literal|1017
block|}
enum|;
specifier|static
specifier|const
name|char
modifier|*
specifier|const
name|spell
index|[]
decl_stmt|;
specifier|static
specifier|const
name|short
name|lhs
index|[]
decl_stmt|;
specifier|static
specifier|const
name|short
name|rhs
index|[]
decl_stmt|;
specifier|static
specifier|const
name|short
name|goto_default
index|[]
decl_stmt|;
specifier|static
specifier|const
name|short
name|action_default
index|[]
decl_stmt|;
specifier|static
specifier|const
name|short
name|action_index
index|[]
decl_stmt|;
specifier|static
specifier|const
name|short
name|action_info
index|[]
decl_stmt|;
specifier|static
specifier|const
name|short
name|action_check
index|[]
decl_stmt|;
specifier|static
specifier|inline
name|int
name|nt_action
parameter_list|(
name|int
name|state
parameter_list|,
name|int
name|nt
parameter_list|)
block|{
specifier|const
name|int
name|yyn
init|=
name|action_index
index|[
name|GOTO_INDEX_OFFSET
operator|+
name|state
index|]
operator|+
name|nt
decl_stmt|;
if|if
condition|(
name|yyn
operator|<
literal|0
operator|||
name|action_check
index|[
name|GOTO_CHECK_OFFSET
operator|+
name|yyn
index|]
operator|!=
name|nt
condition|)
return|return
name|goto_default
index|[
name|nt
index|]
return|;
return|return
name|action_info
index|[
name|GOTO_INFO_OFFSET
operator|+
name|yyn
index|]
return|;
block|}
specifier|static
specifier|inline
name|int
name|t_action
parameter_list|(
name|int
name|state
parameter_list|,
name|int
name|token
parameter_list|)
block|{
specifier|const
name|int
name|yyn
init|=
name|action_index
index|[
name|state
index|]
operator|+
name|token
decl_stmt|;
if|if
condition|(
name|yyn
operator|<
literal|0
operator|||
name|action_check
index|[
name|yyn
index|]
operator|!=
name|token
condition|)
return|return
operator|-
name|action_default
index|[
name|state
index|]
return|;
return|return
name|action_info
index|[
name|yyn
index|]
return|;
block|}
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_expr_stmt
DECL|member|spell
specifier|const
name|char
operator|*
specifier|const
name|QXmlStreamReader_Table
operator|::
name|spell
index|[]
operator|=
block|{
literal|"end of file"
block|,
literal|0
block|,
literal|" "
block|,
literal|"<"
block|,
literal|">"
block|,
literal|"&"
block|,
literal|"#"
block|,
literal|"\'"
block|,
literal|"\""
block|,
literal|"["
block|,
literal|"]"
block|,
literal|"("
block|,
literal|")"
block|,
literal|"|"
block|,
literal|"="
block|,
literal|"%"
block|,
literal|"/"
block|,
literal|":"
block|,
literal|";"
block|,
literal|","
block|,
literal|"-"
block|,
literal|"+"
block|,
literal|"*"
block|,
literal|"."
block|,
literal|"?"
block|,
literal|"!"
block|,
literal|"[a-zA-Z]"
block|,
literal|"[0-9]"
block|,
literal|"[CDATA["
block|,
literal|"DOCTYPE"
block|,
literal|"ELEMENT"
block|,
literal|"ATTLIST"
block|,
literal|"ENTITY"
block|,
literal|"NOTATION"
block|,
literal|"SYSTEM"
block|,
literal|"PUBLIC"
block|,
literal|"NDATA"
block|,
literal|"REQUIRED"
block|,
literal|"IMPLIED"
block|,
literal|"FIXED"
block|,
literal|"EMPTY"
block|,
literal|"ANY"
block|,
literal|"PCDATA"
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|"CDATA"
block|,
literal|"ID"
block|,
literal|"IDREF"
block|,
literal|"IDREFS"
block|,
literal|"ENTITIES"
block|,
literal|"NMTOKEN"
block|,
literal|"NMTOKENS"
block|,
literal|"<?xml"
block|,
literal|"version"
block|,
literal|0
block|}
expr_stmt|;
end_expr_stmt
begin_expr_stmt
DECL|member|lhs
specifier|const
name|short
name|QXmlStreamReader_Table
operator|::
name|lhs
index|[]
operator|=
block|{
literal|57
block|,
literal|57
block|,
literal|59
block|,
literal|59
block|,
literal|59
block|,
literal|59
block|,
literal|59
block|,
literal|59
block|,
literal|59
block|,
literal|59
block|,
literal|67
block|,
literal|68
block|,
literal|64
block|,
literal|72
block|,
literal|72
block|,
literal|72
block|,
literal|75
block|,
literal|66
block|,
literal|66
block|,
literal|66
block|,
literal|66
block|,
literal|79
block|,
literal|78
block|,
literal|80
block|,
literal|80
block|,
literal|80
block|,
literal|80
block|,
literal|80
block|,
literal|80
block|,
literal|80
block|,
literal|81
block|,
literal|81
block|,
literal|81
block|,
literal|81
block|,
literal|81
block|,
literal|81
block|,
literal|81
block|,
literal|87
block|,
literal|83
block|,
literal|88
block|,
literal|88
block|,
literal|88
block|,
literal|88
block|,
literal|91
block|,
literal|92
block|,
literal|93
block|,
literal|93
block|,
literal|93
block|,
literal|93
block|,
literal|94
block|,
literal|94
block|,
literal|96
block|,
literal|96
block|,
literal|96
block|,
literal|97
block|,
literal|97
block|,
literal|98
block|,
literal|98
block|,
literal|99
block|,
literal|99
block|,
literal|100
block|,
literal|100
block|,
literal|89
block|,
literal|89
block|,
literal|95
block|,
literal|90
block|,
literal|101
block|,
literal|101
block|,
literal|103
block|,
literal|103
block|,
literal|103
block|,
literal|103
block|,
literal|103
block|,
literal|103
block|,
literal|103
block|,
literal|103
block|,
literal|103
block|,
literal|103
block|,
literal|104
block|,
literal|105
block|,
literal|105
block|,
literal|105
block|,
literal|105
block|,
literal|107
block|,
literal|108
block|,
literal|109
block|,
literal|109
block|,
literal|84
block|,
literal|84
block|,
literal|110
block|,
literal|110
block|,
literal|112
block|,
literal|112
block|,
literal|85
block|,
literal|85
block|,
literal|85
block|,
literal|65
block|,
literal|65
block|,
literal|76
block|,
literal|114
block|,
literal|63
block|,
literal|115
block|,
literal|116
block|,
literal|86
block|,
literal|86
block|,
literal|86
block|,
literal|117
block|,
literal|117
block|,
literal|117
block|,
literal|117
block|,
literal|117
block|,
literal|117
block|,
literal|117
block|,
literal|117
block|,
literal|117
block|,
literal|117
block|,
literal|117
block|,
literal|117
block|,
literal|117
block|,
literal|117
block|,
literal|117
block|,
literal|117
block|,
literal|117
block|,
literal|117
block|,
literal|117
block|,
literal|117
block|,
literal|117
block|,
literal|117
block|,
literal|117
block|,
literal|118
block|,
literal|118
block|,
literal|119
block|,
literal|119
block|,
literal|119
block|,
literal|119
block|,
literal|119
block|,
literal|119
block|,
literal|119
block|,
literal|119
block|,
literal|122
block|,
literal|70
block|,
literal|70
block|,
literal|70
block|,
literal|70
block|,
literal|123
block|,
literal|124
block|,
literal|123
block|,
literal|124
block|,
literal|123
block|,
literal|124
block|,
literal|123
block|,
literal|124
block|,
literal|126
block|,
literal|126
block|,
literal|126
block|,
literal|126
block|,
literal|126
block|,
literal|126
block|,
literal|126
block|,
literal|126
block|,
literal|126
block|,
literal|126
block|,
literal|126
block|,
literal|126
block|,
literal|126
block|,
literal|126
block|,
literal|126
block|,
literal|126
block|,
literal|126
block|,
literal|126
block|,
literal|126
block|,
literal|126
block|,
literal|126
block|,
literal|126
block|,
literal|125
block|,
literal|73
block|,
literal|113
block|,
literal|113
block|,
literal|113
block|,
literal|113
block|,
literal|127
block|,
literal|128
block|,
literal|127
block|,
literal|128
block|,
literal|127
block|,
literal|128
block|,
literal|127
block|,
literal|128
block|,
literal|129
block|,
literal|129
block|,
literal|129
block|,
literal|129
block|,
literal|129
block|,
literal|129
block|,
literal|129
block|,
literal|129
block|,
literal|129
block|,
literal|129
block|,
literal|129
block|,
literal|129
block|,
literal|129
block|,
literal|129
block|,
literal|129
block|,
literal|129
block|,
literal|129
block|,
literal|129
block|,
literal|129
block|,
literal|129
block|,
literal|129
block|,
literal|129
block|,
literal|129
block|,
literal|129
block|,
literal|129
block|,
literal|106
block|,
literal|106
block|,
literal|106
block|,
literal|106
block|,
literal|131
block|,
literal|132
block|,
literal|131
block|,
literal|132
block|,
literal|131
block|,
literal|131
block|,
literal|132
block|,
literal|132
block|,
literal|133
block|,
literal|133
block|,
literal|133
block|,
literal|133
block|,
literal|135
block|,
literal|71
block|,
literal|71
block|,
literal|71
block|,
literal|136
block|,
literal|136
block|,
literal|137
block|,
literal|62
block|,
literal|60
block|,
literal|61
block|,
literal|138
block|,
literal|121
block|,
literal|82
block|,
literal|130
block|,
literal|134
block|,
literal|120
block|,
literal|139
block|,
literal|139
block|,
literal|139
block|,
literal|139
block|,
literal|58
block|,
literal|58
block|,
literal|58
block|,
literal|58
block|,
literal|58
block|,
literal|58
block|,
literal|58
block|,
literal|58
block|,
literal|58
block|,
literal|58
block|,
literal|74
block|,
literal|69
block|,
literal|69
block|,
literal|77
block|,
literal|111
block|,
literal|102
block|,
literal|102
block|,
literal|102
block|,
literal|102
block|,
literal|102
block|,
literal|140
block|}
expr_stmt|;
end_expr_stmt
begin_expr_stmt
DECL|member|rhs
specifier|const
name|short
name|QXmlStreamReader_Table
operator|::
name|rhs
index|[]
operator|=
block|{
literal|2
block|,
literal|1
block|,
literal|4
block|,
literal|2
block|,
literal|2
block|,
literal|2
block|,
literal|2
block|,
literal|2
block|,
literal|2
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|9
block|,
literal|2
block|,
literal|4
block|,
literal|0
block|,
literal|4
block|,
literal|4
block|,
literal|6
block|,
literal|6
block|,
literal|4
block|,
literal|1
block|,
literal|3
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|2
block|,
literal|2
block|,
literal|2
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|4
block|,
literal|4
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|2
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|2
block|,
literal|2
block|,
literal|2
block|,
literal|6
block|,
literal|6
block|,
literal|1
block|,
literal|5
block|,
literal|1
block|,
literal|5
block|,
literal|3
block|,
literal|5
block|,
literal|0
block|,
literal|1
block|,
literal|6
block|,
literal|8
block|,
literal|4
block|,
literal|2
block|,
literal|1
block|,
literal|5
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|6
block|,
literal|7
block|,
literal|1
block|,
literal|2
block|,
literal|2
block|,
literal|1
block|,
literal|4
block|,
literal|3
block|,
literal|3
block|,
literal|1
block|,
literal|2
block|,
literal|5
block|,
literal|6
block|,
literal|4
block|,
literal|6
block|,
literal|3
block|,
literal|5
block|,
literal|5
block|,
literal|3
block|,
literal|4
block|,
literal|4
block|,
literal|5
block|,
literal|2
block|,
literal|3
block|,
literal|2
block|,
literal|2
block|,
literal|4
block|,
literal|5
block|,
literal|5
block|,
literal|7
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|2
block|,
literal|2
block|,
literal|2
block|,
literal|2
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|2
block|,
literal|2
block|,
literal|3
block|,
literal|3
block|,
literal|2
block|,
literal|2
block|,
literal|2
block|,
literal|2
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|2
block|,
literal|2
block|,
literal|3
block|,
literal|3
block|,
literal|2
block|,
literal|2
block|,
literal|2
block|,
literal|2
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|2
block|,
literal|2
block|,
literal|3
block|,
literal|3
block|,
literal|2
block|,
literal|2
block|,
literal|2
block|,
literal|2
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|5
block|,
literal|0
block|,
literal|1
block|,
literal|3
block|,
literal|1
block|,
literal|3
block|,
literal|2
block|,
literal|4
block|,
literal|3
block|,
literal|5
block|,
literal|1
block|,
literal|3
block|,
literal|3
block|,
literal|3
block|,
literal|3
block|,
literal|4
block|,
literal|1
block|,
literal|1
block|,
literal|2
block|,
literal|2
block|,
literal|2
block|,
literal|4
block|,
literal|2
block|,
literal|2
block|,
literal|2
block|,
literal|2
block|,
literal|2
block|,
literal|2
block|,
literal|2
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|2
block|}
expr_stmt|;
end_expr_stmt
begin_expr_stmt
DECL|member|action_default
specifier|const
name|short
name|QXmlStreamReader_Table
operator|::
name|action_default
index|[]
operator|=
block|{
literal|10
block|,
literal|259
block|,
literal|0
block|,
literal|2
block|,
literal|1
block|,
literal|0
block|,
literal|125
block|,
literal|117
block|,
literal|119
block|,
literal|120
block|,
literal|127
block|,
literal|129
block|,
literal|123
block|,
literal|11
block|,
literal|114
block|,
literal|108
block|,
literal|0
block|,
literal|109
block|,
literal|128
block|,
literal|111
block|,
literal|115
block|,
literal|113
block|,
literal|121
block|,
literal|124
block|,
literal|126
block|,
literal|107
block|,
literal|110
block|,
literal|112
block|,
literal|118
block|,
literal|116
block|,
literal|131
block|,
literal|122
block|,
literal|240
block|,
literal|12
block|,
literal|254
block|,
literal|136
block|,
literal|250
block|,
literal|253
block|,
literal|0
block|,
literal|130
block|,
literal|140
block|,
literal|257
block|,
literal|16
block|,
literal|252
block|,
literal|138
block|,
literal|137
block|,
literal|0
block|,
literal|256
block|,
literal|139
block|,
literal|259
block|,
literal|231
block|,
literal|258
block|,
literal|255
block|,
literal|0
block|,
literal|0
block|,
literal|264
block|,
literal|0
block|,
literal|247
block|,
literal|246
block|,
literal|0
block|,
literal|249
block|,
literal|248
block|,
literal|245
block|,
literal|241
block|,
literal|99
block|,
literal|263
block|,
literal|0
block|,
literal|236
block|,
literal|0
block|,
literal|0
block|,
literal|260
block|,
literal|97
block|,
literal|98
block|,
literal|101
block|,
literal|0
block|,
literal|132
block|,
literal|134
block|,
literal|133
block|,
literal|135
block|,
literal|0
block|,
literal|0
block|,
literal|261
block|,
literal|0
block|,
literal|0
block|,
literal|176
block|,
literal|0
block|,
literal|173
block|,
literal|165
block|,
literal|167
block|,
literal|168
block|,
literal|142
block|,
literal|154
block|,
literal|171
block|,
literal|162
block|,
literal|156
block|,
literal|157
block|,
literal|153
block|,
literal|159
block|,
literal|163
block|,
literal|161
block|,
literal|169
block|,
literal|172
block|,
literal|152
block|,
literal|155
block|,
literal|158
block|,
literal|160
block|,
literal|166
block|,
literal|164
block|,
literal|174
block|,
literal|170
block|,
literal|150
block|,
literal|175
block|,
literal|0
block|,
literal|144
block|,
literal|148
block|,
literal|146
block|,
literal|151
block|,
literal|141
block|,
literal|149
block|,
literal|0
block|,
literal|147
block|,
literal|143
block|,
literal|145
block|,
literal|0
block|,
literal|15
block|,
literal|14
block|,
literal|262
block|,
literal|0
block|,
literal|22
block|,
literal|21
block|,
literal|261
block|,
literal|30
block|,
literal|0
block|,
literal|20
block|,
literal|0
block|,
literal|0
block|,
literal|32
block|,
literal|37
block|,
literal|31
block|,
literal|0
block|,
literal|33
block|,
literal|261
block|,
literal|0
block|,
literal|34
block|,
literal|0
block|,
literal|24
block|,
literal|0
block|,
literal|35
block|,
literal|0
block|,
literal|26
block|,
literal|36
block|,
literal|25
block|,
literal|0
block|,
literal|242
block|,
literal|41
block|,
literal|40
block|,
literal|261
block|,
literal|43
block|,
literal|49
block|,
literal|261
block|,
literal|42
block|,
literal|0
block|,
literal|44
block|,
literal|261
block|,
literal|49
block|,
literal|261
block|,
literal|0
block|,
literal|261
block|,
literal|0
block|,
literal|49
block|,
literal|0
block|,
literal|48
block|,
literal|46
block|,
literal|47
block|,
literal|51
block|,
literal|52
block|,
literal|261
block|,
literal|261
block|,
literal|0
block|,
literal|57
block|,
literal|261
block|,
literal|54
block|,
literal|261
block|,
literal|0
block|,
literal|58
block|,
literal|0
block|,
literal|55
block|,
literal|261
block|,
literal|53
block|,
literal|261
block|,
literal|0
block|,
literal|56
block|,
literal|65
block|,
literal|0
block|,
literal|261
block|,
literal|61
block|,
literal|261
block|,
literal|0
block|,
literal|59
block|,
literal|62
block|,
literal|63
block|,
literal|0
block|,
literal|261
block|,
literal|0
block|,
literal|0
block|,
literal|60
block|,
literal|64
block|,
literal|45
block|,
literal|50
block|,
literal|66
block|,
literal|0
block|,
literal|39
block|,
literal|0
block|,
literal|0
block|,
literal|261
block|,
literal|0
block|,
literal|94
block|,
literal|95
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|261
block|,
literal|0
block|,
literal|210
block|,
literal|201
block|,
literal|203
block|,
literal|205
block|,
literal|178
block|,
literal|190
block|,
literal|208
block|,
literal|199
block|,
literal|193
block|,
literal|191
block|,
literal|194
block|,
literal|189
block|,
literal|196
block|,
literal|198
block|,
literal|206
block|,
literal|209
block|,
literal|188
block|,
literal|192
block|,
literal|195
block|,
literal|197
block|,
literal|202
block|,
literal|200
block|,
literal|204
block|,
literal|207
block|,
literal|211
block|,
literal|213
block|,
literal|212
block|,
literal|186
block|,
literal|0
block|,
literal|0
block|,
literal|243
block|,
literal|180
block|,
literal|184
block|,
literal|182
block|,
literal|0
block|,
literal|0
block|,
literal|93
block|,
literal|187
block|,
literal|177
block|,
literal|185
block|,
literal|0
block|,
literal|183
block|,
literal|179
block|,
literal|181
block|,
literal|92
block|,
literal|0
block|,
literal|96
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|261
block|,
literal|86
block|,
literal|261
block|,
literal|0
block|,
literal|262
block|,
literal|0
block|,
literal|87
block|,
literal|0
block|,
literal|89
block|,
literal|69
block|,
literal|74
block|,
literal|73
block|,
literal|70
block|,
literal|71
block|,
literal|72
block|,
literal|261
block|,
literal|75
block|,
literal|76
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|269
block|,
literal|268
block|,
literal|266
block|,
literal|267
block|,
literal|265
block|,
literal|67
block|,
literal|261
block|,
literal|0
block|,
literal|261
block|,
literal|0
block|,
literal|0
block|,
literal|68
block|,
literal|77
block|,
literal|261
block|,
literal|0
block|,
literal|261
block|,
literal|0
block|,
literal|0
block|,
literal|78
block|,
literal|0
block|,
literal|79
block|,
literal|0
block|,
literal|82
block|,
literal|85
block|,
literal|0
block|,
literal|0
block|,
literal|215
block|,
literal|225
block|,
literal|224
block|,
literal|0
block|,
literal|227
block|,
literal|229
block|,
literal|228
block|,
literal|226
block|,
literal|0
block|,
literal|244
block|,
literal|217
block|,
literal|221
block|,
literal|219
block|,
literal|223
block|,
literal|214
block|,
literal|222
block|,
literal|0
block|,
literal|220
block|,
literal|216
block|,
literal|218
block|,
literal|0
block|,
literal|81
block|,
literal|80
block|,
literal|0
block|,
literal|83
block|,
literal|0
block|,
literal|84
block|,
literal|88
block|,
literal|100
block|,
literal|0
block|,
literal|38
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|91
block|,
literal|90
block|,
literal|0
block|,
literal|103
block|,
literal|23
block|,
literal|27
block|,
literal|29
block|,
literal|28
block|,
literal|0
block|,
literal|0
block|,
literal|261
block|,
literal|262
block|,
literal|0
block|,
literal|261
block|,
literal|0
block|,
literal|106
block|,
literal|105
block|,
literal|261
block|,
literal|0
block|,
literal|104
block|,
literal|102
block|,
literal|0
block|,
literal|0
block|,
literal|18
block|,
literal|261
block|,
literal|17
block|,
literal|0
block|,
literal|19
block|,
literal|0
block|,
literal|0
block|,
literal|251
block|,
literal|0
block|,
literal|261
block|,
literal|0
block|,
literal|239
block|,
literal|0
block|,
literal|232
block|,
literal|238
block|,
literal|0
block|,
literal|237
block|,
literal|234
block|,
literal|261
block|,
literal|261
block|,
literal|262
block|,
literal|233
block|,
literal|235
block|,
literal|0
block|,
literal|261
block|,
literal|0
block|,
literal|230
block|,
literal|261
block|,
literal|0
block|,
literal|261
block|,
literal|0
block|,
literal|231
block|,
literal|0
block|,
literal|0
block|,
literal|13
block|,
literal|270
block|,
literal|9
block|,
literal|5
block|,
literal|8
block|,
literal|4
block|,
literal|0
block|,
literal|7
block|,
literal|259
block|,
literal|6
block|,
literal|0
block|,
literal|3
block|}
expr_stmt|;
end_expr_stmt
begin_expr_stmt
DECL|member|goto_default
specifier|const
name|short
name|QXmlStreamReader_Table
operator|::
name|goto_default
index|[]
operator|=
block|{
literal|2
block|,
literal|4
block|,
literal|3
block|,
literal|49
block|,
literal|388
block|,
literal|43
block|,
literal|37
block|,
literal|52
block|,
literal|47
block|,
literal|41
block|,
literal|249
block|,
literal|53
block|,
literal|127
block|,
literal|84
block|,
literal|393
block|,
literal|81
block|,
literal|85
block|,
literal|126
block|,
literal|42
block|,
literal|46
block|,
literal|169
block|,
literal|130
block|,
literal|131
block|,
literal|146
block|,
literal|145
block|,
literal|149
block|,
literal|138
block|,
literal|136
block|,
literal|140
block|,
literal|147
block|,
literal|139
block|,
literal|159
block|,
literal|160
block|,
literal|157
block|,
literal|168
block|,
literal|167
block|,
literal|209
block|,
literal|165
block|,
literal|164
block|,
literal|166
block|,
literal|187
block|,
literal|180
block|,
literal|196
block|,
literal|200
block|,
literal|303
block|,
literal|302
block|,
literal|295
block|,
literal|321
block|,
literal|320
block|,
literal|319
block|,
literal|279
block|,
literal|277
block|,
literal|278
block|,
literal|142
block|,
literal|56
block|,
literal|141
block|,
literal|222
block|,
literal|38
block|,
literal|34
block|,
literal|148
block|,
literal|39
block|,
literal|48
block|,
literal|40
block|,
literal|248
block|,
literal|45
block|,
literal|36
block|,
literal|119
block|,
literal|112
block|,
literal|330
block|,
literal|111
block|,
literal|264
block|,
literal|252
block|,
literal|251
block|,
literal|250
block|,
literal|339
block|,
literal|326
block|,
literal|325
block|,
literal|329
block|,
literal|398
block|,
literal|399
block|,
literal|50
block|,
literal|51
block|,
literal|59
block|,
literal|0
block|}
expr_stmt|;
end_expr_stmt
begin_expr_stmt
DECL|member|action_index
specifier|const
name|short
name|QXmlStreamReader_Table
operator|::
name|action_index
index|[]
operator|=
block|{
operator|-
literal|21
block|,
operator|-
literal|57
block|,
literal|33
block|,
literal|119
block|,
literal|960
block|,
literal|70
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
literal|105
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
literal|40
block|,
operator|-
literal|57
block|,
literal|795
block|,
operator|-
literal|57
block|,
literal|47
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
literal|107
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
literal|84
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|38
block|,
literal|80
block|,
operator|-
literal|57
block|,
literal|12
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
literal|97
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
literal|13
block|,
operator|-
literal|57
block|,
literal|56
block|,
literal|34
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
literal|51
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
literal|53
block|,
literal|57
block|,
literal|84
block|,
literal|300
block|,
literal|255
block|,
operator|-
literal|57
block|,
literal|84
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
literal|355
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
literal|326
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
literal|48
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
literal|50
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
literal|84
block|,
literal|155
block|,
literal|32
block|,
operator|-
literal|57
block|,
literal|38
block|,
literal|22
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
literal|115
block|,
operator|-
literal|57
block|,
literal|35
block|,
literal|156
block|,
operator|-
literal|57
block|,
literal|173
block|,
operator|-
literal|57
block|,
literal|245
block|,
operator|-
literal|57
block|,
literal|44
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
literal|16
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
literal|29
block|,
operator|-
literal|57
block|,
literal|116
block|,
literal|29
block|,
operator|-
literal|57
block|,
literal|133
block|,
operator|-
literal|57
block|,
literal|29
block|,
literal|129
block|,
literal|84
block|,
literal|15
block|,
literal|29
block|,
operator|-
literal|22
block|,
literal|121
block|,
literal|74
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
literal|82
block|,
literal|29
block|,
literal|29
block|,
literal|88
block|,
operator|-
literal|57
block|,
literal|29
block|,
literal|7
block|,
literal|29
block|,
literal|86
block|,
operator|-
literal|57
block|,
literal|83
block|,
operator|-
literal|57
block|,
literal|27
block|,
literal|19
block|,
literal|26
block|,
literal|94
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
literal|106
block|,
literal|29
block|,
literal|3
block|,
literal|29
block|,
operator|-
literal|8
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
literal|104
block|,
literal|29
block|,
operator|-
literal|6
block|,
operator|-
literal|7
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
literal|17
block|,
operator|-
literal|57
block|,
operator|-
literal|2
block|,
literal|11
block|,
literal|29
block|,
literal|18
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
literal|850
block|,
literal|65
block|,
literal|465
block|,
literal|67
block|,
literal|84
block|,
literal|135
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
literal|630
block|,
literal|24
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
literal|84
block|,
literal|76
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
literal|740
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
literal|39
block|,
operator|-
literal|57
block|,
literal|23
block|,
literal|21
block|,
literal|14
block|,
literal|78
block|,
literal|22
block|,
literal|84
block|,
operator|-
literal|57
block|,
literal|84
block|,
literal|184
block|,
literal|20
block|,
literal|31
block|,
operator|-
literal|57
block|,
literal|41
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
literal|84
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
literal|36
block|,
literal|126
block|,
literal|162
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
literal|29
block|,
literal|79
block|,
literal|29
block|,
literal|29
block|,
literal|160
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
literal|29
block|,
literal|145
block|,
literal|29
block|,
literal|75
block|,
literal|29
block|,
operator|-
literal|57
block|,
literal|575
block|,
operator|-
literal|57
block|,
literal|410
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
literal|110
block|,
literal|64
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
literal|685
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|17
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
literal|520
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
literal|29
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
literal|61
block|,
operator|-
literal|57
block|,
literal|29
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
literal|29
block|,
operator|-
literal|57
block|,
literal|29
block|,
literal|29
block|,
operator|-
literal|15
block|,
literal|29
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
literal|29
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
literal|95
block|,
literal|43
block|,
literal|29
block|,
literal|45
block|,
literal|9
block|,
literal|29
block|,
literal|10
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
literal|29
block|,
literal|2
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|24
block|,
literal|190
block|,
operator|-
literal|57
block|,
literal|29
block|,
operator|-
literal|57
block|,
literal|1
block|,
operator|-
literal|57
block|,
literal|905
block|,
literal|150
block|,
operator|-
literal|57
block|,
operator|-
literal|26
block|,
literal|29
block|,
literal|0
block|,
operator|-
literal|57
block|,
literal|109
block|,
operator|-
literal|26
block|,
operator|-
literal|57
block|,
literal|8
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
literal|29
block|,
literal|29
block|,
operator|-
literal|19
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|11
block|,
literal|29
block|,
literal|59
block|,
operator|-
literal|57
block|,
literal|29
block|,
operator|-
literal|5
block|,
literal|29
block|,
literal|103
block|,
literal|29
block|,
operator|-
literal|16
block|,
literal|6
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
literal|69
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
operator|-
literal|57
block|,
literal|905
block|,
operator|-
literal|57
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
literal|204
block|,
literal|75
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
literal|7
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
literal|101
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
literal|64
block|,
literal|54
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
literal|68
block|,
operator|-
literal|84
block|,
literal|30
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
literal|32
block|,
operator|-
literal|84
block|,
operator|-
literal|16
block|,
operator|-
literal|7
block|,
operator|-
literal|84
block|,
literal|42
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
literal|45
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
literal|44
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
literal|33
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
literal|36
block|,
literal|108
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
literal|69
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
literal|62
block|,
operator|-
literal|84
block|,
literal|63
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
literal|118
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|2
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|10
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
literal|25
block|,
operator|-
literal|21
block|,
literal|11
block|,
operator|-
literal|84
block|,
literal|20
block|,
operator|-
literal|84
block|,
operator|-
literal|25
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
literal|1
block|,
literal|2
block|,
operator|-
literal|36
block|,
operator|-
literal|84
block|,
operator|-
literal|9
block|,
operator|-
literal|84
block|,
literal|5
block|,
operator|-
literal|13
block|,
operator|-
literal|84
block|,
operator|-
literal|8
block|,
operator|-
literal|84
block|,
literal|6
block|,
operator|-
literal|84
block|,
literal|8
block|,
literal|12
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
literal|23
block|,
operator|-
literal|84
block|,
literal|4
block|,
operator|-
literal|1
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
literal|0
block|,
operator|-
literal|84
block|,
operator|-
literal|14
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
literal|55
block|,
operator|-
literal|84
block|,
literal|58
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
literal|53
block|,
literal|47
block|,
literal|123
block|,
literal|67
block|,
literal|66
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|15
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
literal|41
block|,
literal|40
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|46
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
literal|35
block|,
operator|-
literal|84
block|,
literal|34
block|,
literal|37
block|,
literal|18
block|,
literal|70
block|,
operator|-
literal|84
block|,
literal|89
block|,
operator|-
literal|84
block|,
literal|43
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
literal|48
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
literal|31
block|,
operator|-
literal|84
block|,
literal|29
block|,
literal|27
block|,
literal|17
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
literal|38
block|,
literal|24
block|,
literal|39
block|,
operator|-
literal|84
block|,
literal|49
block|,
operator|-
literal|84
block|,
literal|71
block|,
operator|-
literal|84
block|,
literal|93
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|12
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
literal|94
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
literal|78
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
literal|50
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
literal|46
block|,
operator|-
literal|84
block|,
literal|56
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
literal|60
block|,
operator|-
literal|84
block|,
literal|61
block|,
literal|59
block|,
literal|51
block|,
literal|57
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
literal|14
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|11
block|,
operator|-
literal|6
block|,
literal|72
block|,
operator|-
literal|5
block|,
operator|-
literal|84
block|,
operator|-
literal|3
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
literal|52
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|20
block|,
literal|77
block|,
operator|-
literal|84
block|,
literal|21
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
literal|76
block|,
literal|16
block|,
operator|-
literal|84
block|,
literal|19
block|,
literal|26
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
literal|10
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
literal|80
block|,
literal|13
block|,
literal|73
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
literal|22
block|,
operator|-
literal|27
block|,
operator|-
literal|84
block|,
literal|9
block|,
operator|-
literal|84
block|,
literal|28
block|,
literal|15
block|,
literal|82
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
operator|-
literal|84
block|,
literal|3
block|,
operator|-
literal|84
block|,
literal|98
block|,
operator|-
literal|84
block|}
expr_stmt|;
end_expr_stmt
begin_expr_stmt
DECL|member|action_info
specifier|const
name|short
name|QXmlStreamReader_Table
operator|::
name|action_info
index|[]
operator|=
block|{
literal|65
block|,
literal|332
block|,
literal|65
block|,
literal|405
block|,
literal|392
block|,
literal|385
block|,
literal|377
block|,
literal|65
block|,
literal|414
block|,
literal|410
block|,
literal|415
block|,
literal|55
block|,
literal|397
block|,
literal|374
block|,
literal|373
block|,
literal|217
block|,
literal|206
block|,
literal|408
block|,
literal|65
block|,
literal|65
block|,
literal|207
block|,
literal|211
block|,
literal|216
block|,
literal|1
block|,
literal|55
block|,
literal|199
block|,
literal|182
block|,
literal|192
block|,
literal|70
block|,
literal|70
block|,
literal|63
block|,
literal|70
block|,
literal|189
block|,
literal|416
block|,
literal|153
block|,
literal|350
block|,
literal|133
block|,
literal|70
block|,
literal|72
block|,
literal|55
block|,
literal|65
block|,
literal|351
block|,
literal|254
block|,
literal|270
block|,
literal|73
block|,
literal|284
block|,
literal|65
block|,
literal|310
block|,
literal|55
block|,
literal|65
block|,
literal|83
block|,
literal|82
block|,
literal|83
block|,
literal|82
block|,
literal|129
block|,
literal|83
block|,
literal|82
block|,
literal|54
block|,
literal|70
block|,
literal|128
block|,
literal|83
block|,
literal|82
block|,
literal|66
block|,
literal|64
block|,
literal|83
block|,
literal|82
block|,
literal|318
block|,
literal|316
block|,
literal|318
block|,
literal|316
block|,
literal|54
block|,
literal|212
block|,
literal|83
block|,
literal|82
block|,
literal|83
block|,
literal|82
block|,
literal|54
block|,
literal|55
block|,
literal|367
block|,
literal|366
block|,
literal|69
block|,
literal|80
block|,
literal|79
block|,
literal|83
block|,
literal|82
block|,
literal|163
block|,
literal|70
block|,
literal|314
block|,
literal|305
block|,
literal|272
block|,
literal|55
block|,
literal|306
block|,
literal|305
block|,
literal|354
block|,
literal|163
block|,
literal|177
block|,
literal|55
block|,
literal|163
block|,
literal|379
block|,
literal|163
block|,
literal|65
block|,
literal|176
block|,
literal|83
block|,
literal|82
block|,
literal|55
block|,
literal|163
block|,
literal|58
block|,
literal|57
block|,
literal|0
block|,
literal|65
block|,
literal|83
block|,
literal|82
block|,
literal|65
block|,
literal|395
block|,
literal|65
block|,
literal|62
block|,
literal|203
block|,
literal|202
block|,
literal|195
block|,
literal|194
block|,
literal|65
block|,
literal|417
block|,
literal|16
block|,
literal|61
block|,
literal|60
block|,
literal|396
block|,
literal|156
block|,
literal|272
block|,
literal|0
block|,
literal|66
block|,
literal|64
block|,
literal|65
block|,
literal|317
block|,
literal|318
block|,
literal|316
block|,
literal|378
block|,
literal|379
block|,
literal|171
block|,
literal|173
block|,
literal|162
block|,
literal|172
block|,
literal|54
block|,
literal|171
block|,
literal|173
block|,
literal|163
block|,
literal|172
block|,
literal|0
block|,
literal|345
block|,
literal|344
block|,
literal|343
block|,
literal|171
block|,
literal|173
block|,
literal|0
block|,
literal|172
block|,
literal|0
block|,
literal|155
block|,
literal|154
block|,
literal|70
block|,
literal|134
block|,
literal|65
block|,
literal|0
block|,
literal|55
block|,
literal|297
block|,
literal|220
block|,
literal|218
block|,
literal|298
block|,
literal|389
block|,
literal|0
block|,
literal|300
block|,
literal|0
block|,
literal|135
block|,
literal|301
block|,
literal|299
block|,
literal|33
block|,
literal|66
block|,
literal|64
block|,
literal|65
block|,
literal|297
block|,
literal|0
block|,
literal|297
block|,
literal|298
block|,
literal|0
block|,
literal|298
block|,
literal|300
block|,
literal|0
block|,
literal|300
block|,
literal|301
block|,
literal|299
block|,
literal|301
block|,
literal|299
block|,
literal|221
block|,
literal|219
block|,
literal|70
block|,
literal|272
block|,
literal|381
block|,
literal|291
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|128
block|,
literal|13
block|,
literal|0
block|,
literal|0
block|,
literal|273
block|,
literal|271
block|,
literal|274
block|,
literal|275
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|287
block|,
literal|294
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|285
block|,
literal|288
block|,
literal|289
block|,
literal|290
block|,
literal|286
block|,
literal|292
block|,
literal|293
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|70
block|,
literal|134
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|362
block|,
literal|0
block|,
literal|108
block|,
literal|0
block|,
literal|103
block|,
literal|135
block|,
literal|94
block|,
literal|117
block|,
literal|116
block|,
literal|95
block|,
literal|104
block|,
literal|97
block|,
literal|105
block|,
literal|99
block|,
literal|93
block|,
literal|98
block|,
literal|107
block|,
literal|87
block|,
literal|106
block|,
literal|88
block|,
literal|89
block|,
literal|100
block|,
literal|109
block|,
literal|92
block|,
literal|101
block|,
literal|86
block|,
literal|96
block|,
literal|91
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|13
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|108
block|,
literal|0
block|,
literal|103
block|,
literal|0
block|,
literal|94
block|,
literal|102
block|,
literal|90
block|,
literal|95
block|,
literal|104
block|,
literal|97
block|,
literal|105
block|,
literal|99
block|,
literal|93
block|,
literal|98
block|,
literal|107
block|,
literal|87
block|,
literal|106
block|,
literal|88
block|,
literal|89
block|,
literal|100
block|,
literal|109
block|,
literal|92
block|,
literal|101
block|,
literal|86
block|,
literal|96
block|,
literal|91
block|,
literal|108
block|,
literal|0
block|,
literal|103
block|,
literal|0
block|,
literal|94
block|,
literal|121
block|,
literal|120
block|,
literal|95
block|,
literal|104
block|,
literal|97
block|,
literal|105
block|,
literal|99
block|,
literal|93
block|,
literal|98
block|,
literal|107
block|,
literal|87
block|,
literal|106
block|,
literal|88
block|,
literal|89
block|,
literal|100
block|,
literal|109
block|,
literal|92
block|,
literal|101
block|,
literal|86
block|,
literal|96
block|,
literal|91
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|108
block|,
literal|0
block|,
literal|103
block|,
literal|0
block|,
literal|94
block|,
literal|114
block|,
literal|113
block|,
literal|95
block|,
literal|104
block|,
literal|97
block|,
literal|105
block|,
literal|99
block|,
literal|93
block|,
literal|98
block|,
literal|107
block|,
literal|87
block|,
literal|106
block|,
literal|88
block|,
literal|89
block|,
literal|100
block|,
literal|109
block|,
literal|92
block|,
literal|101
block|,
literal|86
block|,
literal|96
block|,
literal|91
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|108
block|,
literal|0
block|,
literal|103
block|,
literal|322
block|,
literal|94
block|,
literal|337
block|,
literal|336
block|,
literal|95
block|,
literal|104
block|,
literal|97
block|,
literal|105
block|,
literal|99
block|,
literal|93
block|,
literal|98
block|,
literal|107
block|,
literal|87
block|,
literal|106
block|,
literal|88
block|,
literal|89
block|,
literal|100
block|,
literal|109
block|,
literal|92
block|,
literal|101
block|,
literal|86
block|,
literal|96
block|,
literal|91
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|13
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|246
block|,
literal|233
block|,
literal|241
block|,
literal|223
block|,
literal|232
block|,
literal|262
block|,
literal|261
block|,
literal|234
block|,
literal|242
block|,
literal|236
block|,
literal|243
block|,
literal|237
block|,
literal|231
block|,
literal|0
block|,
literal|245
block|,
literal|225
block|,
literal|244
block|,
literal|226
block|,
literal|227
block|,
literal|238
block|,
literal|247
block|,
literal|230
block|,
literal|239
block|,
literal|224
block|,
literal|235
block|,
literal|229
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|13
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|108
block|,
literal|0
block|,
literal|103
block|,
literal|322
block|,
literal|94
block|,
literal|341
block|,
literal|340
block|,
literal|95
block|,
literal|104
block|,
literal|97
block|,
literal|105
block|,
literal|99
block|,
literal|93
block|,
literal|98
block|,
literal|107
block|,
literal|87
block|,
literal|106
block|,
literal|88
block|,
literal|89
block|,
literal|100
block|,
literal|109
block|,
literal|92
block|,
literal|101
block|,
literal|86
block|,
literal|96
block|,
literal|91
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|13
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|108
block|,
literal|0
block|,
literal|103
block|,
literal|322
block|,
literal|94
block|,
literal|324
block|,
literal|323
block|,
literal|95
block|,
literal|104
block|,
literal|97
block|,
literal|105
block|,
literal|99
block|,
literal|93
block|,
literal|98
block|,
literal|107
block|,
literal|87
block|,
literal|106
block|,
literal|88
block|,
literal|89
block|,
literal|100
block|,
literal|109
block|,
literal|92
block|,
literal|101
block|,
literal|86
block|,
literal|96
block|,
literal|91
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|13
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|246
block|,
literal|233
block|,
literal|241
block|,
literal|223
block|,
literal|232
block|,
literal|256
block|,
literal|255
block|,
literal|234
block|,
literal|242
block|,
literal|236
block|,
literal|243
block|,
literal|237
block|,
literal|231
block|,
literal|0
block|,
literal|245
block|,
literal|225
block|,
literal|244
block|,
literal|226
block|,
literal|227
block|,
literal|238
block|,
literal|247
block|,
literal|230
block|,
literal|239
block|,
literal|224
block|,
literal|235
block|,
literal|229
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|13
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|108
block|,
literal|0
block|,
literal|103
block|,
literal|322
block|,
literal|94
block|,
literal|334
block|,
literal|333
block|,
literal|95
block|,
literal|104
block|,
literal|97
block|,
literal|105
block|,
literal|99
block|,
literal|93
block|,
literal|98
block|,
literal|107
block|,
literal|87
block|,
literal|106
block|,
literal|88
block|,
literal|89
block|,
literal|100
block|,
literal|109
block|,
literal|92
block|,
literal|101
block|,
literal|86
block|,
literal|96
block|,
literal|91
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|13
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|246
block|,
literal|233
block|,
literal|241
block|,
literal|223
block|,
literal|232
block|,
literal|266
block|,
literal|265
block|,
literal|234
block|,
literal|242
block|,
literal|236
block|,
literal|243
block|,
literal|237
block|,
literal|231
block|,
literal|0
block|,
literal|245
block|,
literal|225
block|,
literal|244
block|,
literal|226
block|,
literal|227
block|,
literal|238
block|,
literal|247
block|,
literal|230
block|,
literal|239
block|,
literal|224
block|,
literal|235
block|,
literal|229
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|13
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|30
block|,
literal|0
block|,
literal|25
block|,
literal|74
block|,
literal|15
block|,
literal|24
block|,
literal|10
block|,
literal|17
block|,
literal|26
block|,
literal|19
block|,
literal|27
block|,
literal|21
block|,
literal|14
block|,
literal|20
block|,
literal|29
block|,
literal|7
block|,
literal|28
block|,
literal|8
block|,
literal|9
block|,
literal|22
block|,
literal|31
block|,
literal|12
block|,
literal|23
block|,
literal|6
block|,
literal|18
block|,
literal|11
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|13
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|246
block|,
literal|233
block|,
literal|241
block|,
literal|223
block|,
literal|232
block|,
literal|240
block|,
literal|228
block|,
literal|234
block|,
literal|242
block|,
literal|236
block|,
literal|243
block|,
literal|237
block|,
literal|231
block|,
literal|0
block|,
literal|245
block|,
literal|225
block|,
literal|244
block|,
literal|226
block|,
literal|227
block|,
literal|238
block|,
literal|247
block|,
literal|230
block|,
literal|239
block|,
literal|224
block|,
literal|235
block|,
literal|229
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|13
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|30
block|,
literal|387
block|,
literal|25
block|,
literal|5
block|,
literal|15
block|,
literal|24
block|,
literal|10
block|,
literal|17
block|,
literal|26
block|,
literal|19
block|,
literal|27
block|,
literal|21
block|,
literal|14
block|,
literal|20
block|,
literal|29
block|,
literal|7
block|,
literal|28
block|,
literal|8
block|,
literal|9
block|,
literal|22
block|,
literal|31
block|,
literal|12
block|,
literal|23
block|,
literal|6
block|,
literal|18
block|,
literal|11
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|13
block|,
literal|32
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|33
block|,
literal|0
block|,
literal|0
block|,
literal|30
block|,
literal|16
block|,
literal|25
block|,
literal|5
block|,
literal|15
block|,
literal|24
block|,
literal|10
block|,
literal|17
block|,
literal|26
block|,
literal|19
block|,
literal|27
block|,
literal|21
block|,
literal|14
block|,
literal|20
block|,
literal|29
block|,
literal|7
block|,
literal|28
block|,
literal|8
block|,
literal|9
block|,
literal|22
block|,
literal|31
block|,
literal|12
block|,
literal|23
block|,
literal|6
block|,
literal|18
block|,
literal|11
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|13
block|,
literal|32
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|33
block|,
literal|0
block|,
literal|0
block|,
literal|380
block|,
literal|179
block|,
literal|210
block|,
literal|181
block|,
literal|425
block|,
literal|368
block|,
literal|205
block|,
literal|375
block|,
literal|371
block|,
literal|372
block|,
literal|161
block|,
literal|208
block|,
literal|204
block|,
literal|178
block|,
literal|185
block|,
literal|174
block|,
literal|201
block|,
literal|183
block|,
literal|188
block|,
literal|198
block|,
literal|190
block|,
literal|409
block|,
literal|407
block|,
literal|175
block|,
literal|184
block|,
literal|404
block|,
literal|267
block|,
literal|67
block|,
literal|412
block|,
literal|186
block|,
literal|400
block|,
literal|361
block|,
literal|193
block|,
literal|384
block|,
literal|406
block|,
literal|197
block|,
literal|67
block|,
literal|170
block|,
literal|391
block|,
literal|390
block|,
literal|411
block|,
literal|307
block|,
literal|331
block|,
literal|304
block|,
literal|309
block|,
literal|125
block|,
literal|124
block|,
literal|71
block|,
literal|132
block|,
literal|191
block|,
literal|311
block|,
literal|313
block|,
literal|110
block|,
literal|260
block|,
literal|352
block|,
literal|276
block|,
literal|0
block|,
literal|257
block|,
literal|259
block|,
literal|123
block|,
literal|296
block|,
literal|118
block|,
literal|308
block|,
literal|348
block|,
literal|376
block|,
literal|386
block|,
literal|315
block|,
literal|346
block|,
literal|312
block|,
literal|258
block|,
literal|215
block|,
literal|394
block|,
literal|360
block|,
literal|349
block|,
literal|358
block|,
literal|213
block|,
literal|359
block|,
literal|353
block|,
literal|356
block|,
literal|269
block|,
literal|0
block|,
literal|328
block|,
literal|281
block|,
literal|0
block|,
literal|370
block|,
literal|44
block|,
literal|44
block|,
literal|280
block|,
literal|328
block|,
literal|369
block|,
literal|0
block|,
literal|355
block|,
literal|402
block|,
literal|400
block|,
literal|383
block|,
literal|347
block|,
literal|413
block|,
literal|401
block|,
literal|382
block|,
literal|394
block|,
literal|158
block|,
literal|283
block|,
literal|426
block|,
literal|328
block|,
literal|328
block|,
literal|357
block|,
literal|280
block|,
literal|0
block|,
literal|44
block|,
literal|214
block|,
literal|0
block|,
literal|76
block|,
literal|122
block|,
literal|115
block|,
literal|137
block|,
literal|0
block|,
literal|150
block|,
literal|0
block|,
literal|143
block|,
literal|263
block|,
literal|253
block|,
literal|0
block|,
literal|68
block|,
literal|152
block|,
literal|137
block|,
literal|151
block|,
literal|150
block|,
literal|144
block|,
literal|143
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|327
block|,
literal|365
block|,
literal|268
block|,
literal|144
block|,
literal|35
block|,
literal|35
block|,
literal|282
block|,
literal|327
block|,
literal|363
block|,
literal|364
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|403
block|,
literal|0
block|,
literal|0
block|,
literal|342
block|,
literal|0
block|,
literal|327
block|,
literal|327
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|35
block|,
literal|78
block|,
literal|0
block|,
literal|75
block|,
literal|77
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|338
block|,
literal|335
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|423
block|,
literal|0
block|,
literal|420
block|,
literal|418
block|,
literal|424
block|,
literal|422
block|,
literal|419
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|421
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
expr_stmt|;
end_expr_stmt
begin_expr_stmt
DECL|member|action_check
specifier|const
name|short
name|QXmlStreamReader_Table
operator|::
name|action_check
index|[]
operator|=
block|{
literal|26
block|,
literal|18
block|,
literal|26
block|,
literal|14
block|,
literal|4
block|,
literal|4
block|,
literal|4
block|,
literal|26
block|,
literal|24
block|,
literal|14
block|,
literal|4
block|,
literal|26
block|,
literal|4
block|,
literal|4
block|,
literal|4
block|,
literal|4
block|,
literal|22
block|,
literal|55
block|,
literal|26
block|,
literal|26
block|,
literal|42
block|,
literal|4
block|,
literal|4
block|,
literal|44
block|,
literal|26
block|,
literal|22
block|,
literal|19
block|,
literal|12
block|,
literal|2
block|,
literal|2
block|,
literal|18
block|,
literal|2
block|,
literal|13
block|,
literal|0
block|,
literal|18
block|,
literal|4
block|,
literal|4
block|,
literal|2
block|,
literal|4
block|,
literal|26
block|,
literal|26
block|,
literal|20
block|,
literal|18
block|,
literal|4
block|,
literal|4
block|,
literal|4
block|,
literal|26
block|,
literal|11
block|,
literal|26
block|,
literal|26
block|,
literal|7
block|,
literal|8
block|,
literal|7
block|,
literal|8
block|,
literal|4
block|,
literal|7
block|,
literal|8
block|,
literal|6
block|,
literal|2
block|,
literal|9
block|,
literal|7
block|,
literal|8
block|,
literal|24
block|,
literal|25
block|,
literal|7
block|,
literal|8
block|,
literal|7
block|,
literal|8
block|,
literal|7
block|,
literal|8
block|,
literal|6
block|,
literal|36
block|,
literal|7
block|,
literal|8
block|,
literal|7
block|,
literal|8
block|,
literal|6
block|,
literal|26
block|,
literal|34
block|,
literal|35
block|,
literal|24
block|,
literal|34
block|,
literal|35
block|,
literal|7
block|,
literal|8
block|,
literal|11
block|,
literal|2
block|,
literal|12
block|,
literal|13
block|,
literal|20
block|,
literal|26
block|,
literal|12
block|,
literal|13
block|,
literal|15
block|,
literal|11
block|,
literal|13
block|,
literal|26
block|,
literal|11
block|,
literal|29
block|,
literal|11
block|,
literal|26
block|,
literal|19
block|,
literal|7
block|,
literal|8
block|,
literal|26
block|,
literal|11
block|,
literal|26
block|,
literal|27
block|,
operator|-
literal|1
block|,
literal|26
block|,
literal|7
block|,
literal|8
block|,
literal|26
block|,
literal|4
block|,
literal|26
block|,
literal|18
block|,
literal|12
block|,
literal|13
block|,
literal|12
block|,
literal|13
block|,
literal|26
block|,
literal|2
block|,
literal|3
block|,
literal|26
block|,
literal|27
block|,
literal|16
block|,
literal|11
block|,
literal|20
block|,
operator|-
literal|1
block|,
literal|24
block|,
literal|25
block|,
literal|26
block|,
literal|6
block|,
literal|7
block|,
literal|8
block|,
literal|28
block|,
literal|29
block|,
literal|21
block|,
literal|22
block|,
literal|6
block|,
literal|24
block|,
literal|6
block|,
literal|21
block|,
literal|22
block|,
literal|11
block|,
literal|24
block|,
operator|-
literal|1
block|,
literal|37
block|,
literal|38
block|,
literal|39
block|,
literal|21
block|,
literal|22
block|,
operator|-
literal|1
block|,
literal|24
block|,
operator|-
literal|1
block|,
literal|40
block|,
literal|41
block|,
literal|2
block|,
literal|3
block|,
literal|26
block|,
operator|-
literal|1
block|,
literal|26
block|,
literal|17
block|,
literal|7
block|,
literal|8
block|,
literal|20
block|,
literal|16
block|,
operator|-
literal|1
block|,
literal|23
block|,
operator|-
literal|1
block|,
literal|15
block|,
literal|26
block|,
literal|27
block|,
literal|54
block|,
literal|24
block|,
literal|25
block|,
literal|26
block|,
literal|17
block|,
operator|-
literal|1
block|,
literal|17
block|,
literal|20
block|,
operator|-
literal|1
block|,
literal|20
block|,
literal|23
block|,
operator|-
literal|1
block|,
literal|23
block|,
literal|26
block|,
literal|27
block|,
literal|26
block|,
literal|27
block|,
literal|34
block|,
literal|35
block|,
literal|2
block|,
literal|20
block|,
literal|4
block|,
literal|11
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|9
block|,
literal|45
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|30
block|,
literal|31
block|,
literal|32
block|,
literal|33
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|32
block|,
literal|33
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|47
block|,
literal|48
block|,
literal|49
block|,
literal|50
block|,
literal|51
block|,
literal|52
block|,
literal|53
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|2
block|,
literal|3
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|10
block|,
operator|-
literal|1
block|,
literal|2
block|,
operator|-
literal|1
block|,
literal|4
block|,
literal|15
block|,
literal|6
block|,
literal|7
block|,
literal|8
block|,
literal|9
block|,
literal|10
block|,
literal|11
block|,
literal|12
block|,
literal|13
block|,
literal|14
block|,
literal|15
block|,
literal|16
block|,
literal|17
block|,
literal|18
block|,
literal|19
block|,
literal|20
block|,
literal|21
block|,
literal|22
block|,
literal|23
block|,
literal|24
block|,
literal|25
block|,
literal|26
block|,
literal|27
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|45
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|2
block|,
operator|-
literal|1
block|,
literal|4
block|,
operator|-
literal|1
block|,
literal|6
block|,
literal|7
block|,
literal|8
block|,
literal|9
block|,
literal|10
block|,
literal|11
block|,
literal|12
block|,
literal|13
block|,
literal|14
block|,
literal|15
block|,
literal|16
block|,
literal|17
block|,
literal|18
block|,
literal|19
block|,
literal|20
block|,
literal|21
block|,
literal|22
block|,
literal|23
block|,
literal|24
block|,
literal|25
block|,
literal|26
block|,
literal|27
block|,
literal|2
block|,
operator|-
literal|1
block|,
literal|4
block|,
operator|-
literal|1
block|,
literal|6
block|,
literal|7
block|,
literal|8
block|,
literal|9
block|,
literal|10
block|,
literal|11
block|,
literal|12
block|,
literal|13
block|,
literal|14
block|,
literal|15
block|,
literal|16
block|,
literal|17
block|,
literal|18
block|,
literal|19
block|,
literal|20
block|,
literal|21
block|,
literal|22
block|,
literal|23
block|,
literal|24
block|,
literal|25
block|,
literal|26
block|,
literal|27
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|2
block|,
operator|-
literal|1
block|,
literal|4
block|,
operator|-
literal|1
block|,
literal|6
block|,
literal|7
block|,
literal|8
block|,
literal|9
block|,
literal|10
block|,
literal|11
block|,
literal|12
block|,
literal|13
block|,
literal|14
block|,
literal|15
block|,
literal|16
block|,
literal|17
block|,
literal|18
block|,
literal|19
block|,
literal|20
block|,
literal|21
block|,
literal|22
block|,
literal|23
block|,
literal|24
block|,
literal|25
block|,
literal|26
block|,
literal|27
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|2
block|,
operator|-
literal|1
block|,
literal|4
block|,
literal|5
block|,
literal|6
block|,
literal|7
block|,
literal|8
block|,
literal|9
block|,
literal|10
block|,
literal|11
block|,
literal|12
block|,
literal|13
block|,
literal|14
block|,
literal|15
block|,
literal|16
block|,
literal|17
block|,
literal|18
block|,
literal|19
block|,
literal|20
block|,
literal|21
block|,
literal|22
block|,
literal|23
block|,
literal|24
block|,
literal|25
block|,
literal|26
block|,
literal|27
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|45
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|2
block|,
literal|3
block|,
literal|4
block|,
literal|5
block|,
literal|6
block|,
literal|7
block|,
literal|8
block|,
literal|9
block|,
literal|10
block|,
literal|11
block|,
literal|12
block|,
literal|13
block|,
literal|14
block|,
operator|-
literal|1
block|,
literal|16
block|,
literal|17
block|,
literal|18
block|,
literal|19
block|,
literal|20
block|,
literal|21
block|,
literal|22
block|,
literal|23
block|,
literal|24
block|,
literal|25
block|,
literal|26
block|,
literal|27
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|45
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|2
block|,
operator|-
literal|1
block|,
literal|4
block|,
literal|5
block|,
literal|6
block|,
literal|7
block|,
literal|8
block|,
literal|9
block|,
literal|10
block|,
literal|11
block|,
literal|12
block|,
literal|13
block|,
literal|14
block|,
literal|15
block|,
literal|16
block|,
literal|17
block|,
literal|18
block|,
literal|19
block|,
literal|20
block|,
literal|21
block|,
literal|22
block|,
literal|23
block|,
literal|24
block|,
literal|25
block|,
literal|26
block|,
literal|27
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|45
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|2
block|,
operator|-
literal|1
block|,
literal|4
block|,
literal|5
block|,
literal|6
block|,
literal|7
block|,
literal|8
block|,
literal|9
block|,
literal|10
block|,
literal|11
block|,
literal|12
block|,
literal|13
block|,
literal|14
block|,
literal|15
block|,
literal|16
block|,
literal|17
block|,
literal|18
block|,
literal|19
block|,
literal|20
block|,
literal|21
block|,
literal|22
block|,
literal|23
block|,
literal|24
block|,
literal|25
block|,
literal|26
block|,
literal|27
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|45
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|2
block|,
literal|3
block|,
literal|4
block|,
literal|5
block|,
literal|6
block|,
literal|7
block|,
literal|8
block|,
literal|9
block|,
literal|10
block|,
literal|11
block|,
literal|12
block|,
literal|13
block|,
literal|14
block|,
operator|-
literal|1
block|,
literal|16
block|,
literal|17
block|,
literal|18
block|,
literal|19
block|,
literal|20
block|,
literal|21
block|,
literal|22
block|,
literal|23
block|,
literal|24
block|,
literal|25
block|,
literal|26
block|,
literal|27
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|45
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|2
block|,
operator|-
literal|1
block|,
literal|4
block|,
literal|5
block|,
literal|6
block|,
literal|7
block|,
literal|8
block|,
literal|9
block|,
literal|10
block|,
literal|11
block|,
literal|12
block|,
literal|13
block|,
literal|14
block|,
literal|15
block|,
literal|16
block|,
literal|17
block|,
literal|18
block|,
literal|19
block|,
literal|20
block|,
literal|21
block|,
literal|22
block|,
literal|23
block|,
literal|24
block|,
literal|25
block|,
literal|26
block|,
literal|27
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|45
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|2
block|,
literal|3
block|,
literal|4
block|,
literal|5
block|,
literal|6
block|,
literal|7
block|,
literal|8
block|,
literal|9
block|,
literal|10
block|,
literal|11
block|,
literal|12
block|,
literal|13
block|,
literal|14
block|,
operator|-
literal|1
block|,
literal|16
block|,
literal|17
block|,
literal|18
block|,
literal|19
block|,
literal|20
block|,
literal|21
block|,
literal|22
block|,
literal|23
block|,
literal|24
block|,
literal|25
block|,
literal|26
block|,
literal|27
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|45
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|2
block|,
operator|-
literal|1
block|,
literal|4
block|,
literal|5
block|,
literal|6
block|,
literal|7
block|,
literal|8
block|,
literal|9
block|,
literal|10
block|,
literal|11
block|,
literal|12
block|,
literal|13
block|,
literal|14
block|,
literal|15
block|,
literal|16
block|,
literal|17
block|,
literal|18
block|,
literal|19
block|,
literal|20
block|,
literal|21
block|,
literal|22
block|,
literal|23
block|,
literal|24
block|,
literal|25
block|,
literal|26
block|,
literal|27
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|45
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|2
block|,
literal|3
block|,
literal|4
block|,
literal|5
block|,
literal|6
block|,
literal|7
block|,
literal|8
block|,
literal|9
block|,
literal|10
block|,
literal|11
block|,
literal|12
block|,
literal|13
block|,
literal|14
block|,
operator|-
literal|1
block|,
literal|16
block|,
literal|17
block|,
literal|18
block|,
literal|19
block|,
literal|20
block|,
literal|21
block|,
literal|22
block|,
literal|23
block|,
literal|24
block|,
literal|25
block|,
literal|26
block|,
literal|27
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|45
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|2
block|,
literal|3
block|,
literal|4
block|,
literal|5
block|,
literal|6
block|,
literal|7
block|,
literal|8
block|,
literal|9
block|,
literal|10
block|,
literal|11
block|,
literal|12
block|,
literal|13
block|,
literal|14
block|,
literal|15
block|,
literal|16
block|,
literal|17
block|,
literal|18
block|,
literal|19
block|,
literal|20
block|,
literal|21
block|,
literal|22
block|,
literal|23
block|,
literal|24
block|,
literal|25
block|,
literal|26
block|,
literal|27
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|45
block|,
literal|46
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|54
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|2
block|,
literal|3
block|,
literal|4
block|,
literal|5
block|,
literal|6
block|,
literal|7
block|,
literal|8
block|,
literal|9
block|,
literal|10
block|,
literal|11
block|,
literal|12
block|,
literal|13
block|,
literal|14
block|,
literal|15
block|,
literal|16
block|,
literal|17
block|,
literal|18
block|,
literal|19
block|,
literal|20
block|,
literal|21
block|,
literal|22
block|,
literal|23
block|,
literal|24
block|,
literal|25
block|,
literal|26
block|,
literal|27
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|45
block|,
literal|46
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|54
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|20
block|,
literal|37
block|,
literal|12
block|,
literal|12
block|,
literal|1
block|,
literal|16
block|,
literal|20
block|,
literal|13
block|,
literal|13
block|,
literal|12
block|,
literal|12
block|,
literal|36
block|,
literal|12
block|,
literal|12
block|,
literal|12
block|,
literal|36
block|,
literal|12
block|,
literal|12
block|,
literal|12
block|,
literal|20
block|,
literal|12
block|,
literal|12
block|,
literal|49
block|,
literal|12
block|,
literal|37
block|,
literal|12
block|,
literal|72
block|,
literal|20
block|,
literal|13
block|,
literal|37
block|,
literal|20
block|,
literal|17
block|,
literal|12
block|,
literal|12
block|,
literal|12
block|,
literal|12
block|,
literal|20
block|,
literal|12
block|,
literal|12
block|,
literal|20
block|,
literal|12
block|,
literal|12
block|,
literal|54
block|,
literal|12
block|,
literal|17
block|,
literal|13
block|,
literal|13
block|,
literal|17
block|,
literal|12
block|,
literal|37
block|,
literal|12
block|,
literal|12
block|,
literal|68
block|,
literal|13
block|,
literal|20
block|,
literal|20
block|,
operator|-
literal|1
block|,
literal|72
block|,
literal|17
block|,
literal|17
block|,
literal|12
block|,
literal|68
block|,
literal|45
block|,
literal|20
block|,
literal|12
block|,
literal|1
block|,
literal|17
block|,
literal|17
block|,
literal|44
block|,
literal|16
block|,
literal|12
block|,
literal|17
block|,
literal|54
block|,
literal|17
block|,
literal|17
block|,
literal|12
block|,
literal|17
block|,
literal|17
block|,
literal|17
block|,
literal|12
block|,
operator|-
literal|1
block|,
literal|10
block|,
literal|12
block|,
operator|-
literal|1
block|,
literal|12
block|,
literal|10
block|,
literal|10
block|,
literal|17
block|,
literal|10
block|,
literal|17
block|,
operator|-
literal|1
block|,
literal|54
block|,
literal|12
block|,
literal|20
block|,
literal|17
block|,
literal|49
block|,
literal|14
block|,
literal|17
block|,
literal|21
block|,
literal|17
block|,
literal|38
block|,
literal|12
block|,
literal|4
block|,
literal|10
block|,
literal|10
block|,
literal|54
block|,
literal|17
block|,
operator|-
literal|1
block|,
literal|10
block|,
literal|54
block|,
operator|-
literal|1
block|,
literal|10
block|,
literal|68
block|,
literal|68
block|,
literal|6
block|,
operator|-
literal|1
block|,
literal|8
block|,
operator|-
literal|1
block|,
literal|10
block|,
literal|72
block|,
literal|54
block|,
operator|-
literal|1
block|,
literal|54
block|,
literal|54
block|,
literal|6
block|,
literal|17
block|,
literal|8
block|,
literal|19
block|,
literal|10
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|63
block|,
literal|17
block|,
literal|13
block|,
literal|19
block|,
literal|63
block|,
literal|63
block|,
literal|51
block|,
literal|63
block|,
literal|24
block|,
literal|25
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|78
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|76
block|,
operator|-
literal|1
block|,
literal|63
block|,
literal|63
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|63
block|,
literal|61
block|,
operator|-
literal|1
block|,
literal|63
block|,
literal|64
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|76
block|,
literal|76
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|3
block|,
operator|-
literal|1
block|,
literal|5
block|,
literal|6
block|,
literal|7
block|,
literal|8
block|,
literal|9
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|19
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|}
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|>
name|class
name|QXmlStreamSimpleStack
block|{
name|T
operator|*
name|data
block|;
name|int
name|tos
block|,
name|cap
block|;
name|public
operator|:
specifier|inline
name|QXmlStreamSimpleStack
argument_list|()
operator|:
name|data
argument_list|(
literal|0
argument_list|)
block|,
name|tos
argument_list|(
operator|-
literal|1
argument_list|)
block|,
name|cap
argument_list|(
literal|0
argument_list|)
block|{}
specifier|inline
operator|~
name|QXmlStreamSimpleStack
argument_list|()
block|{
if|if
condition|(
name|data
condition|)
name|free
argument_list|(
name|data
argument_list|)
expr_stmt|;
block|}
specifier|inline
name|void
name|reserve
argument_list|(
argument|int extraCapacity
argument_list|)
block|{
if|if
condition|(
name|tos
operator|+
name|extraCapacity
operator|+
literal|1
operator|>
name|cap
condition|)
block|{
name|cap
operator|=
name|qMax
argument_list|(
name|tos
operator|+
name|extraCapacity
operator|+
literal|1
argument_list|,
name|cap
operator|<<
literal|1
argument_list|)
expr_stmt|;
name|data
operator|=
name|reinterpret_cast
operator|<
name|T
operator|*
operator|>
operator|(
name|realloc
argument_list|(
name|data
argument_list|,
name|cap
operator|*
sizeof|sizeof
argument_list|(
name|T
argument_list|)
argument_list|)
operator|)
expr_stmt|;
name|Q_CHECK_PTR
argument_list|(
name|data
argument_list|)
expr_stmt|;
block|}
end_expr_stmt
begin_function
unit|}      inline
name|T
modifier|&
name|push
parameter_list|()
block|{
name|reserve
argument_list|(
literal|1
argument_list|)
expr_stmt|;
return|return
name|data
index|[
operator|++
name|tos
index|]
return|;
block|}
end_function
begin_function
specifier|inline
name|T
modifier|&
name|rawPush
parameter_list|()
block|{
return|return
name|data
index|[
operator|++
name|tos
index|]
return|;
block|}
end_function
begin_expr_stmt
specifier|inline
specifier|const
name|T
operator|&
name|top
argument_list|()
specifier|const
block|{
return|return
name|data
index|[
name|tos
index|]
return|;
block|}
end_expr_stmt
begin_function
specifier|inline
name|T
modifier|&
name|top
parameter_list|()
block|{
return|return
name|data
index|[
name|tos
index|]
return|;
block|}
end_function
begin_function
specifier|inline
name|T
modifier|&
name|pop
parameter_list|()
block|{
return|return
name|data
index|[
name|tos
operator|--
index|]
return|;
block|}
end_function
begin_function
specifier|inline
name|T
modifier|&
name|operator
function|[]
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|data
index|[
name|index
index|]
return|;
block|}
end_function
begin_decl_stmt
specifier|inline
specifier|const
name|T
modifier|&
name|at
argument_list|(
name|int
name|index
argument_list|)
decl|const
block|{
return|return
name|data
index|[
name|index
index|]
return|;
block|}
end_decl_stmt
begin_expr_stmt
specifier|inline
name|int
name|size
argument_list|()
specifier|const
block|{
return|return
name|tos
operator|+
literal|1
return|;
block|}
end_expr_stmt
begin_function
specifier|inline
name|void
name|resize
parameter_list|(
name|int
name|s
parameter_list|)
block|{
name|tos
operator|=
name|s
operator|-
literal|1
expr_stmt|;
block|}
end_function
begin_expr_stmt
specifier|inline
name|bool
name|isEmpty
argument_list|()
specifier|const
block|{
return|return
name|tos
operator|<
literal|0
return|;
block|}
end_expr_stmt
begin_function
specifier|inline
name|void
name|clear
parameter_list|()
block|{
name|tos
operator|=
operator|-
literal|1
expr_stmt|;
block|}
end_function
begin_decl_stmt
unit|};
name|class
name|QXmlStream
block|{
name|Q_DECLARE_TR_FUNCTIONS
argument_list|(
argument|QXmlStream
argument_list|)
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_decl_stmt
name|class
name|QXmlStreamPrivateTagStack
block|{
name|public
label|:
struct|struct
name|NamespaceDeclaration
block|{
name|QStringRef
name|prefix
decl_stmt|;
name|QStringRef
name|namespaceUri
decl_stmt|;
block|}
struct|;
struct|struct
name|Tag
block|{
name|QStringRef
name|name
decl_stmt|;
name|QStringRef
name|qualifiedName
decl_stmt|;
name|NamespaceDeclaration
name|namespaceDeclaration
decl_stmt|;
name|int
name|tagStackStringStorageSize
decl_stmt|;
name|int
name|namespaceDeclarationsSize
decl_stmt|;
block|}
struct|;
name|QXmlStreamPrivateTagStack
argument_list|()
expr_stmt|;
name|QXmlStreamSimpleStack
operator|<
name|NamespaceDeclaration
operator|>
name|namespaceDeclarations
expr_stmt|;
name|QString
name|tagStackStringStorage
decl_stmt|;
name|int
name|tagStackStringStorageSize
decl_stmt|;
name|int
name|initialTagStackStringStorageSize
decl_stmt|;
name|bool
name|tagsDone
decl_stmt|;
specifier|inline
name|QStringRef
name|addToStringStorage
parameter_list|(
specifier|const
name|QStringRef
modifier|&
name|s
parameter_list|)
block|{
name|int
name|pos
init|=
name|tagStackStringStorageSize
decl_stmt|;
name|int
name|sz
init|=
name|s
operator|.
name|size
argument_list|()
decl_stmt|;
if|if
condition|(
name|pos
operator|!=
name|tagStackStringStorage
operator|.
name|size
argument_list|()
condition|)
name|tagStackStringStorage
operator|.
name|resize
argument_list|(
name|pos
argument_list|)
expr_stmt|;
name|tagStackStringStorage
operator|.
name|insert
argument_list|(
name|pos
argument_list|,
name|s
operator|.
name|unicode
argument_list|()
argument_list|,
name|sz
argument_list|)
expr_stmt|;
name|tagStackStringStorageSize
operator|+=
name|sz
expr_stmt|;
return|return
name|QStringRef
argument_list|(
operator|&
name|tagStackStringStorage
argument_list|,
name|pos
argument_list|,
name|sz
argument_list|)
return|;
block|}
specifier|inline
name|QStringRef
name|addToStringStorage
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|int
name|pos
init|=
name|tagStackStringStorageSize
decl_stmt|;
name|int
name|sz
init|=
name|s
operator|.
name|size
argument_list|()
decl_stmt|;
if|if
condition|(
name|pos
operator|!=
name|tagStackStringStorage
operator|.
name|size
argument_list|()
condition|)
name|tagStackStringStorage
operator|.
name|resize
argument_list|(
name|pos
argument_list|)
expr_stmt|;
name|tagStackStringStorage
operator|.
name|insert
argument_list|(
name|pos
argument_list|,
name|s
operator|.
name|unicode
argument_list|()
argument_list|,
name|sz
argument_list|)
expr_stmt|;
name|tagStackStringStorageSize
operator|+=
name|sz
expr_stmt|;
return|return
name|QStringRef
argument_list|(
operator|&
name|tagStackStringStorage
argument_list|,
name|pos
argument_list|,
name|sz
argument_list|)
return|;
block|}
name|QXmlStreamSimpleStack
operator|<
name|Tag
operator|>
name|tagStack
expr_stmt|;
specifier|inline
name|Tag
modifier|&
name|tagStack_pop
parameter_list|()
block|{
name|Tag
modifier|&
name|tag
init|=
name|tagStack
operator|.
name|pop
argument_list|()
decl_stmt|;
name|tagStackStringStorageSize
operator|=
name|tag
operator|.
name|tagStackStringStorageSize
expr_stmt|;
name|namespaceDeclarations
operator|.
name|resize
argument_list|(
name|tag
operator|.
name|namespaceDeclarationsSize
argument_list|)
expr_stmt|;
name|tagsDone
operator|=
name|tagStack
operator|.
name|isEmpty
argument_list|()
expr_stmt|;
return|return
name|tag
return|;
block|}
specifier|inline
name|Tag
modifier|&
name|tagStack_push
parameter_list|()
block|{
name|Tag
modifier|&
name|tag
init|=
name|tagStack
operator|.
name|push
argument_list|()
decl_stmt|;
name|tag
operator|.
name|tagStackStringStorageSize
operator|=
name|tagStackStringStorageSize
expr_stmt|;
name|tag
operator|.
name|namespaceDeclarationsSize
operator|=
name|namespaceDeclarations
operator|.
name|size
argument_list|()
expr_stmt|;
return|return
name|tag
return|;
block|}
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_decl_stmt
DECL|variable|QXmlStreamEntityResolver
name|class
name|QXmlStreamEntityResolver
decl_stmt|;
end_decl_stmt
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_XMLSTREAMREADER
end_ifndef
begin_decl_stmt
DECL|variable|QXmlStreamReader_Table
name|class
name|QXmlStreamReaderPrivate
range|:
name|public
name|QXmlStreamReader_Table
decl_stmt|,
name|public
name|QXmlStreamPrivateTagStack
block|{
name|QXmlStreamReader
modifier|*
name|q_ptr
decl_stmt|;
name|Q_DECLARE_PUBLIC
argument_list|(
argument|QXmlStreamReader
argument_list|)
name|public
label|:
name|QXmlStreamReaderPrivate
argument_list|(
name|QXmlStreamReader
operator|*
name|q
argument_list|)
expr_stmt|;
operator|~
name|QXmlStreamReaderPrivate
argument_list|()
expr_stmt|;
name|void
name|init
parameter_list|()
function_decl|;
name|QByteArray
name|rawReadBuffer
decl_stmt|;
name|QByteArray
name|dataBuffer
decl_stmt|;
name|uchar
name|firstByte
decl_stmt|;
name|qint64
name|nbytesread
decl_stmt|;
name|QString
name|readBuffer
decl_stmt|;
name|int
name|readBufferPos
decl_stmt|;
name|QXmlStreamSimpleStack
operator|<
name|uint
operator|>
name|putStack
expr_stmt|;
struct|struct
name|Entity
block|{
name|Entity
argument_list|(
specifier|const
name|QString
operator|&
name|str
operator|=
name|QString
argument_list|()
argument_list|)
operator|:
name|value
argument_list|(
name|str
argument_list|)
operator|,
name|external
argument_list|(
name|false
argument_list|)
operator|,
name|unparsed
argument_list|(
name|false
argument_list|)
operator|,
name|literal
argument_list|(
name|false
argument_list|)
operator|,
name|hasBeenParsed
argument_list|(
name|false
argument_list|)
operator|,
name|isCurrentlyReferenced
argument_list|(
argument|false
argument_list|)
block|{}
specifier|static
specifier|inline
name|Entity
name|createLiteral
argument_list|(
argument|const QString&entity
argument_list|)
block|{
name|Entity
name|result
argument_list|(
name|entity
argument_list|)
block|;
name|result
operator|.
name|literal
operator|=
name|result
operator|.
name|hasBeenParsed
operator|=
name|true
block|;
return|return
name|result
return|;
block|}
name|QString
name|value
decl_stmt|;
name|uint
name|external
range|:
literal|1
decl_stmt|;
name|uint
name|unparsed
range|:
literal|1
decl_stmt|;
name|uint
name|literal
range|:
literal|1
decl_stmt|;
name|uint
name|hasBeenParsed
range|:
literal|1
decl_stmt|;
name|uint
name|isCurrentlyReferenced
range|:
literal|1
decl_stmt|;
block|}
struct|;
name|QHash
operator|<
name|QString
operator|,
name|Entity
operator|>
name|entityHash
expr_stmt|;
name|QHash
operator|<
name|QString
operator|,
name|Entity
operator|>
name|parameterEntityHash
expr_stmt|;
name|QXmlStreamSimpleStack
operator|<
name|Entity
operator|*
operator|>
name|entityReferenceStack
expr_stmt|;
specifier|inline
name|bool
name|referenceEntity
parameter_list|(
name|Entity
modifier|&
name|entity
parameter_list|)
block|{
if|if
condition|(
name|entity
operator|.
name|isCurrentlyReferenced
condition|)
block|{
name|raiseWellFormedError
argument_list|(
name|QXmlStream
operator|::
name|tr
argument_list|(
literal|"Recursive entity detected."
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|false
return|;
block|}
name|entity
operator|.
name|isCurrentlyReferenced
operator|=
name|true
expr_stmt|;
name|entityReferenceStack
operator|.
name|push
argument_list|()
operator|=
operator|&
name|entity
expr_stmt|;
name|injectToken
argument_list|(
name|ENTITY_DONE
argument_list|)
expr_stmt|;
return|return
name|true
return|;
block|}
name|QIODevice
modifier|*
name|device
decl_stmt|;
name|bool
name|deleteDevice
decl_stmt|;
ifndef|#
directive|ifndef
name|QT_NO_TEXTCODEC
name|QTextCodec
modifier|*
name|codec
decl_stmt|;
name|QTextDecoder
modifier|*
name|decoder
decl_stmt|;
endif|#
directive|endif
name|bool
name|atEnd
decl_stmt|;
comment|/*!       \sa setType()      */
name|QXmlStreamReader
operator|::
name|TokenType
name|type
expr_stmt|;
name|QXmlStreamReader
operator|::
name|Error
name|error
expr_stmt|;
name|QString
name|errorString
decl_stmt|;
name|QString
name|unresolvedEntity
decl_stmt|;
name|qint64
name|lineNumber
decl_stmt|,
name|lastLineStart
decl_stmt|,
name|characterOffset
decl_stmt|;
name|void
name|write
parameter_list|(
specifier|const
name|QString
modifier|&
parameter_list|)
function_decl|;
name|void
name|write
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
name|QXmlStreamAttributes
name|attributes
decl_stmt|;
name|QStringRef
name|namespaceForPrefix
parameter_list|(
specifier|const
name|QStringRef
modifier|&
name|prefix
parameter_list|)
function_decl|;
name|void
name|resolveTag
parameter_list|()
function_decl|;
name|void
name|resolvePublicNamespaces
parameter_list|()
function_decl|;
name|void
name|resolveDtd
parameter_list|()
function_decl|;
name|uint
name|resolveCharRef
parameter_list|(
name|int
name|symbolIndex
parameter_list|)
function_decl|;
name|bool
name|checkStartDocument
parameter_list|()
function_decl|;
name|void
name|startDocument
parameter_list|()
function_decl|;
name|void
name|parseError
parameter_list|()
function_decl|;
name|void
name|checkPublicLiteral
parameter_list|(
specifier|const
name|QStringRef
modifier|&
name|publicId
parameter_list|)
function_decl|;
name|bool
name|scanDtd
decl_stmt|;
name|QStringRef
name|lastAttributeValue
decl_stmt|;
name|bool
name|lastAttributeIsCData
decl_stmt|;
struct|struct
name|DtdAttribute
block|{
name|QStringRef
name|tagName
decl_stmt|;
name|QStringRef
name|attributeQualifiedName
decl_stmt|;
name|QStringRef
name|attributePrefix
decl_stmt|;
name|QStringRef
name|attributeName
decl_stmt|;
name|QStringRef
name|defaultValue
decl_stmt|;
name|bool
name|isCDATA
decl_stmt|;
name|bool
name|isNamespaceAttribute
decl_stmt|;
block|}
struct|;
name|QXmlStreamSimpleStack
operator|<
name|DtdAttribute
operator|>
name|dtdAttributes
expr_stmt|;
struct|struct
name|NotationDeclaration
block|{
name|QStringRef
name|name
decl_stmt|;
name|QStringRef
name|publicId
decl_stmt|;
name|QStringRef
name|systemId
decl_stmt|;
block|}
struct|;
name|QXmlStreamSimpleStack
operator|<
name|NotationDeclaration
operator|>
name|notationDeclarations
expr_stmt|;
name|QXmlStreamNotationDeclarations
name|publicNotationDeclarations
decl_stmt|;
name|QXmlStreamNamespaceDeclarations
name|publicNamespaceDeclarations
decl_stmt|;
struct|struct
name|EntityDeclaration
block|{
name|QStringRef
name|name
decl_stmt|;
name|QStringRef
name|notationName
decl_stmt|;
name|QStringRef
name|publicId
decl_stmt|;
name|QStringRef
name|systemId
decl_stmt|;
name|QStringRef
name|value
decl_stmt|;
name|bool
name|parameter
decl_stmt|;
name|bool
name|external
decl_stmt|;
specifier|inline
name|void
name|clear
parameter_list|()
block|{
name|name
operator|.
name|clear
argument_list|()
expr_stmt|;
name|notationName
operator|.
name|clear
argument_list|()
expr_stmt|;
name|publicId
operator|.
name|clear
argument_list|()
expr_stmt|;
name|systemId
operator|.
name|clear
argument_list|()
expr_stmt|;
name|value
operator|.
name|clear
argument_list|()
expr_stmt|;
name|parameter
operator|=
name|external
operator|=
name|false
expr_stmt|;
block|}
block|}
struct|;
name|QXmlStreamSimpleStack
operator|<
name|EntityDeclaration
operator|>
name|entityDeclarations
expr_stmt|;
name|QXmlStreamEntityDeclarations
name|publicEntityDeclarations
decl_stmt|;
name|QStringRef
name|text
decl_stmt|;
name|QStringRef
name|prefix
decl_stmt|,
name|namespaceUri
decl_stmt|,
name|qualifiedName
decl_stmt|,
name|name
decl_stmt|;
name|QStringRef
name|processingInstructionTarget
decl_stmt|,
name|processingInstructionData
decl_stmt|;
name|QStringRef
name|dtdName
decl_stmt|,
name|dtdPublicId
decl_stmt|,
name|dtdSystemId
decl_stmt|;
name|QStringRef
name|documentVersion
decl_stmt|,
name|documentEncoding
decl_stmt|;
name|uint
name|isEmptyElement
range|:
literal|1
decl_stmt|;
name|uint
name|isWhitespace
range|:
literal|1
decl_stmt|;
name|uint
name|isCDATA
range|:
literal|1
decl_stmt|;
name|uint
name|standalone
range|:
literal|1
decl_stmt|;
name|uint
name|hasCheckedStartDocument
range|:
literal|1
decl_stmt|;
name|uint
name|normalizeLiterals
range|:
literal|1
decl_stmt|;
name|uint
name|hasSeenTag
range|:
literal|1
decl_stmt|;
name|uint
name|inParseEntity
range|:
literal|1
decl_stmt|;
name|uint
name|referenceToUnparsedEntityDetected
range|:
literal|1
decl_stmt|;
name|uint
name|referenceToParameterEntityDetected
range|:
literal|1
decl_stmt|;
name|uint
name|hasExternalDtdSubset
range|:
literal|1
decl_stmt|;
name|uint
name|lockEncoding
range|:
literal|1
decl_stmt|;
name|uint
name|namespaceProcessing
range|:
literal|1
decl_stmt|;
name|int
name|resumeReduction
decl_stmt|;
name|void
name|resume
parameter_list|(
name|int
name|rule
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|entitiesMustBeDeclared
argument_list|()
specifier|const
block|{
return|return
operator|(
operator|!
name|inParseEntity
operator|&&
operator|(
name|standalone
operator|||
operator|(
operator|!
name|referenceToUnparsedEntityDetected
operator|&&
operator|!
name|referenceToParameterEntityDetected
comment|// Errata 13 as of 2006-04-25
operator|&&
operator|!
name|hasExternalDtdSubset
operator|)
operator|)
operator|)
return|;
block|}
comment|// qlalr parser
name|int
name|tos
decl_stmt|;
name|int
name|stack_size
decl_stmt|;
struct|struct
name|Value
block|{
name|int
name|pos
decl_stmt|;
name|int
name|len
decl_stmt|;
name|int
name|prefix
decl_stmt|;
name|ushort
name|c
decl_stmt|;
block|}
struct|;
name|Value
modifier|*
name|sym_stack
decl_stmt|;
name|int
modifier|*
name|state_stack
decl_stmt|;
specifier|inline
name|void
name|reallocateStack
parameter_list|()
function_decl|;
specifier|inline
name|Value
modifier|&
name|sym
argument_list|(
name|int
name|index
argument_list|)
decl|const
block|{
return|return
name|sym_stack
index|[
name|tos
operator|+
name|index
operator|-
literal|1
index|]
return|;
block|}
name|QString
name|textBuffer
decl_stmt|;
specifier|inline
name|void
name|clearTextBuffer
parameter_list|()
block|{
if|if
condition|(
operator|!
name|scanDtd
condition|)
block|{
name|textBuffer
operator|.
name|resize
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|textBuffer
operator|.
name|reserve
argument_list|(
literal|256
argument_list|)
expr_stmt|;
block|}
block|}
struct|struct
name|Attribute
block|{
name|Value
name|key
decl_stmt|;
name|Value
name|value
decl_stmt|;
block|}
struct|;
name|QXmlStreamSimpleStack
operator|<
name|Attribute
operator|>
name|attributeStack
expr_stmt|;
specifier|inline
name|QStringRef
name|symString
parameter_list|(
name|int
name|index
parameter_list|)
block|{
specifier|const
name|Value
modifier|&
name|symbol
init|=
name|sym
argument_list|(
name|index
argument_list|)
decl_stmt|;
return|return
name|QStringRef
argument_list|(
operator|&
name|textBuffer
argument_list|,
name|symbol
operator|.
name|pos
operator|+
name|symbol
operator|.
name|prefix
argument_list|,
name|symbol
operator|.
name|len
operator|-
name|symbol
operator|.
name|prefix
argument_list|)
return|;
block|}
specifier|inline
name|QStringRef
name|symName
parameter_list|(
name|int
name|index
parameter_list|)
block|{
specifier|const
name|Value
modifier|&
name|symbol
init|=
name|sym
argument_list|(
name|index
argument_list|)
decl_stmt|;
return|return
name|QStringRef
argument_list|(
operator|&
name|textBuffer
argument_list|,
name|symbol
operator|.
name|pos
argument_list|,
name|symbol
operator|.
name|len
argument_list|)
return|;
block|}
specifier|inline
name|QStringRef
name|symString
parameter_list|(
name|int
name|index
parameter_list|,
name|int
name|offset
parameter_list|)
block|{
specifier|const
name|Value
modifier|&
name|symbol
init|=
name|sym
argument_list|(
name|index
argument_list|)
decl_stmt|;
return|return
name|QStringRef
argument_list|(
operator|&
name|textBuffer
argument_list|,
name|symbol
operator|.
name|pos
operator|+
name|symbol
operator|.
name|prefix
operator|+
name|offset
argument_list|,
name|symbol
operator|.
name|len
operator|-
name|symbol
operator|.
name|prefix
operator|-
name|offset
argument_list|)
return|;
block|}
specifier|inline
name|QStringRef
name|symPrefix
parameter_list|(
name|int
name|index
parameter_list|)
block|{
specifier|const
name|Value
modifier|&
name|symbol
init|=
name|sym
argument_list|(
name|index
argument_list|)
decl_stmt|;
if|if
condition|(
name|symbol
operator|.
name|prefix
condition|)
return|return
name|QStringRef
argument_list|(
operator|&
name|textBuffer
argument_list|,
name|symbol
operator|.
name|pos
argument_list|,
name|symbol
operator|.
name|prefix
operator|-
literal|1
argument_list|)
return|;
return|return
name|QStringRef
argument_list|()
return|;
block|}
specifier|inline
name|QStringRef
name|symString
parameter_list|(
specifier|const
name|Value
modifier|&
name|symbol
parameter_list|)
block|{
return|return
name|QStringRef
argument_list|(
operator|&
name|textBuffer
argument_list|,
name|symbol
operator|.
name|pos
operator|+
name|symbol
operator|.
name|prefix
argument_list|,
name|symbol
operator|.
name|len
operator|-
name|symbol
operator|.
name|prefix
argument_list|)
return|;
block|}
specifier|inline
name|QStringRef
name|symName
parameter_list|(
specifier|const
name|Value
modifier|&
name|symbol
parameter_list|)
block|{
return|return
name|QStringRef
argument_list|(
operator|&
name|textBuffer
argument_list|,
name|symbol
operator|.
name|pos
argument_list|,
name|symbol
operator|.
name|len
argument_list|)
return|;
block|}
specifier|inline
name|QStringRef
name|symPrefix
parameter_list|(
specifier|const
name|Value
modifier|&
name|symbol
parameter_list|)
block|{
if|if
condition|(
name|symbol
operator|.
name|prefix
condition|)
return|return
name|QStringRef
argument_list|(
operator|&
name|textBuffer
argument_list|,
name|symbol
operator|.
name|pos
argument_list|,
name|symbol
operator|.
name|prefix
operator|-
literal|1
argument_list|)
return|;
return|return
name|QStringRef
argument_list|()
return|;
block|}
specifier|inline
name|void
name|clearSym
parameter_list|()
block|{
name|Value
modifier|&
name|val
init|=
name|sym
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|val
operator|.
name|pos
operator|=
name|textBuffer
operator|.
name|size
argument_list|()
expr_stmt|;
name|val
operator|.
name|len
operator|=
literal|0
expr_stmt|;
block|}
name|short
name|token
decl_stmt|;
name|uint
name|token_char
decl_stmt|;
name|uint
name|filterCarriageReturn
parameter_list|()
function_decl|;
specifier|inline
name|uint
name|getChar
parameter_list|()
function_decl|;
specifier|inline
name|uint
name|peekChar
parameter_list|()
function_decl|;
specifier|inline
name|void
name|putChar
parameter_list|(
name|uint
name|c
parameter_list|)
block|{
name|putStack
operator|.
name|push
argument_list|()
operator|=
name|c
expr_stmt|;
block|}
specifier|inline
name|void
name|putChar
parameter_list|(
name|QChar
name|c
parameter_list|)
block|{
name|putStack
operator|.
name|push
argument_list|()
operator|=
name|c
operator|.
name|unicode
argument_list|()
expr_stmt|;
block|}
name|void
name|putString
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|,
name|int
name|from
init|=
literal|0
parameter_list|)
function_decl|;
name|void
name|putStringLiteral
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
function_decl|;
name|void
name|putReplacement
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
function_decl|;
name|void
name|putReplacementInAttributeValue
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
function_decl|;
name|uint
name|getChar_helper
parameter_list|()
function_decl|;
name|bool
name|scanUntil
parameter_list|(
specifier|const
name|char
modifier|*
name|str
parameter_list|,
name|short
name|tokenToInject
init|=
operator|-
literal|1
parameter_list|)
function_decl|;
name|bool
name|scanString
parameter_list|(
specifier|const
name|char
modifier|*
name|str
parameter_list|,
name|short
name|tokenToInject
parameter_list|,
name|bool
name|requireSpace
init|=
name|true
parameter_list|)
function_decl|;
specifier|inline
name|void
name|injectToken
parameter_list|(
name|ushort
name|tokenToInject
parameter_list|)
block|{
name|putChar
argument_list|(
name|int
argument_list|(
name|tokenToInject
argument_list|)
operator|<<
literal|16
argument_list|)
expr_stmt|;
block|}
name|QString
name|resolveUndeclaredEntity
parameter_list|(
specifier|const
name|QString
modifier|&
name|name
parameter_list|)
function_decl|;
name|void
name|parseEntity
parameter_list|(
specifier|const
name|QString
modifier|&
name|value
parameter_list|)
function_decl|;
name|QXmlStreamReaderPrivate
modifier|*
name|entityParser
decl_stmt|;
name|bool
name|scanAfterLangleBang
parameter_list|()
function_decl|;
name|bool
name|scanPublicOrSystem
parameter_list|()
function_decl|;
name|bool
name|scanNData
parameter_list|()
function_decl|;
name|bool
name|scanAfterDefaultDecl
parameter_list|()
function_decl|;
name|bool
name|scanAttType
parameter_list|()
function_decl|;
comment|// scan optimization functions. Not strictly necessary but LALR is
comment|// not very well suited for scanning fast
name|int
name|fastScanLiteralContent
parameter_list|()
function_decl|;
name|int
name|fastScanSpace
parameter_list|()
function_decl|;
name|int
name|fastScanContentCharList
parameter_list|()
function_decl|;
name|int
name|fastScanName
parameter_list|(
name|int
modifier|*
name|prefix
init|=
literal|0
parameter_list|)
function_decl|;
specifier|inline
name|int
name|fastScanNMTOKEN
parameter_list|()
function_decl|;
name|bool
name|parse
parameter_list|()
function_decl|;
specifier|inline
name|void
name|consumeRule
parameter_list|(
name|int
parameter_list|)
function_decl|;
name|void
name|raiseError
argument_list|(
name|QXmlStreamReader
operator|::
name|Error
name|error
argument_list|,
specifier|const
name|QString
operator|&
name|message
operator|=
name|QString
argument_list|()
argument_list|)
decl_stmt|;
name|void
name|raiseWellFormedError
parameter_list|(
specifier|const
name|QString
modifier|&
name|message
parameter_list|)
function_decl|;
name|QXmlStreamEntityResolver
modifier|*
name|entityResolver
decl_stmt|;
name|private
label|:
comment|/*! \internal        Never assign to variable type directly. Instead use this function.         This prevents errors from being ignored.      */
specifier|inline
name|void
name|setType
argument_list|(
specifier|const
name|QXmlStreamReader
operator|::
name|TokenType
name|t
argument_list|)
block|{
if|if
condition|(
name|type
operator|!=
name|QXmlStreamReader
operator|::
name|Invalid
condition|)
name|type
operator|=
name|t
expr_stmt|;
block|}
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_expr_stmt
DECL|function|parse
name|bool
name|QXmlStreamReaderPrivate
operator|::
name|parse
argument_list|()
block|{
comment|// cleanup currently reported token
switch|switch
condition|(
name|type
condition|)
block|{
case|case
name|QXmlStreamReader
operator|::
name|StartElement
case|:
name|name
operator|.
name|clear
argument_list|()
expr_stmt|;
name|prefix
operator|.
name|clear
argument_list|()
expr_stmt|;
name|qualifiedName
operator|.
name|clear
argument_list|()
expr_stmt|;
name|namespaceUri
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|publicNamespaceDeclarations
operator|.
name|size
argument_list|()
condition|)
name|publicNamespaceDeclarations
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|attributes
operator|.
name|size
argument_list|()
condition|)
name|attributes
operator|.
name|resize
argument_list|(
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
name|isEmptyElement
condition|)
block|{
name|setType
argument_list|(
name|QXmlStreamReader
operator|::
name|EndElement
argument_list|)
expr_stmt|;
name|Tag
modifier|&
name|tag
init|=
name|tagStack_pop
argument_list|()
decl_stmt|;
name|namespaceUri
operator|=
name|tag
operator|.
name|namespaceDeclaration
operator|.
name|namespaceUri
expr_stmt|;
name|name
operator|=
name|tag
operator|.
name|name
expr_stmt|;
name|qualifiedName
operator|=
name|tag
operator|.
name|qualifiedName
expr_stmt|;
name|isEmptyElement
operator|=
name|false
expr_stmt|;
return|return
name|true
return|;
block|}
name|clearTextBuffer
argument_list|()
expr_stmt|;
end_expr_stmt
begin_break
break|break;
end_break
begin_case
case|case
name|QXmlStreamReader
operator|::
name|EndElement
case|:
end_case
begin_expr_stmt
name|name
operator|.
name|clear
argument_list|()
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|prefix
operator|.
name|clear
argument_list|()
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|qualifiedName
operator|.
name|clear
argument_list|()
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|namespaceUri
operator|.
name|clear
argument_list|()
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|clearTextBuffer
argument_list|()
expr_stmt|;
end_expr_stmt
begin_break
break|break;
end_break
begin_case
case|case
name|QXmlStreamReader
operator|::
name|DTD
case|:
end_case
begin_expr_stmt
name|publicNotationDeclarations
operator|.
name|clear
argument_list|()
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|publicEntityDeclarations
operator|.
name|clear
argument_list|()
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|dtdName
operator|.
name|clear
argument_list|()
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|dtdPublicId
operator|.
name|clear
argument_list|()
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|dtdSystemId
operator|.
name|clear
argument_list|()
expr_stmt|;
end_expr_stmt
begin_comment
comment|// fall through
end_comment
begin_case
case|case
name|QXmlStreamReader
operator|::
name|Comment
case|:
end_case
begin_case
case|case
name|QXmlStreamReader
operator|::
name|Characters
case|:
end_case
begin_expr_stmt
name|isCDATA
operator|=
name|false
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|isWhitespace
operator|=
name|true
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|text
operator|.
name|clear
argument_list|()
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|clearTextBuffer
argument_list|()
expr_stmt|;
end_expr_stmt
begin_break
break|break;
end_break
begin_case
case|case
name|QXmlStreamReader
operator|::
name|EntityReference
case|:
end_case
begin_expr_stmt
name|text
operator|.
name|clear
argument_list|()
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|name
operator|.
name|clear
argument_list|()
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|clearTextBuffer
argument_list|()
expr_stmt|;
end_expr_stmt
begin_break
break|break;
end_break
begin_case
case|case
name|QXmlStreamReader
operator|::
name|ProcessingInstruction
case|:
end_case
begin_expr_stmt
name|processingInstructionTarget
operator|.
name|clear
argument_list|()
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|processingInstructionData
operator|.
name|clear
argument_list|()
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|clearTextBuffer
argument_list|()
expr_stmt|;
end_expr_stmt
begin_break
break|break;
end_break
begin_case
case|case
name|QXmlStreamReader
operator|::
name|NoToken
case|:
end_case
begin_case
case|case
name|QXmlStreamReader
operator|::
name|Invalid
case|:
end_case
begin_break
break|break;
end_break
begin_case
case|case
name|QXmlStreamReader
operator|::
name|StartDocument
case|:
end_case
begin_expr_stmt
name|lockEncoding
operator|=
name|true
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|documentVersion
operator|.
name|clear
argument_list|()
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|documentEncoding
operator|.
name|clear
argument_list|()
expr_stmt|;
end_expr_stmt
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_TEXTCODEC
end_ifndef
begin_if
if|if
condition|(
name|decoder
operator|&&
name|decoder
operator|->
name|hasFailure
argument_list|()
condition|)
block|{
name|raiseWellFormedError
argument_list|(
name|QXmlStream
operator|::
name|tr
argument_list|(
literal|"Encountered incorrectly encoded content."
argument_list|)
argument_list|)
expr_stmt|;
name|readBuffer
operator|.
name|clear
argument_list|()
expr_stmt|;
return|return
name|false
return|;
block|}
end_if
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// fall through
end_comment
begin_default
default|default:
end_default
begin_expr_stmt
name|clearTextBuffer
argument_list|()
expr_stmt|;
end_expr_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_expr_stmt
unit|}      setType
operator|(
name|QXmlStreamReader
operator|::
name|NoToken
operator|)
expr_stmt|;
end_expr_stmt
begin_comment
comment|// the main parse loop
end_comment
begin_decl_stmt
name|int
name|act
decl_stmt|,
name|r
decl_stmt|;
end_decl_stmt
begin_if
if|if
condition|(
name|resumeReduction
condition|)
block|{
name|act
operator|=
name|state_stack
index|[
name|tos
operator|-
literal|1
index|]
expr_stmt|;
name|r
operator|=
name|resumeReduction
expr_stmt|;
name|resumeReduction
operator|=
literal|0
expr_stmt|;
goto|goto
name|ResumeReduction
goto|;
block|}
end_if
begin_expr_stmt
name|act
operator|=
name|state_stack
index|[
name|tos
index|]
expr_stmt|;
end_expr_stmt
begin_macro
name|forever
end_macro
begin_block
block|{
if|if
condition|(
name|token
operator|==
operator|-
literal|1
operator|&&
operator|-
name|TERMINAL_COUNT
operator|!=
name|action_index
index|[
name|act
index|]
condition|)
block|{
name|uint
name|cu
init|=
name|getChar
argument_list|()
decl_stmt|;
name|token
operator|=
name|NOTOKEN
expr_stmt|;
name|token_char
operator|=
name|cu
operator|==
operator|~
literal|0U
condition|?
name|cu
else|:
name|ushort
argument_list|(
name|cu
argument_list|)
expr_stmt|;
if|if
condition|(
operator|(
name|cu
operator|!=
operator|~
literal|0U
operator|)
operator|&&
operator|(
name|cu
operator|&
literal|0xff0000
operator|)
condition|)
block|{
name|token
operator|=
name|cu
operator|>>
literal|16
expr_stmt|;
block|}
else|else
switch|switch
condition|(
name|token_char
condition|)
block|{
case|case
literal|0xfffe
case|:
case|case
literal|0xffff
case|:
name|token
operator|=
name|ERROR
expr_stmt|;
break|break;
case|case
literal|'\r'
case|:
name|token
operator|=
name|SPACE
expr_stmt|;
if|if
condition|(
name|cu
operator|==
literal|'\r'
condition|)
block|{
if|if
condition|(
operator|(
name|token_char
operator|=
name|filterCarriageReturn
argument_list|()
operator|)
condition|)
block|{
operator|++
name|lineNumber
expr_stmt|;
name|lastLineStart
operator|=
name|characterOffset
operator|+
name|readBufferPos
expr_stmt|;
break|break;
block|}
block|}
else|else
block|{
break|break;
block|}
comment|// fall through
case|case
operator|~
literal|0U
case|:
block|{
name|token
operator|=
name|EOF_SYMBOL
expr_stmt|;
if|if
condition|(
operator|!
name|tagsDone
operator|&&
operator|!
name|inParseEntity
condition|)
block|{
name|int
name|a
init|=
name|t_action
argument_list|(
name|act
argument_list|,
name|token
argument_list|)
decl_stmt|;
if|if
condition|(
name|a
operator|<
literal|0
condition|)
block|{
name|raiseError
argument_list|(
name|QXmlStreamReader
operator|::
name|PrematureEndOfDocumentError
argument_list|)
expr_stmt|;
return|return
name|false
return|;
block|}
block|}
block|}
break|break;
case|case
literal|'\n'
case|:
operator|++
name|lineNumber
expr_stmt|;
name|lastLineStart
operator|=
name|characterOffset
operator|+
name|readBufferPos
expr_stmt|;
case|case
literal|' '
case|:
case|case
literal|'\t'
case|:
name|token
operator|=
name|SPACE
expr_stmt|;
break|break;
case|case
literal|'&'
case|:
name|token
operator|=
name|AMPERSAND
expr_stmt|;
break|break;
case|case
literal|'#'
case|:
name|token
operator|=
name|HASH
expr_stmt|;
break|break;
case|case
literal|'\''
case|:
name|token
operator|=
name|QUOTE
expr_stmt|;
break|break;
case|case
literal|'\"'
case|:
name|token
operator|=
name|DBLQUOTE
expr_stmt|;
break|break;
case|case
literal|'<'
case|:
name|token
operator|=
name|LANGLE
expr_stmt|;
break|break;
case|case
literal|'>'
case|:
name|token
operator|=
name|RANGLE
expr_stmt|;
break|break;
case|case
literal|'['
case|:
name|token
operator|=
name|LBRACK
expr_stmt|;
break|break;
case|case
literal|']'
case|:
name|token
operator|=
name|RBRACK
expr_stmt|;
break|break;
case|case
literal|'('
case|:
name|token
operator|=
name|LPAREN
expr_stmt|;
break|break;
case|case
literal|')'
case|:
name|token
operator|=
name|RPAREN
expr_stmt|;
break|break;
case|case
literal|'|'
case|:
name|token
operator|=
name|PIPE
expr_stmt|;
break|break;
case|case
literal|'='
case|:
name|token
operator|=
name|EQ
expr_stmt|;
break|break;
case|case
literal|'%'
case|:
name|token
operator|=
name|PERCENT
expr_stmt|;
break|break;
case|case
literal|'/'
case|:
name|token
operator|=
name|SLASH
expr_stmt|;
break|break;
case|case
literal|':'
case|:
name|token
operator|=
name|COLON
expr_stmt|;
break|break;
case|case
literal|';'
case|:
name|token
operator|=
name|SEMICOLON
expr_stmt|;
break|break;
case|case
literal|','
case|:
name|token
operator|=
name|COMMA
expr_stmt|;
break|break;
case|case
literal|'-'
case|:
name|token
operator|=
name|DASH
expr_stmt|;
break|break;
case|case
literal|'+'
case|:
name|token
operator|=
name|PLUS
expr_stmt|;
break|break;
case|case
literal|'*'
case|:
name|token
operator|=
name|STAR
expr_stmt|;
break|break;
case|case
literal|'.'
case|:
name|token
operator|=
name|DOT
expr_stmt|;
break|break;
case|case
literal|'?'
case|:
name|token
operator|=
name|QUESTIONMARK
expr_stmt|;
break|break;
case|case
literal|'!'
case|:
name|token
operator|=
name|BANG
expr_stmt|;
break|break;
case|case
literal|'0'
case|:
case|case
literal|'1'
case|:
case|case
literal|'2'
case|:
case|case
literal|'3'
case|:
case|case
literal|'4'
case|:
case|case
literal|'5'
case|:
case|case
literal|'6'
case|:
case|case
literal|'7'
case|:
case|case
literal|'8'
case|:
case|case
literal|'9'
case|:
name|token
operator|=
name|DIGIT
expr_stmt|;
break|break;
default|default:
if|if
condition|(
name|cu
operator|<
literal|0x20
condition|)
name|token
operator|=
name|NOTOKEN
expr_stmt|;
else|else
name|token
operator|=
name|LETTER
expr_stmt|;
break|break;
block|}
block|}
name|act
operator|=
name|t_action
argument_list|(
name|act
argument_list|,
name|token
argument_list|)
expr_stmt|;
if|if
condition|(
name|act
operator|==
name|ACCEPT_STATE
condition|)
block|{
comment|// reset the parser in case someone resumes (process instructions can follow a valid document)
name|tos
operator|=
literal|0
expr_stmt|;
name|state_stack
index|[
name|tos
operator|++
index|]
operator|=
literal|0
expr_stmt|;
name|state_stack
index|[
name|tos
index|]
operator|=
literal|0
expr_stmt|;
return|return
name|true
return|;
block|}
elseif|else
if|if
condition|(
name|act
operator|>
literal|0
condition|)
block|{
if|if
condition|(
operator|++
name|tos
operator|==
name|stack_size
operator|-
literal|1
condition|)
name|reallocateStack
argument_list|()
expr_stmt|;
name|Value
modifier|&
name|val
init|=
name|sym_stack
index|[
name|tos
index|]
decl_stmt|;
name|val
operator|.
name|c
operator|=
name|token_char
expr_stmt|;
name|val
operator|.
name|pos
operator|=
name|textBuffer
operator|.
name|size
argument_list|()
expr_stmt|;
name|val
operator|.
name|prefix
operator|=
literal|0
expr_stmt|;
name|val
operator|.
name|len
operator|=
literal|1
expr_stmt|;
if|if
condition|(
name|token_char
condition|)
name|textBuffer
operator|+=
name|QChar
argument_list|(
name|token_char
argument_list|)
expr_stmt|;
name|state_stack
index|[
name|tos
index|]
operator|=
name|act
expr_stmt|;
name|token
operator|=
operator|-
literal|1
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|act
operator|<
literal|0
condition|)
block|{
name|r
operator|=
operator|-
name|act
operator|-
literal|1
expr_stmt|;
if|#
directive|if
name|defined
argument_list|(
name|QLALR_DEBUG
argument_list|)
name|int
name|ridx
init|=
name|rule_index
index|[
name|r
index|]
decl_stmt|;
name|printf
argument_list|(
literal|"%3d) %s ::="
argument_list|,
name|r
operator|+
literal|1
argument_list|,
name|spell
index|[
name|rule_info
index|[
name|ridx
index|]
index|]
argument_list|)
expr_stmt|;
operator|++
name|ridx
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
name|ridx
init|;
name|i
operator|<
name|ridx
operator|+
name|rhs
index|[
name|r
index|]
condition|;
operator|++
name|i
control|)
block|{
name|int
name|symbol
init|=
name|rule_info
index|[
name|i
index|]
decl_stmt|;
if|if
condition|(
specifier|const
name|char
modifier|*
name|name
init|=
name|spell
index|[
name|symbol
index|]
condition|)
name|printf
argument_list|(
literal|" %s"
argument_list|,
name|name
argument_list|)
expr_stmt|;
else|else
name|printf
argument_list|(
literal|" #%d"
argument_list|,
name|symbol
argument_list|)
expr_stmt|;
block|}
name|printf
argument_list|(
literal|"\n"
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|tos
operator|-=
name|rhs
index|[
name|r
index|]
expr_stmt|;
name|act
operator|=
name|state_stack
index|[
name|tos
operator|++
index|]
expr_stmt|;
name|ResumeReduction
label|:
switch|switch
condition|(
name|r
condition|)
block|{
case|case
literal|0
case|:
name|setType
argument_list|(
name|QXmlStreamReader
operator|::
name|EndDocument
argument_list|)
expr_stmt|;
break|break;
case|case
literal|1
case|:
if|if
condition|(
name|type
operator|!=
name|QXmlStreamReader
operator|::
name|Invalid
condition|)
block|{
if|if
condition|(
name|hasSeenTag
operator|||
name|inParseEntity
condition|)
block|{
name|setType
argument_list|(
name|QXmlStreamReader
operator|::
name|EndDocument
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|raiseError
argument_list|(
name|QXmlStreamReader
operator|::
name|NotWellFormedError
argument_list|,
name|QXmlStream
operator|::
name|tr
argument_list|(
literal|"Start tag expected."
argument_list|)
argument_list|)
expr_stmt|;
comment|// reset the parser
name|tos
operator|=
literal|0
expr_stmt|;
name|state_stack
index|[
name|tos
operator|++
index|]
operator|=
literal|0
expr_stmt|;
name|state_stack
index|[
name|tos
index|]
operator|=
literal|0
expr_stmt|;
return|return
name|false
return|;
block|}
block|}
break|break;
case|case
literal|10
case|:
name|entityReferenceStack
operator|.
name|pop
argument_list|()
operator|->
name|isCurrentlyReferenced
operator|=
name|false
expr_stmt|;
name|clearSym
argument_list|()
expr_stmt|;
break|break;
case|case
literal|11
case|:
if|if
condition|(
operator|!
name|scanString
argument_list|(
name|spell
index|[
name|VERSION
index|]
argument_list|,
name|VERSION
argument_list|,
name|false
argument_list|)
operator|&&
name|atEnd
condition|)
block|{
name|resume
argument_list|(
literal|11
argument_list|)
expr_stmt|;
return|return
name|false
return|;
block|}
break|break;
case|case
literal|12
case|:
name|setType
argument_list|(
name|QXmlStreamReader
operator|::
name|StartDocument
argument_list|)
expr_stmt|;
name|documentVersion
operator|=
name|symString
argument_list|(
literal|6
argument_list|)
expr_stmt|;
name|startDocument
argument_list|()
expr_stmt|;
break|break;
case|case
literal|13
case|:
name|hasExternalDtdSubset
operator|=
name|true
expr_stmt|;
name|dtdSystemId
operator|=
name|symString
argument_list|(
literal|2
argument_list|)
expr_stmt|;
break|break;
case|case
literal|14
case|:
name|checkPublicLiteral
argument_list|(
name|symString
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|dtdPublicId
operator|=
name|symString
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|dtdSystemId
operator|=
name|symString
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|hasExternalDtdSubset
operator|=
name|true
expr_stmt|;
break|break;
case|case
literal|16
case|:
if|if
condition|(
operator|!
name|scanPublicOrSystem
argument_list|()
operator|&&
name|atEnd
condition|)
block|{
name|resume
argument_list|(
literal|16
argument_list|)
expr_stmt|;
return|return
name|false
return|;
block|}
name|dtdName
operator|=
name|symString
argument_list|(
literal|3
argument_list|)
expr_stmt|;
break|break;
case|case
literal|17
case|:
case|case
literal|18
case|:
name|dtdName
operator|=
name|symString
argument_list|(
literal|3
argument_list|)
expr_stmt|;
comment|// fall through
case|case
literal|19
case|:
case|case
literal|20
case|:
name|setType
argument_list|(
name|QXmlStreamReader
operator|::
name|DTD
argument_list|)
expr_stmt|;
name|text
operator|=
operator|&
name|textBuffer
expr_stmt|;
break|break;
case|case
literal|21
case|:
name|scanDtd
operator|=
name|true
expr_stmt|;
break|break;
case|case
literal|22
case|:
name|scanDtd
operator|=
name|false
expr_stmt|;
break|break;
case|case
literal|37
case|:
if|if
condition|(
operator|!
name|scanString
argument_list|(
name|spell
index|[
name|EMPTY
index|]
argument_list|,
name|EMPTY
argument_list|,
name|false
argument_list|)
operator|&&
operator|!
name|scanString
argument_list|(
name|spell
index|[
name|ANY
index|]
argument_list|,
name|ANY
argument_list|,
name|false
argument_list|)
operator|&&
name|atEnd
condition|)
block|{
name|resume
argument_list|(
literal|37
argument_list|)
expr_stmt|;
return|return
name|false
return|;
block|}
break|break;
case|case
literal|43
case|:
if|if
condition|(
operator|!
name|scanString
argument_list|(
name|spell
index|[
name|PCDATA
index|]
argument_list|,
name|PCDATA
argument_list|,
name|false
argument_list|)
operator|&&
name|atEnd
condition|)
block|{
name|resume
argument_list|(
literal|43
argument_list|)
expr_stmt|;
return|return
name|false
return|;
block|}
break|break;
case|case
literal|68
case|:
block|{
name|lastAttributeIsCData
operator|=
name|true
expr_stmt|;
block|}
break|break;
case|case
literal|78
case|:
if|if
condition|(
operator|!
name|scanAfterDefaultDecl
argument_list|()
operator|&&
name|atEnd
condition|)
block|{
name|resume
argument_list|(
literal|78
argument_list|)
expr_stmt|;
return|return
name|false
return|;
block|}
break|break;
case|case
literal|83
case|:
name|sym
argument_list|(
literal|1
argument_list|)
operator|=
name|sym
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|lastAttributeValue
operator|.
name|clear
argument_list|()
expr_stmt|;
name|lastAttributeIsCData
operator|=
name|false
expr_stmt|;
if|if
condition|(
operator|!
name|scanAttType
argument_list|()
operator|&&
name|atEnd
condition|)
block|{
name|resume
argument_list|(
literal|83
argument_list|)
expr_stmt|;
return|return
name|false
return|;
block|}
break|break;
case|case
literal|84
case|:
block|{
name|DtdAttribute
modifier|&
name|dtdAttribute
init|=
name|dtdAttributes
operator|.
name|push
argument_list|()
decl_stmt|;
name|dtdAttribute
operator|.
name|tagName
operator|.
name|clear
argument_list|()
expr_stmt|;
name|dtdAttribute
operator|.
name|isCDATA
operator|=
name|lastAttributeIsCData
expr_stmt|;
name|dtdAttribute
operator|.
name|attributePrefix
operator|=
name|addToStringStorage
argument_list|(
name|symPrefix
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|dtdAttribute
operator|.
name|attributeName
operator|=
name|addToStringStorage
argument_list|(
name|symString
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|dtdAttribute
operator|.
name|attributeQualifiedName
operator|=
name|addToStringStorage
argument_list|(
name|symName
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|dtdAttribute
operator|.
name|isNamespaceAttribute
operator|=
operator|(
name|dtdAttribute
operator|.
name|attributePrefix
operator|==
name|QLatin1String
argument_list|(
literal|"xmlns"
argument_list|)
operator|||
operator|(
name|dtdAttribute
operator|.
name|attributePrefix
operator|.
name|isEmpty
argument_list|()
operator|&&
name|dtdAttribute
operator|.
name|attributeName
operator|==
name|QLatin1String
argument_list|(
literal|"xmlns"
argument_list|)
operator|)
operator|)
expr_stmt|;
if|if
condition|(
name|lastAttributeValue
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|dtdAttribute
operator|.
name|defaultValue
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|dtdAttribute
operator|.
name|isCDATA
condition|)
name|dtdAttribute
operator|.
name|defaultValue
operator|=
name|addToStringStorage
argument_list|(
name|lastAttributeValue
argument_list|)
expr_stmt|;
else|else
name|dtdAttribute
operator|.
name|defaultValue
operator|=
name|addToStringStorage
argument_list|(
name|lastAttributeValue
operator|.
name|toString
argument_list|()
operator|.
name|simplified
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
break|break;
case|case
literal|88
case|:
block|{
if|if
condition|(
name|referenceToUnparsedEntityDetected
operator|&&
operator|!
name|standalone
condition|)
break|break;
name|int
name|n
init|=
name|dtdAttributes
operator|.
name|size
argument_list|()
decl_stmt|;
name|QStringRef
name|tagName
init|=
name|addToStringStorage
argument_list|(
name|symName
argument_list|(
literal|3
argument_list|)
argument_list|)
decl_stmt|;
while|while
condition|(
name|n
operator|--
condition|)
block|{
name|DtdAttribute
modifier|&
name|dtdAttribute
init|=
name|dtdAttributes
index|[
name|n
index|]
decl_stmt|;
if|if
condition|(
operator|!
name|dtdAttribute
operator|.
name|tagName
operator|.
name|isNull
argument_list|()
condition|)
break|break;
name|dtdAttribute
operator|.
name|tagName
operator|=
name|tagName
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|n
condition|;
operator|++
name|i
control|)
block|{
if|if
condition|(
operator|(
name|dtdAttributes
index|[
name|i
index|]
operator|.
name|tagName
operator|.
name|isNull
argument_list|()
operator|||
name|dtdAttributes
index|[
name|i
index|]
operator|.
name|tagName
operator|==
name|tagName
operator|)
operator|&&
name|dtdAttributes
index|[
name|i
index|]
operator|.
name|attributeQualifiedName
operator|==
name|dtdAttribute
operator|.
name|attributeQualifiedName
condition|)
block|{
name|dtdAttribute
operator|.
name|attributeQualifiedName
operator|.
name|clear
argument_list|()
expr_stmt|;
comment|// redefined, delete it
break|break;
block|}
block|}
block|}
block|}
break|break;
case|case
literal|89
case|:
block|{
if|if
condition|(
operator|!
name|scanPublicOrSystem
argument_list|()
operator|&&
name|atEnd
condition|)
block|{
name|resume
argument_list|(
literal|89
argument_list|)
expr_stmt|;
return|return
name|false
return|;
block|}
name|EntityDeclaration
modifier|&
name|entityDeclaration
init|=
name|entityDeclarations
operator|.
name|push
argument_list|()
decl_stmt|;
name|entityDeclaration
operator|.
name|clear
argument_list|()
expr_stmt|;
name|entityDeclaration
operator|.
name|name
operator|=
name|symString
argument_list|(
literal|3
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
literal|90
case|:
block|{
if|if
condition|(
operator|!
name|scanPublicOrSystem
argument_list|()
operator|&&
name|atEnd
condition|)
block|{
name|resume
argument_list|(
literal|90
argument_list|)
expr_stmt|;
return|return
name|false
return|;
block|}
name|EntityDeclaration
modifier|&
name|entityDeclaration
init|=
name|entityDeclarations
operator|.
name|push
argument_list|()
decl_stmt|;
name|entityDeclaration
operator|.
name|clear
argument_list|()
expr_stmt|;
name|entityDeclaration
operator|.
name|name
operator|=
name|symString
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|entityDeclaration
operator|.
name|parameter
operator|=
name|true
expr_stmt|;
block|}
break|break;
case|case
literal|91
case|:
block|{
if|if
condition|(
operator|!
name|scanNData
argument_list|()
operator|&&
name|atEnd
condition|)
block|{
name|resume
argument_list|(
literal|91
argument_list|)
expr_stmt|;
return|return
name|false
return|;
block|}
name|EntityDeclaration
modifier|&
name|entityDeclaration
init|=
name|entityDeclarations
operator|.
name|top
argument_list|()
decl_stmt|;
name|entityDeclaration
operator|.
name|systemId
operator|=
name|symString
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|entityDeclaration
operator|.
name|external
operator|=
name|true
expr_stmt|;
block|}
break|break;
case|case
literal|92
case|:
block|{
if|if
condition|(
operator|!
name|scanNData
argument_list|()
operator|&&
name|atEnd
condition|)
block|{
name|resume
argument_list|(
literal|92
argument_list|)
expr_stmt|;
return|return
name|false
return|;
block|}
name|EntityDeclaration
modifier|&
name|entityDeclaration
init|=
name|entityDeclarations
operator|.
name|top
argument_list|()
decl_stmt|;
name|checkPublicLiteral
argument_list|(
operator|(
name|entityDeclaration
operator|.
name|publicId
operator|=
name|symString
argument_list|(
literal|3
argument_list|)
operator|)
argument_list|)
expr_stmt|;
name|entityDeclaration
operator|.
name|systemId
operator|=
name|symString
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|entityDeclaration
operator|.
name|external
operator|=
name|true
expr_stmt|;
block|}
break|break;
case|case
literal|93
case|:
block|{
name|EntityDeclaration
modifier|&
name|entityDeclaration
init|=
name|entityDeclarations
operator|.
name|top
argument_list|()
decl_stmt|;
name|entityDeclaration
operator|.
name|notationName
operator|=
name|symString
argument_list|(
literal|3
argument_list|)
expr_stmt|;
if|if
condition|(
name|entityDeclaration
operator|.
name|parameter
condition|)
name|raiseWellFormedError
argument_list|(
name|QXmlStream
operator|::
name|tr
argument_list|(
literal|"NDATA in parameter entity declaration."
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|//fall through
case|case
literal|94
case|:
case|case
literal|95
case|:
block|{
if|if
condition|(
name|referenceToUnparsedEntityDetected
operator|&&
operator|!
name|standalone
condition|)
block|{
name|entityDeclarations
operator|.
name|pop
argument_list|()
expr_stmt|;
break|break;
block|}
name|EntityDeclaration
modifier|&
name|entityDeclaration
init|=
name|entityDeclarations
operator|.
name|top
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|entityDeclaration
operator|.
name|external
condition|)
name|entityDeclaration
operator|.
name|value
operator|=
name|symString
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|QString
name|entityName
init|=
name|entityDeclaration
operator|.
name|name
operator|.
name|toString
argument_list|()
decl_stmt|;
name|QHash
operator|<
name|QString
operator|,
name|Entity
operator|>
operator|&
name|hash
operator|=
name|entityDeclaration
operator|.
name|parameter
condition|?
name|parameterEntityHash
else|:
name|entityHash
expr_stmt|;
if|if
condition|(
operator|!
name|hash
operator|.
name|contains
argument_list|(
name|entityName
argument_list|)
condition|)
block|{
name|Entity
name|entity
argument_list|(
name|entityDeclaration
operator|.
name|value
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|entity
operator|.
name|unparsed
operator|=
operator|(
operator|!
name|entityDeclaration
operator|.
name|notationName
operator|.
name|isNull
argument_list|()
operator|)
expr_stmt|;
name|entity
operator|.
name|external
operator|=
name|entityDeclaration
operator|.
name|external
expr_stmt|;
name|hash
operator|.
name|insert
argument_list|(
name|entityName
argument_list|,
name|entity
argument_list|)
expr_stmt|;
block|}
block|}
break|break;
case|case
literal|96
case|:
block|{
name|setType
argument_list|(
name|QXmlStreamReader
operator|::
name|ProcessingInstruction
argument_list|)
expr_stmt|;
name|int
name|pos
init|=
name|sym
argument_list|(
literal|4
argument_list|)
operator|.
name|pos
operator|+
name|sym
argument_list|(
literal|4
argument_list|)
operator|.
name|len
decl_stmt|;
name|processingInstructionTarget
operator|=
name|symString
argument_list|(
literal|3
argument_list|)
expr_stmt|;
if|if
condition|(
name|scanUntil
argument_list|(
literal|"?>"
argument_list|)
condition|)
block|{
name|processingInstructionData
operator|=
name|QStringRef
argument_list|(
operator|&
name|textBuffer
argument_list|,
name|pos
argument_list|,
name|textBuffer
operator|.
name|size
argument_list|()
operator|-
name|pos
operator|-
literal|2
argument_list|)
expr_stmt|;
specifier|const
name|QString
name|piTarget
argument_list|(
name|processingInstructionTarget
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|piTarget
operator|.
name|compare
argument_list|(
name|QLatin1String
argument_list|(
literal|"xml"
argument_list|)
argument_list|,
name|Qt
operator|::
name|CaseInsensitive
argument_list|)
condition|)
block|{
name|raiseWellFormedError
argument_list|(
name|QXmlStream
operator|::
name|tr
argument_list|(
literal|"XML declaration not at start of document."
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
operator|!
name|QXmlUtils
operator|::
name|isNCName
argument_list|(
name|piTarget
argument_list|)
condition|)
name|raiseWellFormedError
argument_list|(
name|QXmlStream
operator|::
name|tr
argument_list|(
literal|"%1 is an invalid processing instruction name."
argument_list|)
operator|.
name|arg
argument_list|(
name|piTarget
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|type
operator|!=
name|QXmlStreamReader
operator|::
name|Invalid
condition|)
block|{
name|resume
argument_list|(
literal|96
argument_list|)
expr_stmt|;
return|return
name|false
return|;
block|}
block|}
break|break;
case|case
literal|97
case|:
name|setType
argument_list|(
name|QXmlStreamReader
operator|::
name|ProcessingInstruction
argument_list|)
expr_stmt|;
name|processingInstructionTarget
operator|=
name|symString
argument_list|(
literal|3
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|processingInstructionTarget
operator|.
name|toString
argument_list|()
operator|.
name|compare
argument_list|(
name|QLatin1String
argument_list|(
literal|"xml"
argument_list|)
argument_list|,
name|Qt
operator|::
name|CaseInsensitive
argument_list|)
condition|)
name|raiseWellFormedError
argument_list|(
name|QXmlStream
operator|::
name|tr
argument_list|(
literal|"Invalid processing instruction name."
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
literal|98
case|:
if|if
condition|(
operator|!
name|scanAfterLangleBang
argument_list|()
operator|&&
name|atEnd
condition|)
block|{
name|resume
argument_list|(
literal|98
argument_list|)
expr_stmt|;
return|return
name|false
return|;
block|}
break|break;
case|case
literal|99
case|:
if|if
condition|(
operator|!
name|scanUntil
argument_list|(
literal|"--"
argument_list|)
condition|)
block|{
name|resume
argument_list|(
literal|99
argument_list|)
expr_stmt|;
return|return
name|false
return|;
block|}
break|break;
case|case
literal|100
case|:
block|{
name|setType
argument_list|(
name|QXmlStreamReader
operator|::
name|Comment
argument_list|)
expr_stmt|;
name|int
name|pos
init|=
name|sym
argument_list|(
literal|1
argument_list|)
operator|.
name|pos
operator|+
literal|4
decl_stmt|;
name|text
operator|=
name|QStringRef
argument_list|(
operator|&
name|textBuffer
argument_list|,
name|pos
argument_list|,
name|textBuffer
operator|.
name|size
argument_list|()
operator|-
name|pos
operator|-
literal|3
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
literal|101
case|:
block|{
name|setType
argument_list|(
name|QXmlStreamReader
operator|::
name|Characters
argument_list|)
expr_stmt|;
name|isCDATA
operator|=
name|true
expr_stmt|;
name|isWhitespace
operator|=
name|false
expr_stmt|;
name|int
name|pos
init|=
name|sym
argument_list|(
literal|2
argument_list|)
operator|.
name|pos
decl_stmt|;
if|if
condition|(
name|scanUntil
argument_list|(
literal|"]]>"
argument_list|,
operator|-
literal|1
argument_list|)
condition|)
block|{
name|text
operator|=
name|QStringRef
argument_list|(
operator|&
name|textBuffer
argument_list|,
name|pos
argument_list|,
name|textBuffer
operator|.
name|size
argument_list|()
operator|-
name|pos
operator|-
literal|3
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|resume
argument_list|(
literal|101
argument_list|)
expr_stmt|;
return|return
name|false
return|;
block|}
block|}
break|break;
case|case
literal|102
case|:
block|{
if|if
condition|(
operator|!
name|scanPublicOrSystem
argument_list|()
operator|&&
name|atEnd
condition|)
block|{
name|resume
argument_list|(
literal|102
argument_list|)
expr_stmt|;
return|return
name|false
return|;
block|}
name|NotationDeclaration
modifier|&
name|notationDeclaration
init|=
name|notationDeclarations
operator|.
name|push
argument_list|()
decl_stmt|;
name|notationDeclaration
operator|.
name|name
operator|=
name|symString
argument_list|(
literal|3
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
literal|103
case|:
block|{
name|NotationDeclaration
modifier|&
name|notationDeclaration
init|=
name|notationDeclarations
operator|.
name|top
argument_list|()
decl_stmt|;
name|notationDeclaration
operator|.
name|systemId
operator|=
name|symString
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|notationDeclaration
operator|.
name|publicId
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
break|break;
case|case
literal|104
case|:
block|{
name|NotationDeclaration
modifier|&
name|notationDeclaration
init|=
name|notationDeclarations
operator|.
name|top
argument_list|()
decl_stmt|;
name|notationDeclaration
operator|.
name|systemId
operator|.
name|clear
argument_list|()
expr_stmt|;
name|checkPublicLiteral
argument_list|(
operator|(
name|notationDeclaration
operator|.
name|publicId
operator|=
name|symString
argument_list|(
literal|3
argument_list|)
operator|)
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
literal|105
case|:
block|{
name|NotationDeclaration
modifier|&
name|notationDeclaration
init|=
name|notationDeclarations
operator|.
name|top
argument_list|()
decl_stmt|;
name|checkPublicLiteral
argument_list|(
operator|(
name|notationDeclaration
operator|.
name|publicId
operator|=
name|symString
argument_list|(
literal|3
argument_list|)
operator|)
argument_list|)
expr_stmt|;
name|notationDeclaration
operator|.
name|systemId
operator|=
name|symString
argument_list|(
literal|5
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
literal|129
case|:
name|isWhitespace
operator|=
name|false
expr_stmt|;
comment|// fall through
case|case
literal|130
case|:
name|sym
argument_list|(
literal|1
argument_list|)
operator|.
name|len
operator|+=
name|fastScanContentCharList
argument_list|()
expr_stmt|;
if|if
condition|(
name|atEnd
operator|&&
operator|!
name|inParseEntity
condition|)
block|{
name|resume
argument_list|(
literal|130
argument_list|)
expr_stmt|;
return|return
name|false
return|;
block|}
break|break;
case|case
literal|139
case|:
if|if
condition|(
operator|!
name|textBuffer
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|setType
argument_list|(
name|QXmlStreamReader
operator|::
name|Characters
argument_list|)
expr_stmt|;
name|text
operator|=
operator|&
name|textBuffer
expr_stmt|;
block|}
break|break;
case|case
literal|140
case|:
case|case
literal|141
case|:
name|clearSym
argument_list|()
expr_stmt|;
break|break;
case|case
literal|142
case|:
case|case
literal|143
case|:
name|sym
argument_list|(
literal|1
argument_list|)
operator|=
name|sym
argument_list|(
literal|2
argument_list|)
expr_stmt|;
break|break;
case|case
literal|144
case|:
case|case
literal|145
case|:
case|case
literal|146
case|:
case|case
literal|147
case|:
name|sym
argument_list|(
literal|1
argument_list|)
operator|.
name|len
operator|+=
name|sym
argument_list|(
literal|2
argument_list|)
operator|.
name|len
expr_stmt|;
break|break;
case|case
literal|173
case|:
if|if
condition|(
name|normalizeLiterals
condition|)
name|textBuffer
operator|.
name|data
argument_list|()
index|[
name|textBuffer
operator|.
name|size
argument_list|()
operator|-
literal|1
index|]
operator|=
name|QLatin1Char
argument_list|(
literal|' '
argument_list|)
expr_stmt|;
break|break;
case|case
literal|174
case|:
name|sym
argument_list|(
literal|1
argument_list|)
operator|.
name|len
operator|+=
name|fastScanLiteralContent
argument_list|()
expr_stmt|;
if|if
condition|(
name|atEnd
condition|)
block|{
name|resume
argument_list|(
literal|174
argument_list|)
expr_stmt|;
return|return
name|false
return|;
block|}
break|break;
case|case
literal|175
case|:
block|{
if|if
condition|(
operator|!
name|QXmlUtils
operator|::
name|isPublicID
argument_list|(
name|symString
argument_list|(
literal|1
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
condition|)
block|{
name|raiseWellFormedError
argument_list|(
name|QXmlStream
operator|::
name|tr
argument_list|(
literal|"%1 is an invalid PUBLIC identifier."
argument_list|)
operator|.
name|arg
argument_list|(
name|symString
argument_list|(
literal|1
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|resume
argument_list|(
literal|175
argument_list|)
expr_stmt|;
return|return
name|false
return|;
block|}
block|}
break|break;
case|case
literal|176
case|:
case|case
literal|177
case|:
name|clearSym
argument_list|()
expr_stmt|;
break|break;
case|case
literal|178
case|:
case|case
literal|179
case|:
name|sym
argument_list|(
literal|1
argument_list|)
operator|=
name|sym
argument_list|(
literal|2
argument_list|)
expr_stmt|;
break|break;
case|case
literal|180
case|:
case|case
literal|181
case|:
case|case
literal|182
case|:
case|case
literal|183
case|:
name|sym
argument_list|(
literal|1
argument_list|)
operator|.
name|len
operator|+=
name|sym
argument_list|(
literal|2
argument_list|)
operator|.
name|len
expr_stmt|;
break|break;
case|case
literal|213
case|:
case|case
literal|214
case|:
name|clearSym
argument_list|()
expr_stmt|;
break|break;
case|case
literal|215
case|:
case|case
literal|216
case|:
name|sym
argument_list|(
literal|1
argument_list|)
operator|=
name|sym
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|lastAttributeValue
operator|=
name|symString
argument_list|(
literal|1
argument_list|)
expr_stmt|;
break|break;
case|case
literal|217
case|:
case|case
literal|218
case|:
case|case
literal|219
case|:
case|case
literal|220
case|:
name|sym
argument_list|(
literal|1
argument_list|)
operator|.
name|len
operator|+=
name|sym
argument_list|(
literal|2
argument_list|)
operator|.
name|len
expr_stmt|;
break|break;
case|case
literal|229
case|:
block|{
name|QStringRef
name|prefix
init|=
name|symPrefix
argument_list|(
literal|1
argument_list|)
decl_stmt|;
if|if
condition|(
name|prefix
operator|.
name|isEmpty
argument_list|()
operator|&&
name|symString
argument_list|(
literal|1
argument_list|)
operator|==
name|QLatin1String
argument_list|(
literal|"xmlns"
argument_list|)
operator|&&
name|namespaceProcessing
condition|)
block|{
name|NamespaceDeclaration
modifier|&
name|namespaceDeclaration
init|=
name|namespaceDeclarations
operator|.
name|push
argument_list|()
decl_stmt|;
name|namespaceDeclaration
operator|.
name|prefix
operator|.
name|clear
argument_list|()
expr_stmt|;
specifier|const
name|QStringRef
name|ns
argument_list|(
name|symString
argument_list|(
literal|5
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|ns
operator|==
name|QLatin1String
argument_list|(
literal|"http://www.w3.org/2000/xmlns/"
argument_list|)
operator|||
name|ns
operator|==
name|QLatin1String
argument_list|(
literal|"http://www.w3.org/XML/1998/namespace"
argument_list|)
condition|)
name|raiseWellFormedError
argument_list|(
name|QXmlStream
operator|::
name|tr
argument_list|(
literal|"Illegal namespace declaration."
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|namespaceDeclaration
operator|.
name|namespaceUri
operator|=
name|addToStringStorage
argument_list|(
name|ns
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|Attribute
modifier|&
name|attribute
init|=
name|attributeStack
operator|.
name|push
argument_list|()
decl_stmt|;
name|attribute
operator|.
name|key
operator|=
name|sym
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|attribute
operator|.
name|value
operator|=
name|sym
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|QStringRef
name|attributeQualifiedName
init|=
name|symName
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|bool
name|normalize
init|=
name|false
decl_stmt|;
for|for
control|(
name|int
name|a
init|=
literal|0
init|;
name|a
operator|<
name|dtdAttributes
operator|.
name|size
argument_list|()
condition|;
operator|++
name|a
control|)
block|{
name|DtdAttribute
modifier|&
name|dtdAttribute
init|=
name|dtdAttributes
index|[
name|a
index|]
decl_stmt|;
if|if
condition|(
operator|!
name|dtdAttribute
operator|.
name|isCDATA
operator|&&
name|dtdAttribute
operator|.
name|tagName
operator|==
name|qualifiedName
operator|&&
name|dtdAttribute
operator|.
name|attributeQualifiedName
operator|==
name|attributeQualifiedName
condition|)
block|{
name|normalize
operator|=
name|true
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
name|normalize
condition|)
block|{
comment|// normalize attribute value (simplify and trim)
name|int
name|pos
init|=
name|textBuffer
operator|.
name|size
argument_list|()
decl_stmt|;
name|int
name|n
init|=
literal|0
decl_stmt|;
name|bool
name|wasSpace
init|=
name|true
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|attribute
operator|.
name|value
operator|.
name|len
condition|;
operator|++
name|i
control|)
block|{
name|QChar
name|c
init|=
name|textBuffer
operator|.
name|at
argument_list|(
name|attribute
operator|.
name|value
operator|.
name|pos
operator|+
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|c
operator|.
name|unicode
argument_list|()
operator|==
literal|' '
condition|)
block|{
if|if
condition|(
name|wasSpace
condition|)
continue|continue;
name|wasSpace
operator|=
name|true
expr_stmt|;
block|}
else|else
block|{
name|wasSpace
operator|=
name|false
expr_stmt|;
block|}
name|textBuffer
operator|+=
name|textBuffer
operator|.
name|at
argument_list|(
name|attribute
operator|.
name|value
operator|.
name|pos
operator|+
name|i
argument_list|)
expr_stmt|;
operator|++
name|n
expr_stmt|;
block|}
if|if
condition|(
name|wasSpace
condition|)
while|while
condition|(
name|n
operator|&&
name|textBuffer
operator|.
name|at
argument_list|(
name|pos
operator|+
name|n
operator|-
literal|1
argument_list|)
operator|.
name|unicode
argument_list|()
operator|==
literal|' '
condition|)
operator|--
name|n
expr_stmt|;
name|attribute
operator|.
name|value
operator|.
name|pos
operator|=
name|pos
expr_stmt|;
name|attribute
operator|.
name|value
operator|.
name|len
operator|=
name|n
expr_stmt|;
block|}
if|if
condition|(
name|prefix
operator|==
name|QLatin1String
argument_list|(
literal|"xmlns"
argument_list|)
operator|&&
name|namespaceProcessing
condition|)
block|{
name|NamespaceDeclaration
modifier|&
name|namespaceDeclaration
init|=
name|namespaceDeclarations
operator|.
name|push
argument_list|()
decl_stmt|;
name|QStringRef
name|namespacePrefix
init|=
name|symString
argument_list|(
name|attribute
operator|.
name|key
argument_list|)
decl_stmt|;
name|QStringRef
name|namespaceUri
init|=
name|symString
argument_list|(
name|attribute
operator|.
name|value
argument_list|)
decl_stmt|;
name|attributeStack
operator|.
name|pop
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|namespacePrefix
operator|==
name|QLatin1String
argument_list|(
literal|"xml"
argument_list|)
operator|)
operator|^
operator|(
name|namespaceUri
operator|==
name|QLatin1String
argument_list|(
literal|"http://www.w3.org/XML/1998/namespace"
argument_list|)
operator|)
operator|)
operator|||
name|namespaceUri
operator|==
name|QLatin1String
argument_list|(
literal|"http://www.w3.org/2000/xmlns/"
argument_list|)
operator|||
name|namespaceUri
operator|.
name|isEmpty
argument_list|()
operator|||
name|namespacePrefix
operator|==
name|QLatin1String
argument_list|(
literal|"xmlns"
argument_list|)
condition|)
name|raiseWellFormedError
argument_list|(
name|QXmlStream
operator|::
name|tr
argument_list|(
literal|"Illegal namespace declaration."
argument_list|)
argument_list|)
expr_stmt|;
name|namespaceDeclaration
operator|.
name|prefix
operator|=
name|addToStringStorage
argument_list|(
name|namespacePrefix
argument_list|)
expr_stmt|;
name|namespaceDeclaration
operator|.
name|namespaceUri
operator|=
name|addToStringStorage
argument_list|(
name|namespaceUri
argument_list|)
expr_stmt|;
block|}
block|}
block|}
break|break;
case|case
literal|235
case|:
block|{
name|normalizeLiterals
operator|=
name|true
expr_stmt|;
name|Tag
modifier|&
name|tag
init|=
name|tagStack_push
argument_list|()
decl_stmt|;
name|prefix
operator|=
name|tag
operator|.
name|namespaceDeclaration
operator|.
name|prefix
operator|=
name|addToStringStorage
argument_list|(
name|symPrefix
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|name
operator|=
name|tag
operator|.
name|name
operator|=
name|addToStringStorage
argument_list|(
name|symString
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|qualifiedName
operator|=
name|tag
operator|.
name|qualifiedName
operator|=
name|addToStringStorage
argument_list|(
name|symName
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|(
operator|!
name|prefix
operator|.
name|isEmpty
argument_list|()
operator|&&
operator|!
name|QXmlUtils
operator|::
name|isNCName
argument_list|(
name|prefix
argument_list|)
operator|)
operator|||
operator|!
name|QXmlUtils
operator|::
name|isNCName
argument_list|(
name|name
argument_list|)
condition|)
name|raiseWellFormedError
argument_list|(
name|QXmlStream
operator|::
name|tr
argument_list|(
literal|"Invalid XML name."
argument_list|)
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
literal|236
case|:
name|isEmptyElement
operator|=
name|true
expr_stmt|;
comment|// fall through
case|case
literal|237
case|:
name|setType
argument_list|(
name|QXmlStreamReader
operator|::
name|StartElement
argument_list|)
expr_stmt|;
name|resolveTag
argument_list|()
expr_stmt|;
if|if
condition|(
name|tagStack
operator|.
name|size
argument_list|()
operator|==
literal|1
operator|&&
name|hasSeenTag
operator|&&
operator|!
name|inParseEntity
condition|)
name|raiseWellFormedError
argument_list|(
name|QXmlStream
operator|::
name|tr
argument_list|(
literal|"Extra content at end of document."
argument_list|)
argument_list|)
expr_stmt|;
name|hasSeenTag
operator|=
name|true
expr_stmt|;
break|break;
case|case
literal|238
case|:
block|{
name|setType
argument_list|(
name|QXmlStreamReader
operator|::
name|EndElement
argument_list|)
expr_stmt|;
name|Tag
modifier|&
name|tag
init|=
name|tagStack_pop
argument_list|()
decl_stmt|;
name|namespaceUri
operator|=
name|tag
operator|.
name|namespaceDeclaration
operator|.
name|namespaceUri
expr_stmt|;
name|name
operator|=
name|tag
operator|.
name|name
expr_stmt|;
name|qualifiedName
operator|=
name|tag
operator|.
name|qualifiedName
expr_stmt|;
if|if
condition|(
name|qualifiedName
operator|!=
name|symName
argument_list|(
literal|3
argument_list|)
condition|)
name|raiseWellFormedError
argument_list|(
name|QXmlStream
operator|::
name|tr
argument_list|(
literal|"Opening and ending tag mismatch."
argument_list|)
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
literal|239
case|:
if|if
condition|(
name|entitiesMustBeDeclared
argument_list|()
condition|)
block|{
name|raiseWellFormedError
argument_list|(
name|QXmlStream
operator|::
name|tr
argument_list|(
literal|"Entity '%1' not declared."
argument_list|)
operator|.
name|arg
argument_list|(
name|unresolvedEntity
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
name|setType
argument_list|(
name|QXmlStreamReader
operator|::
name|EntityReference
argument_list|)
expr_stmt|;
name|name
operator|=
operator|&
name|unresolvedEntity
expr_stmt|;
break|break;
case|case
literal|240
case|:
block|{
name|sym
argument_list|(
literal|1
argument_list|)
operator|.
name|len
operator|+=
name|sym
argument_list|(
literal|2
argument_list|)
operator|.
name|len
operator|+
literal|1
expr_stmt|;
name|QString
name|reference
init|=
name|symString
argument_list|(
literal|2
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
if|if
condition|(
name|entityHash
operator|.
name|contains
argument_list|(
name|reference
argument_list|)
condition|)
block|{
name|Entity
modifier|&
name|entity
init|=
name|entityHash
index|[
name|reference
index|]
decl_stmt|;
if|if
condition|(
name|entity
operator|.
name|unparsed
condition|)
block|{
name|raiseWellFormedError
argument_list|(
name|QXmlStream
operator|::
name|tr
argument_list|(
literal|"Reference to unparsed entity '%1'."
argument_list|)
operator|.
name|arg
argument_list|(
name|reference
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
operator|!
name|entity
operator|.
name|hasBeenParsed
condition|)
block|{
name|parseEntity
argument_list|(
name|entity
operator|.
name|value
argument_list|)
expr_stmt|;
name|entity
operator|.
name|hasBeenParsed
operator|=
name|true
expr_stmt|;
block|}
if|if
condition|(
name|entity
operator|.
name|literal
condition|)
name|putStringLiteral
argument_list|(
name|entity
operator|.
name|value
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|referenceEntity
argument_list|(
name|entity
argument_list|)
condition|)
name|putReplacement
argument_list|(
name|entity
operator|.
name|value
argument_list|)
expr_stmt|;
name|textBuffer
operator|.
name|chop
argument_list|(
literal|2
operator|+
name|sym
argument_list|(
literal|2
argument_list|)
operator|.
name|len
argument_list|)
expr_stmt|;
name|clearSym
argument_list|()
expr_stmt|;
block|}
break|break;
block|}
if|if
condition|(
name|entityResolver
condition|)
block|{
name|QString
name|replacementText
init|=
name|resolveUndeclaredEntity
argument_list|(
name|reference
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|replacementText
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|putReplacement
argument_list|(
name|replacementText
argument_list|)
expr_stmt|;
name|textBuffer
operator|.
name|chop
argument_list|(
literal|2
operator|+
name|sym
argument_list|(
literal|2
argument_list|)
operator|.
name|len
argument_list|)
expr_stmt|;
name|clearSym
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
name|injectToken
argument_list|(
name|UNRESOLVED_ENTITY
argument_list|)
expr_stmt|;
name|unresolvedEntity
operator|=
name|symString
argument_list|(
literal|2
argument_list|)
operator|.
name|toString
argument_list|()
expr_stmt|;
name|textBuffer
operator|.
name|chop
argument_list|(
literal|2
operator|+
name|sym
argument_list|(
literal|2
argument_list|)
operator|.
name|len
argument_list|)
expr_stmt|;
name|clearSym
argument_list|()
expr_stmt|;
block|}
break|break;
case|case
literal|241
case|:
block|{
name|sym
argument_list|(
literal|1
argument_list|)
operator|.
name|len
operator|+=
name|sym
argument_list|(
literal|2
argument_list|)
operator|.
name|len
operator|+
literal|1
expr_stmt|;
name|QString
name|reference
init|=
name|symString
argument_list|(
literal|2
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
if|if
condition|(
name|parameterEntityHash
operator|.
name|contains
argument_list|(
name|reference
argument_list|)
condition|)
block|{
name|referenceToParameterEntityDetected
operator|=
name|true
expr_stmt|;
name|Entity
modifier|&
name|entity
init|=
name|parameterEntityHash
index|[
name|reference
index|]
decl_stmt|;
if|if
condition|(
name|entity
operator|.
name|unparsed
operator|||
name|entity
operator|.
name|external
condition|)
block|{
name|referenceToUnparsedEntityDetected
operator|=
name|true
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|referenceEntity
argument_list|(
name|entity
argument_list|)
condition|)
name|putString
argument_list|(
name|entity
operator|.
name|value
argument_list|)
expr_stmt|;
name|textBuffer
operator|.
name|chop
argument_list|(
literal|2
operator|+
name|sym
argument_list|(
literal|2
argument_list|)
operator|.
name|len
argument_list|)
expr_stmt|;
name|clearSym
argument_list|()
expr_stmt|;
block|}
block|}
elseif|else
if|if
condition|(
name|entitiesMustBeDeclared
argument_list|()
condition|)
block|{
name|raiseWellFormedError
argument_list|(
name|QXmlStream
operator|::
name|tr
argument_list|(
literal|"Entity '%1' not declared."
argument_list|)
operator|.
name|arg
argument_list|(
name|symString
argument_list|(
literal|2
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
break|break;
case|case
literal|242
case|:
name|sym
argument_list|(
literal|1
argument_list|)
operator|.
name|len
operator|+=
name|sym
argument_list|(
literal|2
argument_list|)
operator|.
name|len
operator|+
literal|1
expr_stmt|;
break|break;
case|case
literal|243
case|:
block|{
name|sym
argument_list|(
literal|1
argument_list|)
operator|.
name|len
operator|+=
name|sym
argument_list|(
literal|2
argument_list|)
operator|.
name|len
operator|+
literal|1
expr_stmt|;
name|QString
name|reference
init|=
name|symString
argument_list|(
literal|2
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
if|if
condition|(
name|entityHash
operator|.
name|contains
argument_list|(
name|reference
argument_list|)
condition|)
block|{
name|Entity
modifier|&
name|entity
init|=
name|entityHash
index|[
name|reference
index|]
decl_stmt|;
if|if
condition|(
name|entity
operator|.
name|unparsed
operator|||
name|entity
operator|.
name|value
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|raiseWellFormedError
argument_list|(
name|QXmlStream
operator|::
name|tr
argument_list|(
literal|"Reference to external entity '%1' in attribute value."
argument_list|)
operator|.
name|arg
argument_list|(
name|reference
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
if|if
condition|(
operator|!
name|entity
operator|.
name|hasBeenParsed
condition|)
block|{
name|parseEntity
argument_list|(
name|entity
operator|.
name|value
argument_list|)
expr_stmt|;
name|entity
operator|.
name|hasBeenParsed
operator|=
name|true
expr_stmt|;
block|}
if|if
condition|(
name|entity
operator|.
name|literal
condition|)
name|putStringLiteral
argument_list|(
name|entity
operator|.
name|value
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|referenceEntity
argument_list|(
name|entity
argument_list|)
condition|)
name|putReplacementInAttributeValue
argument_list|(
name|entity
operator|.
name|value
argument_list|)
expr_stmt|;
name|textBuffer
operator|.
name|chop
argument_list|(
literal|2
operator|+
name|sym
argument_list|(
literal|2
argument_list|)
operator|.
name|len
argument_list|)
expr_stmt|;
name|clearSym
argument_list|()
expr_stmt|;
break|break;
block|}
if|if
condition|(
name|entityResolver
condition|)
block|{
name|QString
name|replacementText
init|=
name|resolveUndeclaredEntity
argument_list|(
name|reference
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|replacementText
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|putReplacement
argument_list|(
name|replacementText
argument_list|)
expr_stmt|;
name|textBuffer
operator|.
name|chop
argument_list|(
literal|2
operator|+
name|sym
argument_list|(
literal|2
argument_list|)
operator|.
name|len
argument_list|)
expr_stmt|;
name|clearSym
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
name|entitiesMustBeDeclared
argument_list|()
condition|)
block|{
name|raiseWellFormedError
argument_list|(
name|QXmlStream
operator|::
name|tr
argument_list|(
literal|"Entity '%1' not declared."
argument_list|)
operator|.
name|arg
argument_list|(
name|reference
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
break|break;
case|case
literal|244
case|:
block|{
if|if
condition|(
name|uint
name|s
init|=
name|resolveCharRef
argument_list|(
literal|3
argument_list|)
condition|)
block|{
if|if
condition|(
name|s
operator|>=
literal|0xffff
condition|)
name|putStringLiteral
argument_list|(
name|QString
operator|::
name|fromUcs4
argument_list|(
operator|&
name|s
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|putChar
argument_list|(
operator|(
name|LETTER
operator|<<
literal|16
operator|)
operator||
name|s
argument_list|)
expr_stmt|;
name|textBuffer
operator|.
name|chop
argument_list|(
literal|3
operator|+
name|sym
argument_list|(
literal|3
argument_list|)
operator|.
name|len
argument_list|)
expr_stmt|;
name|clearSym
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|raiseWellFormedError
argument_list|(
name|QXmlStream
operator|::
name|tr
argument_list|(
literal|"Invalid character reference."
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
break|break;
case|case
literal|247
case|:
case|case
literal|248
case|:
name|sym
argument_list|(
literal|1
argument_list|)
operator|.
name|len
operator|+=
name|sym
argument_list|(
literal|2
argument_list|)
operator|.
name|len
expr_stmt|;
break|break;
case|case
literal|259
case|:
name|sym
argument_list|(
literal|1
argument_list|)
operator|.
name|len
operator|+=
name|fastScanSpace
argument_list|()
expr_stmt|;
if|if
condition|(
name|atEnd
condition|)
block|{
name|resume
argument_list|(
literal|259
argument_list|)
expr_stmt|;
return|return
name|false
return|;
block|}
break|break;
case|case
literal|262
case|:
block|{
name|sym
argument_list|(
literal|1
argument_list|)
operator|.
name|len
operator|+=
name|fastScanName
argument_list|(
operator|&
name|sym
argument_list|(
literal|1
argument_list|)
operator|.
name|prefix
argument_list|)
expr_stmt|;
if|if
condition|(
name|atEnd
condition|)
block|{
name|resume
argument_list|(
literal|262
argument_list|)
expr_stmt|;
return|return
name|false
return|;
block|}
block|}
break|break;
case|case
literal|263
case|:
name|sym
argument_list|(
literal|1
argument_list|)
operator|.
name|len
operator|+=
name|fastScanName
argument_list|()
expr_stmt|;
if|if
condition|(
name|atEnd
condition|)
block|{
name|resume
argument_list|(
literal|263
argument_list|)
expr_stmt|;
return|return
name|false
return|;
block|}
break|break;
case|case
literal|264
case|:
case|case
literal|265
case|:
case|case
literal|266
case|:
case|case
literal|267
case|:
case|case
literal|268
case|:
name|sym
argument_list|(
literal|1
argument_list|)
operator|.
name|len
operator|+=
name|fastScanNMTOKEN
argument_list|()
expr_stmt|;
if|if
condition|(
name|atEnd
condition|)
block|{
name|resume
argument_list|(
literal|268
argument_list|)
expr_stmt|;
return|return
name|false
return|;
block|}
break|break;
default|default:
empty_stmt|;
block|}
comment|// switch
name|act
operator|=
name|state_stack
index|[
name|tos
index|]
operator|=
name|nt_action
argument_list|(
name|act
argument_list|,
name|lhs
index|[
name|r
index|]
operator|-
name|TERMINAL_COUNT
argument_list|)
expr_stmt|;
if|if
condition|(
name|type
operator|!=
name|QXmlStreamReader
operator|::
name|NoToken
condition|)
return|return
name|true
return|;
block|}
else|else
block|{
name|parseError
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
end_block
begin_return
return|return
name|false
return|;
end_return
begin_endif
unit|}
endif|#
directive|endif
end_endif
begin_comment
comment|//QT_NO_XMLSTREAMREADER.xml
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QXMLSTREAM_P_H
end_comment
end_unit
