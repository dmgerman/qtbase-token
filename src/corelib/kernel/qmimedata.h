begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the QtCore module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QMIMEDATA_H
end_ifndef
begin_define
DECL|macro|QMIMEDATA_H
define|#
directive|define
name|QMIMEDATA_H
end_define
begin_include
include|#
directive|include
file|<QtCore/qvariant.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qobject.h>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
DECL|variable|QUrl
name|class
name|QUrl
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QMimeDataPrivate
name|class
name|QMimeDataPrivate
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|Q_CORE_EXPORT
name|QMimeData
range|:
name|public
name|QObject
block|{
name|Q_OBJECT
name|public
operator|:
name|QMimeData
argument_list|()
block|;
operator|~
name|QMimeData
argument_list|()
block|;
name|QList
operator|<
name|QUrl
operator|>
name|urls
argument_list|()
specifier|const
block|;
name|void
name|setUrls
argument_list|(
specifier|const
name|QList
operator|<
name|QUrl
operator|>
operator|&
name|urls
argument_list|)
block|;
name|bool
name|hasUrls
argument_list|()
specifier|const
block|;
name|QString
name|text
argument_list|()
specifier|const
block|;
name|void
name|setText
argument_list|(
specifier|const
name|QString
operator|&
name|text
argument_list|)
block|;
name|bool
name|hasText
argument_list|()
specifier|const
block|;
name|QString
name|html
argument_list|()
specifier|const
block|;
name|void
name|setHtml
argument_list|(
specifier|const
name|QString
operator|&
name|html
argument_list|)
block|;
name|bool
name|hasHtml
argument_list|()
specifier|const
block|;
name|QVariant
name|imageData
argument_list|()
specifier|const
block|;
name|void
name|setImageData
argument_list|(
specifier|const
name|QVariant
operator|&
name|image
argument_list|)
block|;
name|bool
name|hasImage
argument_list|()
specifier|const
block|;
name|QVariant
name|colorData
argument_list|()
specifier|const
block|;
name|void
name|setColorData
argument_list|(
specifier|const
name|QVariant
operator|&
name|color
argument_list|)
block|;
name|bool
name|hasColor
argument_list|()
specifier|const
block|;
name|QByteArray
name|data
argument_list|(
argument|const QString&mimetype
argument_list|)
specifier|const
block|;
name|void
name|setData
argument_list|(
specifier|const
name|QString
operator|&
name|mimetype
argument_list|,
specifier|const
name|QByteArray
operator|&
name|data
argument_list|)
block|;
name|void
name|removeFormat
argument_list|(
specifier|const
name|QString
operator|&
name|mimetype
argument_list|)
block|;
name|virtual
name|bool
name|hasFormat
argument_list|(
argument|const QString&mimetype
argument_list|)
specifier|const
block|;
name|virtual
name|QStringList
name|formats
argument_list|()
specifier|const
block|;
name|void
name|clear
argument_list|()
block|;
name|protected
operator|:
name|virtual
name|QVariant
name|retrieveData
argument_list|(
argument|const QString&mimetype
argument_list|,
argument|QVariant::Type preferredType
argument_list|)
specifier|const
block|;
name|private
operator|:
name|Q_DISABLE_COPY
argument_list|(
argument|QMimeData
argument_list|)
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QMimeData
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QMIMEDATA_H
end_comment
end_unit
