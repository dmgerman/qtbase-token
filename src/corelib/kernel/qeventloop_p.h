begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/ ** ** This file is part of the QtCore module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QEVENTLOOP_P_H
end_ifndef
begin_define
DECL|macro|QEVENTLOOP_P_H
define|#
directive|define
name|QEVENTLOOP_P_H
end_define
begin_include
include|#
directive|include
file|"qobject_p.h"
end_include
begin_decl_stmt
name|QT_BEGIN_HEADER
name|QT_BEGIN_NAMESPACE
DECL|function|QT_MODULE
name|QT_MODULE
argument_list|(
name|Core
argument_list|)
name|class
name|QEventLoopPrivate
range|:
name|public
name|QObjectPrivate
block|{
name|Q_DECLARE_PUBLIC
argument_list|(
argument|QEventLoop
argument_list|)
name|public
operator|:
specifier|inline
name|QEventLoopPrivate
argument_list|()
operator|:
name|exit
argument_list|(
name|true
argument_list|)
block|,
name|inExec
argument_list|(
name|false
argument_list|)
block|,
name|returnCode
argument_list|(
argument|-
literal|1
argument_list|)
block|{ }
name|QAtomicInt
name|quitLockRef
block|;
name|bool
name|exit
block|,
name|inExec
block|;
name|int
name|returnCode
block|;
name|void
name|ref
argument_list|()
block|{
name|quitLockRef
operator|.
name|ref
argument_list|()
block|;     }
name|void
name|deref
argument_list|()
block|{
if|if
condition|(
operator|!
name|quitLockRef
operator|.
name|deref
argument_list|()
operator|&&
name|inExec
condition|)
block|{
name|qApp
operator|->
name|postEvent
argument_list|(
argument|q_ptr
argument_list|,
argument|new QEvent(QEvent::Quit)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
name|QT_END_NAMESPACE
name|QT_END_HEADER
end_expr_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QEVENTLOOP_P_H
end_comment
end_unit
