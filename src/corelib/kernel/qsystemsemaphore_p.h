begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the QtCore module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QSYSTEMSEMAPHORE_P_H
end_ifndef
begin_define
DECL|macro|QSYSTEMSEMAPHORE_P_H
define|#
directive|define
name|QSYSTEMSEMAPHORE_P_H
end_define
begin_comment
comment|//
end_comment
begin_comment
comment|//  W A R N I N G
end_comment
begin_comment
comment|//  -------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// This file is not part of the Qt API.  It exists purely as an
end_comment
begin_comment
comment|// implementation detail.  This header file may change from version to
end_comment
begin_comment
comment|// version without notice, or even be removed.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// We mean it.
end_comment
begin_comment
comment|//
end_comment
begin_include
include|#
directive|include
file|"qsystemsemaphore.h"
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_SYSTEMSEMAPHORE
end_ifndef
begin_include
include|#
directive|include
file|"qsharedmemory_p.h"
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|Q_OS_WINCE
end_ifndef
begin_include
include|#
directive|include
file|<sys/types.h>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_ifdef
ifdef|#
directive|ifdef
name|QT_POSIX_IPC
end_ifdef
begin_include
include|#
directive|include
file|<semaphore.h>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
name|class
name|QSystemSemaphorePrivate
block|{
name|public
label|:
name|QSystemSemaphorePrivate
argument_list|()
expr_stmt|;
name|QString
name|makeKeyFileName
parameter_list|()
block|{
return|return
name|QSharedMemoryPrivate
operator|::
name|makePlatformSafeKey
argument_list|(
name|key
argument_list|,
name|QLatin1String
argument_list|(
literal|"qipc_systemsem_"
argument_list|)
argument_list|)
return|;
block|}
specifier|inline
name|void
name|setError
argument_list|(
name|QSystemSemaphore
operator|::
name|SystemSemaphoreError
name|e
argument_list|,
specifier|const
name|QString
operator|&
name|message
argument_list|)
block|{
name|error
operator|=
name|e
expr_stmt|;
name|errorString
operator|=
name|message
expr_stmt|;
block|}
specifier|inline
name|void
name|clearError
parameter_list|()
block|{
name|setError
argument_list|(
name|QSystemSemaphore
operator|::
name|NoError
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
block|}
ifdef|#
directive|ifdef
name|Q_OS_WIN
name|Qt
operator|::
name|HANDLE
name|handle
argument_list|(
argument|QSystemSemaphore::AccessMode mode = QSystemSemaphore::Open
argument_list|)
expr_stmt|;
name|void
name|setErrorString
parameter_list|(
specifier|const
name|QString
modifier|&
name|function
parameter_list|)
function_decl|;
elif|#
directive|elif
name|defined
argument_list|(
name|QT_POSIX_IPC
argument_list|)
name|bool
name|handle
argument_list|(
name|QSystemSemaphore
operator|::
name|AccessMode
name|mode
operator|=
name|QSystemSemaphore
operator|::
name|Open
argument_list|)
decl_stmt|;
name|void
name|setErrorString
parameter_list|(
specifier|const
name|QString
modifier|&
name|function
parameter_list|)
function_decl|;
else|#
directive|else
name|key_t
name|handle
argument_list|(
name|QSystemSemaphore
operator|::
name|AccessMode
name|mode
operator|=
name|QSystemSemaphore
operator|::
name|Open
argument_list|)
decl_stmt|;
name|void
name|setErrorString
parameter_list|(
specifier|const
name|QString
modifier|&
name|function
parameter_list|)
function_decl|;
endif|#
directive|endif
name|void
name|cleanHandle
parameter_list|()
function_decl|;
name|bool
name|modifySemaphore
parameter_list|(
name|int
name|count
parameter_list|)
function_decl|;
name|QString
name|key
decl_stmt|;
name|QString
name|fileName
decl_stmt|;
name|int
name|initialValue
decl_stmt|;
ifdef|#
directive|ifdef
name|Q_OS_WIN
name|Qt
operator|::
name|HANDLE
name|semaphore
expr_stmt|;
name|Qt
operator|::
name|HANDLE
name|semaphoreLock
expr_stmt|;
elif|#
directive|elif
name|defined
argument_list|(
name|QT_POSIX_IPC
argument_list|)
name|sem_t
modifier|*
name|semaphore
decl_stmt|;
name|bool
name|createdSemaphore
decl_stmt|;
else|#
directive|else
name|key_t
name|unix_key
decl_stmt|;
name|int
name|semaphore
decl_stmt|;
name|bool
name|createdFile
decl_stmt|;
name|bool
name|createdSemaphore
decl_stmt|;
endif|#
directive|endif
name|QString
name|errorString
decl_stmt|;
name|QSystemSemaphore
operator|::
name|SystemSemaphoreError
name|error
expr_stmt|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_SYSTEMSEMAPHORE
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QSYSTEMSEMAPHORE_P_H
end_comment
end_unit
