begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the QtCore module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 3 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL3 included in the ** packaging of this file. Please review the following information to ** ensure the GNU Lesser General Public License version 3 requirements ** will be met: https://www.gnu.org/licenses/lgpl-3.0.html. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 2.0 or (at your option) the GNU General ** Public license version 3 or any later version approved by the KDE Free ** Qt Foundation. The licenses are as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL2 and LICENSE.GPL3 ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-2.0.html and ** https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QMETAOBJECTBUILDER_P_H
end_ifndef
begin_define
DECL|macro|QMETAOBJECTBUILDER_P_H
define|#
directive|define
name|QMETAOBJECTBUILDER_P_H
end_define
begin_comment
comment|//
end_comment
begin_comment
comment|//  W A R N I N G
end_comment
begin_comment
comment|//  -------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// This file is not part of the Qt API.  It exists for the convenience
end_comment
begin_comment
comment|// of moc.  This header file may change from version to version without notice,
end_comment
begin_comment
comment|// or even be removed.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// We mean it.
end_comment
begin_comment
comment|//
end_comment
begin_include
include|#
directive|include
file|<QtCore/qobject.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qmetaobject.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qdatastream.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qhash.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qmap.h>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
DECL|variable|QMetaObjectBuilderPrivate
name|class
name|QMetaObjectBuilderPrivate
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QMetaMethodBuilder
name|class
name|QMetaMethodBuilder
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QMetaMethodBuilderPrivate
name|class
name|QMetaMethodBuilderPrivate
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QMetaPropertyBuilder
name|class
name|QMetaPropertyBuilder
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QMetaPropertyBuilderPrivate
name|class
name|QMetaPropertyBuilderPrivate
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QMetaEnumBuilder
name|class
name|QMetaEnumBuilder
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QMetaEnumBuilderPrivate
name|class
name|QMetaEnumBuilderPrivate
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|Q_CORE_EXPORT
name|QMetaObjectBuilder
block|{
name|public
label|:
enum|enum
name|AddMember
block|{
name|ClassName
init|=
literal|0x00000001
block|,
name|SuperClass
init|=
literal|0x00000002
block|,
name|Methods
init|=
literal|0x00000004
block|,
name|Signals
init|=
literal|0x00000008
block|,
name|Slots
init|=
literal|0x00000010
block|,
name|Constructors
init|=
literal|0x00000020
block|,
name|Properties
init|=
literal|0x00000040
block|,
name|Enumerators
init|=
literal|0x00000080
block|,
name|ClassInfos
init|=
literal|0x00000100
block|,
name|RelatedMetaObjects
init|=
literal|0x00000200
block|,
name|StaticMetacall
init|=
literal|0x00000400
block|,
name|PublicMethods
init|=
literal|0x00000800
block|,
name|ProtectedMethods
init|=
literal|0x00001000
block|,
name|PrivateMethods
init|=
literal|0x00002000
block|,
name|AllMembers
init|=
literal|0x7FFFFFFF
block|,
name|AllPrimaryMembers
init|=
literal|0x7FFFFBFC
block|}
enum|;
name|Q_DECLARE_FLAGS
argument_list|(
name|AddMembers
argument_list|,
name|AddMember
argument_list|)
expr|enum
name|MetaObjectFlag
block|{
name|DynamicMetaObject
operator|=
literal|0x01
block|}
expr_stmt|;
name|Q_DECLARE_FLAGS
argument_list|(
argument|MetaObjectFlags
argument_list|,
argument|MetaObjectFlag
argument_list|)
name|QMetaObjectBuilder
argument_list|()
expr_stmt|;
name|explicit
name|QMetaObjectBuilder
argument_list|(
specifier|const
name|QMetaObject
operator|*
name|prototype
argument_list|,
name|QMetaObjectBuilder
operator|::
name|AddMembers
name|members
operator|=
name|AllMembers
argument_list|)
decl_stmt|;
name|virtual
operator|~
name|QMetaObjectBuilder
argument_list|()
expr_stmt|;
name|QByteArray
name|className
argument_list|()
specifier|const
expr_stmt|;
name|void
name|setClassName
parameter_list|(
specifier|const
name|QByteArray
modifier|&
name|name
parameter_list|)
function_decl|;
specifier|const
name|QMetaObject
operator|*
name|superClass
argument_list|()
specifier|const
expr_stmt|;
name|void
name|setSuperClass
parameter_list|(
specifier|const
name|QMetaObject
modifier|*
name|meta
parameter_list|)
function_decl|;
name|MetaObjectFlags
name|flags
argument_list|()
specifier|const
expr_stmt|;
name|void
name|setFlags
parameter_list|(
name|MetaObjectFlags
parameter_list|)
function_decl|;
name|int
name|methodCount
argument_list|()
specifier|const
expr_stmt|;
name|int
name|constructorCount
argument_list|()
specifier|const
expr_stmt|;
name|int
name|propertyCount
argument_list|()
specifier|const
expr_stmt|;
name|int
name|enumeratorCount
argument_list|()
specifier|const
expr_stmt|;
name|int
name|classInfoCount
argument_list|()
specifier|const
expr_stmt|;
name|int
name|relatedMetaObjectCount
argument_list|()
specifier|const
expr_stmt|;
name|QMetaMethodBuilder
name|addMethod
parameter_list|(
specifier|const
name|QByteArray
modifier|&
name|signature
parameter_list|)
function_decl|;
name|QMetaMethodBuilder
name|addMethod
parameter_list|(
specifier|const
name|QByteArray
modifier|&
name|signature
parameter_list|,
specifier|const
name|QByteArray
modifier|&
name|returnType
parameter_list|)
function_decl|;
name|QMetaMethodBuilder
name|addMethod
parameter_list|(
specifier|const
name|QMetaMethod
modifier|&
name|prototype
parameter_list|)
function_decl|;
name|QMetaMethodBuilder
name|addSlot
parameter_list|(
specifier|const
name|QByteArray
modifier|&
name|signature
parameter_list|)
function_decl|;
name|QMetaMethodBuilder
name|addSignal
parameter_list|(
specifier|const
name|QByteArray
modifier|&
name|signature
parameter_list|)
function_decl|;
name|QMetaMethodBuilder
name|addConstructor
parameter_list|(
specifier|const
name|QByteArray
modifier|&
name|signature
parameter_list|)
function_decl|;
name|QMetaMethodBuilder
name|addConstructor
parameter_list|(
specifier|const
name|QMetaMethod
modifier|&
name|prototype
parameter_list|)
function_decl|;
name|QMetaPropertyBuilder
name|addProperty
parameter_list|(
specifier|const
name|QByteArray
modifier|&
name|name
parameter_list|,
specifier|const
name|QByteArray
modifier|&
name|type
parameter_list|,
name|int
name|notifierId
init|=
operator|-
literal|1
parameter_list|)
function_decl|;
name|QMetaPropertyBuilder
name|addProperty
parameter_list|(
specifier|const
name|QMetaProperty
modifier|&
name|prototype
parameter_list|)
function_decl|;
name|QMetaEnumBuilder
name|addEnumerator
parameter_list|(
specifier|const
name|QByteArray
modifier|&
name|name
parameter_list|)
function_decl|;
name|QMetaEnumBuilder
name|addEnumerator
parameter_list|(
specifier|const
name|QMetaEnum
modifier|&
name|prototype
parameter_list|)
function_decl|;
name|int
name|addClassInfo
parameter_list|(
specifier|const
name|QByteArray
modifier|&
name|name
parameter_list|,
specifier|const
name|QByteArray
modifier|&
name|value
parameter_list|)
function_decl|;
name|int
name|addRelatedMetaObject
parameter_list|(
specifier|const
name|QMetaObject
modifier|*
name|meta
parameter_list|)
function_decl|;
name|void
name|addMetaObject
argument_list|(
specifier|const
name|QMetaObject
operator|*
name|prototype
argument_list|,
name|QMetaObjectBuilder
operator|::
name|AddMembers
name|members
operator|=
name|AllMembers
argument_list|)
decl_stmt|;
name|QMetaMethodBuilder
name|method
argument_list|(
name|int
name|index
argument_list|)
decl|const
decl_stmt|;
name|QMetaMethodBuilder
name|constructor
argument_list|(
name|int
name|index
argument_list|)
decl|const
decl_stmt|;
name|QMetaPropertyBuilder
name|property
argument_list|(
name|int
name|index
argument_list|)
decl|const
decl_stmt|;
name|QMetaEnumBuilder
name|enumerator
argument_list|(
name|int
name|index
argument_list|)
decl|const
decl_stmt|;
specifier|const
name|QMetaObject
modifier|*
name|relatedMetaObject
argument_list|(
name|int
name|index
argument_list|)
decl|const
decl_stmt|;
name|QByteArray
name|classInfoName
argument_list|(
name|int
name|index
argument_list|)
decl|const
decl_stmt|;
name|QByteArray
name|classInfoValue
argument_list|(
name|int
name|index
argument_list|)
decl|const
decl_stmt|;
name|void
name|removeMethod
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
name|void
name|removeConstructor
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
name|void
name|removeProperty
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
name|void
name|removeEnumerator
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
name|void
name|removeClassInfo
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
name|void
name|removeRelatedMetaObject
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
name|int
name|indexOfMethod
parameter_list|(
specifier|const
name|QByteArray
modifier|&
name|signature
parameter_list|)
function_decl|;
name|int
name|indexOfSignal
parameter_list|(
specifier|const
name|QByteArray
modifier|&
name|signature
parameter_list|)
function_decl|;
name|int
name|indexOfSlot
parameter_list|(
specifier|const
name|QByteArray
modifier|&
name|signature
parameter_list|)
function_decl|;
name|int
name|indexOfConstructor
parameter_list|(
specifier|const
name|QByteArray
modifier|&
name|signature
parameter_list|)
function_decl|;
name|int
name|indexOfProperty
parameter_list|(
specifier|const
name|QByteArray
modifier|&
name|name
parameter_list|)
function_decl|;
name|int
name|indexOfEnumerator
parameter_list|(
specifier|const
name|QByteArray
modifier|&
name|name
parameter_list|)
function_decl|;
name|int
name|indexOfClassInfo
parameter_list|(
specifier|const
name|QByteArray
modifier|&
name|name
parameter_list|)
function_decl|;
typedef|typedef
name|void
argument_list|(
operator|*
name|StaticMetacallFunction
argument_list|)
argument_list|(
name|QObject
operator|*
argument_list|,
name|QMetaObject
operator|::
name|Call
argument_list|,
name|int
argument_list|,
name|void
operator|*
operator|*
argument_list|)
expr_stmt|;
name|QMetaObjectBuilder
operator|::
name|StaticMetacallFunction
name|staticMetacallFunction
argument_list|()
specifier|const
expr_stmt|;
name|void
name|setStaticMetacallFunction
argument_list|(
name|QMetaObjectBuilder
operator|::
name|StaticMetacallFunction
name|value
argument_list|)
decl_stmt|;
name|QMetaObject
operator|*
name|toMetaObject
argument_list|()
specifier|const
expr_stmt|;
name|QByteArray
name|toRelocatableData
argument_list|(
name|bool
operator|*
operator|=
literal|0
argument_list|)
decl|const
decl_stmt|;
specifier|static
name|void
name|fromRelocatableData
parameter_list|(
name|QMetaObject
modifier|*
parameter_list|,
specifier|const
name|QMetaObject
modifier|*
parameter_list|,
specifier|const
name|QByteArray
modifier|&
parameter_list|)
function_decl|;
ifndef|#
directive|ifndef
name|QT_NO_DATASTREAM
name|void
name|serialize
argument_list|(
name|QDataStream
operator|&
name|stream
argument_list|)
decl|const
decl_stmt|;
name|void
name|deserialize
argument_list|(
name|QDataStream
operator|&
name|stream
argument_list|,
specifier|const
name|QMap
operator|<
name|QByteArray
argument_list|,
specifier|const
name|QMetaObject
operator|*
operator|>
operator|&
name|references
argument_list|)
decl_stmt|;
endif|#
directive|endif
name|private
label|:
name|Q_DISABLE_COPY
argument_list|(
argument|QMetaObjectBuilder
argument_list|)
name|QMetaObjectBuilderPrivate
modifier|*
name|d
decl_stmt|;
name|friend
name|class
name|QMetaMethodBuilder
decl_stmt|;
name|friend
name|class
name|QMetaPropertyBuilder
decl_stmt|;
name|friend
name|class
name|QMetaEnumBuilder
decl_stmt|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_decl_stmt
name|class
name|Q_CORE_EXPORT
name|QMetaMethodBuilder
block|{
name|public
label|:
name|QMetaMethodBuilder
argument_list|()
operator|:
name|_mobj
argument_list|(
literal|0
argument_list|)
operator|,
name|_index
argument_list|(
literal|0
argument_list|)
block|{}
name|int
name|index
argument_list|()
specifier|const
expr_stmt|;
name|QMetaMethod
operator|::
name|MethodType
name|methodType
argument_list|()
specifier|const
expr_stmt|;
name|QByteArray
name|signature
argument_list|()
specifier|const
expr_stmt|;
name|QByteArray
name|returnType
argument_list|()
specifier|const
expr_stmt|;
name|void
name|setReturnType
parameter_list|(
specifier|const
name|QByteArray
modifier|&
name|value
parameter_list|)
function_decl|;
name|QList
operator|<
name|QByteArray
operator|>
name|parameterTypes
argument_list|()
specifier|const
expr_stmt|;
name|QList
operator|<
name|QByteArray
operator|>
name|parameterNames
argument_list|()
specifier|const
expr_stmt|;
name|void
name|setParameterNames
argument_list|(
specifier|const
name|QList
operator|<
name|QByteArray
operator|>
operator|&
name|value
argument_list|)
decl_stmt|;
name|QByteArray
name|tag
argument_list|()
specifier|const
expr_stmt|;
name|void
name|setTag
parameter_list|(
specifier|const
name|QByteArray
modifier|&
name|value
parameter_list|)
function_decl|;
name|QMetaMethod
operator|::
name|Access
name|access
argument_list|()
specifier|const
expr_stmt|;
name|void
name|setAccess
argument_list|(
name|QMetaMethod
operator|::
name|Access
name|value
argument_list|)
decl_stmt|;
name|int
name|attributes
argument_list|()
specifier|const
expr_stmt|;
name|void
name|setAttributes
parameter_list|(
name|int
name|value
parameter_list|)
function_decl|;
name|int
name|revision
argument_list|()
specifier|const
expr_stmt|;
name|void
name|setRevision
parameter_list|(
name|int
name|revision
parameter_list|)
function_decl|;
name|private
label|:
specifier|const
name|QMetaObjectBuilder
modifier|*
name|_mobj
decl_stmt|;
name|int
name|_index
decl_stmt|;
name|friend
name|class
name|QMetaObjectBuilder
decl_stmt|;
name|friend
name|class
name|QMetaPropertyBuilder
decl_stmt|;
name|QMetaMethodBuilder
argument_list|(
argument|const QMetaObjectBuilder *mobj
argument_list|,
argument|int index
argument_list|)
block|:
name|_mobj
argument_list|(
name|mobj
argument_list|)
operator|,
name|_index
argument_list|(
argument|index
argument_list|)
block|{}
name|QMetaMethodBuilderPrivate
operator|*
name|d_func
argument_list|()
specifier|const
expr_stmt|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_decl_stmt
name|class
name|Q_CORE_EXPORT
name|QMetaPropertyBuilder
block|{
name|public
label|:
name|QMetaPropertyBuilder
argument_list|()
operator|:
name|_mobj
argument_list|(
literal|0
argument_list|)
operator|,
name|_index
argument_list|(
literal|0
argument_list|)
block|{}
name|int
name|index
argument_list|()
specifier|const
block|{
return|return
name|_index
return|;
block|}
name|QByteArray
name|name
argument_list|()
specifier|const
expr_stmt|;
name|QByteArray
name|type
argument_list|()
specifier|const
expr_stmt|;
name|bool
name|hasNotifySignal
argument_list|()
specifier|const
expr_stmt|;
name|QMetaMethodBuilder
name|notifySignal
argument_list|()
specifier|const
expr_stmt|;
name|void
name|setNotifySignal
parameter_list|(
specifier|const
name|QMetaMethodBuilder
modifier|&
name|value
parameter_list|)
function_decl|;
name|void
name|removeNotifySignal
parameter_list|()
function_decl|;
name|bool
name|isReadable
argument_list|()
specifier|const
expr_stmt|;
name|bool
name|isWritable
argument_list|()
specifier|const
expr_stmt|;
name|bool
name|isResettable
argument_list|()
specifier|const
expr_stmt|;
name|bool
name|isDesignable
argument_list|()
specifier|const
expr_stmt|;
name|bool
name|isScriptable
argument_list|()
specifier|const
expr_stmt|;
name|bool
name|isStored
argument_list|()
specifier|const
expr_stmt|;
name|bool
name|isEditable
argument_list|()
specifier|const
expr_stmt|;
name|bool
name|isUser
argument_list|()
specifier|const
expr_stmt|;
name|bool
name|hasStdCppSet
argument_list|()
specifier|const
expr_stmt|;
name|bool
name|isEnumOrFlag
argument_list|()
specifier|const
expr_stmt|;
name|bool
name|isConstant
argument_list|()
specifier|const
expr_stmt|;
name|bool
name|isFinal
argument_list|()
specifier|const
expr_stmt|;
name|void
name|setReadable
parameter_list|(
name|bool
name|value
parameter_list|)
function_decl|;
name|void
name|setWritable
parameter_list|(
name|bool
name|value
parameter_list|)
function_decl|;
name|void
name|setResettable
parameter_list|(
name|bool
name|value
parameter_list|)
function_decl|;
name|void
name|setDesignable
parameter_list|(
name|bool
name|value
parameter_list|)
function_decl|;
name|void
name|setScriptable
parameter_list|(
name|bool
name|value
parameter_list|)
function_decl|;
name|void
name|setStored
parameter_list|(
name|bool
name|value
parameter_list|)
function_decl|;
name|void
name|setEditable
parameter_list|(
name|bool
name|value
parameter_list|)
function_decl|;
name|void
name|setUser
parameter_list|(
name|bool
name|value
parameter_list|)
function_decl|;
name|void
name|setStdCppSet
parameter_list|(
name|bool
name|value
parameter_list|)
function_decl|;
name|void
name|setEnumOrFlag
parameter_list|(
name|bool
name|value
parameter_list|)
function_decl|;
name|void
name|setConstant
parameter_list|(
name|bool
name|value
parameter_list|)
function_decl|;
name|void
name|setFinal
parameter_list|(
name|bool
name|value
parameter_list|)
function_decl|;
name|int
name|revision
argument_list|()
specifier|const
expr_stmt|;
name|void
name|setRevision
parameter_list|(
name|int
name|revision
parameter_list|)
function_decl|;
name|private
label|:
specifier|const
name|QMetaObjectBuilder
modifier|*
name|_mobj
decl_stmt|;
name|int
name|_index
decl_stmt|;
name|friend
name|class
name|QMetaObjectBuilder
decl_stmt|;
name|QMetaPropertyBuilder
argument_list|(
argument|const QMetaObjectBuilder *mobj
argument_list|,
argument|int index
argument_list|)
block|:
name|_mobj
argument_list|(
name|mobj
argument_list|)
operator|,
name|_index
argument_list|(
argument|index
argument_list|)
block|{}
name|QMetaPropertyBuilderPrivate
operator|*
name|d_func
argument_list|()
specifier|const
expr_stmt|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_decl_stmt
name|class
name|Q_CORE_EXPORT
name|QMetaEnumBuilder
block|{
name|public
label|:
name|QMetaEnumBuilder
argument_list|()
operator|:
name|_mobj
argument_list|(
literal|0
argument_list|)
operator|,
name|_index
argument_list|(
literal|0
argument_list|)
block|{}
name|int
name|index
argument_list|()
specifier|const
block|{
return|return
name|_index
return|;
block|}
name|QByteArray
name|name
argument_list|()
specifier|const
expr_stmt|;
name|bool
name|isFlag
argument_list|()
specifier|const
expr_stmt|;
name|void
name|setIsFlag
parameter_list|(
name|bool
name|value
parameter_list|)
function_decl|;
name|int
name|keyCount
argument_list|()
specifier|const
expr_stmt|;
name|QByteArray
name|key
argument_list|(
name|int
name|index
argument_list|)
decl|const
decl_stmt|;
name|int
name|value
argument_list|(
name|int
name|index
argument_list|)
decl|const
decl_stmt|;
name|int
name|addKey
parameter_list|(
specifier|const
name|QByteArray
modifier|&
name|name
parameter_list|,
name|int
name|value
parameter_list|)
function_decl|;
name|void
name|removeKey
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
name|private
label|:
specifier|const
name|QMetaObjectBuilder
modifier|*
name|_mobj
decl_stmt|;
name|int
name|_index
decl_stmt|;
name|friend
name|class
name|QMetaObjectBuilder
decl_stmt|;
name|QMetaEnumBuilder
argument_list|(
argument|const QMetaObjectBuilder *mobj
argument_list|,
argument|int index
argument_list|)
block|:
name|_mobj
argument_list|(
name|mobj
argument_list|)
operator|,
name|_index
argument_list|(
argument|index
argument_list|)
block|{}
name|QMetaEnumBuilderPrivate
operator|*
name|d_func
argument_list|()
specifier|const
expr_stmt|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_decl_stmt
name|class
name|Q_CORE_EXPORT
name|QMetaStringTable
block|{
name|public
label|:
name|explicit
name|QMetaStringTable
parameter_list|(
specifier|const
name|QByteArray
modifier|&
name|className
parameter_list|)
function_decl|;
name|int
name|enter
parameter_list|(
specifier|const
name|QByteArray
modifier|&
name|value
parameter_list|)
function_decl|;
specifier|static
name|int
name|preferredAlignment
parameter_list|()
function_decl|;
name|int
name|blobSize
argument_list|()
specifier|const
expr_stmt|;
name|void
name|writeBlob
argument_list|(
name|char
operator|*
name|out
argument_list|)
decl|const
decl_stmt|;
name|private
label|:
typedef|typedef
name|QHash
operator|<
name|QByteArray
operator|,
name|int
operator|>
name|Entries
expr_stmt|;
comment|// string --> index mapping
name|Entries
name|m_entries
decl_stmt|;
name|int
name|m_index
decl_stmt|;
name|QByteArray
name|m_className
decl_stmt|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_macro
name|Q_DECLARE_OPERATORS_FOR_FLAGS
argument_list|(
argument|QMetaObjectBuilder::AddMembers
argument_list|)
end_macro
begin_macro
name|Q_DECLARE_OPERATORS_FOR_FLAGS
argument_list|(
argument|QMetaObjectBuilder::MetaObjectFlags
argument_list|)
end_macro
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
end_unit
