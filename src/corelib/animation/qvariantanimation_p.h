begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the QtCore module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QANIMATION_P_H
end_ifndef
begin_define
DECL|macro|QANIMATION_P_H
define|#
directive|define
name|QANIMATION_P_H
end_define
begin_comment
comment|//
end_comment
begin_comment
comment|//  W A R N I N G
end_comment
begin_comment
comment|//  -------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// This file is not part of the Qt API.  It exists for the convenience
end_comment
begin_comment
comment|// of QIODevice. This header file may change from version to
end_comment
begin_comment
comment|// version without notice, or even be removed.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// We mean it.
end_comment
begin_comment
comment|//
end_comment
begin_include
include|#
directive|include
file|"qvariantanimation.h"
end_include
begin_include
include|#
directive|include
file|<QtCore/qeasingcurve.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qmetaobject.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qvector.h>
end_include
begin_include
include|#
directive|include
file|"private/qabstractanimation_p.h"
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_ANIMATION
end_ifndef
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
name|class
name|QVariantAnimationPrivate
range|:
name|public
name|QAbstractAnimationPrivate
block|{
name|Q_DECLARE_PUBLIC
argument_list|(
argument|QVariantAnimation
argument_list|)
name|public
operator|:
name|QVariantAnimationPrivate
argument_list|()
block|;
specifier|static
name|QVariantAnimationPrivate
operator|*
name|get
argument_list|(
argument|QVariantAnimation *q
argument_list|)
block|{
return|return
name|q
operator|->
name|d_func
argument_list|()
return|;
block|}
name|void
name|setDefaultStartEndValue
argument_list|(
specifier|const
name|QVariant
operator|&
name|value
argument_list|)
block|;
name|QVariant
name|currentValue
block|;
name|QVariant
name|defaultStartEndValue
block|;
comment|//this is used to keep track of the KeyValue interval in which we currently are
block|struct
block|{
name|QVariantAnimation
operator|::
name|KeyValue
name|start
block|,
name|end
block|;     }
name|currentInterval
block|;
name|QEasingCurve
name|easing
block|;
name|int
name|duration
block|;
name|QVariantAnimation
operator|::
name|KeyValues
name|keyValues
block|;
name|QVariantAnimation
operator|::
name|Interpolator
name|interpolator
block|;
name|void
name|setCurrentValueForProgress
argument_list|(
argument|const qreal progress
argument_list|)
block|;
name|void
name|recalculateCurrentInterval
argument_list|(
argument|bool force=false
argument_list|)
block|;
name|void
name|setValueAt
argument_list|(
name|qreal
argument_list|,
specifier|const
name|QVariant
operator|&
argument_list|)
block|;
name|QVariant
name|valueAt
argument_list|(
argument|qreal step
argument_list|)
specifier|const
block|;
name|void
name|convertValues
argument_list|(
argument|int t
argument_list|)
block|;
name|void
name|updateInterpolator
argument_list|()
block|;
comment|//XXX this is needed by dui
specifier|static
name|Q_CORE_EXPORT
name|QVariantAnimation
operator|::
name|Interpolator
name|getInterpolator
argument_list|(
argument|int interpolationType
argument_list|)
block|; }
decl_stmt|;
end_decl_stmt
begin_comment
comment|//this should make the interpolation faster
end_comment
begin_expr_stmt
DECL|function|_q_interpolate
name|template
operator|<
name|typename
name|T
operator|>
specifier|inline
name|T
name|_q_interpolate
argument_list|(
argument|const T&f
argument_list|,
argument|const T&t
argument_list|,
argument|qreal progress
argument_list|)
block|{
return|return
name|T
argument_list|(
name|f
operator|+
operator|(
name|t
operator|-
name|f
operator|)
operator|*
name|progress
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|_q_interpolateVariant
name|template
operator|<
name|typename
name|T
operator|>
specifier|inline
name|QVariant
name|_q_interpolateVariant
argument_list|(
argument|const T&from
argument_list|,
argument|const T&to
argument_list|,
argument|qreal progress
argument_list|)
block|{
return|return
name|_q_interpolate
argument_list|(
name|from
argument_list|,
name|to
argument_list|,
name|progress
argument_list|)
return|;
block|}
end_expr_stmt
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|//QT_NO_ANIMATION
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|//QANIMATION_P_H
end_comment
end_unit
