begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 BogDan Vatra<bogdan@kde.org> ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the Android port of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 3 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL3 included in the ** packaging of this file. Please review the following information to ** ensure the GNU Lesser General Public License version 3 requirements ** will be met: https://www.gnu.org/licenses/lgpl-3.0.html. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 2.0 or (at your option) the GNU General ** Public license version 3 or any later version approved by the KDE Free ** Qt Foundation. The licenses are as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL2 and LICENSE.GPL3 ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-2.0.html and ** https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_package
DECL|package|org.qtproject.qt5.android
package|package
name|org
operator|.
name|qtproject
operator|.
name|qt5
operator|.
name|android
package|;
end_package
begin_import
import|import
name|android
operator|.
name|app
operator|.
name|Service
import|;
end_import
begin_import
import|import
name|android
operator|.
name|content
operator|.
name|Context
import|;
end_import
begin_import
import|import
name|android
operator|.
name|content
operator|.
name|Intent
import|;
end_import
begin_import
import|import
name|android
operator|.
name|content
operator|.
name|pm
operator|.
name|ActivityInfo
import|;
end_import
begin_import
import|import
name|android
operator|.
name|content
operator|.
name|pm
operator|.
name|PackageManager
import|;
end_import
begin_import
import|import
name|android
operator|.
name|content
operator|.
name|pm
operator|.
name|PackageManager
operator|.
name|NameNotFoundException
import|;
end_import
begin_import
import|import
name|android
operator|.
name|content
operator|.
name|res
operator|.
name|Configuration
import|;
end_import
begin_import
import|import
name|android
operator|.
name|graphics
operator|.
name|drawable
operator|.
name|ColorDrawable
import|;
end_import
begin_import
import|import
name|android
operator|.
name|net
operator|.
name|LocalServerSocket
import|;
end_import
begin_import
import|import
name|android
operator|.
name|net
operator|.
name|LocalSocket
import|;
end_import
begin_import
import|import
name|android
operator|.
name|os
operator|.
name|Build
import|;
end_import
begin_import
import|import
name|android
operator|.
name|os
operator|.
name|Bundle
import|;
end_import
begin_import
import|import
name|android
operator|.
name|os
operator|.
name|Handler
import|;
end_import
begin_import
import|import
name|android
operator|.
name|os
operator|.
name|ResultReceiver
import|;
end_import
begin_import
import|import
name|android
operator|.
name|text
operator|.
name|method
operator|.
name|MetaKeyKeyListener
import|;
end_import
begin_import
import|import
name|android
operator|.
name|util
operator|.
name|Base64
import|;
end_import
begin_import
import|import
name|android
operator|.
name|util
operator|.
name|DisplayMetrics
import|;
end_import
begin_import
import|import
name|android
operator|.
name|util
operator|.
name|Log
import|;
end_import
begin_import
import|import
name|android
operator|.
name|util
operator|.
name|TypedValue
import|;
end_import
begin_import
import|import
name|android
operator|.
name|view
operator|.
name|ContextMenu
import|;
end_import
begin_import
import|import
name|android
operator|.
name|view
operator|.
name|ContextMenu
operator|.
name|ContextMenuInfo
import|;
end_import
begin_import
import|import
name|android
operator|.
name|view
operator|.
name|KeyCharacterMap
import|;
end_import
begin_import
import|import
name|android
operator|.
name|view
operator|.
name|KeyEvent
import|;
end_import
begin_import
import|import
name|android
operator|.
name|view
operator|.
name|Menu
import|;
end_import
begin_import
import|import
name|android
operator|.
name|view
operator|.
name|MenuItem
import|;
end_import
begin_import
import|import
name|android
operator|.
name|view
operator|.
name|Surface
import|;
end_import
begin_import
import|import
name|android
operator|.
name|view
operator|.
name|View
import|;
end_import
begin_import
import|import
name|android
operator|.
name|view
operator|.
name|ViewConfiguration
import|;
end_import
begin_import
import|import
name|android
operator|.
name|view
operator|.
name|ViewGroup
import|;
end_import
begin_import
import|import
name|android
operator|.
name|view
operator|.
name|WindowManager
import|;
end_import
begin_import
import|import
name|android
operator|.
name|view
operator|.
name|inputmethod
operator|.
name|InputMethodManager
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedReader
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataOutputStream
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileWriter
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStreamReader
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Constructor
import|;
end_import
begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Method
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import
begin_class
DECL|class|QtServiceDelegate
specifier|public
class|class
name|QtServiceDelegate
block|{
DECL|field|NATIVE_LIBRARIES_KEY
specifier|private
specifier|static
specifier|final
name|String
name|NATIVE_LIBRARIES_KEY
init|=
literal|"native.libraries"
decl_stmt|;
DECL|field|BUNDLED_LIBRARIES_KEY
specifier|private
specifier|static
specifier|final
name|String
name|BUNDLED_LIBRARIES_KEY
init|=
literal|"bundled.libraries"
decl_stmt|;
DECL|field|MAIN_LIBRARY_KEY
specifier|private
specifier|static
specifier|final
name|String
name|MAIN_LIBRARY_KEY
init|=
literal|"main.library"
decl_stmt|;
DECL|field|ENVIRONMENT_VARIABLES_KEY
specifier|private
specifier|static
specifier|final
name|String
name|ENVIRONMENT_VARIABLES_KEY
init|=
literal|"environment.variables"
decl_stmt|;
DECL|field|APPLICATION_PARAMETERS_KEY
specifier|private
specifier|static
specifier|final
name|String
name|APPLICATION_PARAMETERS_KEY
init|=
literal|"application.parameters"
decl_stmt|;
DECL|field|STATIC_INIT_CLASSES_KEY
specifier|private
specifier|static
specifier|final
name|String
name|STATIC_INIT_CLASSES_KEY
init|=
literal|"static.init.classes"
decl_stmt|;
DECL|field|APP_DISPLAY_METRIC_SCREEN_DESKTOP_KEY
specifier|private
specifier|static
specifier|final
name|String
name|APP_DISPLAY_METRIC_SCREEN_DESKTOP_KEY
init|=
literal|"display.screen.desktop"
decl_stmt|;
DECL|field|APP_DISPLAY_METRIC_SCREEN_XDPI_KEY
specifier|private
specifier|static
specifier|final
name|String
name|APP_DISPLAY_METRIC_SCREEN_XDPI_KEY
init|=
literal|"display.screen.dpi.x"
decl_stmt|;
DECL|field|APP_DISPLAY_METRIC_SCREEN_YDPI_KEY
specifier|private
specifier|static
specifier|final
name|String
name|APP_DISPLAY_METRIC_SCREEN_YDPI_KEY
init|=
literal|"display.screen.dpi.y"
decl_stmt|;
DECL|field|APP_DISPLAY_METRIC_SCREEN_DENSITY_KEY
specifier|private
specifier|static
specifier|final
name|String
name|APP_DISPLAY_METRIC_SCREEN_DENSITY_KEY
init|=
literal|"display.screen.density"
decl_stmt|;
DECL|field|m_service
specifier|private
name|Service
name|m_service
init|=
literal|null
decl_stmt|;
DECL|field|m_mainLib
specifier|private
name|String
name|m_mainLib
decl_stmt|;
DECL|field|m_environmentVariables
specifier|private
specifier|static
name|String
name|m_environmentVariables
init|=
literal|null
decl_stmt|;
DECL|field|m_applicationParameters
specifier|private
specifier|static
name|String
name|m_applicationParameters
init|=
literal|null
decl_stmt|;
DECL|method|loadApplication
specifier|public
name|boolean
name|loadApplication
parameter_list|(
name|Service
name|service
parameter_list|,
name|ClassLoader
name|classLoader
parameter_list|,
name|Bundle
name|loaderParams
parameter_list|)
block|{
comment|/// check parameters integrity
if|if
condition|(
operator|!
name|loaderParams
operator|.
name|containsKey
argument_list|(
name|NATIVE_LIBRARIES_KEY
argument_list|)
operator|||
operator|!
name|loaderParams
operator|.
name|containsKey
argument_list|(
name|BUNDLED_LIBRARIES_KEY
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
name|m_service
operator|=
name|service
expr_stmt|;
name|QtNative
operator|.
name|setService
argument_list|(
name|m_service
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|QtNative
operator|.
name|setClassLoader
argument_list|(
name|classLoader
argument_list|)
expr_stmt|;
name|QtNative
operator|.
name|setApplicationDisplayMetrics
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|120
argument_list|,
literal|120
argument_list|,
literal|1.0
argument_list|,
literal|1.0
argument_list|)
expr_stmt|;
if|if
condition|(
name|loaderParams
operator|.
name|containsKey
argument_list|(
name|STATIC_INIT_CLASSES_KEY
argument_list|)
condition|)
block|{
for|for
control|(
name|String
name|className
range|:
name|loaderParams
operator|.
name|getStringArray
argument_list|(
name|STATIC_INIT_CLASSES_KEY
argument_list|)
control|)
block|{
if|if
condition|(
name|className
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
continue|continue;
try|try
block|{
name|Class
argument_list|<
name|?
argument_list|>
name|initClass
init|=
name|classLoader
operator|.
name|loadClass
argument_list|(
name|className
argument_list|)
decl_stmt|;
name|Object
name|staticInitDataObject
init|=
name|initClass
operator|.
name|newInstance
argument_list|()
decl_stmt|;
comment|// create an instance
name|Method
name|m
init|=
name|initClass
operator|.
name|getMethod
argument_list|(
literal|"setService"
argument_list|,
name|Service
operator|.
name|class
argument_list|,
name|Object
operator|.
name|class
argument_list|)
decl_stmt|;
name|m
operator|.
name|invoke
argument_list|(
name|staticInitDataObject
argument_list|,
name|m_service
argument_list|,
name|this
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
block|}
name|QtNative
operator|.
name|loadQtLibraries
argument_list|(
name|loaderParams
operator|.
name|getStringArrayList
argument_list|(
name|NATIVE_LIBRARIES_KEY
argument_list|)
argument_list|)
expr_stmt|;
name|ArrayList
argument_list|<
name|String
argument_list|>
name|libraries
init|=
name|loaderParams
operator|.
name|getStringArrayList
argument_list|(
name|BUNDLED_LIBRARIES_KEY
argument_list|)
decl_stmt|;
name|QtNative
operator|.
name|loadBundledLibraries
argument_list|(
name|libraries
argument_list|,
name|QtNativeLibrariesDir
operator|.
name|nativeLibrariesDir
argument_list|(
name|m_service
argument_list|)
argument_list|)
expr_stmt|;
name|m_mainLib
operator|=
name|loaderParams
operator|.
name|getString
argument_list|(
name|MAIN_LIBRARY_KEY
argument_list|)
expr_stmt|;
name|m_environmentVariables
operator|=
name|loaderParams
operator|.
name|getString
argument_list|(
name|ENVIRONMENT_VARIABLES_KEY
argument_list|)
expr_stmt|;
name|String
name|additionalEnvironmentVariables
init|=
literal|"QT_ANDROID_FONTS_MONOSPACE=Droid Sans Mono;Droid Sans;Droid Sans Fallback"
operator|+
literal|"\tQT_ANDROID_FONTS_SERIF=Droid Serif"
operator|+
literal|"\tHOME="
operator|+
name|m_service
operator|.
name|getFilesDir
argument_list|()
operator|.
name|getAbsolutePath
argument_list|()
operator|+
literal|"\tTMPDIR="
operator|+
name|m_service
operator|.
name|getFilesDir
argument_list|()
operator|.
name|getAbsolutePath
argument_list|()
decl_stmt|;
if|if
condition|(
name|Build
operator|.
name|VERSION
operator|.
name|SDK_INT
operator|<
literal|14
condition|)
name|additionalEnvironmentVariables
operator|+=
literal|"\tQT_ANDROID_FONTS=Droid Sans;Droid Sans Fallback"
expr_stmt|;
else|else
name|additionalEnvironmentVariables
operator|+=
literal|"\tQT_ANDROID_FONTS=Roboto;Droid Sans;Droid Sans Fallback"
expr_stmt|;
if|if
condition|(
name|m_environmentVariables
operator|!=
literal|null
operator|&&
name|m_environmentVariables
operator|.
name|length
argument_list|()
operator|>
literal|0
condition|)
name|m_environmentVariables
operator|=
name|additionalEnvironmentVariables
operator|+
literal|"\t"
operator|+
name|m_environmentVariables
expr_stmt|;
else|else
name|m_environmentVariables
operator|=
name|additionalEnvironmentVariables
expr_stmt|;
if|if
condition|(
name|loaderParams
operator|.
name|containsKey
argument_list|(
name|APPLICATION_PARAMETERS_KEY
argument_list|)
condition|)
name|m_applicationParameters
operator|=
name|loaderParams
operator|.
name|getString
argument_list|(
name|APPLICATION_PARAMETERS_KEY
argument_list|)
expr_stmt|;
else|else
name|m_applicationParameters
operator|=
literal|""
expr_stmt|;
return|return
literal|true
return|;
block|}
DECL|method|startApplication
specifier|public
name|boolean
name|startApplication
parameter_list|()
block|{
comment|// start application
try|try
block|{
name|String
name|nativeLibraryDir
init|=
name|QtNativeLibrariesDir
operator|.
name|nativeLibrariesDir
argument_list|(
name|m_service
argument_list|)
decl_stmt|;
name|QtNative
operator|.
name|startApplication
argument_list|(
name|m_applicationParameters
argument_list|,
name|m_environmentVariables
argument_list|,
name|m_mainLib
argument_list|,
name|nativeLibraryDir
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
DECL|method|onDestroy
specifier|public
name|void
name|onDestroy
parameter_list|()
block|{
name|QtNative
operator|.
name|setService
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
end_class
end_unit
