begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2014 BogDan Vatra<bogdan@kde.org> ** Contact: http://www.qt-project.org/legal ** ** This file is part of the Android port of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_package
DECL|package|org.qtproject.qt5.android
package|package
name|org
operator|.
name|qtproject
operator|.
name|qt5
operator|.
name|android
package|;
end_package
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileNotFoundException
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileOutputStream
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import
begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStreamWriter
import|;
end_import
begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Field
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import
begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import
begin_import
import|import
name|org
operator|.
name|json
operator|.
name|JSONArray
import|;
end_import
begin_import
import|import
name|org
operator|.
name|json
operator|.
name|JSONException
import|;
end_import
begin_import
import|import
name|org
operator|.
name|json
operator|.
name|JSONObject
import|;
end_import
begin_import
import|import
name|org
operator|.
name|xmlpull
operator|.
name|v1
operator|.
name|XmlPullParser
import|;
end_import
begin_import
import|import
name|android
operator|.
name|content
operator|.
name|Context
import|;
end_import
begin_import
import|import
name|android
operator|.
name|content
operator|.
name|res
operator|.
name|ColorStateList
import|;
end_import
begin_import
import|import
name|android
operator|.
name|content
operator|.
name|res
operator|.
name|Resources
import|;
end_import
begin_import
import|import
name|android
operator|.
name|content
operator|.
name|res
operator|.
name|TypedArray
import|;
end_import
begin_import
import|import
name|android
operator|.
name|content
operator|.
name|res
operator|.
name|XmlResourceParser
import|;
end_import
begin_import
import|import
name|android
operator|.
name|graphics
operator|.
name|Bitmap
import|;
end_import
begin_import
import|import
name|android
operator|.
name|graphics
operator|.
name|Bitmap
operator|.
name|Config
import|;
end_import
begin_import
import|import
name|android
operator|.
name|graphics
operator|.
name|Canvas
import|;
end_import
begin_import
import|import
name|android
operator|.
name|graphics
operator|.
name|NinePatch
import|;
end_import
begin_import
import|import
name|android
operator|.
name|graphics
operator|.
name|Paint
import|;
end_import
begin_import
import|import
name|android
operator|.
name|graphics
operator|.
name|Rect
import|;
end_import
begin_import
import|import
name|android
operator|.
name|graphics
operator|.
name|RectF
import|;
end_import
begin_import
import|import
name|android
operator|.
name|graphics
operator|.
name|drawable
operator|.
name|AnimationDrawable
import|;
end_import
begin_import
import|import
name|android
operator|.
name|graphics
operator|.
name|drawable
operator|.
name|BitmapDrawable
import|;
end_import
begin_import
import|import
name|android
operator|.
name|graphics
operator|.
name|drawable
operator|.
name|ClipDrawable
import|;
end_import
begin_import
import|import
name|android
operator|.
name|graphics
operator|.
name|drawable
operator|.
name|ColorDrawable
import|;
end_import
begin_import
import|import
name|android
operator|.
name|graphics
operator|.
name|drawable
operator|.
name|Drawable
import|;
end_import
begin_import
import|import
name|android
operator|.
name|graphics
operator|.
name|drawable
operator|.
name|GradientDrawable
import|;
end_import
begin_import
import|import
name|android
operator|.
name|graphics
operator|.
name|drawable
operator|.
name|GradientDrawable
operator|.
name|Orientation
import|;
end_import
begin_import
import|import
name|android
operator|.
name|graphics
operator|.
name|drawable
operator|.
name|InsetDrawable
import|;
end_import
begin_import
import|import
name|android
operator|.
name|graphics
operator|.
name|drawable
operator|.
name|LayerDrawable
import|;
end_import
begin_import
import|import
name|android
operator|.
name|graphics
operator|.
name|drawable
operator|.
name|NinePatchDrawable
import|;
end_import
begin_import
import|import
name|android
operator|.
name|graphics
operator|.
name|drawable
operator|.
name|RotateDrawable
import|;
end_import
begin_import
import|import
name|android
operator|.
name|graphics
operator|.
name|drawable
operator|.
name|ScaleDrawable
import|;
end_import
begin_import
import|import
name|android
operator|.
name|graphics
operator|.
name|drawable
operator|.
name|StateListDrawable
import|;
end_import
begin_import
import|import
name|android
operator|.
name|os
operator|.
name|Build
import|;
end_import
begin_import
import|import
name|android
operator|.
name|util
operator|.
name|AttributeSet
import|;
end_import
begin_import
import|import
name|android
operator|.
name|util
operator|.
name|Log
import|;
end_import
begin_import
import|import
name|android
operator|.
name|util
operator|.
name|Xml
import|;
end_import
begin_import
import|import
name|android
operator|.
name|view
operator|.
name|inputmethod
operator|.
name|EditorInfo
import|;
end_import
begin_class
DECL|class|ExtractStyle
specifier|public
class|class
name|ExtractStyle
block|{
DECL|method|extractChunkInfo
specifier|native
specifier|static
name|int
index|[]
name|extractChunkInfo
parameter_list|(
name|byte
index|[]
name|chunkData
parameter_list|)
function_decl|;
DECL|method|extractNativeChunkInfo
specifier|native
specifier|static
name|int
index|[]
name|extractNativeChunkInfo
parameter_list|(
name|int
name|nativeChunk
parameter_list|)
function_decl|;
DECL|method|extractChunkInfo20
specifier|native
specifier|static
name|int
index|[]
name|extractChunkInfo20
parameter_list|(
name|byte
index|[]
name|chunkData
parameter_list|)
function_decl|;
DECL|method|extractNativeChunkInfo20
specifier|native
specifier|static
name|int
index|[]
name|extractNativeChunkInfo20
parameter_list|(
name|long
name|nativeChunk
parameter_list|)
function_decl|;
DECL|field|styleableClass
name|Class
argument_list|<
name|?
argument_list|>
name|styleableClass
init|=
name|getStylableClass
argument_list|()
decl_stmt|;
DECL|field|EMPTY_STATE_SET
specifier|final
name|int
index|[]
name|EMPTY_STATE_SET
init|=
block|{}
decl_stmt|;
DECL|field|ENABLED_STATE_SET
specifier|final
name|int
index|[]
name|ENABLED_STATE_SET
init|=
block|{
name|android
operator|.
name|R
operator|.
name|attr
operator|.
name|state_enabled
block|}
decl_stmt|;
DECL|field|FOCUSED_STATE_SET
specifier|final
name|int
index|[]
name|FOCUSED_STATE_SET
init|=
block|{
name|android
operator|.
name|R
operator|.
name|attr
operator|.
name|state_focused
block|}
decl_stmt|;
DECL|field|SELECTED_STATE_SET
specifier|final
name|int
index|[]
name|SELECTED_STATE_SET
init|=
block|{
name|android
operator|.
name|R
operator|.
name|attr
operator|.
name|state_selected
block|}
decl_stmt|;
DECL|field|PRESSED_STATE_SET
specifier|final
name|int
index|[]
name|PRESSED_STATE_SET
init|=
block|{
name|android
operator|.
name|R
operator|.
name|attr
operator|.
name|state_pressed
block|}
decl_stmt|;
DECL|field|WINDOW_FOCUSED_STATE_SET
specifier|final
name|int
index|[]
name|WINDOW_FOCUSED_STATE_SET
init|=
block|{
name|android
operator|.
name|R
operator|.
name|attr
operator|.
name|state_window_focused
block|}
decl_stmt|;
DECL|field|ENABLED_FOCUSED_STATE_SET
specifier|final
name|int
index|[]
name|ENABLED_FOCUSED_STATE_SET
init|=
name|stateSetUnion
argument_list|(
name|ENABLED_STATE_SET
argument_list|,
name|FOCUSED_STATE_SET
argument_list|)
decl_stmt|;
DECL|field|ENABLED_SELECTED_STATE_SET
specifier|final
name|int
index|[]
name|ENABLED_SELECTED_STATE_SET
init|=
name|stateSetUnion
argument_list|(
name|ENABLED_STATE_SET
argument_list|,
name|SELECTED_STATE_SET
argument_list|)
decl_stmt|;
DECL|field|ENABLED_WINDOW_FOCUSED_STATE_SET
specifier|final
name|int
index|[]
name|ENABLED_WINDOW_FOCUSED_STATE_SET
init|=
name|stateSetUnion
argument_list|(
name|ENABLED_STATE_SET
argument_list|,
name|WINDOW_FOCUSED_STATE_SET
argument_list|)
decl_stmt|;
DECL|field|FOCUSED_SELECTED_STATE_SET
specifier|final
name|int
index|[]
name|FOCUSED_SELECTED_STATE_SET
init|=
name|stateSetUnion
argument_list|(
name|FOCUSED_STATE_SET
argument_list|,
name|SELECTED_STATE_SET
argument_list|)
decl_stmt|;
DECL|field|FOCUSED_WINDOW_FOCUSED_STATE_SET
specifier|final
name|int
index|[]
name|FOCUSED_WINDOW_FOCUSED_STATE_SET
init|=
name|stateSetUnion
argument_list|(
name|FOCUSED_STATE_SET
argument_list|,
name|WINDOW_FOCUSED_STATE_SET
argument_list|)
decl_stmt|;
DECL|field|SELECTED_WINDOW_FOCUSED_STATE_SET
specifier|final
name|int
index|[]
name|SELECTED_WINDOW_FOCUSED_STATE_SET
init|=
name|stateSetUnion
argument_list|(
name|SELECTED_STATE_SET
argument_list|,
name|WINDOW_FOCUSED_STATE_SET
argument_list|)
decl_stmt|;
DECL|field|ENABLED_FOCUSED_SELECTED_STATE_SET
specifier|final
name|int
index|[]
name|ENABLED_FOCUSED_SELECTED_STATE_SET
init|=
name|stateSetUnion
argument_list|(
name|ENABLED_FOCUSED_STATE_SET
argument_list|,
name|SELECTED_STATE_SET
argument_list|)
decl_stmt|;
DECL|field|ENABLED_FOCUSED_WINDOW_FOCUSED_STATE_SET
specifier|final
name|int
index|[]
name|ENABLED_FOCUSED_WINDOW_FOCUSED_STATE_SET
init|=
name|stateSetUnion
argument_list|(
name|ENABLED_FOCUSED_STATE_SET
argument_list|,
name|WINDOW_FOCUSED_STATE_SET
argument_list|)
decl_stmt|;
DECL|field|ENABLED_SELECTED_WINDOW_FOCUSED_STATE_SET
specifier|final
name|int
index|[]
name|ENABLED_SELECTED_WINDOW_FOCUSED_STATE_SET
init|=
name|stateSetUnion
argument_list|(
name|ENABLED_SELECTED_STATE_SET
argument_list|,
name|WINDOW_FOCUSED_STATE_SET
argument_list|)
decl_stmt|;
DECL|field|FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET
specifier|final
name|int
index|[]
name|FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET
init|=
name|stateSetUnion
argument_list|(
name|FOCUSED_SELECTED_STATE_SET
argument_list|,
name|WINDOW_FOCUSED_STATE_SET
argument_list|)
decl_stmt|;
DECL|field|ENABLED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET
specifier|final
name|int
index|[]
name|ENABLED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET
init|=
name|stateSetUnion
argument_list|(
name|ENABLED_FOCUSED_SELECTED_STATE_SET
argument_list|,
name|WINDOW_FOCUSED_STATE_SET
argument_list|)
decl_stmt|;
DECL|field|PRESSED_WINDOW_FOCUSED_STATE_SET
specifier|final
name|int
index|[]
name|PRESSED_WINDOW_FOCUSED_STATE_SET
init|=
name|stateSetUnion
argument_list|(
name|PRESSED_STATE_SET
argument_list|,
name|WINDOW_FOCUSED_STATE_SET
argument_list|)
decl_stmt|;
DECL|field|PRESSED_SELECTED_STATE_SET
specifier|final
name|int
index|[]
name|PRESSED_SELECTED_STATE_SET
init|=
name|stateSetUnion
argument_list|(
name|PRESSED_STATE_SET
argument_list|,
name|SELECTED_STATE_SET
argument_list|)
decl_stmt|;
DECL|field|PRESSED_SELECTED_WINDOW_FOCUSED_STATE_SET
specifier|final
name|int
index|[]
name|PRESSED_SELECTED_WINDOW_FOCUSED_STATE_SET
init|=
name|stateSetUnion
argument_list|(
name|PRESSED_SELECTED_STATE_SET
argument_list|,
name|WINDOW_FOCUSED_STATE_SET
argument_list|)
decl_stmt|;
DECL|field|PRESSED_FOCUSED_STATE_SET
specifier|final
name|int
index|[]
name|PRESSED_FOCUSED_STATE_SET
init|=
name|stateSetUnion
argument_list|(
name|PRESSED_STATE_SET
argument_list|,
name|FOCUSED_STATE_SET
argument_list|)
decl_stmt|;
DECL|field|PRESSED_FOCUSED_WINDOW_FOCUSED_STATE_SET
specifier|final
name|int
index|[]
name|PRESSED_FOCUSED_WINDOW_FOCUSED_STATE_SET
init|=
name|stateSetUnion
argument_list|(
name|PRESSED_FOCUSED_STATE_SET
argument_list|,
name|WINDOW_FOCUSED_STATE_SET
argument_list|)
decl_stmt|;
DECL|field|PRESSED_FOCUSED_SELECTED_STATE_SET
specifier|final
name|int
index|[]
name|PRESSED_FOCUSED_SELECTED_STATE_SET
init|=
name|stateSetUnion
argument_list|(
name|PRESSED_FOCUSED_STATE_SET
argument_list|,
name|SELECTED_STATE_SET
argument_list|)
decl_stmt|;
DECL|field|PRESSED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET
specifier|final
name|int
index|[]
name|PRESSED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET
init|=
name|stateSetUnion
argument_list|(
name|PRESSED_FOCUSED_SELECTED_STATE_SET
argument_list|,
name|WINDOW_FOCUSED_STATE_SET
argument_list|)
decl_stmt|;
DECL|field|PRESSED_ENABLED_STATE_SET
specifier|final
name|int
index|[]
name|PRESSED_ENABLED_STATE_SET
init|=
name|stateSetUnion
argument_list|(
name|PRESSED_STATE_SET
argument_list|,
name|ENABLED_STATE_SET
argument_list|)
decl_stmt|;
DECL|field|PRESSED_ENABLED_WINDOW_FOCUSED_STATE_SET
specifier|final
name|int
index|[]
name|PRESSED_ENABLED_WINDOW_FOCUSED_STATE_SET
init|=
name|stateSetUnion
argument_list|(
name|PRESSED_ENABLED_STATE_SET
argument_list|,
name|WINDOW_FOCUSED_STATE_SET
argument_list|)
decl_stmt|;
DECL|field|PRESSED_ENABLED_SELECTED_STATE_SET
specifier|final
name|int
index|[]
name|PRESSED_ENABLED_SELECTED_STATE_SET
init|=
name|stateSetUnion
argument_list|(
name|PRESSED_ENABLED_STATE_SET
argument_list|,
name|SELECTED_STATE_SET
argument_list|)
decl_stmt|;
DECL|field|PRESSED_ENABLED_SELECTED_WINDOW_FOCUSED_STATE_SET
specifier|final
name|int
index|[]
name|PRESSED_ENABLED_SELECTED_WINDOW_FOCUSED_STATE_SET
init|=
name|stateSetUnion
argument_list|(
name|PRESSED_ENABLED_SELECTED_STATE_SET
argument_list|,
name|WINDOW_FOCUSED_STATE_SET
argument_list|)
decl_stmt|;
DECL|field|PRESSED_ENABLED_FOCUSED_STATE_SET
specifier|final
name|int
index|[]
name|PRESSED_ENABLED_FOCUSED_STATE_SET
init|=
name|stateSetUnion
argument_list|(
name|PRESSED_ENABLED_STATE_SET
argument_list|,
name|FOCUSED_STATE_SET
argument_list|)
decl_stmt|;
DECL|field|PRESSED_ENABLED_FOCUSED_WINDOW_FOCUSED_STATE_SET
specifier|final
name|int
index|[]
name|PRESSED_ENABLED_FOCUSED_WINDOW_FOCUSED_STATE_SET
init|=
name|stateSetUnion
argument_list|(
name|PRESSED_ENABLED_FOCUSED_STATE_SET
argument_list|,
name|WINDOW_FOCUSED_STATE_SET
argument_list|)
decl_stmt|;
DECL|field|PRESSED_ENABLED_FOCUSED_SELECTED_STATE_SET
specifier|final
name|int
index|[]
name|PRESSED_ENABLED_FOCUSED_SELECTED_STATE_SET
init|=
name|stateSetUnion
argument_list|(
name|PRESSED_ENABLED_FOCUSED_STATE_SET
argument_list|,
name|SELECTED_STATE_SET
argument_list|)
decl_stmt|;
DECL|field|PRESSED_ENABLED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET
specifier|final
name|int
index|[]
name|PRESSED_ENABLED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET
init|=
name|stateSetUnion
argument_list|(
name|PRESSED_ENABLED_FOCUSED_SELECTED_STATE_SET
argument_list|,
name|WINDOW_FOCUSED_STATE_SET
argument_list|)
decl_stmt|;
DECL|field|View_background
specifier|final
name|int
name|View_background
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"View_background"
argument_list|)
decl_stmt|;
DECL|field|View_padding
specifier|final
name|int
name|View_padding
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"View_padding"
argument_list|)
decl_stmt|;
DECL|field|View_paddingLeft
specifier|final
name|int
name|View_paddingLeft
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"View_paddingLeft"
argument_list|)
decl_stmt|;
DECL|field|View_paddingTop
specifier|final
name|int
name|View_paddingTop
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"View_paddingTop"
argument_list|)
decl_stmt|;
DECL|field|View_paddingRight
specifier|final
name|int
name|View_paddingRight
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"View_paddingRight"
argument_list|)
decl_stmt|;
DECL|field|View_paddingBottom
specifier|final
name|int
name|View_paddingBottom
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"View_paddingBottom"
argument_list|)
decl_stmt|;
DECL|field|View_scrollX
specifier|final
name|int
name|View_scrollX
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"View_scrollX"
argument_list|)
decl_stmt|;
DECL|field|View_scrollY
specifier|final
name|int
name|View_scrollY
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"View_scrollY"
argument_list|)
decl_stmt|;
DECL|field|View_id
specifier|final
name|int
name|View_id
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"View_id"
argument_list|)
decl_stmt|;
DECL|field|View_tag
specifier|final
name|int
name|View_tag
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"View_tag"
argument_list|)
decl_stmt|;
DECL|field|View_fitsSystemWindows
specifier|final
name|int
name|View_fitsSystemWindows
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"View_fitsSystemWindows"
argument_list|)
decl_stmt|;
DECL|field|View_focusable
specifier|final
name|int
name|View_focusable
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"View_focusable"
argument_list|)
decl_stmt|;
DECL|field|View_focusableInTouchMode
specifier|final
name|int
name|View_focusableInTouchMode
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"View_focusableInTouchMode"
argument_list|)
decl_stmt|;
DECL|field|View_clickable
specifier|final
name|int
name|View_clickable
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"View_clickable"
argument_list|)
decl_stmt|;
DECL|field|View_longClickable
specifier|final
name|int
name|View_longClickable
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"View_longClickable"
argument_list|)
decl_stmt|;
DECL|field|View_saveEnabled
specifier|final
name|int
name|View_saveEnabled
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"View_saveEnabled"
argument_list|)
decl_stmt|;
DECL|field|View_duplicateParentState
specifier|final
name|int
name|View_duplicateParentState
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"View_duplicateParentState"
argument_list|)
decl_stmt|;
DECL|field|View_visibility
specifier|final
name|int
name|View_visibility
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"View_visibility"
argument_list|)
decl_stmt|;
DECL|field|View_drawingCacheQuality
specifier|final
name|int
name|View_drawingCacheQuality
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"View_drawingCacheQuality"
argument_list|)
decl_stmt|;
DECL|field|View_contentDescription
specifier|final
name|int
name|View_contentDescription
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"View_contentDescription"
argument_list|)
decl_stmt|;
DECL|field|View_soundEffectsEnabled
specifier|final
name|int
name|View_soundEffectsEnabled
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"View_soundEffectsEnabled"
argument_list|)
decl_stmt|;
DECL|field|View_hapticFeedbackEnabled
specifier|final
name|int
name|View_hapticFeedbackEnabled
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"View_hapticFeedbackEnabled"
argument_list|)
decl_stmt|;
DECL|field|View_scrollbars
specifier|final
name|int
name|View_scrollbars
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"View_scrollbars"
argument_list|)
decl_stmt|;
DECL|field|View_fadingEdge
specifier|final
name|int
name|View_fadingEdge
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"View_fadingEdge"
argument_list|)
decl_stmt|;
DECL|field|View_scrollbarStyle
specifier|final
name|int
name|View_scrollbarStyle
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"View_scrollbarStyle"
argument_list|)
decl_stmt|;
DECL|field|View_scrollbarFadeDuration
specifier|final
name|int
name|View_scrollbarFadeDuration
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"View_scrollbarFadeDuration"
argument_list|)
decl_stmt|;
DECL|field|View_scrollbarDefaultDelayBeforeFade
specifier|final
name|int
name|View_scrollbarDefaultDelayBeforeFade
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"View_scrollbarDefaultDelayBeforeFade"
argument_list|)
decl_stmt|;
DECL|field|View_scrollbarSize
specifier|final
name|int
name|View_scrollbarSize
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"View_scrollbarSize"
argument_list|)
decl_stmt|;
DECL|field|View_scrollbarThumbHorizontal
specifier|final
name|int
name|View_scrollbarThumbHorizontal
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"View_scrollbarThumbHorizontal"
argument_list|)
decl_stmt|;
DECL|field|View_scrollbarThumbVertical
specifier|final
name|int
name|View_scrollbarThumbVertical
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"View_scrollbarThumbVertical"
argument_list|)
decl_stmt|;
DECL|field|View_scrollbarTrackHorizontal
specifier|final
name|int
name|View_scrollbarTrackHorizontal
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"View_scrollbarTrackHorizontal"
argument_list|)
decl_stmt|;
DECL|field|View_scrollbarTrackVertical
specifier|final
name|int
name|View_scrollbarTrackVertical
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"View_scrollbarTrackVertical"
argument_list|)
decl_stmt|;
DECL|field|View_isScrollContainer
specifier|final
name|int
name|View_isScrollContainer
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"View_isScrollContainer"
argument_list|)
decl_stmt|;
DECL|field|View_keepScreenOn
specifier|final
name|int
name|View_keepScreenOn
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"View_keepScreenOn"
argument_list|)
decl_stmt|;
DECL|field|View_filterTouchesWhenObscured
specifier|final
name|int
name|View_filterTouchesWhenObscured
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"View_filterTouchesWhenObscured"
argument_list|)
decl_stmt|;
DECL|field|View_nextFocusLeft
specifier|final
name|int
name|View_nextFocusLeft
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"View_nextFocusLeft"
argument_list|)
decl_stmt|;
DECL|field|View_nextFocusRight
specifier|final
name|int
name|View_nextFocusRight
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"View_nextFocusRight"
argument_list|)
decl_stmt|;
DECL|field|View_nextFocusUp
specifier|final
name|int
name|View_nextFocusUp
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"View_nextFocusUp"
argument_list|)
decl_stmt|;
DECL|field|View_nextFocusDown
specifier|final
name|int
name|View_nextFocusDown
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"View_nextFocusDown"
argument_list|)
decl_stmt|;
DECL|field|View_minWidth
specifier|final
name|int
name|View_minWidth
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"View_minWidth"
argument_list|)
decl_stmt|;
DECL|field|View_minHeight
specifier|final
name|int
name|View_minHeight
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"View_minHeight"
argument_list|)
decl_stmt|;
DECL|field|View_onClick
specifier|final
name|int
name|View_onClick
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"View_onClick"
argument_list|)
decl_stmt|;
DECL|field|View_overScrollMode
specifier|final
name|int
name|View_overScrollMode
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"View_overScrollMode"
argument_list|)
decl_stmt|;
DECL|field|View_paddingStart
specifier|final
name|int
name|View_paddingStart
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"View_paddingStart"
argument_list|)
decl_stmt|;
DECL|field|View_paddingEnd
specifier|final
name|int
name|View_paddingEnd
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"View_paddingEnd"
argument_list|)
decl_stmt|;
DECL|field|TextAppearance_textColorHighlight
specifier|final
name|int
name|TextAppearance_textColorHighlight
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextAppearance_textColorHighlight"
argument_list|)
decl_stmt|;
DECL|field|TextAppearance_textColor
specifier|final
name|int
name|TextAppearance_textColor
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextAppearance_textColor"
argument_list|)
decl_stmt|;
DECL|field|TextAppearance_textColorHint
specifier|final
name|int
name|TextAppearance_textColorHint
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextAppearance_textColorHint"
argument_list|)
decl_stmt|;
DECL|field|TextAppearance_textColorLink
specifier|final
name|int
name|TextAppearance_textColorLink
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextAppearance_textColorLink"
argument_list|)
decl_stmt|;
DECL|field|TextAppearance_textSize
specifier|final
name|int
name|TextAppearance_textSize
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextAppearance_textSize"
argument_list|)
decl_stmt|;
DECL|field|TextAppearance_typeface
specifier|final
name|int
name|TextAppearance_typeface
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextAppearance_typeface"
argument_list|)
decl_stmt|;
DECL|field|TextAppearance_textStyle
specifier|final
name|int
name|TextAppearance_textStyle
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextAppearance_textStyle"
argument_list|)
decl_stmt|;
DECL|field|TextAppearance_textAllCaps
specifier|final
name|int
name|TextAppearance_textAllCaps
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextAppearance_textAllCaps"
argument_list|)
decl_stmt|;
DECL|field|TextView_editable
specifier|final
name|int
name|TextView_editable
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_editable"
argument_list|)
decl_stmt|;
DECL|field|TextView_inputMethod
specifier|final
name|int
name|TextView_inputMethod
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_inputMethod"
argument_list|)
decl_stmt|;
DECL|field|TextView_numeric
specifier|final
name|int
name|TextView_numeric
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_numeric"
argument_list|)
decl_stmt|;
DECL|field|TextView_digits
specifier|final
name|int
name|TextView_digits
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_digits"
argument_list|)
decl_stmt|;
DECL|field|TextView_phoneNumber
specifier|final
name|int
name|TextView_phoneNumber
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_phoneNumber"
argument_list|)
decl_stmt|;
DECL|field|TextView_autoText
specifier|final
name|int
name|TextView_autoText
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_autoText"
argument_list|)
decl_stmt|;
DECL|field|TextView_capitalize
specifier|final
name|int
name|TextView_capitalize
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_capitalize"
argument_list|)
decl_stmt|;
DECL|field|TextView_bufferType
specifier|final
name|int
name|TextView_bufferType
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_bufferType"
argument_list|)
decl_stmt|;
DECL|field|TextView_selectAllOnFocus
specifier|final
name|int
name|TextView_selectAllOnFocus
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_selectAllOnFocus"
argument_list|)
decl_stmt|;
DECL|field|TextView_autoLink
specifier|final
name|int
name|TextView_autoLink
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_autoLink"
argument_list|)
decl_stmt|;
DECL|field|TextView_linksClickable
specifier|final
name|int
name|TextView_linksClickable
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_linksClickable"
argument_list|)
decl_stmt|;
DECL|field|TextView_drawableLeft
specifier|final
name|int
name|TextView_drawableLeft
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_drawableLeft"
argument_list|)
decl_stmt|;
DECL|field|TextView_drawableTop
specifier|final
name|int
name|TextView_drawableTop
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_drawableTop"
argument_list|)
decl_stmt|;
DECL|field|TextView_drawableRight
specifier|final
name|int
name|TextView_drawableRight
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_drawableRight"
argument_list|)
decl_stmt|;
DECL|field|TextView_drawableBottom
specifier|final
name|int
name|TextView_drawableBottom
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_drawableBottom"
argument_list|)
decl_stmt|;
DECL|field|TextView_drawableStart
specifier|final
name|int
name|TextView_drawableStart
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_drawableStart"
argument_list|)
decl_stmt|;
DECL|field|TextView_drawableEnd
specifier|final
name|int
name|TextView_drawableEnd
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_drawableEnd"
argument_list|)
decl_stmt|;
DECL|field|TextView_drawablePadding
specifier|final
name|int
name|TextView_drawablePadding
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_drawablePadding"
argument_list|)
decl_stmt|;
DECL|field|TextView_textCursorDrawable
specifier|final
name|int
name|TextView_textCursorDrawable
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_textCursorDrawable"
argument_list|)
decl_stmt|;
DECL|field|TextView_maxLines
specifier|final
name|int
name|TextView_maxLines
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_maxLines"
argument_list|)
decl_stmt|;
DECL|field|TextView_maxHeight
specifier|final
name|int
name|TextView_maxHeight
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_maxHeight"
argument_list|)
decl_stmt|;
DECL|field|TextView_lines
specifier|final
name|int
name|TextView_lines
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_lines"
argument_list|)
decl_stmt|;
DECL|field|TextView_height
specifier|final
name|int
name|TextView_height
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_height"
argument_list|)
decl_stmt|;
DECL|field|TextView_minLines
specifier|final
name|int
name|TextView_minLines
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_minLines"
argument_list|)
decl_stmt|;
DECL|field|TextView_minHeight
specifier|final
name|int
name|TextView_minHeight
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_minHeight"
argument_list|)
decl_stmt|;
DECL|field|TextView_maxEms
specifier|final
name|int
name|TextView_maxEms
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_maxEms"
argument_list|)
decl_stmt|;
DECL|field|TextView_maxWidth
specifier|final
name|int
name|TextView_maxWidth
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_maxWidth"
argument_list|)
decl_stmt|;
DECL|field|TextView_ems
specifier|final
name|int
name|TextView_ems
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_ems"
argument_list|)
decl_stmt|;
DECL|field|TextView_width
specifier|final
name|int
name|TextView_width
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_width"
argument_list|)
decl_stmt|;
DECL|field|TextView_minEms
specifier|final
name|int
name|TextView_minEms
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_minEms"
argument_list|)
decl_stmt|;
DECL|field|TextView_minWidth
specifier|final
name|int
name|TextView_minWidth
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_minWidth"
argument_list|)
decl_stmt|;
DECL|field|TextView_gravity
specifier|final
name|int
name|TextView_gravity
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_gravity"
argument_list|)
decl_stmt|;
DECL|field|TextView_hint
specifier|final
name|int
name|TextView_hint
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_hint"
argument_list|)
decl_stmt|;
DECL|field|TextView_text
specifier|final
name|int
name|TextView_text
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_text"
argument_list|)
decl_stmt|;
DECL|field|TextView_scrollHorizontally
specifier|final
name|int
name|TextView_scrollHorizontally
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_scrollHorizontally"
argument_list|)
decl_stmt|;
DECL|field|TextView_singleLine
specifier|final
name|int
name|TextView_singleLine
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_singleLine"
argument_list|)
decl_stmt|;
DECL|field|TextView_ellipsize
specifier|final
name|int
name|TextView_ellipsize
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_ellipsize"
argument_list|)
decl_stmt|;
DECL|field|TextView_marqueeRepeatLimit
specifier|final
name|int
name|TextView_marqueeRepeatLimit
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_marqueeRepeatLimit"
argument_list|)
decl_stmt|;
DECL|field|TextView_includeFontPadding
specifier|final
name|int
name|TextView_includeFontPadding
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_includeFontPadding"
argument_list|)
decl_stmt|;
DECL|field|TextView_cursorVisible
specifier|final
name|int
name|TextView_cursorVisible
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_cursorVisible"
argument_list|)
decl_stmt|;
DECL|field|TextView_maxLength
specifier|final
name|int
name|TextView_maxLength
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_maxLength"
argument_list|)
decl_stmt|;
DECL|field|TextView_textScaleX
specifier|final
name|int
name|TextView_textScaleX
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_textScaleX"
argument_list|)
decl_stmt|;
DECL|field|TextView_freezesText
specifier|final
name|int
name|TextView_freezesText
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_freezesText"
argument_list|)
decl_stmt|;
DECL|field|TextView_shadowColor
specifier|final
name|int
name|TextView_shadowColor
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_shadowColor"
argument_list|)
decl_stmt|;
DECL|field|TextView_shadowDx
specifier|final
name|int
name|TextView_shadowDx
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_shadowDx"
argument_list|)
decl_stmt|;
DECL|field|TextView_shadowDy
specifier|final
name|int
name|TextView_shadowDy
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_shadowDy"
argument_list|)
decl_stmt|;
DECL|field|TextView_shadowRadius
specifier|final
name|int
name|TextView_shadowRadius
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_shadowRadius"
argument_list|)
decl_stmt|;
DECL|field|TextView_enabled
specifier|final
name|int
name|TextView_enabled
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_enabled"
argument_list|)
decl_stmt|;
DECL|field|TextView_textColorHighlight
specifier|final
name|int
name|TextView_textColorHighlight
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_textColorHighlight"
argument_list|)
decl_stmt|;
DECL|field|TextView_textColor
specifier|final
name|int
name|TextView_textColor
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_textColor"
argument_list|)
decl_stmt|;
DECL|field|TextView_textColorHint
specifier|final
name|int
name|TextView_textColorHint
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_textColorHint"
argument_list|)
decl_stmt|;
DECL|field|TextView_textColorLink
specifier|final
name|int
name|TextView_textColorLink
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_textColorLink"
argument_list|)
decl_stmt|;
DECL|field|TextView_textSize
specifier|final
name|int
name|TextView_textSize
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_textSize"
argument_list|)
decl_stmt|;
DECL|field|TextView_typeface
specifier|final
name|int
name|TextView_typeface
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_typeface"
argument_list|)
decl_stmt|;
DECL|field|TextView_textStyle
specifier|final
name|int
name|TextView_textStyle
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_textStyle"
argument_list|)
decl_stmt|;
DECL|field|TextView_password
specifier|final
name|int
name|TextView_password
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_password"
argument_list|)
decl_stmt|;
DECL|field|TextView_lineSpacingExtra
specifier|final
name|int
name|TextView_lineSpacingExtra
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_lineSpacingExtra"
argument_list|)
decl_stmt|;
DECL|field|TextView_lineSpacingMultiplier
specifier|final
name|int
name|TextView_lineSpacingMultiplier
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_lineSpacingMultiplier"
argument_list|)
decl_stmt|;
DECL|field|TextView_inputType
specifier|final
name|int
name|TextView_inputType
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_inputType"
argument_list|)
decl_stmt|;
DECL|field|TextView_imeOptions
specifier|final
name|int
name|TextView_imeOptions
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_imeOptions"
argument_list|)
decl_stmt|;
DECL|field|TextView_imeActionLabel
specifier|final
name|int
name|TextView_imeActionLabel
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_imeActionLabel"
argument_list|)
decl_stmt|;
DECL|field|TextView_imeActionId
specifier|final
name|int
name|TextView_imeActionId
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_imeActionId"
argument_list|)
decl_stmt|;
DECL|field|TextView_privateImeOptions
specifier|final
name|int
name|TextView_privateImeOptions
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_privateImeOptions"
argument_list|)
decl_stmt|;
DECL|field|TextView_textSelectHandleLeft
specifier|final
name|int
name|TextView_textSelectHandleLeft
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_textSelectHandleLeft"
argument_list|)
decl_stmt|;
DECL|field|TextView_textSelectHandleRight
specifier|final
name|int
name|TextView_textSelectHandleRight
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_textSelectHandleRight"
argument_list|)
decl_stmt|;
DECL|field|TextView_textSelectHandle
specifier|final
name|int
name|TextView_textSelectHandle
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_textSelectHandle"
argument_list|)
decl_stmt|;
DECL|field|TextView_textIsSelectable
specifier|final
name|int
name|TextView_textIsSelectable
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_textIsSelectable"
argument_list|)
decl_stmt|;
DECL|field|TextView_textAllCaps
specifier|final
name|int
name|TextView_textAllCaps
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"TextView_textAllCaps"
argument_list|)
decl_stmt|;
DECL|field|ImageView_src
specifier|final
name|int
name|ImageView_src
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"ImageView_src"
argument_list|)
decl_stmt|;
DECL|field|ImageView_baselineAlignBottom
specifier|final
name|int
name|ImageView_baselineAlignBottom
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"ImageView_baselineAlignBottom"
argument_list|)
decl_stmt|;
DECL|field|ImageView_adjustViewBounds
specifier|final
name|int
name|ImageView_adjustViewBounds
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"ImageView_adjustViewBounds"
argument_list|)
decl_stmt|;
DECL|field|ImageView_maxWidth
specifier|final
name|int
name|ImageView_maxWidth
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"ImageView_maxWidth"
argument_list|)
decl_stmt|;
DECL|field|ImageView_maxHeight
specifier|final
name|int
name|ImageView_maxHeight
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"ImageView_maxHeight"
argument_list|)
decl_stmt|;
DECL|field|ImageView_scaleType
specifier|final
name|int
name|ImageView_scaleType
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"ImageView_scaleType"
argument_list|)
decl_stmt|;
DECL|field|ImageView_tint
specifier|final
name|int
name|ImageView_tint
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"ImageView_tint"
argument_list|)
decl_stmt|;
DECL|field|ImageView_cropToPadding
specifier|final
name|int
name|ImageView_cropToPadding
init|=
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"ImageView_cropToPadding"
argument_list|)
decl_stmt|;
DECL|field|m_theme
specifier|final
name|Resources
operator|.
name|Theme
name|m_theme
decl_stmt|;
DECL|field|m_extractPath
specifier|final
name|String
name|m_extractPath
decl_stmt|;
DECL|field|m_context
name|Context
name|m_context
decl_stmt|;
DECL|field|defaultBackgroundColor
specifier|final
name|int
name|defaultBackgroundColor
decl_stmt|;
DECL|field|defaultTextColor
specifier|final
name|int
name|defaultTextColor
decl_stmt|;
DECL|class|SimpleJsonWriter
class|class
name|SimpleJsonWriter
block|{
DECL|field|m_writer
specifier|private
name|OutputStreamWriter
name|m_writer
decl_stmt|;
DECL|field|m_addComma
specifier|private
name|boolean
name|m_addComma
init|=
literal|false
decl_stmt|;
DECL|field|m_indentLevel
specifier|private
name|int
name|m_indentLevel
init|=
literal|0
decl_stmt|;
DECL|method|SimpleJsonWriter
specifier|public
name|SimpleJsonWriter
parameter_list|(
name|String
name|filePath
parameter_list|)
throws|throws
name|FileNotFoundException
block|{
name|m_writer
operator|=
operator|new
name|OutputStreamWriter
argument_list|(
operator|new
name|FileOutputStream
argument_list|(
name|filePath
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|close
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|IOException
block|{
name|m_writer
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
DECL|method|writeIndent
specifier|private
name|void
name|writeIndent
parameter_list|()
throws|throws
name|IOException
block|{
name|m_writer
operator|.
name|write
argument_list|(
literal|" "
argument_list|,
literal|0
argument_list|,
name|m_indentLevel
argument_list|)
expr_stmt|;
block|}
DECL|method|beginObject
name|SimpleJsonWriter
name|beginObject
parameter_list|()
throws|throws
name|IOException
block|{
name|writeIndent
argument_list|()
expr_stmt|;
name|m_writer
operator|.
name|write
argument_list|(
literal|"{\n"
argument_list|)
expr_stmt|;
operator|++
name|m_indentLevel
expr_stmt|;
name|m_addComma
operator|=
literal|false
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|endObject
name|SimpleJsonWriter
name|endObject
parameter_list|()
throws|throws
name|IOException
block|{
name|m_writer
operator|.
name|write
argument_list|(
literal|"\n"
argument_list|)
expr_stmt|;
name|writeIndent
argument_list|()
expr_stmt|;
name|m_writer
operator|.
name|write
argument_list|(
literal|"}\n"
argument_list|)
expr_stmt|;
operator|--
name|m_indentLevel
expr_stmt|;
name|m_addComma
operator|=
literal|false
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|name
name|SimpleJsonWriter
name|name
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|m_addComma
condition|)
block|{
name|m_writer
operator|.
name|write
argument_list|(
literal|",\n"
argument_list|)
expr_stmt|;
block|}
name|writeIndent
argument_list|()
expr_stmt|;
name|m_writer
operator|.
name|write
argument_list|(
name|JSONObject
operator|.
name|quote
argument_list|(
name|name
argument_list|)
operator|+
literal|": "
argument_list|)
expr_stmt|;
name|m_addComma
operator|=
literal|true
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|value
name|SimpleJsonWriter
name|value
parameter_list|(
name|JSONObject
name|value
parameter_list|)
throws|throws
name|IOException
block|{
name|m_writer
operator|.
name|write
argument_list|(
name|value
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
DECL|class|FakeCanvas
class|class
name|FakeCanvas
extends|extends
name|Canvas
block|{
DECL|field|chunkData
name|int
index|[]
name|chunkData
init|=
literal|null
decl_stmt|;
DECL|class|Size
class|class
name|Size
block|{
DECL|field|s
DECL|field|e
specifier|public
name|int
name|s
decl_stmt|,
name|e
decl_stmt|;
DECL|method|Size
name|Size
parameter_list|(
name|int
name|start
parameter_list|,
name|int
name|end
parameter_list|)
block|{
name|s
operator|=
name|start
expr_stmt|;
name|e
operator|=
name|end
expr_stmt|;
block|}
block|}
DECL|method|isHardwareAccelerated
specifier|public
name|boolean
name|isHardwareAccelerated
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
DECL|method|drawPatch
specifier|public
name|void
name|drawPatch
parameter_list|(
name|Bitmap
name|bmp
parameter_list|,
name|byte
index|[]
name|chunks
parameter_list|,
name|RectF
name|dst
parameter_list|,
name|Paint
name|paint
parameter_list|)
block|{
if|if
condition|(
name|Build
operator|.
name|VERSION
operator|.
name|SDK_INT
operator|>
literal|19
condition|)
name|chunkData
operator|=
name|extractChunkInfo20
argument_list|(
name|chunks
argument_list|)
expr_stmt|;
else|else
name|chunkData
operator|=
name|extractChunkInfo
argument_list|(
name|chunks
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|stateSetUnion
specifier|private
name|int
index|[]
name|stateSetUnion
parameter_list|(
specifier|final
name|int
index|[]
name|stateSet1
parameter_list|,
specifier|final
name|int
index|[]
name|stateSet2
parameter_list|)
block|{
try|try
block|{
specifier|final
name|int
name|stateSet1Length
init|=
name|stateSet1
operator|.
name|length
decl_stmt|;
specifier|final
name|int
name|stateSet2Length
init|=
name|stateSet2
operator|.
name|length
decl_stmt|;
specifier|final
name|int
index|[]
name|newSet
init|=
operator|new
name|int
index|[
name|stateSet1Length
operator|+
name|stateSet2Length
index|]
decl_stmt|;
name|int
name|k
init|=
literal|0
decl_stmt|;
name|int
name|i
init|=
literal|0
decl_stmt|;
name|int
name|j
init|=
literal|0
decl_stmt|;
comment|// This is a merge of the two input state sets and assumes that the
comment|// input sets are sorted by the order imposed by ViewDrawableStates.
name|int
index|[]
name|viewDrawableStatesState
init|=
operator|(
name|int
index|[]
operator|)
name|styleableClass
operator|.
name|getDeclaredField
argument_list|(
literal|"ViewDrawableStates"
argument_list|)
operator|.
name|get
argument_list|(
literal|null
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|viewState
range|:
name|viewDrawableStatesState
control|)
block|{
if|if
condition|(
name|i
operator|<
name|stateSet1Length
operator|&&
name|stateSet1
index|[
name|i
index|]
operator|==
name|viewState
condition|)
block|{
name|newSet
index|[
name|k
operator|++
index|]
operator|=
name|viewState
expr_stmt|;
name|i
operator|++
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|j
operator|<
name|stateSet2Length
operator|&&
name|stateSet2
index|[
name|j
index|]
operator|==
name|viewState
condition|)
block|{
name|newSet
index|[
name|k
operator|++
index|]
operator|=
name|viewState
expr_stmt|;
name|j
operator|++
expr_stmt|;
block|}
if|if
condition|(
name|k
operator|>
literal|1
condition|)
block|{
assert|assert
operator|(
name|newSet
index|[
name|k
operator|-
literal|1
index|]
operator|>
name|newSet
index|[
name|k
operator|-
literal|2
index|]
operator|)
assert|;
block|}
block|}
return|return
name|newSet
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
return|return
literal|null
return|;
block|}
DECL|method|getStylableClass
specifier|private
name|Class
argument_list|<
name|?
argument_list|>
name|getStylableClass
parameter_list|()
block|{
try|try
block|{
return|return
name|Class
operator|.
name|forName
argument_list|(
literal|"android.R$styleable"
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|ClassNotFoundException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
return|return
literal|null
return|;
block|}
DECL|method|getField
name|int
name|getField
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|clazz
parameter_list|,
name|String
name|fieldName
parameter_list|)
block|{
try|try
block|{
return|return
name|clazz
operator|.
name|getDeclaredField
argument_list|(
name|fieldName
argument_list|)
operator|.
name|getInt
argument_list|(
literal|null
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
return|return
operator|-
literal|1
return|;
block|}
DECL|method|getColorStateList
name|JSONObject
name|getColorStateList
parameter_list|(
name|ColorStateList
name|colorList
parameter_list|)
block|{
name|JSONObject
name|json
init|=
operator|new
name|JSONObject
argument_list|()
decl_stmt|;
try|try
block|{
name|json
operator|.
name|put
argument_list|(
literal|"EMPTY_STATE_SET"
argument_list|,
name|colorList
operator|.
name|getColorForState
argument_list|(
name|EMPTY_STATE_SET
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"WINDOW_FOCUSED_STATE_SET"
argument_list|,
name|colorList
operator|.
name|getColorForState
argument_list|(
name|WINDOW_FOCUSED_STATE_SET
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"SELECTED_STATE_SET"
argument_list|,
name|colorList
operator|.
name|getColorForState
argument_list|(
name|SELECTED_STATE_SET
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"SELECTED_WINDOW_FOCUSED_STATE_SET"
argument_list|,
name|colorList
operator|.
name|getColorForState
argument_list|(
name|SELECTED_WINDOW_FOCUSED_STATE_SET
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"FOCUSED_STATE_SET"
argument_list|,
name|colorList
operator|.
name|getColorForState
argument_list|(
name|FOCUSED_STATE_SET
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"FOCUSED_WINDOW_FOCUSED_STATE_SET"
argument_list|,
name|colorList
operator|.
name|getColorForState
argument_list|(
name|FOCUSED_WINDOW_FOCUSED_STATE_SET
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"FOCUSED_SELECTED_STATE_SET"
argument_list|,
name|colorList
operator|.
name|getColorForState
argument_list|(
name|FOCUSED_SELECTED_STATE_SET
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET"
argument_list|,
name|colorList
operator|.
name|getColorForState
argument_list|(
name|FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"ENABLED_STATE_SET"
argument_list|,
name|colorList
operator|.
name|getColorForState
argument_list|(
name|ENABLED_STATE_SET
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"ENABLED_WINDOW_FOCUSED_STATE_SET"
argument_list|,
name|colorList
operator|.
name|getColorForState
argument_list|(
name|ENABLED_WINDOW_FOCUSED_STATE_SET
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"ENABLED_SELECTED_STATE_SET"
argument_list|,
name|colorList
operator|.
name|getColorForState
argument_list|(
name|ENABLED_SELECTED_STATE_SET
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"ENABLED_SELECTED_WINDOW_FOCUSED_STATE_SET"
argument_list|,
name|colorList
operator|.
name|getColorForState
argument_list|(
name|ENABLED_SELECTED_WINDOW_FOCUSED_STATE_SET
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"ENABLED_FOCUSED_STATE_SET"
argument_list|,
name|colorList
operator|.
name|getColorForState
argument_list|(
name|ENABLED_FOCUSED_STATE_SET
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"ENABLED_FOCUSED_WINDOW_FOCUSED_STATE_SET"
argument_list|,
name|colorList
operator|.
name|getColorForState
argument_list|(
name|ENABLED_FOCUSED_WINDOW_FOCUSED_STATE_SET
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"ENABLED_FOCUSED_SELECTED_STATE_SET"
argument_list|,
name|colorList
operator|.
name|getColorForState
argument_list|(
name|ENABLED_FOCUSED_SELECTED_STATE_SET
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"ENABLED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET"
argument_list|,
name|colorList
operator|.
name|getColorForState
argument_list|(
name|ENABLED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"PRESSED_STATE_SET"
argument_list|,
name|colorList
operator|.
name|getColorForState
argument_list|(
name|PRESSED_STATE_SET
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"PRESSED_WINDOW_FOCUSED_STATE_SET"
argument_list|,
name|colorList
operator|.
name|getColorForState
argument_list|(
name|PRESSED_WINDOW_FOCUSED_STATE_SET
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"PRESSED_SELECTED_STATE_SET"
argument_list|,
name|colorList
operator|.
name|getColorForState
argument_list|(
name|PRESSED_SELECTED_STATE_SET
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"PRESSED_SELECTED_WINDOW_FOCUSED_STATE_SET"
argument_list|,
name|colorList
operator|.
name|getColorForState
argument_list|(
name|PRESSED_SELECTED_WINDOW_FOCUSED_STATE_SET
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"PRESSED_FOCUSED_STATE_SET"
argument_list|,
name|colorList
operator|.
name|getColorForState
argument_list|(
name|PRESSED_FOCUSED_STATE_SET
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"PRESSED_FOCUSED_WINDOW_FOCUSED_STATE_SET"
argument_list|,
name|colorList
operator|.
name|getColorForState
argument_list|(
name|PRESSED_FOCUSED_WINDOW_FOCUSED_STATE_SET
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"PRESSED_FOCUSED_SELECTED_STATE_SET"
argument_list|,
name|colorList
operator|.
name|getColorForState
argument_list|(
name|PRESSED_FOCUSED_SELECTED_STATE_SET
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"PRESSED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET"
argument_list|,
name|colorList
operator|.
name|getColorForState
argument_list|(
name|PRESSED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"PRESSED_ENABLED_STATE_SET"
argument_list|,
name|colorList
operator|.
name|getColorForState
argument_list|(
name|PRESSED_ENABLED_STATE_SET
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"PRESSED_ENABLED_WINDOW_FOCUSED_STATE_SET"
argument_list|,
name|colorList
operator|.
name|getColorForState
argument_list|(
name|PRESSED_ENABLED_WINDOW_FOCUSED_STATE_SET
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"PRESSED_ENABLED_SELECTED_STATE_SET"
argument_list|,
name|colorList
operator|.
name|getColorForState
argument_list|(
name|PRESSED_ENABLED_SELECTED_STATE_SET
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"PRESSED_ENABLED_SELECTED_WINDOW_FOCUSED_STATE_SET"
argument_list|,
name|colorList
operator|.
name|getColorForState
argument_list|(
name|PRESSED_ENABLED_SELECTED_WINDOW_FOCUSED_STATE_SET
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"PRESSED_ENABLED_FOCUSED_STATE_SET"
argument_list|,
name|colorList
operator|.
name|getColorForState
argument_list|(
name|PRESSED_ENABLED_FOCUSED_STATE_SET
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"PRESSED_ENABLED_FOCUSED_WINDOW_FOCUSED_STATE_SET"
argument_list|,
name|colorList
operator|.
name|getColorForState
argument_list|(
name|PRESSED_ENABLED_FOCUSED_WINDOW_FOCUSED_STATE_SET
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"PRESSED_ENABLED_FOCUSED_SELECTED_STATE_SET"
argument_list|,
name|colorList
operator|.
name|getColorForState
argument_list|(
name|PRESSED_ENABLED_FOCUSED_SELECTED_STATE_SET
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"PRESSED_ENABLED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET"
argument_list|,
name|colorList
operator|.
name|getColorForState
argument_list|(
name|PRESSED_ENABLED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|JSONException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
return|return
name|json
return|;
block|}
DECL|field|DrawableStates
specifier|final
name|int
index|[]
name|DrawableStates
init|=
block|{
name|android
operator|.
name|R
operator|.
name|attr
operator|.
name|state_active
block|,
name|android
operator|.
name|R
operator|.
name|attr
operator|.
name|state_checked
block|,
name|android
operator|.
name|R
operator|.
name|attr
operator|.
name|state_enabled
block|,
name|android
operator|.
name|R
operator|.
name|attr
operator|.
name|state_focused
block|,
name|android
operator|.
name|R
operator|.
name|attr
operator|.
name|state_pressed
block|,
name|android
operator|.
name|R
operator|.
name|attr
operator|.
name|state_selected
block|,
name|android
operator|.
name|R
operator|.
name|attr
operator|.
name|state_window_focused
block|,
literal|16908288
block|,
literal|16843597
block|,
literal|16843518
block|,
literal|16843547
block|}
decl_stmt|;
DECL|field|DrawableStatesLabels
specifier|final
name|String
index|[]
name|DrawableStatesLabels
init|=
block|{
literal|"active"
block|,
literal|"checked"
block|,
literal|"enabled"
block|,
literal|"focused"
block|,
literal|"pressed"
block|,
literal|"selected"
block|,
literal|"window_focused"
block|,
literal|"background"
block|,
literal|"multiline"
block|,
literal|"activated"
block|,
literal|"accelerated"
block|}
decl_stmt|;
DECL|field|DisableDrawableStatesLabels
specifier|final
name|String
index|[]
name|DisableDrawableStatesLabels
init|=
block|{
literal|"inactive"
block|,
literal|"unchecked"
block|,
literal|"disabled"
block|,
literal|"not_focused"
block|,
literal|"no_pressed"
block|,
literal|"unselected"
block|,
literal|"window_not_focused"
block|,
literal|"background"
block|,
literal|"multiline"
block|,
literal|"activated"
block|,
literal|"accelerated"
block|}
decl_stmt|;
DECL|method|getFileName
name|String
name|getFileName
parameter_list|(
name|String
name|file
parameter_list|,
name|String
index|[]
name|states
parameter_list|)
block|{
for|for
control|(
name|String
name|state
range|:
name|states
control|)
name|file
operator|+=
literal|"__"
operator|+
name|state
expr_stmt|;
return|return
name|file
return|;
block|}
DECL|method|getStatesName
name|String
name|getStatesName
parameter_list|(
name|String
index|[]
name|states
parameter_list|)
block|{
name|String
name|statesName
init|=
literal|""
decl_stmt|;
for|for
control|(
name|String
name|state
range|:
name|states
control|)
block|{
if|if
condition|(
name|statesName
operator|.
name|length
argument_list|()
operator|>
literal|0
condition|)
name|statesName
operator|+=
literal|"__"
expr_stmt|;
name|statesName
operator|+=
name|state
expr_stmt|;
block|}
return|return
name|statesName
return|;
block|}
DECL|method|addDrawableItemIfNotExists
name|void
name|addDrawableItemIfNotExists
parameter_list|(
name|JSONObject
name|json
parameter_list|,
name|ArrayList
argument_list|<
name|Integer
argument_list|>
name|list
parameter_list|,
name|Drawable
name|item
parameter_list|,
name|String
index|[]
name|states
parameter_list|,
name|String
name|filename
parameter_list|)
block|{
for|for
control|(
name|Integer
name|it
range|:
name|list
control|)
block|{
if|if
condition|(
name|it
operator|.
name|equals
argument_list|(
name|item
operator|.
name|hashCode
argument_list|()
argument_list|)
condition|)
return|return;
block|}
name|list
operator|.
name|add
argument_list|(
name|item
operator|.
name|hashCode
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
name|json
operator|.
name|put
argument_list|(
name|getStatesName
argument_list|(
name|states
argument_list|)
argument_list|,
name|getDrawable
argument_list|(
name|item
argument_list|,
name|getFileName
argument_list|(
name|filename
argument_list|,
name|states
argument_list|)
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|JSONException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|addSolution
name|void
name|addSolution
parameter_list|(
name|String
name|filename
parameter_list|,
name|JSONObject
name|json
parameter_list|,
name|int
name|c
parameter_list|,
name|Drawable
name|drawable
parameter_list|,
name|ArrayList
argument_list|<
name|Integer
argument_list|>
name|drawableList
parameter_list|,
name|int
name|u
parameter_list|)
block|{
name|int
name|pos
init|=
literal|0
decl_stmt|;
name|int
name|states
index|[]
init|=
operator|new
name|int
index|[
name|c
index|]
decl_stmt|;
name|String
index|[]
name|statesText
init|=
operator|new
name|String
index|[
name|c
index|]
decl_stmt|;
for|for
control|(
name|int
name|n
init|=
literal|0
init|;
name|u
operator|>
literal|0
condition|;
operator|++
name|n
operator|,
name|u
operator|>>=
literal|1
control|)
if|if
condition|(
operator|(
name|u
operator|&
literal|1
operator|)
operator|>
literal|0
condition|)
block|{
name|statesText
index|[
name|pos
index|]
operator|=
name|DrawableStatesLabels
index|[
name|n
index|]
expr_stmt|;
name|states
index|[
name|pos
operator|++
index|]
operator|=
name|DrawableStates
index|[
name|n
index|]
expr_stmt|;
block|}
name|drawable
operator|.
name|setState
argument_list|(
name|states
argument_list|)
expr_stmt|;
name|addDrawableItemIfNotExists
argument_list|(
name|json
argument_list|,
name|drawableList
argument_list|,
name|drawable
operator|.
name|getCurrent
argument_list|()
argument_list|,
name|statesText
argument_list|,
name|filename
argument_list|)
expr_stmt|;
block|}
DECL|method|bitCount
name|int
name|bitCount
parameter_list|(
name|int
name|u
parameter_list|)
block|{
name|int
name|n
decl_stmt|;
for|for
control|(
name|n
operator|=
literal|0
init|;
name|u
operator|>
literal|0
condition|;
operator|++
name|n
operator|,
name|u
operator|&=
operator|(
name|u
operator|-
literal|1
operator|)
control|)
empty_stmt|;
return|return
name|n
return|;
block|}
DECL|method|getStatesList
name|JSONObject
name|getStatesList
parameter_list|(
name|int
index|[]
name|states
parameter_list|)
throws|throws
name|JSONException
block|{
name|JSONObject
name|json
init|=
operator|new
name|JSONObject
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|s
range|:
name|states
control|)
block|{
name|boolean
name|found
init|=
literal|false
decl_stmt|;
for|for
control|(
name|int
name|d
init|=
literal|0
init|;
name|d
operator|<
name|DrawableStates
operator|.
name|length
condition|;
name|d
operator|++
control|)
block|{
if|if
condition|(
name|s
operator|==
name|DrawableStates
index|[
name|d
index|]
condition|)
block|{
name|json
operator|.
name|put
argument_list|(
name|DrawableStatesLabels
index|[
name|d
index|]
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|found
operator|=
literal|true
expr_stmt|;
break|break;
block|}
elseif|else
if|if
condition|(
name|s
operator|==
operator|-
name|DrawableStates
index|[
name|d
index|]
condition|)
block|{
name|json
operator|.
name|put
argument_list|(
name|DrawableStatesLabels
index|[
name|d
index|]
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|found
operator|=
literal|true
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
operator|!
name|found
condition|)
block|{
name|json
operator|.
name|put
argument_list|(
literal|"unhandled_state_"
operator|+
name|s
argument_list|,
name|s
operator|>
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|json
return|;
block|}
DECL|method|getStatesName
name|String
name|getStatesName
parameter_list|(
name|int
index|[]
name|states
parameter_list|)
block|{
name|String
name|statesName
init|=
literal|""
decl_stmt|;
for|for
control|(
name|int
name|s
range|:
name|states
control|)
block|{
name|boolean
name|found
init|=
literal|false
decl_stmt|;
for|for
control|(
name|int
name|d
init|=
literal|0
init|;
name|d
operator|<
name|DrawableStates
operator|.
name|length
condition|;
name|d
operator|++
control|)
block|{
if|if
condition|(
name|s
operator|==
name|DrawableStates
index|[
name|d
index|]
condition|)
block|{
if|if
condition|(
name|statesName
operator|.
name|length
argument_list|()
operator|>
literal|0
condition|)
name|statesName
operator|+=
literal|"__"
expr_stmt|;
name|statesName
operator|+=
name|DrawableStatesLabels
index|[
name|d
index|]
expr_stmt|;
name|found
operator|=
literal|true
expr_stmt|;
break|break;
block|}
elseif|else
if|if
condition|(
name|s
operator|==
operator|-
name|DrawableStates
index|[
name|d
index|]
condition|)
block|{
if|if
condition|(
name|statesName
operator|.
name|length
argument_list|()
operator|>
literal|0
condition|)
name|statesName
operator|+=
literal|"__"
expr_stmt|;
name|statesName
operator|+=
name|DisableDrawableStatesLabels
index|[
name|d
index|]
expr_stmt|;
name|found
operator|=
literal|true
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
operator|!
name|found
condition|)
block|{
if|if
condition|(
name|statesName
operator|.
name|length
argument_list|()
operator|>
literal|0
condition|)
name|statesName
operator|+=
literal|";"
expr_stmt|;
name|statesName
operator|+=
name|s
expr_stmt|;
block|}
block|}
if|if
condition|(
name|statesName
operator|.
name|length
argument_list|()
operator|>
literal|0
condition|)
return|return
name|statesName
return|;
return|return
literal|"empty"
return|;
block|}
DECL|method|getLayerDrawable
specifier|private
name|JSONObject
name|getLayerDrawable
parameter_list|(
name|Object
name|drawable
parameter_list|,
name|String
name|filename
parameter_list|)
block|{
name|JSONObject
name|json
init|=
operator|new
name|JSONObject
argument_list|()
decl_stmt|;
name|LayerDrawable
name|layers
init|=
operator|(
name|LayerDrawable
operator|)
name|drawable
decl_stmt|;
specifier|final
name|int
name|nr
init|=
name|layers
operator|.
name|getNumberOfLayers
argument_list|()
decl_stmt|;
try|try
block|{
name|JSONArray
name|array
init|=
operator|new
name|JSONArray
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|nr
condition|;
name|i
operator|++
control|)
block|{
name|int
name|id
init|=
name|layers
operator|.
name|getId
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|id
operator|==
operator|-
literal|1
condition|)
name|id
operator|=
name|i
expr_stmt|;
name|JSONObject
name|layerJsonObject
init|=
name|getDrawable
argument_list|(
name|layers
operator|.
name|getDrawable
argument_list|(
name|i
argument_list|)
argument_list|,
name|filename
operator|+
literal|"__"
operator|+
name|id
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|layerJsonObject
operator|.
name|put
argument_list|(
literal|"id"
argument_list|,
name|id
argument_list|)
expr_stmt|;
name|array
operator|.
name|put
argument_list|(
name|layerJsonObject
argument_list|)
expr_stmt|;
block|}
name|json
operator|.
name|put
argument_list|(
literal|"type"
argument_list|,
literal|"layer"
argument_list|)
expr_stmt|;
name|Rect
name|padding
init|=
operator|new
name|Rect
argument_list|()
decl_stmt|;
if|if
condition|(
name|layers
operator|.
name|getPadding
argument_list|(
name|padding
argument_list|)
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"padding"
argument_list|,
name|getJsonRect
argument_list|(
name|padding
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"layers"
argument_list|,
name|array
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|JSONException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
return|return
name|json
return|;
block|}
DECL|method|getStateListDrawable
specifier|private
name|JSONObject
name|getStateListDrawable
parameter_list|(
name|Object
name|drawable
parameter_list|,
name|String
name|filename
parameter_list|)
block|{
name|JSONObject
name|json
init|=
operator|new
name|JSONObject
argument_list|()
decl_stmt|;
try|try
block|{
name|StateListDrawable
name|stateList
init|=
operator|(
name|StateListDrawable
operator|)
name|drawable
decl_stmt|;
specifier|final
name|int
name|numStates
init|=
operator|(
name|Integer
operator|)
name|StateListDrawable
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"getStateCount"
argument_list|)
operator|.
name|invoke
argument_list|(
name|stateList
argument_list|)
decl_stmt|;
name|JSONArray
name|array
init|=
operator|new
name|JSONArray
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numStates
condition|;
name|i
operator|++
control|)
block|{
name|JSONObject
name|stateJson
init|=
operator|new
name|JSONObject
argument_list|()
decl_stmt|;
specifier|final
name|Drawable
name|d
init|=
operator|(
name|Drawable
operator|)
name|StateListDrawable
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"getStateDrawable"
argument_list|,
name|Integer
operator|.
name|TYPE
argument_list|)
operator|.
name|invoke
argument_list|(
name|stateList
argument_list|,
name|i
argument_list|)
decl_stmt|;
specifier|final
name|int
index|[]
name|states
init|=
operator|(
name|int
index|[]
operator|)
name|StateListDrawable
operator|.
name|class
operator|.
name|getMethod
argument_list|(
literal|"getStateSet"
argument_list|,
name|Integer
operator|.
name|TYPE
argument_list|)
operator|.
name|invoke
argument_list|(
name|stateList
argument_list|,
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|states
operator|==
literal|null
condition|)
continue|continue;
name|stateJson
operator|.
name|put
argument_list|(
literal|"states"
argument_list|,
name|getStatesList
argument_list|(
name|states
argument_list|)
argument_list|)
expr_stmt|;
name|stateJson
operator|.
name|put
argument_list|(
literal|"drawable"
argument_list|,
name|getDrawable
argument_list|(
name|d
argument_list|,
name|filename
operator|+
literal|"__"
operator|+
name|getStatesName
argument_list|(
name|states
argument_list|)
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|array
operator|.
name|put
argument_list|(
name|stateJson
argument_list|)
expr_stmt|;
block|}
name|json
operator|.
name|put
argument_list|(
literal|"type"
argument_list|,
literal|"stateslist"
argument_list|)
expr_stmt|;
name|Rect
name|padding
init|=
operator|new
name|Rect
argument_list|()
decl_stmt|;
if|if
condition|(
name|stateList
operator|.
name|getPadding
argument_list|(
name|padding
argument_list|)
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"padding"
argument_list|,
name|getJsonRect
argument_list|(
name|padding
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"stateslist"
argument_list|,
name|array
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
return|return
name|json
return|;
block|}
DECL|method|getGradientDrawable
specifier|private
name|JSONObject
name|getGradientDrawable
parameter_list|(
name|GradientDrawable
name|drawable
parameter_list|)
block|{
name|JSONObject
name|json
init|=
operator|new
name|JSONObject
argument_list|()
decl_stmt|;
try|try
block|{
name|json
operator|.
name|put
argument_list|(
literal|"type"
argument_list|,
literal|"gradient"
argument_list|)
expr_stmt|;
name|Object
name|obj
init|=
name|drawable
operator|.
name|getConstantState
argument_list|()
decl_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|gradientStateClass
init|=
name|obj
operator|.
name|getClass
argument_list|()
decl_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"shape"
argument_list|,
name|gradientStateClass
operator|.
name|getField
argument_list|(
literal|"mShape"
argument_list|)
operator|.
name|getInt
argument_list|(
name|obj
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"gradient"
argument_list|,
name|gradientStateClass
operator|.
name|getField
argument_list|(
literal|"mGradient"
argument_list|)
operator|.
name|getInt
argument_list|(
name|obj
argument_list|)
argument_list|)
expr_stmt|;
name|GradientDrawable
operator|.
name|Orientation
name|orientation
init|=
operator|(
name|Orientation
operator|)
name|gradientStateClass
operator|.
name|getField
argument_list|(
literal|"mOrientation"
argument_list|)
operator|.
name|get
argument_list|(
name|obj
argument_list|)
decl_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"orientation"
argument_list|,
name|orientation
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|int
index|[]
name|intArray
init|=
operator|(
name|int
index|[]
operator|)
name|gradientStateClass
operator|.
name|getField
argument_list|(
literal|"mColors"
argument_list|)
operator|.
name|get
argument_list|(
name|obj
argument_list|)
decl_stmt|;
if|if
condition|(
name|intArray
operator|!=
literal|null
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"colors"
argument_list|,
name|getJsonArray
argument_list|(
name|intArray
argument_list|,
literal|0
argument_list|,
name|intArray
operator|.
name|length
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"positions"
argument_list|,
name|getJsonArray
argument_list|(
operator|(
name|float
index|[]
operator|)
name|gradientStateClass
operator|.
name|getField
argument_list|(
literal|"mPositions"
argument_list|)
operator|.
name|get
argument_list|(
name|obj
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"strokeWidth"
argument_list|,
name|gradientStateClass
operator|.
name|getField
argument_list|(
literal|"mStrokeWidth"
argument_list|)
operator|.
name|getInt
argument_list|(
name|obj
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"strokeDashWidth"
argument_list|,
name|gradientStateClass
operator|.
name|getField
argument_list|(
literal|"mStrokeDashWidth"
argument_list|)
operator|.
name|getFloat
argument_list|(
name|obj
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"strokeDashGap"
argument_list|,
name|gradientStateClass
operator|.
name|getField
argument_list|(
literal|"mStrokeDashGap"
argument_list|)
operator|.
name|getFloat
argument_list|(
name|obj
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"radius"
argument_list|,
name|gradientStateClass
operator|.
name|getField
argument_list|(
literal|"mRadius"
argument_list|)
operator|.
name|getFloat
argument_list|(
name|obj
argument_list|)
argument_list|)
expr_stmt|;
name|float
index|[]
name|floatArray
init|=
operator|(
name|float
index|[]
operator|)
name|gradientStateClass
operator|.
name|getField
argument_list|(
literal|"mRadiusArray"
argument_list|)
operator|.
name|get
argument_list|(
name|obj
argument_list|)
decl_stmt|;
if|if
condition|(
name|floatArray
operator|!=
literal|null
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"radiusArray"
argument_list|,
name|getJsonArray
argument_list|(
name|floatArray
argument_list|)
argument_list|)
expr_stmt|;
name|Rect
name|rc
init|=
operator|(
name|Rect
operator|)
name|gradientStateClass
operator|.
name|getField
argument_list|(
literal|"mPadding"
argument_list|)
operator|.
name|get
argument_list|(
name|obj
argument_list|)
decl_stmt|;
if|if
condition|(
name|rc
operator|!=
literal|null
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"padding"
argument_list|,
name|getJsonRect
argument_list|(
name|rc
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"width"
argument_list|,
name|gradientStateClass
operator|.
name|getField
argument_list|(
literal|"mWidth"
argument_list|)
operator|.
name|getInt
argument_list|(
name|obj
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"height"
argument_list|,
name|gradientStateClass
operator|.
name|getField
argument_list|(
literal|"mHeight"
argument_list|)
operator|.
name|getInt
argument_list|(
name|obj
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"innerRadiusRatio"
argument_list|,
name|gradientStateClass
operator|.
name|getField
argument_list|(
literal|"mInnerRadiusRatio"
argument_list|)
operator|.
name|getFloat
argument_list|(
name|obj
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"thicknessRatio"
argument_list|,
name|gradientStateClass
operator|.
name|getField
argument_list|(
literal|"mThicknessRatio"
argument_list|)
operator|.
name|getFloat
argument_list|(
name|obj
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"innerRadius"
argument_list|,
name|gradientStateClass
operator|.
name|getField
argument_list|(
literal|"mInnerRadius"
argument_list|)
operator|.
name|getInt
argument_list|(
name|obj
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"thickness"
argument_list|,
name|gradientStateClass
operator|.
name|getField
argument_list|(
literal|"mThickness"
argument_list|)
operator|.
name|getInt
argument_list|(
name|obj
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|Build
operator|.
name|VERSION
operator|.
name|SDK_INT
operator|<
literal|20
condition|)
block|{
name|json
operator|.
name|put
argument_list|(
literal|"solidColor"
argument_list|,
name|gradientStateClass
operator|.
name|getField
argument_list|(
literal|"mSolidColor"
argument_list|)
operator|.
name|getInt
argument_list|(
name|obj
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"strokeColor"
argument_list|,
name|gradientStateClass
operator|.
name|getField
argument_list|(
literal|"mStrokeColor"
argument_list|)
operator|.
name|getInt
argument_list|(
name|obj
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
return|return
name|json
return|;
block|}
DECL|method|getRotateDrawable
specifier|private
name|JSONObject
name|getRotateDrawable
parameter_list|(
name|RotateDrawable
name|drawable
parameter_list|,
name|String
name|filename
parameter_list|)
block|{
name|JSONObject
name|json
init|=
operator|new
name|JSONObject
argument_list|()
decl_stmt|;
try|try
block|{
name|json
operator|.
name|put
argument_list|(
literal|"type"
argument_list|,
literal|"rotate"
argument_list|)
expr_stmt|;
name|Object
name|obj
init|=
name|drawable
operator|.
name|getConstantState
argument_list|()
decl_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|rotateStateClass
init|=
name|obj
operator|.
name|getClass
argument_list|()
decl_stmt|;
name|Field
name|f
init|=
name|rotateStateClass
operator|.
name|getDeclaredField
argument_list|(
literal|"mDrawable"
argument_list|)
decl_stmt|;
name|f
operator|.
name|setAccessible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"drawable"
argument_list|,
name|getDrawable
argument_list|(
name|f
operator|.
name|get
argument_list|(
name|obj
argument_list|)
argument_list|,
name|filename
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|f
operator|=
name|rotateStateClass
operator|.
name|getDeclaredField
argument_list|(
literal|"mPivotX"
argument_list|)
expr_stmt|;
name|f
operator|.
name|setAccessible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"pivotX"
argument_list|,
name|f
operator|.
name|getFloat
argument_list|(
name|obj
argument_list|)
argument_list|)
expr_stmt|;
name|f
operator|=
name|rotateStateClass
operator|.
name|getDeclaredField
argument_list|(
literal|"mPivotXRel"
argument_list|)
expr_stmt|;
name|f
operator|.
name|setAccessible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"pivotXRel"
argument_list|,
name|f
operator|.
name|getBoolean
argument_list|(
name|obj
argument_list|)
argument_list|)
expr_stmt|;
name|f
operator|=
name|rotateStateClass
operator|.
name|getDeclaredField
argument_list|(
literal|"mPivotY"
argument_list|)
expr_stmt|;
name|f
operator|.
name|setAccessible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"pivotY"
argument_list|,
name|f
operator|.
name|getFloat
argument_list|(
name|obj
argument_list|)
argument_list|)
expr_stmt|;
name|f
operator|=
name|rotateStateClass
operator|.
name|getDeclaredField
argument_list|(
literal|"mPivotYRel"
argument_list|)
expr_stmt|;
name|f
operator|.
name|setAccessible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"pivotYRel"
argument_list|,
name|f
operator|.
name|getBoolean
argument_list|(
name|obj
argument_list|)
argument_list|)
expr_stmt|;
name|f
operator|=
name|rotateStateClass
operator|.
name|getDeclaredField
argument_list|(
literal|"mFromDegrees"
argument_list|)
expr_stmt|;
name|f
operator|.
name|setAccessible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"fromDegrees"
argument_list|,
name|f
operator|.
name|getFloat
argument_list|(
name|obj
argument_list|)
argument_list|)
expr_stmt|;
name|f
operator|=
name|rotateStateClass
operator|.
name|getDeclaredField
argument_list|(
literal|"mToDegrees"
argument_list|)
expr_stmt|;
name|f
operator|.
name|setAccessible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"toDegrees"
argument_list|,
name|f
operator|.
name|getFloat
argument_list|(
name|obj
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
return|return
name|json
return|;
block|}
DECL|method|getAnimationDrawable
specifier|private
name|JSONObject
name|getAnimationDrawable
parameter_list|(
name|AnimationDrawable
name|drawable
parameter_list|,
name|String
name|filename
parameter_list|)
block|{
name|JSONObject
name|json
init|=
operator|new
name|JSONObject
argument_list|()
decl_stmt|;
try|try
block|{
name|json
operator|.
name|put
argument_list|(
literal|"type"
argument_list|,
literal|"animation"
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"oneshot"
argument_list|,
name|drawable
operator|.
name|isOneShot
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|int
name|count
init|=
name|drawable
operator|.
name|getNumberOfFrames
argument_list|()
decl_stmt|;
name|JSONArray
name|frames
init|=
operator|new
name|JSONArray
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|count
condition|;
operator|++
name|i
control|)
block|{
name|JSONObject
name|frame
init|=
operator|new
name|JSONObject
argument_list|()
decl_stmt|;
name|frame
operator|.
name|put
argument_list|(
literal|"duration"
argument_list|,
name|drawable
operator|.
name|getDuration
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|frame
operator|.
name|put
argument_list|(
literal|"drawable"
argument_list|,
name|getDrawable
argument_list|(
name|drawable
operator|.
name|getFrame
argument_list|(
name|i
argument_list|)
argument_list|,
name|filename
operator|+
literal|"__"
operator|+
name|i
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|frames
operator|.
name|put
argument_list|(
name|frame
argument_list|)
expr_stmt|;
block|}
name|json
operator|.
name|put
argument_list|(
literal|"frames"
argument_list|,
name|frames
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
return|return
name|json
return|;
block|}
DECL|method|getJsonRect
specifier|private
name|JSONObject
name|getJsonRect
parameter_list|(
name|Rect
name|rect
parameter_list|)
throws|throws
name|JSONException
block|{
name|JSONObject
name|jsonRect
init|=
operator|new
name|JSONObject
argument_list|()
decl_stmt|;
name|jsonRect
operator|.
name|put
argument_list|(
literal|"left"
argument_list|,
name|rect
operator|.
name|left
argument_list|)
expr_stmt|;
name|jsonRect
operator|.
name|put
argument_list|(
literal|"top"
argument_list|,
name|rect
operator|.
name|top
argument_list|)
expr_stmt|;
name|jsonRect
operator|.
name|put
argument_list|(
literal|"right"
argument_list|,
name|rect
operator|.
name|right
argument_list|)
expr_stmt|;
name|jsonRect
operator|.
name|put
argument_list|(
literal|"bottom"
argument_list|,
name|rect
operator|.
name|bottom
argument_list|)
expr_stmt|;
return|return
name|jsonRect
return|;
block|}
DECL|method|getJsonArray
specifier|private
name|JSONArray
name|getJsonArray
parameter_list|(
name|int
index|[]
name|array
parameter_list|,
name|int
name|pos
parameter_list|,
name|int
name|len
parameter_list|)
block|{
name|JSONArray
name|a
init|=
operator|new
name|JSONArray
argument_list|()
decl_stmt|;
specifier|final
name|int
name|l
init|=
name|pos
operator|+
name|len
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
name|pos
init|;
name|i
operator|<
name|l
condition|;
name|i
operator|++
control|)
name|a
operator|.
name|put
argument_list|(
name|array
index|[
name|i
index|]
argument_list|)
expr_stmt|;
return|return
name|a
return|;
block|}
DECL|method|getJsonArray
specifier|private
name|JSONArray
name|getJsonArray
parameter_list|(
name|float
index|[]
name|array
parameter_list|)
throws|throws
name|JSONException
block|{
name|JSONArray
name|a
init|=
operator|new
name|JSONArray
argument_list|()
decl_stmt|;
if|if
condition|(
name|array
operator|!=
literal|null
condition|)
for|for
control|(
name|float
name|val
range|:
name|array
control|)
name|a
operator|.
name|put
argument_list|(
name|val
argument_list|)
expr_stmt|;
return|return
name|a
return|;
block|}
DECL|method|getJsonChunkInfo
specifier|private
name|JSONObject
name|getJsonChunkInfo
parameter_list|(
name|int
index|[]
name|chunkData
parameter_list|)
throws|throws
name|JSONException
block|{
name|JSONObject
name|jsonRect
init|=
operator|new
name|JSONObject
argument_list|()
decl_stmt|;
if|if
condition|(
name|chunkData
operator|==
literal|null
condition|)
return|return
name|jsonRect
return|;
name|jsonRect
operator|.
name|put
argument_list|(
literal|"xdivs"
argument_list|,
name|getJsonArray
argument_list|(
name|chunkData
argument_list|,
literal|3
argument_list|,
name|chunkData
index|[
literal|0
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|jsonRect
operator|.
name|put
argument_list|(
literal|"ydivs"
argument_list|,
name|getJsonArray
argument_list|(
name|chunkData
argument_list|,
literal|3
operator|+
name|chunkData
index|[
literal|0
index|]
argument_list|,
name|chunkData
index|[
literal|1
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|jsonRect
operator|.
name|put
argument_list|(
literal|"colors"
argument_list|,
name|getJsonArray
argument_list|(
name|chunkData
argument_list|,
literal|3
operator|+
name|chunkData
index|[
literal|0
index|]
operator|+
name|chunkData
index|[
literal|1
index|]
argument_list|,
name|chunkData
index|[
literal|2
index|]
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|jsonRect
return|;
block|}
DECL|method|findPatchesMarings
specifier|private
name|JSONObject
name|findPatchesMarings
parameter_list|(
name|Drawable
name|d
parameter_list|)
throws|throws
name|JSONException
throws|,
name|NoSuchFieldException
throws|,
name|IllegalAccessException
block|{
name|Field
name|mNinePatch
init|=
operator|(
operator|(
name|NinePatchDrawable
operator|)
name|d
operator|)
operator|.
name|getClass
argument_list|()
operator|.
name|getDeclaredField
argument_list|(
literal|"mNinePatch"
argument_list|)
decl_stmt|;
name|mNinePatch
operator|.
name|setAccessible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|NinePatch
name|np
init|=
operator|(
name|NinePatch
operator|)
name|mNinePatch
operator|.
name|get
argument_list|(
name|d
argument_list|)
decl_stmt|;
if|if
condition|(
name|Build
operator|.
name|VERSION
operator|.
name|SDK_INT
operator|<
literal|19
condition|)
block|{
name|Field
name|mChunk
init|=
name|np
operator|.
name|getClass
argument_list|()
operator|.
name|getDeclaredField
argument_list|(
literal|"mChunk"
argument_list|)
decl_stmt|;
name|mChunk
operator|.
name|setAccessible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
return|return
name|getJsonChunkInfo
argument_list|(
name|extractChunkInfo
argument_list|(
operator|(
name|byte
index|[]
operator|)
name|mChunk
operator|.
name|get
argument_list|(
name|np
argument_list|)
argument_list|)
argument_list|)
return|;
block|}
else|else
block|{
name|Field
name|mNativeChunk
init|=
name|np
operator|.
name|getClass
argument_list|()
operator|.
name|getDeclaredField
argument_list|(
literal|"mNativeChunk"
argument_list|)
decl_stmt|;
name|mNativeChunk
operator|.
name|setAccessible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|Build
operator|.
name|VERSION
operator|.
name|SDK_INT
operator|>
literal|19
condition|)
return|return
name|getJsonChunkInfo
argument_list|(
name|extractNativeChunkInfo20
argument_list|(
name|mNativeChunk
operator|.
name|getLong
argument_list|(
name|np
argument_list|)
argument_list|)
argument_list|)
return|;
return|return
name|getJsonChunkInfo
argument_list|(
name|extractNativeChunkInfo
argument_list|(
name|mNativeChunk
operator|.
name|getInt
argument_list|(
name|np
argument_list|)
argument_list|)
argument_list|)
return|;
block|}
block|}
DECL|class|DrawableCache
class|class
name|DrawableCache
block|{
DECL|method|DrawableCache
specifier|public
name|DrawableCache
parameter_list|(
name|JSONObject
name|json
parameter_list|,
name|Object
name|drawable
parameter_list|)
block|{
name|object
operator|=
name|json
expr_stmt|;
name|this
operator|.
name|drawable
operator|=
name|drawable
expr_stmt|;
block|}
DECL|field|object
name|JSONObject
name|object
decl_stmt|;
DECL|field|drawable
name|Object
name|drawable
decl_stmt|;
block|}
DECL|field|m_drawableCache
specifier|private
name|HashMap
argument_list|<
name|String
argument_list|,
name|DrawableCache
argument_list|>
name|m_drawableCache
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|DrawableCache
argument_list|>
argument_list|()
decl_stmt|;
DECL|method|getDrawable
specifier|public
name|JSONObject
name|getDrawable
parameter_list|(
name|Object
name|drawable
parameter_list|,
name|String
name|filename
parameter_list|,
name|Rect
name|padding
parameter_list|)
block|{
name|DrawableCache
name|dc
init|=
name|m_drawableCache
operator|.
name|get
argument_list|(
name|filename
argument_list|)
decl_stmt|;
if|if
condition|(
name|dc
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|dc
operator|.
name|drawable
operator|.
name|equals
argument_list|(
name|drawable
argument_list|)
condition|)
return|return
name|dc
operator|.
name|object
return|;
else|else
name|Log
operator|.
name|e
argument_list|(
name|QtNative
operator|.
name|QtTAG
argument_list|,
literal|"Different drawable objects points to the same file name \""
operator|+
name|filename
operator|+
literal|"\""
argument_list|)
expr_stmt|;
block|}
name|JSONObject
name|json
init|=
operator|new
name|JSONObject
argument_list|()
decl_stmt|;
name|Bitmap
name|bmp
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|drawable
operator|instanceof
name|Bitmap
condition|)
name|bmp
operator|=
operator|(
name|Bitmap
operator|)
name|drawable
expr_stmt|;
else|else
block|{
if|if
condition|(
name|drawable
operator|instanceof
name|BitmapDrawable
condition|)
name|bmp
operator|=
operator|(
operator|(
name|BitmapDrawable
operator|)
name|drawable
operator|)
operator|.
name|getBitmap
argument_list|()
expr_stmt|;
else|else
block|{
if|if
condition|(
name|drawable
operator|instanceof
name|ScaleDrawable
condition|)
block|{
return|return
name|getDrawable
argument_list|(
operator|(
operator|(
name|ScaleDrawable
operator|)
name|drawable
operator|)
operator|.
name|getDrawable
argument_list|()
argument_list|,
name|filename
argument_list|,
literal|null
argument_list|)
return|;
block|}
if|if
condition|(
name|drawable
operator|instanceof
name|LayerDrawable
condition|)
block|{
return|return
name|getLayerDrawable
argument_list|(
name|drawable
argument_list|,
name|filename
argument_list|)
return|;
block|}
if|if
condition|(
name|drawable
operator|instanceof
name|StateListDrawable
condition|)
block|{
return|return
name|getStateListDrawable
argument_list|(
name|drawable
argument_list|,
name|filename
argument_list|)
return|;
block|}
if|if
condition|(
name|drawable
operator|instanceof
name|GradientDrawable
condition|)
block|{
return|return
name|getGradientDrawable
argument_list|(
operator|(
name|GradientDrawable
operator|)
name|drawable
argument_list|)
return|;
block|}
if|if
condition|(
name|drawable
operator|instanceof
name|RotateDrawable
condition|)
block|{
return|return
name|getRotateDrawable
argument_list|(
operator|(
name|RotateDrawable
operator|)
name|drawable
argument_list|,
name|filename
argument_list|)
return|;
block|}
if|if
condition|(
name|drawable
operator|instanceof
name|AnimationDrawable
condition|)
block|{
return|return
name|getAnimationDrawable
argument_list|(
operator|(
name|AnimationDrawable
operator|)
name|drawable
argument_list|,
name|filename
argument_list|)
return|;
block|}
if|if
condition|(
name|drawable
operator|instanceof
name|ClipDrawable
condition|)
block|{
try|try
block|{
name|json
operator|.
name|put
argument_list|(
literal|"type"
argument_list|,
literal|"clipDrawable"
argument_list|)
expr_stmt|;
name|Drawable
operator|.
name|ConstantState
name|dcs
init|=
operator|(
operator|(
name|ClipDrawable
operator|)
name|drawable
operator|)
operator|.
name|getConstantState
argument_list|()
decl_stmt|;
name|Field
name|f
init|=
name|dcs
operator|.
name|getClass
argument_list|()
operator|.
name|getDeclaredField
argument_list|(
literal|"mDrawable"
argument_list|)
decl_stmt|;
name|f
operator|.
name|setAccessible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"drawable"
argument_list|,
name|getDrawable
argument_list|(
name|f
operator|.
name|get
argument_list|(
name|dcs
argument_list|)
argument_list|,
name|filename
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
literal|null
operator|!=
name|padding
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"padding"
argument_list|,
name|getJsonRect
argument_list|(
name|padding
argument_list|)
argument_list|)
expr_stmt|;
else|else
block|{
name|Rect
name|_padding
init|=
operator|new
name|Rect
argument_list|()
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|Drawable
operator|)
name|drawable
operator|)
operator|.
name|getPadding
argument_list|(
name|_padding
argument_list|)
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"padding"
argument_list|,
name|getJsonRect
argument_list|(
name|_padding
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
return|return
name|json
return|;
block|}
if|if
condition|(
name|drawable
operator|instanceof
name|ColorDrawable
condition|)
block|{
name|bmp
operator|=
name|Bitmap
operator|.
name|createBitmap
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
name|Config
operator|.
name|ARGB_8888
argument_list|)
expr_stmt|;
name|Drawable
name|d
init|=
operator|(
name|Drawable
operator|)
name|drawable
decl_stmt|;
name|d
operator|.
name|setBounds
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|d
operator|.
name|draw
argument_list|(
operator|new
name|Canvas
argument_list|(
name|bmp
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|json
operator|.
name|put
argument_list|(
literal|"type"
argument_list|,
literal|"color"
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"color"
argument_list|,
name|bmp
operator|.
name|getPixel
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
literal|null
operator|!=
name|padding
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"padding"
argument_list|,
name|getJsonRect
argument_list|(
name|padding
argument_list|)
argument_list|)
expr_stmt|;
else|else
block|{
name|Rect
name|_padding
init|=
operator|new
name|Rect
argument_list|()
decl_stmt|;
if|if
condition|(
name|d
operator|.
name|getPadding
argument_list|(
name|_padding
argument_list|)
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"padding"
argument_list|,
name|getJsonRect
argument_list|(
name|_padding
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|JSONException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
return|return
name|json
return|;
block|}
if|if
condition|(
name|drawable
operator|instanceof
name|InsetDrawable
condition|)
block|{
try|try
block|{
name|InsetDrawable
name|d
init|=
operator|(
name|InsetDrawable
operator|)
name|drawable
decl_stmt|;
name|Field
name|mInsetState
init|=
name|d
operator|.
name|getClass
argument_list|()
operator|.
name|getDeclaredField
argument_list|(
literal|"mInsetState"
argument_list|)
decl_stmt|;
name|mInsetState
operator|.
name|setAccessible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Object
name|mInsetStateObject
init|=
name|mInsetState
operator|.
name|get
argument_list|(
name|drawable
argument_list|)
decl_stmt|;
name|Field
name|mDrawable
init|=
name|mInsetStateObject
operator|.
name|getClass
argument_list|()
operator|.
name|getDeclaredField
argument_list|(
literal|"mDrawable"
argument_list|)
decl_stmt|;
name|mDrawable
operator|.
name|setAccessible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Rect
name|_padding
init|=
operator|new
name|Rect
argument_list|()
decl_stmt|;
name|boolean
name|hasPadding
init|=
name|d
operator|.
name|getPadding
argument_list|(
name|_padding
argument_list|)
decl_stmt|;
return|return
name|getDrawable
argument_list|(
name|mDrawable
operator|.
name|get
argument_list|(
name|mInsetStateObject
argument_list|)
argument_list|,
name|filename
argument_list|,
name|hasPadding
condition|?
name|_padding
else|:
literal|null
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
name|Drawable
name|d
init|=
operator|(
name|Drawable
operator|)
name|drawable
decl_stmt|;
name|int
name|w
init|=
name|d
operator|.
name|getIntrinsicWidth
argument_list|()
decl_stmt|;
name|int
name|h
init|=
name|d
operator|.
name|getIntrinsicHeight
argument_list|()
decl_stmt|;
name|d
operator|.
name|setLevel
argument_list|(
literal|10000
argument_list|)
expr_stmt|;
if|if
condition|(
name|w
operator|<
literal|1
operator|||
name|h
operator|<
literal|1
condition|)
block|{
name|w
operator|=
literal|100
expr_stmt|;
name|h
operator|=
literal|100
expr_stmt|;
block|}
name|bmp
operator|=
name|Bitmap
operator|.
name|createBitmap
argument_list|(
name|w
argument_list|,
name|h
argument_list|,
name|Config
operator|.
name|ARGB_8888
argument_list|)
expr_stmt|;
name|d
operator|.
name|setBounds
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|w
argument_list|,
name|h
argument_list|)
expr_stmt|;
name|d
operator|.
name|draw
argument_list|(
operator|new
name|Canvas
argument_list|(
name|bmp
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|drawable
operator|instanceof
name|NinePatchDrawable
condition|)
block|{
name|NinePatchDrawable
name|npd
init|=
operator|(
name|NinePatchDrawable
operator|)
name|drawable
decl_stmt|;
try|try
block|{
name|json
operator|.
name|put
argument_list|(
literal|"type"
argument_list|,
literal|"9patch"
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"drawable"
argument_list|,
name|getDrawable
argument_list|(
name|bmp
argument_list|,
name|filename
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|padding
operator|!=
literal|null
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"padding"
argument_list|,
name|getJsonRect
argument_list|(
name|padding
argument_list|)
argument_list|)
expr_stmt|;
else|else
block|{
name|Rect
name|_padding
init|=
operator|new
name|Rect
argument_list|()
decl_stmt|;
if|if
condition|(
name|npd
operator|.
name|getPadding
argument_list|(
name|_padding
argument_list|)
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"padding"
argument_list|,
name|getJsonRect
argument_list|(
name|_padding
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|json
operator|.
name|put
argument_list|(
literal|"chunkInfo"
argument_list|,
name|findPatchesMarings
argument_list|(
name|d
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|json
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
name|FileOutputStream
name|out
decl_stmt|;
try|try
block|{
name|filename
operator|=
name|m_extractPath
operator|+
name|filename
operator|+
literal|".png"
expr_stmt|;
name|out
operator|=
operator|new
name|FileOutputStream
argument_list|(
name|filename
argument_list|)
expr_stmt|;
name|bmp
operator|.
name|compress
argument_list|(
name|Bitmap
operator|.
name|CompressFormat
operator|.
name|PNG
argument_list|,
literal|100
argument_list|,
name|out
argument_list|)
expr_stmt|;
name|out
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|FileNotFoundException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
try|try
block|{
name|json
operator|.
name|put
argument_list|(
literal|"type"
argument_list|,
literal|"image"
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"path"
argument_list|,
name|filename
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"width"
argument_list|,
name|bmp
operator|.
name|getWidth
argument_list|()
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"height"
argument_list|,
name|bmp
operator|.
name|getHeight
argument_list|()
argument_list|)
expr_stmt|;
name|m_drawableCache
operator|.
name|put
argument_list|(
name|filename
argument_list|,
operator|new
name|DrawableCache
argument_list|(
name|json
argument_list|,
name|drawable
argument_list|)
argument_list|)
expr_stmt|;
comment|//            MinistroActivity.nativeChmode(filename, 0644);
block|}
catch|catch
parameter_list|(
name|JSONException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
return|return
name|json
return|;
block|}
DECL|method|extractViewInformations
specifier|public
name|void
name|extractViewInformations
parameter_list|(
name|String
name|styleName
parameter_list|,
name|int
name|styleId
parameter_list|,
name|JSONObject
name|json
parameter_list|,
name|String
name|qtClassName
parameter_list|,
name|AttributeSet
name|attribSet
parameter_list|)
block|{
try|try
block|{
name|int
index|[]
name|viewAttrs
decl_stmt|;
name|viewAttrs
operator|=
operator|(
name|int
index|[]
operator|)
name|styleableClass
operator|.
name|getDeclaredField
argument_list|(
literal|"View"
argument_list|)
operator|.
name|get
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|TypedArray
name|a
init|=
name|m_theme
operator|.
name|obtainStyledAttributes
argument_list|(
name|attribSet
argument_list|,
name|viewAttrs
argument_list|,
name|styleId
argument_list|,
literal|0
argument_list|)
decl_stmt|;
if|if
condition|(
literal|null
operator|!=
name|qtClassName
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"qtClass"
argument_list|,
name|qtClassName
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"defaultBackgroundColor"
argument_list|,
name|defaultBackgroundColor
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"defaultTextColorPrimary"
argument_list|,
name|defaultTextColor
argument_list|)
expr_stmt|;
specifier|final
name|int
name|N
init|=
name|a
operator|.
name|getIndexCount
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|N
condition|;
name|i
operator|++
control|)
block|{
name|int
name|attr
init|=
name|a
operator|.
name|getIndex
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|attr
operator|==
name|View_background
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"View_background"
argument_list|,
name|getDrawable
argument_list|(
name|a
operator|.
name|getDrawable
argument_list|(
name|attr
argument_list|)
argument_list|,
name|styleName
operator|+
literal|"_View_background"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|View_padding
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"View_padding"
argument_list|,
name|a
operator|.
name|getDimensionPixelSize
argument_list|(
name|attr
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|View_paddingLeft
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"View_paddingLeft"
argument_list|,
name|a
operator|.
name|getDimensionPixelSize
argument_list|(
name|attr
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|View_paddingTop
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"View_paddingTop"
argument_list|,
name|a
operator|.
name|getDimensionPixelSize
argument_list|(
name|attr
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|View_paddingRight
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"View_paddingRight"
argument_list|,
name|a
operator|.
name|getDimensionPixelSize
argument_list|(
name|attr
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|View_paddingBottom
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"View_paddingBottom"
argument_list|,
name|a
operator|.
name|getDimensionPixelSize
argument_list|(
name|attr
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|View_scrollX
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"View_paddingBottom"
argument_list|,
name|a
operator|.
name|getDimensionPixelOffset
argument_list|(
name|attr
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|View_scrollY
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"View_scrollY"
argument_list|,
name|a
operator|.
name|getDimensionPixelOffset
argument_list|(
name|attr
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|View_id
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"View_id"
argument_list|,
name|a
operator|.
name|getResourceId
argument_list|(
name|attr
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|View_tag
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"View_tag"
argument_list|,
name|a
operator|.
name|getText
argument_list|(
name|attr
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|View_fitsSystemWindows
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"View_fitsSystemWindows"
argument_list|,
name|a
operator|.
name|getBoolean
argument_list|(
name|attr
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|View_focusable
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"View_focusable"
argument_list|,
name|a
operator|.
name|getBoolean
argument_list|(
name|attr
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|View_focusableInTouchMode
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"View_focusableInTouchMode"
argument_list|,
name|a
operator|.
name|getBoolean
argument_list|(
name|attr
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|View_clickable
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"View_clickable"
argument_list|,
name|a
operator|.
name|getBoolean
argument_list|(
name|attr
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|View_longClickable
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"View_longClickable"
argument_list|,
name|a
operator|.
name|getBoolean
argument_list|(
name|attr
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|View_saveEnabled
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"View_saveEnabled"
argument_list|,
name|a
operator|.
name|getBoolean
argument_list|(
name|attr
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|View_duplicateParentState
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"View_duplicateParentState"
argument_list|,
name|a
operator|.
name|getBoolean
argument_list|(
name|attr
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|View_visibility
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"View_visibility"
argument_list|,
name|a
operator|.
name|getInt
argument_list|(
name|attr
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|View_drawingCacheQuality
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"View_drawingCacheQuality"
argument_list|,
name|a
operator|.
name|getInt
argument_list|(
name|attr
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|View_drawingCacheQuality
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"View_contentDescription"
argument_list|,
name|a
operator|.
name|getString
argument_list|(
name|attr
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|View_soundEffectsEnabled
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"View_soundEffectsEnabled"
argument_list|,
name|a
operator|.
name|getBoolean
argument_list|(
name|attr
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|View_hapticFeedbackEnabled
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"View_hapticFeedbackEnabled"
argument_list|,
name|a
operator|.
name|getBoolean
argument_list|(
name|attr
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|View_scrollbars
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"View_scrollbars"
argument_list|,
name|a
operator|.
name|getInt
argument_list|(
name|attr
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|View_fadingEdge
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"View_fadingEdge"
argument_list|,
name|a
operator|.
name|getInt
argument_list|(
name|attr
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|View_scrollbarStyle
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"View_scrollbarStyle"
argument_list|,
name|a
operator|.
name|getInt
argument_list|(
name|attr
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|View_scrollbarFadeDuration
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"View_scrollbarFadeDuration"
argument_list|,
name|a
operator|.
name|getInt
argument_list|(
name|attr
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|View_scrollbarDefaultDelayBeforeFade
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"View_scrollbarDefaultDelayBeforeFade"
argument_list|,
name|a
operator|.
name|getInt
argument_list|(
name|attr
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|View_scrollbarSize
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"View_scrollbarSize"
argument_list|,
name|a
operator|.
name|getDimensionPixelSize
argument_list|(
name|attr
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|View_scrollbarThumbHorizontal
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"View_scrollbarThumbHorizontal"
argument_list|,
name|getDrawable
argument_list|(
name|a
operator|.
name|getDrawable
argument_list|(
name|attr
argument_list|)
argument_list|,
name|styleName
operator|+
literal|"_View_scrollbarThumbHorizontal"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|View_scrollbarThumbVertical
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"View_scrollbarThumbVertical"
argument_list|,
name|getDrawable
argument_list|(
name|a
operator|.
name|getDrawable
argument_list|(
name|attr
argument_list|)
argument_list|,
name|styleName
operator|+
literal|"_View_scrollbarThumbVertical"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|View_scrollbarTrackHorizontal
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"View_scrollbarTrackHorizontal"
argument_list|,
name|getDrawable
argument_list|(
name|a
operator|.
name|getDrawable
argument_list|(
name|attr
argument_list|)
argument_list|,
name|styleName
operator|+
literal|"_View_scrollbarTrackHorizontal"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|View_scrollbarTrackVertical
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"View_scrollbarTrackVertical"
argument_list|,
name|getDrawable
argument_list|(
name|a
operator|.
name|getDrawable
argument_list|(
name|attr
argument_list|)
argument_list|,
name|styleName
operator|+
literal|"_View_scrollbarTrackVertical"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|View_isScrollContainer
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"View_isScrollContainer"
argument_list|,
name|a
operator|.
name|getBoolean
argument_list|(
name|attr
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|View_keepScreenOn
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"View_keepScreenOn"
argument_list|,
name|a
operator|.
name|getBoolean
argument_list|(
name|attr
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|View_filterTouchesWhenObscured
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"View_filterTouchesWhenObscured"
argument_list|,
name|a
operator|.
name|getBoolean
argument_list|(
name|attr
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|View_nextFocusLeft
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"View_nextFocusLeft"
argument_list|,
name|a
operator|.
name|getResourceId
argument_list|(
name|attr
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|View_nextFocusRight
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"View_nextFocusRight"
argument_list|,
name|a
operator|.
name|getResourceId
argument_list|(
name|attr
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|View_nextFocusUp
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"View_nextFocusUp"
argument_list|,
name|a
operator|.
name|getResourceId
argument_list|(
name|attr
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|View_nextFocusDown
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"View_nextFocusDown"
argument_list|,
name|a
operator|.
name|getResourceId
argument_list|(
name|attr
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|View_minWidth
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"View_minWidth"
argument_list|,
name|a
operator|.
name|getDimensionPixelSize
argument_list|(
name|attr
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|View_minHeight
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"View_minHeight"
argument_list|,
name|a
operator|.
name|getDimensionPixelSize
argument_list|(
name|attr
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|View_onClick
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"View_onClick"
argument_list|,
name|a
operator|.
name|getString
argument_list|(
name|attr
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|View_overScrollMode
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"View_overScrollMode"
argument_list|,
name|a
operator|.
name|getInt
argument_list|(
name|attr
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|View_paddingStart
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"View_paddingStart"
argument_list|,
name|a
operator|.
name|getDimensionPixelSize
argument_list|(
name|attr
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|View_paddingEnd
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"View_paddingEnd"
argument_list|,
name|a
operator|.
name|getDimensionPixelSize
argument_list|(
name|attr
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|a
operator|.
name|recycle
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|extractTextAppearance
specifier|public
name|JSONObject
name|extractTextAppearance
parameter_list|(
name|int
name|styleId
parameter_list|)
block|{
name|JSONObject
name|json
init|=
operator|new
name|JSONObject
argument_list|()
decl_stmt|;
try|try
block|{
name|TypedArray
name|a
init|=
name|m_theme
operator|.
name|obtainStyledAttributes
argument_list|(
name|styleId
argument_list|,
operator|(
name|int
index|[]
operator|)
name|styleableClass
operator|.
name|getDeclaredField
argument_list|(
literal|"TextAppearance"
argument_list|)
operator|.
name|get
argument_list|(
literal|null
argument_list|)
argument_list|)
decl_stmt|;
name|int
name|n
init|=
name|a
operator|.
name|getIndexCount
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|n
condition|;
name|i
operator|++
control|)
block|{
name|int
name|attr
init|=
name|a
operator|.
name|getIndex
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|attr
operator|==
name|TextAppearance_textColorHighlight
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextAppearance_textColorHighlight"
argument_list|,
name|a
operator|.
name|getColor
argument_list|(
name|attr
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextAppearance_textColor
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextAppearance_textColor"
argument_list|,
name|getColorStateList
argument_list|(
name|a
operator|.
name|getColorStateList
argument_list|(
name|attr
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextAppearance_textColorHint
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextAppearance_textColorHint"
argument_list|,
name|getColorStateList
argument_list|(
name|a
operator|.
name|getColorStateList
argument_list|(
name|attr
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextAppearance_textColorLink
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextAppearance_textColorLink"
argument_list|,
name|getColorStateList
argument_list|(
name|a
operator|.
name|getColorStateList
argument_list|(
name|attr
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextAppearance_textSize
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextAppearance_textSize"
argument_list|,
name|a
operator|.
name|getDimensionPixelSize
argument_list|(
name|attr
argument_list|,
literal|15
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextAppearance_typeface
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextAppearance_typeface"
argument_list|,
name|a
operator|.
name|getInt
argument_list|(
name|attr
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextAppearance_textStyle
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextAppearance_textStyle"
argument_list|,
name|a
operator|.
name|getInt
argument_list|(
name|attr
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextAppearance_textAllCaps
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextAppearance_textAllCaps"
argument_list|,
name|a
operator|.
name|getBoolean
argument_list|(
name|attr
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|a
operator|.
name|recycle
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
return|return
name|json
return|;
block|}
DECL|method|extractTextAppearanceInformations
specifier|public
name|JSONObject
name|extractTextAppearanceInformations
parameter_list|(
name|String
name|styleName
parameter_list|,
name|String
name|qtClass
parameter_list|,
name|AttributeSet
name|attribSet
parameter_list|,
name|int
name|textAppearance
parameter_list|)
block|{
name|JSONObject
name|json
init|=
operator|new
name|JSONObject
argument_list|()
decl_stmt|;
try|try
block|{
name|int
name|textColorHighlight
init|=
literal|0
decl_stmt|;
comment|//
name|ColorStateList
name|textColor
init|=
literal|null
decl_stmt|;
comment|//
name|ColorStateList
name|textColorHint
init|=
literal|null
decl_stmt|;
comment|//
name|ColorStateList
name|textColorLink
init|=
literal|null
decl_stmt|;
comment|//
name|int
name|textSize
init|=
literal|15
decl_stmt|;
comment|//
name|int
name|typefaceIndex
init|=
operator|-
literal|1
decl_stmt|;
comment|//
name|int
name|styleIndex
init|=
operator|-
literal|1
decl_stmt|;
name|boolean
name|allCaps
init|=
literal|false
decl_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|attrClass
init|=
name|Class
operator|.
name|forName
argument_list|(
literal|"android.R$attr"
argument_list|)
decl_stmt|;
name|int
name|styleId
init|=
name|attrClass
operator|.
name|getDeclaredField
argument_list|(
name|styleName
argument_list|)
operator|.
name|getInt
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|extractViewInformations
argument_list|(
name|styleName
argument_list|,
name|styleId
argument_list|,
name|json
argument_list|,
name|qtClass
argument_list|,
name|attribSet
argument_list|)
expr_stmt|;
name|int
index|[]
name|textViewAttrs
init|=
operator|(
name|int
index|[]
operator|)
name|styleableClass
operator|.
name|getDeclaredField
argument_list|(
literal|"TextView"
argument_list|)
operator|.
name|get
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|TypedArray
name|a
init|=
name|m_theme
operator|.
name|obtainStyledAttributes
argument_list|(
literal|null
argument_list|,
name|textViewAttrs
argument_list|,
name|styleId
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|TypedArray
name|appearance
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|-
literal|1
operator|==
name|textAppearance
condition|)
name|textAppearance
operator|=
name|a
operator|.
name|getResourceId
argument_list|(
name|styleableClass
operator|.
name|getDeclaredField
argument_list|(
literal|"TextView_textAppearance"
argument_list|)
operator|.
name|getInt
argument_list|(
literal|null
argument_list|)
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
if|if
condition|(
name|textAppearance
operator|!=
operator|-
literal|1
condition|)
name|appearance
operator|=
name|m_theme
operator|.
name|obtainStyledAttributes
argument_list|(
name|textAppearance
argument_list|,
operator|(
name|int
index|[]
operator|)
name|styleableClass
operator|.
name|getDeclaredField
argument_list|(
literal|"TextAppearance"
argument_list|)
operator|.
name|get
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|appearance
operator|!=
literal|null
condition|)
block|{
name|int
name|n
init|=
name|appearance
operator|.
name|getIndexCount
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|n
condition|;
name|i
operator|++
control|)
block|{
name|int
name|attr
init|=
name|appearance
operator|.
name|getIndex
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|attr
operator|==
name|TextAppearance_textColorHighlight
condition|)
name|textColorHighlight
operator|=
name|appearance
operator|.
name|getColor
argument_list|(
name|attr
argument_list|,
name|textColorHighlight
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextAppearance_textColor
condition|)
name|textColor
operator|=
name|appearance
operator|.
name|getColorStateList
argument_list|(
name|attr
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextAppearance_textColorHint
condition|)
name|textColorHint
operator|=
name|appearance
operator|.
name|getColorStateList
argument_list|(
name|attr
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextAppearance_textColorLink
condition|)
name|textColorLink
operator|=
name|appearance
operator|.
name|getColorStateList
argument_list|(
name|attr
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextAppearance_textSize
condition|)
name|textSize
operator|=
name|appearance
operator|.
name|getDimensionPixelSize
argument_list|(
name|attr
argument_list|,
name|textSize
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextAppearance_typeface
condition|)
name|typefaceIndex
operator|=
name|appearance
operator|.
name|getInt
argument_list|(
name|attr
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextAppearance_textStyle
condition|)
name|styleIndex
operator|=
name|appearance
operator|.
name|getInt
argument_list|(
name|attr
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextAppearance_textAllCaps
condition|)
name|allCaps
operator|=
name|appearance
operator|.
name|getBoolean
argument_list|(
name|attr
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
name|appearance
operator|.
name|recycle
argument_list|()
expr_stmt|;
block|}
name|int
name|n
init|=
name|a
operator|.
name|getIndexCount
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|n
condition|;
name|i
operator|++
control|)
block|{
name|int
name|attr
init|=
name|a
operator|.
name|getIndex
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|attr
operator|==
name|TextView_editable
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_editable"
argument_list|,
name|a
operator|.
name|getBoolean
argument_list|(
name|attr
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_inputMethod
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_inputMethod"
argument_list|,
name|a
operator|.
name|getText
argument_list|(
name|attr
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_numeric
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_numeric"
argument_list|,
name|a
operator|.
name|getInt
argument_list|(
name|attr
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_digits
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_digits"
argument_list|,
name|a
operator|.
name|getText
argument_list|(
name|attr
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_phoneNumber
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_phoneNumber"
argument_list|,
name|a
operator|.
name|getBoolean
argument_list|(
name|attr
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_autoText
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_autoText"
argument_list|,
name|a
operator|.
name|getBoolean
argument_list|(
name|attr
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_capitalize
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_capitalize"
argument_list|,
name|a
operator|.
name|getInt
argument_list|(
name|attr
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_bufferType
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_bufferType"
argument_list|,
name|a
operator|.
name|getInt
argument_list|(
name|attr
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_selectAllOnFocus
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_selectAllOnFocus"
argument_list|,
name|a
operator|.
name|getBoolean
argument_list|(
name|attr
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_autoLink
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_autoLink"
argument_list|,
name|a
operator|.
name|getInt
argument_list|(
name|attr
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_linksClickable
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_linksClickable"
argument_list|,
name|a
operator|.
name|getBoolean
argument_list|(
name|attr
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_linksClickable
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_linksClickable"
argument_list|,
name|a
operator|.
name|getBoolean
argument_list|(
name|attr
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_drawableLeft
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_drawableLeft"
argument_list|,
name|getDrawable
argument_list|(
name|a
operator|.
name|getDrawable
argument_list|(
name|attr
argument_list|)
argument_list|,
name|styleName
operator|+
literal|"_TextView_drawableLeft"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_drawableTop
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_drawableTop"
argument_list|,
name|getDrawable
argument_list|(
name|a
operator|.
name|getDrawable
argument_list|(
name|attr
argument_list|)
argument_list|,
name|styleName
operator|+
literal|"_TextView_drawableTop"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_drawableRight
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_drawableRight"
argument_list|,
name|getDrawable
argument_list|(
name|a
operator|.
name|getDrawable
argument_list|(
name|attr
argument_list|)
argument_list|,
name|styleName
operator|+
literal|"_TextView_drawableRight"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_drawableBottom
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_drawableBottom"
argument_list|,
name|getDrawable
argument_list|(
name|a
operator|.
name|getDrawable
argument_list|(
name|attr
argument_list|)
argument_list|,
name|styleName
operator|+
literal|"_TextView_drawableBottom"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_drawableStart
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_drawableStart"
argument_list|,
name|getDrawable
argument_list|(
name|a
operator|.
name|getDrawable
argument_list|(
name|attr
argument_list|)
argument_list|,
name|styleName
operator|+
literal|"_TextView_drawableStart"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_drawableEnd
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_drawableEnd"
argument_list|,
name|getDrawable
argument_list|(
name|a
operator|.
name|getDrawable
argument_list|(
name|attr
argument_list|)
argument_list|,
name|styleName
operator|+
literal|"_TextView_drawableEnd"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_drawablePadding
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_drawablePadding"
argument_list|,
name|a
operator|.
name|getDimensionPixelSize
argument_list|(
name|attr
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_textCursorDrawable
condition|)
block|{
try|try
block|{
name|json
operator|.
name|put
argument_list|(
literal|"TextView_textCursorDrawable"
argument_list|,
name|getDrawable
argument_list|(
name|a
operator|.
name|getDrawable
argument_list|(
name|attr
argument_list|)
argument_list|,
name|styleName
operator|+
literal|"_TextView_textCursorDrawable"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e_
parameter_list|)
block|{
try|try
block|{
name|json
operator|.
name|put
argument_list|(
literal|"TextView_textCursorDrawable"
argument_list|,
name|getDrawable
argument_list|(
name|m_context
operator|.
name|getResources
argument_list|()
operator|.
name|getDrawable
argument_list|(
name|a
operator|.
name|getResourceId
argument_list|(
name|attr
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|,
name|styleName
operator|+
literal|"_TextView_textCursorDrawable"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
block|}
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_maxLines
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_maxLines"
argument_list|,
name|a
operator|.
name|getInt
argument_list|(
name|attr
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_maxHeight
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_maxHeight"
argument_list|,
name|a
operator|.
name|getDimensionPixelSize
argument_list|(
name|attr
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_lines
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_lines"
argument_list|,
name|a
operator|.
name|getInt
argument_list|(
name|attr
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_height
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_height"
argument_list|,
name|a
operator|.
name|getDimensionPixelSize
argument_list|(
name|attr
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_minLines
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_minLines"
argument_list|,
name|a
operator|.
name|getInt
argument_list|(
name|attr
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_minHeight
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_minHeight"
argument_list|,
name|a
operator|.
name|getDimensionPixelSize
argument_list|(
name|attr
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_maxEms
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_maxEms"
argument_list|,
name|a
operator|.
name|getInt
argument_list|(
name|attr
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_maxWidth
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_maxWidth"
argument_list|,
name|a
operator|.
name|getDimensionPixelSize
argument_list|(
name|attr
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_ems
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_ems"
argument_list|,
name|a
operator|.
name|getInt
argument_list|(
name|attr
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_width
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_width"
argument_list|,
name|a
operator|.
name|getDimensionPixelSize
argument_list|(
name|attr
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_minEms
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_minEms"
argument_list|,
name|a
operator|.
name|getInt
argument_list|(
name|attr
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_minWidth
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_minWidth"
argument_list|,
name|a
operator|.
name|getDimensionPixelSize
argument_list|(
name|attr
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_gravity
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_gravity"
argument_list|,
name|a
operator|.
name|getInt
argument_list|(
name|attr
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_hint
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_hint"
argument_list|,
name|a
operator|.
name|getText
argument_list|(
name|attr
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_text
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_text"
argument_list|,
name|a
operator|.
name|getText
argument_list|(
name|attr
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_scrollHorizontally
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_scrollHorizontally"
argument_list|,
name|a
operator|.
name|getBoolean
argument_list|(
name|attr
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_singleLine
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_singleLine"
argument_list|,
name|a
operator|.
name|getBoolean
argument_list|(
name|attr
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_ellipsize
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_ellipsize"
argument_list|,
name|a
operator|.
name|getInt
argument_list|(
name|attr
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_marqueeRepeatLimit
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_marqueeRepeatLimit"
argument_list|,
name|a
operator|.
name|getInt
argument_list|(
name|attr
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_includeFontPadding
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_includeFontPadding"
argument_list|,
name|a
operator|.
name|getBoolean
argument_list|(
name|attr
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_cursorVisible
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_cursorVisible"
argument_list|,
name|a
operator|.
name|getBoolean
argument_list|(
name|attr
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_maxLength
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_maxLength"
argument_list|,
name|a
operator|.
name|getInt
argument_list|(
name|attr
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_textScaleX
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_textScaleX"
argument_list|,
name|a
operator|.
name|getFloat
argument_list|(
name|attr
argument_list|,
literal|1.0f
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_freezesText
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_freezesText"
argument_list|,
name|a
operator|.
name|getBoolean
argument_list|(
name|attr
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_shadowColor
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_shadowColor"
argument_list|,
name|a
operator|.
name|getInt
argument_list|(
name|attr
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_shadowDx
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_shadowDx"
argument_list|,
name|a
operator|.
name|getFloat
argument_list|(
name|attr
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_shadowDy
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_shadowDy"
argument_list|,
name|a
operator|.
name|getFloat
argument_list|(
name|attr
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_shadowRadius
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_shadowRadius"
argument_list|,
name|a
operator|.
name|getFloat
argument_list|(
name|attr
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_enabled
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_enabled"
argument_list|,
name|a
operator|.
name|getBoolean
argument_list|(
name|attr
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_textColorHighlight
condition|)
name|textColorHighlight
operator|=
name|a
operator|.
name|getColor
argument_list|(
name|attr
argument_list|,
name|textColorHighlight
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_textColor
condition|)
name|textColor
operator|=
name|a
operator|.
name|getColorStateList
argument_list|(
name|attr
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_textColorHint
condition|)
name|textColorHint
operator|=
name|a
operator|.
name|getColorStateList
argument_list|(
name|attr
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_textColorLink
condition|)
name|textColorLink
operator|=
name|a
operator|.
name|getColorStateList
argument_list|(
name|attr
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_textSize
condition|)
name|textSize
operator|=
name|a
operator|.
name|getDimensionPixelSize
argument_list|(
name|attr
argument_list|,
name|textSize
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_typeface
condition|)
name|typefaceIndex
operator|=
name|a
operator|.
name|getInt
argument_list|(
name|attr
argument_list|,
name|typefaceIndex
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_textStyle
condition|)
name|styleIndex
operator|=
name|a
operator|.
name|getInt
argument_list|(
name|attr
argument_list|,
name|styleIndex
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_password
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_password"
argument_list|,
name|a
operator|.
name|getBoolean
argument_list|(
name|attr
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_lineSpacingExtra
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_lineSpacingExtra"
argument_list|,
name|a
operator|.
name|getDimensionPixelSize
argument_list|(
name|attr
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_lineSpacingMultiplier
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_lineSpacingMultiplier"
argument_list|,
name|a
operator|.
name|getFloat
argument_list|(
name|attr
argument_list|,
literal|1.0f
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_inputType
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_inputType"
argument_list|,
name|a
operator|.
name|getInt
argument_list|(
name|attr
argument_list|,
name|EditorInfo
operator|.
name|TYPE_NULL
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_imeOptions
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_imeOptions"
argument_list|,
name|a
operator|.
name|getInt
argument_list|(
name|attr
argument_list|,
name|EditorInfo
operator|.
name|IME_NULL
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_imeActionLabel
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_imeActionLabel"
argument_list|,
name|a
operator|.
name|getText
argument_list|(
name|attr
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_imeActionId
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_imeActionId"
argument_list|,
name|a
operator|.
name|getInt
argument_list|(
name|attr
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_privateImeOptions
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_privateImeOptions"
argument_list|,
name|a
operator|.
name|getString
argument_list|(
name|attr
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_textSelectHandleLeft
operator|&&
name|styleName
operator|.
name|equals
argument_list|(
literal|"textViewStyle"
argument_list|)
condition|)
block|{
try|try
block|{
name|json
operator|.
name|put
argument_list|(
literal|"TextView_textSelectHandleLeft"
argument_list|,
name|getDrawable
argument_list|(
name|a
operator|.
name|getDrawable
argument_list|(
name|attr
argument_list|)
argument_list|,
name|styleName
operator|+
literal|"_TextView_textSelectHandleLeft"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|_e
parameter_list|)
block|{
try|try
block|{
name|json
operator|.
name|put
argument_list|(
literal|"TextView_textSelectHandleLeft"
argument_list|,
name|getDrawable
argument_list|(
name|m_context
operator|.
name|getResources
argument_list|()
operator|.
name|getDrawable
argument_list|(
name|a
operator|.
name|getResourceId
argument_list|(
name|attr
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|,
name|styleName
operator|+
literal|"_TextView_textSelectHandleLeft"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
block|}
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_textSelectHandleRight
operator|&&
name|styleName
operator|.
name|equals
argument_list|(
literal|"textViewStyle"
argument_list|)
condition|)
block|{
try|try
block|{
name|json
operator|.
name|put
argument_list|(
literal|"TextView_textSelectHandleRight"
argument_list|,
name|getDrawable
argument_list|(
name|a
operator|.
name|getDrawable
argument_list|(
name|attr
argument_list|)
argument_list|,
name|styleName
operator|+
literal|"_TextView_textSelectHandleRight"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|_e
parameter_list|)
block|{
try|try
block|{
name|json
operator|.
name|put
argument_list|(
literal|"TextView_textSelectHandleRight"
argument_list|,
name|getDrawable
argument_list|(
name|m_context
operator|.
name|getResources
argument_list|()
operator|.
name|getDrawable
argument_list|(
name|a
operator|.
name|getResourceId
argument_list|(
name|attr
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|,
name|styleName
operator|+
literal|"_TextView_textSelectHandleRight"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
block|}
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_textSelectHandle
operator|&&
name|styleName
operator|.
name|equals
argument_list|(
literal|"textViewStyle"
argument_list|)
condition|)
block|{
try|try
block|{
name|json
operator|.
name|put
argument_list|(
literal|"TextView_textSelectHandle"
argument_list|,
name|getDrawable
argument_list|(
name|a
operator|.
name|getDrawable
argument_list|(
name|attr
argument_list|)
argument_list|,
name|styleName
operator|+
literal|"_TextView_textSelectHandle"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|_e
parameter_list|)
block|{
try|try
block|{
name|json
operator|.
name|put
argument_list|(
literal|"TextView_textSelectHandle"
argument_list|,
name|getDrawable
argument_list|(
name|m_context
operator|.
name|getResources
argument_list|()
operator|.
name|getDrawable
argument_list|(
name|a
operator|.
name|getResourceId
argument_list|(
name|attr
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|,
name|styleName
operator|+
literal|"_TextView_textSelectHandle"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
block|}
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_textIsSelectable
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"TextView_textIsSelectable"
argument_list|,
name|a
operator|.
name|getBoolean
argument_list|(
name|attr
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|attr
operator|==
name|TextView_textAllCaps
condition|)
name|allCaps
operator|=
name|a
operator|.
name|getBoolean
argument_list|(
name|attr
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
name|a
operator|.
name|recycle
argument_list|()
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"TextAppearance_textColorHighlight"
argument_list|,
name|textColorHighlight
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"TextAppearance_textColor"
argument_list|,
name|getColorStateList
argument_list|(
name|textColor
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"TextAppearance_textColorHint"
argument_list|,
name|getColorStateList
argument_list|(
name|textColorHint
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"TextAppearance_textColorLink"
argument_list|,
name|getColorStateList
argument_list|(
name|textColorLink
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"TextAppearance_textSize"
argument_list|,
name|textSize
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"TextAppearance_typeface"
argument_list|,
name|typefaceIndex
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"TextAppearance_textStyle"
argument_list|,
name|styleIndex
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"TextAppearance_textAllCaps"
argument_list|,
name|allCaps
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
return|return
name|json
return|;
block|}
DECL|field|sScaleTypeArray
specifier|final
name|String
index|[]
name|sScaleTypeArray
init|=
block|{
literal|"MATRIX"
block|,
literal|"FIT_XY"
block|,
literal|"FIT_START"
block|,
literal|"FIT_CENTER"
block|,
literal|"FIT_END"
block|,
literal|"CENTER"
block|,
literal|"CENTER_CROP"
block|,
literal|"CENTER_INSIDE"
block|}
decl_stmt|;
DECL|method|extractImageViewInformations
specifier|public
name|JSONObject
name|extractImageViewInformations
parameter_list|(
name|String
name|styleName
parameter_list|,
name|String
name|qtClassName
parameter_list|)
block|{
name|JSONObject
name|json
init|=
operator|new
name|JSONObject
argument_list|()
decl_stmt|;
try|try
block|{
name|Class
argument_list|<
name|?
argument_list|>
name|attrClass
init|=
name|Class
operator|.
name|forName
argument_list|(
literal|"android.R$attr"
argument_list|)
decl_stmt|;
name|int
name|styleId
init|=
name|attrClass
operator|.
name|getDeclaredField
argument_list|(
name|styleName
argument_list|)
operator|.
name|getInt
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|extractViewInformations
argument_list|(
name|styleName
argument_list|,
name|styleId
argument_list|,
name|json
argument_list|,
name|qtClassName
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|int
index|[]
name|imageViewAttrs
init|=
operator|(
name|int
index|[]
operator|)
name|styleableClass
operator|.
name|getDeclaredField
argument_list|(
literal|"ImageView"
argument_list|)
operator|.
name|get
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|TypedArray
name|a
init|=
name|m_theme
operator|.
name|obtainStyledAttributes
argument_list|(
literal|null
argument_list|,
name|imageViewAttrs
argument_list|,
name|styleId
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|Drawable
name|d
init|=
name|a
operator|.
name|getDrawable
argument_list|(
name|ImageView_src
argument_list|)
decl_stmt|;
if|if
condition|(
name|d
operator|!=
literal|null
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"ImageView_src"
argument_list|,
name|getDrawable
argument_list|(
name|d
argument_list|,
name|styleName
operator|+
literal|"_ImageView_src"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"ImageView_baselineAlignBottom"
argument_list|,
name|a
operator|.
name|getBoolean
argument_list|(
name|ImageView_baselineAlignBottom
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"ImageView_adjustViewBounds"
argument_list|,
name|a
operator|.
name|getBoolean
argument_list|(
name|ImageView_adjustViewBounds
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"ImageView_maxWidth"
argument_list|,
name|a
operator|.
name|getDimensionPixelSize
argument_list|(
name|ImageView_maxWidth
argument_list|,
name|Integer
operator|.
name|MAX_VALUE
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"ImageView_maxHeight"
argument_list|,
name|a
operator|.
name|getDimensionPixelSize
argument_list|(
name|ImageView_maxHeight
argument_list|,
name|Integer
operator|.
name|MAX_VALUE
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|index
init|=
name|a
operator|.
name|getInt
argument_list|(
name|ImageView_scaleType
argument_list|,
operator|-
literal|1
argument_list|)
decl_stmt|;
if|if
condition|(
name|index
operator|>=
literal|0
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"ImageView_scaleType"
argument_list|,
name|sScaleTypeArray
index|[
name|index
index|]
argument_list|)
expr_stmt|;
name|int
name|tint
init|=
name|a
operator|.
name|getInt
argument_list|(
name|ImageView_tint
argument_list|,
literal|0
argument_list|)
decl_stmt|;
if|if
condition|(
name|tint
operator|!=
literal|0
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"ImageView_tint"
argument_list|,
name|tint
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"ImageView_cropToPadding"
argument_list|,
name|a
operator|.
name|getBoolean
argument_list|(
name|ImageView_cropToPadding
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|a
operator|.
name|recycle
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
return|return
name|json
return|;
block|}
DECL|method|extractCompoundButton
name|void
name|extractCompoundButton
parameter_list|(
name|SimpleJsonWriter
name|jsonWriter
parameter_list|,
name|String
name|styleName
parameter_list|,
name|String
name|qtClass
parameter_list|)
block|{
name|JSONObject
name|json
init|=
name|extractTextAppearanceInformations
argument_list|(
name|styleName
argument_list|,
name|qtClass
argument_list|,
literal|null
argument_list|,
operator|-
literal|1
argument_list|)
decl_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|attrClass
decl_stmt|;
try|try
block|{
name|attrClass
operator|=
name|Class
operator|.
name|forName
argument_list|(
literal|"android.R$attr"
argument_list|)
expr_stmt|;
name|int
name|styleId
init|=
name|attrClass
operator|.
name|getDeclaredField
argument_list|(
name|styleName
argument_list|)
operator|.
name|getInt
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|int
index|[]
name|compoundButtonAttrs
init|=
operator|(
name|int
index|[]
operator|)
name|styleableClass
operator|.
name|getDeclaredField
argument_list|(
literal|"CompoundButton"
argument_list|)
operator|.
name|get
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|TypedArray
name|a
init|=
name|m_theme
operator|.
name|obtainStyledAttributes
argument_list|(
literal|null
argument_list|,
name|compoundButtonAttrs
argument_list|,
name|styleId
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|Drawable
name|d
init|=
name|a
operator|.
name|getDrawable
argument_list|(
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"CompoundButton_button"
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|d
operator|!=
literal|null
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"CompoundButton_button"
argument_list|,
name|getDrawable
argument_list|(
name|d
argument_list|,
name|styleName
operator|+
literal|"_CompoundButton_button"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|a
operator|.
name|recycle
argument_list|()
expr_stmt|;
name|jsonWriter
operator|.
name|name
argument_list|(
name|styleName
argument_list|)
operator|.
name|value
argument_list|(
name|json
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|extractProgressBarInfo
name|void
name|extractProgressBarInfo
parameter_list|(
name|JSONObject
name|json
parameter_list|,
name|String
name|styleName
parameter_list|)
block|{
name|Class
argument_list|<
name|?
argument_list|>
name|attrClass
decl_stmt|;
try|try
block|{
name|attrClass
operator|=
name|Class
operator|.
name|forName
argument_list|(
literal|"android.R$attr"
argument_list|)
expr_stmt|;
name|int
name|styleId
init|=
name|attrClass
operator|.
name|getDeclaredField
argument_list|(
name|styleName
argument_list|)
operator|.
name|getInt
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|int
index|[]
name|progressBarAttrs
init|=
operator|(
name|int
index|[]
operator|)
name|styleableClass
operator|.
name|getDeclaredField
argument_list|(
literal|"ProgressBar"
argument_list|)
operator|.
name|get
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|TypedArray
name|a
init|=
name|m_theme
operator|.
name|obtainStyledAttributes
argument_list|(
literal|null
argument_list|,
name|progressBarAttrs
argument_list|,
name|styleId
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|int
name|mMinWidth
init|=
literal|24
decl_stmt|;
name|int
name|mMaxWidth
init|=
literal|48
decl_stmt|;
name|int
name|mMinHeight
init|=
literal|24
decl_stmt|;
name|int
name|mMaxHeight
init|=
literal|48
decl_stmt|;
name|mMinWidth
operator|=
name|a
operator|.
name|getDimensionPixelSize
argument_list|(
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"ProgressBar_minWidth"
argument_list|)
argument_list|,
name|mMinWidth
argument_list|)
expr_stmt|;
name|mMaxWidth
operator|=
name|a
operator|.
name|getDimensionPixelSize
argument_list|(
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"ProgressBar_maxWidth"
argument_list|)
argument_list|,
name|mMaxWidth
argument_list|)
expr_stmt|;
name|mMinHeight
operator|=
name|a
operator|.
name|getDimensionPixelSize
argument_list|(
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"ProgressBar_minHeight"
argument_list|)
argument_list|,
name|mMinHeight
argument_list|)
expr_stmt|;
name|mMaxHeight
operator|=
name|a
operator|.
name|getDimensionPixelSize
argument_list|(
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"ProgressBar_maxHeight"
argument_list|)
argument_list|,
name|mMaxHeight
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"ProgressBar_indeterminateDuration"
argument_list|,
name|a
operator|.
name|getInt
argument_list|(
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"ProgressBar_indeterminateDuration"
argument_list|)
argument_list|,
literal|4000
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"ProgressBar_minWidth"
argument_list|,
name|mMinWidth
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"ProgressBar_maxWidth"
argument_list|,
name|mMaxWidth
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"ProgressBar_minHeight"
argument_list|,
name|mMinHeight
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"ProgressBar_maxHeight"
argument_list|,
name|mMaxHeight
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"ProgressBar_progress_id"
argument_list|,
name|android
operator|.
name|R
operator|.
name|id
operator|.
name|progress
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"ProgressBar_secondaryProgress_id"
argument_list|,
name|android
operator|.
name|R
operator|.
name|id
operator|.
name|secondaryProgress
argument_list|)
expr_stmt|;
name|Drawable
name|d
init|=
name|a
operator|.
name|getDrawable
argument_list|(
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"ProgressBar_progressDrawable"
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|d
operator|!=
literal|null
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"ProgressBar_progressDrawable"
argument_list|,
name|getDrawable
argument_list|(
name|d
argument_list|,
name|styleName
operator|+
literal|"_ProgressBar_progressDrawable"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|=
name|a
operator|.
name|getDrawable
argument_list|(
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"ProgressBar_indeterminateDrawable"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|d
operator|!=
literal|null
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"ProgressBar_indeterminateDrawable"
argument_list|,
name|getDrawable
argument_list|(
name|d
argument_list|,
name|styleName
operator|+
literal|"_ProgressBar_indeterminateDrawable"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|a
operator|.
name|recycle
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|extractProgressBar
name|void
name|extractProgressBar
parameter_list|(
name|SimpleJsonWriter
name|writer
parameter_list|,
name|String
name|styleName
parameter_list|,
name|String
name|qtClass
parameter_list|)
block|{
name|JSONObject
name|json
init|=
name|extractTextAppearanceInformations
argument_list|(
name|styleName
argument_list|,
name|qtClass
argument_list|,
literal|null
argument_list|,
operator|-
literal|1
argument_list|)
decl_stmt|;
try|try
block|{
name|extractProgressBarInfo
argument_list|(
name|json
argument_list|,
name|styleName
argument_list|)
expr_stmt|;
name|writer
operator|.
name|name
argument_list|(
name|styleName
argument_list|)
operator|.
name|value
argument_list|(
name|json
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|extractAbsSeekBar
name|void
name|extractAbsSeekBar
parameter_list|(
name|SimpleJsonWriter
name|jsonWriter
parameter_list|,
name|String
name|styleName
parameter_list|,
name|String
name|qtClass
parameter_list|)
block|{
name|JSONObject
name|json
init|=
name|extractTextAppearanceInformations
argument_list|(
name|styleName
argument_list|,
name|qtClass
argument_list|,
literal|null
argument_list|,
operator|-
literal|1
argument_list|)
decl_stmt|;
name|extractProgressBarInfo
argument_list|(
name|json
argument_list|,
name|styleName
argument_list|)
expr_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|attrClass
decl_stmt|;
try|try
block|{
name|attrClass
operator|=
name|Class
operator|.
name|forName
argument_list|(
literal|"android.R$attr"
argument_list|)
expr_stmt|;
name|int
name|styleId
init|=
name|attrClass
operator|.
name|getDeclaredField
argument_list|(
name|styleName
argument_list|)
operator|.
name|getInt
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|int
index|[]
name|compoundButtonAttrs
init|=
operator|(
name|int
index|[]
operator|)
name|styleableClass
operator|.
name|getDeclaredField
argument_list|(
literal|"SeekBar"
argument_list|)
operator|.
name|get
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|TypedArray
name|a
init|=
name|m_theme
operator|.
name|obtainStyledAttributes
argument_list|(
literal|null
argument_list|,
name|compoundButtonAttrs
argument_list|,
name|styleId
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|Drawable
name|d
init|=
name|a
operator|.
name|getDrawable
argument_list|(
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"SeekBar_thumb"
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|d
operator|!=
literal|null
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"SeekBar_thumb"
argument_list|,
name|getDrawable
argument_list|(
name|d
argument_list|,
name|styleName
operator|+
literal|"_SeekBar_thumb"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|json
operator|.
name|put
argument_list|(
literal|"SeekBar_thumbOffset"
argument_list|,
name|styleableClass
operator|.
name|getDeclaredField
argument_list|(
literal|"SeekBar_thumbOffset"
argument_list|)
operator|.
name|getInt
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
name|a
operator|.
name|recycle
argument_list|()
expr_stmt|;
name|jsonWriter
operator|.
name|name
argument_list|(
name|styleName
argument_list|)
operator|.
name|value
argument_list|(
name|json
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|extractSwitch
name|void
name|extractSwitch
parameter_list|(
name|SimpleJsonWriter
name|jsonWriter
parameter_list|,
name|String
name|styleName
parameter_list|,
name|String
name|qtClass
parameter_list|)
block|{
name|JSONObject
name|json
init|=
operator|new
name|JSONObject
argument_list|()
decl_stmt|;
try|try
block|{
name|Class
argument_list|<
name|?
argument_list|>
name|attrClass
init|=
name|Class
operator|.
name|forName
argument_list|(
literal|"com.android.internal.R$attr"
argument_list|)
decl_stmt|;
name|int
name|styleId
init|=
name|attrClass
operator|.
name|getDeclaredField
argument_list|(
name|styleName
argument_list|)
operator|.
name|getInt
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|int
index|[]
name|switchAttrs
init|=
operator|(
name|int
index|[]
operator|)
name|styleableClass
operator|.
name|getDeclaredField
argument_list|(
literal|"Switch"
argument_list|)
operator|.
name|get
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|TypedArray
name|a
init|=
name|m_theme
operator|.
name|obtainStyledAttributes
argument_list|(
literal|null
argument_list|,
name|switchAttrs
argument_list|,
name|styleId
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|Drawable
name|thumb
init|=
name|a
operator|.
name|getDrawable
argument_list|(
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"Switch_thumb"
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|thumb
operator|!=
literal|null
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"Switch_thumb"
argument_list|,
name|getDrawable
argument_list|(
name|thumb
argument_list|,
name|styleName
operator|+
literal|"_Switch_thumb"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|Drawable
name|track
init|=
name|a
operator|.
name|getDrawable
argument_list|(
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"Switch_track"
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|track
operator|!=
literal|null
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"Switch_track"
argument_list|,
name|getDrawable
argument_list|(
name|track
argument_list|,
name|styleName
operator|+
literal|"_Switch_track"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|textAppearance
init|=
name|a
operator|.
name|getResourceId
argument_list|(
name|styleableClass
operator|.
name|getDeclaredField
argument_list|(
literal|"Switch_switchTextAppearance"
argument_list|)
operator|.
name|getInt
argument_list|(
literal|null
argument_list|)
argument_list|,
operator|-
literal|1
argument_list|)
decl_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"Switch_switchTextAppearance"
argument_list|,
name|extractTextAppearance
argument_list|(
name|textAppearance
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"Switch_textOn"
argument_list|,
name|a
operator|.
name|getText
argument_list|(
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"Switch_textOn"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"Switch_textOff"
argument_list|,
name|a
operator|.
name|getText
argument_list|(
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"Switch_textOff"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"Switch_switchMinWidth"
argument_list|,
name|a
operator|.
name|getDimensionPixelSize
argument_list|(
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"Switch_switchMinWidth"
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"Switch_switchPadding"
argument_list|,
name|a
operator|.
name|getDimensionPixelSize
argument_list|(
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"Switch_switchPadding"
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"Switch_thumbTextPadding"
argument_list|,
name|a
operator|.
name|getDimensionPixelSize
argument_list|(
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"Switch_thumbTextPadding"
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|a
operator|.
name|recycle
argument_list|()
expr_stmt|;
name|jsonWriter
operator|.
name|name
argument_list|(
name|styleName
argument_list|)
operator|.
name|value
argument_list|(
name|json
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|extractCheckedTextView
name|JSONObject
name|extractCheckedTextView
parameter_list|(
name|AttributeSet
name|attribSet
parameter_list|,
name|String
name|itemName
parameter_list|)
block|{
name|JSONObject
name|json
init|=
name|extractTextAppearanceInformations
argument_list|(
literal|"textViewStyle"
argument_list|,
name|itemName
argument_list|,
name|attribSet
argument_list|,
operator|-
literal|1
argument_list|)
decl_stmt|;
try|try
block|{
name|Class
argument_list|<
name|?
argument_list|>
name|attrClass
init|=
name|Class
operator|.
name|forName
argument_list|(
literal|"android.R$attr"
argument_list|)
decl_stmt|;
name|int
name|styleId
init|=
name|attrClass
operator|.
name|getDeclaredField
argument_list|(
literal|"textViewStyle"
argument_list|)
operator|.
name|getInt
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|int
index|[]
name|compoundButtonAttrs
init|=
operator|(
name|int
index|[]
operator|)
name|styleableClass
operator|.
name|getDeclaredField
argument_list|(
literal|"CheckedTextView"
argument_list|)
operator|.
name|get
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|TypedArray
name|a
init|=
name|m_theme
operator|.
name|obtainStyledAttributes
argument_list|(
name|attribSet
argument_list|,
name|compoundButtonAttrs
argument_list|,
name|styleId
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|Drawable
name|d
init|=
name|a
operator|.
name|getDrawable
argument_list|(
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"CheckedTextView_checkMark"
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|d
operator|!=
literal|null
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"CheckedTextView_checkMark"
argument_list|,
name|getDrawable
argument_list|(
name|d
argument_list|,
name|itemName
operator|+
literal|"_CheckedTextView_checkMark"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|a
operator|.
name|recycle
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
return|return
name|json
return|;
block|}
DECL|method|extractItemStyle
specifier|private
name|JSONObject
name|extractItemStyle
parameter_list|(
name|int
name|resourceId
parameter_list|,
name|String
name|itemName
parameter_list|,
name|int
name|textAppearance
parameter_list|)
block|{
try|try
block|{
name|XmlResourceParser
name|parser
init|=
name|m_context
operator|.
name|getResources
argument_list|()
operator|.
name|getLayout
argument_list|(
name|resourceId
argument_list|)
decl_stmt|;
name|int
name|type
decl_stmt|;
while|while
condition|(
operator|(
name|type
operator|=
name|parser
operator|.
name|next
argument_list|()
operator|)
operator|!=
name|XmlPullParser
operator|.
name|START_TAG
operator|&&
name|type
operator|!=
name|XmlPullParser
operator|.
name|END_DOCUMENT
condition|)
block|{
comment|// Empty
block|}
if|if
condition|(
name|type
operator|!=
name|XmlPullParser
operator|.
name|START_TAG
condition|)
block|{
return|return
literal|null
return|;
block|}
name|AttributeSet
name|attributes
init|=
name|Xml
operator|.
name|asAttributeSet
argument_list|(
name|parser
argument_list|)
decl_stmt|;
name|String
name|name
init|=
name|parser
operator|.
name|getName
argument_list|()
decl_stmt|;
if|if
condition|(
name|name
operator|.
name|equals
argument_list|(
literal|"TextView"
argument_list|)
condition|)
return|return
name|extractTextAppearanceInformations
argument_list|(
literal|"textViewStyle"
argument_list|,
name|itemName
argument_list|,
name|attributes
argument_list|,
name|textAppearance
argument_list|)
return|;
if|if
condition|(
name|name
operator|.
name|equals
argument_list|(
literal|"CheckedTextView"
argument_list|)
condition|)
return|return
name|extractCheckedTextView
argument_list|(
name|attributes
argument_list|,
name|itemName
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
return|return
literal|null
return|;
block|}
DECL|method|extractItemsStyle
specifier|private
name|void
name|extractItemsStyle
parameter_list|(
name|SimpleJsonWriter
name|jsonWriter
parameter_list|)
block|{
try|try
block|{
name|jsonWriter
operator|.
name|name
argument_list|(
literal|"simple_list_item"
argument_list|)
operator|.
name|value
argument_list|(
name|extractItemStyle
argument_list|(
name|android
operator|.
name|R
operator|.
name|layout
operator|.
name|simple_list_item_1
argument_list|,
literal|"simple_list_item"
argument_list|,
name|android
operator|.
name|R
operator|.
name|style
operator|.
name|TextAppearance_Large
argument_list|)
argument_list|)
expr_stmt|;
name|jsonWriter
operator|.
name|name
argument_list|(
literal|"simple_list_item_checked"
argument_list|)
operator|.
name|value
argument_list|(
name|extractItemStyle
argument_list|(
name|android
operator|.
name|R
operator|.
name|layout
operator|.
name|simple_list_item_checked
argument_list|,
literal|"simple_list_item_checked"
argument_list|,
name|android
operator|.
name|R
operator|.
name|style
operator|.
name|TextAppearance_Large
argument_list|)
argument_list|)
expr_stmt|;
name|jsonWriter
operator|.
name|name
argument_list|(
literal|"simple_list_item_multiple_choice"
argument_list|)
operator|.
name|value
argument_list|(
name|extractItemStyle
argument_list|(
name|android
operator|.
name|R
operator|.
name|layout
operator|.
name|simple_list_item_multiple_choice
argument_list|,
literal|"simple_list_item_multiple_choice"
argument_list|,
name|android
operator|.
name|R
operator|.
name|style
operator|.
name|TextAppearance_Large
argument_list|)
argument_list|)
expr_stmt|;
name|jsonWriter
operator|.
name|name
argument_list|(
literal|"simple_list_item_single_choice"
argument_list|)
operator|.
name|value
argument_list|(
name|extractItemStyle
argument_list|(
name|android
operator|.
name|R
operator|.
name|layout
operator|.
name|simple_list_item_single_choice
argument_list|,
literal|"simple_list_item_single_choice"
argument_list|,
name|android
operator|.
name|R
operator|.
name|style
operator|.
name|TextAppearance_Large
argument_list|)
argument_list|)
expr_stmt|;
name|jsonWriter
operator|.
name|name
argument_list|(
literal|"simple_spinner_item"
argument_list|)
operator|.
name|value
argument_list|(
name|extractItemStyle
argument_list|(
name|android
operator|.
name|R
operator|.
name|layout
operator|.
name|simple_spinner_item
argument_list|,
literal|"simple_spinner_item"
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|jsonWriter
operator|.
name|name
argument_list|(
literal|"simple_spinner_dropdown_item"
argument_list|)
operator|.
name|value
argument_list|(
name|extractItemStyle
argument_list|(
name|android
operator|.
name|R
operator|.
name|layout
operator|.
name|simple_spinner_dropdown_item
argument_list|,
literal|"simple_spinner_dropdown_item"
argument_list|,
name|android
operator|.
name|R
operator|.
name|style
operator|.
name|TextAppearance_Large
argument_list|)
argument_list|)
expr_stmt|;
name|jsonWriter
operator|.
name|name
argument_list|(
literal|"simple_dropdown_item_1line"
argument_list|)
operator|.
name|value
argument_list|(
name|extractItemStyle
argument_list|(
name|android
operator|.
name|R
operator|.
name|layout
operator|.
name|simple_dropdown_item_1line
argument_list|,
literal|"simple_dropdown_item_1line"
argument_list|,
name|android
operator|.
name|R
operator|.
name|style
operator|.
name|TextAppearance_Large
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|Build
operator|.
name|VERSION
operator|.
name|SDK_INT
operator|>
literal|10
condition|)
block|{
name|Class
argument_list|<
name|?
argument_list|>
name|layoutClass
init|=
name|Class
operator|.
name|forName
argument_list|(
literal|"android.R$layout"
argument_list|)
decl_stmt|;
name|int
name|styleId
init|=
name|layoutClass
operator|.
name|getDeclaredField
argument_list|(
literal|"simple_selectable_list_item"
argument_list|)
operator|.
name|getInt
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|jsonWriter
operator|.
name|name
argument_list|(
literal|"simple_selectable_list_item"
argument_list|)
operator|.
name|value
argument_list|(
name|extractItemStyle
argument_list|(
name|styleId
argument_list|,
literal|"simple_selectable_list_item"
argument_list|,
name|android
operator|.
name|R
operator|.
name|style
operator|.
name|TextAppearance_Large
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|extractListView
name|void
name|extractListView
parameter_list|(
name|SimpleJsonWriter
name|writer
parameter_list|,
name|String
name|styleName
parameter_list|,
name|String
name|qtClass
parameter_list|)
block|{
name|JSONObject
name|json
init|=
name|extractTextAppearanceInformations
argument_list|(
name|styleName
argument_list|,
name|qtClass
argument_list|,
literal|null
argument_list|,
operator|-
literal|1
argument_list|)
decl_stmt|;
try|try
block|{
name|Class
argument_list|<
name|?
argument_list|>
name|attrClass
init|=
name|Class
operator|.
name|forName
argument_list|(
literal|"android.R$attr"
argument_list|)
decl_stmt|;
name|int
name|styleId
init|=
name|attrClass
operator|.
name|getDeclaredField
argument_list|(
name|styleName
argument_list|)
operator|.
name|getInt
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|int
index|[]
name|styleAttrs
init|=
operator|(
name|int
index|[]
operator|)
name|styleableClass
operator|.
name|getDeclaredField
argument_list|(
literal|"ListView"
argument_list|)
operator|.
name|get
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|TypedArray
name|a
init|=
name|m_theme
operator|.
name|obtainStyledAttributes
argument_list|(
literal|null
argument_list|,
name|styleAttrs
argument_list|,
name|styleId
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|Drawable
name|divider
init|=
name|a
operator|.
name|getDrawable
argument_list|(
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"ListView_divider"
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|divider
operator|!=
literal|null
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"ListView_divider"
argument_list|,
name|getDrawable
argument_list|(
name|divider
argument_list|,
name|styleName
operator|+
literal|"_ListView_divider"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"ListView_dividerHeight"
argument_list|,
name|a
operator|.
name|getDimensionPixelSize
argument_list|(
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"ListView_dividerHeight"
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|a
operator|.
name|recycle
argument_list|()
expr_stmt|;
name|writer
operator|.
name|name
argument_list|(
name|styleName
argument_list|)
operator|.
name|value
argument_list|(
name|json
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|extractCalendar
name|void
name|extractCalendar
parameter_list|(
name|SimpleJsonWriter
name|writer
parameter_list|,
name|String
name|styleName
parameter_list|,
name|String
name|qtClass
parameter_list|)
block|{
name|JSONObject
name|json
init|=
name|extractTextAppearanceInformations
argument_list|(
name|styleName
argument_list|,
name|qtClass
argument_list|,
literal|null
argument_list|,
operator|-
literal|1
argument_list|)
decl_stmt|;
try|try
block|{
name|Class
argument_list|<
name|?
argument_list|>
name|attrClass
init|=
name|Class
operator|.
name|forName
argument_list|(
literal|"android.R$attr"
argument_list|)
decl_stmt|;
name|int
name|styleId
init|=
name|attrClass
operator|.
name|getDeclaredField
argument_list|(
name|styleName
argument_list|)
operator|.
name|getInt
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|int
index|[]
name|styleAttrs
init|=
operator|(
name|int
index|[]
operator|)
name|styleableClass
operator|.
name|getDeclaredField
argument_list|(
literal|"CalendarView"
argument_list|)
operator|.
name|get
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|TypedArray
name|a
init|=
name|m_theme
operator|.
name|obtainStyledAttributes
argument_list|(
literal|null
argument_list|,
name|styleAttrs
argument_list|,
name|styleId
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|Drawable
name|d
init|=
name|a
operator|.
name|getDrawable
argument_list|(
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"CalendarView_selectedDateVerticalBar"
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|d
operator|!=
literal|null
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"CalendarView_selectedDateVerticalBar"
argument_list|,
name|getDrawable
argument_list|(
name|d
argument_list|,
name|styleName
operator|+
literal|"_CalendarView_selectedDateVerticalBar"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|dateTextAppearance
init|=
name|a
operator|.
name|getResourceId
argument_list|(
name|styleableClass
operator|.
name|getDeclaredField
argument_list|(
literal|"CalendarView_dateTextAppearance"
argument_list|)
operator|.
name|getInt
argument_list|(
literal|null
argument_list|)
argument_list|,
operator|-
literal|1
argument_list|)
decl_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"CalendarView_dateTextAppearance"
argument_list|,
name|extractTextAppearance
argument_list|(
name|dateTextAppearance
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|weekDayTextAppearance
init|=
name|a
operator|.
name|getResourceId
argument_list|(
name|styleableClass
operator|.
name|getDeclaredField
argument_list|(
literal|"CalendarView_weekDayTextAppearance"
argument_list|)
operator|.
name|getInt
argument_list|(
literal|null
argument_list|)
argument_list|,
operator|-
literal|1
argument_list|)
decl_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"CalendarView_weekDayTextAppearance"
argument_list|,
name|extractTextAppearance
argument_list|(
name|weekDayTextAppearance
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"CalendarView_firstDayOfWeek"
argument_list|,
name|a
operator|.
name|getInt
argument_list|(
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"CalendarView_firstDayOfWeek"
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"CalendarView_focusedMonthDateColor"
argument_list|,
name|a
operator|.
name|getColor
argument_list|(
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"CalendarView_focusedMonthDateColor"
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"CalendarView_selectedWeekBackgroundColor"
argument_list|,
name|a
operator|.
name|getColor
argument_list|(
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"CalendarView_selectedWeekBackgroundColor"
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"CalendarView_showWeekNumber"
argument_list|,
name|a
operator|.
name|getBoolean
argument_list|(
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"CalendarView_showWeekNumber"
argument_list|)
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"CalendarView_shownWeekCount"
argument_list|,
name|a
operator|.
name|getInt
argument_list|(
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"CalendarView_shownWeekCount"
argument_list|)
argument_list|,
literal|6
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"CalendarView_unfocusedMonthDateColor"
argument_list|,
name|a
operator|.
name|getColor
argument_list|(
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"CalendarView_unfocusedMonthDateColor"
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"CalendarView_weekNumberColor"
argument_list|,
name|a
operator|.
name|getColor
argument_list|(
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"CalendarView_weekNumberColor"
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"CalendarView_weekSeparatorLineColor"
argument_list|,
name|a
operator|.
name|getColor
argument_list|(
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"CalendarView_weekSeparatorLineColor"
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|a
operator|.
name|recycle
argument_list|()
expr_stmt|;
name|writer
operator|.
name|name
argument_list|(
name|styleName
argument_list|)
operator|.
name|value
argument_list|(
name|json
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|extractToolBar
name|void
name|extractToolBar
parameter_list|(
name|SimpleJsonWriter
name|writer
parameter_list|,
name|String
name|styleName
parameter_list|,
name|String
name|qtClass
parameter_list|)
block|{
name|JSONObject
name|json
init|=
name|extractTextAppearanceInformations
argument_list|(
name|styleName
argument_list|,
name|qtClass
argument_list|,
literal|null
argument_list|,
operator|-
literal|1
argument_list|)
decl_stmt|;
try|try
block|{
name|Class
argument_list|<
name|?
argument_list|>
name|attrClass
init|=
name|Class
operator|.
name|forName
argument_list|(
literal|"com.android.internal.R$attr"
argument_list|)
decl_stmt|;
name|int
name|styleId
init|=
name|attrClass
operator|.
name|getDeclaredField
argument_list|(
name|styleName
argument_list|)
operator|.
name|getInt
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|int
index|[]
name|styleAttrs
init|=
operator|(
name|int
index|[]
operator|)
name|styleableClass
operator|.
name|getDeclaredField
argument_list|(
literal|"ActionBar"
argument_list|)
operator|.
name|get
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|TypedArray
name|a
init|=
name|m_theme
operator|.
name|obtainStyledAttributes
argument_list|(
literal|null
argument_list|,
name|styleAttrs
argument_list|,
name|styleId
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|Drawable
name|d
init|=
name|a
operator|.
name|getDrawable
argument_list|(
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"ActionBar_background"
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|d
operator|!=
literal|null
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"ActionBar_background"
argument_list|,
name|getDrawable
argument_list|(
name|d
argument_list|,
name|styleName
operator|+
literal|"_ActionBar_background"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|=
name|a
operator|.
name|getDrawable
argument_list|(
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"ActionBar_backgroundStacked"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|d
operator|!=
literal|null
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"ActionBar_backgroundStacked"
argument_list|,
name|getDrawable
argument_list|(
name|d
argument_list|,
name|styleName
operator|+
literal|"_ActionBar_backgroundStacked"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|=
name|a
operator|.
name|getDrawable
argument_list|(
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"ActionBar_backgroundSplit"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|d
operator|!=
literal|null
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"ActionBar_backgroundSplit"
argument_list|,
name|getDrawable
argument_list|(
name|d
argument_list|,
name|styleName
operator|+
literal|"_ActionBar_backgroundSplit"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|=
name|a
operator|.
name|getDrawable
argument_list|(
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"ActionBar_divider"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|d
operator|!=
literal|null
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"ActionBar_divider"
argument_list|,
name|getDrawable
argument_list|(
name|d
argument_list|,
name|styleName
operator|+
literal|"_ActionBar_divider"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"ActionBar_itemPadding"
argument_list|,
name|a
operator|.
name|getDimensionPixelSize
argument_list|(
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"ActionBar_itemPadding"
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|a
operator|.
name|recycle
argument_list|()
expr_stmt|;
name|writer
operator|.
name|name
argument_list|(
name|styleName
argument_list|)
operator|.
name|value
argument_list|(
name|json
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|extractTabBar
name|void
name|extractTabBar
parameter_list|(
name|SimpleJsonWriter
name|writer
parameter_list|,
name|String
name|styleName
parameter_list|,
name|String
name|qtClass
parameter_list|)
block|{
name|JSONObject
name|json
init|=
name|extractTextAppearanceInformations
argument_list|(
name|styleName
argument_list|,
name|qtClass
argument_list|,
literal|null
argument_list|,
operator|-
literal|1
argument_list|)
decl_stmt|;
try|try
block|{
name|Class
argument_list|<
name|?
argument_list|>
name|attrClass
init|=
name|Class
operator|.
name|forName
argument_list|(
literal|"android.R$attr"
argument_list|)
decl_stmt|;
name|int
name|styleId
init|=
name|attrClass
operator|.
name|getDeclaredField
argument_list|(
name|styleName
argument_list|)
operator|.
name|getInt
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|int
index|[]
name|styleAttrs
init|=
operator|(
name|int
index|[]
operator|)
name|styleableClass
operator|.
name|getDeclaredField
argument_list|(
literal|"LinearLayout"
argument_list|)
operator|.
name|get
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|TypedArray
name|a
init|=
name|m_theme
operator|.
name|obtainStyledAttributes
argument_list|(
literal|null
argument_list|,
name|styleAttrs
argument_list|,
name|styleId
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|Drawable
name|d
init|=
name|a
operator|.
name|getDrawable
argument_list|(
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"LinearLayout_divider"
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|d
operator|!=
literal|null
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"LinearLayout_divider"
argument_list|,
name|getDrawable
argument_list|(
name|d
argument_list|,
name|styleName
operator|+
literal|"_LinearLayout_divider"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"LinearLayout_showDividers"
argument_list|,
name|a
operator|.
name|getInt
argument_list|(
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"LinearLayout_showDividers"
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|json
operator|.
name|put
argument_list|(
literal|"LinearLayout_dividerPadding"
argument_list|,
name|a
operator|.
name|getDimensionPixelSize
argument_list|(
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"LinearLayout_dividerPadding"
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|a
operator|.
name|recycle
argument_list|()
expr_stmt|;
name|writer
operator|.
name|name
argument_list|(
name|styleName
argument_list|)
operator|.
name|value
argument_list|(
name|json
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|extractWindow
specifier|private
name|void
name|extractWindow
parameter_list|(
name|SimpleJsonWriter
name|writer
parameter_list|,
name|String
name|styleName
parameter_list|)
block|{
name|JSONObject
name|json
init|=
operator|new
name|JSONObject
argument_list|()
decl_stmt|;
try|try
block|{
name|Class
argument_list|<
name|?
argument_list|>
name|attrClass
init|=
name|Class
operator|.
name|forName
argument_list|(
literal|"android.R$attr"
argument_list|)
decl_stmt|;
name|int
index|[]
name|windowAttrs
init|=
operator|(
name|int
index|[]
operator|)
name|styleableClass
operator|.
name|getDeclaredField
argument_list|(
literal|"Window"
argument_list|)
operator|.
name|get
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|int
name|backgroundId
init|=
name|attrClass
operator|.
name|getDeclaredField
argument_list|(
literal|"windowBackground"
argument_list|)
operator|.
name|getInt
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|TypedArray
name|a
init|=
name|m_theme
operator|.
name|obtainStyledAttributes
argument_list|(
literal|null
argument_list|,
name|windowAttrs
argument_list|,
name|backgroundId
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|Drawable
name|background
init|=
name|a
operator|.
name|getDrawable
argument_list|(
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"Window_windowBackground"
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|background
operator|!=
literal|null
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"Window_windowBackground"
argument_list|,
name|getDrawable
argument_list|(
name|background
argument_list|,
name|styleName
operator|+
literal|"_Window_windowBackground"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|a
operator|.
name|recycle
argument_list|()
expr_stmt|;
name|int
name|frameId
init|=
name|attrClass
operator|.
name|getDeclaredField
argument_list|(
literal|"windowFrame"
argument_list|)
operator|.
name|getInt
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|a
operator|=
name|m_theme
operator|.
name|obtainStyledAttributes
argument_list|(
literal|null
argument_list|,
name|windowAttrs
argument_list|,
name|frameId
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|Drawable
name|frame
init|=
name|a
operator|.
name|getDrawable
argument_list|(
name|getField
argument_list|(
name|styleableClass
argument_list|,
literal|"Window_windowFrame"
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|frame
operator|!=
literal|null
condition|)
name|json
operator|.
name|put
argument_list|(
literal|"Window_windowFrame"
argument_list|,
name|getDrawable
argument_list|(
name|frame
argument_list|,
name|styleName
operator|+
literal|"_Window_windowFrame"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|a
operator|.
name|recycle
argument_list|()
expr_stmt|;
name|writer
operator|.
name|name
argument_list|(
name|styleName
argument_list|)
operator|.
name|value
argument_list|(
name|json
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|ExtractStyle
specifier|public
name|ExtractStyle
parameter_list|(
name|Context
name|context
parameter_list|,
name|String
name|extractPath
parameter_list|)
block|{
comment|//        Log.i(MinistroService.TAG, "Extract " + extractPath);
name|m_extractPath
operator|=
name|extractPath
operator|+
literal|"/"
expr_stmt|;
operator|new
name|File
argument_list|(
name|m_extractPath
argument_list|)
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
comment|//        MinistroActivity.nativeChmode(m_extractPath, 0755);
name|m_context
operator|=
name|context
expr_stmt|;
name|m_theme
operator|=
name|context
operator|.
name|getTheme
argument_list|()
expr_stmt|;
name|TypedArray
name|array
init|=
name|m_theme
operator|.
name|obtainStyledAttributes
argument_list|(
operator|new
name|int
index|[]
block|{
name|android
operator|.
name|R
operator|.
name|attr
operator|.
name|colorBackground
block|,
name|android
operator|.
name|R
operator|.
name|attr
operator|.
name|textColorPrimary
block|,         }
argument_list|)
decl_stmt|;
name|defaultBackgroundColor
operator|=
name|array
operator|.
name|getColor
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|defaultTextColor
operator|=
name|array
operator|.
name|getColor
argument_list|(
literal|1
argument_list|,
literal|0xFFFFFF
argument_list|)
expr_stmt|;
name|array
operator|.
name|recycle
argument_list|()
expr_stmt|;
try|try
block|{
name|SimpleJsonWriter
name|jsonWriter
init|=
operator|new
name|SimpleJsonWriter
argument_list|(
name|m_extractPath
operator|+
literal|"style.json"
argument_list|)
decl_stmt|;
name|jsonWriter
operator|.
name|beginObject
argument_list|()
expr_stmt|;
try|try
block|{
name|extractWindow
argument_list|(
name|jsonWriter
argument_list|,
literal|"windowStyle"
argument_list|)
expr_stmt|;
name|jsonWriter
operator|.
name|name
argument_list|(
literal|"buttonStyle"
argument_list|)
operator|.
name|value
argument_list|(
name|extractTextAppearanceInformations
argument_list|(
literal|"buttonStyle"
argument_list|,
literal|"QPushButton"
argument_list|,
literal|null
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|jsonWriter
operator|.
name|name
argument_list|(
literal|"spinnerStyle"
argument_list|)
operator|.
name|value
argument_list|(
name|extractTextAppearanceInformations
argument_list|(
literal|"spinnerStyle"
argument_list|,
literal|"QComboBox"
argument_list|,
literal|null
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|extractProgressBar
argument_list|(
name|jsonWriter
argument_list|,
literal|"progressBarStyleHorizontal"
argument_list|,
literal|"QProgressBar"
argument_list|)
expr_stmt|;
name|extractProgressBar
argument_list|(
name|jsonWriter
argument_list|,
literal|"progressBarStyleLarge"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|extractProgressBar
argument_list|(
name|jsonWriter
argument_list|,
literal|"progressBarStyleSmall"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|extractProgressBar
argument_list|(
name|jsonWriter
argument_list|,
literal|"progressBarStyle"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|extractAbsSeekBar
argument_list|(
name|jsonWriter
argument_list|,
literal|"seekBarStyle"
argument_list|,
literal|"QSlider"
argument_list|)
expr_stmt|;
if|if
condition|(
name|Build
operator|.
name|VERSION
operator|.
name|SDK_INT
operator|>
literal|13
condition|)
block|{
name|extractSwitch
argument_list|(
name|jsonWriter
argument_list|,
literal|"switchStyle"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
name|extractCompoundButton
argument_list|(
name|jsonWriter
argument_list|,
literal|"checkboxStyle"
argument_list|,
literal|"QCheckBox"
argument_list|)
expr_stmt|;
name|jsonWriter
operator|.
name|name
argument_list|(
literal|"editTextStyle"
argument_list|)
operator|.
name|value
argument_list|(
name|extractTextAppearanceInformations
argument_list|(
literal|"editTextStyle"
argument_list|,
literal|"QLineEdit"
argument_list|,
literal|null
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|extractCompoundButton
argument_list|(
name|jsonWriter
argument_list|,
literal|"radioButtonStyle"
argument_list|,
literal|"QRadioButton"
argument_list|)
expr_stmt|;
name|jsonWriter
operator|.
name|name
argument_list|(
literal|"textViewStyle"
argument_list|)
operator|.
name|value
argument_list|(
name|extractTextAppearanceInformations
argument_list|(
literal|"textViewStyle"
argument_list|,
literal|"QWidget"
argument_list|,
literal|null
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|jsonWriter
operator|.
name|name
argument_list|(
literal|"scrollViewStyle"
argument_list|)
operator|.
name|value
argument_list|(
name|extractTextAppearanceInformations
argument_list|(
literal|"scrollViewStyle"
argument_list|,
literal|"QAbstractScrollArea"
argument_list|,
literal|null
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|extractListView
argument_list|(
name|jsonWriter
argument_list|,
literal|"listViewStyle"
argument_list|,
literal|"QListView"
argument_list|)
expr_stmt|;
name|jsonWriter
operator|.
name|name
argument_list|(
literal|"listSeparatorTextViewStyle"
argument_list|)
operator|.
name|value
argument_list|(
name|extractTextAppearanceInformations
argument_list|(
literal|"listSeparatorTextViewStyle"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|extractItemsStyle
argument_list|(
name|jsonWriter
argument_list|)
expr_stmt|;
name|extractCompoundButton
argument_list|(
name|jsonWriter
argument_list|,
literal|"buttonStyleToggle"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
if|if
condition|(
name|Build
operator|.
name|VERSION
operator|.
name|SDK_INT
operator|>
literal|10
condition|)
block|{
name|extractCalendar
argument_list|(
name|jsonWriter
argument_list|,
literal|"calendarViewStyle"
argument_list|,
literal|"QCalendarWidget"
argument_list|)
expr_stmt|;
name|extractToolBar
argument_list|(
name|jsonWriter
argument_list|,
literal|"actionBarStyle"
argument_list|,
literal|"QToolBar"
argument_list|)
expr_stmt|;
name|jsonWriter
operator|.
name|name
argument_list|(
literal|"actionButtonStyle"
argument_list|)
operator|.
name|value
argument_list|(
name|extractTextAppearanceInformations
argument_list|(
literal|"actionButtonStyle"
argument_list|,
literal|"QToolButton"
argument_list|,
literal|null
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|jsonWriter
operator|.
name|name
argument_list|(
literal|"actionBarTabTextStyle"
argument_list|)
operator|.
name|value
argument_list|(
name|extractTextAppearanceInformations
argument_list|(
literal|"actionBarTabTextStyle"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|jsonWriter
operator|.
name|name
argument_list|(
literal|"actionBarTabStyle"
argument_list|)
operator|.
name|value
argument_list|(
name|extractTextAppearanceInformations
argument_list|(
literal|"actionBarTabStyle"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|jsonWriter
operator|.
name|name
argument_list|(
literal|"actionOverflowButtonStyle"
argument_list|)
operator|.
name|value
argument_list|(
name|extractImageViewInformations
argument_list|(
literal|"actionOverflowButtonStyle"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|extractTabBar
argument_list|(
name|jsonWriter
argument_list|,
literal|"actionBarTabBarStyle"
argument_list|,
literal|"QTabBar"
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
name|jsonWriter
operator|.
name|endObject
argument_list|()
expr_stmt|;
name|jsonWriter
operator|.
name|close
argument_list|()
expr_stmt|;
comment|//          MinistroActivity.nativeChmode(m_extractPath+"style.json", 0644);
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class
end_unit
