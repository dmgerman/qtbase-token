begin_unit
begin_comment
comment|/*     Copyright (c) 2016, BogDan Vatra<bogdan@kde.org>     Contact: http://www.qt.io/licensing/      Commercial License Usage     Licensees holding valid commercial Qt licenses may use this file in     accordance with the commercial license agreement provided with the     Software or, alternatively, in accordance with the terms contained in     a written agreement between you and The Qt Company. For licensing terms     and conditions see http://www.qt.io/terms-conditions. For further     information use the contact form at http://www.qt.io/contact-us.      BSD License Usage     Alternatively, this file may be used under the BSD license as follows:     Redistribution and use in source and binary forms, with or without     modification, are permitted provided that the following conditions     are met:      1. Redistributions of source code must retain the above copyright     notice, this list of conditions and the following disclaimer.     2. Redistributions in binary form must reproduce the above copyright     notice, this list of conditions and the following disclaimer in the     documentation and/or other materials provided with the distribution.      THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR     IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES     OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.     IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,     INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT     NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,     DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY     THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT     (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF     THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */
end_comment
begin_package
DECL|package|org.qtproject.qt5.android.bindings
package|package
name|org
operator|.
name|qtproject
operator|.
name|qt5
operator|.
name|android
operator|.
name|bindings
package|;
end_package
begin_import
import|import
name|android
operator|.
name|app
operator|.
name|Service
import|;
end_import
begin_import
import|import
name|android
operator|.
name|content
operator|.
name|Intent
import|;
end_import
begin_import
import|import
name|android
operator|.
name|content
operator|.
name|res
operator|.
name|Configuration
import|;
end_import
begin_import
import|import
name|android
operator|.
name|os
operator|.
name|IBinder
import|;
end_import
begin_class
DECL|class|QtService
specifier|public
class|class
name|QtService
extends|extends
name|Service
block|{
DECL|field|m_loader
name|QtServiceLoader
name|m_loader
init|=
operator|new
name|QtServiceLoader
argument_list|(
name|this
argument_list|)
decl_stmt|;
comment|/////////////////////////// forward all notifications ////////////////////////////
comment|/////////////////////////// Super class calls ////////////////////////////////////
comment|/////////////// PLEASE DO NOT CHANGE THE FOLLOWING CODE //////////////////////////
comment|//////////////////////////////////////////////////////////////////////////////////
annotation|@
name|Override
DECL|method|onCreate
specifier|public
name|void
name|onCreate
parameter_list|()
block|{
name|super
operator|.
name|onCreate
argument_list|()
expr_stmt|;
name|m_loader
operator|.
name|onCreate
argument_list|()
expr_stmt|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onDestroy
specifier|public
name|void
name|onDestroy
parameter_list|()
block|{
name|super
operator|.
name|onDestroy
argument_list|()
expr_stmt|;
name|QtApplication
operator|.
name|invokeDelegate
argument_list|()
expr_stmt|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onBind
specifier|public
name|IBinder
name|onBind
parameter_list|(
name|Intent
name|intent
parameter_list|)
block|{
name|QtApplication
operator|.
name|InvokeResult
name|res
init|=
name|QtApplication
operator|.
name|invokeDelegate
argument_list|(
name|intent
argument_list|)
decl_stmt|;
if|if
condition|(
name|res
operator|.
name|invoked
condition|)
return|return
operator|(
name|IBinder
operator|)
name|res
operator|.
name|methodReturns
return|;
else|else
return|return
literal|null
return|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onConfigurationChanged
specifier|public
name|void
name|onConfigurationChanged
parameter_list|(
name|Configuration
name|newConfig
parameter_list|)
block|{
if|if
condition|(
operator|!
name|QtApplication
operator|.
name|invokeDelegate
argument_list|(
name|newConfig
argument_list|)
operator|.
name|invoked
condition|)
name|super
operator|.
name|onConfigurationChanged
argument_list|(
name|newConfig
argument_list|)
expr_stmt|;
block|}
DECL|method|super_onConfigurationChanged
specifier|public
name|void
name|super_onConfigurationChanged
parameter_list|(
name|Configuration
name|newConfig
parameter_list|)
block|{
name|super
operator|.
name|onConfigurationChanged
argument_list|(
name|newConfig
argument_list|)
expr_stmt|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onLowMemory
specifier|public
name|void
name|onLowMemory
parameter_list|()
block|{
if|if
condition|(
operator|!
name|QtApplication
operator|.
name|invokeDelegate
argument_list|()
operator|.
name|invoked
condition|)
name|super
operator|.
name|onLowMemory
argument_list|()
expr_stmt|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onStartCommand
specifier|public
name|int
name|onStartCommand
parameter_list|(
name|Intent
name|intent
parameter_list|,
name|int
name|flags
parameter_list|,
name|int
name|startId
parameter_list|)
block|{
name|QtApplication
operator|.
name|InvokeResult
name|res
init|=
name|QtApplication
operator|.
name|invokeDelegate
argument_list|(
name|intent
argument_list|,
name|flags
argument_list|,
name|startId
argument_list|)
decl_stmt|;
if|if
condition|(
name|res
operator|.
name|invoked
condition|)
return|return
operator|(
name|int
operator|)
name|res
operator|.
name|methodReturns
return|;
else|else
return|return
name|super
operator|.
name|onStartCommand
argument_list|(
name|intent
argument_list|,
name|flags
argument_list|,
name|startId
argument_list|)
return|;
block|}
DECL|method|super_onStartCommand
specifier|public
name|int
name|super_onStartCommand
parameter_list|(
name|Intent
name|intent
parameter_list|,
name|int
name|flags
parameter_list|,
name|int
name|startId
parameter_list|)
block|{
return|return
name|super
operator|.
name|onStartCommand
argument_list|(
name|intent
argument_list|,
name|flags
argument_list|,
name|startId
argument_list|)
return|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onTaskRemoved
specifier|public
name|void
name|onTaskRemoved
parameter_list|(
name|Intent
name|rootIntent
parameter_list|)
block|{
if|if
condition|(
operator|!
name|QtApplication
operator|.
name|invokeDelegate
argument_list|(
name|rootIntent
argument_list|)
operator|.
name|invoked
condition|)
name|super
operator|.
name|onTaskRemoved
argument_list|(
name|rootIntent
argument_list|)
expr_stmt|;
block|}
DECL|method|super_onTaskRemoved
specifier|public
name|void
name|super_onTaskRemoved
parameter_list|(
name|Intent
name|rootIntent
parameter_list|)
block|{
name|super
operator|.
name|onTaskRemoved
argument_list|(
name|rootIntent
argument_list|)
expr_stmt|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onTrimMemory
specifier|public
name|void
name|onTrimMemory
parameter_list|(
name|int
name|level
parameter_list|)
block|{
if|if
condition|(
operator|!
name|QtApplication
operator|.
name|invokeDelegate
argument_list|(
name|level
argument_list|)
operator|.
name|invoked
condition|)
name|super
operator|.
name|onTrimMemory
argument_list|(
name|level
argument_list|)
expr_stmt|;
block|}
DECL|method|super_onTrimMemory
specifier|public
name|void
name|super_onTrimMemory
parameter_list|(
name|int
name|level
parameter_list|)
block|{
name|super
operator|.
name|onTrimMemory
argument_list|(
name|level
argument_list|)
expr_stmt|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onUnbind
specifier|public
name|boolean
name|onUnbind
parameter_list|(
name|Intent
name|intent
parameter_list|)
block|{
name|QtApplication
operator|.
name|InvokeResult
name|res
init|=
name|QtApplication
operator|.
name|invokeDelegate
argument_list|(
name|intent
argument_list|)
decl_stmt|;
if|if
condition|(
name|res
operator|.
name|invoked
condition|)
return|return
operator|(
name|boolean
operator|)
name|res
operator|.
name|methodReturns
return|;
else|else
return|return
name|super
operator|.
name|onUnbind
argument_list|(
name|intent
argument_list|)
return|;
block|}
DECL|method|super_onUnbind
specifier|public
name|boolean
name|super_onUnbind
parameter_list|(
name|Intent
name|intent
parameter_list|)
block|{
return|return
name|super
operator|.
name|onUnbind
argument_list|(
name|intent
argument_list|)
return|;
block|}
comment|//---------------------------------------------------------------------------
block|}
end_class
end_unit
