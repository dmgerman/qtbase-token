begin_unit
begin_comment
comment|/*     Copyright (c) 2016, BogDan Vatra<bogdan@kde.org>     Contact: http://www.qt.io/licensing/      Commercial License Usage     Licensees holding valid commercial Qt licenses may use this file in     accordance with the commercial license agreement provided with the     Software or, alternatively, in accordance with the terms contained in     a written agreement between you and The Qt Company. For licensing terms     and conditions see http://www.qt.io/terms-conditions. For further     information use the contact form at http://www.qt.io/contact-us.      BSD License Usage     Alternatively, this file may be used under the BSD license as follows:     Redistribution and use in source and binary forms, with or without     modification, are permitted provided that the following conditions     are met:      1. Redistributions of source code must retain the above copyright     notice, this list of conditions and the following disclaimer.     2. Redistributions in binary form must reproduce the above copyright     notice, this list of conditions and the following disclaimer in the     documentation and/or other materials provided with the distribution.      THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR     IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES     OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.     IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,     INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT     NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,     DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY     THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT     (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF     THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */
end_comment
begin_package
DECL|package|org.qtproject.qt5.android.bindings
package|package
name|org
operator|.
name|qtproject
operator|.
name|qt5
operator|.
name|android
operator|.
name|bindings
package|;
end_package
begin_import
import|import
name|android
operator|.
name|app
operator|.
name|Activity
import|;
end_import
begin_import
import|import
name|android
operator|.
name|app
operator|.
name|Dialog
import|;
end_import
begin_import
import|import
name|android
operator|.
name|app
operator|.
name|Fragment
import|;
end_import
begin_import
import|import
name|android
operator|.
name|content
operator|.
name|Context
import|;
end_import
begin_import
import|import
name|android
operator|.
name|content
operator|.
name|Intent
import|;
end_import
begin_import
import|import
name|android
operator|.
name|content
operator|.
name|res
operator|.
name|Configuration
import|;
end_import
begin_import
import|import
name|android
operator|.
name|content
operator|.
name|res
operator|.
name|Resources
operator|.
name|Theme
import|;
end_import
begin_import
import|import
name|android
operator|.
name|graphics
operator|.
name|Bitmap
import|;
end_import
begin_import
import|import
name|android
operator|.
name|graphics
operator|.
name|Canvas
import|;
end_import
begin_import
import|import
name|android
operator|.
name|os
operator|.
name|Build
import|;
end_import
begin_import
import|import
name|android
operator|.
name|os
operator|.
name|Bundle
import|;
end_import
begin_import
import|import
name|android
operator|.
name|util
operator|.
name|AttributeSet
import|;
end_import
begin_import
import|import
name|android
operator|.
name|view
operator|.
name|ActionMode
import|;
end_import
begin_import
import|import
name|android
operator|.
name|view
operator|.
name|ActionMode
operator|.
name|Callback
import|;
end_import
begin_import
import|import
name|android
operator|.
name|view
operator|.
name|ContextMenu
import|;
end_import
begin_import
import|import
name|android
operator|.
name|view
operator|.
name|ContextMenu
operator|.
name|ContextMenuInfo
import|;
end_import
begin_import
import|import
name|android
operator|.
name|view
operator|.
name|KeyEvent
import|;
end_import
begin_import
import|import
name|android
operator|.
name|view
operator|.
name|Menu
import|;
end_import
begin_import
import|import
name|android
operator|.
name|view
operator|.
name|MenuItem
import|;
end_import
begin_import
import|import
name|android
operator|.
name|view
operator|.
name|MotionEvent
import|;
end_import
begin_import
import|import
name|android
operator|.
name|view
operator|.
name|View
import|;
end_import
begin_import
import|import
name|android
operator|.
name|view
operator|.
name|WindowManager
operator|.
name|LayoutParams
import|;
end_import
begin_import
import|import
name|android
operator|.
name|view
operator|.
name|accessibility
operator|.
name|AccessibilityEvent
import|;
end_import
begin_class
DECL|class|QtActivity
specifier|public
class|class
name|QtActivity
extends|extends
name|Activity
block|{
DECL|field|m_loader
name|QtActivityLoader
name|m_loader
decl_stmt|;
DECL|method|QtActivity
specifier|public
name|QtActivity
parameter_list|()
block|{
name|m_loader
operator|=
operator|new
name|QtActivityLoader
argument_list|(
name|this
argument_list|)
expr_stmt|;
if|if
condition|(
name|Build
operator|.
name|VERSION
operator|.
name|SDK_INT
operator|>=
literal|21
condition|)
block|{
name|m_loader
operator|.
name|QT_ANDROID_THEMES
operator|=
operator|new
name|String
index|[]
block|{
literal|"Theme_Holo_Light"
block|}
expr_stmt|;
name|m_loader
operator|.
name|QT_ANDROID_DEFAULT_THEME
operator|=
literal|"Theme_Holo_Light"
expr_stmt|;
block|}
else|else
block|{
name|m_loader
operator|.
name|QT_ANDROID_THEMES
operator|=
operator|new
name|String
index|[]
block|{
literal|"Theme_DeviceDefault_Light"
block|}
expr_stmt|;
name|m_loader
operator|.
name|QT_ANDROID_DEFAULT_THEME
operator|=
literal|"Theme_DeviceDefault_Light"
expr_stmt|;
block|}
block|}
comment|/////////////////////////// forward all notifications ////////////////////////////
comment|/////////////////////////// Super class calls ////////////////////////////////////
comment|/////////////// PLEASE DO NOT CHANGE THE FOLLOWING CODE //////////////////////////
comment|//////////////////////////////////////////////////////////////////////////////////
annotation|@
name|Override
DECL|method|dispatchKeyEvent
specifier|public
name|boolean
name|dispatchKeyEvent
parameter_list|(
name|KeyEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|QtApplication
operator|.
name|m_delegateObject
operator|!=
literal|null
operator|&&
name|QtApplication
operator|.
name|dispatchKeyEvent
operator|!=
literal|null
condition|)
return|return
operator|(
name|Boolean
operator|)
name|QtApplication
operator|.
name|invokeDelegateMethod
argument_list|(
name|QtApplication
operator|.
name|dispatchKeyEvent
argument_list|,
name|event
argument_list|)
return|;
else|else
return|return
name|super
operator|.
name|dispatchKeyEvent
argument_list|(
name|event
argument_list|)
return|;
block|}
DECL|method|super_dispatchKeyEvent
specifier|public
name|boolean
name|super_dispatchKeyEvent
parameter_list|(
name|KeyEvent
name|event
parameter_list|)
block|{
return|return
name|super
operator|.
name|dispatchKeyEvent
argument_list|(
name|event
argument_list|)
return|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|dispatchPopulateAccessibilityEvent
specifier|public
name|boolean
name|dispatchPopulateAccessibilityEvent
parameter_list|(
name|AccessibilityEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|QtApplication
operator|.
name|m_delegateObject
operator|!=
literal|null
operator|&&
name|QtApplication
operator|.
name|dispatchPopulateAccessibilityEvent
operator|!=
literal|null
condition|)
return|return
operator|(
name|Boolean
operator|)
name|QtApplication
operator|.
name|invokeDelegateMethod
argument_list|(
name|QtApplication
operator|.
name|dispatchPopulateAccessibilityEvent
argument_list|,
name|event
argument_list|)
return|;
else|else
return|return
name|super
operator|.
name|dispatchPopulateAccessibilityEvent
argument_list|(
name|event
argument_list|)
return|;
block|}
DECL|method|super_dispatchPopulateAccessibilityEvent
specifier|public
name|boolean
name|super_dispatchPopulateAccessibilityEvent
parameter_list|(
name|AccessibilityEvent
name|event
parameter_list|)
block|{
return|return
name|super_dispatchPopulateAccessibilityEvent
argument_list|(
name|event
argument_list|)
return|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|dispatchTouchEvent
specifier|public
name|boolean
name|dispatchTouchEvent
parameter_list|(
name|MotionEvent
name|ev
parameter_list|)
block|{
if|if
condition|(
name|QtApplication
operator|.
name|m_delegateObject
operator|!=
literal|null
operator|&&
name|QtApplication
operator|.
name|dispatchTouchEvent
operator|!=
literal|null
condition|)
return|return
operator|(
name|Boolean
operator|)
name|QtApplication
operator|.
name|invokeDelegateMethod
argument_list|(
name|QtApplication
operator|.
name|dispatchTouchEvent
argument_list|,
name|ev
argument_list|)
return|;
else|else
return|return
name|super
operator|.
name|dispatchTouchEvent
argument_list|(
name|ev
argument_list|)
return|;
block|}
DECL|method|super_dispatchTouchEvent
specifier|public
name|boolean
name|super_dispatchTouchEvent
parameter_list|(
name|MotionEvent
name|event
parameter_list|)
block|{
return|return
name|super
operator|.
name|dispatchTouchEvent
argument_list|(
name|event
argument_list|)
return|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|dispatchTrackballEvent
specifier|public
name|boolean
name|dispatchTrackballEvent
parameter_list|(
name|MotionEvent
name|ev
parameter_list|)
block|{
if|if
condition|(
name|QtApplication
operator|.
name|m_delegateObject
operator|!=
literal|null
operator|&&
name|QtApplication
operator|.
name|dispatchTrackballEvent
operator|!=
literal|null
condition|)
return|return
operator|(
name|Boolean
operator|)
name|QtApplication
operator|.
name|invokeDelegateMethod
argument_list|(
name|QtApplication
operator|.
name|dispatchTrackballEvent
argument_list|,
name|ev
argument_list|)
return|;
else|else
return|return
name|super
operator|.
name|dispatchTrackballEvent
argument_list|(
name|ev
argument_list|)
return|;
block|}
DECL|method|super_dispatchTrackballEvent
specifier|public
name|boolean
name|super_dispatchTrackballEvent
parameter_list|(
name|MotionEvent
name|event
parameter_list|)
block|{
return|return
name|super
operator|.
name|dispatchTrackballEvent
argument_list|(
name|event
argument_list|)
return|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onActivityResult
specifier|protected
name|void
name|onActivityResult
parameter_list|(
name|int
name|requestCode
parameter_list|,
name|int
name|resultCode
parameter_list|,
name|Intent
name|data
parameter_list|)
block|{
if|if
condition|(
name|QtApplication
operator|.
name|m_delegateObject
operator|!=
literal|null
operator|&&
name|QtApplication
operator|.
name|onActivityResult
operator|!=
literal|null
condition|)
block|{
name|QtApplication
operator|.
name|invokeDelegateMethod
argument_list|(
name|QtApplication
operator|.
name|onActivityResult
argument_list|,
name|requestCode
argument_list|,
name|resultCode
argument_list|,
name|data
argument_list|)
expr_stmt|;
return|return;
block|}
if|if
condition|(
name|requestCode
operator|==
name|QtLoader
operator|.
name|MINISTRO_INSTALL_REQUEST_CODE
condition|)
name|m_loader
operator|.
name|startApp
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|super
operator|.
name|onActivityResult
argument_list|(
name|requestCode
argument_list|,
name|resultCode
argument_list|,
name|data
argument_list|)
expr_stmt|;
block|}
DECL|method|super_onActivityResult
specifier|public
name|void
name|super_onActivityResult
parameter_list|(
name|int
name|requestCode
parameter_list|,
name|int
name|resultCode
parameter_list|,
name|Intent
name|data
parameter_list|)
block|{
name|super
operator|.
name|onActivityResult
argument_list|(
name|requestCode
argument_list|,
name|resultCode
argument_list|,
name|data
argument_list|)
expr_stmt|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onApplyThemeResource
specifier|protected
name|void
name|onApplyThemeResource
parameter_list|(
name|Theme
name|theme
parameter_list|,
name|int
name|resid
parameter_list|,
name|boolean
name|first
parameter_list|)
block|{
if|if
condition|(
operator|!
name|QtApplication
operator|.
name|invokeDelegate
argument_list|(
name|theme
argument_list|,
name|resid
argument_list|,
name|first
argument_list|)
operator|.
name|invoked
condition|)
name|super
operator|.
name|onApplyThemeResource
argument_list|(
name|theme
argument_list|,
name|resid
argument_list|,
name|first
argument_list|)
expr_stmt|;
block|}
DECL|method|super_onApplyThemeResource
specifier|public
name|void
name|super_onApplyThemeResource
parameter_list|(
name|Theme
name|theme
parameter_list|,
name|int
name|resid
parameter_list|,
name|boolean
name|first
parameter_list|)
block|{
name|super
operator|.
name|onApplyThemeResource
argument_list|(
name|theme
argument_list|,
name|resid
argument_list|,
name|first
argument_list|)
expr_stmt|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onChildTitleChanged
specifier|protected
name|void
name|onChildTitleChanged
parameter_list|(
name|Activity
name|childActivity
parameter_list|,
name|CharSequence
name|title
parameter_list|)
block|{
if|if
condition|(
operator|!
name|QtApplication
operator|.
name|invokeDelegate
argument_list|(
name|childActivity
argument_list|,
name|title
argument_list|)
operator|.
name|invoked
condition|)
name|super
operator|.
name|onChildTitleChanged
argument_list|(
name|childActivity
argument_list|,
name|title
argument_list|)
expr_stmt|;
block|}
DECL|method|super_onChildTitleChanged
specifier|public
name|void
name|super_onChildTitleChanged
parameter_list|(
name|Activity
name|childActivity
parameter_list|,
name|CharSequence
name|title
parameter_list|)
block|{
name|super
operator|.
name|onChildTitleChanged
argument_list|(
name|childActivity
argument_list|,
name|title
argument_list|)
expr_stmt|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onConfigurationChanged
specifier|public
name|void
name|onConfigurationChanged
parameter_list|(
name|Configuration
name|newConfig
parameter_list|)
block|{
if|if
condition|(
operator|!
name|QtApplication
operator|.
name|invokeDelegate
argument_list|(
name|newConfig
argument_list|)
operator|.
name|invoked
condition|)
name|super
operator|.
name|onConfigurationChanged
argument_list|(
name|newConfig
argument_list|)
expr_stmt|;
block|}
DECL|method|super_onConfigurationChanged
specifier|public
name|void
name|super_onConfigurationChanged
parameter_list|(
name|Configuration
name|newConfig
parameter_list|)
block|{
name|super
operator|.
name|onConfigurationChanged
argument_list|(
name|newConfig
argument_list|)
expr_stmt|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onContentChanged
specifier|public
name|void
name|onContentChanged
parameter_list|()
block|{
if|if
condition|(
operator|!
name|QtApplication
operator|.
name|invokeDelegate
argument_list|()
operator|.
name|invoked
condition|)
name|super
operator|.
name|onContentChanged
argument_list|()
expr_stmt|;
block|}
DECL|method|super_onContentChanged
specifier|public
name|void
name|super_onContentChanged
parameter_list|()
block|{
name|super
operator|.
name|onContentChanged
argument_list|()
expr_stmt|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onContextItemSelected
specifier|public
name|boolean
name|onContextItemSelected
parameter_list|(
name|MenuItem
name|item
parameter_list|)
block|{
name|QtApplication
operator|.
name|InvokeResult
name|res
init|=
name|QtApplication
operator|.
name|invokeDelegate
argument_list|(
name|item
argument_list|)
decl_stmt|;
if|if
condition|(
name|res
operator|.
name|invoked
condition|)
return|return
operator|(
name|Boolean
operator|)
name|res
operator|.
name|methodReturns
return|;
else|else
return|return
name|super
operator|.
name|onContextItemSelected
argument_list|(
name|item
argument_list|)
return|;
block|}
DECL|method|super_onContextItemSelected
specifier|public
name|boolean
name|super_onContextItemSelected
parameter_list|(
name|MenuItem
name|item
parameter_list|)
block|{
return|return
name|super
operator|.
name|onContextItemSelected
argument_list|(
name|item
argument_list|)
return|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onContextMenuClosed
specifier|public
name|void
name|onContextMenuClosed
parameter_list|(
name|Menu
name|menu
parameter_list|)
block|{
if|if
condition|(
operator|!
name|QtApplication
operator|.
name|invokeDelegate
argument_list|(
name|menu
argument_list|)
operator|.
name|invoked
condition|)
name|super
operator|.
name|onContextMenuClosed
argument_list|(
name|menu
argument_list|)
expr_stmt|;
block|}
DECL|method|super_onContextMenuClosed
specifier|public
name|void
name|super_onContextMenuClosed
parameter_list|(
name|Menu
name|menu
parameter_list|)
block|{
name|super
operator|.
name|onContextMenuClosed
argument_list|(
name|menu
argument_list|)
expr_stmt|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onCreate
specifier|public
name|void
name|onCreate
parameter_list|(
name|Bundle
name|savedInstanceState
parameter_list|)
block|{
name|super
operator|.
name|onCreate
argument_list|(
name|savedInstanceState
argument_list|)
expr_stmt|;
name|m_loader
operator|.
name|onCreate
argument_list|(
name|savedInstanceState
argument_list|)
expr_stmt|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onCreateContextMenu
specifier|public
name|void
name|onCreateContextMenu
parameter_list|(
name|ContextMenu
name|menu
parameter_list|,
name|View
name|v
parameter_list|,
name|ContextMenuInfo
name|menuInfo
parameter_list|)
block|{
if|if
condition|(
operator|!
name|QtApplication
operator|.
name|invokeDelegate
argument_list|(
name|menu
argument_list|,
name|v
argument_list|,
name|menuInfo
argument_list|)
operator|.
name|invoked
condition|)
name|super
operator|.
name|onCreateContextMenu
argument_list|(
name|menu
argument_list|,
name|v
argument_list|,
name|menuInfo
argument_list|)
expr_stmt|;
block|}
DECL|method|super_onCreateContextMenu
specifier|public
name|void
name|super_onCreateContextMenu
parameter_list|(
name|ContextMenu
name|menu
parameter_list|,
name|View
name|v
parameter_list|,
name|ContextMenuInfo
name|menuInfo
parameter_list|)
block|{
name|super
operator|.
name|onCreateContextMenu
argument_list|(
name|menu
argument_list|,
name|v
argument_list|,
name|menuInfo
argument_list|)
expr_stmt|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onCreateDescription
specifier|public
name|CharSequence
name|onCreateDescription
parameter_list|()
block|{
name|QtApplication
operator|.
name|InvokeResult
name|res
init|=
name|QtApplication
operator|.
name|invokeDelegate
argument_list|()
decl_stmt|;
if|if
condition|(
name|res
operator|.
name|invoked
condition|)
return|return
operator|(
name|CharSequence
operator|)
name|res
operator|.
name|methodReturns
return|;
else|else
return|return
name|super
operator|.
name|onCreateDescription
argument_list|()
return|;
block|}
DECL|method|super_onCreateDescription
specifier|public
name|CharSequence
name|super_onCreateDescription
parameter_list|()
block|{
return|return
name|super
operator|.
name|onCreateDescription
argument_list|()
return|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onCreateDialog
specifier|protected
name|Dialog
name|onCreateDialog
parameter_list|(
name|int
name|id
parameter_list|)
block|{
name|QtApplication
operator|.
name|InvokeResult
name|res
init|=
name|QtApplication
operator|.
name|invokeDelegate
argument_list|(
name|id
argument_list|)
decl_stmt|;
if|if
condition|(
name|res
operator|.
name|invoked
condition|)
return|return
operator|(
name|Dialog
operator|)
name|res
operator|.
name|methodReturns
return|;
else|else
return|return
name|super
operator|.
name|onCreateDialog
argument_list|(
name|id
argument_list|)
return|;
block|}
DECL|method|super_onCreateDialog
specifier|public
name|Dialog
name|super_onCreateDialog
parameter_list|(
name|int
name|id
parameter_list|)
block|{
return|return
name|super
operator|.
name|onCreateDialog
argument_list|(
name|id
argument_list|)
return|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onCreateOptionsMenu
specifier|public
name|boolean
name|onCreateOptionsMenu
parameter_list|(
name|Menu
name|menu
parameter_list|)
block|{
name|QtApplication
operator|.
name|InvokeResult
name|res
init|=
name|QtApplication
operator|.
name|invokeDelegate
argument_list|(
name|menu
argument_list|)
decl_stmt|;
if|if
condition|(
name|res
operator|.
name|invoked
condition|)
return|return
operator|(
name|Boolean
operator|)
name|res
operator|.
name|methodReturns
return|;
else|else
return|return
name|super
operator|.
name|onCreateOptionsMenu
argument_list|(
name|menu
argument_list|)
return|;
block|}
DECL|method|super_onCreateOptionsMenu
specifier|public
name|boolean
name|super_onCreateOptionsMenu
parameter_list|(
name|Menu
name|menu
parameter_list|)
block|{
return|return
name|super
operator|.
name|onCreateOptionsMenu
argument_list|(
name|menu
argument_list|)
return|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onCreatePanelMenu
specifier|public
name|boolean
name|onCreatePanelMenu
parameter_list|(
name|int
name|featureId
parameter_list|,
name|Menu
name|menu
parameter_list|)
block|{
name|QtApplication
operator|.
name|InvokeResult
name|res
init|=
name|QtApplication
operator|.
name|invokeDelegate
argument_list|(
name|featureId
argument_list|,
name|menu
argument_list|)
decl_stmt|;
if|if
condition|(
name|res
operator|.
name|invoked
condition|)
return|return
operator|(
name|Boolean
operator|)
name|res
operator|.
name|methodReturns
return|;
else|else
return|return
name|super
operator|.
name|onCreatePanelMenu
argument_list|(
name|featureId
argument_list|,
name|menu
argument_list|)
return|;
block|}
DECL|method|super_onCreatePanelMenu
specifier|public
name|boolean
name|super_onCreatePanelMenu
parameter_list|(
name|int
name|featureId
parameter_list|,
name|Menu
name|menu
parameter_list|)
block|{
return|return
name|super
operator|.
name|onCreatePanelMenu
argument_list|(
name|featureId
argument_list|,
name|menu
argument_list|)
return|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onCreatePanelView
specifier|public
name|View
name|onCreatePanelView
parameter_list|(
name|int
name|featureId
parameter_list|)
block|{
name|QtApplication
operator|.
name|InvokeResult
name|res
init|=
name|QtApplication
operator|.
name|invokeDelegate
argument_list|(
name|featureId
argument_list|)
decl_stmt|;
if|if
condition|(
name|res
operator|.
name|invoked
condition|)
return|return
operator|(
name|View
operator|)
name|res
operator|.
name|methodReturns
return|;
else|else
return|return
name|super
operator|.
name|onCreatePanelView
argument_list|(
name|featureId
argument_list|)
return|;
block|}
DECL|method|super_onCreatePanelView
specifier|public
name|View
name|super_onCreatePanelView
parameter_list|(
name|int
name|featureId
parameter_list|)
block|{
return|return
name|super
operator|.
name|onCreatePanelView
argument_list|(
name|featureId
argument_list|)
return|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onCreateThumbnail
specifier|public
name|boolean
name|onCreateThumbnail
parameter_list|(
name|Bitmap
name|outBitmap
parameter_list|,
name|Canvas
name|canvas
parameter_list|)
block|{
name|QtApplication
operator|.
name|InvokeResult
name|res
init|=
name|QtApplication
operator|.
name|invokeDelegate
argument_list|(
name|outBitmap
argument_list|,
name|canvas
argument_list|)
decl_stmt|;
if|if
condition|(
name|res
operator|.
name|invoked
condition|)
return|return
operator|(
name|Boolean
operator|)
name|res
operator|.
name|methodReturns
return|;
else|else
return|return
name|super
operator|.
name|onCreateThumbnail
argument_list|(
name|outBitmap
argument_list|,
name|canvas
argument_list|)
return|;
block|}
DECL|method|super_onCreateThumbnail
specifier|public
name|boolean
name|super_onCreateThumbnail
parameter_list|(
name|Bitmap
name|outBitmap
parameter_list|,
name|Canvas
name|canvas
parameter_list|)
block|{
return|return
name|super
operator|.
name|onCreateThumbnail
argument_list|(
name|outBitmap
argument_list|,
name|canvas
argument_list|)
return|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onCreateView
specifier|public
name|View
name|onCreateView
parameter_list|(
name|String
name|name
parameter_list|,
name|Context
name|context
parameter_list|,
name|AttributeSet
name|attrs
parameter_list|)
block|{
name|QtApplication
operator|.
name|InvokeResult
name|res
init|=
name|QtApplication
operator|.
name|invokeDelegate
argument_list|(
name|name
argument_list|,
name|context
argument_list|,
name|attrs
argument_list|)
decl_stmt|;
if|if
condition|(
name|res
operator|.
name|invoked
condition|)
return|return
operator|(
name|View
operator|)
name|res
operator|.
name|methodReturns
return|;
else|else
return|return
name|super
operator|.
name|onCreateView
argument_list|(
name|name
argument_list|,
name|context
argument_list|,
name|attrs
argument_list|)
return|;
block|}
DECL|method|super_onCreateView
specifier|public
name|View
name|super_onCreateView
parameter_list|(
name|String
name|name
parameter_list|,
name|Context
name|context
parameter_list|,
name|AttributeSet
name|attrs
parameter_list|)
block|{
return|return
name|super
operator|.
name|onCreateView
argument_list|(
name|name
argument_list|,
name|context
argument_list|,
name|attrs
argument_list|)
return|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onDestroy
specifier|protected
name|void
name|onDestroy
parameter_list|()
block|{
name|super
operator|.
name|onDestroy
argument_list|()
expr_stmt|;
name|QtApplication
operator|.
name|invokeDelegate
argument_list|()
expr_stmt|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onKeyDown
specifier|public
name|boolean
name|onKeyDown
parameter_list|(
name|int
name|keyCode
parameter_list|,
name|KeyEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|QtApplication
operator|.
name|m_delegateObject
operator|!=
literal|null
operator|&&
name|QtApplication
operator|.
name|onKeyDown
operator|!=
literal|null
condition|)
return|return
operator|(
name|Boolean
operator|)
name|QtApplication
operator|.
name|invokeDelegateMethod
argument_list|(
name|QtApplication
operator|.
name|onKeyDown
argument_list|,
name|keyCode
argument_list|,
name|event
argument_list|)
return|;
else|else
return|return
name|super
operator|.
name|onKeyDown
argument_list|(
name|keyCode
argument_list|,
name|event
argument_list|)
return|;
block|}
DECL|method|super_onKeyDown
specifier|public
name|boolean
name|super_onKeyDown
parameter_list|(
name|int
name|keyCode
parameter_list|,
name|KeyEvent
name|event
parameter_list|)
block|{
return|return
name|super
operator|.
name|onKeyDown
argument_list|(
name|keyCode
argument_list|,
name|event
argument_list|)
return|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onKeyMultiple
specifier|public
name|boolean
name|onKeyMultiple
parameter_list|(
name|int
name|keyCode
parameter_list|,
name|int
name|repeatCount
parameter_list|,
name|KeyEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|QtApplication
operator|.
name|m_delegateObject
operator|!=
literal|null
operator|&&
name|QtApplication
operator|.
name|onKeyMultiple
operator|!=
literal|null
condition|)
return|return
operator|(
name|Boolean
operator|)
name|QtApplication
operator|.
name|invokeDelegateMethod
argument_list|(
name|QtApplication
operator|.
name|onKeyMultiple
argument_list|,
name|keyCode
argument_list|,
name|repeatCount
argument_list|,
name|event
argument_list|)
return|;
else|else
return|return
name|super
operator|.
name|onKeyMultiple
argument_list|(
name|keyCode
argument_list|,
name|repeatCount
argument_list|,
name|event
argument_list|)
return|;
block|}
DECL|method|super_onKeyMultiple
specifier|public
name|boolean
name|super_onKeyMultiple
parameter_list|(
name|int
name|keyCode
parameter_list|,
name|int
name|repeatCount
parameter_list|,
name|KeyEvent
name|event
parameter_list|)
block|{
return|return
name|super
operator|.
name|onKeyMultiple
argument_list|(
name|keyCode
argument_list|,
name|repeatCount
argument_list|,
name|event
argument_list|)
return|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onKeyUp
specifier|public
name|boolean
name|onKeyUp
parameter_list|(
name|int
name|keyCode
parameter_list|,
name|KeyEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|QtApplication
operator|.
name|m_delegateObject
operator|!=
literal|null
operator|&&
name|QtApplication
operator|.
name|onKeyUp
operator|!=
literal|null
condition|)
return|return
operator|(
name|Boolean
operator|)
name|QtApplication
operator|.
name|invokeDelegateMethod
argument_list|(
name|QtApplication
operator|.
name|onKeyUp
argument_list|,
name|keyCode
argument_list|,
name|event
argument_list|)
return|;
else|else
return|return
name|super
operator|.
name|onKeyUp
argument_list|(
name|keyCode
argument_list|,
name|event
argument_list|)
return|;
block|}
DECL|method|super_onKeyUp
specifier|public
name|boolean
name|super_onKeyUp
parameter_list|(
name|int
name|keyCode
parameter_list|,
name|KeyEvent
name|event
parameter_list|)
block|{
return|return
name|super
operator|.
name|onKeyUp
argument_list|(
name|keyCode
argument_list|,
name|event
argument_list|)
return|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onLowMemory
specifier|public
name|void
name|onLowMemory
parameter_list|()
block|{
if|if
condition|(
operator|!
name|QtApplication
operator|.
name|invokeDelegate
argument_list|()
operator|.
name|invoked
condition|)
name|super
operator|.
name|onLowMemory
argument_list|()
expr_stmt|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onMenuItemSelected
specifier|public
name|boolean
name|onMenuItemSelected
parameter_list|(
name|int
name|featureId
parameter_list|,
name|MenuItem
name|item
parameter_list|)
block|{
name|QtApplication
operator|.
name|InvokeResult
name|res
init|=
name|QtApplication
operator|.
name|invokeDelegate
argument_list|(
name|featureId
argument_list|,
name|item
argument_list|)
decl_stmt|;
if|if
condition|(
name|res
operator|.
name|invoked
condition|)
return|return
operator|(
name|Boolean
operator|)
name|res
operator|.
name|methodReturns
return|;
else|else
return|return
name|super
operator|.
name|onMenuItemSelected
argument_list|(
name|featureId
argument_list|,
name|item
argument_list|)
return|;
block|}
DECL|method|super_onMenuItemSelected
specifier|public
name|boolean
name|super_onMenuItemSelected
parameter_list|(
name|int
name|featureId
parameter_list|,
name|MenuItem
name|item
parameter_list|)
block|{
return|return
name|super
operator|.
name|onMenuItemSelected
argument_list|(
name|featureId
argument_list|,
name|item
argument_list|)
return|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onMenuOpened
specifier|public
name|boolean
name|onMenuOpened
parameter_list|(
name|int
name|featureId
parameter_list|,
name|Menu
name|menu
parameter_list|)
block|{
name|QtApplication
operator|.
name|InvokeResult
name|res
init|=
name|QtApplication
operator|.
name|invokeDelegate
argument_list|(
name|featureId
argument_list|,
name|menu
argument_list|)
decl_stmt|;
if|if
condition|(
name|res
operator|.
name|invoked
condition|)
return|return
operator|(
name|Boolean
operator|)
name|res
operator|.
name|methodReturns
return|;
else|else
return|return
name|super
operator|.
name|onMenuOpened
argument_list|(
name|featureId
argument_list|,
name|menu
argument_list|)
return|;
block|}
DECL|method|super_onMenuOpened
specifier|public
name|boolean
name|super_onMenuOpened
parameter_list|(
name|int
name|featureId
parameter_list|,
name|Menu
name|menu
parameter_list|)
block|{
return|return
name|super
operator|.
name|onMenuOpened
argument_list|(
name|featureId
argument_list|,
name|menu
argument_list|)
return|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onNewIntent
specifier|protected
name|void
name|onNewIntent
parameter_list|(
name|Intent
name|intent
parameter_list|)
block|{
if|if
condition|(
operator|!
name|QtApplication
operator|.
name|invokeDelegate
argument_list|(
name|intent
argument_list|)
operator|.
name|invoked
condition|)
name|super
operator|.
name|onNewIntent
argument_list|(
name|intent
argument_list|)
expr_stmt|;
block|}
DECL|method|super_onNewIntent
specifier|public
name|void
name|super_onNewIntent
parameter_list|(
name|Intent
name|intent
parameter_list|)
block|{
name|super
operator|.
name|onNewIntent
argument_list|(
name|intent
argument_list|)
expr_stmt|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onOptionsItemSelected
specifier|public
name|boolean
name|onOptionsItemSelected
parameter_list|(
name|MenuItem
name|item
parameter_list|)
block|{
name|QtApplication
operator|.
name|InvokeResult
name|res
init|=
name|QtApplication
operator|.
name|invokeDelegate
argument_list|(
name|item
argument_list|)
decl_stmt|;
if|if
condition|(
name|res
operator|.
name|invoked
condition|)
return|return
operator|(
name|Boolean
operator|)
name|res
operator|.
name|methodReturns
return|;
else|else
return|return
name|super
operator|.
name|onOptionsItemSelected
argument_list|(
name|item
argument_list|)
return|;
block|}
DECL|method|super_onOptionsItemSelected
specifier|public
name|boolean
name|super_onOptionsItemSelected
parameter_list|(
name|MenuItem
name|item
parameter_list|)
block|{
return|return
name|super
operator|.
name|onOptionsItemSelected
argument_list|(
name|item
argument_list|)
return|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onOptionsMenuClosed
specifier|public
name|void
name|onOptionsMenuClosed
parameter_list|(
name|Menu
name|menu
parameter_list|)
block|{
if|if
condition|(
operator|!
name|QtApplication
operator|.
name|invokeDelegate
argument_list|(
name|menu
argument_list|)
operator|.
name|invoked
condition|)
name|super
operator|.
name|onOptionsMenuClosed
argument_list|(
name|menu
argument_list|)
expr_stmt|;
block|}
DECL|method|super_onOptionsMenuClosed
specifier|public
name|void
name|super_onOptionsMenuClosed
parameter_list|(
name|Menu
name|menu
parameter_list|)
block|{
name|super
operator|.
name|onOptionsMenuClosed
argument_list|(
name|menu
argument_list|)
expr_stmt|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onPanelClosed
specifier|public
name|void
name|onPanelClosed
parameter_list|(
name|int
name|featureId
parameter_list|,
name|Menu
name|menu
parameter_list|)
block|{
if|if
condition|(
operator|!
name|QtApplication
operator|.
name|invokeDelegate
argument_list|(
name|featureId
argument_list|,
name|menu
argument_list|)
operator|.
name|invoked
condition|)
name|super
operator|.
name|onPanelClosed
argument_list|(
name|featureId
argument_list|,
name|menu
argument_list|)
expr_stmt|;
block|}
DECL|method|super_onPanelClosed
specifier|public
name|void
name|super_onPanelClosed
parameter_list|(
name|int
name|featureId
parameter_list|,
name|Menu
name|menu
parameter_list|)
block|{
name|super
operator|.
name|onPanelClosed
argument_list|(
name|featureId
argument_list|,
name|menu
argument_list|)
expr_stmt|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onPause
specifier|protected
name|void
name|onPause
parameter_list|()
block|{
name|super
operator|.
name|onPause
argument_list|()
expr_stmt|;
name|QtApplication
operator|.
name|invokeDelegate
argument_list|()
expr_stmt|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onPostCreate
specifier|protected
name|void
name|onPostCreate
parameter_list|(
name|Bundle
name|savedInstanceState
parameter_list|)
block|{
name|super
operator|.
name|onPostCreate
argument_list|(
name|savedInstanceState
argument_list|)
expr_stmt|;
name|QtApplication
operator|.
name|invokeDelegate
argument_list|(
name|savedInstanceState
argument_list|)
expr_stmt|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onPostResume
specifier|protected
name|void
name|onPostResume
parameter_list|()
block|{
name|super
operator|.
name|onPostResume
argument_list|()
expr_stmt|;
name|QtApplication
operator|.
name|invokeDelegate
argument_list|()
expr_stmt|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onPrepareDialog
specifier|protected
name|void
name|onPrepareDialog
parameter_list|(
name|int
name|id
parameter_list|,
name|Dialog
name|dialog
parameter_list|)
block|{
if|if
condition|(
operator|!
name|QtApplication
operator|.
name|invokeDelegate
argument_list|(
name|id
argument_list|,
name|dialog
argument_list|)
operator|.
name|invoked
condition|)
name|super
operator|.
name|onPrepareDialog
argument_list|(
name|id
argument_list|,
name|dialog
argument_list|)
expr_stmt|;
block|}
DECL|method|super_onPrepareDialog
specifier|public
name|void
name|super_onPrepareDialog
parameter_list|(
name|int
name|id
parameter_list|,
name|Dialog
name|dialog
parameter_list|)
block|{
name|super
operator|.
name|onPrepareDialog
argument_list|(
name|id
argument_list|,
name|dialog
argument_list|)
expr_stmt|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onPrepareOptionsMenu
specifier|public
name|boolean
name|onPrepareOptionsMenu
parameter_list|(
name|Menu
name|menu
parameter_list|)
block|{
name|QtApplication
operator|.
name|InvokeResult
name|res
init|=
name|QtApplication
operator|.
name|invokeDelegate
argument_list|(
name|menu
argument_list|)
decl_stmt|;
if|if
condition|(
name|res
operator|.
name|invoked
condition|)
return|return
operator|(
name|Boolean
operator|)
name|res
operator|.
name|methodReturns
return|;
else|else
return|return
name|super
operator|.
name|onPrepareOptionsMenu
argument_list|(
name|menu
argument_list|)
return|;
block|}
DECL|method|super_onPrepareOptionsMenu
specifier|public
name|boolean
name|super_onPrepareOptionsMenu
parameter_list|(
name|Menu
name|menu
parameter_list|)
block|{
return|return
name|super
operator|.
name|onPrepareOptionsMenu
argument_list|(
name|menu
argument_list|)
return|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onPreparePanel
specifier|public
name|boolean
name|onPreparePanel
parameter_list|(
name|int
name|featureId
parameter_list|,
name|View
name|view
parameter_list|,
name|Menu
name|menu
parameter_list|)
block|{
name|QtApplication
operator|.
name|InvokeResult
name|res
init|=
name|QtApplication
operator|.
name|invokeDelegate
argument_list|(
name|featureId
argument_list|,
name|view
argument_list|,
name|menu
argument_list|)
decl_stmt|;
if|if
condition|(
name|res
operator|.
name|invoked
condition|)
return|return
operator|(
name|Boolean
operator|)
name|res
operator|.
name|methodReturns
return|;
else|else
return|return
name|super
operator|.
name|onPreparePanel
argument_list|(
name|featureId
argument_list|,
name|view
argument_list|,
name|menu
argument_list|)
return|;
block|}
DECL|method|super_onPreparePanel
specifier|public
name|boolean
name|super_onPreparePanel
parameter_list|(
name|int
name|featureId
parameter_list|,
name|View
name|view
parameter_list|,
name|Menu
name|menu
parameter_list|)
block|{
return|return
name|super
operator|.
name|onPreparePanel
argument_list|(
name|featureId
argument_list|,
name|view
argument_list|,
name|menu
argument_list|)
return|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onRestart
specifier|protected
name|void
name|onRestart
parameter_list|()
block|{
name|super
operator|.
name|onRestart
argument_list|()
expr_stmt|;
name|QtApplication
operator|.
name|invokeDelegate
argument_list|()
expr_stmt|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onRestoreInstanceState
specifier|protected
name|void
name|onRestoreInstanceState
parameter_list|(
name|Bundle
name|savedInstanceState
parameter_list|)
block|{
if|if
condition|(
operator|!
name|QtApplication
operator|.
name|invokeDelegate
argument_list|(
name|savedInstanceState
argument_list|)
operator|.
name|invoked
condition|)
name|super
operator|.
name|onRestoreInstanceState
argument_list|(
name|savedInstanceState
argument_list|)
expr_stmt|;
block|}
DECL|method|super_onRestoreInstanceState
specifier|public
name|void
name|super_onRestoreInstanceState
parameter_list|(
name|Bundle
name|savedInstanceState
parameter_list|)
block|{
name|super
operator|.
name|onRestoreInstanceState
argument_list|(
name|savedInstanceState
argument_list|)
expr_stmt|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onResume
specifier|protected
name|void
name|onResume
parameter_list|()
block|{
name|super
operator|.
name|onResume
argument_list|()
expr_stmt|;
name|QtApplication
operator|.
name|invokeDelegate
argument_list|()
expr_stmt|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onRetainNonConfigurationInstance
specifier|public
name|Object
name|onRetainNonConfigurationInstance
parameter_list|()
block|{
name|QtApplication
operator|.
name|InvokeResult
name|res
init|=
name|QtApplication
operator|.
name|invokeDelegate
argument_list|()
decl_stmt|;
if|if
condition|(
name|res
operator|.
name|invoked
condition|)
return|return
name|res
operator|.
name|methodReturns
return|;
else|else
return|return
name|super
operator|.
name|onRetainNonConfigurationInstance
argument_list|()
return|;
block|}
DECL|method|super_onRetainNonConfigurationInstance
specifier|public
name|Object
name|super_onRetainNonConfigurationInstance
parameter_list|()
block|{
return|return
name|super
operator|.
name|onRetainNonConfigurationInstance
argument_list|()
return|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onSaveInstanceState
specifier|protected
name|void
name|onSaveInstanceState
parameter_list|(
name|Bundle
name|outState
parameter_list|)
block|{
if|if
condition|(
operator|!
name|QtApplication
operator|.
name|invokeDelegate
argument_list|(
name|outState
argument_list|)
operator|.
name|invoked
condition|)
name|super
operator|.
name|onSaveInstanceState
argument_list|(
name|outState
argument_list|)
expr_stmt|;
block|}
DECL|method|super_onSaveInstanceState
specifier|public
name|void
name|super_onSaveInstanceState
parameter_list|(
name|Bundle
name|outState
parameter_list|)
block|{
name|super
operator|.
name|onSaveInstanceState
argument_list|(
name|outState
argument_list|)
expr_stmt|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onSearchRequested
specifier|public
name|boolean
name|onSearchRequested
parameter_list|()
block|{
name|QtApplication
operator|.
name|InvokeResult
name|res
init|=
name|QtApplication
operator|.
name|invokeDelegate
argument_list|()
decl_stmt|;
if|if
condition|(
name|res
operator|.
name|invoked
condition|)
return|return
operator|(
name|Boolean
operator|)
name|res
operator|.
name|methodReturns
return|;
else|else
return|return
name|super
operator|.
name|onSearchRequested
argument_list|()
return|;
block|}
DECL|method|super_onSearchRequested
specifier|public
name|boolean
name|super_onSearchRequested
parameter_list|()
block|{
return|return
name|super
operator|.
name|onSearchRequested
argument_list|()
return|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onStart
specifier|protected
name|void
name|onStart
parameter_list|()
block|{
name|super
operator|.
name|onStart
argument_list|()
expr_stmt|;
name|QtApplication
operator|.
name|invokeDelegate
argument_list|()
expr_stmt|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onStop
specifier|protected
name|void
name|onStop
parameter_list|()
block|{
name|super
operator|.
name|onStop
argument_list|()
expr_stmt|;
name|QtApplication
operator|.
name|invokeDelegate
argument_list|()
expr_stmt|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onTitleChanged
specifier|protected
name|void
name|onTitleChanged
parameter_list|(
name|CharSequence
name|title
parameter_list|,
name|int
name|color
parameter_list|)
block|{
if|if
condition|(
operator|!
name|QtApplication
operator|.
name|invokeDelegate
argument_list|(
name|title
argument_list|,
name|color
argument_list|)
operator|.
name|invoked
condition|)
name|super
operator|.
name|onTitleChanged
argument_list|(
name|title
argument_list|,
name|color
argument_list|)
expr_stmt|;
block|}
DECL|method|super_onTitleChanged
specifier|public
name|void
name|super_onTitleChanged
parameter_list|(
name|CharSequence
name|title
parameter_list|,
name|int
name|color
parameter_list|)
block|{
name|super
operator|.
name|onTitleChanged
argument_list|(
name|title
argument_list|,
name|color
argument_list|)
expr_stmt|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onTouchEvent
specifier|public
name|boolean
name|onTouchEvent
parameter_list|(
name|MotionEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|QtApplication
operator|.
name|m_delegateObject
operator|!=
literal|null
operator|&&
name|QtApplication
operator|.
name|onTouchEvent
operator|!=
literal|null
condition|)
return|return
operator|(
name|Boolean
operator|)
name|QtApplication
operator|.
name|invokeDelegateMethod
argument_list|(
name|QtApplication
operator|.
name|onTouchEvent
argument_list|,
name|event
argument_list|)
return|;
else|else
return|return
name|super
operator|.
name|onTouchEvent
argument_list|(
name|event
argument_list|)
return|;
block|}
DECL|method|super_onTouchEvent
specifier|public
name|boolean
name|super_onTouchEvent
parameter_list|(
name|MotionEvent
name|event
parameter_list|)
block|{
return|return
name|super
operator|.
name|onTouchEvent
argument_list|(
name|event
argument_list|)
return|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onTrackballEvent
specifier|public
name|boolean
name|onTrackballEvent
parameter_list|(
name|MotionEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|QtApplication
operator|.
name|m_delegateObject
operator|!=
literal|null
operator|&&
name|QtApplication
operator|.
name|onTrackballEvent
operator|!=
literal|null
condition|)
return|return
operator|(
name|Boolean
operator|)
name|QtApplication
operator|.
name|invokeDelegateMethod
argument_list|(
name|QtApplication
operator|.
name|onTrackballEvent
argument_list|,
name|event
argument_list|)
return|;
else|else
return|return
name|super
operator|.
name|onTrackballEvent
argument_list|(
name|event
argument_list|)
return|;
block|}
DECL|method|super_onTrackballEvent
specifier|public
name|boolean
name|super_onTrackballEvent
parameter_list|(
name|MotionEvent
name|event
parameter_list|)
block|{
return|return
name|super
operator|.
name|onTrackballEvent
argument_list|(
name|event
argument_list|)
return|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onUserInteraction
specifier|public
name|void
name|onUserInteraction
parameter_list|()
block|{
if|if
condition|(
operator|!
name|QtApplication
operator|.
name|invokeDelegate
argument_list|()
operator|.
name|invoked
condition|)
name|super
operator|.
name|onUserInteraction
argument_list|()
expr_stmt|;
block|}
DECL|method|super_onUserInteraction
specifier|public
name|void
name|super_onUserInteraction
parameter_list|()
block|{
name|super
operator|.
name|onUserInteraction
argument_list|()
expr_stmt|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onUserLeaveHint
specifier|protected
name|void
name|onUserLeaveHint
parameter_list|()
block|{
if|if
condition|(
operator|!
name|QtApplication
operator|.
name|invokeDelegate
argument_list|()
operator|.
name|invoked
condition|)
name|super
operator|.
name|onUserLeaveHint
argument_list|()
expr_stmt|;
block|}
DECL|method|super_onUserLeaveHint
specifier|public
name|void
name|super_onUserLeaveHint
parameter_list|()
block|{
name|super
operator|.
name|onUserLeaveHint
argument_list|()
expr_stmt|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onWindowAttributesChanged
specifier|public
name|void
name|onWindowAttributesChanged
parameter_list|(
name|LayoutParams
name|params
parameter_list|)
block|{
if|if
condition|(
operator|!
name|QtApplication
operator|.
name|invokeDelegate
argument_list|(
name|params
argument_list|)
operator|.
name|invoked
condition|)
name|super
operator|.
name|onWindowAttributesChanged
argument_list|(
name|params
argument_list|)
expr_stmt|;
block|}
DECL|method|super_onWindowAttributesChanged
specifier|public
name|void
name|super_onWindowAttributesChanged
parameter_list|(
name|LayoutParams
name|params
parameter_list|)
block|{
name|super
operator|.
name|onWindowAttributesChanged
argument_list|(
name|params
argument_list|)
expr_stmt|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onWindowFocusChanged
specifier|public
name|void
name|onWindowFocusChanged
parameter_list|(
name|boolean
name|hasFocus
parameter_list|)
block|{
if|if
condition|(
operator|!
name|QtApplication
operator|.
name|invokeDelegate
argument_list|(
name|hasFocus
argument_list|)
operator|.
name|invoked
condition|)
name|super
operator|.
name|onWindowFocusChanged
argument_list|(
name|hasFocus
argument_list|)
expr_stmt|;
block|}
DECL|method|super_onWindowFocusChanged
specifier|public
name|void
name|super_onWindowFocusChanged
parameter_list|(
name|boolean
name|hasFocus
parameter_list|)
block|{
name|super
operator|.
name|onWindowFocusChanged
argument_list|(
name|hasFocus
argument_list|)
expr_stmt|;
block|}
comment|//---------------------------------------------------------------------------
comment|//////////////// Activity API 5 /////////////
comment|//@ANDROID-5
annotation|@
name|Override
DECL|method|onAttachedToWindow
specifier|public
name|void
name|onAttachedToWindow
parameter_list|()
block|{
if|if
condition|(
operator|!
name|QtApplication
operator|.
name|invokeDelegate
argument_list|()
operator|.
name|invoked
condition|)
name|super
operator|.
name|onAttachedToWindow
argument_list|()
expr_stmt|;
block|}
DECL|method|super_onAttachedToWindow
specifier|public
name|void
name|super_onAttachedToWindow
parameter_list|()
block|{
name|super
operator|.
name|onAttachedToWindow
argument_list|()
expr_stmt|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onBackPressed
specifier|public
name|void
name|onBackPressed
parameter_list|()
block|{
if|if
condition|(
operator|!
name|QtApplication
operator|.
name|invokeDelegate
argument_list|()
operator|.
name|invoked
condition|)
name|super
operator|.
name|onBackPressed
argument_list|()
expr_stmt|;
block|}
DECL|method|super_onBackPressed
specifier|public
name|void
name|super_onBackPressed
parameter_list|()
block|{
name|super
operator|.
name|onBackPressed
argument_list|()
expr_stmt|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onDetachedFromWindow
specifier|public
name|void
name|onDetachedFromWindow
parameter_list|()
block|{
if|if
condition|(
operator|!
name|QtApplication
operator|.
name|invokeDelegate
argument_list|()
operator|.
name|invoked
condition|)
name|super
operator|.
name|onDetachedFromWindow
argument_list|()
expr_stmt|;
block|}
DECL|method|super_onDetachedFromWindow
specifier|public
name|void
name|super_onDetachedFromWindow
parameter_list|()
block|{
name|super
operator|.
name|onDetachedFromWindow
argument_list|()
expr_stmt|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onKeyLongPress
specifier|public
name|boolean
name|onKeyLongPress
parameter_list|(
name|int
name|keyCode
parameter_list|,
name|KeyEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|QtApplication
operator|.
name|m_delegateObject
operator|!=
literal|null
operator|&&
name|QtApplication
operator|.
name|onKeyLongPress
operator|!=
literal|null
condition|)
return|return
operator|(
name|Boolean
operator|)
name|QtApplication
operator|.
name|invokeDelegateMethod
argument_list|(
name|QtApplication
operator|.
name|onKeyLongPress
argument_list|,
name|keyCode
argument_list|,
name|event
argument_list|)
return|;
else|else
return|return
name|super
operator|.
name|onKeyLongPress
argument_list|(
name|keyCode
argument_list|,
name|event
argument_list|)
return|;
block|}
DECL|method|super_onKeyLongPress
specifier|public
name|boolean
name|super_onKeyLongPress
parameter_list|(
name|int
name|keyCode
parameter_list|,
name|KeyEvent
name|event
parameter_list|)
block|{
return|return
name|super
operator|.
name|onKeyLongPress
argument_list|(
name|keyCode
argument_list|,
name|event
argument_list|)
return|;
block|}
comment|//---------------------------------------------------------------------------
comment|//@ANDROID-5
comment|//////////////// Activity API 8 /////////////
comment|//@ANDROID-8
annotation|@
name|Override
DECL|method|onCreateDialog
specifier|protected
name|Dialog
name|onCreateDialog
parameter_list|(
name|int
name|id
parameter_list|,
name|Bundle
name|args
parameter_list|)
block|{
name|QtApplication
operator|.
name|InvokeResult
name|res
init|=
name|QtApplication
operator|.
name|invokeDelegate
argument_list|(
name|id
argument_list|,
name|args
argument_list|)
decl_stmt|;
if|if
condition|(
name|res
operator|.
name|invoked
condition|)
return|return
operator|(
name|Dialog
operator|)
name|res
operator|.
name|methodReturns
return|;
else|else
return|return
name|super
operator|.
name|onCreateDialog
argument_list|(
name|id
argument_list|,
name|args
argument_list|)
return|;
block|}
DECL|method|super_onCreateDialog
specifier|public
name|Dialog
name|super_onCreateDialog
parameter_list|(
name|int
name|id
parameter_list|,
name|Bundle
name|args
parameter_list|)
block|{
return|return
name|super
operator|.
name|onCreateDialog
argument_list|(
name|id
argument_list|,
name|args
argument_list|)
return|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onPrepareDialog
specifier|protected
name|void
name|onPrepareDialog
parameter_list|(
name|int
name|id
parameter_list|,
name|Dialog
name|dialog
parameter_list|,
name|Bundle
name|args
parameter_list|)
block|{
if|if
condition|(
operator|!
name|QtApplication
operator|.
name|invokeDelegate
argument_list|(
name|id
argument_list|,
name|dialog
argument_list|,
name|args
argument_list|)
operator|.
name|invoked
condition|)
name|super
operator|.
name|onPrepareDialog
argument_list|(
name|id
argument_list|,
name|dialog
argument_list|,
name|args
argument_list|)
expr_stmt|;
block|}
DECL|method|super_onPrepareDialog
specifier|public
name|void
name|super_onPrepareDialog
parameter_list|(
name|int
name|id
parameter_list|,
name|Dialog
name|dialog
parameter_list|,
name|Bundle
name|args
parameter_list|)
block|{
name|super
operator|.
name|onPrepareDialog
argument_list|(
name|id
argument_list|,
name|dialog
argument_list|,
name|args
argument_list|)
expr_stmt|;
block|}
comment|//---------------------------------------------------------------------------
comment|//@ANDROID-8
comment|//////////////// Activity API 11 /////////////
comment|//@ANDROID-11
annotation|@
name|Override
DECL|method|dispatchKeyShortcutEvent
specifier|public
name|boolean
name|dispatchKeyShortcutEvent
parameter_list|(
name|KeyEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|QtApplication
operator|.
name|m_delegateObject
operator|!=
literal|null
operator|&&
name|QtApplication
operator|.
name|dispatchKeyShortcutEvent
operator|!=
literal|null
condition|)
return|return
operator|(
name|Boolean
operator|)
name|QtApplication
operator|.
name|invokeDelegateMethod
argument_list|(
name|QtApplication
operator|.
name|dispatchKeyShortcutEvent
argument_list|,
name|event
argument_list|)
return|;
else|else
return|return
name|super
operator|.
name|dispatchKeyShortcutEvent
argument_list|(
name|event
argument_list|)
return|;
block|}
DECL|method|super_dispatchKeyShortcutEvent
specifier|public
name|boolean
name|super_dispatchKeyShortcutEvent
parameter_list|(
name|KeyEvent
name|event
parameter_list|)
block|{
return|return
name|super
operator|.
name|dispatchKeyShortcutEvent
argument_list|(
name|event
argument_list|)
return|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onActionModeFinished
specifier|public
name|void
name|onActionModeFinished
parameter_list|(
name|ActionMode
name|mode
parameter_list|)
block|{
if|if
condition|(
operator|!
name|QtApplication
operator|.
name|invokeDelegate
argument_list|(
name|mode
argument_list|)
operator|.
name|invoked
condition|)
name|super
operator|.
name|onActionModeFinished
argument_list|(
name|mode
argument_list|)
expr_stmt|;
block|}
DECL|method|super_onActionModeFinished
specifier|public
name|void
name|super_onActionModeFinished
parameter_list|(
name|ActionMode
name|mode
parameter_list|)
block|{
name|super
operator|.
name|onActionModeFinished
argument_list|(
name|mode
argument_list|)
expr_stmt|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onActionModeStarted
specifier|public
name|void
name|onActionModeStarted
parameter_list|(
name|ActionMode
name|mode
parameter_list|)
block|{
if|if
condition|(
operator|!
name|QtApplication
operator|.
name|invokeDelegate
argument_list|(
name|mode
argument_list|)
operator|.
name|invoked
condition|)
name|super
operator|.
name|onActionModeStarted
argument_list|(
name|mode
argument_list|)
expr_stmt|;
block|}
DECL|method|super_onActionModeStarted
specifier|public
name|void
name|super_onActionModeStarted
parameter_list|(
name|ActionMode
name|mode
parameter_list|)
block|{
name|super
operator|.
name|onActionModeStarted
argument_list|(
name|mode
argument_list|)
expr_stmt|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onAttachFragment
specifier|public
name|void
name|onAttachFragment
parameter_list|(
name|Fragment
name|fragment
parameter_list|)
block|{
if|if
condition|(
operator|!
name|QtApplication
operator|.
name|invokeDelegate
argument_list|(
name|fragment
argument_list|)
operator|.
name|invoked
condition|)
name|super
operator|.
name|onAttachFragment
argument_list|(
name|fragment
argument_list|)
expr_stmt|;
block|}
DECL|method|super_onAttachFragment
specifier|public
name|void
name|super_onAttachFragment
parameter_list|(
name|Fragment
name|fragment
parameter_list|)
block|{
name|super
operator|.
name|onAttachFragment
argument_list|(
name|fragment
argument_list|)
expr_stmt|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onCreateView
specifier|public
name|View
name|onCreateView
parameter_list|(
name|View
name|parent
parameter_list|,
name|String
name|name
parameter_list|,
name|Context
name|context
parameter_list|,
name|AttributeSet
name|attrs
parameter_list|)
block|{
name|QtApplication
operator|.
name|InvokeResult
name|res
init|=
name|QtApplication
operator|.
name|invokeDelegate
argument_list|(
name|parent
argument_list|,
name|name
argument_list|,
name|context
argument_list|,
name|attrs
argument_list|)
decl_stmt|;
if|if
condition|(
name|res
operator|.
name|invoked
condition|)
return|return
operator|(
name|View
operator|)
name|res
operator|.
name|methodReturns
return|;
else|else
return|return
name|super
operator|.
name|onCreateView
argument_list|(
name|parent
argument_list|,
name|name
argument_list|,
name|context
argument_list|,
name|attrs
argument_list|)
return|;
block|}
DECL|method|super_onCreateView
specifier|public
name|View
name|super_onCreateView
parameter_list|(
name|View
name|parent
parameter_list|,
name|String
name|name
parameter_list|,
name|Context
name|context
parameter_list|,
name|AttributeSet
name|attrs
parameter_list|)
block|{
return|return
name|super
operator|.
name|onCreateView
argument_list|(
name|parent
argument_list|,
name|name
argument_list|,
name|context
argument_list|,
name|attrs
argument_list|)
return|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onKeyShortcut
specifier|public
name|boolean
name|onKeyShortcut
parameter_list|(
name|int
name|keyCode
parameter_list|,
name|KeyEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|QtApplication
operator|.
name|m_delegateObject
operator|!=
literal|null
operator|&&
name|QtApplication
operator|.
name|onKeyShortcut
operator|!=
literal|null
condition|)
return|return
operator|(
name|Boolean
operator|)
name|QtApplication
operator|.
name|invokeDelegateMethod
argument_list|(
name|QtApplication
operator|.
name|onKeyShortcut
argument_list|,
name|keyCode
argument_list|,
name|event
argument_list|)
return|;
else|else
return|return
name|super
operator|.
name|onKeyShortcut
argument_list|(
name|keyCode
argument_list|,
name|event
argument_list|)
return|;
block|}
DECL|method|super_onKeyShortcut
specifier|public
name|boolean
name|super_onKeyShortcut
parameter_list|(
name|int
name|keyCode
parameter_list|,
name|KeyEvent
name|event
parameter_list|)
block|{
return|return
name|super
operator|.
name|onKeyShortcut
argument_list|(
name|keyCode
argument_list|,
name|event
argument_list|)
return|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onWindowStartingActionMode
specifier|public
name|ActionMode
name|onWindowStartingActionMode
parameter_list|(
name|Callback
name|callback
parameter_list|)
block|{
name|QtApplication
operator|.
name|InvokeResult
name|res
init|=
name|QtApplication
operator|.
name|invokeDelegate
argument_list|(
name|callback
argument_list|)
decl_stmt|;
if|if
condition|(
name|res
operator|.
name|invoked
condition|)
return|return
operator|(
name|ActionMode
operator|)
name|res
operator|.
name|methodReturns
return|;
else|else
return|return
name|super
operator|.
name|onWindowStartingActionMode
argument_list|(
name|callback
argument_list|)
return|;
block|}
DECL|method|super_onWindowStartingActionMode
specifier|public
name|ActionMode
name|super_onWindowStartingActionMode
parameter_list|(
name|Callback
name|callback
parameter_list|)
block|{
return|return
name|super
operator|.
name|onWindowStartingActionMode
argument_list|(
name|callback
argument_list|)
return|;
block|}
comment|//---------------------------------------------------------------------------
comment|//@ANDROID-11
comment|//////////////// Activity API 12 /////////////
comment|//@ANDROID-12
annotation|@
name|Override
DECL|method|dispatchGenericMotionEvent
specifier|public
name|boolean
name|dispatchGenericMotionEvent
parameter_list|(
name|MotionEvent
name|ev
parameter_list|)
block|{
if|if
condition|(
name|QtApplication
operator|.
name|m_delegateObject
operator|!=
literal|null
operator|&&
name|QtApplication
operator|.
name|dispatchGenericMotionEvent
operator|!=
literal|null
condition|)
return|return
operator|(
name|Boolean
operator|)
name|QtApplication
operator|.
name|invokeDelegateMethod
argument_list|(
name|QtApplication
operator|.
name|dispatchGenericMotionEvent
argument_list|,
name|ev
argument_list|)
return|;
else|else
return|return
name|super
operator|.
name|dispatchGenericMotionEvent
argument_list|(
name|ev
argument_list|)
return|;
block|}
DECL|method|super_dispatchGenericMotionEvent
specifier|public
name|boolean
name|super_dispatchGenericMotionEvent
parameter_list|(
name|MotionEvent
name|event
parameter_list|)
block|{
return|return
name|super
operator|.
name|dispatchGenericMotionEvent
argument_list|(
name|event
argument_list|)
return|;
block|}
comment|//---------------------------------------------------------------------------
annotation|@
name|Override
DECL|method|onGenericMotionEvent
specifier|public
name|boolean
name|onGenericMotionEvent
parameter_list|(
name|MotionEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|QtApplication
operator|.
name|m_delegateObject
operator|!=
literal|null
operator|&&
name|QtApplication
operator|.
name|onGenericMotionEvent
operator|!=
literal|null
condition|)
return|return
operator|(
name|Boolean
operator|)
name|QtApplication
operator|.
name|invokeDelegateMethod
argument_list|(
name|QtApplication
operator|.
name|onGenericMotionEvent
argument_list|,
name|event
argument_list|)
return|;
else|else
return|return
name|super
operator|.
name|onGenericMotionEvent
argument_list|(
name|event
argument_list|)
return|;
block|}
DECL|method|super_onGenericMotionEvent
specifier|public
name|boolean
name|super_onGenericMotionEvent
parameter_list|(
name|MotionEvent
name|event
parameter_list|)
block|{
return|return
name|super
operator|.
name|onGenericMotionEvent
argument_list|(
name|event
argument_list|)
return|;
block|}
comment|//---------------------------------------------------------------------------
comment|//@ANDROID-12
block|}
end_class
end_unit
