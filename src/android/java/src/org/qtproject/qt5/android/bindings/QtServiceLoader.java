begin_unit
begin_comment
comment|/*     Copyright (c) 2016, BogDan Vatra<bogdan@kde.org>     Contact: http://www.qt.io/licensing/      Commercial License Usage     Licensees holding valid commercial Qt licenses may use this file in     accordance with the commercial license agreement provided with the     Software or, alternatively, in accordance with the terms contained in     a written agreement between you and The Qt Company. For licensing terms     and conditions see http://www.qt.io/terms-conditions. For further     information use the contact form at http://www.qt.io/contact-us.      BSD License Usage     Alternatively, this file may be used under the BSD license as follows:     Redistribution and use in source and binary forms, with or without     modification, are permitted provided that the following conditions     are met:      1. Redistributions of source code must retain the above copyright     notice, this list of conditions and the following disclaimer.     2. Redistributions in binary form must reproduce the above copyright     notice, this list of conditions and the following disclaimer in the     documentation and/or other materials provided with the distribution.      THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR     IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES     OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.     IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,     INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT     NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,     DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY     THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT     (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF     THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */
end_comment
begin_package
DECL|package|org.qtproject.qt5.android.bindings
package|package
name|org
operator|.
name|qtproject
operator|.
name|qt5
operator|.
name|android
operator|.
name|bindings
package|;
end_package
begin_import
import|import
name|android
operator|.
name|content
operator|.
name|ComponentName
import|;
end_import
begin_import
import|import
name|android
operator|.
name|content
operator|.
name|pm
operator|.
name|PackageManager
import|;
end_import
begin_class
DECL|class|QtServiceLoader
specifier|public
class|class
name|QtServiceLoader
extends|extends
name|QtLoader
block|{
DECL|field|m_service
name|QtService
name|m_service
decl_stmt|;
DECL|method|QtServiceLoader
name|QtServiceLoader
parameter_list|(
name|QtService
name|service
parameter_list|)
block|{
name|super
argument_list|(
name|service
argument_list|,
name|QtService
operator|.
name|class
argument_list|)
expr_stmt|;
name|m_service
operator|=
name|service
expr_stmt|;
block|}
DECL|method|onCreate
specifier|public
name|void
name|onCreate
parameter_list|()
block|{
try|try
block|{
name|m_contextInfo
operator|=
name|m_service
operator|.
name|getPackageManager
argument_list|()
operator|.
name|getServiceInfo
argument_list|(
operator|new
name|ComponentName
argument_list|(
name|m_service
argument_list|,
name|m_service
operator|.
name|getClass
argument_list|()
argument_list|)
argument_list|,
name|PackageManager
operator|.
name|GET_META_DATA
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|m_service
operator|.
name|stopSelf
argument_list|()
expr_stmt|;
return|return;
block|}
if|if
condition|(
name|QtApplication
operator|.
name|m_delegateObject
operator|!=
literal|null
operator|&&
name|QtApplication
operator|.
name|onCreate
operator|!=
literal|null
condition|)
name|QtApplication
operator|.
name|invokeDelegateMethod
argument_list|(
name|QtApplication
operator|.
name|onCreate
argument_list|)
expr_stmt|;
name|startApp
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|finish
specifier|protected
name|void
name|finish
parameter_list|()
block|{
name|m_service
operator|.
name|stopSelf
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|loaderClassName
specifier|protected
name|String
name|loaderClassName
parameter_list|()
block|{
return|return
literal|"org.qtproject.qt5.android.QtServiceDelegate"
return|;
block|}
annotation|@
name|Override
DECL|method|contextClassName
specifier|protected
name|Class
argument_list|<
name|?
argument_list|>
name|contextClassName
parameter_list|()
block|{
return|return
name|android
operator|.
name|app
operator|.
name|Service
operator|.
name|class
return|;
block|}
block|}
end_class
end_unit
