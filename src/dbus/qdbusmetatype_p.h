begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the QtDBus module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QDBUSMETATYPE_P_H
end_ifndef
begin_define
DECL|macro|QDBUSMETATYPE_P_H
define|#
directive|define
name|QDBUSMETATYPE_P_H
end_define
begin_comment
comment|//
end_comment
begin_comment
comment|//  W A R N I N G
end_comment
begin_comment
comment|//  -------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// This file is not part of the Qt API.  It exists for the convenience
end_comment
begin_comment
comment|// of the QLibrary class.  This header file may change from
end_comment
begin_comment
comment|// version to version without notice, or even be removed.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// We mean it.
end_comment
begin_comment
comment|//
end_comment
begin_include
include|#
directive|include
file|<qdbusmetatype.h>
end_include
begin_include
include|#
directive|include
file|<qdbusmessage.h>
end_include
begin_include
include|#
directive|include
file|<qdbusargument.h>
end_include
begin_include
include|#
directive|include
file|<qdbusextratypes.h>
end_include
begin_include
include|#
directive|include
file|<qdbuserror.h>
end_include
begin_include
include|#
directive|include
file|<qdbusunixfiledescriptor.h>
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_DBUS
end_ifndef
begin_macro
name|QT_BEGIN_NAMESPACE
end_macro
begin_struct
DECL|struct|QDBusMetaTypeId
struct|struct
name|QDBusMetaTypeId
block|{
specifier|static
name|int
name|message
parameter_list|()
function_decl|;
comment|// QDBusMessage
specifier|static
name|int
name|argument
parameter_list|()
function_decl|;
comment|// QDBusArgument
specifier|static
name|int
name|variant
parameter_list|()
function_decl|;
comment|// QDBusVariant
specifier|static
name|int
name|objectpath
parameter_list|()
function_decl|;
comment|// QDBusObjectPath
specifier|static
name|int
name|signature
parameter_list|()
function_decl|;
comment|// QDBusSignature
specifier|static
name|int
name|error
parameter_list|()
function_decl|;
comment|// QDBusError
specifier|static
name|int
name|unixfd
parameter_list|()
function_decl|;
comment|// QDBusUnixFileDescriptor
specifier|static
name|void
name|init
parameter_list|()
function_decl|;
block|}
struct|;
end_struct
begin_expr_stmt
DECL|function|message
specifier|inline
name|int
name|QDBusMetaTypeId
operator|::
name|message
argument_list|()
ifdef|#
directive|ifdef
name|QT_BOOTSTRAPPED
block|{
return|return
name|qDBusRegisterMetaType
operator|<
name|QList
operator|<
name|QDBusUnixFileDescriptor
operator|>
expr|>
operator|(
operator|)
operator|+
literal|1
return|;
block|}
end_expr_stmt
begin_else
else|#
directive|else
end_else
begin_block
block|{
return|return
name|qMetaTypeId
operator|<
name|QDBusMessage
operator|>
operator|(
operator|)
return|;
block|}
end_block
begin_endif
endif|#
directive|endif
end_endif
begin_expr_stmt
DECL|function|argument
specifier|inline
name|int
name|QDBusMetaTypeId
operator|::
name|argument
argument_list|()
block|{
return|return
name|qMetaTypeId
operator|<
name|QDBusArgument
operator|>
operator|(
operator|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|variant
specifier|inline
name|int
name|QDBusMetaTypeId
operator|::
name|variant
argument_list|()
block|{
return|return
name|qMetaTypeId
operator|<
name|QDBusVariant
operator|>
operator|(
operator|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|objectpath
specifier|inline
name|int
name|QDBusMetaTypeId
operator|::
name|objectpath
argument_list|()
block|{
return|return
name|qMetaTypeId
operator|<
name|QDBusObjectPath
operator|>
operator|(
operator|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|signature
specifier|inline
name|int
name|QDBusMetaTypeId
operator|::
name|signature
argument_list|()
block|{
return|return
name|qMetaTypeId
operator|<
name|QDBusSignature
operator|>
operator|(
operator|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|error
specifier|inline
name|int
name|QDBusMetaTypeId
operator|::
name|error
argument_list|()
ifdef|#
directive|ifdef
name|QT_BOOTSTRAPPED
block|{
return|return
name|qDBusRegisterMetaType
operator|<
name|QList
operator|<
name|QDBusUnixFileDescriptor
operator|>
expr|>
operator|(
operator|)
operator|+
literal|2
return|;
block|}
end_expr_stmt
begin_else
else|#
directive|else
end_else
begin_block
block|{
return|return
name|qMetaTypeId
operator|<
name|QDBusError
operator|>
operator|(
operator|)
return|;
block|}
end_block
begin_endif
endif|#
directive|endif
end_endif
begin_expr_stmt
DECL|function|unixfd
specifier|inline
name|int
name|QDBusMetaTypeId
operator|::
name|unixfd
argument_list|()
block|{
return|return
name|qMetaTypeId
operator|<
name|QDBusUnixFileDescriptor
operator|>
operator|(
operator|)
return|;
block|}
end_expr_stmt
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_DBUS
end_comment
begin_endif
endif|#
directive|endif
end_endif
end_unit
