begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Copyright (C) 2015 Intel Corporation. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the QtDBus module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|//  W A R N I N G
end_comment
begin_comment
comment|//  -------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// This file is not part of the public API.  This header file may
end_comment
begin_comment
comment|// change from version to version without notice, or even be
end_comment
begin_comment
comment|// removed.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// We mean it.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|//
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QDBUSCONNECTIONMANAGER_P_H
end_ifndef
begin_define
DECL|macro|QDBUSCONNECTIONMANAGER_P_H
define|#
directive|define
name|QDBUSCONNECTIONMANAGER_P_H
end_define
begin_include
include|#
directive|include
file|"qdbusconnection_p.h"
end_include
begin_include
include|#
directive|include
file|"private/qthread_p.h"
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_DBUS
end_ifndef
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
name|class
name|QDBusConnectionManager
range|:
name|public
name|QDaemonThread
block|{
name|Q_OBJECT
expr|struct
name|ConnectionRequestData
block|;
name|public
operator|:
name|QDBusConnectionManager
argument_list|()
block|;
operator|~
name|QDBusConnectionManager
argument_list|()
block|;
specifier|static
name|QDBusConnectionManager
operator|*
name|instance
argument_list|()
block|;
name|QDBusConnectionPrivate
operator|*
name|busConnection
argument_list|(
argument|QDBusConnection::BusType type
argument_list|)
block|;
name|QDBusConnectionPrivate
operator|*
name|connection
argument_list|(
argument|const QString&name
argument_list|)
specifier|const
block|;
name|void
name|removeConnection
argument_list|(
specifier|const
name|QString
operator|&
name|name
argument_list|)
block|;
name|void
name|setConnection
argument_list|(
specifier|const
name|QString
operator|&
name|name
argument_list|,
name|QDBusConnectionPrivate
operator|*
name|c
argument_list|)
block|;
name|QDBusConnectionPrivate
operator|*
name|connectToBus
argument_list|(
argument|QDBusConnection::BusType type
argument_list|,
argument|const QString&name
argument_list|)
block|;
name|QDBusConnectionPrivate
operator|*
name|connectToBus
argument_list|(
specifier|const
name|QString
operator|&
name|address
argument_list|,
specifier|const
name|QString
operator|&
name|name
argument_list|)
block|;
name|QDBusConnectionPrivate
operator|*
name|connectToPeer
argument_list|(
specifier|const
name|QString
operator|&
name|address
argument_list|,
specifier|const
name|QString
operator|&
name|name
argument_list|)
block|;
name|mutable
name|QMutex
name|mutex
block|;
name|signals
operator|:
name|void
name|connectionRequested
argument_list|(
name|ConnectionRequestData
operator|*
argument_list|)
block|;
name|void
name|serverRequested
argument_list|(
specifier|const
name|QString
operator|&
name|address
argument_list|,
name|void
operator|*
name|server
argument_list|)
block|;
name|protected
operator|:
name|void
name|run
argument_list|()
name|Q_DECL_OVERRIDE
block|;
name|private
operator|:
name|void
name|executeConnectionRequest
argument_list|(
name|ConnectionRequestData
operator|*
name|data
argument_list|)
block|;
name|void
name|createServer
argument_list|(
specifier|const
name|QString
operator|&
name|address
argument_list|,
name|void
operator|*
name|server
argument_list|)
block|;
name|QHash
operator|<
name|QString
block|,
name|QDBusConnectionPrivate
operator|*
operator|>
name|connectionHash
block|;
name|QMutex
name|defaultBusMutex
block|;
name|QDBusConnectionPrivate
operator|*
name|defaultBuses
index|[
literal|2
index|]
block|;
name|mutable
name|QMutex
name|senderMutex
block|;
name|QString
name|senderName
block|;
comment|// internal; will probably change
block|}
decl_stmt|;
end_decl_stmt
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_DBUS
end_comment
begin_endif
endif|#
directive|endif
end_endif
end_unit
