begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the documentation of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of Digia Plc and its Subsidiary(-ies) nor the names **     of its contributors may be used to endorse or promote products derived **     from this software without specific prior written permission. ** ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_comment
comment|//! [0]
end_comment
begin_class
DECL|class|MyObject
class|class
name|MyObject
super|:
specifier|public
name|QObject
super|,
specifier|protected
name|QDBusContext
block|{
name|Q_OBJECT
DECL|member|conn
name|QDBusConnection
name|conn
decl_stmt|;
DECL|member|msg
name|QDBusMessage
name|msg
decl_stmt|;
operator|...
specifier|protected
name|slots
operator|:
name|void
name|process
argument_list|()
expr_stmt|;
public|public
name|slots
public|:
name|void
name|methodWithError
parameter_list|()
function_decl|;
name|QString
name|methodWithDelayedReply
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_function
DECL|function|methodWithError
name|void
name|MyObject
operator|::
name|methodWithError
parameter_list|()
block|{
name|sendErrorReply
argument_list|(
name|QDBusError
operator|::
name|NotSupported
argument_list|,
literal|"The method call 'methodWithError()' is not supported"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|methodWithDelayedReply
name|QString
name|MyObject
operator|::
name|methodWithDelayedReply
parameter_list|()
block|{
name|conn
operator|=
name|connection
argument_list|()
expr_stmt|;
name|msg
operator|=
name|message
argument_list|()
expr_stmt|;
name|setDelayedReply
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
name|this
argument_list|,
literal|"process"
argument_list|,
name|Qt
operator|::
name|QueuedConnection
argument_list|)
expr_stmt|;
return|return
name|QString
argument_list|()
return|;
block|}
end_function
begin_comment
comment|//! [0]
end_comment
end_unit
