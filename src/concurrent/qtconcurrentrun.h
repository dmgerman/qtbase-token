begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the QtCore module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_comment
comment|// Generated code, do not edit! Use generator at tools/qtconcurrent/generaterun/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QTCONCURRENT_RUN_H
end_ifndef
begin_define
DECL|macro|QTCONCURRENT_RUN_H
define|#
directive|define
name|QTCONCURRENT_RUN_H
end_define
begin_include
include|#
directive|include
file|<QtConcurrent/qtconcurrentcompilertest.h>
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_CONCURRENT
end_ifndef
begin_include
include|#
directive|include
file|<QtConcurrent/qtconcurrentrunbase.h>
end_include
begin_include
include|#
directive|include
file|<QtConcurrent/qtconcurrentstoredfunctioncall.h>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
ifdef|#
directive|ifdef
name|Q_QDOC
name|namespace
name|QtConcurrent
block|{
name|template
operator|<
name|typename
name|T
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|Function function
argument_list|,
argument|...
argument_list|)
expr_stmt|;
name|template
operator|<
name|typename
name|T
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|QThreadPool *pool
argument_list|,
argument|Function function
argument_list|,
argument|...
argument_list|)
expr_stmt|;
block|}
end_decl_stmt
begin_comment
comment|// namespace QtConcurrent
end_comment
begin_else
else|#
directive|else
end_else
begin_decl_stmt
name|namespace
name|QtConcurrent
block|{
name|template
operator|<
name|typename
name|T
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|T (*functionPointer)()
argument_list|)
block|{
return|return
operator|(
name|new
name|StoredFunctorCall0
operator|<
name|T
operator|,
name|T
argument_list|(
operator|*
argument_list|)
argument_list|()
operator|>
operator|(
name|functionPointer
operator|)
operator|)
operator|->
name|start
argument_list|()
return|;
block|}
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Param1
operator|,
name|typename
name|Arg1
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|T (*functionPointer)(Param1)
argument_list|,
argument|const Arg1&arg1
argument_list|)
block|{
return|return
operator|(
name|new
name|StoredFunctorCall1
operator|<
name|T
operator|,
name|T
argument_list|(
operator|*
argument_list|)
argument_list|(
name|Param1
argument_list|)
operator|,
name|Arg1
operator|>
operator|(
name|functionPointer
operator|,
name|arg1
operator|)
operator|)
operator|->
name|start
argument_list|()
return|;
block|}
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Param1
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Param2
operator|,
name|typename
name|Arg2
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|T (*functionPointer)(Param1, Param2)
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|)
block|{
return|return
operator|(
name|new
name|StoredFunctorCall2
operator|<
name|T
operator|,
name|T
argument_list|(
operator|*
argument_list|)
argument_list|(
name|Param1
argument_list|,
name|Param2
argument_list|)
operator|,
name|Arg1
operator|,
name|Arg2
operator|>
operator|(
name|functionPointer
operator|,
name|arg1
operator|,
name|arg2
operator|)
operator|)
operator|->
name|start
argument_list|()
return|;
block|}
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Param1
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Param2
operator|,
name|typename
name|Arg2
operator|,
name|typename
name|Param3
operator|,
name|typename
name|Arg3
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|T (*functionPointer)(Param1, Param2, Param3)
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|,
argument|const Arg3&arg3
argument_list|)
block|{
return|return
operator|(
name|new
name|StoredFunctorCall3
operator|<
name|T
operator|,
name|T
argument_list|(
operator|*
argument_list|)
argument_list|(
name|Param1
argument_list|,
name|Param2
argument_list|,
name|Param3
argument_list|)
operator|,
name|Arg1
operator|,
name|Arg2
operator|,
name|Arg3
operator|>
operator|(
name|functionPointer
operator|,
name|arg1
operator|,
name|arg2
operator|,
name|arg3
operator|)
operator|)
operator|->
name|start
argument_list|()
return|;
block|}
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Param1
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Param2
operator|,
name|typename
name|Arg2
operator|,
name|typename
name|Param3
operator|,
name|typename
name|Arg3
operator|,
name|typename
name|Param4
operator|,
name|typename
name|Arg4
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|T (*functionPointer)(Param1, Param2, Param3, Param4)
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|,
argument|const Arg3&arg3
argument_list|,
argument|const Arg4&arg4
argument_list|)
block|{
return|return
operator|(
name|new
name|StoredFunctorCall4
operator|<
name|T
operator|,
name|T
argument_list|(
operator|*
argument_list|)
argument_list|(
name|Param1
argument_list|,
name|Param2
argument_list|,
name|Param3
argument_list|,
name|Param4
argument_list|)
operator|,
name|Arg1
operator|,
name|Arg2
operator|,
name|Arg3
operator|,
name|Arg4
operator|>
operator|(
name|functionPointer
operator|,
name|arg1
operator|,
name|arg2
operator|,
name|arg3
operator|,
name|arg4
operator|)
operator|)
operator|->
name|start
argument_list|()
return|;
block|}
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Param1
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Param2
operator|,
name|typename
name|Arg2
operator|,
name|typename
name|Param3
operator|,
name|typename
name|Arg3
operator|,
name|typename
name|Param4
operator|,
name|typename
name|Arg4
operator|,
name|typename
name|Param5
operator|,
name|typename
name|Arg5
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|T (*functionPointer)(Param1, Param2, Param3, Param4, Param5)
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|,
argument|const Arg3&arg3
argument_list|,
argument|const Arg4&arg4
argument_list|,
argument|const Arg5&arg5
argument_list|)
block|{
return|return
operator|(
name|new
name|StoredFunctorCall5
operator|<
name|T
operator|,
name|T
argument_list|(
operator|*
argument_list|)
argument_list|(
name|Param1
argument_list|,
name|Param2
argument_list|,
name|Param3
argument_list|,
name|Param4
argument_list|,
name|Param5
argument_list|)
operator|,
name|Arg1
operator|,
name|Arg2
operator|,
name|Arg3
operator|,
name|Arg4
operator|,
name|Arg5
operator|>
operator|(
name|functionPointer
operator|,
name|arg1
operator|,
name|arg2
operator|,
name|arg3
operator|,
name|arg4
operator|,
name|arg5
operator|)
operator|)
operator|->
name|start
argument_list|()
return|;
block|}
if|#
directive|if
name|defined
argument_list|(
name|Q_COMPILER_DECLTYPE
argument_list|)
operator|&&
name|defined
argument_list|(
name|Q_COMPILER_AUTO_FUNCTION
argument_list|)
name|template
operator|<
name|typename
name|Functor
operator|>
name|auto
name|run
argument_list|(
argument|Functor functor
argument_list|)
operator|->
name|typename
name|QtPrivate
operator|::
name|QEnableIf
operator|<
operator|!
name|QtPrivate
operator|::
name|HasResultType
operator|<
name|Functor
operator|>
operator|::
name|Value
operator|,
name|QFuture
operator|<
name|decltype
argument_list|(
name|functor
argument_list|()
argument_list|)
operator|>
expr|>
operator|::
name|Type
block|{
typedef|typedef
name|decltype
argument_list|(
argument|functor()
argument_list|)
name|result_type
expr_stmt|;
return|return
operator|(
name|new
name|StoredFunctorCall0
operator|<
name|result_type
operator|,
name|Functor
operator|>
operator|(
name|functor
operator|)
operator|)
operator|->
name|start
argument_list|()
return|;
block|}
end_decl_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|Functor
operator|,
name|typename
name|Arg1
operator|>
name|auto
name|run
argument_list|(
argument|Functor functor
argument_list|,
argument|const Arg1&arg1
argument_list|)
operator|->
name|typename
name|QtPrivate
operator|::
name|QEnableIf
operator|<
operator|!
name|QtPrivate
operator|::
name|HasResultType
operator|<
name|Functor
operator|>
operator|::
name|Value
operator|,
name|QFuture
operator|<
name|decltype
argument_list|(
name|functor
argument_list|(
name|arg1
argument_list|)
argument_list|)
operator|>
expr|>
operator|::
name|Type
block|{
typedef|typedef
name|decltype
argument_list|(
argument|functor(arg1)
argument_list|)
name|result_type
expr_stmt|;
end_expr_stmt
begin_return
return|return
operator|(
name|new
name|StoredFunctorCall1
operator|<
name|result_type
operator|,
name|Functor
operator|,
name|Arg1
operator|>
operator|(
name|functor
operator|,
name|arg1
operator|)
operator|)
operator|->
name|start
argument_list|()
return|;
end_return
begin_expr_stmt
unit|}  template
operator|<
name|typename
name|Functor
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Arg2
operator|>
name|auto
name|run
argument_list|(
argument|Functor functor
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|)
operator|->
name|typename
name|QtPrivate
operator|::
name|QEnableIf
operator|<
operator|!
name|QtPrivate
operator|::
name|HasResultType
operator|<
name|Functor
operator|>
operator|::
name|Value
operator|,
name|QFuture
operator|<
name|decltype
argument_list|(
name|functor
argument_list|(
name|arg1
argument_list|,
name|arg2
argument_list|)
argument_list|)
operator|>
expr|>
operator|::
name|Type
block|{
typedef|typedef
name|decltype
argument_list|(
argument|functor(arg1, arg2)
argument_list|)
name|result_type
expr_stmt|;
end_expr_stmt
begin_return
return|return
operator|(
name|new
name|StoredFunctorCall2
operator|<
name|result_type
operator|,
name|Functor
operator|,
name|Arg1
operator|,
name|Arg2
operator|>
operator|(
name|functor
operator|,
name|arg1
operator|,
name|arg2
operator|)
operator|)
operator|->
name|start
argument_list|()
return|;
end_return
begin_expr_stmt
unit|}  template
operator|<
name|typename
name|Functor
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Arg2
operator|,
name|typename
name|Arg3
operator|>
name|auto
name|run
argument_list|(
argument|Functor functor
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|,
argument|const Arg3&arg3
argument_list|)
operator|->
name|typename
name|QtPrivate
operator|::
name|QEnableIf
operator|<
operator|!
name|QtPrivate
operator|::
name|HasResultType
operator|<
name|Functor
operator|>
operator|::
name|Value
operator|,
name|QFuture
operator|<
name|decltype
argument_list|(
name|functor
argument_list|(
name|arg1
argument_list|,
name|arg2
argument_list|,
name|arg3
argument_list|)
argument_list|)
operator|>
expr|>
operator|::
name|Type
block|{
typedef|typedef
name|decltype
argument_list|(
argument|functor(arg1, arg2, arg3)
argument_list|)
name|result_type
expr_stmt|;
end_expr_stmt
begin_return
return|return
operator|(
name|new
name|StoredFunctorCall3
operator|<
name|result_type
operator|,
name|Functor
operator|,
name|Arg1
operator|,
name|Arg2
operator|,
name|Arg3
operator|>
operator|(
name|functor
operator|,
name|arg1
operator|,
name|arg2
operator|,
name|arg3
operator|)
operator|)
operator|->
name|start
argument_list|()
return|;
end_return
begin_expr_stmt
unit|}  template
operator|<
name|typename
name|Functor
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Arg2
operator|,
name|typename
name|Arg3
operator|,
name|typename
name|Arg4
operator|>
name|auto
name|run
argument_list|(
argument|Functor functor
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|,
argument|const Arg3&arg3
argument_list|,
argument|const Arg4&arg4
argument_list|)
operator|->
name|typename
name|QtPrivate
operator|::
name|QEnableIf
operator|<
operator|!
name|QtPrivate
operator|::
name|HasResultType
operator|<
name|Functor
operator|>
operator|::
name|Value
operator|,
name|QFuture
operator|<
name|decltype
argument_list|(
name|functor
argument_list|(
name|arg1
argument_list|,
name|arg2
argument_list|,
name|arg3
argument_list|,
name|arg4
argument_list|)
argument_list|)
operator|>
expr|>
operator|::
name|Type
block|{
typedef|typedef
name|decltype
argument_list|(
argument|functor(arg1, arg2, arg3, arg4)
argument_list|)
name|result_type
expr_stmt|;
end_expr_stmt
begin_return
return|return
operator|(
name|new
name|StoredFunctorCall4
operator|<
name|result_type
operator|,
name|Functor
operator|,
name|Arg1
operator|,
name|Arg2
operator|,
name|Arg3
operator|,
name|Arg4
operator|>
operator|(
name|functor
operator|,
name|arg1
operator|,
name|arg2
operator|,
name|arg3
operator|,
name|arg4
operator|)
operator|)
operator|->
name|start
argument_list|()
return|;
end_return
begin_expr_stmt
unit|}  template
operator|<
name|typename
name|Functor
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Arg2
operator|,
name|typename
name|Arg3
operator|,
name|typename
name|Arg4
operator|,
name|typename
name|Arg5
operator|>
name|auto
name|run
argument_list|(
argument|Functor functor
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|,
argument|const Arg3&arg3
argument_list|,
argument|const Arg4&arg4
argument_list|,
argument|const Arg5&arg5
argument_list|)
operator|->
name|typename
name|QtPrivate
operator|::
name|QEnableIf
operator|<
operator|!
name|QtPrivate
operator|::
name|HasResultType
operator|<
name|Functor
operator|>
operator|::
name|Value
operator|,
name|QFuture
operator|<
name|decltype
argument_list|(
name|functor
argument_list|(
name|arg1
argument_list|,
name|arg2
argument_list|,
name|arg3
argument_list|,
name|arg4
argument_list|,
name|arg5
argument_list|)
argument_list|)
operator|>
expr|>
operator|::
name|Type
block|{
typedef|typedef
name|decltype
argument_list|(
argument|functor(arg1, arg2, arg3, arg4, arg5)
argument_list|)
name|result_type
expr_stmt|;
end_expr_stmt
begin_return
return|return
operator|(
name|new
name|StoredFunctorCall5
operator|<
name|result_type
operator|,
name|Functor
operator|,
name|Arg1
operator|,
name|Arg2
operator|,
name|Arg3
operator|,
name|Arg4
operator|,
name|Arg5
operator|>
operator|(
name|functor
operator|,
name|arg1
operator|,
name|arg2
operator|,
name|arg3
operator|,
name|arg4
operator|,
name|arg5
operator|)
operator|)
operator|->
name|start
argument_list|()
return|;
end_return
begin_endif
unit|}
endif|#
directive|endif
end_endif
begin_expr_stmt
unit|template
operator|<
name|typename
name|FunctionObject
operator|>
name|QFuture
operator|<
name|typename
name|FunctionObject
operator|::
name|result_type
operator|>
name|run
argument_list|(
argument|FunctionObject functionObject
argument_list|)
block|{
return|return
operator|(
name|new
name|StoredFunctorCall0
operator|<
name|typename
name|FunctionObject
operator|::
name|result_type
operator|,
name|FunctionObject
operator|>
operator|(
name|functionObject
operator|)
operator|)
operator|->
name|start
argument_list|()
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|FunctionObject
operator|,
name|typename
name|Arg1
operator|>
name|QFuture
operator|<
name|typename
name|FunctionObject
operator|::
name|result_type
operator|>
name|run
argument_list|(
argument|FunctionObject functionObject
argument_list|,
argument|const Arg1&arg1
argument_list|)
block|{
return|return
operator|(
name|new
name|StoredFunctorCall1
operator|<
name|typename
name|FunctionObject
operator|::
name|result_type
operator|,
name|FunctionObject
operator|,
name|Arg1
operator|>
operator|(
name|functionObject
operator|,
name|arg1
operator|)
operator|)
operator|->
name|start
argument_list|()
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|FunctionObject
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Arg2
operator|>
name|QFuture
operator|<
name|typename
name|FunctionObject
operator|::
name|result_type
operator|>
name|run
argument_list|(
argument|FunctionObject functionObject
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|)
block|{
return|return
operator|(
name|new
name|StoredFunctorCall2
operator|<
name|typename
name|FunctionObject
operator|::
name|result_type
operator|,
name|FunctionObject
operator|,
name|Arg1
operator|,
name|Arg2
operator|>
operator|(
name|functionObject
operator|,
name|arg1
operator|,
name|arg2
operator|)
operator|)
operator|->
name|start
argument_list|()
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|FunctionObject
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Arg2
operator|,
name|typename
name|Arg3
operator|>
name|QFuture
operator|<
name|typename
name|FunctionObject
operator|::
name|result_type
operator|>
name|run
argument_list|(
argument|FunctionObject functionObject
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|,
argument|const Arg3&arg3
argument_list|)
block|{
return|return
operator|(
name|new
name|StoredFunctorCall3
operator|<
name|typename
name|FunctionObject
operator|::
name|result_type
operator|,
name|FunctionObject
operator|,
name|Arg1
operator|,
name|Arg2
operator|,
name|Arg3
operator|>
operator|(
name|functionObject
operator|,
name|arg1
operator|,
name|arg2
operator|,
name|arg3
operator|)
operator|)
operator|->
name|start
argument_list|()
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|FunctionObject
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Arg2
operator|,
name|typename
name|Arg3
operator|,
name|typename
name|Arg4
operator|>
name|QFuture
operator|<
name|typename
name|FunctionObject
operator|::
name|result_type
operator|>
name|run
argument_list|(
argument|FunctionObject functionObject
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|,
argument|const Arg3&arg3
argument_list|,
argument|const Arg4&arg4
argument_list|)
block|{
return|return
operator|(
name|new
name|StoredFunctorCall4
operator|<
name|typename
name|FunctionObject
operator|::
name|result_type
operator|,
name|FunctionObject
operator|,
name|Arg1
operator|,
name|Arg2
operator|,
name|Arg3
operator|,
name|Arg4
operator|>
operator|(
name|functionObject
operator|,
name|arg1
operator|,
name|arg2
operator|,
name|arg3
operator|,
name|arg4
operator|)
operator|)
operator|->
name|start
argument_list|()
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|FunctionObject
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Arg2
operator|,
name|typename
name|Arg3
operator|,
name|typename
name|Arg4
operator|,
name|typename
name|Arg5
operator|>
name|QFuture
operator|<
name|typename
name|FunctionObject
operator|::
name|result_type
operator|>
name|run
argument_list|(
argument|FunctionObject functionObject
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|,
argument|const Arg3&arg3
argument_list|,
argument|const Arg4&arg4
argument_list|,
argument|const Arg5&arg5
argument_list|)
block|{
return|return
operator|(
name|new
name|StoredFunctorCall5
operator|<
name|typename
name|FunctionObject
operator|::
name|result_type
operator|,
name|FunctionObject
operator|,
name|Arg1
operator|,
name|Arg2
operator|,
name|Arg3
operator|,
name|Arg4
operator|,
name|Arg5
operator|>
operator|(
name|functionObject
operator|,
name|arg1
operator|,
name|arg2
operator|,
name|arg3
operator|,
name|arg4
operator|,
name|arg5
operator|)
operator|)
operator|->
name|start
argument_list|()
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|FunctionObject
operator|>
name|QFuture
operator|<
name|typename
name|FunctionObject
operator|::
name|result_type
operator|>
name|run
argument_list|(
argument|FunctionObject *functionObject
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredFunctorPointerCall0
operator|<
name|typename
name|FunctionObject
operator|::
name|result_type
operator|,
name|FunctionObject
operator|>
operator|::
name|type
argument_list|(
name|functionObject
argument_list|)
operator|)
operator|->
name|start
argument_list|()
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|FunctionObject
operator|,
name|typename
name|Arg1
operator|>
name|QFuture
operator|<
name|typename
name|FunctionObject
operator|::
name|result_type
operator|>
name|run
argument_list|(
argument|FunctionObject *functionObject
argument_list|,
argument|const Arg1&arg1
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredFunctorPointerCall1
operator|<
name|typename
name|FunctionObject
operator|::
name|result_type
operator|,
name|FunctionObject
operator|,
name|Arg1
operator|>
operator|::
name|type
argument_list|(
name|functionObject
argument_list|,
name|arg1
argument_list|)
operator|)
operator|->
name|start
argument_list|()
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|FunctionObject
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Arg2
operator|>
name|QFuture
operator|<
name|typename
name|FunctionObject
operator|::
name|result_type
operator|>
name|run
argument_list|(
argument|FunctionObject *functionObject
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredFunctorPointerCall2
operator|<
name|typename
name|FunctionObject
operator|::
name|result_type
operator|,
name|FunctionObject
operator|,
name|Arg1
operator|,
name|Arg2
operator|>
operator|::
name|type
argument_list|(
name|functionObject
argument_list|,
name|arg1
argument_list|,
name|arg2
argument_list|)
operator|)
operator|->
name|start
argument_list|()
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|FunctionObject
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Arg2
operator|,
name|typename
name|Arg3
operator|>
name|QFuture
operator|<
name|typename
name|FunctionObject
operator|::
name|result_type
operator|>
name|run
argument_list|(
argument|FunctionObject *functionObject
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|,
argument|const Arg3&arg3
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredFunctorPointerCall3
operator|<
name|typename
name|FunctionObject
operator|::
name|result_type
operator|,
name|FunctionObject
operator|,
name|Arg1
operator|,
name|Arg2
operator|,
name|Arg3
operator|>
operator|::
name|type
argument_list|(
name|functionObject
argument_list|,
name|arg1
argument_list|,
name|arg2
argument_list|,
name|arg3
argument_list|)
operator|)
operator|->
name|start
argument_list|()
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|FunctionObject
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Arg2
operator|,
name|typename
name|Arg3
operator|,
name|typename
name|Arg4
operator|>
name|QFuture
operator|<
name|typename
name|FunctionObject
operator|::
name|result_type
operator|>
name|run
argument_list|(
argument|FunctionObject *functionObject
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|,
argument|const Arg3&arg3
argument_list|,
argument|const Arg4&arg4
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredFunctorPointerCall4
operator|<
name|typename
name|FunctionObject
operator|::
name|result_type
operator|,
name|FunctionObject
operator|,
name|Arg1
operator|,
name|Arg2
operator|,
name|Arg3
operator|,
name|Arg4
operator|>
operator|::
name|type
argument_list|(
name|functionObject
argument_list|,
name|arg1
argument_list|,
name|arg2
argument_list|,
name|arg3
argument_list|,
name|arg4
argument_list|)
operator|)
operator|->
name|start
argument_list|()
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|FunctionObject
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Arg2
operator|,
name|typename
name|Arg3
operator|,
name|typename
name|Arg4
operator|,
name|typename
name|Arg5
operator|>
name|QFuture
operator|<
name|typename
name|FunctionObject
operator|::
name|result_type
operator|>
name|run
argument_list|(
argument|FunctionObject *functionObject
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|,
argument|const Arg3&arg3
argument_list|,
argument|const Arg4&arg4
argument_list|,
argument|const Arg5&arg5
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredFunctorPointerCall5
operator|<
name|typename
name|FunctionObject
operator|::
name|result_type
operator|,
name|FunctionObject
operator|,
name|Arg1
operator|,
name|Arg2
operator|,
name|Arg3
operator|,
name|Arg4
operator|,
name|Arg5
operator|>
operator|::
name|type
argument_list|(
name|functionObject
argument_list|,
name|arg1
argument_list|,
name|arg2
argument_list|,
name|arg3
argument_list|,
name|arg4
argument_list|,
name|arg5
argument_list|)
operator|)
operator|->
name|start
argument_list|()
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Class
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|const Class&object
argument_list|,
argument|T (Class::*fn)()
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredMemberFunctionCall0
operator|<
name|T
operator|,
name|Class
operator|>
operator|::
name|type
argument_list|(
name|fn
argument_list|,
name|object
argument_list|)
operator|)
operator|->
name|start
argument_list|()
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Class
operator|,
name|typename
name|Param1
operator|,
name|typename
name|Arg1
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|const Class&object
argument_list|,
argument|T (Class::*fn)(Param1)
argument_list|,
argument|const Arg1&arg1
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredMemberFunctionCall1
operator|<
name|T
operator|,
name|Class
operator|,
name|Param1
operator|,
name|Arg1
operator|>
operator|::
name|type
argument_list|(
name|fn
argument_list|,
name|object
argument_list|,
name|arg1
argument_list|)
operator|)
operator|->
name|start
argument_list|()
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Class
operator|,
name|typename
name|Param1
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Param2
operator|,
name|typename
name|Arg2
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|const Class&object
argument_list|,
argument|T (Class::*fn)(Param1, Param2)
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredMemberFunctionCall2
operator|<
name|T
operator|,
name|Class
operator|,
name|Param1
operator|,
name|Arg1
operator|,
name|Param2
operator|,
name|Arg2
operator|>
operator|::
name|type
argument_list|(
name|fn
argument_list|,
name|object
argument_list|,
name|arg1
argument_list|,
name|arg2
argument_list|)
operator|)
operator|->
name|start
argument_list|()
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Class
operator|,
name|typename
name|Param1
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Param2
operator|,
name|typename
name|Arg2
operator|,
name|typename
name|Param3
operator|,
name|typename
name|Arg3
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|const Class&object
argument_list|,
argument|T (Class::*fn)(Param1, Param2, Param3)
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|,
argument|const Arg3&arg3
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredMemberFunctionCall3
operator|<
name|T
operator|,
name|Class
operator|,
name|Param1
operator|,
name|Arg1
operator|,
name|Param2
operator|,
name|Arg2
operator|,
name|Param3
operator|,
name|Arg3
operator|>
operator|::
name|type
argument_list|(
name|fn
argument_list|,
name|object
argument_list|,
name|arg1
argument_list|,
name|arg2
argument_list|,
name|arg3
argument_list|)
operator|)
operator|->
name|start
argument_list|()
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Class
operator|,
name|typename
name|Param1
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Param2
operator|,
name|typename
name|Arg2
operator|,
name|typename
name|Param3
operator|,
name|typename
name|Arg3
operator|,
name|typename
name|Param4
operator|,
name|typename
name|Arg4
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|const Class&object
argument_list|,
argument|T (Class::*fn)(Param1, Param2, Param3, Param4)
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|,
argument|const Arg3&arg3
argument_list|,
argument|const Arg4&arg4
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredMemberFunctionCall4
operator|<
name|T
operator|,
name|Class
operator|,
name|Param1
operator|,
name|Arg1
operator|,
name|Param2
operator|,
name|Arg2
operator|,
name|Param3
operator|,
name|Arg3
operator|,
name|Param4
operator|,
name|Arg4
operator|>
operator|::
name|type
argument_list|(
name|fn
argument_list|,
name|object
argument_list|,
name|arg1
argument_list|,
name|arg2
argument_list|,
name|arg3
argument_list|,
name|arg4
argument_list|)
operator|)
operator|->
name|start
argument_list|()
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Class
operator|,
name|typename
name|Param1
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Param2
operator|,
name|typename
name|Arg2
operator|,
name|typename
name|Param3
operator|,
name|typename
name|Arg3
operator|,
name|typename
name|Param4
operator|,
name|typename
name|Arg4
operator|,
name|typename
name|Param5
operator|,
name|typename
name|Arg5
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|const Class&object
argument_list|,
argument|T (Class::*fn)(Param1, Param2, Param3, Param4, Param5)
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|,
argument|const Arg3&arg3
argument_list|,
argument|const Arg4&arg4
argument_list|,
argument|const Arg5&arg5
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredMemberFunctionCall5
operator|<
name|T
operator|,
name|Class
operator|,
name|Param1
operator|,
name|Arg1
operator|,
name|Param2
operator|,
name|Arg2
operator|,
name|Param3
operator|,
name|Arg3
operator|,
name|Param4
operator|,
name|Arg4
operator|,
name|Param5
operator|,
name|Arg5
operator|>
operator|::
name|type
argument_list|(
name|fn
argument_list|,
name|object
argument_list|,
name|arg1
argument_list|,
name|arg2
argument_list|,
name|arg3
argument_list|,
name|arg4
argument_list|,
name|arg5
argument_list|)
operator|)
operator|->
name|start
argument_list|()
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Class
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|const Class&object
argument_list|,
argument|T (Class::*fn)() const
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredConstMemberFunctionCall0
operator|<
name|T
operator|,
name|Class
operator|>
operator|::
name|type
argument_list|(
name|fn
argument_list|,
name|object
argument_list|)
operator|)
operator|->
name|start
argument_list|()
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Class
operator|,
name|typename
name|Param1
operator|,
name|typename
name|Arg1
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|const Class&object
argument_list|,
argument|T (Class::*fn)(Param1) const
argument_list|,
argument|const Arg1&arg1
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredConstMemberFunctionCall1
operator|<
name|T
operator|,
name|Class
operator|,
name|Param1
operator|,
name|Arg1
operator|>
operator|::
name|type
argument_list|(
name|fn
argument_list|,
name|object
argument_list|,
name|arg1
argument_list|)
operator|)
operator|->
name|start
argument_list|()
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Class
operator|,
name|typename
name|Param1
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Param2
operator|,
name|typename
name|Arg2
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|const Class&object
argument_list|,
argument|T (Class::*fn)(Param1, Param2) const
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredConstMemberFunctionCall2
operator|<
name|T
operator|,
name|Class
operator|,
name|Param1
operator|,
name|Arg1
operator|,
name|Param2
operator|,
name|Arg2
operator|>
operator|::
name|type
argument_list|(
name|fn
argument_list|,
name|object
argument_list|,
name|arg1
argument_list|,
name|arg2
argument_list|)
operator|)
operator|->
name|start
argument_list|()
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Class
operator|,
name|typename
name|Param1
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Param2
operator|,
name|typename
name|Arg2
operator|,
name|typename
name|Param3
operator|,
name|typename
name|Arg3
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|const Class&object
argument_list|,
argument|T (Class::*fn)(Param1, Param2, Param3) const
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|,
argument|const Arg3&arg3
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredConstMemberFunctionCall3
operator|<
name|T
operator|,
name|Class
operator|,
name|Param1
operator|,
name|Arg1
operator|,
name|Param2
operator|,
name|Arg2
operator|,
name|Param3
operator|,
name|Arg3
operator|>
operator|::
name|type
argument_list|(
name|fn
argument_list|,
name|object
argument_list|,
name|arg1
argument_list|,
name|arg2
argument_list|,
name|arg3
argument_list|)
operator|)
operator|->
name|start
argument_list|()
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Class
operator|,
name|typename
name|Param1
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Param2
operator|,
name|typename
name|Arg2
operator|,
name|typename
name|Param3
operator|,
name|typename
name|Arg3
operator|,
name|typename
name|Param4
operator|,
name|typename
name|Arg4
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|const Class&object
argument_list|,
argument|T (Class::*fn)(Param1, Param2, Param3, Param4) const
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|,
argument|const Arg3&arg3
argument_list|,
argument|const Arg4&arg4
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredConstMemberFunctionCall4
operator|<
name|T
operator|,
name|Class
operator|,
name|Param1
operator|,
name|Arg1
operator|,
name|Param2
operator|,
name|Arg2
operator|,
name|Param3
operator|,
name|Arg3
operator|,
name|Param4
operator|,
name|Arg4
operator|>
operator|::
name|type
argument_list|(
name|fn
argument_list|,
name|object
argument_list|,
name|arg1
argument_list|,
name|arg2
argument_list|,
name|arg3
argument_list|,
name|arg4
argument_list|)
operator|)
operator|->
name|start
argument_list|()
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Class
operator|,
name|typename
name|Param1
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Param2
operator|,
name|typename
name|Arg2
operator|,
name|typename
name|Param3
operator|,
name|typename
name|Arg3
operator|,
name|typename
name|Param4
operator|,
name|typename
name|Arg4
operator|,
name|typename
name|Param5
operator|,
name|typename
name|Arg5
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|const Class&object
argument_list|,
argument|T (Class::*fn)(Param1, Param2, Param3, Param4, Param5) const
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|,
argument|const Arg3&arg3
argument_list|,
argument|const Arg4&arg4
argument_list|,
argument|const Arg5&arg5
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredConstMemberFunctionCall5
operator|<
name|T
operator|,
name|Class
operator|,
name|Param1
operator|,
name|Arg1
operator|,
name|Param2
operator|,
name|Arg2
operator|,
name|Param3
operator|,
name|Arg3
operator|,
name|Param4
operator|,
name|Arg4
operator|,
name|Param5
operator|,
name|Arg5
operator|>
operator|::
name|type
argument_list|(
name|fn
argument_list|,
name|object
argument_list|,
name|arg1
argument_list|,
name|arg2
argument_list|,
name|arg3
argument_list|,
name|arg4
argument_list|,
name|arg5
argument_list|)
operator|)
operator|->
name|start
argument_list|()
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Class
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|Class *object
argument_list|,
argument|T (Class::*fn)()
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredMemberFunctionPointerCall0
operator|<
name|T
operator|,
name|Class
operator|>
operator|::
name|type
argument_list|(
name|fn
argument_list|,
name|object
argument_list|)
operator|)
operator|->
name|start
argument_list|()
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Class
operator|,
name|typename
name|Param1
operator|,
name|typename
name|Arg1
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|Class *object
argument_list|,
argument|T (Class::*fn)(Param1)
argument_list|,
argument|const Arg1&arg1
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredMemberFunctionPointerCall1
operator|<
name|T
operator|,
name|Class
operator|,
name|Param1
operator|,
name|Arg1
operator|>
operator|::
name|type
argument_list|(
name|fn
argument_list|,
name|object
argument_list|,
name|arg1
argument_list|)
operator|)
operator|->
name|start
argument_list|()
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Class
operator|,
name|typename
name|Param1
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Param2
operator|,
name|typename
name|Arg2
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|Class *object
argument_list|,
argument|T (Class::*fn)(Param1, Param2)
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredMemberFunctionPointerCall2
operator|<
name|T
operator|,
name|Class
operator|,
name|Param1
operator|,
name|Arg1
operator|,
name|Param2
operator|,
name|Arg2
operator|>
operator|::
name|type
argument_list|(
name|fn
argument_list|,
name|object
argument_list|,
name|arg1
argument_list|,
name|arg2
argument_list|)
operator|)
operator|->
name|start
argument_list|()
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Class
operator|,
name|typename
name|Param1
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Param2
operator|,
name|typename
name|Arg2
operator|,
name|typename
name|Param3
operator|,
name|typename
name|Arg3
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|Class *object
argument_list|,
argument|T (Class::*fn)(Param1, Param2, Param3)
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|,
argument|const Arg3&arg3
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredMemberFunctionPointerCall3
operator|<
name|T
operator|,
name|Class
operator|,
name|Param1
operator|,
name|Arg1
operator|,
name|Param2
operator|,
name|Arg2
operator|,
name|Param3
operator|,
name|Arg3
operator|>
operator|::
name|type
argument_list|(
name|fn
argument_list|,
name|object
argument_list|,
name|arg1
argument_list|,
name|arg2
argument_list|,
name|arg3
argument_list|)
operator|)
operator|->
name|start
argument_list|()
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Class
operator|,
name|typename
name|Param1
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Param2
operator|,
name|typename
name|Arg2
operator|,
name|typename
name|Param3
operator|,
name|typename
name|Arg3
operator|,
name|typename
name|Param4
operator|,
name|typename
name|Arg4
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|Class *object
argument_list|,
argument|T (Class::*fn)(Param1, Param2, Param3, Param4)
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|,
argument|const Arg3&arg3
argument_list|,
argument|const Arg4&arg4
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredMemberFunctionPointerCall4
operator|<
name|T
operator|,
name|Class
operator|,
name|Param1
operator|,
name|Arg1
operator|,
name|Param2
operator|,
name|Arg2
operator|,
name|Param3
operator|,
name|Arg3
operator|,
name|Param4
operator|,
name|Arg4
operator|>
operator|::
name|type
argument_list|(
name|fn
argument_list|,
name|object
argument_list|,
name|arg1
argument_list|,
name|arg2
argument_list|,
name|arg3
argument_list|,
name|arg4
argument_list|)
operator|)
operator|->
name|start
argument_list|()
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Class
operator|,
name|typename
name|Param1
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Param2
operator|,
name|typename
name|Arg2
operator|,
name|typename
name|Param3
operator|,
name|typename
name|Arg3
operator|,
name|typename
name|Param4
operator|,
name|typename
name|Arg4
operator|,
name|typename
name|Param5
operator|,
name|typename
name|Arg5
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|Class *object
argument_list|,
argument|T (Class::*fn)(Param1, Param2, Param3, Param4, Param5)
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|,
argument|const Arg3&arg3
argument_list|,
argument|const Arg4&arg4
argument_list|,
argument|const Arg5&arg5
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredMemberFunctionPointerCall5
operator|<
name|T
operator|,
name|Class
operator|,
name|Param1
operator|,
name|Arg1
operator|,
name|Param2
operator|,
name|Arg2
operator|,
name|Param3
operator|,
name|Arg3
operator|,
name|Param4
operator|,
name|Arg4
operator|,
name|Param5
operator|,
name|Arg5
operator|>
operator|::
name|type
argument_list|(
name|fn
argument_list|,
name|object
argument_list|,
name|arg1
argument_list|,
name|arg2
argument_list|,
name|arg3
argument_list|,
name|arg4
argument_list|,
name|arg5
argument_list|)
operator|)
operator|->
name|start
argument_list|()
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Class
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|const Class *object
argument_list|,
argument|T (Class::*fn)() const
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredConstMemberFunctionPointerCall0
operator|<
name|T
operator|,
name|Class
operator|>
operator|::
name|type
argument_list|(
name|fn
argument_list|,
name|object
argument_list|)
operator|)
operator|->
name|start
argument_list|()
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Class
operator|,
name|typename
name|Param1
operator|,
name|typename
name|Arg1
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|const Class *object
argument_list|,
argument|T (Class::*fn)(Param1) const
argument_list|,
argument|const Arg1&arg1
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredConstMemberFunctionPointerCall1
operator|<
name|T
operator|,
name|Class
operator|,
name|Param1
operator|,
name|Arg1
operator|>
operator|::
name|type
argument_list|(
name|fn
argument_list|,
name|object
argument_list|,
name|arg1
argument_list|)
operator|)
operator|->
name|start
argument_list|()
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Class
operator|,
name|typename
name|Param1
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Param2
operator|,
name|typename
name|Arg2
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|const Class *object
argument_list|,
argument|T (Class::*fn)(Param1, Param2) const
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredConstMemberFunctionPointerCall2
operator|<
name|T
operator|,
name|Class
operator|,
name|Param1
operator|,
name|Arg1
operator|,
name|Param2
operator|,
name|Arg2
operator|>
operator|::
name|type
argument_list|(
name|fn
argument_list|,
name|object
argument_list|,
name|arg1
argument_list|,
name|arg2
argument_list|)
operator|)
operator|->
name|start
argument_list|()
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Class
operator|,
name|typename
name|Param1
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Param2
operator|,
name|typename
name|Arg2
operator|,
name|typename
name|Param3
operator|,
name|typename
name|Arg3
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|const Class *object
argument_list|,
argument|T (Class::*fn)(Param1, Param2, Param3) const
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|,
argument|const Arg3&arg3
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredConstMemberFunctionPointerCall3
operator|<
name|T
operator|,
name|Class
operator|,
name|Param1
operator|,
name|Arg1
operator|,
name|Param2
operator|,
name|Arg2
operator|,
name|Param3
operator|,
name|Arg3
operator|>
operator|::
name|type
argument_list|(
name|fn
argument_list|,
name|object
argument_list|,
name|arg1
argument_list|,
name|arg2
argument_list|,
name|arg3
argument_list|)
operator|)
operator|->
name|start
argument_list|()
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Class
operator|,
name|typename
name|Param1
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Param2
operator|,
name|typename
name|Arg2
operator|,
name|typename
name|Param3
operator|,
name|typename
name|Arg3
operator|,
name|typename
name|Param4
operator|,
name|typename
name|Arg4
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|const Class *object
argument_list|,
argument|T (Class::*fn)(Param1, Param2, Param3, Param4) const
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|,
argument|const Arg3&arg3
argument_list|,
argument|const Arg4&arg4
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredConstMemberFunctionPointerCall4
operator|<
name|T
operator|,
name|Class
operator|,
name|Param1
operator|,
name|Arg1
operator|,
name|Param2
operator|,
name|Arg2
operator|,
name|Param3
operator|,
name|Arg3
operator|,
name|Param4
operator|,
name|Arg4
operator|>
operator|::
name|type
argument_list|(
name|fn
argument_list|,
name|object
argument_list|,
name|arg1
argument_list|,
name|arg2
argument_list|,
name|arg3
argument_list|,
name|arg4
argument_list|)
operator|)
operator|->
name|start
argument_list|()
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Class
operator|,
name|typename
name|Param1
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Param2
operator|,
name|typename
name|Arg2
operator|,
name|typename
name|Param3
operator|,
name|typename
name|Arg3
operator|,
name|typename
name|Param4
operator|,
name|typename
name|Arg4
operator|,
name|typename
name|Param5
operator|,
name|typename
name|Arg5
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|const Class *object
argument_list|,
argument|T (Class::*fn)(Param1, Param2, Param3, Param4, Param5) const
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|,
argument|const Arg3&arg3
argument_list|,
argument|const Arg4&arg4
argument_list|,
argument|const Arg5&arg5
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredConstMemberFunctionPointerCall5
operator|<
name|T
operator|,
name|Class
operator|,
name|Param1
operator|,
name|Arg1
operator|,
name|Param2
operator|,
name|Arg2
operator|,
name|Param3
operator|,
name|Arg3
operator|,
name|Param4
operator|,
name|Arg4
operator|,
name|Param5
operator|,
name|Arg5
operator|>
operator|::
name|type
argument_list|(
name|fn
argument_list|,
name|object
argument_list|,
name|arg1
argument_list|,
name|arg2
argument_list|,
name|arg3
argument_list|,
name|arg4
argument_list|,
name|arg5
argument_list|)
operator|)
operator|->
name|start
argument_list|()
return|;
block|}
end_expr_stmt
begin_comment
comment|// ...and the same with a QThreadPool *pool argument...
end_comment
begin_comment
comment|// generate from the above by c'n'p and s/run(/run(QThreadPool *pool, / and s/start()/start(pool)/
end_comment
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|QThreadPool *pool
argument_list|,
argument|T (*functionPointer)()
argument_list|)
block|{
return|return
operator|(
name|new
name|StoredFunctorCall0
operator|<
name|T
operator|,
name|T
argument_list|(
operator|*
argument_list|)
argument_list|()
operator|>
operator|(
name|functionPointer
operator|)
operator|)
operator|->
name|start
argument_list|(
name|pool
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Param1
operator|,
name|typename
name|Arg1
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|QThreadPool *pool
argument_list|,
argument|T (*functionPointer)(Param1)
argument_list|,
argument|const Arg1&arg1
argument_list|)
block|{
return|return
operator|(
name|new
name|StoredFunctorCall1
operator|<
name|T
operator|,
name|T
argument_list|(
operator|*
argument_list|)
argument_list|(
name|Param1
argument_list|)
operator|,
name|Arg1
operator|>
operator|(
name|functionPointer
operator|,
name|arg1
operator|)
operator|)
operator|->
name|start
argument_list|(
name|pool
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Param1
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Param2
operator|,
name|typename
name|Arg2
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|QThreadPool *pool
argument_list|,
argument|T (*functionPointer)(Param1, Param2)
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|)
block|{
return|return
operator|(
name|new
name|StoredFunctorCall2
operator|<
name|T
operator|,
name|T
argument_list|(
operator|*
argument_list|)
argument_list|(
name|Param1
argument_list|,
name|Param2
argument_list|)
operator|,
name|Arg1
operator|,
name|Arg2
operator|>
operator|(
name|functionPointer
operator|,
name|arg1
operator|,
name|arg2
operator|)
operator|)
operator|->
name|start
argument_list|(
name|pool
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Param1
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Param2
operator|,
name|typename
name|Arg2
operator|,
name|typename
name|Param3
operator|,
name|typename
name|Arg3
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|QThreadPool *pool
argument_list|,
argument|T (*functionPointer)(Param1, Param2, Param3)
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|,
argument|const Arg3&arg3
argument_list|)
block|{
return|return
operator|(
name|new
name|StoredFunctorCall3
operator|<
name|T
operator|,
name|T
argument_list|(
operator|*
argument_list|)
argument_list|(
name|Param1
argument_list|,
name|Param2
argument_list|,
name|Param3
argument_list|)
operator|,
name|Arg1
operator|,
name|Arg2
operator|,
name|Arg3
operator|>
operator|(
name|functionPointer
operator|,
name|arg1
operator|,
name|arg2
operator|,
name|arg3
operator|)
operator|)
operator|->
name|start
argument_list|(
name|pool
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Param1
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Param2
operator|,
name|typename
name|Arg2
operator|,
name|typename
name|Param3
operator|,
name|typename
name|Arg3
operator|,
name|typename
name|Param4
operator|,
name|typename
name|Arg4
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|QThreadPool *pool
argument_list|,
argument|T (*functionPointer)(Param1, Param2, Param3, Param4)
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|,
argument|const Arg3&arg3
argument_list|,
argument|const Arg4&arg4
argument_list|)
block|{
return|return
operator|(
name|new
name|StoredFunctorCall4
operator|<
name|T
operator|,
name|T
argument_list|(
operator|*
argument_list|)
argument_list|(
name|Param1
argument_list|,
name|Param2
argument_list|,
name|Param3
argument_list|,
name|Param4
argument_list|)
operator|,
name|Arg1
operator|,
name|Arg2
operator|,
name|Arg3
operator|,
name|Arg4
operator|>
operator|(
name|functionPointer
operator|,
name|arg1
operator|,
name|arg2
operator|,
name|arg3
operator|,
name|arg4
operator|)
operator|)
operator|->
name|start
argument_list|(
name|pool
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Param1
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Param2
operator|,
name|typename
name|Arg2
operator|,
name|typename
name|Param3
operator|,
name|typename
name|Arg3
operator|,
name|typename
name|Param4
operator|,
name|typename
name|Arg4
operator|,
name|typename
name|Param5
operator|,
name|typename
name|Arg5
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|QThreadPool *pool
argument_list|,
argument|T (*functionPointer)(Param1, Param2, Param3, Param4, Param5)
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|,
argument|const Arg3&arg3
argument_list|,
argument|const Arg4&arg4
argument_list|,
argument|const Arg5&arg5
argument_list|)
block|{
return|return
operator|(
name|new
name|StoredFunctorCall5
operator|<
name|T
operator|,
name|T
argument_list|(
operator|*
argument_list|)
argument_list|(
name|Param1
argument_list|,
name|Param2
argument_list|,
name|Param3
argument_list|,
name|Param4
argument_list|,
name|Param5
argument_list|)
operator|,
name|Arg1
operator|,
name|Arg2
operator|,
name|Arg3
operator|,
name|Arg4
operator|,
name|Arg5
operator|>
operator|(
name|functionPointer
operator|,
name|arg1
operator|,
name|arg2
operator|,
name|arg3
operator|,
name|arg4
operator|,
name|arg5
operator|)
operator|)
operator|->
name|start
argument_list|(
name|pool
argument_list|)
return|;
block|}
end_expr_stmt
begin_if
if|#
directive|if
name|defined
argument_list|(
name|Q_COMPILER_DECLTYPE
argument_list|)
operator|&&
name|defined
argument_list|(
name|Q_COMPILER_AUTO_FUNCTION
argument_list|)
end_if
begin_expr_stmt
name|template
operator|<
name|typename
name|Functor
operator|>
name|auto
name|run
argument_list|(
argument|QThreadPool *pool
argument_list|,
argument|Functor functor
argument_list|)
operator|->
name|typename
name|QtPrivate
operator|::
name|QEnableIf
operator|<
operator|!
name|QtPrivate
operator|::
name|HasResultType
operator|<
name|Functor
operator|>
operator|::
name|Value
operator|,
name|QFuture
operator|<
name|decltype
argument_list|(
name|functor
argument_list|()
argument_list|)
operator|>
expr|>
operator|::
name|Type
block|{
typedef|typedef
name|decltype
argument_list|(
argument|functor()
argument_list|)
name|result_type
expr_stmt|;
end_expr_stmt
begin_return
return|return
operator|(
name|new
name|StoredFunctorCall0
operator|<
name|result_type
operator|,
name|Functor
operator|>
operator|(
name|functor
operator|)
operator|)
operator|->
name|start
argument_list|(
name|pool
argument_list|)
return|;
end_return
begin_expr_stmt
unit|}  template
operator|<
name|typename
name|Functor
operator|,
name|typename
name|Arg1
operator|>
name|auto
name|run
argument_list|(
argument|QThreadPool *pool
argument_list|,
argument|Functor functor
argument_list|,
argument|const Arg1&arg1
argument_list|)
operator|->
name|typename
name|QtPrivate
operator|::
name|QEnableIf
operator|<
operator|!
name|QtPrivate
operator|::
name|HasResultType
operator|<
name|Functor
operator|>
operator|::
name|Value
operator|,
name|QFuture
operator|<
name|decltype
argument_list|(
name|functor
argument_list|(
name|arg1
argument_list|)
argument_list|)
operator|>
expr|>
operator|::
name|Type
block|{
typedef|typedef
name|decltype
argument_list|(
argument|functor(arg1)
argument_list|)
name|result_type
expr_stmt|;
end_expr_stmt
begin_return
return|return
operator|(
name|new
name|StoredFunctorCall1
operator|<
name|result_type
operator|,
name|Functor
operator|,
name|Arg1
operator|>
operator|(
name|functor
operator|,
name|arg1
operator|)
operator|)
operator|->
name|start
argument_list|(
name|pool
argument_list|)
return|;
end_return
begin_expr_stmt
unit|}  template
operator|<
name|typename
name|Functor
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Arg2
operator|>
name|auto
name|run
argument_list|(
argument|QThreadPool *pool
argument_list|,
argument|Functor functor
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|)
operator|->
name|typename
name|QtPrivate
operator|::
name|QEnableIf
operator|<
operator|!
name|QtPrivate
operator|::
name|HasResultType
operator|<
name|Functor
operator|>
operator|::
name|Value
operator|,
name|QFuture
operator|<
name|decltype
argument_list|(
name|functor
argument_list|(
name|arg1
argument_list|,
name|arg2
argument_list|)
argument_list|)
operator|>
expr|>
operator|::
name|Type
block|{
typedef|typedef
name|decltype
argument_list|(
argument|functor(arg1, arg2)
argument_list|)
name|result_type
expr_stmt|;
end_expr_stmt
begin_return
return|return
operator|(
name|new
name|StoredFunctorCall2
operator|<
name|result_type
operator|,
name|Functor
operator|,
name|Arg1
operator|,
name|Arg2
operator|>
operator|(
name|functor
operator|,
name|arg1
operator|,
name|arg2
operator|)
operator|)
operator|->
name|start
argument_list|(
name|pool
argument_list|)
return|;
end_return
begin_expr_stmt
unit|}  template
operator|<
name|typename
name|Functor
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Arg2
operator|,
name|typename
name|Arg3
operator|>
name|auto
name|run
argument_list|(
argument|QThreadPool *pool
argument_list|,
argument|Functor functor
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|,
argument|const Arg3&arg3
argument_list|)
operator|->
name|typename
name|QtPrivate
operator|::
name|QEnableIf
operator|<
operator|!
name|QtPrivate
operator|::
name|HasResultType
operator|<
name|Functor
operator|>
operator|::
name|Value
operator|,
name|QFuture
operator|<
name|decltype
argument_list|(
name|functor
argument_list|(
name|arg1
argument_list|,
name|arg2
argument_list|,
name|arg3
argument_list|)
argument_list|)
operator|>
expr|>
operator|::
name|Type
block|{
typedef|typedef
name|decltype
argument_list|(
argument|functor(arg1, arg2, arg3)
argument_list|)
name|result_type
expr_stmt|;
end_expr_stmt
begin_return
return|return
operator|(
name|new
name|StoredFunctorCall3
operator|<
name|result_type
operator|,
name|Functor
operator|,
name|Arg1
operator|,
name|Arg2
operator|,
name|Arg3
operator|>
operator|(
name|functor
operator|,
name|arg1
operator|,
name|arg2
operator|,
name|arg3
operator|)
operator|)
operator|->
name|start
argument_list|(
name|pool
argument_list|)
return|;
end_return
begin_expr_stmt
unit|}  template
operator|<
name|typename
name|Functor
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Arg2
operator|,
name|typename
name|Arg3
operator|,
name|typename
name|Arg4
operator|>
name|auto
name|run
argument_list|(
argument|QThreadPool *pool
argument_list|,
argument|Functor functor
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|,
argument|const Arg3&arg3
argument_list|,
argument|const Arg4&arg4
argument_list|)
operator|->
name|typename
name|QtPrivate
operator|::
name|QEnableIf
operator|<
operator|!
name|QtPrivate
operator|::
name|HasResultType
operator|<
name|Functor
operator|>
operator|::
name|Value
operator|,
name|QFuture
operator|<
name|decltype
argument_list|(
name|functor
argument_list|(
name|arg1
argument_list|,
name|arg2
argument_list|,
name|arg3
argument_list|,
name|arg4
argument_list|)
argument_list|)
operator|>
expr|>
operator|::
name|Type
block|{
typedef|typedef
name|decltype
argument_list|(
argument|functor(arg1, arg2, arg3, arg4)
argument_list|)
name|result_type
expr_stmt|;
end_expr_stmt
begin_return
return|return
operator|(
name|new
name|StoredFunctorCall4
operator|<
name|result_type
operator|,
name|Functor
operator|,
name|Arg1
operator|,
name|Arg2
operator|,
name|Arg3
operator|,
name|Arg4
operator|>
operator|(
name|functor
operator|,
name|arg1
operator|,
name|arg2
operator|,
name|arg3
operator|,
name|arg4
operator|)
operator|)
operator|->
name|start
argument_list|(
name|pool
argument_list|)
return|;
end_return
begin_expr_stmt
unit|}  template
operator|<
name|typename
name|Functor
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Arg2
operator|,
name|typename
name|Arg3
operator|,
name|typename
name|Arg4
operator|,
name|typename
name|Arg5
operator|>
name|auto
name|run
argument_list|(
argument|QThreadPool *pool
argument_list|,
argument|Functor functor
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|,
argument|const Arg3&arg3
argument_list|,
argument|const Arg4&arg4
argument_list|,
argument|const Arg5&arg5
argument_list|)
operator|->
name|typename
name|QtPrivate
operator|::
name|QEnableIf
operator|<
operator|!
name|QtPrivate
operator|::
name|HasResultType
operator|<
name|Functor
operator|>
operator|::
name|Value
operator|,
name|QFuture
operator|<
name|decltype
argument_list|(
name|functor
argument_list|(
name|arg1
argument_list|,
name|arg2
argument_list|,
name|arg3
argument_list|,
name|arg4
argument_list|,
name|arg5
argument_list|)
argument_list|)
operator|>
expr|>
operator|::
name|Type
block|{
typedef|typedef
name|decltype
argument_list|(
argument|functor(arg1, arg2, arg3, arg4, arg5)
argument_list|)
name|result_type
expr_stmt|;
end_expr_stmt
begin_return
return|return
operator|(
name|new
name|StoredFunctorCall5
operator|<
name|result_type
operator|,
name|Functor
operator|,
name|Arg1
operator|,
name|Arg2
operator|,
name|Arg3
operator|,
name|Arg4
operator|,
name|Arg5
operator|>
operator|(
name|functor
operator|,
name|arg1
operator|,
name|arg2
operator|,
name|arg3
operator|,
name|arg4
operator|,
name|arg5
operator|)
operator|)
operator|->
name|start
argument_list|(
name|pool
argument_list|)
return|;
end_return
begin_endif
unit|}
endif|#
directive|endif
end_endif
begin_expr_stmt
unit|template
operator|<
name|typename
name|FunctionObject
operator|>
name|QFuture
operator|<
name|typename
name|FunctionObject
operator|::
name|result_type
operator|>
name|run
argument_list|(
argument|QThreadPool *pool
argument_list|,
argument|FunctionObject functionObject
argument_list|)
block|{
return|return
operator|(
name|new
name|StoredFunctorCall0
operator|<
name|typename
name|FunctionObject
operator|::
name|result_type
operator|,
name|FunctionObject
operator|>
operator|(
name|functionObject
operator|)
operator|)
operator|->
name|start
argument_list|(
name|pool
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|FunctionObject
operator|,
name|typename
name|Arg1
operator|>
name|QFuture
operator|<
name|typename
name|FunctionObject
operator|::
name|result_type
operator|>
name|run
argument_list|(
argument|QThreadPool *pool
argument_list|,
argument|FunctionObject functionObject
argument_list|,
argument|const Arg1&arg1
argument_list|)
block|{
return|return
operator|(
name|new
name|StoredFunctorCall1
operator|<
name|typename
name|FunctionObject
operator|::
name|result_type
operator|,
name|FunctionObject
operator|,
name|Arg1
operator|>
operator|(
name|functionObject
operator|,
name|arg1
operator|)
operator|)
operator|->
name|start
argument_list|(
name|pool
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|FunctionObject
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Arg2
operator|>
name|QFuture
operator|<
name|typename
name|FunctionObject
operator|::
name|result_type
operator|>
name|run
argument_list|(
argument|QThreadPool *pool
argument_list|,
argument|FunctionObject functionObject
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|)
block|{
return|return
operator|(
name|new
name|StoredFunctorCall2
operator|<
name|typename
name|FunctionObject
operator|::
name|result_type
operator|,
name|FunctionObject
operator|,
name|Arg1
operator|,
name|Arg2
operator|>
operator|(
name|functionObject
operator|,
name|arg1
operator|,
name|arg2
operator|)
operator|)
operator|->
name|start
argument_list|(
name|pool
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|FunctionObject
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Arg2
operator|,
name|typename
name|Arg3
operator|>
name|QFuture
operator|<
name|typename
name|FunctionObject
operator|::
name|result_type
operator|>
name|run
argument_list|(
argument|QThreadPool *pool
argument_list|,
argument|FunctionObject functionObject
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|,
argument|const Arg3&arg3
argument_list|)
block|{
return|return
operator|(
name|new
name|StoredFunctorCall3
operator|<
name|typename
name|FunctionObject
operator|::
name|result_type
operator|,
name|FunctionObject
operator|,
name|Arg1
operator|,
name|Arg2
operator|,
name|Arg3
operator|>
operator|(
name|functionObject
operator|,
name|arg1
operator|,
name|arg2
operator|,
name|arg3
operator|)
operator|)
operator|->
name|start
argument_list|(
name|pool
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|FunctionObject
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Arg2
operator|,
name|typename
name|Arg3
operator|,
name|typename
name|Arg4
operator|>
name|QFuture
operator|<
name|typename
name|FunctionObject
operator|::
name|result_type
operator|>
name|run
argument_list|(
argument|QThreadPool *pool
argument_list|,
argument|FunctionObject functionObject
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|,
argument|const Arg3&arg3
argument_list|,
argument|const Arg4&arg4
argument_list|)
block|{
return|return
operator|(
name|new
name|StoredFunctorCall4
operator|<
name|typename
name|FunctionObject
operator|::
name|result_type
operator|,
name|FunctionObject
operator|,
name|Arg1
operator|,
name|Arg2
operator|,
name|Arg3
operator|,
name|Arg4
operator|>
operator|(
name|functionObject
operator|,
name|arg1
operator|,
name|arg2
operator|,
name|arg3
operator|,
name|arg4
operator|)
operator|)
operator|->
name|start
argument_list|(
name|pool
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|FunctionObject
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Arg2
operator|,
name|typename
name|Arg3
operator|,
name|typename
name|Arg4
operator|,
name|typename
name|Arg5
operator|>
name|QFuture
operator|<
name|typename
name|FunctionObject
operator|::
name|result_type
operator|>
name|run
argument_list|(
argument|QThreadPool *pool
argument_list|,
argument|FunctionObject functionObject
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|,
argument|const Arg3&arg3
argument_list|,
argument|const Arg4&arg4
argument_list|,
argument|const Arg5&arg5
argument_list|)
block|{
return|return
operator|(
name|new
name|StoredFunctorCall5
operator|<
name|typename
name|FunctionObject
operator|::
name|result_type
operator|,
name|FunctionObject
operator|,
name|Arg1
operator|,
name|Arg2
operator|,
name|Arg3
operator|,
name|Arg4
operator|,
name|Arg5
operator|>
operator|(
name|functionObject
operator|,
name|arg1
operator|,
name|arg2
operator|,
name|arg3
operator|,
name|arg4
operator|,
name|arg5
operator|)
operator|)
operator|->
name|start
argument_list|(
name|pool
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|FunctionObject
operator|>
name|QFuture
operator|<
name|typename
name|FunctionObject
operator|::
name|result_type
operator|>
name|run
argument_list|(
argument|QThreadPool *pool
argument_list|,
argument|FunctionObject *functionObject
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredFunctorPointerCall0
operator|<
name|typename
name|FunctionObject
operator|::
name|result_type
operator|,
name|FunctionObject
operator|>
operator|::
name|type
argument_list|(
name|functionObject
argument_list|)
operator|)
operator|->
name|start
argument_list|(
name|pool
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|FunctionObject
operator|,
name|typename
name|Arg1
operator|>
name|QFuture
operator|<
name|typename
name|FunctionObject
operator|::
name|result_type
operator|>
name|run
argument_list|(
argument|QThreadPool *pool
argument_list|,
argument|FunctionObject *functionObject
argument_list|,
argument|const Arg1&arg1
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredFunctorPointerCall1
operator|<
name|typename
name|FunctionObject
operator|::
name|result_type
operator|,
name|FunctionObject
operator|,
name|Arg1
operator|>
operator|::
name|type
argument_list|(
name|functionObject
argument_list|,
name|arg1
argument_list|)
operator|)
operator|->
name|start
argument_list|(
name|pool
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|FunctionObject
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Arg2
operator|>
name|QFuture
operator|<
name|typename
name|FunctionObject
operator|::
name|result_type
operator|>
name|run
argument_list|(
argument|QThreadPool *pool
argument_list|,
argument|FunctionObject *functionObject
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredFunctorPointerCall2
operator|<
name|typename
name|FunctionObject
operator|::
name|result_type
operator|,
name|FunctionObject
operator|,
name|Arg1
operator|,
name|Arg2
operator|>
operator|::
name|type
argument_list|(
name|functionObject
argument_list|,
name|arg1
argument_list|,
name|arg2
argument_list|)
operator|)
operator|->
name|start
argument_list|(
name|pool
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|FunctionObject
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Arg2
operator|,
name|typename
name|Arg3
operator|>
name|QFuture
operator|<
name|typename
name|FunctionObject
operator|::
name|result_type
operator|>
name|run
argument_list|(
argument|QThreadPool *pool
argument_list|,
argument|FunctionObject *functionObject
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|,
argument|const Arg3&arg3
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredFunctorPointerCall3
operator|<
name|typename
name|FunctionObject
operator|::
name|result_type
operator|,
name|FunctionObject
operator|,
name|Arg1
operator|,
name|Arg2
operator|,
name|Arg3
operator|>
operator|::
name|type
argument_list|(
name|functionObject
argument_list|,
name|arg1
argument_list|,
name|arg2
argument_list|,
name|arg3
argument_list|)
operator|)
operator|->
name|start
argument_list|(
name|pool
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|FunctionObject
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Arg2
operator|,
name|typename
name|Arg3
operator|,
name|typename
name|Arg4
operator|>
name|QFuture
operator|<
name|typename
name|FunctionObject
operator|::
name|result_type
operator|>
name|run
argument_list|(
argument|QThreadPool *pool
argument_list|,
argument|FunctionObject *functionObject
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|,
argument|const Arg3&arg3
argument_list|,
argument|const Arg4&arg4
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredFunctorPointerCall4
operator|<
name|typename
name|FunctionObject
operator|::
name|result_type
operator|,
name|FunctionObject
operator|,
name|Arg1
operator|,
name|Arg2
operator|,
name|Arg3
operator|,
name|Arg4
operator|>
operator|::
name|type
argument_list|(
name|functionObject
argument_list|,
name|arg1
argument_list|,
name|arg2
argument_list|,
name|arg3
argument_list|,
name|arg4
argument_list|)
operator|)
operator|->
name|start
argument_list|(
name|pool
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|FunctionObject
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Arg2
operator|,
name|typename
name|Arg3
operator|,
name|typename
name|Arg4
operator|,
name|typename
name|Arg5
operator|>
name|QFuture
operator|<
name|typename
name|FunctionObject
operator|::
name|result_type
operator|>
name|run
argument_list|(
argument|QThreadPool *pool
argument_list|,
argument|FunctionObject *functionObject
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|,
argument|const Arg3&arg3
argument_list|,
argument|const Arg4&arg4
argument_list|,
argument|const Arg5&arg5
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredFunctorPointerCall5
operator|<
name|typename
name|FunctionObject
operator|::
name|result_type
operator|,
name|FunctionObject
operator|,
name|Arg1
operator|,
name|Arg2
operator|,
name|Arg3
operator|,
name|Arg4
operator|,
name|Arg5
operator|>
operator|::
name|type
argument_list|(
name|functionObject
argument_list|,
name|arg1
argument_list|,
name|arg2
argument_list|,
name|arg3
argument_list|,
name|arg4
argument_list|,
name|arg5
argument_list|)
operator|)
operator|->
name|start
argument_list|(
name|pool
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Class
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|QThreadPool *pool
argument_list|,
argument|const Class&object
argument_list|,
argument|T (Class::*fn)()
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredMemberFunctionCall0
operator|<
name|T
operator|,
name|Class
operator|>
operator|::
name|type
argument_list|(
name|fn
argument_list|,
name|object
argument_list|)
operator|)
operator|->
name|start
argument_list|(
name|pool
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Class
operator|,
name|typename
name|Param1
operator|,
name|typename
name|Arg1
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|QThreadPool *pool
argument_list|,
argument|const Class&object
argument_list|,
argument|T (Class::*fn)(Param1)
argument_list|,
argument|const Arg1&arg1
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredMemberFunctionCall1
operator|<
name|T
operator|,
name|Class
operator|,
name|Param1
operator|,
name|Arg1
operator|>
operator|::
name|type
argument_list|(
name|fn
argument_list|,
name|object
argument_list|,
name|arg1
argument_list|)
operator|)
operator|->
name|start
argument_list|(
name|pool
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Class
operator|,
name|typename
name|Param1
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Param2
operator|,
name|typename
name|Arg2
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|QThreadPool *pool
argument_list|,
argument|const Class&object
argument_list|,
argument|T (Class::*fn)(Param1, Param2)
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredMemberFunctionCall2
operator|<
name|T
operator|,
name|Class
operator|,
name|Param1
operator|,
name|Arg1
operator|,
name|Param2
operator|,
name|Arg2
operator|>
operator|::
name|type
argument_list|(
name|fn
argument_list|,
name|object
argument_list|,
name|arg1
argument_list|,
name|arg2
argument_list|)
operator|)
operator|->
name|start
argument_list|(
name|pool
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Class
operator|,
name|typename
name|Param1
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Param2
operator|,
name|typename
name|Arg2
operator|,
name|typename
name|Param3
operator|,
name|typename
name|Arg3
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|QThreadPool *pool
argument_list|,
argument|const Class&object
argument_list|,
argument|T (Class::*fn)(Param1, Param2, Param3)
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|,
argument|const Arg3&arg3
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredMemberFunctionCall3
operator|<
name|T
operator|,
name|Class
operator|,
name|Param1
operator|,
name|Arg1
operator|,
name|Param2
operator|,
name|Arg2
operator|,
name|Param3
operator|,
name|Arg3
operator|>
operator|::
name|type
argument_list|(
name|fn
argument_list|,
name|object
argument_list|,
name|arg1
argument_list|,
name|arg2
argument_list|,
name|arg3
argument_list|)
operator|)
operator|->
name|start
argument_list|(
name|pool
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Class
operator|,
name|typename
name|Param1
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Param2
operator|,
name|typename
name|Arg2
operator|,
name|typename
name|Param3
operator|,
name|typename
name|Arg3
operator|,
name|typename
name|Param4
operator|,
name|typename
name|Arg4
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|QThreadPool *pool
argument_list|,
argument|const Class&object
argument_list|,
argument|T (Class::*fn)(Param1, Param2, Param3, Param4)
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|,
argument|const Arg3&arg3
argument_list|,
argument|const Arg4&arg4
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredMemberFunctionCall4
operator|<
name|T
operator|,
name|Class
operator|,
name|Param1
operator|,
name|Arg1
operator|,
name|Param2
operator|,
name|Arg2
operator|,
name|Param3
operator|,
name|Arg3
operator|,
name|Param4
operator|,
name|Arg4
operator|>
operator|::
name|type
argument_list|(
name|fn
argument_list|,
name|object
argument_list|,
name|arg1
argument_list|,
name|arg2
argument_list|,
name|arg3
argument_list|,
name|arg4
argument_list|)
operator|)
operator|->
name|start
argument_list|(
name|pool
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Class
operator|,
name|typename
name|Param1
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Param2
operator|,
name|typename
name|Arg2
operator|,
name|typename
name|Param3
operator|,
name|typename
name|Arg3
operator|,
name|typename
name|Param4
operator|,
name|typename
name|Arg4
operator|,
name|typename
name|Param5
operator|,
name|typename
name|Arg5
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|QThreadPool *pool
argument_list|,
argument|const Class&object
argument_list|,
argument|T (Class::*fn)(Param1, Param2, Param3, Param4, Param5)
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|,
argument|const Arg3&arg3
argument_list|,
argument|const Arg4&arg4
argument_list|,
argument|const Arg5&arg5
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredMemberFunctionCall5
operator|<
name|T
operator|,
name|Class
operator|,
name|Param1
operator|,
name|Arg1
operator|,
name|Param2
operator|,
name|Arg2
operator|,
name|Param3
operator|,
name|Arg3
operator|,
name|Param4
operator|,
name|Arg4
operator|,
name|Param5
operator|,
name|Arg5
operator|>
operator|::
name|type
argument_list|(
name|fn
argument_list|,
name|object
argument_list|,
name|arg1
argument_list|,
name|arg2
argument_list|,
name|arg3
argument_list|,
name|arg4
argument_list|,
name|arg5
argument_list|)
operator|)
operator|->
name|start
argument_list|(
name|pool
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Class
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|QThreadPool *pool
argument_list|,
argument|const Class&object
argument_list|,
argument|T (Class::*fn)() const
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredConstMemberFunctionCall0
operator|<
name|T
operator|,
name|Class
operator|>
operator|::
name|type
argument_list|(
name|fn
argument_list|,
name|object
argument_list|)
operator|)
operator|->
name|start
argument_list|(
name|pool
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Class
operator|,
name|typename
name|Param1
operator|,
name|typename
name|Arg1
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|QThreadPool *pool
argument_list|,
argument|const Class&object
argument_list|,
argument|T (Class::*fn)(Param1) const
argument_list|,
argument|const Arg1&arg1
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredConstMemberFunctionCall1
operator|<
name|T
operator|,
name|Class
operator|,
name|Param1
operator|,
name|Arg1
operator|>
operator|::
name|type
argument_list|(
name|fn
argument_list|,
name|object
argument_list|,
name|arg1
argument_list|)
operator|)
operator|->
name|start
argument_list|(
name|pool
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Class
operator|,
name|typename
name|Param1
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Param2
operator|,
name|typename
name|Arg2
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|QThreadPool *pool
argument_list|,
argument|const Class&object
argument_list|,
argument|T (Class::*fn)(Param1, Param2) const
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredConstMemberFunctionCall2
operator|<
name|T
operator|,
name|Class
operator|,
name|Param1
operator|,
name|Arg1
operator|,
name|Param2
operator|,
name|Arg2
operator|>
operator|::
name|type
argument_list|(
name|fn
argument_list|,
name|object
argument_list|,
name|arg1
argument_list|,
name|arg2
argument_list|)
operator|)
operator|->
name|start
argument_list|(
name|pool
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Class
operator|,
name|typename
name|Param1
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Param2
operator|,
name|typename
name|Arg2
operator|,
name|typename
name|Param3
operator|,
name|typename
name|Arg3
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|QThreadPool *pool
argument_list|,
argument|const Class&object
argument_list|,
argument|T (Class::*fn)(Param1, Param2, Param3) const
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|,
argument|const Arg3&arg3
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredConstMemberFunctionCall3
operator|<
name|T
operator|,
name|Class
operator|,
name|Param1
operator|,
name|Arg1
operator|,
name|Param2
operator|,
name|Arg2
operator|,
name|Param3
operator|,
name|Arg3
operator|>
operator|::
name|type
argument_list|(
name|fn
argument_list|,
name|object
argument_list|,
name|arg1
argument_list|,
name|arg2
argument_list|,
name|arg3
argument_list|)
operator|)
operator|->
name|start
argument_list|(
name|pool
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Class
operator|,
name|typename
name|Param1
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Param2
operator|,
name|typename
name|Arg2
operator|,
name|typename
name|Param3
operator|,
name|typename
name|Arg3
operator|,
name|typename
name|Param4
operator|,
name|typename
name|Arg4
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|QThreadPool *pool
argument_list|,
argument|const Class&object
argument_list|,
argument|T (Class::*fn)(Param1, Param2, Param3, Param4) const
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|,
argument|const Arg3&arg3
argument_list|,
argument|const Arg4&arg4
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredConstMemberFunctionCall4
operator|<
name|T
operator|,
name|Class
operator|,
name|Param1
operator|,
name|Arg1
operator|,
name|Param2
operator|,
name|Arg2
operator|,
name|Param3
operator|,
name|Arg3
operator|,
name|Param4
operator|,
name|Arg4
operator|>
operator|::
name|type
argument_list|(
name|fn
argument_list|,
name|object
argument_list|,
name|arg1
argument_list|,
name|arg2
argument_list|,
name|arg3
argument_list|,
name|arg4
argument_list|)
operator|)
operator|->
name|start
argument_list|(
name|pool
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Class
operator|,
name|typename
name|Param1
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Param2
operator|,
name|typename
name|Arg2
operator|,
name|typename
name|Param3
operator|,
name|typename
name|Arg3
operator|,
name|typename
name|Param4
operator|,
name|typename
name|Arg4
operator|,
name|typename
name|Param5
operator|,
name|typename
name|Arg5
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|QThreadPool *pool
argument_list|,
argument|const Class&object
argument_list|,
argument|T (Class::*fn)(Param1, Param2, Param3, Param4, Param5) const
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|,
argument|const Arg3&arg3
argument_list|,
argument|const Arg4&arg4
argument_list|,
argument|const Arg5&arg5
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredConstMemberFunctionCall5
operator|<
name|T
operator|,
name|Class
operator|,
name|Param1
operator|,
name|Arg1
operator|,
name|Param2
operator|,
name|Arg2
operator|,
name|Param3
operator|,
name|Arg3
operator|,
name|Param4
operator|,
name|Arg4
operator|,
name|Param5
operator|,
name|Arg5
operator|>
operator|::
name|type
argument_list|(
name|fn
argument_list|,
name|object
argument_list|,
name|arg1
argument_list|,
name|arg2
argument_list|,
name|arg3
argument_list|,
name|arg4
argument_list|,
name|arg5
argument_list|)
operator|)
operator|->
name|start
argument_list|(
name|pool
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Class
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|QThreadPool *pool
argument_list|,
argument|Class *object
argument_list|,
argument|T (Class::*fn)()
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredMemberFunctionPointerCall0
operator|<
name|T
operator|,
name|Class
operator|>
operator|::
name|type
argument_list|(
name|fn
argument_list|,
name|object
argument_list|)
operator|)
operator|->
name|start
argument_list|(
name|pool
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Class
operator|,
name|typename
name|Param1
operator|,
name|typename
name|Arg1
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|QThreadPool *pool
argument_list|,
argument|Class *object
argument_list|,
argument|T (Class::*fn)(Param1)
argument_list|,
argument|const Arg1&arg1
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredMemberFunctionPointerCall1
operator|<
name|T
operator|,
name|Class
operator|,
name|Param1
operator|,
name|Arg1
operator|>
operator|::
name|type
argument_list|(
name|fn
argument_list|,
name|object
argument_list|,
name|arg1
argument_list|)
operator|)
operator|->
name|start
argument_list|(
name|pool
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Class
operator|,
name|typename
name|Param1
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Param2
operator|,
name|typename
name|Arg2
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|QThreadPool *pool
argument_list|,
argument|Class *object
argument_list|,
argument|T (Class::*fn)(Param1, Param2)
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredMemberFunctionPointerCall2
operator|<
name|T
operator|,
name|Class
operator|,
name|Param1
operator|,
name|Arg1
operator|,
name|Param2
operator|,
name|Arg2
operator|>
operator|::
name|type
argument_list|(
name|fn
argument_list|,
name|object
argument_list|,
name|arg1
argument_list|,
name|arg2
argument_list|)
operator|)
operator|->
name|start
argument_list|(
name|pool
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Class
operator|,
name|typename
name|Param1
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Param2
operator|,
name|typename
name|Arg2
operator|,
name|typename
name|Param3
operator|,
name|typename
name|Arg3
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|QThreadPool *pool
argument_list|,
argument|Class *object
argument_list|,
argument|T (Class::*fn)(Param1, Param2, Param3)
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|,
argument|const Arg3&arg3
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredMemberFunctionPointerCall3
operator|<
name|T
operator|,
name|Class
operator|,
name|Param1
operator|,
name|Arg1
operator|,
name|Param2
operator|,
name|Arg2
operator|,
name|Param3
operator|,
name|Arg3
operator|>
operator|::
name|type
argument_list|(
name|fn
argument_list|,
name|object
argument_list|,
name|arg1
argument_list|,
name|arg2
argument_list|,
name|arg3
argument_list|)
operator|)
operator|->
name|start
argument_list|(
name|pool
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Class
operator|,
name|typename
name|Param1
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Param2
operator|,
name|typename
name|Arg2
operator|,
name|typename
name|Param3
operator|,
name|typename
name|Arg3
operator|,
name|typename
name|Param4
operator|,
name|typename
name|Arg4
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|QThreadPool *pool
argument_list|,
argument|Class *object
argument_list|,
argument|T (Class::*fn)(Param1, Param2, Param3, Param4)
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|,
argument|const Arg3&arg3
argument_list|,
argument|const Arg4&arg4
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredMemberFunctionPointerCall4
operator|<
name|T
operator|,
name|Class
operator|,
name|Param1
operator|,
name|Arg1
operator|,
name|Param2
operator|,
name|Arg2
operator|,
name|Param3
operator|,
name|Arg3
operator|,
name|Param4
operator|,
name|Arg4
operator|>
operator|::
name|type
argument_list|(
name|fn
argument_list|,
name|object
argument_list|,
name|arg1
argument_list|,
name|arg2
argument_list|,
name|arg3
argument_list|,
name|arg4
argument_list|)
operator|)
operator|->
name|start
argument_list|(
name|pool
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Class
operator|,
name|typename
name|Param1
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Param2
operator|,
name|typename
name|Arg2
operator|,
name|typename
name|Param3
operator|,
name|typename
name|Arg3
operator|,
name|typename
name|Param4
operator|,
name|typename
name|Arg4
operator|,
name|typename
name|Param5
operator|,
name|typename
name|Arg5
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|QThreadPool *pool
argument_list|,
argument|Class *object
argument_list|,
argument|T (Class::*fn)(Param1, Param2, Param3, Param4, Param5)
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|,
argument|const Arg3&arg3
argument_list|,
argument|const Arg4&arg4
argument_list|,
argument|const Arg5&arg5
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredMemberFunctionPointerCall5
operator|<
name|T
operator|,
name|Class
operator|,
name|Param1
operator|,
name|Arg1
operator|,
name|Param2
operator|,
name|Arg2
operator|,
name|Param3
operator|,
name|Arg3
operator|,
name|Param4
operator|,
name|Arg4
operator|,
name|Param5
operator|,
name|Arg5
operator|>
operator|::
name|type
argument_list|(
name|fn
argument_list|,
name|object
argument_list|,
name|arg1
argument_list|,
name|arg2
argument_list|,
name|arg3
argument_list|,
name|arg4
argument_list|,
name|arg5
argument_list|)
operator|)
operator|->
name|start
argument_list|(
name|pool
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Class
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|QThreadPool *pool
argument_list|,
argument|const Class *object
argument_list|,
argument|T (Class::*fn)() const
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredConstMemberFunctionPointerCall0
operator|<
name|T
operator|,
name|Class
operator|>
operator|::
name|type
argument_list|(
name|fn
argument_list|,
name|object
argument_list|)
operator|)
operator|->
name|start
argument_list|(
name|pool
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Class
operator|,
name|typename
name|Param1
operator|,
name|typename
name|Arg1
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|QThreadPool *pool
argument_list|,
argument|const Class *object
argument_list|,
argument|T (Class::*fn)(Param1) const
argument_list|,
argument|const Arg1&arg1
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredConstMemberFunctionPointerCall1
operator|<
name|T
operator|,
name|Class
operator|,
name|Param1
operator|,
name|Arg1
operator|>
operator|::
name|type
argument_list|(
name|fn
argument_list|,
name|object
argument_list|,
name|arg1
argument_list|)
operator|)
operator|->
name|start
argument_list|(
name|pool
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Class
operator|,
name|typename
name|Param1
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Param2
operator|,
name|typename
name|Arg2
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|QThreadPool *pool
argument_list|,
argument|const Class *object
argument_list|,
argument|T (Class::*fn)(Param1, Param2) const
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredConstMemberFunctionPointerCall2
operator|<
name|T
operator|,
name|Class
operator|,
name|Param1
operator|,
name|Arg1
operator|,
name|Param2
operator|,
name|Arg2
operator|>
operator|::
name|type
argument_list|(
name|fn
argument_list|,
name|object
argument_list|,
name|arg1
argument_list|,
name|arg2
argument_list|)
operator|)
operator|->
name|start
argument_list|(
name|pool
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Class
operator|,
name|typename
name|Param1
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Param2
operator|,
name|typename
name|Arg2
operator|,
name|typename
name|Param3
operator|,
name|typename
name|Arg3
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|QThreadPool *pool
argument_list|,
argument|const Class *object
argument_list|,
argument|T (Class::*fn)(Param1, Param2, Param3) const
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|,
argument|const Arg3&arg3
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredConstMemberFunctionPointerCall3
operator|<
name|T
operator|,
name|Class
operator|,
name|Param1
operator|,
name|Arg1
operator|,
name|Param2
operator|,
name|Arg2
operator|,
name|Param3
operator|,
name|Arg3
operator|>
operator|::
name|type
argument_list|(
name|fn
argument_list|,
name|object
argument_list|,
name|arg1
argument_list|,
name|arg2
argument_list|,
name|arg3
argument_list|)
operator|)
operator|->
name|start
argument_list|(
name|pool
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Class
operator|,
name|typename
name|Param1
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Param2
operator|,
name|typename
name|Arg2
operator|,
name|typename
name|Param3
operator|,
name|typename
name|Arg3
operator|,
name|typename
name|Param4
operator|,
name|typename
name|Arg4
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|QThreadPool *pool
argument_list|,
argument|const Class *object
argument_list|,
argument|T (Class::*fn)(Param1, Param2, Param3, Param4) const
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|,
argument|const Arg3&arg3
argument_list|,
argument|const Arg4&arg4
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredConstMemberFunctionPointerCall4
operator|<
name|T
operator|,
name|Class
operator|,
name|Param1
operator|,
name|Arg1
operator|,
name|Param2
operator|,
name|Arg2
operator|,
name|Param3
operator|,
name|Arg3
operator|,
name|Param4
operator|,
name|Arg4
operator|>
operator|::
name|type
argument_list|(
name|fn
argument_list|,
name|object
argument_list|,
name|arg1
argument_list|,
name|arg2
argument_list|,
name|arg3
argument_list|,
name|arg4
argument_list|)
operator|)
operator|->
name|start
argument_list|(
name|pool
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|Class
operator|,
name|typename
name|Param1
operator|,
name|typename
name|Arg1
operator|,
name|typename
name|Param2
operator|,
name|typename
name|Arg2
operator|,
name|typename
name|Param3
operator|,
name|typename
name|Arg3
operator|,
name|typename
name|Param4
operator|,
name|typename
name|Arg4
operator|,
name|typename
name|Param5
operator|,
name|typename
name|Arg5
operator|>
name|QFuture
operator|<
name|T
operator|>
name|run
argument_list|(
argument|QThreadPool *pool
argument_list|,
argument|const Class *object
argument_list|,
argument|T (Class::*fn)(Param1, Param2, Param3, Param4, Param5) const
argument_list|,
argument|const Arg1&arg1
argument_list|,
argument|const Arg2&arg2
argument_list|,
argument|const Arg3&arg3
argument_list|,
argument|const Arg4&arg4
argument_list|,
argument|const Arg5&arg5
argument_list|)
block|{
return|return
operator|(
name|new
name|typename
name|SelectStoredConstMemberFunctionPointerCall5
operator|<
name|T
operator|,
name|Class
operator|,
name|Param1
operator|,
name|Arg1
operator|,
name|Param2
operator|,
name|Arg2
operator|,
name|Param3
operator|,
name|Arg3
operator|,
name|Param4
operator|,
name|Arg4
operator|,
name|Param5
operator|,
name|Arg5
operator|>
operator|::
name|type
argument_list|(
name|fn
argument_list|,
name|object
argument_list|,
name|arg1
argument_list|,
name|arg2
argument_list|,
name|arg3
argument_list|,
name|arg4
argument_list|,
name|arg5
argument_list|)
operator|)
operator|->
name|start
argument_list|(
name|pool
argument_list|)
return|;
block|}
end_expr_stmt
begin_comment
unit|}
comment|//namespace QtConcurrent
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// Q_QDOC
end_comment
begin_endif
unit|QT_END_NAMESPACE
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_CONCURRENT
end_comment
begin_endif
endif|#
directive|endif
end_endif
end_unit
