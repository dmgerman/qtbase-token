begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the QtTest module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QTESTDATA_H
end_ifndef
begin_define
DECL|macro|QTESTDATA_H
define|#
directive|define
name|QTESTDATA_H
end_define
begin_include
include|#
directive|include
file|<QtTest/qtest_global.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qmetatype.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qstring.h>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
DECL|variable|QTestTable
name|class
name|QTestTable
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QTestDataPrivate
name|class
name|QTestDataPrivate
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|Q_TESTLIB_EXPORT
name|QTestData
block|{
name|public
label|:
operator|~
name|QTestData
argument_list|()
expr_stmt|;
name|void
name|append
parameter_list|(
name|int
name|type
parameter_list|,
specifier|const
name|void
modifier|*
name|data
parameter_list|)
function_decl|;
name|void
modifier|*
name|data
argument_list|(
name|int
name|index
argument_list|)
decl|const
decl_stmt|;
specifier|const
name|char
operator|*
name|dataTag
argument_list|()
specifier|const
expr_stmt|;
name|QTestTable
operator|*
name|parent
argument_list|()
specifier|const
expr_stmt|;
name|int
name|dataCount
argument_list|()
specifier|const
expr_stmt|;
name|private
label|:
name|friend
name|class
name|QTestTable
decl_stmt|;
name|QTestData
argument_list|(
specifier|const
name|char
operator|*
name|tag
argument_list|,
name|QTestTable
operator|*
name|parent
argument_list|)
expr_stmt|;
name|Q_DISABLE_COPY
argument_list|(
argument|QTestData
argument_list|)
name|QTestDataPrivate
modifier|*
name|d
decl_stmt|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|>
DECL|function|operator
name|QTestData
operator|&
name|operator
operator|<<
operator|(
name|QTestData
operator|&
name|data
operator|,
specifier|const
name|T
operator|&
name|value
operator|)
block|{
name|data
operator|.
name|append
argument_list|(
name|qMetaTypeId
operator|<
name|T
operator|>
operator|(
operator|)
argument_list|,
operator|&
name|value
argument_list|)
block|;
return|return
name|data
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|operator
specifier|inline
name|QTestData
operator|&
name|operator
operator|<<
operator|(
name|QTestData
operator|&
name|data
operator|,
specifier|const
name|char
operator|*
name|value
operator|)
block|{
name|QString
name|str
operator|=
name|QString
operator|::
name|fromUtf8
argument_list|(
name|value
argument_list|)
block|;
name|data
operator|.
name|append
argument_list|(
name|QMetaType
operator|::
name|QString
argument_list|,
operator|&
name|str
argument_list|)
block|;
return|return
name|data
return|;
block|}
end_expr_stmt
begin_ifdef
ifdef|#
directive|ifdef
name|QT_USE_QSTRINGBUILDER
end_ifdef
begin_expr_stmt
DECL|variable|A
name|template
operator|<
name|typename
name|A
operator|,
name|typename
name|B
operator|>
DECL|function|operator
specifier|inline
name|QTestData
operator|&
name|operator
operator|<<
operator|(
name|QTestData
operator|&
name|data
operator|,
specifier|const
name|QStringBuilder
operator|<
name|A
operator|,
name|B
operator|>
operator|&
name|value
operator|)
block|{
return|return
name|data
operator|<<
name|typename
name|QConcatenable
operator|<
name|QStringBuilder
operator|<
name|A
operator|,
name|B
operator|>
expr|>
operator|::
name|ConvertTo
argument_list|(
name|value
argument_list|)
return|;
block|}
end_expr_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
end_unit
