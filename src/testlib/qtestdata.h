begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the QtTest module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QTESTDATA_H
end_ifndef
begin_define
DECL|macro|QTESTDATA_H
define|#
directive|define
name|QTESTDATA_H
end_define
begin_include
include|#
directive|include
file|<QtTest/qtest_global.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qmetatype.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qstring.h>
end_include
begin_function
name|QT_BEGIN_HEADER
name|QT_BEGIN_NAMESPACE
name|QT_MODULE
parameter_list|(
name|Test
parameter_list|)
name|class
name|QTestTable
decl_stmt|;
DECL|variable|QTestDataPrivate
name|class
name|QTestDataPrivate
decl_stmt|;
name|class
name|Q_TESTLIB_EXPORT
name|QTestData
decl_stmt|{ public:     ~QTestData(
end_function
begin_empty_stmt
unit|)
empty_stmt|;
end_empty_stmt
begin_function_decl
name|void
name|append
parameter_list|(
name|int
name|type
parameter_list|,
specifier|const
name|void
modifier|*
name|data
parameter_list|)
function_decl|;
end_function_decl
begin_decl_stmt
name|void
modifier|*
name|data
argument_list|(
name|int
name|index
argument_list|)
decl|const
decl_stmt|;
end_decl_stmt
begin_expr_stmt
specifier|const
name|char
operator|*
name|dataTag
argument_list|()
specifier|const
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|QTestTable
operator|*
name|parent
argument_list|()
specifier|const
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|int
name|dataCount
argument_list|()
specifier|const
expr_stmt|;
end_expr_stmt
begin_label
name|private
label|:
end_label
begin_decl_stmt
name|friend
name|class
name|QTestTable
decl_stmt|;
end_decl_stmt
begin_expr_stmt
name|QTestData
argument_list|(
specifier|const
name|char
operator|*
name|tag
operator|=
literal|0
argument_list|,
name|QTestTable
operator|*
name|parent
operator|=
literal|0
argument_list|)
expr_stmt|;
end_expr_stmt
begin_macro
name|Q_DISABLE_COPY
argument_list|(
argument|QTestData
argument_list|)
end_macro
begin_decl_stmt
name|QTestDataPrivate
modifier|*
name|d
decl_stmt|;
end_decl_stmt
begin_expr_stmt
unit|};
name|template
operator|<
name|typename
name|T
operator|>
DECL|function|operator
name|QTestData
operator|&
name|operator
operator|<<
operator|(
name|QTestData
operator|&
name|data
operator|,
specifier|const
name|T
operator|&
name|value
operator|)
block|{
name|data
operator|.
name|append
argument_list|(
name|qMetaTypeId
operator|<
name|T
operator|>
operator|(
operator|)
argument_list|,
operator|&
name|value
argument_list|)
block|;
return|return
name|data
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|operator
specifier|inline
name|QTestData
operator|&
name|operator
operator|<<
operator|(
name|QTestData
operator|&
name|data
operator|,
specifier|const
name|char
operator|*
name|value
operator|)
block|{
name|QString
name|str
operator|=
name|QString
operator|::
name|fromAscii
argument_list|(
name|value
argument_list|)
block|;
name|data
operator|.
name|append
argument_list|(
name|QMetaType
operator|::
name|QString
argument_list|,
operator|&
name|str
argument_list|)
block|;
return|return
name|data
return|;
block|}
end_expr_stmt
begin_expr_stmt
name|QT_END_NAMESPACE
name|QT_END_HEADER
end_expr_stmt
begin_endif
endif|#
directive|endif
end_endif
end_unit
