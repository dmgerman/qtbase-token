begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the QtTest module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QTESTXUNITSTREAMER_H
end_ifndef
begin_define
DECL|macro|QTESTXUNITSTREAMER_H
define|#
directive|define
name|QTESTXUNITSTREAMER_H
end_define
begin_include
include|#
directive|include
file|<QtCore/qglobal.h>
end_include
begin_function
name|QT_BEGIN_HEADER
name|QT_BEGIN_NAMESPACE
name|QT_MODULE
parameter_list|(
name|Test
parameter_list|)
name|class
name|QTestElement
decl_stmt|;
DECL|variable|QTestElementAttribute
name|class
name|QTestElementAttribute
decl_stmt|;
DECL|variable|QXunitTestLogger
name|class
name|QXunitTestLogger
decl_stmt|;
function|struct QTestCharBuffer;
end_function
begin_decl_stmt
name|class
name|QTestXunitStreamer
block|{
name|public
label|:
name|QTestXunitStreamer
argument_list|(
name|QXunitTestLogger
operator|*
name|logger
argument_list|)
expr_stmt|;
operator|~
name|QTestXunitStreamer
argument_list|()
expr_stmt|;
name|void
name|formatStart
argument_list|(
specifier|const
name|QTestElement
operator|*
name|element
argument_list|,
name|QTestCharBuffer
operator|*
name|formatted
argument_list|)
decl|const
decl_stmt|;
name|void
name|formatEnd
argument_list|(
specifier|const
name|QTestElement
operator|*
name|element
argument_list|,
name|QTestCharBuffer
operator|*
name|formatted
argument_list|)
decl|const
decl_stmt|;
name|void
name|formatAfterAttributes
argument_list|(
specifier|const
name|QTestElement
operator|*
name|element
argument_list|,
name|QTestCharBuffer
operator|*
name|formatted
argument_list|)
decl|const
decl_stmt|;
name|void
name|formatAttributes
argument_list|(
specifier|const
name|QTestElement
operator|*
name|element
argument_list|,
specifier|const
name|QTestElementAttribute
operator|*
name|attribute
argument_list|,
name|QTestCharBuffer
operator|*
name|formatted
argument_list|)
decl|const
decl_stmt|;
name|void
name|output
argument_list|(
name|QTestElement
operator|*
name|element
argument_list|)
decl|const
decl_stmt|;
name|void
name|outputElements
argument_list|(
name|QTestElement
operator|*
name|element
argument_list|,
name|bool
name|isChildElement
operator|=
name|false
argument_list|)
decl|const
decl_stmt|;
name|void
name|outputElementAttributes
argument_list|(
specifier|const
name|QTestElement
operator|*
name|element
argument_list|,
name|QTestElementAttribute
operator|*
name|attribute
argument_list|)
decl|const
decl_stmt|;
name|void
name|outputString
argument_list|(
specifier|const
name|char
operator|*
name|msg
argument_list|)
decl|const
decl_stmt|;
name|private
label|:
name|void
name|displayXunitXmlHeader
argument_list|()
specifier|const
expr_stmt|;
specifier|static
name|void
name|indentForElement
parameter_list|(
specifier|const
name|QTestElement
modifier|*
name|element
parameter_list|,
name|char
modifier|*
name|buf
parameter_list|,
name|int
name|size
parameter_list|)
function_decl|;
name|QXunitTestLogger
modifier|*
name|testLogger
decl_stmt|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_expr_stmt
name|QT_END_NAMESPACE
name|QT_END_HEADER
end_expr_stmt
begin_endif
endif|#
directive|endif
end_endif
end_unit
