begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the QtTest module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QXCTESTLOGGER_P_H
end_ifndef
begin_define
DECL|macro|QXCTESTLOGGER_P_H
define|#
directive|define
name|QXCTESTLOGGER_P_H
end_define
begin_comment
comment|//
end_comment
begin_comment
comment|//  W A R N I N G
end_comment
begin_comment
comment|//  -------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// This file is not part of the Qt API.  It exists purely as an
end_comment
begin_comment
comment|// implementation detail.  This header file may change from version to
end_comment
begin_comment
comment|// version without notice, or even be removed.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// We mean it.
end_comment
begin_comment
comment|//
end_comment
begin_include
include|#
directive|include
file|<QtTest/private/qabstracttestlogger_p.h>
end_include
begin_include
include|#
directive|include
file|<dispatch/dispatch.h>
end_include
begin_expr_stmt
DECL|variable|XCTest
name|Q_FORWARD_DECLARE_OBJC_CLASS
argument_list|(
name|XCTest
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
DECL|variable|XCTestRun
name|Q_FORWARD_DECLARE_OBJC_CLASS
argument_list|(
name|XCTestRun
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
DECL|variable|NSMutableArray
name|Q_FORWARD_DECLARE_OBJC_CLASS
argument_list|(
name|NSMutableArray
argument_list|)
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
name|class
name|QXcodeTestLogger
range|:
name|public
name|QAbstractTestLogger
block|{
name|public
operator|:
name|QXcodeTestLogger
argument_list|()
block|;
operator|~
name|QXcodeTestLogger
argument_list|()
name|Q_DECL_OVERRIDE
block|;
name|void
name|startLogging
argument_list|()
name|Q_DECL_OVERRIDE
block|;
name|void
name|stopLogging
argument_list|()
name|Q_DECL_OVERRIDE
block|;
name|void
name|enterTestFunction
argument_list|(
argument|const char *function
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|void
name|leaveTestFunction
argument_list|()
name|Q_DECL_OVERRIDE
block|;
name|void
name|addIncident
argument_list|(
argument|IncidentTypes type
argument_list|,
argument|const char *description
argument_list|,
argument|const char *file =
literal|0
argument_list|,
argument|int line =
literal|0
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|void
name|addMessage
argument_list|(
argument|MessageTypes type
argument_list|,
argument|const QString&message
argument_list|,
argument|const char *file =
literal|0
argument_list|,
argument|int line =
literal|0
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|void
name|addBenchmarkResult
argument_list|(
argument|const QBenchmarkResult&result
argument_list|)
name|Q_DECL_OVERRIDE
block|;
specifier|static
name|bool
name|canLogTestProgress
argument_list|()
block|;
specifier|static
name|int
name|parseCommandLineArgument
argument_list|(
specifier|const
name|char
operator|*
name|argument
argument_list|)
block|;
specifier|static
name|bool
name|isActive
argument_list|()
block|;
name|private
operator|:
name|void
name|pushTestRunForTest
argument_list|(
argument|XCTest *test
argument_list|,
argument|bool start
argument_list|)
block|;
name|XCTestRun
operator|*
name|popTestRun
argument_list|()
block|;
name|NSMutableArray
operator|*
name|m_testRuns
block|;
specifier|static
name|QXcodeTestLogger
operator|*
name|s_currentTestLogger
block|; }
decl_stmt|;
end_decl_stmt
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
end_unit
