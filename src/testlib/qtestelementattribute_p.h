begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the QtTest module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QTESTELEMENTATTRIBUTE_P_H
end_ifndef
begin_define
DECL|macro|QTESTELEMENTATTRIBUTE_P_H
define|#
directive|define
name|QTESTELEMENTATTRIBUTE_P_H
end_define
begin_comment
comment|//
end_comment
begin_comment
comment|//  W A R N I N G
end_comment
begin_comment
comment|//  -------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// This file is not part of the Qt API.  It exists purely as an
end_comment
begin_comment
comment|// implementation detail.  This header file may change from version to
end_comment
begin_comment
comment|// version without notice, or even be removed.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// We mean it.
end_comment
begin_comment
comment|//
end_comment
begin_include
include|#
directive|include
file|<QtTest/private/qtestcorelist_p.h>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
name|namespace
name|QTest
block|{
enum|enum
name|AttributeIndex
block|{
name|AI_Undefined
init|=
operator|-
literal|1
block|,
name|AI_Name
init|=
literal|0
block|,
name|AI_Result
init|=
literal|1
block|,
name|AI_Tests
init|=
literal|2
block|,
name|AI_Failures
init|=
literal|3
block|,
name|AI_Errors
init|=
literal|4
block|,
name|AI_Type
init|=
literal|5
block|,
name|AI_Description
init|=
literal|6
block|,
name|AI_PropertyValue
init|=
literal|7
block|,
name|AI_QTestVersion
init|=
literal|8
block|,
name|AI_QtVersion
init|=
literal|9
block|,
name|AI_File
init|=
literal|10
block|,
name|AI_Line
init|=
literal|11
block|,
name|AI_Metric
init|=
literal|12
block|,
name|AI_Tag
init|=
literal|13
block|,
name|AI_Value
init|=
literal|14
block|,
name|AI_Iterations
init|=
literal|15
block|}
enum|;
enum|enum
name|LogElementType
block|{
name|LET_Undefined
init|=
operator|-
literal|1
block|,
name|LET_Property
init|=
literal|0
block|,
name|LET_Properties
init|=
literal|1
block|,
name|LET_Failure
init|=
literal|2
block|,
name|LET_Error
init|=
literal|3
block|,
name|LET_TestCase
init|=
literal|4
block|,
name|LET_TestSuite
init|=
literal|5
block|,
name|LET_Benchmark
init|=
literal|6
block|,
name|LET_SystemError
init|=
literal|7
block|}
enum|;
block|}
end_decl_stmt
begin_decl_stmt
name|class
name|QTestElementAttribute
range|:
name|public
name|QTestCoreList
operator|<
name|QTestElementAttribute
operator|>
block|{
name|public
operator|:
name|QTestElementAttribute
argument_list|()
block|;
operator|~
name|QTestElementAttribute
argument_list|()
block|;
specifier|const
name|char
operator|*
name|value
argument_list|()
specifier|const
block|;
specifier|const
name|char
operator|*
name|name
argument_list|()
specifier|const
block|;
name|QTest
operator|::
name|AttributeIndex
name|index
argument_list|()
specifier|const
block|;
name|bool
name|isNull
argument_list|()
specifier|const
block|;
name|bool
name|setPair
argument_list|(
argument|QTest::AttributeIndex attributeIndex
argument_list|,
argument|const char *value
argument_list|)
block|;
name|private
operator|:
name|char
operator|*
name|attributeValue
block|;
name|QTest
operator|::
name|AttributeIndex
name|attributeIndex
block|; }
decl_stmt|;
end_decl_stmt
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
end_unit
