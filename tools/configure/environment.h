begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the tools applications of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:GPL-EXCEPT$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3 as published by the Free Software ** Foundation with exceptions as appearing in the file LICENSE.GPL3-EXCEPT ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<qstringlist.h>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
DECL|enum|Compiler
name|enum
name|Compiler
block|{
DECL|enumerator|CC_UNKNOWN
name|CC_UNKNOWN
operator|=
literal|0
operator|,
DECL|enumerator|CC_BORLAND
name|CC_BORLAND
operator|=
literal|0x01
operator|,
DECL|enumerator|CC_MINGW
name|CC_MINGW
operator|=
literal|0x02
operator|,
DECL|enumerator|CC_INTEL
name|CC_INTEL
operator|=
literal|0x03
operator|,
DECL|enumerator|CC_MSVC2005
name|CC_MSVC2005
operator|=
literal|0x80
operator|,
DECL|enumerator|CC_MSVC2008
name|CC_MSVC2008
operator|=
literal|0x90
operator|,
DECL|enumerator|CC_MSVC2010
name|CC_MSVC2010
operator|=
literal|0xA0
operator|,
DECL|enumerator|CC_MSVC2012
name|CC_MSVC2012
operator|=
literal|0xB0
operator|,
DECL|enumerator|CC_MSVC2013
name|CC_MSVC2013
operator|=
literal|0xC0
operator|,
DECL|enumerator|CC_MSVC2015
name|CC_MSVC2015
operator|=
literal|0xD0
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_struct_decl
struct_decl|struct
name|CompilerInfo
struct_decl|;
end_struct_decl
begin_decl_stmt
name|class
name|Environment
block|{
name|public
label|:
specifier|static
name|Compiler
name|detectCompiler
parameter_list|()
function_decl|;
specifier|static
name|QString
name|detectQMakeSpec
parameter_list|()
function_decl|;
specifier|static
name|Compiler
name|compilerFromQMakeSpec
parameter_list|(
specifier|const
name|QString
modifier|&
name|qmakeSpec
parameter_list|)
function_decl|;
specifier|static
name|QString
name|gccVersion
parameter_list|()
function_decl|;
specifier|static
name|int
name|execute
parameter_list|(
name|QStringList
name|arguments
parameter_list|,
specifier|const
name|QStringList
modifier|&
name|additionalEnv
parameter_list|,
specifier|const
name|QStringList
modifier|&
name|removeEnv
parameter_list|)
function_decl|;
specifier|static
name|QString
name|execute
parameter_list|(
specifier|const
name|QString
modifier|&
name|command
parameter_list|,
name|int
modifier|*
name|returnCode
init|=
literal|0
parameter_list|)
function_decl|;
specifier|static
name|bool
name|cpdir
parameter_list|(
specifier|const
name|QString
modifier|&
name|srcDir
parameter_list|,
specifier|const
name|QString
modifier|&
name|destDir
parameter_list|)
function_decl|;
specifier|static
name|bool
name|rmdir
parameter_list|(
specifier|const
name|QString
modifier|&
name|name
parameter_list|)
function_decl|;
specifier|static
name|QString
name|findFileInPaths
parameter_list|(
specifier|const
name|QString
modifier|&
name|fileName
parameter_list|,
specifier|const
name|QStringList
modifier|&
name|paths
parameter_list|)
function_decl|;
specifier|static
name|QStringList
name|path
parameter_list|()
function_decl|;
specifier|static
name|QString
name|detectDirectXSdk
parameter_list|()
function_decl|;
specifier|static
name|QStringList
name|headerPaths
parameter_list|(
name|Compiler
name|compiler
parameter_list|)
function_decl|;
specifier|static
name|QStringList
name|libraryPaths
parameter_list|(
name|Compiler
name|compiler
parameter_list|)
function_decl|;
name|private
label|:
specifier|static
name|Compiler
name|detectedCompiler
decl_stmt|;
specifier|static
name|CompilerInfo
modifier|*
name|compilerInfo
parameter_list|(
name|Compiler
name|compiler
parameter_list|)
function_decl|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_macro
name|QT_END_NAMESPACE
end_macro
end_unit
