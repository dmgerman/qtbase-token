begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the Qt Designer of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** No Commercial Usage ** This file contains pre-release code and may not be distributed. ** You may use this file in accordance with the terms and conditions ** contained in the Technology Preview License Agreement accompanying ** this package. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights.  These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** If you have questions regarding the use of this file, please contact ** Nokia at qt-info@nokia.com. ** ** ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|CUSTOMWIDGET_H
end_ifndef
begin_define
DECL|macro|CUSTOMWIDGET_H
define|#
directive|define
name|CUSTOMWIDGET_H
end_define
begin_include
include|#
directive|include
file|<QtDesigner/extension.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/QObject>
end_include
begin_include
include|#
directive|include
file|<QtCore/QString>
end_include
begin_include
include|#
directive|include
file|<QtGui/QIcon>
end_include
begin_decl_stmt
name|QT_BEGIN_HEADER
name|QT_BEGIN_NAMESPACE
DECL|variable|QWidget
name|class
name|QWidget
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QDesignerFormEditorInterface
name|class
name|QDesignerFormEditorInterface
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|QDesignerCustomWidgetInterface
block|{
name|public
label|:
name|virtual
operator|~
name|QDesignerCustomWidgetInterface
argument_list|()
block|{}
name|virtual
name|QString
name|name
argument_list|()
specifier|const
operator|=
literal|0
expr_stmt|;
name|virtual
name|QString
name|group
argument_list|()
specifier|const
operator|=
literal|0
expr_stmt|;
name|virtual
name|QString
name|toolTip
argument_list|()
specifier|const
operator|=
literal|0
expr_stmt|;
name|virtual
name|QString
name|whatsThis
argument_list|()
specifier|const
operator|=
literal|0
expr_stmt|;
name|virtual
name|QString
name|includeFile
argument_list|()
specifier|const
operator|=
literal|0
expr_stmt|;
name|virtual
name|QIcon
name|icon
argument_list|()
specifier|const
operator|=
literal|0
expr_stmt|;
name|virtual
name|bool
name|isContainer
argument_list|()
specifier|const
operator|=
literal|0
expr_stmt|;
name|virtual
name|QWidget
modifier|*
name|createWidget
parameter_list|(
name|QWidget
modifier|*
name|parent
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|bool
name|isInitialized
argument_list|()
specifier|const
block|{
return|return
name|false
return|;
block|}
name|virtual
name|void
name|initialize
parameter_list|(
name|QDesignerFormEditorInterface
modifier|*
name|core
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
name|core
argument_list|)
expr_stmt|;
block|}
name|virtual
name|QString
name|domXml
argument_list|()
specifier|const
block|{
return|return
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"<widget class=\"%1\" name=\"%2\"/>"
argument_list|)
operator|.
name|arg
argument_list|(
name|name
argument_list|()
argument_list|)
operator|.
name|arg
argument_list|(
name|name
argument_list|()
operator|.
name|toLower
argument_list|()
argument_list|)
return|;
block|}
name|virtual
name|QString
name|codeTemplate
argument_list|()
specifier|const
block|{
return|return
name|QString
argument_list|()
return|;
block|}
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_macro
name|Q_DECLARE_INTERFACE
argument_list|(
argument|QDesignerCustomWidgetInterface
argument_list|,
literal|"com.trolltech.Qt.Designer.CustomWidget"
argument_list|)
end_macro
begin_decl_stmt
name|class
name|QDesignerCustomWidgetCollectionInterface
block|{
name|public
label|:
name|virtual
operator|~
name|QDesignerCustomWidgetCollectionInterface
argument_list|()
block|{}
name|virtual
name|QList
operator|<
name|QDesignerCustomWidgetInterface
operator|*
operator|>
name|customWidgets
argument_list|()
specifier|const
operator|=
literal|0
expr_stmt|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_macro
name|Q_DECLARE_INTERFACE
argument_list|(
argument|QDesignerCustomWidgetCollectionInterface
argument_list|,
literal|"com.trolltech.Qt.Designer.CustomWidgetCollection"
argument_list|)
end_macro
begin_expr_stmt
name|QT_END_NAMESPACE
name|QT_END_HEADER
end_expr_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// CUSTOMWIDGET_H
end_comment
end_unit
