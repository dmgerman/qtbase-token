begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the Qt Designer of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** No Commercial Usage ** This file contains pre-release code and may not be distributed. ** You may use this file in accordance with the terms and conditions ** contained in the Technology Preview License Agreement accompanying ** this package. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights.  These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** If you have questions regarding the use of this file, please contact ** Nokia at qt-info@nokia.com. ** ** ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|ABSTRACTFORMBUILDERPRIVATE_H
end_ifndef
begin_define
DECL|macro|ABSTRACTFORMBUILDERPRIVATE_H
define|#
directive|define
name|ABSTRACTFORMBUILDERPRIVATE_H
end_define
begin_comment
comment|//
end_comment
begin_comment
comment|//  W A R N I N G
end_comment
begin_comment
comment|//  -------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// This file is not part of the Qt API.  It exists purely as an
end_comment
begin_comment
comment|// implementation detail.  This header file may change from version to
end_comment
begin_comment
comment|// version without notice, or even be removed.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// We mean it.
end_comment
begin_comment
comment|//
end_comment
begin_include
include|#
directive|include
file|"uilib_global.h"
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|QT_FORMBUILDER_NO_SCRIPT
end_ifndef
begin_include
include|#
directive|include
file|"formscriptrunner_p.h"
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_include
include|#
directive|include
file|<QtCore/QHash>
end_include
begin_include
include|#
directive|include
file|<QtCore/QPointer>
end_include
begin_include
include|#
directive|include
file|<QtCore/QString>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
DECL|variable|QObject
name|class
name|QObject
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QVariant
name|class
name|QVariant
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QWidget
name|class
name|QWidget
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QObject
name|class
name|QObject
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QLabel
name|class
name|QLabel
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QButtonGroup
name|class
name|QButtonGroup
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QBoxLayout
name|class
name|QBoxLayout
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QGridLayout
name|class
name|QGridLayout
decl_stmt|;
end_decl_stmt
begin_ifdef
ifdef|#
directive|ifdef
name|QFORMINTERNAL_NAMESPACE
end_ifdef
begin_decl_stmt
name|namespace
name|QFormInternal
block|{
endif|#
directive|endif
name|class
name|DomButtonGroups
decl_stmt|;
name|class
name|DomButtonGroup
decl_stmt|;
name|class
name|DomCustomWidget
decl_stmt|;
name|class
name|QAbstractFormBuilder
decl_stmt|;
name|class
name|QResourceBuilder
decl_stmt|;
name|class
name|QTextBuilder
decl_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|QFormBuilderExtra
block|{
name|QFormBuilderExtra
argument_list|()
expr_stmt|;
operator|~
name|QFormBuilderExtra
argument_list|()
expr_stmt|;
name|public
label|:
struct|struct
name|CustomWidgetData
block|{
name|CustomWidgetData
argument_list|()
expr_stmt|;
name|explicit
name|CustomWidgetData
parameter_list|(
specifier|const
name|DomCustomWidget
modifier|*
name|dc
parameter_list|)
function_decl|;
name|QString
name|addPageMethod
decl_stmt|;
name|QString
name|script
decl_stmt|;
name|QString
name|baseClass
decl_stmt|;
name|bool
name|isContainer
decl_stmt|;
block|}
struct|;
name|void
name|clear
parameter_list|()
function_decl|;
name|bool
name|applyPropertyInternally
parameter_list|(
name|QObject
modifier|*
name|o
parameter_list|,
specifier|const
name|QString
modifier|&
name|propertyName
parameter_list|,
specifier|const
name|QVariant
modifier|&
name|value
parameter_list|)
function_decl|;
enum|enum
name|BuddyMode
block|{
name|BuddyApplyAll
block|,
name|BuddyApplyVisibleOnly
block|}
enum|;
name|void
name|applyInternalProperties
argument_list|()
specifier|const
expr_stmt|;
specifier|static
name|bool
name|applyBuddy
parameter_list|(
specifier|const
name|QString
modifier|&
name|buddyName
parameter_list|,
name|BuddyMode
name|applyMode
parameter_list|,
name|QLabel
modifier|*
name|label
parameter_list|)
function_decl|;
specifier|const
name|QPointer
operator|<
name|QWidget
operator|>
operator|&
name|parentWidget
argument_list|()
specifier|const
expr_stmt|;
name|bool
name|parentWidgetIsSet
argument_list|()
specifier|const
expr_stmt|;
name|void
name|setParentWidget
argument_list|(
specifier|const
name|QPointer
operator|<
name|QWidget
operator|>
operator|&
name|w
argument_list|)
decl_stmt|;
ifndef|#
directive|ifndef
name|QT_FORMBUILDER_NO_SCRIPT
name|QFormScriptRunner
modifier|&
name|formScriptRunner
parameter_list|()
function_decl|;
name|QString
name|customWidgetScript
argument_list|(
specifier|const
name|QString
operator|&
name|className
argument_list|)
decl|const
decl_stmt|;
endif|#
directive|endif
name|void
name|setProcessingLayoutWidget
parameter_list|(
name|bool
name|processing
parameter_list|)
function_decl|;
name|bool
name|processingLayoutWidget
argument_list|()
specifier|const
expr_stmt|;
name|void
name|setResourceBuilder
parameter_list|(
name|QResourceBuilder
modifier|*
name|builder
parameter_list|)
function_decl|;
name|QResourceBuilder
operator|*
name|resourceBuilder
argument_list|()
specifier|const
expr_stmt|;
name|void
name|setTextBuilder
parameter_list|(
name|QTextBuilder
modifier|*
name|builder
parameter_list|)
function_decl|;
name|QTextBuilder
operator|*
name|textBuilder
argument_list|()
specifier|const
expr_stmt|;
specifier|static
name|QFormBuilderExtra
modifier|*
name|instance
parameter_list|(
specifier|const
name|QAbstractFormBuilder
modifier|*
name|afb
parameter_list|)
function_decl|;
specifier|static
name|void
name|removeInstance
parameter_list|(
specifier|const
name|QAbstractFormBuilder
modifier|*
name|afb
parameter_list|)
function_decl|;
name|void
name|storeCustomWidgetData
parameter_list|(
specifier|const
name|QString
modifier|&
name|className
parameter_list|,
specifier|const
name|DomCustomWidget
modifier|*
name|d
parameter_list|)
function_decl|;
name|QString
name|customWidgetAddPageMethod
argument_list|(
specifier|const
name|QString
operator|&
name|className
argument_list|)
decl|const
decl_stmt|;
name|QString
name|customWidgetBaseClass
argument_list|(
specifier|const
name|QString
operator|&
name|className
argument_list|)
decl|const
decl_stmt|;
name|bool
name|isCustomWidgetContainer
argument_list|(
specifier|const
name|QString
operator|&
name|className
argument_list|)
decl|const
decl_stmt|;
comment|// --- Hash used in creating button groups on demand. Store a map of name and pair of dom group and real group
name|void
name|registerButtonGroups
parameter_list|(
specifier|const
name|DomButtonGroups
modifier|*
name|groups
parameter_list|)
function_decl|;
typedef|typedef
name|QPair
operator|<
name|DomButtonGroup
operator|*
operator|,
name|QButtonGroup
operator|*
operator|>
name|ButtonGroupEntry
expr_stmt|;
typedef|typedef
name|QHash
operator|<
name|QString
operator|,
name|ButtonGroupEntry
operator|>
name|ButtonGroupHash
expr_stmt|;
specifier|const
name|ButtonGroupHash
operator|&
name|buttonGroups
argument_list|()
specifier|const
block|{
return|return
name|m_buttonGroups
return|;
block|}
name|ButtonGroupHash
modifier|&
name|buttonGroups
parameter_list|()
block|{
return|return
name|m_buttonGroups
return|;
block|}
comment|// return stretch as a comma-separated list
specifier|static
name|QString
name|boxLayoutStretch
parameter_list|(
specifier|const
name|QBoxLayout
modifier|*
parameter_list|)
function_decl|;
comment|// apply stretch
specifier|static
name|bool
name|setBoxLayoutStretch
parameter_list|(
specifier|const
name|QString
modifier|&
parameter_list|,
name|QBoxLayout
modifier|*
parameter_list|)
function_decl|;
specifier|static
name|void
name|clearBoxLayoutStretch
parameter_list|(
name|QBoxLayout
modifier|*
parameter_list|)
function_decl|;
specifier|static
name|QString
name|gridLayoutRowStretch
parameter_list|(
specifier|const
name|QGridLayout
modifier|*
parameter_list|)
function_decl|;
specifier|static
name|bool
name|setGridLayoutRowStretch
parameter_list|(
specifier|const
name|QString
modifier|&
parameter_list|,
name|QGridLayout
modifier|*
parameter_list|)
function_decl|;
specifier|static
name|void
name|clearGridLayoutRowStretch
parameter_list|(
name|QGridLayout
modifier|*
parameter_list|)
function_decl|;
specifier|static
name|QString
name|gridLayoutColumnStretch
parameter_list|(
specifier|const
name|QGridLayout
modifier|*
parameter_list|)
function_decl|;
specifier|static
name|bool
name|setGridLayoutColumnStretch
parameter_list|(
specifier|const
name|QString
modifier|&
parameter_list|,
name|QGridLayout
modifier|*
parameter_list|)
function_decl|;
specifier|static
name|void
name|clearGridLayoutColumnStretch
parameter_list|(
name|QGridLayout
modifier|*
parameter_list|)
function_decl|;
comment|// return the row/column sizes as  comma-separated lists
specifier|static
name|QString
name|gridLayoutRowMinimumHeight
parameter_list|(
specifier|const
name|QGridLayout
modifier|*
parameter_list|)
function_decl|;
specifier|static
name|bool
name|setGridLayoutRowMinimumHeight
parameter_list|(
specifier|const
name|QString
modifier|&
parameter_list|,
name|QGridLayout
modifier|*
parameter_list|)
function_decl|;
specifier|static
name|void
name|clearGridLayoutRowMinimumHeight
parameter_list|(
name|QGridLayout
modifier|*
parameter_list|)
function_decl|;
specifier|static
name|QString
name|gridLayoutColumnMinimumWidth
parameter_list|(
specifier|const
name|QGridLayout
modifier|*
parameter_list|)
function_decl|;
specifier|static
name|bool
name|setGridLayoutColumnMinimumWidth
parameter_list|(
specifier|const
name|QString
modifier|&
parameter_list|,
name|QGridLayout
modifier|*
parameter_list|)
function_decl|;
specifier|static
name|void
name|clearGridLayoutColumnMinimumWidth
parameter_list|(
name|QGridLayout
modifier|*
parameter_list|)
function_decl|;
name|private
label|:
name|void
name|clearResourceBuilder
parameter_list|()
function_decl|;
name|void
name|clearTextBuilder
parameter_list|()
function_decl|;
typedef|typedef
name|QHash
operator|<
name|QLabel
operator|*
operator|,
name|QString
operator|>
name|BuddyHash
expr_stmt|;
name|BuddyHash
name|m_buddies
decl_stmt|;
ifndef|#
directive|ifndef
name|QT_FORMBUILDER_NO_SCRIPT
name|QFormScriptRunner
name|m_FormScriptRunner
decl_stmt|;
endif|#
directive|endif
name|QHash
operator|<
name|QString
operator|,
name|CustomWidgetData
operator|>
name|m_customWidgetDataHash
expr_stmt|;
name|ButtonGroupHash
name|m_buttonGroups
decl_stmt|;
name|bool
name|m_layoutWidget
decl_stmt|;
name|QResourceBuilder
modifier|*
name|m_resourceBuilder
decl_stmt|;
name|QTextBuilder
modifier|*
name|m_textBuilder
decl_stmt|;
name|QPointer
operator|<
name|QWidget
operator|>
name|m_parentWidget
expr_stmt|;
name|bool
name|m_parentWidgetIsSet
decl_stmt|;
block|}
empty_stmt|;
name|void
name|uiLibWarning
parameter_list|(
specifier|const
name|QString
modifier|&
name|message
parameter_list|)
function_decl|;
comment|// Struct with static accessor that provides most strings used in the form builder.
struct|struct
name|QDESIGNER_UILIB_EXPORT
name|QFormBuilderStrings
block|{
name|QFormBuilderStrings
argument_list|()
expr_stmt|;
specifier|static
specifier|const
name|QFormBuilderStrings
modifier|&
name|instance
parameter_list|()
function_decl|;
specifier|const
name|QString
name|buddyProperty
decl_stmt|;
specifier|const
name|QString
name|cursorProperty
decl_stmt|;
specifier|const
name|QString
name|objectNameProperty
decl_stmt|;
specifier|const
name|QString
name|trueValue
decl_stmt|;
specifier|const
name|QString
name|falseValue
decl_stmt|;
specifier|const
name|QString
name|horizontalPostFix
decl_stmt|;
specifier|const
name|QString
name|separator
decl_stmt|;
specifier|const
name|QString
name|defaultTitle
decl_stmt|;
specifier|const
name|QString
name|titleAttribute
decl_stmt|;
specifier|const
name|QString
name|labelAttribute
decl_stmt|;
specifier|const
name|QString
name|toolTipAttribute
decl_stmt|;
specifier|const
name|QString
name|whatsThisAttribute
decl_stmt|;
specifier|const
name|QString
name|flagsAttribute
decl_stmt|;
specifier|const
name|QString
name|iconAttribute
decl_stmt|;
specifier|const
name|QString
name|pixmapAttribute
decl_stmt|;
specifier|const
name|QString
name|textAttribute
decl_stmt|;
specifier|const
name|QString
name|currentIndexProperty
decl_stmt|;
specifier|const
name|QString
name|toolBarAreaAttribute
decl_stmt|;
specifier|const
name|QString
name|toolBarBreakAttribute
decl_stmt|;
specifier|const
name|QString
name|dockWidgetAreaAttribute
decl_stmt|;
specifier|const
name|QString
name|marginProperty
decl_stmt|;
specifier|const
name|QString
name|spacingProperty
decl_stmt|;
specifier|const
name|QString
name|leftMarginProperty
decl_stmt|;
specifier|const
name|QString
name|topMarginProperty
decl_stmt|;
specifier|const
name|QString
name|rightMarginProperty
decl_stmt|;
specifier|const
name|QString
name|bottomMarginProperty
decl_stmt|;
specifier|const
name|QString
name|horizontalSpacingProperty
decl_stmt|;
specifier|const
name|QString
name|verticalSpacingProperty
decl_stmt|;
specifier|const
name|QString
name|sizeHintProperty
decl_stmt|;
specifier|const
name|QString
name|sizeTypeProperty
decl_stmt|;
specifier|const
name|QString
name|orientationProperty
decl_stmt|;
specifier|const
name|QString
name|styleSheetProperty
decl_stmt|;
specifier|const
name|QString
name|qtHorizontal
decl_stmt|;
specifier|const
name|QString
name|qtVertical
decl_stmt|;
specifier|const
name|QString
name|currentRowProperty
decl_stmt|;
specifier|const
name|QString
name|tabSpacingProperty
decl_stmt|;
specifier|const
name|QString
name|qWidgetClass
decl_stmt|;
specifier|const
name|QString
name|lineClass
decl_stmt|;
specifier|const
name|QString
name|geometryProperty
decl_stmt|;
specifier|const
name|QString
name|scriptWidgetVariable
decl_stmt|;
specifier|const
name|QString
name|scriptChildWidgetsVariable
decl_stmt|;
typedef|typedef
name|QPair
operator|<
name|Qt
operator|::
name|ItemDataRole
operator|,
name|QString
operator|>
name|RoleNName
expr_stmt|;
name|QList
operator|<
name|RoleNName
operator|>
name|itemRoles
expr_stmt|;
name|QHash
operator|<
name|QString
operator|,
name|Qt
operator|::
name|ItemDataRole
operator|>
name|treeItemRoleHash
expr_stmt|;
comment|// first.first is primary role, first.second is shadow role.
comment|// Shadow is used for either the translation source or the designer
comment|// representation of the string value.
typedef|typedef
name|QPair
operator|<
name|QPair
operator|<
name|Qt
operator|::
name|ItemDataRole
operator|,
name|Qt
operator|::
name|ItemDataRole
operator|>
operator|,
name|QString
operator|>
name|TextRoleNName
expr_stmt|;
name|QList
operator|<
name|TextRoleNName
operator|>
name|itemTextRoles
expr_stmt|;
name|QHash
operator|<
name|QString
operator|,
name|QPair
operator|<
name|Qt
operator|::
name|ItemDataRole
operator|,
name|Qt
operator|::
name|ItemDataRole
operator|>
expr|>
name|treeItemTextRoleHash
expr_stmt|;
block|}
struct|;
ifdef|#
directive|ifdef
name|QFORMINTERNAL_NAMESPACE
block|}
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// ABSTRACTFORMBUILDERPRIVATE_H
end_comment
end_unit
