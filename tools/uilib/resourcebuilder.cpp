begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the Qt Designer of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** No Commercial Usage ** This file contains pre-release code and may not be distributed. ** You may use this file in accordance with the terms and conditions ** contained in the Technology Preview License Agreement accompanying ** this package. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights.  These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** If you have questions regarding the use of this file, please contact ** Nokia at qt-info@nokia.com. ** ** ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"resourcebuilder_p.h"
end_include
begin_include
include|#
directive|include
file|"ui4_p.h"
end_include
begin_include
include|#
directive|include
file|<QtCore/QVariant>
end_include
begin_include
include|#
directive|include
file|<QtCore/QFileInfo>
end_include
begin_include
include|#
directive|include
file|<QtCore/QDir>
end_include
begin_include
include|#
directive|include
file|<QtCore/QDebug>
end_include
begin_include
include|#
directive|include
file|<QtGui/QPixmap>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/QIcon>
end_include
begin_macro
name|QT_BEGIN_NAMESPACE
end_macro
begin_ifdef
ifdef|#
directive|ifdef
name|QFORMINTERNAL_NAMESPACE
end_ifdef
begin_namespace
DECL|namespace|QFormInternal
namespace|namespace
name|QFormInternal
block|{
endif|#
directive|endif
DECL|enumerator|themeDebug
enum|enum
block|{
name|themeDebug
init|=
literal|0
block|}
enum|;
DECL|function|QResourceBuilder
name|QResourceBuilder
operator|::
name|QResourceBuilder
parameter_list|()
block|{  }
DECL|function|~QResourceBuilder
name|QResourceBuilder
operator|::
name|~
name|QResourceBuilder
parameter_list|()
block|{  }
DECL|function|iconStateFlags
name|int
name|QResourceBuilder
operator|::
name|iconStateFlags
parameter_list|(
specifier|const
name|DomResourceIcon
modifier|*
name|dpi
parameter_list|)
block|{
name|int
name|rc
init|=
literal|0
decl_stmt|;
if|if
condition|(
name|dpi
operator|->
name|hasElementNormalOff
argument_list|()
condition|)
name|rc
operator||=
name|NormalOff
expr_stmt|;
if|if
condition|(
name|dpi
operator|->
name|hasElementNormalOn
argument_list|()
condition|)
name|rc
operator||=
name|NormalOn
expr_stmt|;
if|if
condition|(
name|dpi
operator|->
name|hasElementDisabledOff
argument_list|()
condition|)
name|rc
operator||=
name|DisabledOff
expr_stmt|;
if|if
condition|(
name|dpi
operator|->
name|hasElementDisabledOn
argument_list|()
condition|)
name|rc
operator||=
name|DisabledOn
expr_stmt|;
if|if
condition|(
name|dpi
operator|->
name|hasElementActiveOff
argument_list|()
condition|)
name|rc
operator||=
name|ActiveOff
expr_stmt|;
if|if
condition|(
name|dpi
operator|->
name|hasElementActiveOn
argument_list|()
condition|)
name|rc
operator||=
name|ActiveOn
expr_stmt|;
if|if
condition|(
name|dpi
operator|->
name|hasElementSelectedOff
argument_list|()
condition|)
name|rc
operator||=
name|SelectedOff
expr_stmt|;
if|if
condition|(
name|dpi
operator|->
name|hasElementSelectedOn
argument_list|()
condition|)
name|rc
operator||=
name|SelectedOn
expr_stmt|;
return|return
name|rc
return|;
block|}
DECL|function|loadResource
name|QVariant
name|QResourceBuilder
operator|::
name|loadResource
parameter_list|(
specifier|const
name|QDir
modifier|&
name|workingDirectory
parameter_list|,
specifier|const
name|DomProperty
modifier|*
name|property
parameter_list|)
specifier|const
block|{
switch|switch
condition|(
name|property
operator|->
name|kind
argument_list|()
condition|)
block|{
case|case
name|DomProperty
operator|::
name|Pixmap
case|:
block|{
specifier|const
name|DomResourcePixmap
modifier|*
name|dpx
init|=
name|property
operator|->
name|elementPixmap
argument_list|()
decl_stmt|;
name|QPixmap
name|pixmap
argument_list|(
name|QFileInfo
argument_list|(
name|workingDirectory
argument_list|,
name|dpx
operator|->
name|text
argument_list|()
argument_list|)
operator|.
name|absoluteFilePath
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|QVariant
operator|::
name|fromValue
argument_list|(
name|pixmap
argument_list|)
return|;
block|}
case|case
name|DomProperty
operator|::
name|IconSet
case|:
block|{
specifier|const
name|DomResourceIcon
modifier|*
name|dpi
init|=
name|property
operator|->
name|elementIconSet
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|dpi
operator|->
name|attributeTheme
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
specifier|const
name|QString
name|theme
init|=
name|dpi
operator|->
name|attributeTheme
argument_list|()
decl_stmt|;
specifier|const
name|bool
name|known
init|=
name|QIcon
operator|::
name|hasThemeIcon
argument_list|(
name|theme
argument_list|)
decl_stmt|;
if|if
condition|(
name|themeDebug
condition|)
name|qDebug
argument_list|(
literal|"Theme %s known %d"
argument_list|,
name|qPrintable
argument_list|(
name|theme
argument_list|)
argument_list|,
name|known
argument_list|)
expr_stmt|;
if|if
condition|(
name|known
condition|)
return|return
name|qVariantFromValue
argument_list|(
name|QIcon
operator|::
name|fromTheme
argument_list|(
name|dpi
operator|->
name|attributeTheme
argument_list|()
argument_list|)
argument_list|)
return|;
block|}
comment|// non-empty theme
if|if
condition|(
specifier|const
name|int
name|flags
init|=
name|iconStateFlags
argument_list|(
name|dpi
argument_list|)
condition|)
block|{
comment|// new, post 4.4 format
name|QIcon
name|icon
decl_stmt|;
if|if
condition|(
name|flags
operator|&
name|NormalOff
condition|)
name|icon
operator|.
name|addFile
argument_list|(
name|QFileInfo
argument_list|(
name|workingDirectory
argument_list|,
name|dpi
operator|->
name|elementNormalOff
argument_list|()
operator|->
name|text
argument_list|()
argument_list|)
operator|.
name|absoluteFilePath
argument_list|()
argument_list|,
name|QSize
argument_list|()
argument_list|,
name|QIcon
operator|::
name|Normal
argument_list|,
name|QIcon
operator|::
name|Off
argument_list|)
expr_stmt|;
if|if
condition|(
name|flags
operator|&
name|NormalOn
condition|)
name|icon
operator|.
name|addFile
argument_list|(
name|QFileInfo
argument_list|(
name|workingDirectory
argument_list|,
name|dpi
operator|->
name|elementNormalOn
argument_list|()
operator|->
name|text
argument_list|()
argument_list|)
operator|.
name|absoluteFilePath
argument_list|()
argument_list|,
name|QSize
argument_list|()
argument_list|,
name|QIcon
operator|::
name|Normal
argument_list|,
name|QIcon
operator|::
name|On
argument_list|)
expr_stmt|;
if|if
condition|(
name|flags
operator|&
name|DisabledOff
condition|)
name|icon
operator|.
name|addFile
argument_list|(
name|QFileInfo
argument_list|(
name|workingDirectory
argument_list|,
name|dpi
operator|->
name|elementDisabledOff
argument_list|()
operator|->
name|text
argument_list|()
argument_list|)
operator|.
name|absoluteFilePath
argument_list|()
argument_list|,
name|QSize
argument_list|()
argument_list|,
name|QIcon
operator|::
name|Disabled
argument_list|,
name|QIcon
operator|::
name|Off
argument_list|)
expr_stmt|;
if|if
condition|(
name|flags
operator|&
name|DisabledOn
condition|)
name|icon
operator|.
name|addFile
argument_list|(
name|QFileInfo
argument_list|(
name|workingDirectory
argument_list|,
name|dpi
operator|->
name|elementDisabledOn
argument_list|()
operator|->
name|text
argument_list|()
argument_list|)
operator|.
name|absoluteFilePath
argument_list|()
argument_list|,
name|QSize
argument_list|()
argument_list|,
name|QIcon
operator|::
name|Disabled
argument_list|,
name|QIcon
operator|::
name|On
argument_list|)
expr_stmt|;
if|if
condition|(
name|flags
operator|&
name|ActiveOff
condition|)
name|icon
operator|.
name|addFile
argument_list|(
name|QFileInfo
argument_list|(
name|workingDirectory
argument_list|,
name|dpi
operator|->
name|elementActiveOff
argument_list|()
operator|->
name|text
argument_list|()
argument_list|)
operator|.
name|absoluteFilePath
argument_list|()
argument_list|,
name|QSize
argument_list|()
argument_list|,
name|QIcon
operator|::
name|Active
argument_list|,
name|QIcon
operator|::
name|Off
argument_list|)
expr_stmt|;
if|if
condition|(
name|flags
operator|&
name|ActiveOn
condition|)
name|icon
operator|.
name|addFile
argument_list|(
name|QFileInfo
argument_list|(
name|workingDirectory
argument_list|,
name|dpi
operator|->
name|elementActiveOn
argument_list|()
operator|->
name|text
argument_list|()
argument_list|)
operator|.
name|absoluteFilePath
argument_list|()
argument_list|,
name|QSize
argument_list|()
argument_list|,
name|QIcon
operator|::
name|Active
argument_list|,
name|QIcon
operator|::
name|On
argument_list|)
expr_stmt|;
if|if
condition|(
name|flags
operator|&
name|SelectedOff
condition|)
name|icon
operator|.
name|addFile
argument_list|(
name|QFileInfo
argument_list|(
name|workingDirectory
argument_list|,
name|dpi
operator|->
name|elementSelectedOff
argument_list|()
operator|->
name|text
argument_list|()
argument_list|)
operator|.
name|absoluteFilePath
argument_list|()
argument_list|,
name|QSize
argument_list|()
argument_list|,
name|QIcon
operator|::
name|Selected
argument_list|,
name|QIcon
operator|::
name|Off
argument_list|)
expr_stmt|;
if|if
condition|(
name|flags
operator|&
name|SelectedOn
condition|)
name|icon
operator|.
name|addFile
argument_list|(
name|QFileInfo
argument_list|(
name|workingDirectory
argument_list|,
name|dpi
operator|->
name|elementSelectedOn
argument_list|()
operator|->
name|text
argument_list|()
argument_list|)
operator|.
name|absoluteFilePath
argument_list|()
argument_list|,
name|QSize
argument_list|()
argument_list|,
name|QIcon
operator|::
name|Selected
argument_list|,
name|QIcon
operator|::
name|On
argument_list|)
expr_stmt|;
return|return
name|QVariant
operator|::
name|fromValue
argument_list|(
name|icon
argument_list|)
return|;
block|}
else|else
block|{
comment|// 4.3 legacy
specifier|const
name|QIcon
name|icon
argument_list|(
name|QFileInfo
argument_list|(
name|workingDirectory
argument_list|,
name|dpi
operator|->
name|text
argument_list|()
argument_list|)
operator|.
name|absoluteFilePath
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|QVariant
operator|::
name|fromValue
argument_list|(
name|icon
argument_list|)
return|;
block|}
block|}
break|break;
default|default:
break|break;
block|}
return|return
name|QVariant
argument_list|()
return|;
block|}
DECL|function|toNativeValue
name|QVariant
name|QResourceBuilder
operator|::
name|toNativeValue
parameter_list|(
specifier|const
name|QVariant
modifier|&
name|value
parameter_list|)
specifier|const
block|{
return|return
name|value
return|;
block|}
DECL|function|saveResource
name|DomProperty
modifier|*
name|QResourceBuilder
operator|::
name|saveResource
parameter_list|(
specifier|const
name|QDir
modifier|&
name|workingDirectory
parameter_list|,
specifier|const
name|QVariant
modifier|&
name|value
parameter_list|)
specifier|const
block|{
name|Q_UNUSED
argument_list|(
argument|workingDirectory
argument_list|)
name|Q_UNUSED
argument_list|(
argument|value
argument_list|)
return|return
literal|0
return|;
block|}
DECL|function|isResourceProperty
name|bool
name|QResourceBuilder
operator|::
name|isResourceProperty
parameter_list|(
specifier|const
name|DomProperty
modifier|*
name|p
parameter_list|)
specifier|const
block|{
switch|switch
condition|(
name|p
operator|->
name|kind
argument_list|()
condition|)
block|{
case|case
name|DomProperty
operator|::
name|Pixmap
case|:
case|case
name|DomProperty
operator|::
name|IconSet
case|:
return|return
literal|true
return|;
default|default:
break|break;
block|}
return|return
literal|false
return|;
block|}
DECL|function|isResourceType
name|bool
name|QResourceBuilder
operator|::
name|isResourceType
parameter_list|(
specifier|const
name|QVariant
modifier|&
name|value
parameter_list|)
specifier|const
block|{
switch|switch
condition|(
name|value
operator|.
name|type
argument_list|()
condition|)
block|{
case|case
name|QVariant
operator|::
name|Pixmap
case|:
case|case
name|QVariant
operator|::
name|Icon
case|:
return|return
literal|true
return|;
default|default:
break|break;
block|}
return|return
literal|false
return|;
block|}
ifdef|#
directive|ifdef
name|QFORMINTERNAL_NAMESPACE
block|}
end_namespace
begin_comment
comment|// namespace QFormInternal
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_macro
name|QT_END_NAMESPACE
end_macro
end_unit
