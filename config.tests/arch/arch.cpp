begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** Copyright (C) 2012 Intel Corporation ** Contact: http://www.qt-project.org/ ** ** This file is part of the FOO module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_define
DECL|macro|QGLOBAL_H
define|#
directive|define
name|QGLOBAL_H
end_define
begin_include
include|#
directive|include
file|"../../src/corelib/global/qprocessordetection.h"
end_include
begin_include
include|#
directive|include
file|<stdio.h>
end_include
begin_decl_stmt
specifier|extern
specifier|const
name|char
name|msg
index|[]
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|msg
specifier|const
name|char
name|msg
index|[]
init|=
literal|"==Qt=magic=Qt== Architecture:"
if|#
directive|if
name|defined
argument_list|(
name|Q_PROCESSOR_ALPHA
argument_list|)
literal|"alpha"
elif|#
directive|elif
name|defined
argument_list|(
name|Q_PROCESSOR_ARM
argument_list|)
literal|"arm"
elif|#
directive|elif
name|defined
argument_list|(
name|Q_PROCESSOR_AVR32
argument_list|)
literal|"avr32"
elif|#
directive|elif
name|defined
argument_list|(
name|Q_PROCESSOR_BLACKFIN
argument_list|)
literal|"bfin"
elif|#
directive|elif
name|defined
argument_list|(
name|Q_PROCESSOR_X86_32
argument_list|)
literal|"i386"
elif|#
directive|elif
name|defined
argument_list|(
name|Q_PROCESSOR_X86_64
argument_list|)
literal|"x86_64"
elif|#
directive|elif
name|defined
argument_list|(
name|Q_PROCESSOR_IA64
argument_list|)
literal|"ia64"
elif|#
directive|elif
name|defined
argument_list|(
name|Q_PROCESSOR_MIPS
argument_list|)
literal|"mips"
elif|#
directive|elif
name|defined
argument_list|(
name|Q_PROCESSOR_POWER
argument_list|)
literal|"power"
elif|#
directive|elif
name|defined
argument_list|(
name|Q_PROCESSOR_S390
argument_list|)
literal|"s390"
elif|#
directive|elif
name|defined
argument_list|(
name|Q_PROCESSOR_SH
argument_list|)
literal|"sh"
elif|#
directive|elif
name|defined
argument_list|(
name|Q_PROCESSOR_SPARC
argument_list|)
literal|"sparc"
else|#
directive|else
literal|"unknown"
endif|#
directive|endif
decl_stmt|;
end_decl_stmt
begin_function
DECL|function|main
name|int
name|main
parameter_list|()
block|{
name|puts
argument_list|(
name|msg
argument_list|)
expr_stmt|;
block|}
end_function
end_unit
