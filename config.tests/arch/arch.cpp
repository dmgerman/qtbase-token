begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/ ** ** This file is part of the FOO module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_comment
comment|// NOTE: This file is not meant to be compiled, only preprocessed.
end_comment
begin_define
DECL|macro|QGLOBAL_H
define|#
directive|define
name|QGLOBAL_H
end_define
begin_include
include|#
directive|include
file|"../../src/corelib/global/qprocessordetection.h"
end_include
begin_undef
DECL|macro|alpha
undef|#
directive|undef
name|alpha
end_undef
begin_undef
DECL|macro|arm
undef|#
directive|undef
name|arm
end_undef
begin_undef
DECL|macro|avr32
undef|#
directive|undef
name|avr32
end_undef
begin_undef
DECL|macro|bfin
undef|#
directive|undef
name|bfin
end_undef
begin_undef
DECL|macro|i386
undef|#
directive|undef
name|i386
end_undef
begin_undef
DECL|macro|x86_64
undef|#
directive|undef
name|x86_64
end_undef
begin_undef
DECL|macro|ia64
undef|#
directive|undef
name|ia64
end_undef
begin_undef
DECL|macro|mips
undef|#
directive|undef
name|mips
end_undef
begin_undef
DECL|macro|power
undef|#
directive|undef
name|power
end_undef
begin_undef
DECL|macro|s390
undef|#
directive|undef
name|s390
end_undef
begin_undef
DECL|macro|sh
undef|#
directive|undef
name|sh
end_undef
begin_undef
DECL|macro|sparc
undef|#
directive|undef
name|sparc
end_undef
begin_undef
DECL|macro|unknown
undef|#
directive|undef
name|unknown
end_undef
begin_if
if|#
directive|if
name|defined
argument_list|(
name|Q_PROCESSOR_ALPHA
argument_list|)
end_if
begin_label
name|Architecture
label|:
end_label
begin_decl_stmt
name|alpha
elif|#
directive|elif
name|defined
argument_list|(
name|Q_PROCESSOR_ARM
argument_list|)
name|Architecture
range|:
name|arm
elif|#
directive|elif
name|defined
argument_list|(
name|Q_PROCESSOR_AVR32
argument_list|)
name|Architecture
operator|:
name|avr32
elif|#
directive|elif
name|defined
argument_list|(
name|Q_PROCESSOR_BLACKFIN
argument_list|)
name|Architecture
operator|:
name|bfin
elif|#
directive|elif
name|defined
argument_list|(
name|Q_PROCESSOR_X86_32
argument_list|)
name|Architecture
operator|:
name|i386
elif|#
directive|elif
name|defined
argument_list|(
name|Q_PROCESSOR_X86_64
argument_list|)
name|Architecture
operator|:
name|x86_64
elif|#
directive|elif
name|defined
argument_list|(
name|Q_PROCESSOR_IA64
argument_list|)
name|Architecture
operator|:
name|ia64
elif|#
directive|elif
name|defined
argument_list|(
name|Q_PROCESSOR_MIPS
argument_list|)
name|Architecture
operator|:
name|mips
elif|#
directive|elif
name|defined
argument_list|(
name|Q_PROCESSOR_POWER
argument_list|)
name|Architecture
operator|:
name|power
elif|#
directive|elif
name|defined
argument_list|(
name|Q_PROCESSOR_S390
argument_list|)
name|Architecture
operator|:
name|s390
elif|#
directive|elif
name|defined
argument_list|(
name|Q_PROCESSOR_SH
argument_list|)
name|Architecture
operator|:
name|sh
elif|#
directive|elif
name|defined
argument_list|(
name|Q_PROCESSOR_SPARC
argument_list|)
name|Architecture
operator|:
name|sparc
else|#
directive|else
name|Architecture
operator|:
name|unknown
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
end_unit
