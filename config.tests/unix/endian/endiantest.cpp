begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: http://www.qt-project.org/ ** ** This file is part of the config.tests of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_comment
comment|// "MostSignificantByteFirst"
end_comment
begin_decl_stmt
DECL|variable|msb_bigendian
name|short
name|msb_bigendian
index|[]
init|=
block|{
literal|0x0000
block|,
literal|0x4d6f
block|,
literal|0x7374
block|,
literal|0x5369
block|,
literal|0x676e
block|,
literal|0x6966
block|,
literal|0x6963
block|,
literal|0x616e
block|,
literal|0x7442
block|,
literal|0x7974
block|,
literal|0x6546
block|,
literal|0x6972
block|,
literal|0x7374
block|,
literal|0x0000
block|}
decl_stmt|;
end_decl_stmt
begin_comment
comment|// "LeastSignificantByteFirst"
end_comment
begin_decl_stmt
DECL|variable|lsb_littleendian
name|short
name|lsb_littleendian
index|[]
init|=
block|{
literal|0x0000
block|,
literal|0x654c
block|,
literal|0x7361
block|,
literal|0x5374
block|,
literal|0x6769
block|,
literal|0x696e
block|,
literal|0x6966
block|,
literal|0x6163
block|,
literal|0x746e
block|,
literal|0x7942
block|,
literal|0x6574
block|,
literal|0x6946
block|,
literal|0x7372
block|,
literal|0x0074
block|,
literal|0x0000
block|}
decl_stmt|;
end_decl_stmt
begin_function
DECL|function|main
name|int
name|main
parameter_list|(
name|int
parameter_list|,
name|char
modifier|*
modifier|*
parameter_list|)
block|{
comment|// make sure the linker doesn't throw away the arrays
name|void
function_decl|(
modifier|*
name|msb_bigendian_string
function_decl|)
parameter_list|()
init|=
operator|(
name|void
argument_list|(
operator|*
argument_list|)
operator|(
operator|)
operator|)
name|msb_bigendian
function_decl|;
name|void
function_decl|(
modifier|*
name|lsb_littleendian_string
function_decl|)
parameter_list|()
init|=
operator|(
name|void
argument_list|(
operator|*
argument_list|)
operator|(
operator|)
operator|)
name|lsb_littleendian
function_decl|;
operator|(
name|void
operator|)
name|msb_bigendian_string
argument_list|()
expr_stmt|;
operator|(
name|void
operator|)
name|lsb_littleendian_string
argument_list|()
expr_stmt|;
return|return
name|msb_bigendian
index|[
literal|1
index|]
operator|==
name|lsb_littleendian
index|[
literal|1
index|]
return|;
block|}
end_function
end_unit
