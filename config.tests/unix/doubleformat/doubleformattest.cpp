begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: http://www.qt-project.org/ ** ** This file is part of the config.tests of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_comment
comment|/*  LE: strings | grep 0123ABCD0123ABCD BE: strings | grep DCBA3210DCBA3210  LE arm-swapped-dword-order: strings | grep ABCD0123ABCD0123 BE arm-swapped-dword-order: strings | grep 3210DCBA3210DCBA (untested)  tested on x86, arm-le (gp), aix  */
end_comment
begin_include
include|#
directive|include
file|<stdlib.h>
end_include
begin_comment
comment|// equals static char c [] = "0123ABCD0123ABCD\0\0\0\0\0\0\0"
end_comment
begin_decl_stmt
DECL|variable|d
specifier|static
name|double
name|d
index|[]
init|=
block|{
literal|710524581542275055616.0
block|,
literal|710524581542275055616.0
block|,
literal|0.0
block|}
decl_stmt|;
end_decl_stmt
begin_function
DECL|function|main
name|int
name|main
parameter_list|(
name|int
name|argc
parameter_list|,
name|char
modifier|*
modifier|*
name|argv
parameter_list|)
block|{
comment|// make sure the linker doesn't throw away the arrays
name|double
modifier|*
name|d2
init|=
operator|(
name|double
operator|*
operator|)
name|d
decl_stmt|;
if|if
condition|(
name|argc
operator|>
literal|3
condition|)
name|d
index|[
literal|1
index|]
operator|+=
literal|1
expr_stmt|;
return|return
name|d2
index|[
literal|0
index|]
operator|+
name|d
index|[
literal|2
index|]
operator|+
name|atof
argument_list|(
name|argv
index|[
literal|1
index|]
argument_list|)
return|;
block|}
end_function
end_unit
