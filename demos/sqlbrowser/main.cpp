begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the demonstration applications of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** No Commercial Usage ** This file contains pre-release code and may not be distributed. ** You may use this file in accordance with the terms and conditions ** contained in the Technology Preview License Agreement accompanying ** this package. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights.  These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** If you have questions regarding the use of this file, please contact ** Nokia at qt-info@nokia.com. ** ** ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"browser.h"
end_include
begin_include
include|#
directive|include
file|<QtCore>
end_include
begin_include
include|#
directive|include
file|<QtWidgets>
end_include
begin_include
include|#
directive|include
file|<QtSql>
end_include
begin_function
DECL|function|addConnectionsFromCommandline
name|void
name|addConnectionsFromCommandline
parameter_list|(
specifier|const
name|QStringList
modifier|&
name|args
parameter_list|,
name|Browser
modifier|*
name|browser
parameter_list|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
name|args
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|QUrl
name|url
argument_list|(
name|args
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|,
name|QUrl
operator|::
name|TolerantMode
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|url
operator|.
name|isValid
argument_list|()
condition|)
block|{
name|qWarning
argument_list|(
literal|"Invalid URL: %s"
argument_list|,
name|qPrintable
argument_list|(
name|args
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
continue|continue;
block|}
name|QSqlError
name|err
init|=
name|browser
operator|->
name|addConnection
argument_list|(
name|url
operator|.
name|scheme
argument_list|()
argument_list|,
name|url
operator|.
name|path
argument_list|()
operator|.
name|mid
argument_list|(
literal|1
argument_list|)
argument_list|,
name|url
operator|.
name|host
argument_list|()
argument_list|,
name|url
operator|.
name|userName
argument_list|()
argument_list|,
name|url
operator|.
name|password
argument_list|()
argument_list|,
name|url
operator|.
name|port
argument_list|(
operator|-
literal|1
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|err
operator|.
name|type
argument_list|()
operator|!=
name|QSqlError
operator|::
name|NoError
condition|)
name|qDebug
argument_list|()
operator|<<
literal|"Unable to open connection:"
operator|<<
name|err
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|main
name|int
name|main
parameter_list|(
name|int
name|argc
parameter_list|,
name|char
modifier|*
name|argv
index|[]
parameter_list|)
block|{
name|QApplication
name|app
argument_list|(
name|argc
argument_list|,
name|argv
argument_list|)
decl_stmt|;
name|QMainWindow
name|mainWin
decl_stmt|;
name|mainWin
operator|.
name|setWindowTitle
argument_list|(
name|QObject
operator|::
name|tr
argument_list|(
literal|"Qt SQL Browser"
argument_list|)
argument_list|)
expr_stmt|;
name|Browser
name|browser
argument_list|(
operator|&
name|mainWin
argument_list|)
decl_stmt|;
name|mainWin
operator|.
name|setCentralWidget
argument_list|(
operator|&
name|browser
argument_list|)
expr_stmt|;
name|QMenu
modifier|*
name|fileMenu
init|=
name|mainWin
operator|.
name|menuBar
argument_list|()
operator|->
name|addMenu
argument_list|(
name|QObject
operator|::
name|tr
argument_list|(
literal|"&File"
argument_list|)
argument_list|)
decl_stmt|;
name|fileMenu
operator|->
name|addAction
argument_list|(
name|QObject
operator|::
name|tr
argument_list|(
literal|"Add&Connection..."
argument_list|)
argument_list|,
operator|&
name|browser
argument_list|,
name|SLOT
argument_list|(
name|addConnection
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|fileMenu
operator|->
name|addSeparator
argument_list|()
expr_stmt|;
name|fileMenu
operator|->
name|addAction
argument_list|(
name|QObject
operator|::
name|tr
argument_list|(
literal|"&Quit"
argument_list|)
argument_list|,
operator|&
name|app
argument_list|,
name|SLOT
argument_list|(
name|quit
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QMenu
modifier|*
name|helpMenu
init|=
name|mainWin
operator|.
name|menuBar
argument_list|()
operator|->
name|addMenu
argument_list|(
name|QObject
operator|::
name|tr
argument_list|(
literal|"&Help"
argument_list|)
argument_list|)
decl_stmt|;
name|helpMenu
operator|->
name|addAction
argument_list|(
name|QObject
operator|::
name|tr
argument_list|(
literal|"About"
argument_list|)
argument_list|,
operator|&
name|browser
argument_list|,
name|SLOT
argument_list|(
name|about
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|helpMenu
operator|->
name|addAction
argument_list|(
name|QObject
operator|::
name|tr
argument_list|(
literal|"About Qt"
argument_list|)
argument_list|,
name|qApp
argument_list|,
name|SLOT
argument_list|(
name|aboutQt
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
operator|&
name|browser
argument_list|,
name|SIGNAL
argument_list|(
name|statusMessage
argument_list|(
name|QString
argument_list|)
argument_list|)
argument_list|,
name|mainWin
operator|.
name|statusBar
argument_list|()
argument_list|,
name|SLOT
argument_list|(
name|showMessage
argument_list|(
name|QString
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|addConnectionsFromCommandline
argument_list|(
name|app
operator|.
name|arguments
argument_list|()
argument_list|,
operator|&
name|browser
argument_list|)
expr_stmt|;
name|mainWin
operator|.
name|show
argument_list|()
expr_stmt|;
if|if
condition|(
name|QSqlDatabase
operator|::
name|connectionNames
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|browser
argument_list|,
literal|"addConnection"
argument_list|,
name|Qt
operator|::
name|QueuedConnection
argument_list|)
expr_stmt|;
return|return
name|app
operator|.
name|exec
argument_list|()
return|;
block|}
end_function
end_unit
