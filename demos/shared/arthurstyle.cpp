begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the demonstration applications of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"arthurstyle.h"
end_include
begin_include
include|#
directive|include
file|"arthurwidgets.h"
end_include
begin_include
include|#
directive|include
file|<QLayout>
end_include
begin_include
include|#
directive|include
file|<QPainter>
end_include
begin_include
include|#
directive|include
file|<QPainterPath>
end_include
begin_include
include|#
directive|include
file|<QPixmapCache>
end_include
begin_include
include|#
directive|include
file|<QRadioButton>
end_include
begin_include
include|#
directive|include
file|<QString>
end_include
begin_include
include|#
directive|include
file|<QStyleOption>
end_include
begin_include
include|#
directive|include
file|<QtDebug>
end_include
begin_function
DECL|function|cached
name|QPixmap
name|cached
parameter_list|(
specifier|const
name|QString
modifier|&
name|img
parameter_list|)
block|{
if|if
condition|(
name|QPixmap
modifier|*
name|p
init|=
name|QPixmapCache
operator|::
name|find
argument_list|(
name|img
argument_list|)
condition|)
return|return
operator|*
name|p
return|;
name|QPixmap
name|pm
decl_stmt|;
name|pm
operator|=
name|QPixmap
operator|::
name|fromImage
argument_list|(
name|QImage
argument_list|(
name|img
argument_list|)
argument_list|,
name|Qt
operator|::
name|OrderedDither
operator||
name|Qt
operator|::
name|OrderedAlphaDither
argument_list|)
expr_stmt|;
if|if
condition|(
name|pm
operator|.
name|isNull
argument_list|()
condition|)
return|return
name|QPixmap
argument_list|()
return|;
name|QPixmapCache
operator|::
name|insert
argument_list|(
name|img
argument_list|,
name|pm
argument_list|)
expr_stmt|;
return|return
name|pm
return|;
block|}
end_function
begin_constructor
DECL|function|ArthurStyle
name|ArthurStyle
operator|::
name|ArthurStyle
parameter_list|()
member_init_list|:
name|QWindowsStyle
argument_list|()
block|{
name|Q_INIT_RESOURCE
argument_list|(
name|shared
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_function
DECL|function|drawHoverRect
name|void
name|ArthurStyle
operator|::
name|drawHoverRect
parameter_list|(
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QRect
modifier|&
name|r
parameter_list|)
specifier|const
block|{
name|qreal
name|h
init|=
name|r
operator|.
name|height
argument_list|()
decl_stmt|;
name|qreal
name|h2
init|=
name|r
operator|.
name|height
argument_list|()
operator|/
name|qreal
argument_list|(
literal|2
argument_list|)
decl_stmt|;
name|QPainterPath
name|path
decl_stmt|;
name|path
operator|.
name|addRect
argument_list|(
name|r
operator|.
name|x
argument_list|()
operator|+
name|h2
argument_list|,
name|r
operator|.
name|y
argument_list|()
operator|+
literal|0
argument_list|,
name|r
operator|.
name|width
argument_list|()
operator|-
name|h2
operator|*
literal|2
argument_list|,
name|r
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
name|path
operator|.
name|addEllipse
argument_list|(
name|r
operator|.
name|x
argument_list|()
argument_list|,
name|r
operator|.
name|y
argument_list|()
argument_list|,
name|h
argument_list|,
name|h
argument_list|)
expr_stmt|;
name|path
operator|.
name|addEllipse
argument_list|(
name|r
operator|.
name|x
argument_list|()
operator|+
name|r
operator|.
name|width
argument_list|()
operator|-
name|h
argument_list|,
name|r
operator|.
name|y
argument_list|()
argument_list|,
name|h
argument_list|,
name|h
argument_list|)
expr_stmt|;
name|path
operator|.
name|setFillRule
argument_list|(
name|Qt
operator|::
name|WindingFill
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|QColor
argument_list|(
literal|191
argument_list|,
literal|215
argument_list|,
literal|191
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPath
argument_list|(
name|path
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|drawPrimitive
name|void
name|ArthurStyle
operator|::
name|drawPrimitive
parameter_list|(
name|PrimitiveElement
name|element
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|option
parameter_list|,
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
name|Q_ASSERT
argument_list|(
name|option
argument_list|)
expr_stmt|;
switch|switch
condition|(
name|element
condition|)
block|{
case|case
name|PE_FrameFocusRect
case|:
break|break;
case|case
name|PE_IndicatorRadioButton
case|:
if|if
condition|(
specifier|const
name|QStyleOptionButton
modifier|*
name|button
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionButton
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|bool
name|hover
init|=
operator|(
name|button
operator|->
name|state
operator|&
name|State_Enabled
operator|)
operator|&&
operator|(
name|button
operator|->
name|state
operator|&
name|State_MouseOver
operator|)
decl_stmt|;
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
name|QPixmap
name|radio
decl_stmt|;
if|if
condition|(
name|hover
condition|)
name|drawHoverRect
argument_list|(
name|painter
argument_list|,
name|widget
operator|->
name|rect
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|button
operator|->
name|state
operator|&
name|State_Sunken
condition|)
name|radio
operator|=
name|cached
argument_list|(
literal|":res/images/radiobutton-on.png"
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|button
operator|->
name|state
operator|&
name|State_On
condition|)
name|radio
operator|=
name|cached
argument_list|(
literal|":res/images/radiobutton_on.png"
argument_list|)
expr_stmt|;
else|else
name|radio
operator|=
name|cached
argument_list|(
literal|":res/images/radiobutton_off.png"
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPixmap
argument_list|(
name|button
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|radio
argument_list|)
expr_stmt|;
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
break|break;
case|case
name|PE_PanelButtonCommand
case|:
if|if
condition|(
specifier|const
name|QStyleOptionButton
modifier|*
name|button
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionButton
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|bool
name|hover
init|=
operator|(
name|button
operator|->
name|state
operator|&
name|State_Enabled
operator|)
operator|&&
operator|(
name|button
operator|->
name|state
operator|&
name|State_MouseOver
operator|)
decl_stmt|;
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
specifier|const
name|QPushButton
modifier|*
name|pushButton
init|=
name|qobject_cast
argument_list|<
specifier|const
name|QPushButton
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
decl_stmt|;
name|Q_ASSERT
argument_list|(
name|pushButton
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|parent
init|=
name|pushButton
operator|->
name|parentWidget
argument_list|()
decl_stmt|;
if|if
condition|(
name|parent
operator|&&
name|qobject_cast
argument_list|<
name|QGroupBox
operator|*
argument_list|>
argument_list|(
name|parent
argument_list|)
condition|)
block|{
name|QLinearGradient
name|lg
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|parent
operator|->
name|height
argument_list|()
argument_list|)
decl_stmt|;
name|lg
operator|.
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|QColor
argument_list|(
literal|224
argument_list|,
literal|224
argument_list|,
literal|224
argument_list|)
argument_list|)
expr_stmt|;
name|lg
operator|.
name|setColorAt
argument_list|(
literal|1
argument_list|,
name|QColor
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|lg
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrushOrigin
argument_list|(
operator|-
name|widget
operator|->
name|mapToParent
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|button
operator|->
name|rect
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrushOrigin
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
name|bool
name|down
init|=
operator|(
name|button
operator|->
name|state
operator|&
name|State_Sunken
operator|)
operator|||
operator|(
name|button
operator|->
name|state
operator|&
name|State_On
operator|)
decl_stmt|;
name|QPixmap
name|left
decl_stmt|,
name|right
decl_stmt|,
name|mid
decl_stmt|;
if|if
condition|(
name|down
condition|)
block|{
name|left
operator|=
name|cached
argument_list|(
literal|":res/images/button_pressed_cap_left.png"
argument_list|)
expr_stmt|;
name|right
operator|=
name|cached
argument_list|(
literal|":res/images/button_pressed_cap_right.png"
argument_list|)
expr_stmt|;
name|mid
operator|=
name|cached
argument_list|(
literal|":res/images/button_pressed_stretch.png"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|left
operator|=
name|cached
argument_list|(
literal|":res/images/button_normal_cap_left.png"
argument_list|)
expr_stmt|;
name|right
operator|=
name|cached
argument_list|(
literal|":res/images/button_normal_cap_right.png"
argument_list|)
expr_stmt|;
name|mid
operator|=
name|cached
argument_list|(
literal|":res/images/button_normal_stretch.png"
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|drawPixmap
argument_list|(
name|button
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|left
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawTiledPixmap
argument_list|(
name|QRect
argument_list|(
name|button
operator|->
name|rect
operator|.
name|x
argument_list|()
operator|+
name|left
operator|.
name|width
argument_list|()
argument_list|,
name|button
operator|->
name|rect
operator|.
name|y
argument_list|()
argument_list|,
name|button
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|-
name|left
operator|.
name|width
argument_list|()
operator|-
name|right
operator|.
name|width
argument_list|()
argument_list|,
name|left
operator|.
name|height
argument_list|()
argument_list|)
argument_list|,
name|mid
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPixmap
argument_list|(
name|button
operator|->
name|rect
operator|.
name|x
argument_list|()
operator|+
name|button
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|-
name|right
operator|.
name|width
argument_list|()
argument_list|,
name|button
operator|->
name|rect
operator|.
name|y
argument_list|()
argument_list|,
name|right
argument_list|)
expr_stmt|;
if|if
condition|(
name|hover
condition|)
name|painter
operator|->
name|fillRect
argument_list|(
name|widget
operator|->
name|rect
argument_list|()
operator|.
name|adjusted
argument_list|(
literal|3
argument_list|,
literal|5
argument_list|,
operator|-
literal|3
argument_list|,
operator|-
literal|5
argument_list|)
argument_list|,
name|QColor
argument_list|(
literal|31
argument_list|,
literal|127
argument_list|,
literal|31
argument_list|,
literal|63
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
break|break;
case|case
name|PE_FrameGroupBox
case|:
if|if
condition|(
specifier|const
name|QStyleOptionFrameV2
modifier|*
name|group
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionFrameV2
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
specifier|const
name|QRect
modifier|&
name|r
init|=
name|group
operator|->
name|rect
decl_stmt|;
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
name|int
name|radius
init|=
literal|14
decl_stmt|;
name|int
name|radius2
init|=
name|radius
operator|*
literal|2
decl_stmt|;
name|QPainterPath
name|clipPath
decl_stmt|;
name|clipPath
operator|.
name|moveTo
argument_list|(
name|radius
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|clipPath
operator|.
name|arcTo
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
name|radius2
argument_list|,
literal|0
argument_list|,
name|radius2
argument_list|,
name|radius2
argument_list|,
literal|90
argument_list|,
operator|-
literal|90
argument_list|)
expr_stmt|;
name|clipPath
operator|.
name|arcTo
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
name|radius2
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|-
name|radius2
argument_list|,
name|radius2
argument_list|,
name|radius2
argument_list|,
literal|0
argument_list|,
operator|-
literal|90
argument_list|)
expr_stmt|;
name|clipPath
operator|.
name|arcTo
argument_list|(
name|r
operator|.
name|left
argument_list|()
argument_list|,
name|r
operator|.
name|bottom
argument_list|()
operator|-
name|radius2
argument_list|,
name|radius2
argument_list|,
name|radius2
argument_list|,
literal|270
argument_list|,
operator|-
literal|90
argument_list|)
expr_stmt|;
name|clipPath
operator|.
name|arcTo
argument_list|(
name|r
operator|.
name|left
argument_list|()
argument_list|,
name|r
operator|.
name|top
argument_list|()
argument_list|,
name|radius2
argument_list|,
name|radius2
argument_list|,
literal|180
argument_list|,
operator|-
literal|90
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setClipPath
argument_list|(
name|clipPath
argument_list|)
expr_stmt|;
name|QPixmap
name|titleStretch
init|=
name|cached
argument_list|(
literal|":res/images/title_stretch.png"
argument_list|)
decl_stmt|;
name|QPixmap
name|topLeft
init|=
name|cached
argument_list|(
literal|":res/images/groupframe_topleft.png"
argument_list|)
decl_stmt|;
name|QPixmap
name|topRight
init|=
name|cached
argument_list|(
literal|":res/images/groupframe_topright.png"
argument_list|)
decl_stmt|;
name|QPixmap
name|bottomLeft
init|=
name|cached
argument_list|(
literal|":res/images/groupframe_bottom_left.png"
argument_list|)
decl_stmt|;
name|QPixmap
name|bottomRight
init|=
name|cached
argument_list|(
literal|":res/images/groupframe_bottom_right.png"
argument_list|)
decl_stmt|;
name|QPixmap
name|leftStretch
init|=
name|cached
argument_list|(
literal|":res/images/groupframe_left_stretch.png"
argument_list|)
decl_stmt|;
name|QPixmap
name|topStretch
init|=
name|cached
argument_list|(
literal|":res/images/groupframe_top_stretch.png"
argument_list|)
decl_stmt|;
name|QPixmap
name|rightStretch
init|=
name|cached
argument_list|(
literal|":res/images/groupframe_right_stretch.png"
argument_list|)
decl_stmt|;
name|QPixmap
name|bottomStretch
init|=
name|cached
argument_list|(
literal|":res/images/groupframe_bottom_stretch.png"
argument_list|)
decl_stmt|;
name|QLinearGradient
name|lg
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|r
operator|.
name|height
argument_list|()
argument_list|)
decl_stmt|;
name|lg
operator|.
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|QColor
argument_list|(
literal|224
argument_list|,
literal|224
argument_list|,
literal|224
argument_list|)
argument_list|)
expr_stmt|;
name|lg
operator|.
name|setColorAt
argument_list|(
literal|1
argument_list|,
name|QColor
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|lg
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|r
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
name|titleStretch
operator|.
name|height
argument_list|()
operator|/
literal|2
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setClipping
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|int
name|topFrameOffset
init|=
name|titleStretch
operator|.
name|height
argument_list|()
operator|/
literal|2
operator|-
literal|2
decl_stmt|;
name|painter
operator|->
name|drawPixmap
argument_list|(
name|r
operator|.
name|topLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|0
argument_list|,
name|topFrameOffset
argument_list|)
argument_list|,
name|topLeft
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPixmap
argument_list|(
name|r
operator|.
name|topRight
argument_list|()
operator|-
name|QPoint
argument_list|(
name|topRight
operator|.
name|width
argument_list|()
operator|-
literal|1
argument_list|,
literal|0
argument_list|)
operator|+
name|QPoint
argument_list|(
literal|0
argument_list|,
name|topFrameOffset
argument_list|)
argument_list|,
name|topRight
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPixmap
argument_list|(
name|r
operator|.
name|bottomLeft
argument_list|()
operator|-
name|QPoint
argument_list|(
literal|0
argument_list|,
name|bottomLeft
operator|.
name|height
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|,
name|bottomLeft
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPixmap
argument_list|(
name|r
operator|.
name|bottomRight
argument_list|()
operator|-
name|QPoint
argument_list|(
name|bottomRight
operator|.
name|width
argument_list|()
operator|-
literal|1
argument_list|,
name|bottomRight
operator|.
name|height
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|,
name|bottomRight
argument_list|)
expr_stmt|;
name|QRect
name|left
init|=
name|r
decl_stmt|;
name|left
operator|.
name|setY
argument_list|(
name|r
operator|.
name|y
argument_list|()
operator|+
name|topLeft
operator|.
name|height
argument_list|()
operator|+
name|topFrameOffset
argument_list|)
expr_stmt|;
name|left
operator|.
name|setWidth
argument_list|(
name|leftStretch
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
name|left
operator|.
name|setHeight
argument_list|(
name|r
operator|.
name|height
argument_list|()
operator|-
name|topLeft
operator|.
name|height
argument_list|()
operator|-
name|bottomLeft
operator|.
name|height
argument_list|()
operator|-
name|topFrameOffset
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawTiledPixmap
argument_list|(
name|left
argument_list|,
name|leftStretch
argument_list|)
expr_stmt|;
name|QRect
name|top
init|=
name|r
decl_stmt|;
name|top
operator|.
name|setX
argument_list|(
name|r
operator|.
name|x
argument_list|()
operator|+
name|topLeft
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
name|top
operator|.
name|setY
argument_list|(
name|r
operator|.
name|y
argument_list|()
operator|+
name|topFrameOffset
argument_list|)
expr_stmt|;
name|top
operator|.
name|setWidth
argument_list|(
name|r
operator|.
name|width
argument_list|()
operator|-
name|topLeft
operator|.
name|width
argument_list|()
operator|-
name|topRight
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
name|top
operator|.
name|setHeight
argument_list|(
name|topLeft
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawTiledPixmap
argument_list|(
name|top
argument_list|,
name|topStretch
argument_list|)
expr_stmt|;
name|QRect
name|right
init|=
name|r
decl_stmt|;
name|right
operator|.
name|setX
argument_list|(
name|r
operator|.
name|right
argument_list|()
operator|-
name|rightStretch
operator|.
name|width
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
name|right
operator|.
name|setY
argument_list|(
name|r
operator|.
name|y
argument_list|()
operator|+
name|topRight
operator|.
name|height
argument_list|()
operator|+
name|topFrameOffset
argument_list|)
expr_stmt|;
name|right
operator|.
name|setWidth
argument_list|(
name|rightStretch
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
name|right
operator|.
name|setHeight
argument_list|(
name|r
operator|.
name|height
argument_list|()
operator|-
name|topRight
operator|.
name|height
argument_list|()
operator|-
name|bottomRight
operator|.
name|height
argument_list|()
operator|-
name|topFrameOffset
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawTiledPixmap
argument_list|(
name|right
argument_list|,
name|rightStretch
argument_list|)
expr_stmt|;
name|QRect
name|bottom
init|=
name|r
decl_stmt|;
name|bottom
operator|.
name|setX
argument_list|(
name|r
operator|.
name|x
argument_list|()
operator|+
name|bottomLeft
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
name|bottom
operator|.
name|setY
argument_list|(
name|r
operator|.
name|bottom
argument_list|()
operator|-
name|bottomStretch
operator|.
name|height
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
name|bottom
operator|.
name|setWidth
argument_list|(
name|r
operator|.
name|width
argument_list|()
operator|-
name|bottomLeft
operator|.
name|width
argument_list|()
operator|-
name|bottomRight
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
name|bottom
operator|.
name|setHeight
argument_list|(
name|bottomLeft
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawTiledPixmap
argument_list|(
name|bottom
argument_list|,
name|bottomStretch
argument_list|)
expr_stmt|;
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
break|break;
default|default:
name|QWindowsStyle
operator|::
name|drawPrimitive
argument_list|(
name|element
argument_list|,
name|option
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
break|break;
block|}
return|return;
block|}
end_function
begin_function
DECL|function|drawComplexControl
name|void
name|ArthurStyle
operator|::
name|drawComplexControl
parameter_list|(
name|ComplexControl
name|control
parameter_list|,
specifier|const
name|QStyleOptionComplex
modifier|*
name|option
parameter_list|,
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
switch|switch
condition|(
name|control
condition|)
block|{
case|case
name|CC_Slider
case|:
if|if
condition|(
specifier|const
name|QStyleOptionSlider
modifier|*
name|slider
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSlider
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|QRect
name|groove
init|=
name|subControlRect
argument_list|(
name|CC_Slider
argument_list|,
name|option
argument_list|,
name|SC_SliderGroove
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|QRect
name|handle
init|=
name|subControlRect
argument_list|(
name|CC_Slider
argument_list|,
name|option
argument_list|,
name|SC_SliderHandle
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
name|bool
name|hover
init|=
operator|(
name|slider
operator|->
name|state
operator|&
name|State_Enabled
operator|)
operator|&&
operator|(
name|slider
operator|->
name|state
operator|&
name|State_MouseOver
operator|)
decl_stmt|;
if|if
condition|(
name|hover
condition|)
block|{
name|QRect
name|moderated
init|=
name|widget
operator|->
name|rect
argument_list|()
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|4
argument_list|,
literal|0
argument_list|,
operator|-
literal|4
argument_list|)
decl_stmt|;
name|drawHoverRect
argument_list|(
name|painter
argument_list|,
name|moderated
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
name|option
operator|->
name|subControls
operator|&
name|SC_SliderGroove
operator|)
operator|&&
name|groove
operator|.
name|isValid
argument_list|()
condition|)
block|{
name|QPixmap
name|grv
init|=
name|cached
argument_list|(
literal|":res/images/slider_bar.png"
argument_list|)
decl_stmt|;
name|painter
operator|->
name|drawPixmap
argument_list|(
name|QRect
argument_list|(
name|groove
operator|.
name|x
argument_list|()
operator|+
literal|5
argument_list|,
name|groove
operator|.
name|y
argument_list|()
argument_list|,
name|groove
operator|.
name|width
argument_list|()
operator|-
literal|10
argument_list|,
name|grv
operator|.
name|height
argument_list|()
argument_list|)
argument_list|,
name|grv
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
name|option
operator|->
name|subControls
operator|&
name|SC_SliderHandle
operator|)
operator|&&
name|handle
operator|.
name|isValid
argument_list|()
condition|)
block|{
name|QPixmap
name|hndl
init|=
name|cached
argument_list|(
literal|":res/images/slider_thumb_on.png"
argument_list|)
decl_stmt|;
name|painter
operator|->
name|drawPixmap
argument_list|(
name|handle
operator|.
name|topLeft
argument_list|()
argument_list|,
name|hndl
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
break|break;
case|case
name|CC_GroupBox
case|:
if|if
condition|(
specifier|const
name|QStyleOptionGroupBox
modifier|*
name|groupBox
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionGroupBox
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|QStyleOptionGroupBox
name|groupBoxCopy
argument_list|(
operator|*
name|groupBox
argument_list|)
decl_stmt|;
name|groupBoxCopy
operator|.
name|subControls
operator|&=
operator|~
name|SC_GroupBoxLabel
expr_stmt|;
name|QWindowsStyle
operator|::
name|drawComplexControl
argument_list|(
name|control
argument_list|,
operator|&
name|groupBoxCopy
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
if|if
condition|(
name|groupBox
operator|->
name|subControls
operator|&
name|SC_GroupBoxLabel
condition|)
block|{
specifier|const
name|QRect
modifier|&
name|r
init|=
name|groupBox
operator|->
name|rect
decl_stmt|;
name|QPixmap
name|titleLeft
init|=
name|cached
argument_list|(
literal|":res/images/title_cap_left.png"
argument_list|)
decl_stmt|;
name|QPixmap
name|titleRight
init|=
name|cached
argument_list|(
literal|":res/images/title_cap_right.png"
argument_list|)
decl_stmt|;
name|QPixmap
name|titleStretch
init|=
name|cached
argument_list|(
literal|":res/images/title_stretch.png"
argument_list|)
decl_stmt|;
name|int
name|txt_width
init|=
name|groupBox
operator|->
name|fontMetrics
operator|.
name|width
argument_list|(
name|groupBox
operator|->
name|text
argument_list|)
operator|+
literal|20
decl_stmt|;
name|painter
operator|->
name|drawPixmap
argument_list|(
name|r
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|-
name|txt_width
operator|/
literal|2
argument_list|,
literal|0
argument_list|,
name|titleLeft
argument_list|)
expr_stmt|;
name|QRect
name|tileRect
init|=
name|subControlRect
argument_list|(
name|control
argument_list|,
name|groupBox
argument_list|,
name|SC_GroupBoxLabel
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|painter
operator|->
name|drawTiledPixmap
argument_list|(
name|tileRect
argument_list|,
name|titleStretch
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPixmap
argument_list|(
name|tileRect
operator|.
name|x
argument_list|()
operator|+
name|tileRect
operator|.
name|width
argument_list|()
argument_list|,
literal|0
argument_list|,
name|titleRight
argument_list|)
expr_stmt|;
name|int
name|opacity
init|=
literal|31
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QColor
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|opacity
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawText
argument_list|(
name|tileRect
operator|.
name|translated
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|Qt
operator|::
name|AlignVCenter
operator||
name|Qt
operator|::
name|AlignHCenter
argument_list|,
name|groupBox
operator|->
name|text
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawText
argument_list|(
name|tileRect
operator|.
name|translated
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|,
name|Qt
operator|::
name|AlignVCenter
operator||
name|Qt
operator|::
name|AlignHCenter
argument_list|,
name|groupBox
operator|->
name|text
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QColor
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|opacity
operator|*
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawText
argument_list|(
name|tileRect
operator|.
name|translated
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|Qt
operator|::
name|AlignVCenter
operator||
name|Qt
operator|::
name|AlignHCenter
argument_list|,
name|groupBox
operator|->
name|text
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawText
argument_list|(
name|tileRect
argument_list|,
name|Qt
operator|::
name|AlignVCenter
operator||
name|Qt
operator|::
name|AlignHCenter
argument_list|,
name|groupBox
operator|->
name|text
argument_list|)
expr_stmt|;
block|}
block|}
break|break;
default|default:
name|QWindowsStyle
operator|::
name|drawComplexControl
argument_list|(
name|control
argument_list|,
name|option
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
break|break;
block|}
return|return;
block|}
end_function
begin_function
DECL|function|subControlRect
name|QRect
name|ArthurStyle
operator|::
name|subControlRect
parameter_list|(
name|ComplexControl
name|control
parameter_list|,
specifier|const
name|QStyleOptionComplex
modifier|*
name|option
parameter_list|,
name|SubControl
name|subControl
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
name|QRect
name|rect
decl_stmt|;
switch|switch
condition|(
name|control
condition|)
block|{
default|default:
name|rect
operator|=
name|QWindowsStyle
operator|::
name|subControlRect
argument_list|(
name|control
argument_list|,
name|option
argument_list|,
name|subControl
argument_list|,
name|widget
argument_list|)
expr_stmt|;
break|break;
case|case
name|CC_GroupBox
case|:
if|if
condition|(
specifier|const
name|QStyleOptionGroupBox
modifier|*
name|group
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionGroupBox
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
switch|switch
condition|(
name|subControl
condition|)
block|{
default|default:
name|rect
operator|=
name|QWindowsStyle
operator|::
name|subControlRect
argument_list|(
name|control
argument_list|,
name|option
argument_list|,
name|subControl
argument_list|,
name|widget
argument_list|)
expr_stmt|;
break|break;
case|case
name|SC_GroupBoxContents
case|:
name|rect
operator|=
name|QWindowsStyle
operator|::
name|subControlRect
argument_list|(
name|control
argument_list|,
name|option
argument_list|,
name|subControl
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|rect
operator|.
name|adjust
argument_list|(
literal|0
argument_list|,
operator|-
literal|8
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
break|break;
case|case
name|SC_GroupBoxFrame
case|:
name|rect
operator|=
name|group
operator|->
name|rect
expr_stmt|;
break|break;
case|case
name|SC_GroupBoxLabel
case|:
name|QPixmap
name|titleLeft
init|=
name|cached
argument_list|(
literal|":res/images/title_cap_left.png"
argument_list|)
decl_stmt|;
name|QPixmap
name|titleRight
init|=
name|cached
argument_list|(
literal|":res/images/title_cap_right.png"
argument_list|)
decl_stmt|;
name|QPixmap
name|titleStretch
init|=
name|cached
argument_list|(
literal|":res/images/title_stretch.png"
argument_list|)
decl_stmt|;
name|int
name|txt_width
init|=
name|group
operator|->
name|fontMetrics
operator|.
name|width
argument_list|(
name|group
operator|->
name|text
argument_list|)
operator|+
literal|20
decl_stmt|;
name|rect
operator|=
name|QRect
argument_list|(
name|group
operator|->
name|rect
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
operator|-
name|txt_width
operator|/
literal|2
operator|+
name|titleLeft
operator|.
name|width
argument_list|()
argument_list|,
literal|0
argument_list|,
name|txt_width
operator|-
name|titleLeft
operator|.
name|width
argument_list|()
operator|-
name|titleRight
operator|.
name|width
argument_list|()
argument_list|,
name|titleStretch
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
break|break;
block|}
if|if
condition|(
name|control
operator|==
name|CC_Slider
operator|&&
name|subControl
operator|==
name|SC_SliderHandle
condition|)
block|{
name|rect
operator|.
name|setWidth
argument_list|(
literal|13
argument_list|)
expr_stmt|;
name|rect
operator|.
name|setHeight
argument_list|(
literal|27
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|control
operator|==
name|CC_Slider
operator|&&
name|subControl
operator|==
name|SC_SliderGroove
condition|)
block|{
name|rect
operator|.
name|setHeight
argument_list|(
literal|9
argument_list|)
expr_stmt|;
name|rect
operator|.
name|moveTop
argument_list|(
literal|27
operator|/
literal|2
operator|-
literal|9
operator|/
literal|2
argument_list|)
expr_stmt|;
block|}
return|return
name|rect
return|;
block|}
end_function
begin_function
DECL|function|sizeFromContents
name|QSize
name|ArthurStyle
operator|::
name|sizeFromContents
parameter_list|(
name|ContentsType
name|type
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|option
parameter_list|,
specifier|const
name|QSize
modifier|&
name|size
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
name|QSize
name|newSize
init|=
name|QWindowsStyle
operator|::
name|sizeFromContents
argument_list|(
name|type
argument_list|,
name|option
argument_list|,
name|size
argument_list|,
name|widget
argument_list|)
decl_stmt|;
switch|switch
condition|(
name|type
condition|)
block|{
case|case
name|CT_RadioButton
case|:
name|newSize
operator|+=
name|QSize
argument_list|(
literal|20
argument_list|,
literal|0
argument_list|)
expr_stmt|;
break|break;
case|case
name|CT_PushButton
case|:
name|newSize
operator|.
name|setHeight
argument_list|(
literal|26
argument_list|)
expr_stmt|;
break|break;
case|case
name|CT_Slider
case|:
name|newSize
operator|.
name|setHeight
argument_list|(
literal|27
argument_list|)
expr_stmt|;
break|break;
default|default:
break|break;
block|}
return|return
name|newSize
return|;
block|}
end_function
begin_function
DECL|function|pixelMetric
name|int
name|ArthurStyle
operator|::
name|pixelMetric
parameter_list|(
name|PixelMetric
name|pm
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|opt
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
if|if
condition|(
name|pm
operator|==
name|PM_SliderLength
condition|)
return|return
literal|13
return|;
return|return
name|QWindowsStyle
operator|::
name|pixelMetric
argument_list|(
name|pm
argument_list|,
name|opt
argument_list|,
name|widget
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|polish
name|void
name|ArthurStyle
operator|::
name|polish
parameter_list|(
name|QWidget
modifier|*
name|widget
parameter_list|)
block|{
if|if
condition|(
name|widget
operator|->
name|layout
argument_list|()
operator|&&
name|qobject_cast
argument_list|<
name|QGroupBox
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
condition|)
block|{
if|if
condition|(
name|widget
operator|->
name|findChildren
argument_list|<
name|QGroupBox
operator|*
argument_list|>
argument_list|()
operator|.
name|size
argument_list|()
operator|==
literal|0
condition|)
block|{
name|widget
operator|->
name|layout
argument_list|()
operator|->
name|setSpacing
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|widget
operator|->
name|layout
argument_list|()
operator|->
name|setMargin
argument_list|(
literal|12
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|widget
operator|->
name|layout
argument_list|()
operator|->
name|setMargin
argument_list|(
literal|13
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|qobject_cast
argument_list|<
name|QPushButton
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
operator|||
name|qobject_cast
argument_list|<
name|QRadioButton
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
operator|||
name|qobject_cast
argument_list|<
name|QSlider
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
condition|)
block|{
name|widget
operator|->
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_Hover
argument_list|)
expr_stmt|;
block|}
name|QPalette
name|pal
init|=
name|widget
operator|->
name|palette
argument_list|()
decl_stmt|;
if|if
condition|(
name|widget
operator|->
name|isWindow
argument_list|()
condition|)
block|{
name|pal
operator|.
name|setColor
argument_list|(
name|QPalette
operator|::
name|Background
argument_list|,
name|QColor
argument_list|(
literal|241
argument_list|,
literal|241
argument_list|,
literal|241
argument_list|)
argument_list|)
expr_stmt|;
name|widget
operator|->
name|setPalette
argument_list|(
name|pal
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|unpolish
name|void
name|ArthurStyle
operator|::
name|unpolish
parameter_list|(
name|QWidget
modifier|*
name|widget
parameter_list|)
block|{
if|if
condition|(
name|qobject_cast
argument_list|<
name|QPushButton
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
operator|||
name|qobject_cast
argument_list|<
name|QRadioButton
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
operator|||
name|qobject_cast
argument_list|<
name|QSlider
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
condition|)
block|{
name|widget
operator|->
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_Hover
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|polish
name|void
name|ArthurStyle
operator|::
name|polish
parameter_list|(
name|QPalette
modifier|&
name|palette
parameter_list|)
block|{
name|palette
operator|.
name|setColor
argument_list|(
name|QPalette
operator|::
name|Background
argument_list|,
name|QColor
argument_list|(
literal|241
argument_list|,
literal|241
argument_list|,
literal|241
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|subElementRect
name|QRect
name|ArthurStyle
operator|::
name|subElementRect
parameter_list|(
name|SubElement
name|element
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|option
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
name|QRect
name|r
decl_stmt|;
switch|switch
condition|(
name|element
condition|)
block|{
case|case
name|SE_RadioButtonClickRect
case|:
name|r
operator|=
name|widget
operator|->
name|rect
argument_list|()
expr_stmt|;
break|break;
case|case
name|SE_RadioButtonContents
case|:
name|r
operator|=
name|widget
operator|->
name|rect
argument_list|()
operator|.
name|adjusted
argument_list|(
literal|20
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
break|break;
default|default:
name|r
operator|=
name|QWindowsStyle
operator|::
name|subElementRect
argument_list|(
name|element
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
expr_stmt|;
break|break;
block|}
if|if
condition|(
name|qobject_cast
argument_list|<
specifier|const
name|QRadioButton
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
condition|)
name|r
operator|=
name|r
operator|.
name|adjusted
argument_list|(
literal|5
argument_list|,
literal|0
argument_list|,
operator|-
literal|5
argument_list|,
literal|0
argument_list|)
expr_stmt|;
return|return
name|r
return|;
block|}
end_function
end_unit
