begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the demonstration applications of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** No Commercial Usage ** This file contains pre-release code and may not be distributed. ** You may use this file in accordance with the terms and conditions ** contained in the Technology Preview License Agreement accompanying ** this package. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights.  These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** If you have questions regarding the use of this file, please contact ** Nokia at qt-info@nokia.com. ** ** ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|GLEXTENSIONS_H
end_ifndef
begin_define
DECL|macro|GLEXTENSIONS_H
define|#
directive|define
name|GLEXTENSIONS_H
end_define
begin_include
include|#
directive|include
file|<QtOpenGL>
end_include
begin_comment
comment|/* Functions resolved:  glGenFramebuffersEXT glGenRenderbuffersEXT glBindRenderbufferEXT glRenderbufferStorageEXT glDeleteFramebuffersEXT glDeleteRenderbuffersEXT glBindFramebufferEXT glFramebufferTexture2DEXT glFramebufferRenderbufferEXT glCheckFramebufferStatusEXT  glActiveTexture glTexImage3D  glGenBuffers glBindBuffer glBufferData glDeleteBuffers glMapBuffer glUnmapBuffer */
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|Q_WS_MAC
end_ifndef
begin_ifndef
ifndef|#
directive|ifndef
name|APIENTRYP
end_ifndef
begin_ifdef
ifdef|#
directive|ifdef
name|APIENTRY
end_ifdef
begin_define
DECL|macro|APIENTRYP
define|#
directive|define
name|APIENTRYP
value|APIENTRY *
end_define
begin_else
else|#
directive|else
end_else
begin_define
DECL|macro|APIENTRY
define|#
directive|define
name|APIENTRY
end_define
begin_define
DECL|macro|APIENTRYP
define|#
directive|define
name|APIENTRYP
value|*
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_endif
endif|#
directive|endif
end_endif
begin_else
else|#
directive|else
end_else
begin_define
DECL|macro|APIENTRY
define|#
directive|define
name|APIENTRY
end_define
begin_define
DECL|macro|APIENTRYP
define|#
directive|define
name|APIENTRYP
value|*
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|GL_VERSION_1_2
end_ifndef
begin_define
DECL|macro|GL_TEXTURE_3D
define|#
directive|define
name|GL_TEXTURE_3D
value|0x806F
end_define
begin_define
DECL|macro|GL_TEXTURE_WRAP_R
define|#
directive|define
name|GL_TEXTURE_WRAP_R
value|0x8072
end_define
begin_define
DECL|macro|GL_CLAMP_TO_EDGE
define|#
directive|define
name|GL_CLAMP_TO_EDGE
value|0x812F
end_define
begin_define
DECL|macro|GL_BGRA
define|#
directive|define
name|GL_BGRA
value|0x80E1
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|GL_VERSION_1_3
end_ifndef
begin_define
DECL|macro|GL_TEXTURE0
define|#
directive|define
name|GL_TEXTURE0
value|0x84C0
end_define
begin_define
DECL|macro|GL_TEXTURE1
define|#
directive|define
name|GL_TEXTURE1
value|0x84C1
end_define
begin_define
DECL|macro|GL_TEXTURE2
define|#
directive|define
name|GL_TEXTURE2
value|0x84C2
end_define
begin_define
DECL|macro|GL_TEXTURE_CUBE_MAP
define|#
directive|define
name|GL_TEXTURE_CUBE_MAP
value|0x8513
end_define
begin_define
DECL|macro|GL_TEXTURE_CUBE_MAP_POSITIVE_X
define|#
directive|define
name|GL_TEXTURE_CUBE_MAP_POSITIVE_X
value|0x8515
end_define
begin_comment
comment|//#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X 0x8516
end_comment
begin_comment
comment|//#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y 0x8517
end_comment
begin_comment
comment|//#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y 0x8518
end_comment
begin_comment
comment|//#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z 0x8519
end_comment
begin_comment
comment|//#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z 0x851A
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|GL_ARB_vertex_buffer_object
end_ifndef
begin_typedef
DECL|typedef|GLsizeiptrARB
typedef|typedef
name|ptrdiff_t
name|GLsizeiptrARB
typedef|;
end_typedef
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|GL_VERSION_1_5
end_ifndef
begin_define
DECL|macro|GL_ARRAY_BUFFER
define|#
directive|define
name|GL_ARRAY_BUFFER
value|0x8892
end_define
begin_define
DECL|macro|GL_ELEMENT_ARRAY_BUFFER
define|#
directive|define
name|GL_ELEMENT_ARRAY_BUFFER
value|0x8893
end_define
begin_define
DECL|macro|GL_READ_WRITE
define|#
directive|define
name|GL_READ_WRITE
value|0x88BA
end_define
begin_define
DECL|macro|GL_STATIC_DRAW
define|#
directive|define
name|GL_STATIC_DRAW
value|0x88E4
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|GL_EXT_framebuffer_object
end_ifndef
begin_define
DECL|macro|GL_RENDERBUFFER_EXT
define|#
directive|define
name|GL_RENDERBUFFER_EXT
value|0x8D41
end_define
begin_define
DECL|macro|GL_FRAMEBUFFER_EXT
define|#
directive|define
name|GL_FRAMEBUFFER_EXT
value|0x8D40
end_define
begin_define
DECL|macro|GL_FRAMEBUFFER_COMPLETE_EXT
define|#
directive|define
name|GL_FRAMEBUFFER_COMPLETE_EXT
value|0x8CD5
end_define
begin_define
DECL|macro|GL_COLOR_ATTACHMENT0_EXT
define|#
directive|define
name|GL_COLOR_ATTACHMENT0_EXT
value|0x8CE0
end_define
begin_define
DECL|macro|GL_DEPTH_ATTACHMENT_EXT
define|#
directive|define
name|GL_DEPTH_ATTACHMENT_EXT
value|0x8D00
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_typedef
DECL|typedef|_glGenFramebuffersEXT
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glGenFramebuffersEXT
function_decl|)
parameter_list|(
name|GLsizei
parameter_list|,
name|GLuint
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glGenRenderbuffersEXT
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glGenRenderbuffersEXT
function_decl|)
parameter_list|(
name|GLsizei
parameter_list|,
name|GLuint
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glBindRenderbufferEXT
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glBindRenderbufferEXT
function_decl|)
parameter_list|(
name|GLenum
parameter_list|,
name|GLuint
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glRenderbufferStorageEXT
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glRenderbufferStorageEXT
function_decl|)
parameter_list|(
name|GLenum
parameter_list|,
name|GLenum
parameter_list|,
name|GLsizei
parameter_list|,
name|GLsizei
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glDeleteFramebuffersEXT
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glDeleteFramebuffersEXT
function_decl|)
parameter_list|(
name|GLsizei
parameter_list|,
specifier|const
name|GLuint
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glDeleteRenderbuffersEXT
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glDeleteRenderbuffersEXT
function_decl|)
parameter_list|(
name|GLsizei
parameter_list|,
specifier|const
name|GLuint
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glBindFramebufferEXT
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glBindFramebufferEXT
function_decl|)
parameter_list|(
name|GLenum
parameter_list|,
name|GLuint
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glFramebufferTexture2DEXT
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glFramebufferTexture2DEXT
function_decl|)
parameter_list|(
name|GLenum
parameter_list|,
name|GLenum
parameter_list|,
name|GLenum
parameter_list|,
name|GLuint
parameter_list|,
name|GLint
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glFramebufferRenderbufferEXT
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glFramebufferRenderbufferEXT
function_decl|)
parameter_list|(
name|GLenum
parameter_list|,
name|GLenum
parameter_list|,
name|GLenum
parameter_list|,
name|GLuint
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glCheckFramebufferStatusEXT
typedef|typedef
name|GLenum
function_decl|(
name|APIENTRY
modifier|*
name|_glCheckFramebufferStatusEXT
function_decl|)
parameter_list|(
name|GLenum
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glActiveTexture
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glActiveTexture
function_decl|)
parameter_list|(
name|GLenum
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glTexImage3D
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glTexImage3D
function_decl|)
parameter_list|(
name|GLenum
parameter_list|,
name|GLint
parameter_list|,
name|GLenum
parameter_list|,
name|GLsizei
parameter_list|,
name|GLsizei
parameter_list|,
name|GLsizei
parameter_list|,
name|GLint
parameter_list|,
name|GLenum
parameter_list|,
name|GLenum
parameter_list|,
specifier|const
name|GLvoid
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glGenBuffers
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glGenBuffers
function_decl|)
parameter_list|(
name|GLsizei
parameter_list|,
name|GLuint
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glBindBuffer
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glBindBuffer
function_decl|)
parameter_list|(
name|GLenum
parameter_list|,
name|GLuint
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glBufferData
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glBufferData
function_decl|)
parameter_list|(
name|GLenum
parameter_list|,
name|GLsizeiptrARB
parameter_list|,
specifier|const
name|GLvoid
modifier|*
parameter_list|,
name|GLenum
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glDeleteBuffers
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glDeleteBuffers
function_decl|)
parameter_list|(
name|GLsizei
parameter_list|,
specifier|const
name|GLuint
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glMapBuffer
typedef|typedef
name|void
modifier|*
function_decl|(
name|APIENTRY
modifier|*
name|_glMapBuffer
function_decl|)
parameter_list|(
name|GLenum
parameter_list|,
name|GLenum
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glUnmapBuffer
typedef|typedef
name|GLboolean
function_decl|(
name|APIENTRY
modifier|*
name|_glUnmapBuffer
function_decl|)
parameter_list|(
name|GLenum
parameter_list|)
function_decl|;
end_typedef
begin_struct
DECL|struct|GLExtensionFunctions
struct|struct
name|GLExtensionFunctions
block|{
name|bool
name|resolve
parameter_list|(
specifier|const
name|QGLContext
modifier|*
name|context
parameter_list|)
function_decl|;
name|bool
name|fboSupported
parameter_list|()
function_decl|;
name|bool
name|openGL15Supported
parameter_list|()
function_decl|;
comment|// the rest: multi-texture, 3D-texture, vertex buffer objects
DECL|member|GenFramebuffersEXT
name|_glGenFramebuffersEXT
name|GenFramebuffersEXT
decl_stmt|;
DECL|member|GenRenderbuffersEXT
name|_glGenRenderbuffersEXT
name|GenRenderbuffersEXT
decl_stmt|;
DECL|member|BindRenderbufferEXT
name|_glBindRenderbufferEXT
name|BindRenderbufferEXT
decl_stmt|;
DECL|member|RenderbufferStorageEXT
name|_glRenderbufferStorageEXT
name|RenderbufferStorageEXT
decl_stmt|;
DECL|member|DeleteFramebuffersEXT
name|_glDeleteFramebuffersEXT
name|DeleteFramebuffersEXT
decl_stmt|;
DECL|member|DeleteRenderbuffersEXT
name|_glDeleteRenderbuffersEXT
name|DeleteRenderbuffersEXT
decl_stmt|;
DECL|member|BindFramebufferEXT
name|_glBindFramebufferEXT
name|BindFramebufferEXT
decl_stmt|;
DECL|member|FramebufferTexture2DEXT
name|_glFramebufferTexture2DEXT
name|FramebufferTexture2DEXT
decl_stmt|;
DECL|member|FramebufferRenderbufferEXT
name|_glFramebufferRenderbufferEXT
name|FramebufferRenderbufferEXT
decl_stmt|;
DECL|member|CheckFramebufferStatusEXT
name|_glCheckFramebufferStatusEXT
name|CheckFramebufferStatusEXT
decl_stmt|;
DECL|member|ActiveTexture
name|_glActiveTexture
name|ActiveTexture
decl_stmt|;
DECL|member|TexImage3D
name|_glTexImage3D
name|TexImage3D
decl_stmt|;
DECL|member|GenBuffers
name|_glGenBuffers
name|GenBuffers
decl_stmt|;
DECL|member|BindBuffer
name|_glBindBuffer
name|BindBuffer
decl_stmt|;
DECL|member|BufferData
name|_glBufferData
name|BufferData
decl_stmt|;
DECL|member|DeleteBuffers
name|_glDeleteBuffers
name|DeleteBuffers
decl_stmt|;
DECL|member|MapBuffer
name|_glMapBuffer
name|MapBuffer
decl_stmt|;
DECL|member|UnmapBuffer
name|_glUnmapBuffer
name|UnmapBuffer
decl_stmt|;
block|}
struct|;
end_struct
begin_function
DECL|function|getGLExtensionFunctions
specifier|inline
name|GLExtensionFunctions
modifier|&
name|getGLExtensionFunctions
parameter_list|()
block|{
specifier|static
name|GLExtensionFunctions
name|funcs
decl_stmt|;
return|return
name|funcs
return|;
block|}
end_function
begin_define
DECL|macro|glGenFramebuffersEXT
define|#
directive|define
name|glGenFramebuffersEXT
value|getGLExtensionFunctions().GenFramebuffersEXT
end_define
begin_define
DECL|macro|glGenRenderbuffersEXT
define|#
directive|define
name|glGenRenderbuffersEXT
value|getGLExtensionFunctions().GenRenderbuffersEXT
end_define
begin_define
DECL|macro|glBindRenderbufferEXT
define|#
directive|define
name|glBindRenderbufferEXT
value|getGLExtensionFunctions().BindRenderbufferEXT
end_define
begin_define
DECL|macro|glRenderbufferStorageEXT
define|#
directive|define
name|glRenderbufferStorageEXT
value|getGLExtensionFunctions().RenderbufferStorageEXT
end_define
begin_define
DECL|macro|glDeleteFramebuffersEXT
define|#
directive|define
name|glDeleteFramebuffersEXT
value|getGLExtensionFunctions().DeleteFramebuffersEXT
end_define
begin_define
DECL|macro|glDeleteRenderbuffersEXT
define|#
directive|define
name|glDeleteRenderbuffersEXT
value|getGLExtensionFunctions().DeleteRenderbuffersEXT
end_define
begin_define
DECL|macro|glBindFramebufferEXT
define|#
directive|define
name|glBindFramebufferEXT
value|getGLExtensionFunctions().BindFramebufferEXT
end_define
begin_define
DECL|macro|glFramebufferTexture2DEXT
define|#
directive|define
name|glFramebufferTexture2DEXT
value|getGLExtensionFunctions().FramebufferTexture2DEXT
end_define
begin_define
DECL|macro|glFramebufferRenderbufferEXT
define|#
directive|define
name|glFramebufferRenderbufferEXT
value|getGLExtensionFunctions().FramebufferRenderbufferEXT
end_define
begin_define
DECL|macro|glCheckFramebufferStatusEXT
define|#
directive|define
name|glCheckFramebufferStatusEXT
value|getGLExtensionFunctions().CheckFramebufferStatusEXT
end_define
begin_define
DECL|macro|glActiveTexture
define|#
directive|define
name|glActiveTexture
value|getGLExtensionFunctions().ActiveTexture
end_define
begin_define
DECL|macro|glTexImage3D
define|#
directive|define
name|glTexImage3D
value|getGLExtensionFunctions().TexImage3D
end_define
begin_define
DECL|macro|glGenBuffers
define|#
directive|define
name|glGenBuffers
value|getGLExtensionFunctions().GenBuffers
end_define
begin_define
DECL|macro|glBindBuffer
define|#
directive|define
name|glBindBuffer
value|getGLExtensionFunctions().BindBuffer
end_define
begin_define
DECL|macro|glBufferData
define|#
directive|define
name|glBufferData
value|getGLExtensionFunctions().BufferData
end_define
begin_define
DECL|macro|glDeleteBuffers
define|#
directive|define
name|glDeleteBuffers
value|getGLExtensionFunctions().DeleteBuffers
end_define
begin_define
DECL|macro|glMapBuffer
define|#
directive|define
name|glMapBuffer
value|getGLExtensionFunctions().MapBuffer
end_define
begin_define
DECL|macro|glUnmapBuffer
define|#
directive|define
name|glUnmapBuffer
value|getGLExtensionFunctions().UnmapBuffer
end_define
begin_endif
endif|#
directive|endif
end_endif
end_unit
