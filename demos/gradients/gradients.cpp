begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the demonstration applications of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"gradients.h"
end_include
begin_include
include|#
directive|include
file|"hoverpoints.h"
end_include
begin_constructor
DECL|function|ShadeWidget
name|ShadeWidget
operator|::
name|ShadeWidget
parameter_list|(
name|ShadeType
name|type
parameter_list|,
name|QWidget
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QWidget
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|m_shade_type
argument_list|(
name|type
argument_list|)
member_init_list|,
name|m_alpha_gradient
argument_list|(
name|QLinearGradient
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
block|{
comment|// Checkers background
if|if
condition|(
name|m_shade_type
operator|==
name|ARGBShade
condition|)
block|{
name|QPixmap
name|pm
argument_list|(
literal|20
argument_list|,
literal|20
argument_list|)
decl_stmt|;
name|QPainter
name|pmp
argument_list|(
operator|&
name|pm
argument_list|)
decl_stmt|;
name|pmp
operator|.
name|fillRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
name|Qt
operator|::
name|lightGray
argument_list|)
expr_stmt|;
name|pmp
operator|.
name|fillRect
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
name|Qt
operator|::
name|lightGray
argument_list|)
expr_stmt|;
name|pmp
operator|.
name|fillRect
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
name|Qt
operator|::
name|darkGray
argument_list|)
expr_stmt|;
name|pmp
operator|.
name|fillRect
argument_list|(
literal|10
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
name|Qt
operator|::
name|darkGray
argument_list|)
expr_stmt|;
name|pmp
operator|.
name|end
argument_list|()
expr_stmt|;
name|QPalette
name|pal
init|=
name|palette
argument_list|()
decl_stmt|;
name|pal
operator|.
name|setBrush
argument_list|(
name|backgroundRole
argument_list|()
argument_list|,
name|QBrush
argument_list|(
name|pm
argument_list|)
argument_list|)
expr_stmt|;
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|setPalette
argument_list|(
name|pal
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_NoBackground
argument_list|)
expr_stmt|;
block|}
name|QPolygonF
name|points
decl_stmt|;
name|points
operator|<<
name|QPointF
argument_list|(
literal|0
argument_list|,
name|sizeHint
argument_list|()
operator|.
name|height
argument_list|()
argument_list|)
operator|<<
name|QPointF
argument_list|(
name|sizeHint
argument_list|()
operator|.
name|width
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|m_hoverPoints
operator|=
operator|new
name|HoverPoints
argument_list|(
name|this
argument_list|,
name|HoverPoints
operator|::
name|CircleShape
argument_list|)
expr_stmt|;
comment|//     m_hoverPoints->setConnectionType(HoverPoints::LineConnection);
name|m_hoverPoints
operator|->
name|setPoints
argument_list|(
name|points
argument_list|)
expr_stmt|;
name|m_hoverPoints
operator|->
name|setPointLock
argument_list|(
literal|0
argument_list|,
name|HoverPoints
operator|::
name|LockToLeft
argument_list|)
expr_stmt|;
name|m_hoverPoints
operator|->
name|setPointLock
argument_list|(
literal|1
argument_list|,
name|HoverPoints
operator|::
name|LockToRight
argument_list|)
expr_stmt|;
name|m_hoverPoints
operator|->
name|setSortType
argument_list|(
name|HoverPoints
operator|::
name|XSort
argument_list|)
expr_stmt|;
name|setSizePolicy
argument_list|(
name|QSizePolicy
operator|::
name|Preferred
argument_list|,
name|QSizePolicy
operator|::
name|Fixed
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_hoverPoints
argument_list|,
name|SIGNAL
argument_list|(
name|pointsChanged
argument_list|(
name|QPolygonF
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SIGNAL
argument_list|(
name|colorsChanged
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_function
DECL|function|points
name|QPolygonF
name|ShadeWidget
operator|::
name|points
parameter_list|()
specifier|const
block|{
return|return
name|m_hoverPoints
operator|->
name|points
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|colorAt
name|uint
name|ShadeWidget
operator|::
name|colorAt
parameter_list|(
name|int
name|x
parameter_list|)
block|{
name|generateShade
argument_list|()
expr_stmt|;
name|QPolygonF
name|pts
init|=
name|m_hoverPoints
operator|->
name|points
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
name|pts
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
if|if
condition|(
name|pts
operator|.
name|at
argument_list|(
name|i
operator|-
literal|1
argument_list|)
operator|.
name|x
argument_list|()
operator|<=
name|x
operator|&&
name|pts
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|.
name|x
argument_list|()
operator|>=
name|x
condition|)
block|{
name|QLineF
name|l
argument_list|(
name|pts
operator|.
name|at
argument_list|(
name|i
operator|-
literal|1
argument_list|)
argument_list|,
name|pts
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
decl_stmt|;
name|l
operator|.
name|setLength
argument_list|(
name|l
operator|.
name|length
argument_list|()
operator|*
operator|(
operator|(
name|x
operator|-
name|l
operator|.
name|x1
argument_list|()
operator|)
operator|/
name|l
operator|.
name|dx
argument_list|()
operator|)
argument_list|)
expr_stmt|;
return|return
name|m_shade
operator|.
name|pixel
argument_list|(
name|qRound
argument_list|(
name|qMin
argument_list|(
name|l
operator|.
name|x2
argument_list|()
argument_list|,
operator|(
name|qreal
argument_list|(
name|m_shade
operator|.
name|width
argument_list|()
operator|-
literal|1
argument_list|)
operator|)
argument_list|)
argument_list|)
argument_list|,
name|qRound
argument_list|(
name|qMin
argument_list|(
name|l
operator|.
name|y2
argument_list|()
argument_list|,
name|qreal
argument_list|(
name|m_shade
operator|.
name|height
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
argument_list|)
argument_list|)
return|;
block|}
block|}
return|return
literal|0
return|;
block|}
end_function
begin_function
DECL|function|setGradientStops
name|void
name|ShadeWidget
operator|::
name|setGradientStops
parameter_list|(
specifier|const
name|QGradientStops
modifier|&
name|stops
parameter_list|)
block|{
if|if
condition|(
name|m_shade_type
operator|==
name|ARGBShade
condition|)
block|{
name|m_alpha_gradient
operator|=
name|QLinearGradient
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|width
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|stops
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|QColor
name|c
init|=
name|stops
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|.
name|second
decl_stmt|;
name|m_alpha_gradient
operator|.
name|setColorAt
argument_list|(
name|stops
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|.
name|first
argument_list|,
name|QColor
argument_list|(
name|c
operator|.
name|red
argument_list|()
argument_list|,
name|c
operator|.
name|green
argument_list|()
argument_list|,
name|c
operator|.
name|blue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|m_shade
operator|=
name|QImage
argument_list|()
expr_stmt|;
name|generateShade
argument_list|()
expr_stmt|;
name|update
argument_list|()
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|paintEvent
name|void
name|ShadeWidget
operator|::
name|paintEvent
parameter_list|(
name|QPaintEvent
modifier|*
parameter_list|)
block|{
name|generateShade
argument_list|()
expr_stmt|;
name|QPainter
name|p
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|p
operator|.
name|drawImage
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|m_shade
argument_list|)
expr_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|QColor
argument_list|(
literal|146
argument_list|,
literal|146
argument_list|,
literal|146
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|width
argument_list|()
operator|-
literal|1
argument_list|,
name|height
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|generateShade
name|void
name|ShadeWidget
operator|::
name|generateShade
parameter_list|()
block|{
if|if
condition|(
name|m_shade
operator|.
name|isNull
argument_list|()
operator|||
name|m_shade
operator|.
name|size
argument_list|()
operator|!=
name|size
argument_list|()
condition|)
block|{
if|if
condition|(
name|m_shade_type
operator|==
name|ARGBShade
condition|)
block|{
name|m_shade
operator|=
name|QImage
argument_list|(
name|size
argument_list|()
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
expr_stmt|;
name|m_shade
operator|.
name|fill
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|m_shade
argument_list|)
decl_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
name|rect
argument_list|()
argument_list|,
name|m_alpha_gradient
argument_list|)
expr_stmt|;
name|p
operator|.
name|setCompositionMode
argument_list|(
name|QPainter
operator|::
name|CompositionMode_DestinationIn
argument_list|)
expr_stmt|;
name|QLinearGradient
name|fade
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|height
argument_list|()
argument_list|)
decl_stmt|;
name|fade
operator|.
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|QColor
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|255
argument_list|)
argument_list|)
expr_stmt|;
name|fade
operator|.
name|setColorAt
argument_list|(
literal|1
argument_list|,
name|QColor
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
name|rect
argument_list|()
argument_list|,
name|fade
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|m_shade
operator|=
name|QImage
argument_list|(
name|size
argument_list|()
argument_list|,
name|QImage
operator|::
name|Format_RGB32
argument_list|)
expr_stmt|;
name|QLinearGradient
name|shade
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|height
argument_list|()
argument_list|)
decl_stmt|;
name|shade
operator|.
name|setColorAt
argument_list|(
literal|1
argument_list|,
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
if|if
condition|(
name|m_shade_type
operator|==
name|RedShade
condition|)
name|shade
operator|.
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|m_shade_type
operator|==
name|GreenShade
condition|)
name|shade
operator|.
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|green
argument_list|)
expr_stmt|;
else|else
name|shade
operator|.
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|blue
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|m_shade
argument_list|)
decl_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
name|rect
argument_list|()
argument_list|,
name|shade
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_function
begin_constructor
DECL|function|GradientEditor
name|GradientEditor
operator|::
name|GradientEditor
parameter_list|(
name|QWidget
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QWidget
argument_list|(
name|parent
argument_list|)
block|{
name|QVBoxLayout
modifier|*
name|vbox
init|=
operator|new
name|QVBoxLayout
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|vbox
operator|->
name|setSpacing
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|vbox
operator|->
name|setMargin
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|m_red_shade
operator|=
operator|new
name|ShadeWidget
argument_list|(
name|ShadeWidget
operator|::
name|RedShade
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|m_green_shade
operator|=
operator|new
name|ShadeWidget
argument_list|(
name|ShadeWidget
operator|::
name|GreenShade
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|m_blue_shade
operator|=
operator|new
name|ShadeWidget
argument_list|(
name|ShadeWidget
operator|::
name|BlueShade
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|m_alpha_shade
operator|=
operator|new
name|ShadeWidget
argument_list|(
name|ShadeWidget
operator|::
name|ARGBShade
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|vbox
operator|->
name|addWidget
argument_list|(
name|m_red_shade
argument_list|)
expr_stmt|;
name|vbox
operator|->
name|addWidget
argument_list|(
name|m_green_shade
argument_list|)
expr_stmt|;
name|vbox
operator|->
name|addWidget
argument_list|(
name|m_blue_shade
argument_list|)
expr_stmt|;
name|vbox
operator|->
name|addWidget
argument_list|(
name|m_alpha_shade
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_red_shade
argument_list|,
name|SIGNAL
argument_list|(
name|colorsChanged
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|pointsUpdated
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_green_shade
argument_list|,
name|SIGNAL
argument_list|(
name|colorsChanged
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|pointsUpdated
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_blue_shade
argument_list|,
name|SIGNAL
argument_list|(
name|colorsChanged
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|pointsUpdated
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_alpha_shade
argument_list|,
name|SIGNAL
argument_list|(
name|colorsChanged
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|pointsUpdated
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_function
DECL|function|x_less_than
specifier|inline
specifier|static
name|bool
name|x_less_than
parameter_list|(
specifier|const
name|QPointF
modifier|&
name|p1
parameter_list|,
specifier|const
name|QPointF
modifier|&
name|p2
parameter_list|)
block|{
return|return
name|p1
operator|.
name|x
argument_list|()
operator|<
name|p2
operator|.
name|x
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|pointsUpdated
name|void
name|GradientEditor
operator|::
name|pointsUpdated
parameter_list|()
block|{
name|qreal
name|w
init|=
name|m_alpha_shade
operator|->
name|width
argument_list|()
decl_stmt|;
name|QGradientStops
name|stops
decl_stmt|;
name|QPolygonF
name|points
decl_stmt|;
name|points
operator|+=
name|m_red_shade
operator|->
name|points
argument_list|()
expr_stmt|;
name|points
operator|+=
name|m_green_shade
operator|->
name|points
argument_list|()
expr_stmt|;
name|points
operator|+=
name|m_blue_shade
operator|->
name|points
argument_list|()
expr_stmt|;
name|points
operator|+=
name|m_alpha_shade
operator|->
name|points
argument_list|()
expr_stmt|;
name|qSort
argument_list|(
name|points
operator|.
name|begin
argument_list|()
argument_list|,
name|points
operator|.
name|end
argument_list|()
argument_list|,
name|x_less_than
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|points
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|qreal
name|x
init|=
name|int
argument_list|(
name|points
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|.
name|x
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|i
operator|<
name|points
operator|.
name|size
argument_list|()
operator|-
literal|1
operator|&&
name|x
operator|==
name|points
operator|.
name|at
argument_list|(
name|i
operator|+
literal|1
argument_list|)
operator|.
name|x
argument_list|()
condition|)
continue|continue;
name|QColor
name|color
argument_list|(
operator|(
literal|0x00ff0000
operator|&
name|m_red_shade
operator|->
name|colorAt
argument_list|(
name|int
argument_list|(
name|x
argument_list|)
argument_list|)
operator|)
operator|>>
literal|16
argument_list|,
operator|(
literal|0x0000ff00
operator|&
name|m_green_shade
operator|->
name|colorAt
argument_list|(
name|int
argument_list|(
name|x
argument_list|)
argument_list|)
operator|)
operator|>>
literal|8
argument_list|,
operator|(
literal|0x000000ff
operator|&
name|m_blue_shade
operator|->
name|colorAt
argument_list|(
name|int
argument_list|(
name|x
argument_list|)
argument_list|)
operator|)
argument_list|,
operator|(
literal|0xff000000
operator|&
name|m_alpha_shade
operator|->
name|colorAt
argument_list|(
name|int
argument_list|(
name|x
argument_list|)
argument_list|)
operator|)
operator|>>
literal|24
argument_list|)
decl_stmt|;
if|if
condition|(
name|x
operator|/
name|w
operator|>
literal|1
condition|)
return|return;
name|stops
operator|<<
name|QGradientStop
argument_list|(
name|x
operator|/
name|w
argument_list|,
name|color
argument_list|)
expr_stmt|;
block|}
name|m_alpha_shade
operator|->
name|setGradientStops
argument_list|(
name|stops
argument_list|)
expr_stmt|;
emit|emit
name|gradientStopsChanged
argument_list|(
name|stops
argument_list|)
emit|;
block|}
end_function
begin_function
DECL|function|set_shade_points
specifier|static
name|void
name|set_shade_points
parameter_list|(
specifier|const
name|QPolygonF
modifier|&
name|points
parameter_list|,
name|ShadeWidget
modifier|*
name|shade
parameter_list|)
block|{
name|shade
operator|->
name|hoverPoints
argument_list|()
operator|->
name|setPoints
argument_list|(
name|points
argument_list|)
expr_stmt|;
name|shade
operator|->
name|hoverPoints
argument_list|()
operator|->
name|setPointLock
argument_list|(
literal|0
argument_list|,
name|HoverPoints
operator|::
name|LockToLeft
argument_list|)
expr_stmt|;
name|shade
operator|->
name|hoverPoints
argument_list|()
operator|->
name|setPointLock
argument_list|(
name|points
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|,
name|HoverPoints
operator|::
name|LockToRight
argument_list|)
expr_stmt|;
name|shade
operator|->
name|update
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setGradientStops
name|void
name|GradientEditor
operator|::
name|setGradientStops
parameter_list|(
specifier|const
name|QGradientStops
modifier|&
name|stops
parameter_list|)
block|{
name|QPolygonF
name|pts_red
decl_stmt|,
name|pts_green
decl_stmt|,
name|pts_blue
decl_stmt|,
name|pts_alpha
decl_stmt|;
name|qreal
name|h_red
init|=
name|m_red_shade
operator|->
name|height
argument_list|()
decl_stmt|;
name|qreal
name|h_green
init|=
name|m_green_shade
operator|->
name|height
argument_list|()
decl_stmt|;
name|qreal
name|h_blue
init|=
name|m_blue_shade
operator|->
name|height
argument_list|()
decl_stmt|;
name|qreal
name|h_alpha
init|=
name|m_alpha_shade
operator|->
name|height
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|stops
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|qreal
name|pos
init|=
name|stops
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|.
name|first
decl_stmt|;
name|QRgb
name|color
init|=
name|stops
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|.
name|second
operator|.
name|rgba
argument_list|()
decl_stmt|;
name|pts_red
operator|<<
name|QPointF
argument_list|(
name|pos
operator|*
name|m_red_shade
operator|->
name|width
argument_list|()
argument_list|,
name|h_red
operator|-
name|qRed
argument_list|(
name|color
argument_list|)
operator|*
name|h_red
operator|/
literal|255
argument_list|)
expr_stmt|;
name|pts_green
operator|<<
name|QPointF
argument_list|(
name|pos
operator|*
name|m_green_shade
operator|->
name|width
argument_list|()
argument_list|,
name|h_green
operator|-
name|qGreen
argument_list|(
name|color
argument_list|)
operator|*
name|h_green
operator|/
literal|255
argument_list|)
expr_stmt|;
name|pts_blue
operator|<<
name|QPointF
argument_list|(
name|pos
operator|*
name|m_blue_shade
operator|->
name|width
argument_list|()
argument_list|,
name|h_blue
operator|-
name|qBlue
argument_list|(
name|color
argument_list|)
operator|*
name|h_blue
operator|/
literal|255
argument_list|)
expr_stmt|;
name|pts_alpha
operator|<<
name|QPointF
argument_list|(
name|pos
operator|*
name|m_alpha_shade
operator|->
name|width
argument_list|()
argument_list|,
name|h_alpha
operator|-
name|qAlpha
argument_list|(
name|color
argument_list|)
operator|*
name|h_alpha
operator|/
literal|255
argument_list|)
expr_stmt|;
block|}
name|set_shade_points
argument_list|(
name|pts_red
argument_list|,
name|m_red_shade
argument_list|)
expr_stmt|;
name|set_shade_points
argument_list|(
name|pts_green
argument_list|,
name|m_green_shade
argument_list|)
expr_stmt|;
name|set_shade_points
argument_list|(
name|pts_blue
argument_list|,
name|m_blue_shade
argument_list|)
expr_stmt|;
name|set_shade_points
argument_list|(
name|pts_alpha
argument_list|,
name|m_alpha_shade
argument_list|)
expr_stmt|;
block|}
end_function
begin_constructor
DECL|function|GradientWidget
name|GradientWidget
operator|::
name|GradientWidget
parameter_list|(
name|QWidget
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QWidget
argument_list|(
name|parent
argument_list|)
block|{
name|setWindowTitle
argument_list|(
name|tr
argument_list|(
literal|"Gradients"
argument_list|)
argument_list|)
expr_stmt|;
name|m_renderer
operator|=
operator|new
name|GradientRenderer
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|QGroupBox
modifier|*
name|mainGroup
init|=
operator|new
name|QGroupBox
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|mainGroup
operator|->
name|setTitle
argument_list|(
name|tr
argument_list|(
literal|"Gradients"
argument_list|)
argument_list|)
expr_stmt|;
name|QGroupBox
modifier|*
name|editorGroup
init|=
operator|new
name|QGroupBox
argument_list|(
name|mainGroup
argument_list|)
decl_stmt|;
name|editorGroup
operator|->
name|setTitle
argument_list|(
name|tr
argument_list|(
literal|"Color Editor"
argument_list|)
argument_list|)
expr_stmt|;
name|m_editor
operator|=
operator|new
name|GradientEditor
argument_list|(
name|editorGroup
argument_list|)
expr_stmt|;
name|QGroupBox
modifier|*
name|typeGroup
init|=
operator|new
name|QGroupBox
argument_list|(
name|mainGroup
argument_list|)
decl_stmt|;
name|typeGroup
operator|->
name|setTitle
argument_list|(
name|tr
argument_list|(
literal|"Gradient Type"
argument_list|)
argument_list|)
expr_stmt|;
name|m_linearButton
operator|=
operator|new
name|QRadioButton
argument_list|(
name|tr
argument_list|(
literal|"Linear Gradient"
argument_list|)
argument_list|,
name|typeGroup
argument_list|)
expr_stmt|;
name|m_radialButton
operator|=
operator|new
name|QRadioButton
argument_list|(
name|tr
argument_list|(
literal|"Radial Gradient"
argument_list|)
argument_list|,
name|typeGroup
argument_list|)
expr_stmt|;
name|m_conicalButton
operator|=
operator|new
name|QRadioButton
argument_list|(
name|tr
argument_list|(
literal|"Conical Gradient"
argument_list|)
argument_list|,
name|typeGroup
argument_list|)
expr_stmt|;
name|QGroupBox
modifier|*
name|spreadGroup
init|=
operator|new
name|QGroupBox
argument_list|(
name|mainGroup
argument_list|)
decl_stmt|;
name|spreadGroup
operator|->
name|setTitle
argument_list|(
name|tr
argument_list|(
literal|"Spread Method"
argument_list|)
argument_list|)
expr_stmt|;
name|m_padSpreadButton
operator|=
operator|new
name|QRadioButton
argument_list|(
name|tr
argument_list|(
literal|"Pad Spread"
argument_list|)
argument_list|,
name|spreadGroup
argument_list|)
expr_stmt|;
name|m_reflectSpreadButton
operator|=
operator|new
name|QRadioButton
argument_list|(
name|tr
argument_list|(
literal|"Reflect Spread"
argument_list|)
argument_list|,
name|spreadGroup
argument_list|)
expr_stmt|;
name|m_repeatSpreadButton
operator|=
operator|new
name|QRadioButton
argument_list|(
name|tr
argument_list|(
literal|"Repeat Spread"
argument_list|)
argument_list|,
name|spreadGroup
argument_list|)
expr_stmt|;
name|QGroupBox
modifier|*
name|defaultsGroup
init|=
operator|new
name|QGroupBox
argument_list|(
name|mainGroup
argument_list|)
decl_stmt|;
name|defaultsGroup
operator|->
name|setTitle
argument_list|(
name|tr
argument_list|(
literal|"Defaults"
argument_list|)
argument_list|)
expr_stmt|;
name|QPushButton
modifier|*
name|default1Button
init|=
operator|new
name|QPushButton
argument_list|(
name|tr
argument_list|(
literal|"1"
argument_list|)
argument_list|,
name|defaultsGroup
argument_list|)
decl_stmt|;
name|QPushButton
modifier|*
name|default2Button
init|=
operator|new
name|QPushButton
argument_list|(
name|tr
argument_list|(
literal|"2"
argument_list|)
argument_list|,
name|defaultsGroup
argument_list|)
decl_stmt|;
name|QPushButton
modifier|*
name|default3Button
init|=
operator|new
name|QPushButton
argument_list|(
name|tr
argument_list|(
literal|"3"
argument_list|)
argument_list|,
name|defaultsGroup
argument_list|)
decl_stmt|;
name|QPushButton
modifier|*
name|default4Button
init|=
operator|new
name|QPushButton
argument_list|(
name|tr
argument_list|(
literal|"Reset"
argument_list|)
argument_list|,
name|editorGroup
argument_list|)
decl_stmt|;
name|QPushButton
modifier|*
name|showSourceButton
init|=
operator|new
name|QPushButton
argument_list|(
name|mainGroup
argument_list|)
decl_stmt|;
name|showSourceButton
operator|->
name|setText
argument_list|(
name|tr
argument_list|(
literal|"Show Source"
argument_list|)
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|QT_OPENGL_SUPPORT
name|QPushButton
modifier|*
name|enableOpenGLButton
init|=
operator|new
name|QPushButton
argument_list|(
name|mainGroup
argument_list|)
decl_stmt|;
name|enableOpenGLButton
operator|->
name|setText
argument_list|(
name|tr
argument_list|(
literal|"Use OpenGL"
argument_list|)
argument_list|)
expr_stmt|;
name|enableOpenGLButton
operator|->
name|setCheckable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|enableOpenGLButton
operator|->
name|setChecked
argument_list|(
name|m_renderer
operator|->
name|usesOpenGL
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|QGLFormat
operator|::
name|hasOpenGL
argument_list|()
condition|)
name|enableOpenGLButton
operator|->
name|hide
argument_list|()
expr_stmt|;
endif|#
directive|endif
name|QPushButton
modifier|*
name|whatsThisButton
init|=
operator|new
name|QPushButton
argument_list|(
name|mainGroup
argument_list|)
decl_stmt|;
name|whatsThisButton
operator|->
name|setText
argument_list|(
name|tr
argument_list|(
literal|"What's This?"
argument_list|)
argument_list|)
expr_stmt|;
name|whatsThisButton
operator|->
name|setCheckable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|// Layouts
name|QHBoxLayout
modifier|*
name|mainLayout
init|=
operator|new
name|QHBoxLayout
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|mainLayout
operator|->
name|addWidget
argument_list|(
name|m_renderer
argument_list|)
expr_stmt|;
name|mainLayout
operator|->
name|addWidget
argument_list|(
name|mainGroup
argument_list|)
expr_stmt|;
name|mainGroup
operator|->
name|setFixedWidth
argument_list|(
literal|180
argument_list|)
expr_stmt|;
name|QVBoxLayout
modifier|*
name|mainGroupLayout
init|=
operator|new
name|QVBoxLayout
argument_list|(
name|mainGroup
argument_list|)
decl_stmt|;
name|mainGroupLayout
operator|->
name|addWidget
argument_list|(
name|editorGroup
argument_list|)
expr_stmt|;
name|mainGroupLayout
operator|->
name|addWidget
argument_list|(
name|typeGroup
argument_list|)
expr_stmt|;
name|mainGroupLayout
operator|->
name|addWidget
argument_list|(
name|spreadGroup
argument_list|)
expr_stmt|;
name|mainGroupLayout
operator|->
name|addWidget
argument_list|(
name|defaultsGroup
argument_list|)
expr_stmt|;
name|mainGroupLayout
operator|->
name|addStretch
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|mainGroupLayout
operator|->
name|addWidget
argument_list|(
name|showSourceButton
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|QT_OPENGL_SUPPORT
name|mainGroupLayout
operator|->
name|addWidget
argument_list|(
name|enableOpenGLButton
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|mainGroupLayout
operator|->
name|addWidget
argument_list|(
name|whatsThisButton
argument_list|)
expr_stmt|;
name|QVBoxLayout
modifier|*
name|editorGroupLayout
init|=
operator|new
name|QVBoxLayout
argument_list|(
name|editorGroup
argument_list|)
decl_stmt|;
name|editorGroupLayout
operator|->
name|addWidget
argument_list|(
name|m_editor
argument_list|)
expr_stmt|;
name|QVBoxLayout
modifier|*
name|typeGroupLayout
init|=
operator|new
name|QVBoxLayout
argument_list|(
name|typeGroup
argument_list|)
decl_stmt|;
name|typeGroupLayout
operator|->
name|addWidget
argument_list|(
name|m_linearButton
argument_list|)
expr_stmt|;
name|typeGroupLayout
operator|->
name|addWidget
argument_list|(
name|m_radialButton
argument_list|)
expr_stmt|;
name|typeGroupLayout
operator|->
name|addWidget
argument_list|(
name|m_conicalButton
argument_list|)
expr_stmt|;
name|QVBoxLayout
modifier|*
name|spreadGroupLayout
init|=
operator|new
name|QVBoxLayout
argument_list|(
name|spreadGroup
argument_list|)
decl_stmt|;
name|spreadGroupLayout
operator|->
name|addWidget
argument_list|(
name|m_padSpreadButton
argument_list|)
expr_stmt|;
name|spreadGroupLayout
operator|->
name|addWidget
argument_list|(
name|m_repeatSpreadButton
argument_list|)
expr_stmt|;
name|spreadGroupLayout
operator|->
name|addWidget
argument_list|(
name|m_reflectSpreadButton
argument_list|)
expr_stmt|;
name|QHBoxLayout
modifier|*
name|defaultsGroupLayout
init|=
operator|new
name|QHBoxLayout
argument_list|(
name|defaultsGroup
argument_list|)
decl_stmt|;
name|defaultsGroupLayout
operator|->
name|addWidget
argument_list|(
name|default1Button
argument_list|)
expr_stmt|;
name|defaultsGroupLayout
operator|->
name|addWidget
argument_list|(
name|default2Button
argument_list|)
expr_stmt|;
name|defaultsGroupLayout
operator|->
name|addWidget
argument_list|(
name|default3Button
argument_list|)
expr_stmt|;
name|editorGroupLayout
operator|->
name|addWidget
argument_list|(
name|default4Button
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_editor
argument_list|,
name|SIGNAL
argument_list|(
name|gradientStopsChanged
argument_list|(
name|QGradientStops
argument_list|)
argument_list|)
argument_list|,
name|m_renderer
argument_list|,
name|SLOT
argument_list|(
name|setGradientStops
argument_list|(
name|QGradientStops
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_linearButton
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|,
name|m_renderer
argument_list|,
name|SLOT
argument_list|(
name|setLinearGradient
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_radialButton
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|,
name|m_renderer
argument_list|,
name|SLOT
argument_list|(
name|setRadialGradient
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_conicalButton
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|,
name|m_renderer
argument_list|,
name|SLOT
argument_list|(
name|setConicalGradient
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_padSpreadButton
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|,
name|m_renderer
argument_list|,
name|SLOT
argument_list|(
name|setPadSpread
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_reflectSpreadButton
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|,
name|m_renderer
argument_list|,
name|SLOT
argument_list|(
name|setReflectSpread
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_repeatSpreadButton
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|,
name|m_renderer
argument_list|,
name|SLOT
argument_list|(
name|setRepeatSpread
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|default1Button
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|setDefault1
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|default2Button
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|setDefault2
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|default3Button
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|setDefault3
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|default4Button
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|setDefault4
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|showSourceButton
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|,
name|m_renderer
argument_list|,
name|SLOT
argument_list|(
name|showSource
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|QT_OPENGL_SUPPORT
name|connect
argument_list|(
name|enableOpenGLButton
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|,
name|m_renderer
argument_list|,
name|SLOT
argument_list|(
name|enableOpenGL
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|connect
argument_list|(
name|whatsThisButton
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|,
name|m_renderer
argument_list|,
name|SLOT
argument_list|(
name|setDescriptionEnabled
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|whatsThisButton
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|,
name|m_renderer
operator|->
name|hoverPoints
argument_list|()
argument_list|,
name|SLOT
argument_list|(
name|setDisabled
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_renderer
argument_list|,
name|SIGNAL
argument_list|(
name|descriptionEnabledChanged
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|,
name|whatsThisButton
argument_list|,
name|SLOT
argument_list|(
name|setChecked
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_renderer
argument_list|,
name|SIGNAL
argument_list|(
name|descriptionEnabledChanged
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|,
name|m_renderer
operator|->
name|hoverPoints
argument_list|()
argument_list|,
name|SLOT
argument_list|(
name|setDisabled
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|m_renderer
operator|->
name|loadSourceFile
argument_list|(
literal|":res/gradients/gradients.cpp"
argument_list|)
expr_stmt|;
name|m_renderer
operator|->
name|loadDescription
argument_list|(
literal|":res/gradients/gradients.html"
argument_list|)
expr_stmt|;
name|QTimer
operator|::
name|singleShot
argument_list|(
literal|50
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|setDefault1
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_function
DECL|function|setDefault
name|void
name|GradientWidget
operator|::
name|setDefault
parameter_list|(
name|int
name|config
parameter_list|)
block|{
name|QGradientStops
name|stops
decl_stmt|;
name|QPolygonF
name|points
decl_stmt|;
switch|switch
condition|(
name|config
condition|)
block|{
case|case
literal|1
case|:
name|stops
operator|<<
name|QGradientStop
argument_list|(
literal|0.00
argument_list|,
name|QColor
operator|::
name|fromRgba
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|stops
operator|<<
name|QGradientStop
argument_list|(
literal|0.04
argument_list|,
name|QColor
operator|::
name|fromRgba
argument_list|(
literal|0xff131360
argument_list|)
argument_list|)
expr_stmt|;
name|stops
operator|<<
name|QGradientStop
argument_list|(
literal|0.08
argument_list|,
name|QColor
operator|::
name|fromRgba
argument_list|(
literal|0xff202ccc
argument_list|)
argument_list|)
expr_stmt|;
name|stops
operator|<<
name|QGradientStop
argument_list|(
literal|0.42
argument_list|,
name|QColor
operator|::
name|fromRgba
argument_list|(
literal|0xff93d3f9
argument_list|)
argument_list|)
expr_stmt|;
name|stops
operator|<<
name|QGradientStop
argument_list|(
literal|0.51
argument_list|,
name|QColor
operator|::
name|fromRgba
argument_list|(
literal|0xffb3e6ff
argument_list|)
argument_list|)
expr_stmt|;
name|stops
operator|<<
name|QGradientStop
argument_list|(
literal|0.73
argument_list|,
name|QColor
operator|::
name|fromRgba
argument_list|(
literal|0xffffffec
argument_list|)
argument_list|)
expr_stmt|;
name|stops
operator|<<
name|QGradientStop
argument_list|(
literal|0.92
argument_list|,
name|QColor
operator|::
name|fromRgba
argument_list|(
literal|0xff5353d9
argument_list|)
argument_list|)
expr_stmt|;
name|stops
operator|<<
name|QGradientStop
argument_list|(
literal|0.96
argument_list|,
name|QColor
operator|::
name|fromRgba
argument_list|(
literal|0xff262666
argument_list|)
argument_list|)
expr_stmt|;
name|stops
operator|<<
name|QGradientStop
argument_list|(
literal|1.00
argument_list|,
name|QColor
operator|::
name|fromRgba
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|m_linearButton
operator|->
name|animateClick
argument_list|()
expr_stmt|;
name|m_repeatSpreadButton
operator|->
name|animateClick
argument_list|()
expr_stmt|;
break|break;
case|case
literal|2
case|:
name|stops
operator|<<
name|QGradientStop
argument_list|(
literal|0.00
argument_list|,
name|QColor
operator|::
name|fromRgba
argument_list|(
literal|0xffffffff
argument_list|)
argument_list|)
expr_stmt|;
name|stops
operator|<<
name|QGradientStop
argument_list|(
literal|0.11
argument_list|,
name|QColor
operator|::
name|fromRgba
argument_list|(
literal|0xfff9ffa0
argument_list|)
argument_list|)
expr_stmt|;
name|stops
operator|<<
name|QGradientStop
argument_list|(
literal|0.13
argument_list|,
name|QColor
operator|::
name|fromRgba
argument_list|(
literal|0xfff9ff99
argument_list|)
argument_list|)
expr_stmt|;
name|stops
operator|<<
name|QGradientStop
argument_list|(
literal|0.14
argument_list|,
name|QColor
operator|::
name|fromRgba
argument_list|(
literal|0xfff3ff86
argument_list|)
argument_list|)
expr_stmt|;
name|stops
operator|<<
name|QGradientStop
argument_list|(
literal|0.49
argument_list|,
name|QColor
operator|::
name|fromRgba
argument_list|(
literal|0xff93b353
argument_list|)
argument_list|)
expr_stmt|;
name|stops
operator|<<
name|QGradientStop
argument_list|(
literal|0.87
argument_list|,
name|QColor
operator|::
name|fromRgba
argument_list|(
literal|0xff264619
argument_list|)
argument_list|)
expr_stmt|;
name|stops
operator|<<
name|QGradientStop
argument_list|(
literal|0.96
argument_list|,
name|QColor
operator|::
name|fromRgba
argument_list|(
literal|0xff0c1306
argument_list|)
argument_list|)
expr_stmt|;
name|stops
operator|<<
name|QGradientStop
argument_list|(
literal|1.00
argument_list|,
name|QColor
operator|::
name|fromRgba
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|m_radialButton
operator|->
name|animateClick
argument_list|()
expr_stmt|;
name|m_padSpreadButton
operator|->
name|animateClick
argument_list|()
expr_stmt|;
break|break;
case|case
literal|3
case|:
name|stops
operator|<<
name|QGradientStop
argument_list|(
literal|0.00
argument_list|,
name|QColor
operator|::
name|fromRgba
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|stops
operator|<<
name|QGradientStop
argument_list|(
literal|0.10
argument_list|,
name|QColor
operator|::
name|fromRgba
argument_list|(
literal|0xffe0cc73
argument_list|)
argument_list|)
expr_stmt|;
name|stops
operator|<<
name|QGradientStop
argument_list|(
literal|0.17
argument_list|,
name|QColor
operator|::
name|fromRgba
argument_list|(
literal|0xffc6a006
argument_list|)
argument_list|)
expr_stmt|;
name|stops
operator|<<
name|QGradientStop
argument_list|(
literal|0.46
argument_list|,
name|QColor
operator|::
name|fromRgba
argument_list|(
literal|0xff600659
argument_list|)
argument_list|)
expr_stmt|;
name|stops
operator|<<
name|QGradientStop
argument_list|(
literal|0.72
argument_list|,
name|QColor
operator|::
name|fromRgba
argument_list|(
literal|0xff0680ac
argument_list|)
argument_list|)
expr_stmt|;
name|stops
operator|<<
name|QGradientStop
argument_list|(
literal|0.92
argument_list|,
name|QColor
operator|::
name|fromRgba
argument_list|(
literal|0xffb9d9e6
argument_list|)
argument_list|)
expr_stmt|;
name|stops
operator|<<
name|QGradientStop
argument_list|(
literal|1.00
argument_list|,
name|QColor
operator|::
name|fromRgba
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|m_conicalButton
operator|->
name|animateClick
argument_list|()
expr_stmt|;
name|m_padSpreadButton
operator|->
name|animateClick
argument_list|()
expr_stmt|;
break|break;
case|case
literal|4
case|:
name|stops
operator|<<
name|QGradientStop
argument_list|(
literal|0.00
argument_list|,
name|QColor
operator|::
name|fromRgba
argument_list|(
literal|0xff000000
argument_list|)
argument_list|)
expr_stmt|;
name|stops
operator|<<
name|QGradientStop
argument_list|(
literal|1.00
argument_list|,
name|QColor
operator|::
name|fromRgba
argument_list|(
literal|0xffffffff
argument_list|)
argument_list|)
expr_stmt|;
break|break;
default|default:
name|qWarning
argument_list|(
literal|"bad default: %d\n"
argument_list|,
name|config
argument_list|)
expr_stmt|;
break|break;
block|}
name|QPolygonF
name|pts
decl_stmt|;
name|int
name|h_off
init|=
name|m_renderer
operator|->
name|width
argument_list|()
operator|/
literal|10
decl_stmt|;
name|int
name|v_off
init|=
name|m_renderer
operator|->
name|height
argument_list|()
operator|/
literal|8
decl_stmt|;
name|pts
operator|<<
name|QPointF
argument_list|(
name|m_renderer
operator|->
name|width
argument_list|()
operator|/
literal|2
argument_list|,
name|m_renderer
operator|->
name|height
argument_list|()
operator|/
literal|2
argument_list|)
operator|<<
name|QPointF
argument_list|(
name|m_renderer
operator|->
name|width
argument_list|()
operator|/
literal|2
operator|-
name|h_off
argument_list|,
name|m_renderer
operator|->
name|height
argument_list|()
operator|/
literal|2
operator|-
name|v_off
argument_list|)
expr_stmt|;
name|m_editor
operator|->
name|setGradientStops
argument_list|(
name|stops
argument_list|)
expr_stmt|;
name|m_renderer
operator|->
name|hoverPoints
argument_list|()
operator|->
name|setPoints
argument_list|(
name|pts
argument_list|)
expr_stmt|;
name|m_renderer
operator|->
name|setGradientStops
argument_list|(
name|stops
argument_list|)
expr_stmt|;
block|}
end_function
begin_constructor
DECL|function|GradientRenderer
name|GradientRenderer
operator|::
name|GradientRenderer
parameter_list|(
name|QWidget
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|ArthurFrame
argument_list|(
name|parent
argument_list|)
block|{
name|m_hoverPoints
operator|=
operator|new
name|HoverPoints
argument_list|(
name|this
argument_list|,
name|HoverPoints
operator|::
name|CircleShape
argument_list|)
expr_stmt|;
name|m_hoverPoints
operator|->
name|setPointSize
argument_list|(
name|QSize
argument_list|(
literal|20
argument_list|,
literal|20
argument_list|)
argument_list|)
expr_stmt|;
name|m_hoverPoints
operator|->
name|setConnectionType
argument_list|(
name|HoverPoints
operator|::
name|NoConnection
argument_list|)
expr_stmt|;
name|m_hoverPoints
operator|->
name|setEditable
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QVector
argument_list|<
name|QPointF
argument_list|>
name|points
decl_stmt|;
name|points
operator|<<
name|QPointF
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|QPointF
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|m_hoverPoints
operator|->
name|setPoints
argument_list|(
name|points
argument_list|)
expr_stmt|;
name|m_spread
operator|=
name|QGradient
operator|::
name|PadSpread
expr_stmt|;
name|m_gradientType
operator|=
name|Qt
operator|::
name|LinearGradientPattern
expr_stmt|;
block|}
end_constructor
begin_function
DECL|function|setGradientStops
name|void
name|GradientRenderer
operator|::
name|setGradientStops
parameter_list|(
specifier|const
name|QGradientStops
modifier|&
name|stops
parameter_list|)
block|{
name|m_stops
operator|=
name|stops
expr_stmt|;
name|update
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|mousePressEvent
name|void
name|GradientRenderer
operator|::
name|mousePressEvent
parameter_list|(
name|QMouseEvent
modifier|*
parameter_list|)
block|{
name|setDescriptionEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|paint
name|void
name|GradientRenderer
operator|::
name|paint
parameter_list|(
name|QPainter
modifier|*
name|p
parameter_list|)
block|{
name|QPolygonF
name|pts
init|=
name|m_hoverPoints
operator|->
name|points
argument_list|()
decl_stmt|;
name|QGradient
name|g
decl_stmt|;
if|if
condition|(
name|m_gradientType
operator|==
name|Qt
operator|::
name|LinearGradientPattern
condition|)
block|{
name|g
operator|=
name|QLinearGradient
argument_list|(
name|pts
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
name|pts
operator|.
name|at
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|m_gradientType
operator|==
name|Qt
operator|::
name|RadialGradientPattern
condition|)
block|{
name|g
operator|=
name|QRadialGradient
argument_list|(
name|pts
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
name|qMin
argument_list|(
name|width
argument_list|()
argument_list|,
name|height
argument_list|()
argument_list|)
operator|/
literal|3.0
argument_list|,
name|pts
operator|.
name|at
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QLineF
name|l
argument_list|(
name|pts
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
name|pts
operator|.
name|at
argument_list|(
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|qreal
name|angle
init|=
name|l
operator|.
name|angle
argument_list|(
name|QLineF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|l
operator|.
name|dy
argument_list|()
operator|>
literal|0
condition|)
name|angle
operator|=
literal|360
operator|-
name|angle
expr_stmt|;
name|g
operator|=
name|QConicalGradient
argument_list|(
name|pts
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
name|angle
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|m_stops
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
name|g
operator|.
name|setColorAt
argument_list|(
name|m_stops
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|.
name|first
argument_list|,
name|m_stops
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|.
name|second
argument_list|)
expr_stmt|;
name|g
operator|.
name|setSpread
argument_list|(
name|m_spread
argument_list|)
expr_stmt|;
name|p
operator|->
name|setBrush
argument_list|(
name|g
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawRect
argument_list|(
name|rect
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
end_unit
