begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/ ** ** This file is part of the qmake application of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|WINMAKEFILE_H
end_ifndef
begin_define
DECL|macro|WINMAKEFILE_H
define|#
directive|define
name|WINMAKEFILE_H
end_define
begin_include
include|#
directive|include
file|"makefile.h"
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
name|class
name|Win32MakefileGenerator
range|:
name|public
name|MakefileGenerator
block|{
name|public
operator|:
name|Win32MakefileGenerator
argument_list|()
block|;
operator|~
name|Win32MakefileGenerator
argument_list|()
block|;
name|protected
operator|:
name|virtual
name|QString
name|defaultInstall
argument_list|(
specifier|const
name|QString
operator|&
argument_list|)
block|;
name|virtual
name|void
name|writeCleanParts
argument_list|(
name|QTextStream
operator|&
name|t
argument_list|)
block|;
name|virtual
name|void
name|writeStandardParts
argument_list|(
name|QTextStream
operator|&
name|t
argument_list|)
block|;
name|virtual
name|void
name|writeIncPart
argument_list|(
name|QTextStream
operator|&
name|t
argument_list|)
block|;
name|virtual
name|void
name|writeLibsPart
argument_list|(
name|QTextStream
operator|&
name|t
argument_list|)
block|;
name|virtual
name|void
name|writeObjectsPart
argument_list|(
name|QTextStream
operator|&
name|t
argument_list|)
block|;
name|virtual
name|void
name|writeImplicitRulesPart
argument_list|(
name|QTextStream
operator|&
name|t
argument_list|)
block|;
name|virtual
name|void
name|writeBuildRulesPart
argument_list|(
name|QTextStream
operator|&
argument_list|)
block|;
name|virtual
name|QString
name|escapeFilePath
argument_list|(
argument|const QString&path
argument_list|)
specifier|const
block|;
name|ProString
name|escapeFilePath
argument_list|(
argument|const ProString&path
argument_list|)
specifier|const
block|{
return|return
name|MakefileGenerator
operator|::
name|escapeFilePath
argument_list|(
name|path
argument_list|)
return|;
block|}
name|virtual
name|void
name|writeRcFilePart
argument_list|(
name|QTextStream
operator|&
name|t
argument_list|)
block|;
name|int
name|findHighestVersion
argument_list|(
specifier|const
name|QString
operator|&
name|dir
argument_list|,
specifier|const
name|QString
operator|&
name|stem
argument_list|,
specifier|const
name|QString
operator|&
name|ext
operator|=
name|QLatin1String
argument_list|(
literal|"lib"
argument_list|)
argument_list|)
block|;
name|virtual
name|bool
name|findLibraries
argument_list|()
block|;
name|virtual
name|void
name|processPrlFiles
argument_list|()
block|;
name|void
name|processVars
argument_list|()
block|;
name|void
name|fixTargetExt
argument_list|()
block|;
name|void
name|processRcFileVar
argument_list|()
block|;
name|virtual
name|QString
name|getLibTarget
argument_list|()
block|; }
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|~Win32MakefileGenerator
specifier|inline
name|Win32MakefileGenerator
operator|::
operator|~
name|Win32MakefileGenerator
argument_list|()
block|{ }
name|QT_END_NAMESPACE
end_expr_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// WINMAKEFILE_H
end_comment
end_unit
