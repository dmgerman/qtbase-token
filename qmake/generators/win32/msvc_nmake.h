begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the qmake application of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia. For licensing terms and ** conditions see http://qt.digia.com/licensing. For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights. These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|MSVC_NMAKE_H
end_ifndef
begin_define
DECL|macro|MSVC_NMAKE_H
define|#
directive|define
name|MSVC_NMAKE_H
end_define
begin_include
include|#
directive|include
file|"winmakefile.h"
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
name|class
name|NmakeMakefileGenerator
range|:
name|public
name|Win32MakefileGenerator
block|{
name|void
name|writeNmakeParts
argument_list|(
name|QTextStream
operator|&
argument_list|)
block|;
name|bool
name|writeMakefile
argument_list|(
name|QTextStream
operator|&
argument_list|)
block|;
name|void
name|writeImplicitRulesPart
argument_list|(
name|QTextStream
operator|&
name|t
argument_list|)
block|;
name|void
name|writeBuildRulesPart
argument_list|(
name|QTextStream
operator|&
name|t
argument_list|)
block|;
name|void
name|writeLinkCommand
argument_list|(
name|QTextStream
operator|&
name|t
argument_list|,
specifier|const
name|QString
operator|&
name|extraFlags
operator|=
name|QString
argument_list|()
argument_list|,
specifier|const
name|QString
operator|&
name|extraInlineFileContent
operator|=
name|QString
argument_list|()
argument_list|)
block|;
name|int
name|msvcVersion
argument_list|()
specifier|const
block|;
name|void
name|init
argument_list|()
block|;
specifier|static
name|QStringList
name|sourceFilesForImplicitRulesFilter
argument_list|()
block|;
name|protected
operator|:
name|virtual
name|void
name|writeSubMakeCall
argument_list|(
name|QTextStream
operator|&
name|t
argument_list|,
specifier|const
name|QString
operator|&
name|callPrefix
argument_list|,
specifier|const
name|QString
operator|&
name|makeArguments
argument_list|)
block|;
name|virtual
name|QString
name|getPdbTarget
argument_list|()
block|;
name|virtual
name|QString
name|defaultInstall
argument_list|(
specifier|const
name|QString
operator|&
name|t
argument_list|)
block|;
name|virtual
name|QStringList
operator|&
name|findDependencies
argument_list|(
specifier|const
name|QString
operator|&
name|file
argument_list|)
block|;
name|QString
name|var
argument_list|(
argument|const ProKey&value
argument_list|)
specifier|const
block|;
name|QString
name|precompH
block|,
name|precompObj
block|,
name|precompPch
block|;
name|bool
name|usePCH
block|;
name|public
operator|:
name|NmakeMakefileGenerator
argument_list|()
block|;
operator|~
name|NmakeMakefileGenerator
argument_list|()
block|;  }
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|~NmakeMakefileGenerator
specifier|inline
name|NmakeMakefileGenerator
operator|::
operator|~
name|NmakeMakefileGenerator
argument_list|()
block|{ }
name|QT_END_NAMESPACE
end_expr_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// MSVC_NMAKE_H
end_comment
end_unit
