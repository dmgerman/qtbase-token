begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the tools applications of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|CE_SDK_HANDLER_INCL
end_ifndef
begin_define
DECL|macro|CE_SDK_HANDLER_INCL
define|#
directive|define
name|CE_SDK_HANDLER_INCL
end_define
begin_include
include|#
directive|include
file|<qstringlist.h>
end_include
begin_include
include|#
directive|include
file|<qdir.h>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
name|class
name|CeSdkInfo
block|{
name|public
label|:
name|CeSdkInfo
argument_list|()
expr_stmt|;
specifier|inline
name|QString
name|name
argument_list|()
specifier|const
block|{
return|return
name|m_name
return|;
block|}
specifier|inline
name|QString
name|binPath
argument_list|()
specifier|const
block|{
return|return
name|m_bin
return|;
block|}
specifier|inline
name|QString
name|includePath
argument_list|()
specifier|const
block|{
return|return
name|m_include
return|;
block|}
specifier|inline
name|QString
name|libPath
argument_list|()
specifier|const
block|{
return|return
name|m_lib
return|;
block|}
specifier|inline
name|bool
name|isValid
argument_list|()
specifier|const
expr_stmt|;
specifier|inline
name|int
name|majorVersion
argument_list|()
specifier|const
block|{
return|return
name|m_major
return|;
block|}
specifier|inline
name|int
name|minorVersion
argument_list|()
specifier|const
block|{
return|return
name|m_minor
return|;
block|}
specifier|inline
name|bool
name|isSupported
argument_list|()
specifier|const
block|{
return|return
name|m_major
operator|>=
literal|5
return|;
block|}
name|private
label|:
name|friend
name|class
name|CeSdkHandler
decl_stmt|;
name|QString
name|m_name
decl_stmt|;
name|QString
name|m_bin
decl_stmt|;
name|QString
name|m_include
decl_stmt|;
name|QString
name|m_lib
decl_stmt|;
name|int
name|m_major
decl_stmt|;
name|int
name|m_minor
decl_stmt|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_expr_stmt
DECL|function|isValid
name|bool
name|CeSdkInfo
operator|::
name|isValid
argument_list|()
specifier|const
block|{
return|return
operator|!
name|m_name
operator|.
name|isEmpty
argument_list|()
operator|&&
operator|!
name|m_bin
operator|.
name|isEmpty
argument_list|()
operator|&&
operator|!
name|m_include
operator|.
name|isEmpty
argument_list|()
operator|&&
operator|!
name|m_lib
operator|.
name|isEmpty
argument_list|()
return|;
block|}
end_expr_stmt
begin_decl_stmt
name|class
name|CeSdkHandler
block|{
name|public
label|:
name|CeSdkHandler
argument_list|()
expr_stmt|;
name|bool
name|retrieveAvailableSDKs
parameter_list|()
function_decl|;
specifier|inline
name|QList
operator|<
name|CeSdkInfo
operator|>
name|listAll
argument_list|()
specifier|const
block|{
return|return
name|m_list
return|;
block|}
name|private
label|:
name|void
name|retrieveWEC6n7SDKs
parameter_list|()
function_decl|;
name|void
name|retrieveWEC2013SDKs
parameter_list|()
function_decl|;
specifier|inline
name|QString
name|fixPaths
argument_list|(
specifier|const
name|QString
operator|&
name|path
argument_list|)
decl|const
decl_stmt|;
name|QStringList
name|getMsBuildToolPaths
argument_list|()
specifier|const
expr_stmt|;
name|QStringList
name|filterMsBuildToolPaths
argument_list|(
specifier|const
name|QStringList
operator|&
name|paths
argument_list|)
decl|const
decl_stmt|;
name|bool
name|parseMsBuildFile
parameter_list|(
name|QFile
modifier|*
name|file
parameter_list|,
name|CeSdkInfo
modifier|*
name|info
parameter_list|)
function_decl|;
name|bool
name|retrieveEnvironment
parameter_list|(
specifier|const
name|QStringList
modifier|&
name|relativePaths
parameter_list|,
specifier|const
name|QStringList
modifier|&
name|toolPaths
parameter_list|,
name|CeSdkInfo
modifier|*
name|info
parameter_list|)
function_decl|;
name|QList
operator|<
name|CeSdkInfo
operator|>
name|m_list
expr_stmt|;
name|QString
name|m_vcInstallDir
decl_stmt|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
end_unit
