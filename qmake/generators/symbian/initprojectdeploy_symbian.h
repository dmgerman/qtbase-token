begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the qmake application of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|INITPROJECTDEPLOYSYMBIAN_H
end_ifndef
begin_define
DECL|macro|INITPROJECTDEPLOYSYMBIAN_H
define|#
directive|define
name|INITPROJECTDEPLOYSYMBIAN_H
end_define
begin_include
include|#
directive|include
file|<qstring.h>
end_include
begin_include
include|#
directive|include
file|<qstringlist.h>
end_include
begin_include
include|#
directive|include
file|<qdatetime.h>
end_include
begin_include
include|#
directive|include
file|<option.h>
end_include
begin_include
include|#
directive|include
file|<qdir.h>
end_include
begin_include
include|#
directive|include
file|<qfile.h>
end_include
begin_include
include|#
directive|include
file|<stdlib.h>
end_include
begin_define
DECL|macro|PLUGIN_STUB_DIR
define|#
directive|define
name|PLUGIN_STUB_DIR
value|"qmakepluginstubs"
end_define
begin_define
DECL|macro|ROM_DEPLOYMENT_PLATFORM
define|#
directive|define
name|ROM_DEPLOYMENT_PLATFORM
value|"rom"
end_define
begin_define
DECL|macro|EMULATOR_DEPLOYMENT_PLATFORM
define|#
directive|define
name|EMULATOR_DEPLOYMENT_PLATFORM
value|"emulator"
end_define
begin_struct
DECL|struct|CopyItem
struct|struct
name|CopyItem
block|{
DECL|function|CopyItem
name|CopyItem
argument_list|(
specifier|const
name|QString
operator|&
name|f
argument_list|,
specifier|const
name|QString
operator|&
name|t
argument_list|)
operator|:
name|from
argument_list|(
name|f
argument_list|)
operator|,
name|to
argument_list|(
argument|t
argument_list|)
block|{ }
DECL|function|CopyItem
name|CopyItem
argument_list|(
specifier|const
name|QString
operator|&
name|f
argument_list|,
specifier|const
name|QString
operator|&
name|t
argument_list|,
specifier|const
name|QStringList
operator|&
name|l
argument_list|)
operator|:
name|from
argument_list|(
name|f
argument_list|)
operator|,
name|to
argument_list|(
name|t
argument_list|)
operator|,
name|flags
argument_list|(
argument|l
argument_list|)
block|{ }
DECL|member|from
name|QString
name|from
expr_stmt|;
DECL|member|to
name|QString
name|to
decl_stmt|;
DECL|member|flags
name|QStringList
name|flags
decl_stmt|;
block|}
struct|;
end_struct
begin_typedef
DECL|typedef|DeploymentList
typedef|typedef
name|QList
operator|<
name|CopyItem
operator|>
name|DeploymentList
expr_stmt|;
end_typedef
begin_function_decl
specifier|extern
name|QString
name|generate_uid
parameter_list|(
specifier|const
name|QString
modifier|&
name|target
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
specifier|extern
name|QString
name|generate_test_uid
parameter_list|(
specifier|const
name|QString
modifier|&
name|target
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
specifier|extern
name|void
name|initProjectDeploySymbian
parameter_list|(
name|QMakeProject
modifier|*
name|project
parameter_list|,
name|DeploymentList
modifier|&
name|deploymentList
parameter_list|,
specifier|const
name|QString
modifier|&
name|testPath
parameter_list|,
name|bool
name|deployBinaries
parameter_list|,
name|bool
name|epocBuild
parameter_list|,
specifier|const
name|QString
modifier|&
name|platform
parameter_list|,
specifier|const
name|QString
modifier|&
name|build
parameter_list|,
name|QStringList
modifier|&
name|generatedDirs
parameter_list|,
name|QStringList
modifier|&
name|generatedFiles
parameter_list|)
function_decl|;
end_function_decl
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// INITPROJECTDEPLOYSYMBIAN_H
end_comment
end_unit
