begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the qmake application of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|SYMMAKEFILE_H
end_ifndef
begin_define
DECL|macro|SYMMAKEFILE_H
define|#
directive|define
name|SYMMAKEFILE_H
end_define
begin_include
include|#
directive|include
file|"initprojectdeploy_symbian.h"
end_include
begin_include
include|#
directive|include
file|"symbiancommon.h"
end_include
begin_include
include|#
directive|include
file|<makefile.h>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
DECL|macro|BLD_INF_FILENAME
define|#
directive|define
name|BLD_INF_FILENAME
value|"bld.inf"
DECL|macro|MAKEFILE_DEPENDENCY_SEPARATOR
define|#
directive|define
name|MAKEFILE_DEPENDENCY_SEPARATOR
value|" \\\n\t"
DECL|macro|QT_EXTRA_INCLUDE_DIR
define|#
directive|define
name|QT_EXTRA_INCLUDE_DIR
value|"tmp"
DECL|macro|MAKE_CACHE_NAME
define|#
directive|define
name|MAKE_CACHE_NAME
value|".make.cache"
DECL|macro|SYMBIAN_TEST_CONFIG
define|#
directive|define
name|SYMBIAN_TEST_CONFIG
value|"symbian_test"
DECL|variable|MakefileGenerator
name|class
name|SymbianMakefileGenerator
range|:
name|public
name|MakefileGenerator
decl_stmt|,
name|public
name|SymbianCommonGenerator
block|{
name|protected
label|:
name|QString
name|platform
decl_stmt|;
name|QString
name|uid2
decl_stmt|;
name|QString
name|mmpFileName
decl_stmt|;
name|QMap
operator|<
name|QString
operator|,
name|QStringList
operator|>
name|sources
expr_stmt|;
name|QMap
operator|<
name|QString
operator|,
name|QStringList
operator|>
name|systeminclude
expr_stmt|;
name|QMap
operator|<
name|QString
operator|,
name|QStringList
operator|>
name|library
expr_stmt|;
comment|// (output file) (source , command)
name|QMap
operator|<
name|QString
operator|,
name|QStringList
operator|>
name|makmakeCommands
expr_stmt|;
name|QStringList
name|overriddenMmpKeywords
decl_stmt|;
name|QString
name|fixPathForMmp
parameter_list|(
specifier|const
name|QString
modifier|&
name|origPath
parameter_list|,
specifier|const
name|QDir
modifier|&
name|parentDir
parameter_list|)
function_decl|;
name|QString
name|absolutizePath
parameter_list|(
specifier|const
name|QString
modifier|&
name|origPath
parameter_list|)
function_decl|;
name|virtual
name|bool
name|writeMakefile
parameter_list|(
name|QTextStream
modifier|&
name|t
parameter_list|)
function_decl|;
name|virtual
name|void
name|init
parameter_list|()
function_decl|;
name|QString
name|getTargetExtension
parameter_list|()
function_decl|;
name|QString
name|generateUID3
parameter_list|()
function_decl|;
name|void
name|initMmpVariables
parameter_list|()
function_decl|;
name|void
name|generateMmpFileName
parameter_list|()
function_decl|;
name|void
name|handleMmpRulesOverrides
parameter_list|(
name|QString
modifier|&
name|checkString
parameter_list|,
name|bool
modifier|&
name|inResourceBlock
parameter_list|,
name|QStringList
modifier|&
name|restrictedMmpKeywords
parameter_list|,
specifier|const
name|QStringList
modifier|&
name|restrictableMmpKeywords
parameter_list|,
specifier|const
name|QStringList
modifier|&
name|overridableMmpKeywords
parameter_list|)
function_decl|;
name|void
name|appendKeywordIfMatchFound
parameter_list|(
name|QStringList
modifier|&
name|list
parameter_list|,
specifier|const
name|QStringList
modifier|&
name|keywordList
parameter_list|,
name|QString
modifier|&
name|checkString
parameter_list|)
function_decl|;
name|void
name|writeHeader
parameter_list|(
name|QTextStream
modifier|&
name|t
parameter_list|)
function_decl|;
name|void
name|writeBldInfContent
parameter_list|(
name|QTextStream
modifier|&
name|t
parameter_list|,
name|bool
name|addDeploymentExtension
parameter_list|,
specifier|const
name|QString
modifier|&
name|iconFile
parameter_list|)
function_decl|;
specifier|static
name|bool
name|removeDuplicatedStrings
parameter_list|(
name|QStringList
modifier|&
name|stringList
parameter_list|)
function_decl|;
name|void
name|writeMmpFileHeader
parameter_list|(
name|QTextStream
modifier|&
name|t
parameter_list|)
function_decl|;
name|void
name|writeMmpFile
parameter_list|(
name|QString
modifier|&
name|filename
parameter_list|,
specifier|const
name|SymbianLocalizationList
modifier|&
name|symbianLocalizationList
parameter_list|)
function_decl|;
name|void
name|writeMmpFileMacrosPart
parameter_list|(
name|QTextStream
modifier|&
name|t
parameter_list|)
function_decl|;
name|void
name|addMacro
parameter_list|(
name|QTextStream
modifier|&
name|t
parameter_list|,
specifier|const
name|QString
modifier|&
name|value
parameter_list|)
function_decl|;
name|void
name|writeMmpFileTargetPart
parameter_list|(
name|QTextStream
modifier|&
name|t
parameter_list|)
function_decl|;
name|void
name|writeMmpFileResourcePart
parameter_list|(
name|QTextStream
modifier|&
name|t
parameter_list|,
specifier|const
name|SymbianLocalizationList
modifier|&
name|symbianLocalizationList
parameter_list|)
function_decl|;
name|void
name|writeMmpFileSystemIncludePart
parameter_list|(
name|QTextStream
modifier|&
name|t
parameter_list|)
function_decl|;
name|void
name|writeMmpFileIncludePart
parameter_list|(
name|QTextStream
modifier|&
name|t
parameter_list|)
function_decl|;
name|void
name|writeMmpFileLibraryPart
parameter_list|(
name|QTextStream
modifier|&
name|t
parameter_list|)
function_decl|;
name|void
name|writeMmpFileCapabilityPart
parameter_list|(
name|QTextStream
modifier|&
name|t
parameter_list|)
function_decl|;
name|void
name|writeMmpFileConditionalOptions
parameter_list|(
name|QTextStream
modifier|&
name|t
parameter_list|,
specifier|const
name|QString
modifier|&
name|optionType
parameter_list|,
specifier|const
name|QString
modifier|&
name|optionTag
parameter_list|,
specifier|const
name|QString
modifier|&
name|variableBase
parameter_list|)
function_decl|;
name|void
name|writeMmpFileSimpleOption
parameter_list|(
name|QTextStream
modifier|&
name|t
parameter_list|,
specifier|const
name|QString
modifier|&
name|optionType
parameter_list|,
specifier|const
name|QString
modifier|&
name|optionTag
parameter_list|,
specifier|const
name|QString
modifier|&
name|options
parameter_list|)
function_decl|;
name|void
name|appendMmpFileOptions
parameter_list|(
name|QString
modifier|&
name|options
parameter_list|,
specifier|const
name|QStringList
modifier|&
name|list
parameter_list|)
function_decl|;
name|void
name|writeMmpFileCompilerOptionPart
parameter_list|(
name|QTextStream
modifier|&
name|t
parameter_list|)
function_decl|;
name|void
name|writeMmpFileBinaryVersionPart
parameter_list|(
name|QTextStream
modifier|&
name|t
parameter_list|)
function_decl|;
name|void
name|writeMmpFileRulesPart
parameter_list|(
name|QTextStream
modifier|&
name|t
parameter_list|)
function_decl|;
name|void
name|appendIfnotExist
parameter_list|(
name|QStringList
modifier|&
name|list
parameter_list|,
name|QString
name|value
parameter_list|)
function_decl|;
name|void
name|appendIfnotExist
parameter_list|(
name|QStringList
modifier|&
name|list
parameter_list|,
name|QStringList
name|values
parameter_list|)
function_decl|;
name|QString
name|removeTrailingPathSeparators
parameter_list|(
name|QString
modifier|&
name|file
parameter_list|)
function_decl|;
name|void
name|generateCleanCommands
parameter_list|(
name|QTextStream
modifier|&
name|t
parameter_list|,
specifier|const
name|QStringList
modifier|&
name|toClean
parameter_list|,
specifier|const
name|QString
modifier|&
name|cmd
parameter_list|,
specifier|const
name|QString
modifier|&
name|cmdOptions
parameter_list|,
specifier|const
name|QString
modifier|&
name|itemPrefix
parameter_list|,
specifier|const
name|QString
modifier|&
name|itemSuffix
parameter_list|)
function_decl|;
name|void
name|generateDistcleanTargets
parameter_list|(
name|QTextStream
modifier|&
name|t
parameter_list|)
function_decl|;
name|QString
name|generateLocFileTarget
parameter_list|(
name|QTextStream
modifier|&
name|t
parameter_list|,
specifier|const
name|QString
modifier|&
name|locCmd
parameter_list|)
function_decl|;
comment|// Subclass implements
name|virtual
name|void
name|writeBldInfExtensionRulesPart
parameter_list|(
name|QTextStream
modifier|&
name|t
parameter_list|,
specifier|const
name|QString
modifier|&
name|iconTargetFile
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|writeBldInfMkFilePart
parameter_list|(
name|QTextStream
modifier|&
name|t
parameter_list|,
name|bool
name|addDeploymentExtension
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|writeMkFile
parameter_list|(
specifier|const
name|QString
modifier|&
name|wrapperFileName
parameter_list|,
name|bool
name|deploymentOnly
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|writeWrapperMakefile
parameter_list|(
name|QFile
modifier|&
name|wrapperFile
parameter_list|,
name|bool
name|isPrimaryMakefile
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|void
name|appendAbldTempDirs
parameter_list|(
name|QStringList
modifier|&
name|sysincspaths
parameter_list|,
name|QString
name|includepath
parameter_list|)
init|=
literal|0
function_decl|;
name|public
label|:
name|SymbianMakefileGenerator
argument_list|()
expr_stmt|;
operator|~
name|SymbianMakefileGenerator
argument_list|()
expr_stmt|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// SYMMAKEFILE_H
end_comment
end_unit
