Qt 5.2 introduces many new features and improvements as well as bugfixes
over the 5.1.x series. For more details, refer to the online documentation
included in this distribution. The documentation is also available online:

  http://qt-project.org/doc/qt-5.2

The Qt version 5.2 series is binary compatible with the 5.1.x series.
Applications compiled for 5.1 will continue to run with 5.2.

Some of the changes listed in this file include issue tracking numbers
corresponding to tasks in the Qt Bug Tracker:

  http://bugreports.qt-project.org/

Each of these identifiers can be entered in the bug tracker to obtain more
information about a particular change.

****************************************************************************
*                          Library                                         *
****************************************************************************

QtWidgets
---------

- QAbstractScrollArea now has a SizeAdjustPolicy. If it is set to AdjustToContents
  it will make use of the new protected viewportSizeHint() (binary compatible since it
  was reserved in Qt5). This function returns a suggested size based on contents.

- QTreeView now has setTreePosition to allow the treestructure to show data from other
  columns than logicalindex zero.

- [QTBUG-4206] QTableView resizeToContents will now adjust to actual contents
  and not just visible area. QHeaderView::setAutoResizePrecision() has been
  introduced to control how precise the autoResize should be.

- QFileDialog::setDefaultSuffix() removes leading dot characters.

- QSizePolicy got a retainSizeWhenHidden attribute.

- [QTBUG-31602] QSpinBox size calculation will now be fixed when stylesheets are
  used.

QtCore
------
- [QTBUG-30250] QTime, QDateTime:
  When calling QTime::toString(Qt::TextDate) and QTime::toString(Qt::ISODate),
  milliseconds are now included in the returned string. This also applies to
  QDateTime::toString(Qt::TextDate) and QDateTime::toString(ISODate).

- QtAlgorithms
  With STL no longer being optional for building and using Qt, a number of parts
  of QtAlgorithms no longer make sense, and have therefore been deprecated.

  Replacements are available in the STL, and generally have much better
  performance, but are not instantly source-compatible in all cases. For
  instance, specialization of qLess or qSwap means that a direct port to
  std::sort from qSort may not be possible, as std::sort does not use any of
  them; a possible workaround is explicitly passing a qLess functor to
  std::sort:

      std::sort(container.begin(), container.end(), qLess<T>());

  The functions in QtAlgorithms that have been deprecated, along with their
  STL counterparts, are:
    - qBinaryFind (std::binary_search / std::lower_bound)
    - qCopy (std::copy)
    - qCopyBackward (std::copy_backward)
    - qEqual (std::equal)
    - qFill (std::fill)
    - qFind (std::find)
    - qCount (std::count)
    - qSort (std::sort)
    - qStableSort (std::stable_sort)
    - qLowerBound (std::lower_bound)
    - qUpperBound (std::upper_bound)
    - qLess (std::less)
    - qGreater (std::greater)

QtGui
-----
- [QTBUG-28228] Session Management:
  The new QPlatformSessionManager class brings back the session management
  functionality. It allows the implementation of platform specific behavior
  related to session management. For platform that don't support this
  feature the default behavior has not changed.
  Both X11 and Windows session management are supported.
