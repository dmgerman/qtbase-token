Some of the changes listed in this file include issue tracking numbers
corresponding to tasks in the Qt Bug Tracker:

  http://bugreports.qt.nokia.com/

Each of these identifiers can be entered in the bug tracker to obtain more
information about a particular change.


****************************************************************************
*                       Source incompatible changes                        *
****************************************************************************


- QSslCertificate::subjectInfo() and QSslCertificate::issuerInfo() now
  return a QStringList instead of a QString

- QSslCertificate::isValid() has been deprecated. Originally it only checked
  the certificate dates, but later checking for blacklisting was added. Now
  there's a more specific QSslCertificate::isBlacklisted() method.

- Unite clipping support has been removed from QPainter. The alternative is
  to unite QRegion's and using the result on QPainter.

- QLibrary::resolve() now returns a function pointer instead of a void
  pointer.

- QSslCertificate::alternateSubjectNames() is deprecated (but can be enabled
  via QT_DISABLE_DEPRECATED_BEFORE), use
  QSslCertificate::subjectAlternativeNames() instead.

- QLibraryInfo::buildKey() has been removed. Likewise, the QT_BUILD_KEY
  preprocessor #define has also been removed. The build-key is obsolete
  and is no longer necessary.

- QCoreApplication::translate() will no longer return the source text when
  the translation is empty. Use lrelease -removeidentical for optimization.
  
- Qt::escape() is deprecated (but can be enabled via
  QT_DISABLE_DEPRECATED_BEFORE), use QString::toHtmlEscaped() instead.

- QMetaType::construct() has been renamed to QMetaType::create().

- QTestLib:
  * The QTRY_VERIFY and QTRY_COMPARE macros have been moved into QTestLib.
    These macros formerly lived in tests/shared/util.h but are now provided
    by including the <QtTest/QtTest> header.
  * The QTEST_NOOP_MAIN macro has been removed from the API.  If a test is
    known at compile-time to be inapplicable for a particular build it should
    be omitted via .pro file logic, or the test should call QSKIP in the
    initTestCase() method to skip the entire test and report a meaningful
    explanation in the test log.
  * The DEPENDS_ON macro has been removed from the API.  This macro did nothing
    and misled some users to believe that they could make test functions depend
    on each other or impose an execution order on test functions.
  * The QSKIP macro no longer has the "mode" parameter, which caused problems
    for calculating test metrics, as the SkipAll mode hid information about
    what test data was skipped.  Calling QSKIP in a test function now behaves
    like SkipSingle -- skipping a non-data-driven test function or skipping
    only the current data row of a data-driven test function.  Every skipped
    data row is now reported in the test log.
  * The QTest::qExec(QObject*, const QStringList&) overload has been removed
    from the API.  This function was not used in any of Qt's autotests and did
    not provide significant benefits over QTest::qExec(QObject*, int, char**).

- The QSsl::TlsV1 enum value was renamed to QSsl::TlsV1_0 .

- QAccessible:
  * Internal QAccessible::State enum value HasInvokeExtension removed
- QAccessibleInterface:
  * The "child" integer parameters have been removed. This moves the api
    to be closer to IAccessible2.
    This means several functions lose their integer parameter:
    text(Text t, int child) -> text(Text t), rect(int child) -> rect()
    setText(Text t, int child, const QString &text) -> setText(Text t, const QString &text)
    role(int child) -> role(), state(int child) -> state()
    relationTo(int child, const QAccessibleInterface *other, int otherChild) ->
      relationTo(const QAccessibleInterface *other)
  * Accessible-Action related functions have been removed. QAccessibleInterface
    subclasses are expected to implement the QAccessibleActionInterface instead.
    These functions have been removed:
    QAccessibleInterface::userActionCount, QAccessibleInterface::actionText,
    QAccessibleInterface::doAction
- QAccessibleEvent also loses the child parameter.
    QAccessibleEvent(Type type, int child) -> QAccessibleEvent(Type type)
    QAccessibleEvent::child() removed.
- QAccessibleActionInterface:
  * Refactored to be based on action names. All functions have been changed from using
    int parameters to strings.

- QSound has been moved from QtGui to QtMultimedia

- QTouchEvent:

  * The DeviceType enum and deviceType() have been deprecated due to
    the introduction of QTouchDevice.

  * The signature of the constructor has changed. It now takes a
    QTouchDevice pointer instead of just a DeviceType value.

  * TouchPointState no longer includes TouchPointStateMask and
    TouchPointPrimary. The primary flag is now stored together with
    other touch point flags and is accessible through
    TouchPoint::isPrimary() or TouchPoint::flags(). As a result the
    internally used state mask is no longer necessary.

  * QWidget *widget() has been removed and is replaced by QObject
    *target() in order to avoid QWidget dependencies.

- QWindowSystemInterface:

  * The signature of all handleTouchEvent() variants have changed,
    taking a QTouchDevice* instead of just a DeviceType value.
    Platform or generic plug-ins have to create and register at least
    one QTouchDevice before sending the first touch event.

  * The event type parameter is removed from handleTouchEvent().

****************************************************************************
*                           General                                        *
****************************************************************************

General Improvements
--------------------

- The directory structure of the qtbase unit-tests has been reworked to
  more closely match the directory structure of the code under test.
  Integration tests have been moved to tests/auto/integrationtests.

Third party components
----------------------

-


****************************************************************************
*                          Library                                         *
****************************************************************************

QtCore
------
* drop a bogus QChar::NoCategory enum value; the proper QChar::Other_NotAssigned
  value is returned for an unassigned codepoints now.

* layoutAboutToBeChanged is no longer emitted by QAbstractItemModel::beginMoveRows.
  layoutChanged is no longer emitted by QAbstractItemModel::endMoveRows. Proxy models
  should now also connect to (and disconnect from) the rowsAboutToBeMoved and
  rowsMoved signals.

QtGui
-----
* Accessibility has been refactored. The hierachy of accessible objects is implemented via
  proper parent/child functions instead of using navigate which has been deprecated for this purpose.
  Table and cell interfaces have been added to qaccessible2.h

* Touch events and points have been extended to hold additional
  information like capability flags, point-specific flags, velocity,
  and raw positions.

QtWidgets
---------
* QWidget::setInputContext() is removed. Input contexts are now platform
  specific.

QtNetwork
---------
* QHostAddress::isLoopback() API added. Returns true if the address is
  one of the IP loopback addresses.

* QSslCertificate::serialNumber() now always returns the serial number in
  hexadecimal format.


QtOpenGL
--------

QtScript
--------


QTestLib
--------
* [QTBUG-20615] Autotests can now log test output to multiple destinations
  and log formats simultaneously.


****************************************************************************
*                          Database Drivers                                *
****************************************************************************


****************************************************************************
*                      Platform Specific Changes                           *
****************************************************************************

Qt for Linux/X11
----------------


Qt for Windows
--------------
* Accessibility framework uses IAccessible2


Qt for Mac OS X
---------------


Qt for Embedded Linux
---------------------


Qt for Windows CE
-----------------


****************************************************************************
*                      Compiler Specific Changes                           *
****************************************************************************


****************************************************************************
*                          Tools                                           *
****************************************************************************

- Build System

- Assistant

- Designer

- Linguist

- rcc


- moc

* [QTBUG-20785] The moc now has a -b<file> option to #include an additional
  file at the beginning of the generated file.


- uic


- uic3


- qmake

* QMAKE_MOC_OPTIONS variable is now available for passing additional parameters
  to the moc.


- configure


- qtconfig


****************************************************************************
*                          Plugins                                         *
****************************************************************************


****************************************************************************
*                   Important Behavior Changes                             *
****************************************************************************

