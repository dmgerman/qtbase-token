begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the tools applications of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtGui>
end_include
begin_include
include|#
directive|include
file|"s60themeconvert.h"
end_include
begin_function
DECL|function|help
name|int
name|help
parameter_list|()
block|{
name|qDebug
argument_list|()
operator|<<
literal|"Usage: s60theme [modeldir|theme.tdf] output.blob"
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
literal|""
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
literal|"Options:"
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
literal|"   modeldir:    Theme 'model' directory in Carbide.ui tree"
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
literal|"   theme.tdf:   Theme .tdf file"
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
literal|"   output.blob: Theme blob output filename"
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
literal|""
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
literal|"s60theme takes an S60 theme from Carbide.ui and converts"
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
literal|"it into a compact, binary format, that can be directly loaded by"
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
literal|"the QtS60Style."
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
literal|""
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
literal|"Visit http://www.forum.nokia.com for details about Carbide.ui"
expr_stmt|;
return|return
literal|1
return|;
block|}
end_function
begin_function
DECL|function|main
name|int
name|main
parameter_list|(
name|int
name|argc
parameter_list|,
name|char
modifier|*
name|argv
index|[]
parameter_list|)
block|{
if|if
condition|(
name|argc
operator|!=
literal|3
condition|)
return|return
name|help
argument_list|()
return|;
name|QApplication
name|app
argument_list|(
name|argc
argument_list|,
name|argv
argument_list|)
decl_stmt|;
specifier|const
name|QString
name|input
init|=
name|QString
operator|::
name|fromLatin1
argument_list|(
name|argv
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
specifier|const
name|QFileInfo
name|inputInfo
argument_list|(
name|input
argument_list|)
decl_stmt|;
specifier|const
name|QString
name|output
init|=
name|QString
operator|::
name|fromLatin1
argument_list|(
name|argv
index|[
literal|2
index|]
argument_list|)
decl_stmt|;
if|if
condition|(
name|inputInfo
operator|.
name|isDir
argument_list|()
condition|)
return|return
name|S60ThemeConvert
operator|::
name|convertDefaultThemeToBlob
argument_list|(
name|input
argument_list|,
name|output
argument_list|)
condition|?
literal|0
else|:
literal|1
return|;
elseif|else
if|if
condition|(
name|inputInfo
operator|.
name|suffix
argument_list|()
operator|.
name|compare
argument_list|(
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"tdf"
argument_list|)
argument_list|,
name|Qt
operator|::
name|CaseInsensitive
argument_list|)
operator|==
literal|0
condition|)
return|return
name|S60ThemeConvert
operator|::
name|convertTdfToBlob
argument_list|(
name|input
argument_list|,
name|output
argument_list|)
condition|?
literal|0
else|:
literal|1
return|;
return|return
name|help
argument_list|()
return|;
block|}
end_function
end_unit
