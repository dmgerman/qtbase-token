begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: http://www.qt-project.org/ ** ** This file is part of the utility applications of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_comment
comment|// INCLUDE FILES
end_comment
begin_include
include|#
directive|include
file|<avkon.rsg>
end_include
begin_include
include|#
directive|include
file|<avkon.hrh>
end_include
begin_include
include|#
directive|include
file|"pm_mapper.hrh"
end_include
begin_include
include|#
directive|include
file|"pm_mapperapp.h"
end_include
begin_include
include|#
directive|include
file|"pm_mapperview.h"
end_include
begin_include
include|#
directive|include
file|<pm_mapper.rsg>
end_include
begin_include
include|#
directive|include
file|<BldVariant.hrh>
end_include
begin_include
include|#
directive|include
file|<w32std.h>
end_include
begin_include
include|#
directive|include
file|<apgwgnam.h>
end_include
begin_include
include|#
directive|include
file|<eikstart.h>
end_include
begin_include
include|#
directive|include
file|<eikenv.h>
end_include
begin_include
include|#
directive|include
file|<f32file.h>
end_include
begin_include
include|#
directive|include
file|<avkon.hrh>
end_include
begin_include
include|#
directive|include
file|<aknenv.h>
end_include
begin_include
include|#
directive|include
file|<aknnotedialog.h>
end_include
begin_include
include|#
directive|include
file|<stringloader.h>
end_include
begin_include
include|#
directive|include
file|<coneresloader.h>
end_include
begin_include
include|#
directive|include
file|<aknglobalnote.h>
end_include
begin_include
include|#
directive|include
file|<CentralRepository.h>
end_include
begin_include
include|#
directive|include
file|<Aknsutils.h>
end_include
begin_include
include|#
directive|include
file|<AknUtils.h>
end_include
begin_include
include|#
directive|include
file|"pixel_metrics.h"
end_include
begin_include
include|#
directive|include
file|<avkon.mbg>
end_include
begin_include
include|#
directive|include
file|<AknLayoutConfig.h>
end_include
begin_include
include|#
directive|include
file|<aknsgcc.h>
end_include
begin_typedef
DECL|typedef|TMySmallBuffer
typedef|typedef
name|TBuf
argument_list|<
literal|2048
argument_list|>
name|TMySmallBuffer
typedef|;
end_typedef
begin_typedef
DECL|typedef|TMyBigBuffer
typedef|typedef
name|TBuf
argument_list|<
literal|8192
argument_list|>
name|TMyBigBuffer
typedef|;
end_typedef
begin_expr_stmt
name|_LIT
argument_list|(
name|KLayoutSourceFileAndPath
argument_list|,
literal|"\\private\\2002121f\\pm_layout.cpp"
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|_LIT
argument_list|(
name|KPixelMetricsDataFiles
argument_list|,
literal|"\\private\\2002121f\\*.txt"
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|_LIT
argument_list|(
name|KOpenBrace
argument_list|,
literal|"{"
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|_LIT
argument_list|(
name|KComma
argument_list|,
literal|","
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|_LIT
argument_list|(
name|KColon
argument_list|,
literal|":"
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|_LIT
argument_list|(
name|KTab
argument_list|,
literal|"\t"
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|_LIT
argument_list|(
name|KEndBraceWithCommaAndCRLF
argument_list|,
literal|"},\n"
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|_LIT
argument_list|(
name|KCRLF
argument_list|,
literal|"\n"
argument_list|)
expr_stmt|;
end_expr_stmt
begin_comment
comment|// Number of header lines in layout data.
end_comment
begin_decl_stmt
DECL|variable|KHeaderValues
specifier|const
name|TInt
name|KHeaderValues
init|=
literal|4
decl_stmt|;
end_decl_stmt
begin_comment
comment|// ============================ MEMBER FUNCTIONS ===============================
end_comment
begin_comment
comment|// -----------------------------------------------------------------------------
end_comment
begin_comment
comment|// C++ constructor can NOT contain any code, that
end_comment
begin_comment
comment|// might leave.
end_comment
begin_comment
comment|// -----------------------------------------------------------------------------
end_comment
begin_comment
comment|//
end_comment
begin_constructor
DECL|function|CPixelMetricsMapperAppUi
name|CPixelMetricsMapperAppUi
operator|::
name|CPixelMetricsMapperAppUi
parameter_list|()
member_init_list|:
name|iFileOutputOn
argument_list|(
name|EFalse
argument_list|)
block|{     }
end_constructor
begin_comment
comment|// -----------------------------------------------------------------------------
end_comment
begin_comment
comment|// Destructor.
end_comment
begin_comment
comment|// -----------------------------------------------------------------------------
end_comment
begin_comment
comment|//
end_comment
begin_destructor
DECL|function|~CPixelMetricsMapperAppUi
name|CPixelMetricsMapperAppUi
operator|::
name|~
name|CPixelMetricsMapperAppUi
parameter_list|()
block|{     }
end_destructor
begin_comment
comment|// -----------------------------------------------------------------------------
end_comment
begin_comment
comment|// Symbian 2nd phase constructor can leave.
end_comment
begin_comment
comment|// -----------------------------------------------------------------------------
end_comment
begin_comment
comment|//
end_comment
begin_function
DECL|function|ConstructL
name|void
name|CPixelMetricsMapperAppUi
operator|::
name|ConstructL
parameter_list|()
block|{
name|BaseConstructL
argument_list|()
expr_stmt|;
name|CEikonEnv
modifier|&
name|eikEnv
init|=
operator|*
name|CEikonEnv
operator|::
name|Static
argument_list|()
decl_stmt|;
name|eikEnv
operator|.
name|WsSession
argument_list|()
operator|.
name|ComputeMode
argument_list|(
name|RWsSession
operator|::
name|EPriorityControlDisabled
argument_list|)
expr_stmt|;
name|RThread
argument_list|()
operator|.
name|SetProcessPriority
argument_list|(
name|EPriorityHigh
argument_list|)
expr_stmt|;
name|CPixelMetricsMapperView
modifier|*
name|view
init|=
operator|new
operator|(
name|ELeave
operator|)
name|CPixelMetricsMapperView
decl_stmt|;
name|CleanupStack
operator|::
name|PushL
argument_list|(
name|view
argument_list|)
expr_stmt|;
name|view
operator|->
name|ConstructL
argument_list|()
expr_stmt|;
name|CleanupStack
operator|::
name|Pop
argument_list|()
expr_stmt|;
comment|// view
name|AddViewL
argument_list|(
name|view
argument_list|)
expr_stmt|;
comment|// transfer ownership to CAknViewAppUi
name|iView
operator|=
name|view
expr_stmt|;
block|}
end_function
begin_comment
comment|// -----------------------------------------------------------------------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// -----------------------------------------------------------------------------
end_comment
begin_comment
comment|//
end_comment
begin_function
DECL|function|HandleKeyEventL
name|TKeyResponse
name|CPixelMetricsMapperAppUi
operator|::
name|HandleKeyEventL
parameter_list|(
specifier|const
name|TKeyEvent
modifier|&
comment|/*aKeyEvent*/
parameter_list|,
name|TEventCode
comment|/*aType*/
parameter_list|)
block|{
return|return
name|EKeyWasNotConsumed
return|;
block|}
end_function
begin_comment
comment|// -----------------------------------------------------------------------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// -----------------------------------------------------------------------------
end_comment
begin_comment
comment|//
end_comment
begin_function
DECL|function|HandleCommandL
name|void
name|CPixelMetricsMapperAppUi
operator|::
name|HandleCommandL
parameter_list|(
name|TInt
name|aCommand
parameter_list|)
block|{
switch|switch
condition|(
name|aCommand
condition|)
block|{
case|case
name|EAknSoftkeyExit
case|:
case|case
name|EEikCmdExit
case|:
name|Exit
argument_list|()
expr_stmt|;
break|break;
case|case
name|ECmdSwitchOutput
case|:
block|{
name|HBufC
modifier|*
name|buffer
init|=
name|HBufC
operator|::
name|NewLC
argument_list|(
literal|100
argument_list|)
decl_stmt|;
name|TPtr
name|bufferPtr
init|=
name|buffer
operator|->
name|Des
argument_list|()
decl_stmt|;
name|TBool
name|last
init|=
name|ETrue
decl_stmt|;
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"Output switched to "
argument_list|)
argument_list|)
expr_stmt|;
name|iFileOutputOn
operator|=
operator|!
name|iFileOutputOn
expr_stmt|;
if|if
condition|(
name|iFileOutputOn
condition|)
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"file."
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"screen."
argument_list|)
argument_list|)
expr_stmt|;
name|ShowL
argument_list|(
operator|*
name|buffer
argument_list|,
name|last
argument_list|)
expr_stmt|;
name|CleanupStack
operator|::
name|PopAndDestroy
argument_list|(
name|buffer
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|ECmdStatus
case|:
block|{
name|ClearL
argument_list|()
expr_stmt|;
comment|// layout
name|HBufC
modifier|*
name|buffer
init|=
name|HBufC
operator|::
name|NewLC
argument_list|(
literal|100
argument_list|)
decl_stmt|;
name|TPtr
name|bufferPtr
init|=
name|buffer
operator|->
name|Des
argument_list|()
decl_stmt|;
name|TBool
name|last
init|=
name|ETrue
decl_stmt|;
comment|// Orientation
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"Orientation: "
argument_list|)
argument_list|)
expr_stmt|;
name|bufferPtr
operator|.
name|AppendNum
argument_list|(
operator|(
name|TInt
operator|)
name|iAvkonAppUi
operator|->
name|Orientation
argument_list|()
argument_list|)
expr_stmt|;
name|ShowL
argument_list|(
operator|*
name|buffer
argument_list|,
name|last
argument_list|)
expr_stmt|;
name|bufferPtr
operator|.
name|Zero
argument_list|()
expr_stmt|;
comment|// Output
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"Output: "
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|iFileOutputOn
condition|)
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"File"
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"Screen"
argument_list|)
argument_list|)
expr_stmt|;
name|ShowL
argument_list|(
operator|*
name|buffer
argument_list|,
name|last
argument_list|)
expr_stmt|;
name|bufferPtr
operator|.
name|Zero
argument_list|()
expr_stmt|;
name|CAknLayoutConfig
operator|::
name|TScreenMode
name|localAppScreenMode
init|=
name|CAknSgcClient
operator|::
name|ScreenMode
argument_list|()
decl_stmt|;
name|TInt
name|hashValue
init|=
name|localAppScreenMode
operator|.
name|ScreenStyleHash
argument_list|()
decl_stmt|;
name|TPixelsTwipsAndRotation
name|pixels
init|=
name|CAknSgcClient
operator|::
name|PixelsAndRotation
argument_list|()
decl_stmt|;
name|TSize
name|pixelSize
init|=
name|pixels
operator|.
name|iPixelSize
decl_stmt|;
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"LayoutName: "
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|(
name|pixelSize
operator|.
name|iWidth
operator|==
literal|320
operator|||
name|pixelSize
operator|.
name|iWidth
operator|==
literal|240
operator|)
operator|&&
operator|(
name|pixelSize
operator|.
name|iHeight
operator|==
literal|320
operator|||
name|pixelSize
operator|.
name|iHeight
operator|==
literal|240
operator|)
condition|)
block|{
if|if
condition|(
name|hashValue
operator|==
literal|0x996F7AA7
condition|)
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"QVGA2"
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"QVGA1"
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
operator|(
name|pixelSize
operator|.
name|iWidth
operator|==
literal|640
operator|||
name|pixelSize
operator|.
name|iWidth
operator|==
literal|360
operator|)
operator|&&
operator|(
name|pixelSize
operator|.
name|iHeight
operator|==
literal|360
operator|||
name|pixelSize
operator|.
name|iHeight
operator|==
literal|640
operator|)
condition|)
block|{
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"nHD"
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
operator|(
name|pixelSize
operator|.
name|iWidth
operator|==
literal|640
operator|||
name|pixelSize
operator|.
name|iWidth
operator|==
literal|480
operator|)
operator|&&
operator|(
name|pixelSize
operator|.
name|iHeight
operator|==
literal|480
operator|||
name|pixelSize
operator|.
name|iHeight
operator|==
literal|640
operator|)
condition|)
block|{
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"VGA"
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
operator|(
name|pixelSize
operator|.
name|iWidth
operator|==
literal|352
operator|||
name|pixelSize
operator|.
name|iWidth
operator|==
literal|800
operator|)
operator|&&
operator|(
name|pixelSize
operator|.
name|iHeight
operator|==
literal|800
operator|||
name|pixelSize
operator|.
name|iHeight
operator|==
literal|352
operator|)
condition|)
block|{
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"E90"
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
operator|(
name|pixelSize
operator|.
name|iWidth
operator|==
literal|320
operator|||
name|pixelSize
operator|.
name|iWidth
operator|==
literal|480
operator|||
name|pixelSize
operator|.
name|iWidth
operator|==
literal|240
operator|||
name|pixelSize
operator|.
name|iWidth
operator|==
literal|640
operator|)
operator|&&
operator|(
name|pixelSize
operator|.
name|iHeight
operator|==
literal|320
operator|||
name|pixelSize
operator|.
name|iHeight
operator|==
literal|480
operator|||
name|pixelSize
operator|.
name|iHeight
operator|==
literal|240
operator|||
name|pixelSize
operator|.
name|iHeight
operator|==
literal|640
operator|)
condition|)
block|{
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"HVGA"
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
operator|(
name|pixelSize
operator|.
name|iWidth
operator|==
literal|480
operator|||
name|pixelSize
operator|.
name|iWidth
operator|==
literal|854
operator|||
name|pixelSize
operator|.
name|iWidth
operator|==
literal|848
operator|||
name|pixelSize
operator|.
name|iWidth
operator|==
literal|800
operator|)
operator|&&
operator|(
name|pixelSize
operator|.
name|iHeight
operator|==
literal|800
operator|||
name|pixelSize
operator|.
name|iHeight
operator|==
literal|480
operator|||
name|pixelSize
operator|.
name|iHeight
operator|==
literal|848
operator|||
name|pixelSize
operator|.
name|iHeight
operator|==
literal|854
operator|)
condition|)
block|{
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"WVGA"
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"Unknown"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|ShowL
argument_list|(
operator|*
name|buffer
argument_list|,
name|last
argument_list|)
expr_stmt|;
name|bufferPtr
operator|.
name|Zero
argument_list|()
expr_stmt|;
name|CleanupStack
operator|::
name|PopAndDestroy
argument_list|(
name|buffer
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|ECmdSwitchOrientation
case|:
block|{
name|ClearL
argument_list|()
expr_stmt|;
name|HBufC
modifier|*
name|buffer
init|=
name|HBufC
operator|::
name|NewLC
argument_list|(
literal|100
argument_list|)
decl_stmt|;
name|TPtr
name|bufferPtr
init|=
name|buffer
operator|->
name|Des
argument_list|()
decl_stmt|;
name|TBool
name|last
init|=
name|ETrue
decl_stmt|;
ifndef|#
directive|ifndef
name|__SERIES60_31__
if|if
condition|(
operator|!
name|iAvkonAppUi
operator|->
name|OrientationCanBeChanged
argument_list|()
condition|)
block|{
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"Orientation cannot be changed."
argument_list|)
argument_list|)
expr_stmt|;
name|ShowL
argument_list|(
operator|*
name|buffer
argument_list|,
name|last
argument_list|)
expr_stmt|;
name|bufferPtr
operator|.
name|Zero
argument_list|()
expr_stmt|;
name|CleanupStack
operator|::
name|PopAndDestroy
argument_list|(
name|buffer
argument_list|)
expr_stmt|;
break|break;
block|}
endif|#
directive|endif
comment|//__SERIES60_31__
if|if
condition|(
name|iAvkonAppUi
operator|->
name|Orientation
argument_list|()
operator|==
name|CAknAppUiBase
operator|::
name|EAppUiOrientationPortrait
condition|)
block|{
name|iAvkonAppUi
operator|->
name|SetOrientationL
argument_list|(
name|CAknAppUiBase
operator|::
name|EAppUiOrientationLandscape
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|iAvkonAppUi
operator|->
name|Orientation
argument_list|()
operator|==
name|CAknAppUiBase
operator|::
name|EAppUiOrientationLandscape
condition|)
block|{
name|iAvkonAppUi
operator|->
name|SetOrientationL
argument_list|(
name|CAknAppUiBase
operator|::
name|EAppUiOrientationPortrait
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// unspecified
name|iAvkonAppUi
operator|->
name|SetOrientationL
argument_list|(
name|CAknAppUiBase
operator|::
name|EAppUiOrientationLandscape
argument_list|)
expr_stmt|;
block|}
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"Orientation changed."
argument_list|)
argument_list|)
expr_stmt|;
name|ShowL
argument_list|(
operator|*
name|buffer
argument_list|,
name|last
argument_list|)
expr_stmt|;
name|bufferPtr
operator|.
name|Zero
argument_list|()
expr_stmt|;
name|CleanupStack
operator|::
name|PopAndDestroy
argument_list|(
name|buffer
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|ECmdStartCalculations
case|:
block|{
name|ClearL
argument_list|()
expr_stmt|;
comment|// Get known values
name|TInt
name|index
init|=
literal|0
decl_stmt|;
name|TBool
name|last
init|=
name|EFalse
decl_stmt|;
if|if
condition|(
name|iFileOutputOn
condition|)
block|{
name|TRect
name|screenRect
decl_stmt|;
name|AknLayoutUtils
operator|::
name|LayoutMetricsRect
argument_list|(
name|AknLayoutUtils
operator|::
name|EApplicationWindow
argument_list|,
name|screenRect
argument_list|)
expr_stmt|;
comment|// Add screen dimensions
name|TInt
name|height
init|=
name|screenRect
operator|.
name|Height
argument_list|()
decl_stmt|;
name|TInt
name|width
init|=
name|screenRect
operator|.
name|Width
argument_list|()
decl_stmt|;
name|TBuf16
argument_list|<
literal|32
argument_list|>
name|tgt
decl_stmt|;
comment|// HEIGHT
name|tgt
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"height: \t"
argument_list|)
argument_list|)
expr_stmt|;
name|tgt
operator|.
name|AppendNum
argument_list|(
name|height
argument_list|,
name|EDecimal
argument_list|)
expr_stmt|;
comment|// put max height into text file
name|ShowL
argument_list|(
name|tgt
argument_list|,
name|last
argument_list|)
expr_stmt|;
name|tgt
operator|.
name|Zero
argument_list|()
expr_stmt|;
comment|// WIDTH
name|tgt
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"width: \t"
argument_list|)
argument_list|)
expr_stmt|;
name|tgt
operator|.
name|AppendNum
argument_list|(
name|width
argument_list|,
name|EDecimal
argument_list|)
expr_stmt|;
comment|// put max width into text file
name|ShowL
argument_list|(
name|tgt
argument_list|,
name|last
argument_list|)
expr_stmt|;
name|tgt
operator|.
name|Zero
argument_list|()
expr_stmt|;
comment|// VERSION
name|TPixelMetricsVersion
name|version
init|=
name|PixelMetrics
operator|::
name|Version
argument_list|()
decl_stmt|;
name|tgt
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"major_version: \t"
argument_list|)
argument_list|)
expr_stmt|;
name|tgt
operator|.
name|AppendNum
argument_list|(
name|version
operator|.
name|majorVersion
argument_list|,
name|EDecimal
argument_list|)
expr_stmt|;
comment|// put major version into text file
name|ShowL
argument_list|(
name|tgt
argument_list|,
name|last
argument_list|)
expr_stmt|;
name|tgt
operator|.
name|Zero
argument_list|()
expr_stmt|;
name|tgt
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"minor_version: \t"
argument_list|)
argument_list|)
expr_stmt|;
name|tgt
operator|.
name|AppendNum
argument_list|(
name|version
operator|.
name|minorVersion
argument_list|,
name|EDecimal
argument_list|)
expr_stmt|;
comment|// put minor version into text file
name|ShowL
argument_list|(
name|tgt
argument_list|,
name|last
argument_list|)
expr_stmt|;
name|tgt
operator|.
name|Zero
argument_list|()
expr_stmt|;
block|}
name|TInt
name|myValue
init|=
name|KErrNotFound
decl_stmt|;
for|for
control|(
init|;
condition|;
control|)
block|{
if|if
condition|(
name|index
operator|==
name|QStyle
operator|::
name|PM_Custom_MessageBoxHeight
condition|)
block|{
name|last
operator|=
name|ETrue
expr_stmt|;
block|}
name|myValue
operator|=
name|PixelMetrics
operator|::
name|PixelMetricValue
argument_list|(
cast|static_cast
argument_list|<
name|QStyle
operator|::
name|PixelMetric
argument_list|>
argument_list|(
name|index
argument_list|)
argument_list|)
expr_stmt|;
name|ShowSingleValueL
argument_list|(
name|index
argument_list|,
name|myValue
argument_list|,
name|last
argument_list|)
expr_stmt|;
if|if
condition|(
name|last
condition|)
break|break;
comment|// if last before custom values, "jump" to custom base
if|if
condition|(
name|index
operator|==
name|QStyle
operator|::
name|PM_SubMenuOverlap
condition|)
name|index
operator|=
name|QStyle
operator|::
name|PM_CustomBase
expr_stmt|;
name|index
operator|++
expr_stmt|;
block|}
block|}
break|break;
case|case
name|ECmdCreateHeaderFile
case|:
name|CreateHeaderFileL
argument_list|()
expr_stmt|;
break|break;
default|default:
break|break;
block|}
block|}
end_function
begin_comment
comment|// -----------------------------------------------------------------------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// -----------------------------------------------------------------------------
end_comment
begin_comment
comment|//
end_comment
begin_function
DECL|function|ShowL
name|void
name|CPixelMetricsMapperAppUi
operator|::
name|ShowL
parameter_list|(
specifier|const
name|TDesC
modifier|&
name|aText
parameter_list|,
name|TBool
modifier|&
name|aLast
parameter_list|,
specifier|const
name|TBool
modifier|&
name|aFileOutput
parameter_list|)
block|{
name|_LIT
argument_list|(
name|KTestPrefix
argument_list|,
literal|"\t"
argument_list|)
expr_stmt|;
name|HBufC
modifier|*
name|buffer
init|=
name|HBufC
operator|::
name|NewLC
argument_list|(
name|aText
operator|.
name|Length
argument_list|()
operator|+
name|KTestPrefix
argument_list|()
operator|.
name|Length
argument_list|()
argument_list|)
decl_stmt|;
name|TPtr
name|ptr
init|=
name|buffer
operator|->
name|Des
argument_list|()
decl_stmt|;
name|ptr
operator|.
name|Append
argument_list|(
name|KTestPrefix
argument_list|)
expr_stmt|;
name|ptr
operator|.
name|Append
argument_list|(
name|aText
argument_list|)
expr_stmt|;
name|iView
operator|->
name|ShowL
argument_list|(
operator|*
name|buffer
argument_list|,
name|aLast
argument_list|,
name|aFileOutput
argument_list|)
expr_stmt|;
name|CleanupStack
operator|::
name|PopAndDestroy
argument_list|(
name|buffer
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|ShowSingleValueL
name|void
name|CPixelMetricsMapperAppUi
operator|::
name|ShowSingleValueL
parameter_list|(
name|TInt
modifier|&
name|aPixelMetric
parameter_list|,
name|TInt
modifier|&
name|aValue
parameter_list|,
name|TBool
modifier|&
name|aLast
parameter_list|)
block|{
name|HBufC
modifier|*
name|buffer
init|=
name|HBufC
operator|::
name|NewLC
argument_list|(
literal|100
argument_list|)
decl_stmt|;
name|TPtr
name|bufferPtr
init|=
name|buffer
operator|->
name|Des
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|aPixelMetric
condition|)
block|{
case|case
name|QStyle
operator|::
name|PM_DockWidgetTitleMargin
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"DockTitleMargin: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_DockWidgetTitleBarButtonMargin
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"DockTitleBtnMargin: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_ButtonMargin
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"ButtonMargin: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_ButtonDefaultIndicator
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"ButtonDefaultIndicator: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_MdiSubWindowFrameWidth
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"MdiSubWndFrameW: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_ComboBoxFrameWidth
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"ComboBoxFrameWidth: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_SpinBoxFrameWidth
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"SpinBoxFrameWidth: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_DefaultFrameWidth
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"DefaultFrameWidth: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_RadioButtonLabelSpacing
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"RadioButtonLabelSpc: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_CheckBoxLabelSpacing
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"CheckBoxLabelSpacing: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_ToolTipLabelFrameWidth
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"ToolTipLabelFrameW: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_ListViewIconSize
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"ListViewIconSize: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_LargeIconSize
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"LargeIconSize: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_IconViewIconSize
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"IconViewIconSize: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_TabBarIconSize
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"TabBarIconSize: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_MessageBoxIconSize
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"MessageBoxIconSize: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_ButtonIconSize
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"ButtonIconSize: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_TextCursorWidth
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"TextCursorWidth: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_SliderLength
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"SliderLength: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_SliderThickness
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"SliderThickness: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_SliderTickmarkOffset
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"SliderTickmarkOffset: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_SliderControlThickness
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"SliderCntrlThickness: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_SliderSpaceAvailable
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"SliderSpaceAvailable: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_MenuBarItemSpacing
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"MenuBarItemSpacing: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_MenuBarHMargin
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"MenuBarHMargin: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_MenuBarVMargin
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"MenuBarVMargin: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_ToolBarItemSpacing
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"ToolBarItemSpacing: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_ToolBarFrameWidth
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"ToolBarFrameWidth: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_ToolBarItemMargin
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"ToolBarItemMargin: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_LayoutLeftMargin
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"LayoutLeftMargin: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_LayoutRightMargin
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"LayoutRightMargin: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_LayoutTopMargin
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"LayoutTopMargin: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_LayoutBottomMargin
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"LayoutBottomMargin: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_LayoutHorizontalSpacing
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"LayoutHSpacing: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_LayoutVerticalSpacing
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"LayoutVSpacing: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_MaximumDragDistance
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"MaxDragDistance: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_ScrollBarExtent
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"ScrollBarExtent: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_ScrollBarSliderMin
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"ScrollBarSliderMin: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_MenuBarPanelWidth
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"MenuBarPanelWidth: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_ProgressBarChunkWidth
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"ProgBarChunkWidth: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_TabBarTabOverlap
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"TabBarTabOverlap: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_TabBarTabHSpace
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"TabBarTabHSpace: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_TabBarTabVSpace
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"TabBarTabVSpace: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_TabBarBaseHeight
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"TabBarBaseHeight: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_TabBarBaseOverlap
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"TabBarBaseOverlap: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_TabBarScrollButtonWidth
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"TabBarScrollBtnWidth: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_TabBarTabShiftHorizontal
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"TabBarTabShiftH: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_TabBarTabShiftVertical
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"TabBarTabShiftV: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_MenuPanelWidth
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"MenuPanelWidth: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_MenuHMargin
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"MenuHMargin: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_MenuVMargin
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"MenuVMargin: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_MenuDesktopFrameWidth
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"MenuFrameWidth: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_SmallIconSize
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"SmallIconSize: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_FocusFrameHMargin
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"FocusFrameHMargin: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_FocusFrameVMargin
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"FocusFrameVMargin: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_ToolBarIconSize
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"ToolBarIconSize: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_TitleBarHeight
case|:
comment|// use titlepane height
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"TitleBarHeight: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_IndicatorWidth
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"IndicatorWidth: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_IndicatorHeight
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"IndicatorHeight: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_ExclusiveIndicatorHeight
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"ExclusiveIndHeight: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_ExclusiveIndicatorWidth
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"ExclusiveIndWidth: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_HeaderMargin
case|:
comment|// not in S60
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"HeaderMargin: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_MenuScrollerHeight
case|:
comment|// not in S60
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"MenuScrollerHeight: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_MenuTearoffHeight
case|:
comment|// not in S60
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"MenuTearoffHeight: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_DockWidgetFrameWidth
case|:
comment|// not in S60
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"DockFrameWidth: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_DockWidgetSeparatorExtent
case|:
comment|// not in S60
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"DockSepExtent: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_MdiSubWindowMinimizedWidth
case|:
comment|//no such thing in S60
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"MdiSubWndMinWidth: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_HeaderGripMargin
case|:
comment|// not in S60
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"HeaderGripMargin: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_SplitterWidth
case|:
comment|// not in S60
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"SplitterWidth: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_ToolBarExtensionExtent
case|:
comment|// not in S60
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"ToolBarExtExtent: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_ToolBarSeparatorExtent
case|:
comment|// not in S60
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"ToolBarSepExtent: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_ToolBarHandleExtent
case|:
comment|// not in s60
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"ToolBarHandleExtent: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_MenuButtonIndicator
case|:
comment|// none???
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"MenuButtonIndicator: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_ButtonShiftHorizontal
case|:
comment|//none in 3.x
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"ButtonShiftHorizontal: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_ButtonShiftVertical
case|:
comment|// none in 3.x
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"ButtonShiftVertical: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_TabBar_ScrollButtonOverlap
case|:
comment|// not used in S60 - tab arrows are on left and right side of tab group - not together
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"TabScrollBtnOverlap: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_SizeGripSize
case|:
comment|// use default
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"SizeGripSize: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_DockWidgetHandleExtent
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"DockWdgtHandleExt: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_CheckListButtonSize
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"CheckListButtonSize: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_CheckListControllerSize
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"CheckListCntlerSize: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_DialogButtonsSeparator
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"DialogBtnSeparator: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_DialogButtonsButtonWidth
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"DialogBtnWidth: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_DialogButtonsButtonHeight
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"DialogBtnHeight: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_HeaderMarkSize
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"HeaderMarkSize: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_SpinBoxSliderHeight
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"SpinBoxSliderHeight: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_DefaultTopLevelMargin
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"DefaultTopLvlMrg: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_DefaultChildMargin
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"DefaultChildMrg: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_DefaultLayoutSpacing
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"DefaultlayoutSpc: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_TabCloseIndicatorWidth
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"TabCloseIndWidth: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_TabCloseIndicatorHeight
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"TabCloseIndHeight: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_ScrollView_ScrollBarSpacing
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"ScrollViewBarSpc: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_SubMenuOverlap
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"SubMenuOverlap: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_Custom_FrameCornerHeight
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"C_FrCornerHeight: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_Custom_FrameCornerWidth
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"C_FrCornerWidth: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_Custom_ThinLineWidth
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"C_ThinLineWidth: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_Custom_BoldLineWidth
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"C_BoldLineWidth: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_Custom_MessageBoxHeight
case|:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"C_MsgBoxHeight: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
default|default:
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"Default: "
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
if|if
condition|(
name|iFileOutputOn
condition|)
block|{
name|bufferPtr
operator|.
name|Append
argument_list|(
literal|'\t'
argument_list|)
expr_stmt|;
block|}
name|bufferPtr
operator|.
name|AppendNum
argument_list|(
name|aValue
argument_list|)
expr_stmt|;
name|bufferPtr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|" "
argument_list|)
argument_list|)
expr_stmt|;
name|ShowL
argument_list|(
operator|*
name|buffer
argument_list|,
name|aLast
argument_list|,
name|iFileOutputOn
argument_list|)
expr_stmt|;
name|CleanupStack
operator|::
name|PopAndDestroy
argument_list|(
name|buffer
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|ClearL
name|void
name|CPixelMetricsMapperAppUi
operator|::
name|ClearL
parameter_list|()
block|{
name|iView
operator|->
name|ClearL
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|CreateHeaderFileL
name|void
name|CPixelMetricsMapperAppUi
operator|::
name|CreateHeaderFileL
parameter_list|()
specifier|const
block|{
comment|// Open/create resulting file.
name|RFile
name|file
decl_stmt|;
name|HBufC
modifier|*
name|layoutFile
init|=
name|HBufC
operator|::
name|NewLC
argument_list|(
name|KMaxFileName
argument_list|)
decl_stmt|;
operator|*
name|layoutFile
operator|=
name|KLayoutSourceFileAndPath
expr_stmt|;
name|TFileName
name|fileName
init|=
operator|*
name|layoutFile
decl_stmt|;
name|CleanupStack
operator|::
name|PopAndDestroy
argument_list|(
name|layoutFile
argument_list|)
expr_stmt|;
name|RFs
modifier|&
name|fs
init|=
name|CEikonEnv
operator|::
name|Static
argument_list|()
operator|->
name|FsSession
argument_list|()
decl_stmt|;
name|TInt
name|error
init|=
name|file
operator|.
name|Open
argument_list|(
name|fs
argument_list|,
name|fileName
argument_list|,
name|EFileWrite
operator||
name|EFileShareAny
operator||
name|EFileStreamText
argument_list|)
decl_stmt|;
if|if
condition|(
name|error
operator|==
name|KErrNotFound
condition|)
block|{
name|file
operator|.
name|Create
argument_list|(
name|fs
argument_list|,
name|fileName
argument_list|,
name|EFileWrite
operator||
name|EFileShareAny
operator||
name|EFileStreamText
argument_list|)
expr_stmt|;
block|}
name|CleanupClosePushL
argument_list|(
name|file
argument_list|)
expr_stmt|;
name|file
operator|.
name|SetSize
argument_list|(
literal|0
argument_list|)
expr_stmt|;
comment|// Make all writes as from textfile.
name|TFileText
name|textFile
decl_stmt|;
name|textFile
operator|.
name|Set
argument_list|(
name|file
argument_list|)
expr_stmt|;
name|textFile
operator|.
name|Seek
argument_list|(
name|ESeekStart
argument_list|)
expr_stmt|;
comment|// Take all layout files from private folder.
name|CDir
modifier|*
name|dirList
decl_stmt|;
name|User
operator|::
name|LeaveIfError
argument_list|(
name|fs
operator|.
name|GetDir
argument_list|(
name|KPixelMetricsDataFiles
argument_list|,
name|KEntryAttMaskSupported
argument_list|,
name|ESortByName
argument_list|,
name|dirList
argument_list|)
argument_list|)
expr_stmt|;
name|TMySmallBuffer
name|bufferLayoutHdr
decl_stmt|;
name|TMyBigBuffer
name|bufferPMData
decl_stmt|;
name|TInt
name|fileCount
init|=
name|dirList
operator|->
name|Count
argument_list|()
decl_stmt|;
for|for
control|(
name|TInt
name|i
init|=
literal|0
init|;
name|i
operator|<
name|fileCount
condition|;
name|i
operator|++
control|)
block|{
comment|// open sourcefile
name|RFile
name|sourceFile
decl_stmt|;
name|TFileName
name|layoutFile
init|=
operator|(
operator|*
name|dirList
operator|)
index|[
name|i
index|]
operator|.
name|iName
decl_stmt|;
name|User
operator|::
name|LeaveIfError
argument_list|(
name|sourceFile
operator|.
name|Open
argument_list|(
name|fs
argument_list|,
name|layoutFile
argument_list|,
name|EFileRead
operator||
name|EFileShareAny
operator||
name|EFileStreamText
argument_list|)
argument_list|)
expr_stmt|;
name|CleanupClosePushL
argument_list|(
name|sourceFile
argument_list|)
expr_stmt|;
comment|// Make all reads as from textfile.
name|TFileText
name|textSourceFile
decl_stmt|;
name|textSourceFile
operator|.
name|Set
argument_list|(
name|sourceFile
argument_list|)
expr_stmt|;
name|TFileName
name|layoutName
init|=
name|CreateLayoutNameL
argument_list|(
name|textSourceFile
argument_list|)
decl_stmt|;
comment|// rewind - just in case.
name|textSourceFile
operator|.
name|Seek
argument_list|(
name|ESeekStart
argument_list|)
expr_stmt|;
name|TFileName
name|oneline
decl_stmt|;
name|bufferLayoutHdr
operator|.
name|Append
argument_list|(
name|KOpenBrace
argument_list|)
expr_stmt|;
name|bufferPMData
operator|.
name|Append
argument_list|(
name|KOpenBrace
argument_list|)
expr_stmt|;
name|TInt
name|loop
init|=
literal|0
decl_stmt|;
name|FOREVER
block|{
if|if
condition|(
name|textSourceFile
operator|.
name|Read
argument_list|(
name|oneline
argument_list|)
operator|!=
name|KErrNone
condition|)
block|{
break|break;
block|}
comment|// Add commas for all but first line
if|if
condition|(
name|loop
operator|!=
literal|0
condition|)
block|{
if|if
condition|(
name|loop
operator|<=
name|KHeaderValues
operator|-
literal|1
condition|)
block|{
name|bufferLayoutHdr
operator|.
name|Append
argument_list|(
name|KComma
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|loop
operator|!=
name|KHeaderValues
condition|)
block|{
name|bufferPMData
operator|.
name|Append
argument_list|(
name|KComma
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|loop
operator|==
name|KHeaderValues
condition|)
block|{
name|bufferLayoutHdr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|",QLatin1String(\""
argument_list|)
argument_list|)
expr_stmt|;
name|bufferLayoutHdr
operator|.
name|Append
argument_list|(
name|layoutName
argument_list|)
expr_stmt|;
name|bufferLayoutHdr
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"\")"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
comment|// Remove pixel metrics name and ":"
name|oneline
operator|=
name|oneline
operator|.
name|Mid
argument_list|(
name|oneline
operator|.
name|Find
argument_list|(
name|KColon
argument_list|)
operator|+
literal|1
argument_list|)
expr_stmt|;
comment|// Remove tab
name|oneline
operator|=
name|oneline
operator|.
name|Mid
argument_list|(
name|oneline
operator|.
name|Find
argument_list|(
name|KTab
argument_list|)
operator|+
literal|1
argument_list|)
expr_stmt|;
comment|// remove crap from the end of line
name|TLex
name|lex
argument_list|(
name|oneline
argument_list|)
decl_stmt|;
name|TInt
name|nextValue
init|=
operator|-
literal|666
decl_stmt|;
name|User
operator|::
name|LeaveIfError
argument_list|(
name|lex
operator|.
name|Val
argument_list|(
name|nextValue
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|loop
operator|<=
name|KHeaderValues
operator|-
literal|1
condition|)
block|{
name|bufferLayoutHdr
operator|.
name|AppendNum
argument_list|(
name|nextValue
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|nextValue
operator|==
operator|-
literal|909
condition|)
name|bufferPMData
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"ECommonStyleValue"
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|bufferPMData
operator|.
name|AppendNum
argument_list|(
name|nextValue
argument_list|)
expr_stmt|;
block|}
name|oneline
operator|.
name|Zero
argument_list|()
expr_stmt|;
name|loop
operator|++
expr_stmt|;
block|}
name|file
operator|.
name|Flush
argument_list|()
expr_stmt|;
name|bufferLayoutHdr
operator|.
name|Append
argument_list|(
name|KEndBraceWithCommaAndCRLF
argument_list|)
expr_stmt|;
name|bufferPMData
operator|.
name|Append
argument_list|(
name|KEndBraceWithCommaAndCRLF
argument_list|)
expr_stmt|;
name|CleanupStack
operator|::
name|PopAndDestroy
argument_list|()
expr_stmt|;
comment|//sourceFile
block|}
if|if
condition|(
name|fileCount
operator|>
literal|0
condition|)
block|{
name|bufferLayoutHdr
operator|=
name|bufferLayoutHdr
operator|.
name|Left
argument_list|(
name|bufferLayoutHdr
operator|.
name|Length
argument_list|()
operator|-
literal|2
argument_list|)
expr_stmt|;
name|bufferPMData
operator|=
name|bufferPMData
operator|.
name|Left
argument_list|(
name|bufferPMData
operator|.
name|Length
argument_list|()
operator|-
literal|2
argument_list|)
expr_stmt|;
name|textFile
operator|.
name|Write
argument_list|(
name|bufferLayoutHdr
argument_list|)
expr_stmt|;
name|textFile
operator|.
name|Write
argument_list|(
name|KCRLF
argument_list|)
expr_stmt|;
name|textFile
operator|.
name|Write
argument_list|(
name|bufferPMData
argument_list|)
expr_stmt|;
block|}
operator|delete
name|dirList
expr_stmt|;
name|CleanupStack
operator|::
name|PopAndDestroy
argument_list|()
expr_stmt|;
comment|//file
block|}
end_function
begin_function
DECL|function|CreateLayoutNameL
name|TFileName
name|CPixelMetricsMapperAppUi
operator|::
name|CreateLayoutNameL
parameter_list|(
name|TFileText
modifier|&
name|aFileHandle
parameter_list|)
specifier|const
block|{
name|aFileHandle
operator|.
name|Seek
argument_list|(
name|ESeekStart
argument_list|)
expr_stmt|;
comment|// Layout data is deployed like this:
comment|// first line - height
comment|// second line - width
name|TFileName
name|lines
decl_stmt|;
name|TFileName
name|layoutName
decl_stmt|;
name|TInt
name|height
init|=
operator|-
literal|666
decl_stmt|;
name|TInt
name|width
init|=
operator|-
literal|666
decl_stmt|;
comment|// Collect name information.
for|for
control|(
name|TInt
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|6
condition|;
name|i
operator|++
control|)
block|{
name|User
operator|::
name|LeaveIfError
argument_list|(
name|aFileHandle
operator|.
name|Read
argument_list|(
name|lines
argument_list|)
argument_list|)
expr_stmt|;
comment|// Remove pixel metrics name and ":"
name|lines
operator|=
name|lines
operator|.
name|Mid
argument_list|(
name|lines
operator|.
name|Find
argument_list|(
name|KColon
argument_list|)
operator|+
literal|1
argument_list|)
expr_stmt|;
comment|// Remove tab
name|lines
operator|=
name|lines
operator|.
name|Mid
argument_list|(
name|lines
operator|.
name|Find
argument_list|(
name|KTab
argument_list|)
operator|+
literal|1
argument_list|)
expr_stmt|;
name|TLex
name|myLexer
argument_list|(
name|lines
argument_list|)
decl_stmt|;
name|TInt
name|error
init|=
name|KErrNone
decl_stmt|;
if|if
condition|(
name|i
operator|==
literal|0
condition|)
comment|//height is first
block|{
name|error
operator|=
name|myLexer
operator|.
name|Val
argument_list|(
name|height
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|i
operator|==
literal|1
condition|)
comment|//width is second
block|{
name|error
operator|=
name|myLexer
operator|.
name|Val
argument_list|(
name|width
argument_list|)
expr_stmt|;
block|}
name|User
operator|::
name|LeaveIfError
argument_list|(
name|error
argument_list|)
expr_stmt|;
block|}
comment|// Interpret results and write name to buffer.
if|if
condition|(
operator|(
name|width
operator|==
literal|240
operator|&&
name|height
operator|==
literal|320
operator|)
operator|||
operator|(
name|width
operator|==
literal|320
operator|&&
name|height
operator|==
literal|240
operator|)
condition|)
block|{
name|layoutName
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"QVGA "
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
operator|(
name|width
operator|==
literal|360
operator|&&
name|height
operator|==
literal|640
operator|)
operator|||
operator|(
name|width
operator|==
literal|640
operator|&&
name|height
operator|==
literal|360
operator|)
condition|)
block|{
name|layoutName
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"NHD "
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
operator|(
name|width
operator|==
literal|480
operator|&&
name|height
operator|==
literal|640
operator|)
operator|||
operator|(
name|width
operator|==
literal|640
operator|&&
name|height
operator|==
literal|480
operator|)
condition|)
block|{
name|layoutName
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"VGA "
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
operator|(
name|width
operator|==
literal|800
operator|&&
name|height
operator|==
literal|352
operator|)
operator|||
operator|(
name|width
operator|==
literal|352
operator|&&
name|height
operator|==
literal|800
operator|)
condition|)
block|{
name|layoutName
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"E90 "
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
operator|(
name|width
operator|==
literal|800
operator|&&
name|height
operator|==
literal|480
operator|)
operator|||
operator|(
name|width
operator|==
literal|480
operator|&&
name|height
operator|==
literal|800
operator|)
operator|||
operator|(
name|width
operator|==
literal|848
operator|&&
name|height
operator|==
literal|480
operator|)
operator|||
operator|(
name|width
operator|==
literal|480
operator|&&
name|height
operator|==
literal|848
operator|)
operator|||
operator|(
name|width
operator|==
literal|854
operator|&&
name|height
operator|==
literal|480
operator|)
operator|||
operator|(
name|width
operator|==
literal|480
operator|&&
name|height
operator|==
literal|854
operator|)
condition|)
block|{
name|layoutName
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"WVGA "
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
operator|(
name|width
operator|==
literal|480
operator|&&
name|height
operator|==
literal|320
operator|)
operator|||
operator|(
name|width
operator|==
literal|320
operator|&&
name|height
operator|==
literal|480
operator|)
operator|||
operator|(
name|width
operator|==
literal|640
operator|&&
name|height
operator|==
literal|240
operator|)
operator|||
operator|(
name|width
operator|==
literal|240
operator|&&
name|height
operator|==
literal|640
operator|)
condition|)
block|{
name|layoutName
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"HVGA "
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|layoutName
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"Unknown "
argument_list|)
argument_list|)
expr_stmt|;
name|layoutName
operator|.
name|AppendNum
argument_list|(
name|height
argument_list|)
expr_stmt|;
name|layoutName
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"x"
argument_list|)
argument_list|)
expr_stmt|;
name|layoutName
operator|.
name|AppendNum
argument_list|(
name|width
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|width
operator|>
name|height
condition|)
block|{
name|layoutName
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"Landscape"
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|layoutName
operator|.
name|Append
argument_list|(
name|_L
argument_list|(
literal|"Portrait"
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|layoutName
return|;
block|}
end_function
begin_comment
comment|// -----------------------------------------------------------------------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// -----------------------------------------------------------------------------
end_comment
begin_comment
comment|//
end_comment
begin_function
DECL|function|CreateAppUiL
name|CEikAppUi
modifier|*
name|CPixelMetricsMapperDocument
operator|::
name|CreateAppUiL
parameter_list|()
block|{
return|return
operator|(
operator|new
operator|(
name|ELeave
operator|)
name|CPixelMetricsMapperAppUi
operator|)
return|;
block|}
end_function
begin_comment
comment|// -----------------------------------------------------------------------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// -----------------------------------------------------------------------------
end_comment
begin_comment
comment|//
end_comment
begin_function
DECL|function|ConstructL
name|void
name|CPixelMetricsMapperDocument
operator|::
name|ConstructL
parameter_list|()
block|{     }
end_function
begin_comment
comment|// -----------------------------------------------------------------------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// -----------------------------------------------------------------------------
end_comment
begin_comment
comment|//
end_comment
begin_function
DECL|function|AppDllUid
name|TUid
name|CPixelMetricsMapperApplication
operator|::
name|AppDllUid
parameter_list|()
specifier|const
block|{
return|return
name|KUidPMMapperApplication
return|;
block|}
end_function
begin_comment
comment|// -----------------------------------------------------------------------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// -----------------------------------------------------------------------------
end_comment
begin_comment
comment|//
end_comment
begin_function
DECL|function|CreateDocumentL
name|CApaDocument
modifier|*
name|CPixelMetricsMapperApplication
operator|::
name|CreateDocumentL
parameter_list|()
block|{
name|CPixelMetricsMapperDocument
modifier|*
name|document
init|=
operator|new
operator|(
name|ELeave
operator|)
name|CPixelMetricsMapperDocument
argument_list|(
operator|*
name|this
argument_list|)
decl_stmt|;
name|CleanupStack
operator|::
name|PushL
argument_list|(
name|document
argument_list|)
expr_stmt|;
name|document
operator|->
name|ConstructL
argument_list|()
expr_stmt|;
name|CleanupStack
operator|::
name|Pop
argument_list|()
expr_stmt|;
return|return
operator|(
name|document
operator|)
return|;
block|}
end_function
begin_comment
comment|// ========================== OTHER EXPORTED FUNCTIONS =========================
end_comment
begin_comment
comment|// ---------------------------------------------------------
end_comment
begin_comment
comment|// NewApplication implements
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// Creates an instance of application.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// Returns: an instance of CVtUiApp
end_comment
begin_comment
comment|// ---------------------------------------------------------
end_comment
begin_comment
comment|//
end_comment
begin_function
DECL|function|NewApplication
name|LOCAL_C
name|CApaApplication
modifier|*
name|NewApplication
parameter_list|()
block|{
return|return
operator|new
name|CPixelMetricsMapperApplication
return|;
block|}
end_function
begin_comment
comment|// ---------------------------------------------------------
end_comment
begin_comment
comment|// E32Main implements
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// It is called when executable is started.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// Returns: error code.
end_comment
begin_comment
comment|// ---------------------------------------------------------
end_comment
begin_comment
comment|//
end_comment
begin_function
DECL|function|E32Main
name|GLDEF_C
name|TInt
name|E32Main
parameter_list|()
block|{
return|return
name|EikStart
operator|::
name|RunApplication
argument_list|(
name|NewApplication
argument_list|)
return|;
block|}
end_function
begin_comment
comment|// End of File
end_comment
end_unit
