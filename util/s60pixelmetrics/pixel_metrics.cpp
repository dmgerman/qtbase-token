begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: http://www.qt-project.org/ ** ** This file is part of the utility applications of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"pixel_metrics.h"
end_include
begin_include
include|#
directive|include
file|<AknLayout2ScalableDef.h>
end_include
begin_include
include|#
directive|include
file|<AknLayoutScalable_Avkon.cdl.h>
end_include
begin_include
include|#
directive|include
file|<AknLayoutScalable_Apps.cdl.h>
end_include
begin_include
include|#
directive|include
file|<AknUtils.h>
end_include
begin_comment
comment|// Version number for dynamic calculations. These are to be exported to static data,
end_comment
begin_comment
comment|// so that we can keep dynamic and static values inline.
end_comment
begin_comment
comment|// Please adjust version data if correcting dynamic PM calculations.
end_comment
begin_decl_stmt
DECL|variable|KPMMajorVersion
specifier|const
name|TInt
name|KPMMajorVersion
init|=
literal|1
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|KPMMinorVersion
specifier|const
name|TInt
name|KPMMinorVersion
init|=
literal|19
decl_stmt|;
end_decl_stmt
begin_function
DECL|function|Version
name|TPixelMetricsVersion
name|PixelMetrics
operator|::
name|Version
parameter_list|()
block|{
name|TPixelMetricsVersion
name|version
decl_stmt|;
name|version
operator|.
name|majorVersion
operator|=
name|KPMMajorVersion
expr_stmt|;
name|version
operator|.
name|minorVersion
operator|=
name|KPMMinorVersion
expr_stmt|;
return|return
name|version
return|;
block|}
end_function
begin_function
DECL|function|PixelMetricValue
name|TInt
name|PixelMetrics
operator|::
name|PixelMetricValue
parameter_list|(
name|QStyle
operator|::
name|PixelMetric
name|metric
parameter_list|)
block|{
name|TInt
name|value
init|=
operator|-
literal|909
decl_stmt|;
comment|// Main pane
name|TRect
name|mainPaneRect
decl_stmt|;
name|AknLayoutUtils
operator|::
name|LayoutMetricsRect
argument_list|(
name|AknLayoutUtils
operator|::
name|EMainPane
argument_list|,
name|mainPaneRect
argument_list|)
expr_stmt|;
comment|// Screen
name|TRect
name|screenRect
decl_stmt|;
name|AknLayoutUtils
operator|::
name|LayoutMetricsRect
argument_list|(
name|AknLayoutUtils
operator|::
name|EApplicationWindow
argument_list|,
name|screenRect
argument_list|)
expr_stmt|;
comment|// Navi pane
name|TRect
name|naviPaneRect
decl_stmt|;
name|AknLayoutUtils
operator|::
name|LayoutMetricsRect
argument_list|(
name|AknLayoutUtils
operator|::
name|ENaviPane
argument_list|,
name|naviPaneRect
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|appWindow
decl_stmt|;
name|appWindow
operator|.
name|LayoutRect
argument_list|(
name|screenRect
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|application_window
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|TInt
name|variety
init|=
literal|0
decl_stmt|;
name|TBool
name|landscape
init|=
name|EFalse
decl_stmt|;
if|if
condition|(
name|screenRect
operator|.
name|iBr
operator|.
name|iX
operator|>
name|screenRect
operator|.
name|iBr
operator|.
name|iY
condition|)
block|{
comment|// in landscape another variety is used
name|landscape
operator|=
name|ETrue
expr_stmt|;
block|}
switch|switch
condition|(
name|metric
condition|)
block|{
case|case
name|QStyle
operator|::
name|PM_DockWidgetHandleExtent
case|:
comment|// what's this??? Not in S60
break|break;
case|case
name|QStyle
operator|::
name|PM_CheckListControllerSize
case|:
case|case
name|QStyle
operator|::
name|PM_CheckListButtonSize
case|:
block|{
comment|// hierarchical menu - checkbox / radiobutton
comment|// Area (width/height) of the checkbox/radio button in a Q3CheckListItem.
name|TAknLayoutRect
name|listScrollPane
decl_stmt|;
name|listScrollPane
operator|.
name|LayoutRect
argument_list|(
name|mainPaneRect
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|listscroll_gen_pane
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|listGenPane
decl_stmt|;
name|listGenPane
operator|.
name|LayoutRect
argument_list|(
name|listScrollPane
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|list_gen_pane
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|listHierarchyPane
decl_stmt|;
name|listHierarchyPane
operator|.
name|LayoutRect
argument_list|(
name|listGenPane
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|list_single_graphic_hl_pane
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|listHierarchyControllerPane
decl_stmt|;
name|listHierarchyPane
operator|.
name|LayoutRect
argument_list|(
name|listHierarchyPane
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|list_single_graphic_hl_pane_g3
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|listHierarchyPropertyPane
decl_stmt|;
name|listHierarchyPropertyPane
operator|.
name|LayoutRect
argument_list|(
name|listHierarchyPane
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|list_single_graphic_hl_pane_g2
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|metric
operator|==
name|QStyle
operator|::
name|PM_CheckListControllerSize
condition|)
name|value
operator|=
name|Max
argument_list|(
name|listHierarchyPane
operator|.
name|Rect
argument_list|()
operator|.
name|Width
argument_list|()
argument_list|,
name|listHierarchyPane
operator|.
name|Rect
argument_list|()
operator|.
name|Width
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|value
operator|=
name|Max
argument_list|(
name|listHierarchyPropertyPane
operator|.
name|Rect
argument_list|()
operator|.
name|Width
argument_list|()
argument_list|,
name|listHierarchyPropertyPane
operator|.
name|Rect
argument_list|()
operator|.
name|Width
argument_list|()
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|QStyle
operator|::
name|PM_DialogButtonsSeparator
case|:
comment|//Distance between buttons in a dialog buttons widget.
case|case
name|QStyle
operator|::
name|PM_DialogButtonsButtonWidth
case|:
comment|// Minimum width of a button in a dialog buttons widget.
case|case
name|QStyle
operator|::
name|PM_DialogButtonsButtonHeight
case|:
comment|// Minimum height of a button in a dialog buttons widget.
block|{
name|TAknLayoutRect
name|appWindow
decl_stmt|;
name|appWindow
operator|.
name|LayoutRect
argument_list|(
name|screenRect
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|application_window
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|variety
operator|=
literal|0
expr_stmt|;
if|if
condition|(
name|landscape
condition|)
block|{
name|variety
operator|=
literal|2
expr_stmt|;
block|}
name|TAknLayoutRect
name|areaBottomRect
decl_stmt|;
name|areaBottomRect
operator|.
name|LayoutRect
argument_list|(
name|appWindow
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|area_bottom_pane
argument_list|(
name|variety
argument_list|)
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|controlPaneRect
decl_stmt|;
name|controlPaneRect
operator|.
name|LayoutRect
argument_list|(
name|areaBottomRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|control_pane
argument_list|()
argument_list|)
expr_stmt|;
name|TAknLayoutText
name|controlPaneLSKText
decl_stmt|;
name|TAknLayoutText
name|controlPaneRSKText
decl_stmt|;
name|TAknLayoutText
name|controlPaneMSKText
decl_stmt|;
name|variety
operator|=
literal|0
expr_stmt|;
if|if
condition|(
name|AknLayoutUtils
operator|::
name|MSKEnabled
argument_list|()
condition|)
block|{
name|variety
operator|=
literal|3
expr_stmt|;
name|controlPaneMSKText
operator|.
name|LayoutText
argument_list|(
name|controlPaneRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|control_pane_t3
argument_list|(
name|variety
argument_list|)
argument_list|)
expr_stmt|;
comment|//MSK text area
block|}
name|controlPaneLSKText
operator|.
name|LayoutText
argument_list|(
name|controlPaneRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|control_pane_t1
argument_list|(
name|variety
argument_list|)
argument_list|)
expr_stmt|;
comment|//LSK text area
name|controlPaneRSKText
operator|.
name|LayoutText
argument_list|(
name|controlPaneRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|control_pane_t2
argument_list|(
name|variety
argument_list|)
argument_list|)
expr_stmt|;
comment|//RSK text area
comment|/*              *             ==================================================================================             |  A  |     LSK_rect     |  B  |     MSK_rect     |  C  |     RSK_rect     |  D  |             ==================================================================================             where A is left padding (between control pane and LSK rect)                   B is mid-left padding (between LSK and MSK rects)                   C is mid-right padding (between MSK and RSK rects)                   D is right padding (between RSK and control pane)                    ==> Since all these can be separate, lets take Max of {A..D} for PM value             */
name|TInt
name|itemSpacingA
init|=
literal|0
decl_stmt|;
name|TInt
name|itemSpacingB
init|=
literal|0
decl_stmt|;
name|TInt
name|itemSpacingC
init|=
literal|0
decl_stmt|;
name|TInt
name|itemSpacingMax
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|!
name|AknLayoutUtils
operator|::
name|MSKEnabled
argument_list|()
condition|)
block|{
name|itemSpacingA
operator|=
name|controlPaneRect
operator|.
name|Rect
argument_list|()
operator|.
name|iBr
operator|.
name|iX
operator|-
name|controlPaneRSKText
operator|.
name|TextRect
argument_list|()
operator|.
name|iBr
operator|.
name|iX
expr_stmt|;
name|itemSpacingB
operator|=
name|controlPaneLSKText
operator|.
name|TextRect
argument_list|()
operator|.
name|iTl
operator|.
name|iX
operator|-
name|controlPaneRect
operator|.
name|Rect
argument_list|()
operator|.
name|iTl
operator|.
name|iX
expr_stmt|;
if|if
condition|(
operator|!
name|landscape
condition|)
block|{
comment|// use mid-gap only in portrait
name|itemSpacingC
operator|=
name|controlPaneRSKText
operator|.
name|TextRect
argument_list|()
operator|.
name|iTl
operator|.
name|iX
operator|-
name|controlPaneLSKText
operator|.
name|TextRect
argument_list|()
operator|.
name|iBr
operator|.
name|iX
expr_stmt|;
block|}
name|itemSpacingMax
operator|=
name|Max
argument_list|(
name|itemSpacingA
argument_list|,
name|Max
argument_list|(
name|itemSpacingB
argument_list|,
name|itemSpacingC
argument_list|)
argument_list|)
expr_stmt|;
comment|// no itemspacing4 if no MSK
block|}
else|else
block|{
name|TInt
name|itemSpacingD
init|=
literal|0
decl_stmt|;
name|itemSpacingA
operator|=
name|controlPaneRect
operator|.
name|Rect
argument_list|()
operator|.
name|iBr
operator|.
name|iX
operator|-
name|controlPaneRSKText
operator|.
name|TextRect
argument_list|()
operator|.
name|iBr
operator|.
name|iX
expr_stmt|;
name|itemSpacingB
operator|=
name|controlPaneLSKText
operator|.
name|TextRect
argument_list|()
operator|.
name|iTl
operator|.
name|iX
operator|-
name|controlPaneRect
operator|.
name|Rect
argument_list|()
operator|.
name|iTl
operator|.
name|iX
expr_stmt|;
if|if
condition|(
operator|!
operator|(
name|AknLayoutUtils
operator|::
name|PenEnabled
argument_list|()
operator|||
name|landscape
operator|)
condition|)
comment|// no MSK in touch, nor in landscape
block|{
name|itemSpacingC
operator|=
name|controlPaneRSKText
operator|.
name|TextRect
argument_list|()
operator|.
name|iTl
operator|.
name|iX
operator|-
name|controlPaneMSKText
operator|.
name|TextRect
argument_list|()
operator|.
name|iBr
operator|.
name|iX
expr_stmt|;
name|itemSpacingD
operator|=
name|controlPaneMSKText
operator|.
name|TextRect
argument_list|()
operator|.
name|iTl
operator|.
name|iX
operator|-
name|controlPaneLSKText
operator|.
name|TextRect
argument_list|()
operator|.
name|iBr
operator|.
name|iX
expr_stmt|;
block|}
name|itemSpacingMax
operator|=
name|Max
argument_list|(
name|itemSpacingA
argument_list|,
name|Max
argument_list|(
name|itemSpacingB
argument_list|,
name|Max
argument_list|(
name|itemSpacingC
argument_list|,
name|itemSpacingD
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|metric
operator|==
name|QStyle
operator|::
name|PM_DialogButtonsSeparator
condition|)
name|value
operator|=
name|itemSpacingMax
expr_stmt|;
elseif|else
if|if
condition|(
name|metric
operator|==
name|QStyle
operator|::
name|PM_DialogButtonsButtonWidth
condition|)
block|{
name|value
operator|=
name|Max
argument_list|(
name|controlPaneLSKText
operator|.
name|TextRect
argument_list|()
operator|.
name|Width
argument_list|()
argument_list|,
name|controlPaneRSKText
operator|.
name|TextRect
argument_list|()
operator|.
name|Width
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|AknLayoutUtils
operator|::
name|MSKEnabled
argument_list|()
condition|)
block|{
name|value
operator|=
name|Max
argument_list|(
name|value
argument_list|,
name|controlPaneMSKText
operator|.
name|TextRect
argument_list|()
operator|.
name|Width
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
elseif|else
if|if
condition|(
name|metric
operator|==
name|QStyle
operator|::
name|PM_DialogButtonsButtonHeight
condition|)
block|{
name|value
operator|=
name|Max
argument_list|(
name|controlPaneLSKText
operator|.
name|TextRect
argument_list|()
operator|.
name|Height
argument_list|()
argument_list|,
name|controlPaneRSKText
operator|.
name|TextRect
argument_list|()
operator|.
name|Height
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|AknLayoutUtils
operator|::
name|MSKEnabled
argument_list|()
condition|)
block|{
name|value
operator|=
name|Max
argument_list|(
name|value
argument_list|,
name|controlPaneMSKText
operator|.
name|TextRect
argument_list|()
operator|.
name|Height
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
break|break;
case|case
name|QStyle
operator|::
name|PM_DockWidgetTitleMargin
case|:
comment|// not in S60, lets use the same margin as in button
case|case
name|QStyle
operator|::
name|PM_DockWidgetTitleBarButtonMargin
case|:
comment|// not in S60, lets use the same margin as in button
case|case
name|QStyle
operator|::
name|PM_ButtonMargin
case|:
block|{
name|TRect
name|myRect
argument_list|(
name|TSize
argument_list|(
literal|80
argument_list|,
literal|20
argument_list|)
argument_list|)
decl_stmt|;
comment|// this arbitrary size - user can set it - button border does not seem to have any scalability in it
name|TAknLayoutRect
name|buttonRect
decl_stmt|;
name|TAknLayoutRect
name|buttonBordersRect
decl_stmt|;
name|TAknLayoutText
name|buttonText
decl_stmt|;
name|buttonRect
operator|.
name|LayoutRect
argument_list|(
name|myRect
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|eswt_ctrl_button_pane
argument_list|()
argument_list|)
expr_stmt|;
name|buttonBordersRect
operator|.
name|LayoutRect
argument_list|(
name|buttonRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|common_borders_pane_copy2
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|//with text
name|buttonText
operator|.
name|LayoutText
argument_list|(
name|buttonRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|control_button_pane_t1
argument_list|()
argument_list|)
expr_stmt|;
comment|// Its better to use left-right margins, since font deployment can create funny top / bottom margins
name|TInt
name|leftMargin
init|=
name|buttonText
operator|.
name|TextRect
argument_list|()
operator|.
name|iTl
operator|.
name|iX
operator|-
name|buttonBordersRect
operator|.
name|Rect
argument_list|()
operator|.
name|iTl
operator|.
name|iX
decl_stmt|;
name|TInt
name|rightMargin
init|=
name|buttonBordersRect
operator|.
name|Rect
argument_list|()
operator|.
name|iBr
operator|.
name|iX
operator|-
name|buttonText
operator|.
name|TextRect
argument_list|()
operator|.
name|iBr
operator|.
name|iX
decl_stmt|;
name|value
operator|=
call|(
name|TInt
call|)
argument_list|(
operator|(
name|leftMargin
operator|+
name|rightMargin
operator|)
operator|/
literal|2
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|QStyle
operator|::
name|PM_ButtonDefaultIndicator
case|:
block|{
comment|// no default button indicators in S60
name|value
operator|=
literal|0
expr_stmt|;
block|}
break|break;
case|case
name|QStyle
operator|::
name|PM_MdiSubWindowFrameWidth
case|:
case|case
name|QStyle
operator|::
name|PM_ComboBoxFrameWidth
case|:
case|case
name|QStyle
operator|::
name|PM_SpinBoxFrameWidth
case|:
name|value
operator|=
literal|0
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_ToolBarFrameWidth
case|:
case|case
name|QStyle
operator|::
name|PM_DefaultFrameWidth
case|:
block|{
name|TAknLayoutRect
name|highLightPaneRect
decl_stmt|;
name|TAknLayoutRect
name|centerPaneRect
decl_stmt|;
name|TRect
name|rectParent
argument_list|(
name|mainPaneRect
argument_list|)
decl_stmt|;
name|highLightPaneRect
operator|.
name|LayoutRect
argument_list|(
name|rectParent
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|toolbar_button_pane
argument_list|(
literal|0
argument_list|)
operator|.
name|LayoutLine
argument_list|()
argument_list|)
expr_stmt|;
name|centerPaneRect
operator|.
name|LayoutRect
argument_list|(
name|rectParent
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|toolbar_button_pane_g1
argument_list|()
operator|.
name|LayoutLine
argument_list|()
argument_list|)
expr_stmt|;
name|value
operator|=
name|highLightPaneRect
operator|.
name|Rect
argument_list|()
operator|.
name|iBr
operator|.
name|iX
operator|-
name|centerPaneRect
operator|.
name|Rect
argument_list|()
operator|.
name|iBr
operator|.
name|iX
expr_stmt|;
block|}
break|break;
case|case
name|QStyle
operator|::
name|PM_RadioButtonLabelSpacing
case|:
block|{
comment|/*              *             ===================================================================================             | A  | iconLayoutRect |B|                itemText                             | C |             ===================================================================================             mirrored:             ===================================================================================             | C |                      itemText                      |B| iconLayoutRect |  A  |             ===================================================================================             where A is left padding                   B is gap between icon and text                   C is right padding             */
name|TRect
name|rectParent
argument_list|(
name|mainPaneRect
argument_list|)
decl_stmt|;
name|TAknLayoutRect
name|layoutRect
decl_stmt|;
name|layoutRect
operator|.
name|LayoutRect
argument_list|(
name|rectParent
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|list_choice_list_pane
argument_list|(
literal|1
argument_list|)
operator|.
name|LayoutLine
argument_list|()
argument_list|)
expr_stmt|;
comment|// w/ scrollbar
name|TAknLayoutText
name|itemText
decl_stmt|;
name|itemText
operator|.
name|LayoutText
argument_list|(
name|layoutRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|list_single_choice_list_pane_t1
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|iconLayoutRect
decl_stmt|;
name|iconLayoutRect
operator|.
name|LayoutRect
argument_list|(
name|layoutRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|list_single_choice_list_pane_g1
argument_list|()
operator|.
name|LayoutLine
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|AknLayoutUtils
operator|::
name|LayoutMirrored
argument_list|()
condition|)
block|{
name|value
operator|=
name|itemText
operator|.
name|TextRect
argument_list|()
operator|.
name|iTl
operator|.
name|iX
operator|-
name|iconLayoutRect
operator|.
name|Rect
argument_list|()
operator|.
name|iBr
operator|.
name|iX
expr_stmt|;
block|}
else|else
block|{
name|value
operator|=
name|iconLayoutRect
operator|.
name|Rect
argument_list|()
operator|.
name|iTl
operator|.
name|iX
operator|-
name|itemText
operator|.
name|TextRect
argument_list|()
operator|.
name|iBr
operator|.
name|iX
expr_stmt|;
block|}
block|}
break|break;
case|case
name|QStyle
operator|::
name|PM_CheckBoxLabelSpacing
case|:
block|{
comment|/*              *             ===================================================================================             | A  | iconLayoutRect |B|                itemText                             | C |             ===================================================================================             mirrored:             ===================================================================================             | C |                      itemText                      |B| iconLayoutRect |  A  |             ===================================================================================             where A is left padding                   B is gap between icon and text                   C is right padding             */
name|TRect
name|rectParent
argument_list|(
name|mainPaneRect
argument_list|)
decl_stmt|;
name|TAknLayoutRect
name|layoutRect
decl_stmt|;
name|layoutRect
operator|.
name|LayoutRect
argument_list|(
name|rectParent
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|listscroll_gen_pane
argument_list|(
literal|0
argument_list|)
operator|.
name|LayoutLine
argument_list|()
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|layoutRect2
decl_stmt|;
name|layoutRect2
operator|.
name|LayoutRect
argument_list|(
name|layoutRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|list_gen_pane
argument_list|(
literal|0
argument_list|)
operator|.
name|LayoutLine
argument_list|()
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|layoutRect3
decl_stmt|;
name|layoutRect3
operator|.
name|LayoutRect
argument_list|(
name|layoutRect2
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|list_single_graphic_pane
argument_list|(
literal|0
argument_list|)
operator|.
name|LayoutLine
argument_list|()
argument_list|)
expr_stmt|;
name|TAknLayoutText
name|itemText
decl_stmt|;
name|itemText
operator|.
name|LayoutText
argument_list|(
name|layoutRect3
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|list_single_graphic_pane_t1
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|iconLayoutRect
decl_stmt|;
name|iconLayoutRect
operator|.
name|LayoutRect
argument_list|(
name|layoutRect3
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|list_single_graphic_pane_g1
argument_list|(
literal|0
argument_list|)
operator|.
name|LayoutLine
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|AknLayoutUtils
operator|::
name|LayoutMirrored
argument_list|()
condition|)
block|{
name|value
operator|=
name|itemText
operator|.
name|TextRect
argument_list|()
operator|.
name|iTl
operator|.
name|iX
operator|-
name|iconLayoutRect
operator|.
name|Rect
argument_list|()
operator|.
name|iBr
operator|.
name|iX
expr_stmt|;
block|}
else|else
block|{
name|value
operator|=
name|iconLayoutRect
operator|.
name|Rect
argument_list|()
operator|.
name|iTl
operator|.
name|iX
operator|-
name|itemText
operator|.
name|TextRect
argument_list|()
operator|.
name|iBr
operator|.
name|iX
expr_stmt|;
block|}
block|}
break|break;
case|case
name|QStyle
operator|::
name|PM_ToolTipLabelFrameWidth
case|:
block|{
comment|/*              *             |===================================================================================|             |   info popup note                        B                                        |             |   ==============================================================================  |             | A |                                   hintText                                 | D|             |   ==============================================================================  |             |                                          C                                        |             |===================================================================================|             where A is left padding                   B is top padding                   C is bottom padding                   D is right padding                   we'll provide the average of top and bottom padding as PM_ToolTipLabelFrameWidth             */
comment|// Set pop-up to contain only one line of text
name|TInt
name|index
init|=
literal|0
decl_stmt|;
if|if
condition|(
name|landscape
condition|)
block|{
comment|// in landscape another variety is used
name|index
operator|+=
literal|5
expr_stmt|;
block|}
comment|// Get parameter and table limits for popup preview text window
name|TAknLayoutScalableParameterLimits
name|limits
init|=
name|AknLayoutScalable_Avkon
operator|::
name|popup_preview_text_window_ParamLimits
argument_list|()
decl_stmt|;
name|TAknLayoutScalableTableLimits
name|tableLimits
init|=
name|AknLayoutScalable_Avkon
operator|::
name|popup_preview_text_window_t_Limits
argument_list|()
decl_stmt|;
name|TInt
name|windowVariety
init|=
name|Min
argument_list|(
name|Max
argument_list|(
name|index
argument_list|,
name|limits
operator|.
name|FirstVariety
argument_list|()
argument_list|)
argument_list|,
name|limits
operator|.
name|LastVariety
argument_list|()
argument_list|)
decl_stmt|;
name|TAknLayoutScalableParameterLimits
name|tParamLimits
init|=
name|AknLayoutScalable_Avkon
operator|::
name|popup_preview_text_window_t_ParamLimits
argument_list|(
name|tableLimits
operator|.
name|FirstIndex
argument_list|()
argument_list|)
decl_stmt|;
name|TInt
name|lineVariety
init|=
name|Min
argument_list|(
name|Max
argument_list|(
name|index
argument_list|,
name|tParamLimits
operator|.
name|FirstVariety
argument_list|()
argument_list|)
argument_list|,
name|tParamLimits
operator|.
name|LastVariety
argument_list|()
argument_list|)
decl_stmt|;
name|TAknWindowLineLayout
name|lineLayout
init|=
name|AknLayoutScalable_Avkon
operator|::
name|popup_preview_text_window
argument_list|(
name|windowVariety
argument_list|)
operator|.
name|LayoutLine
argument_list|()
decl_stmt|;
comment|// rect for the whole info popup
name|TAknLayoutRect
name|layoutRect
decl_stmt|;
name|layoutRect
operator|.
name|LayoutRect
argument_list|(
name|screenRect
argument_list|,
name|lineLayout
argument_list|)
expr_stmt|;
name|TRect
name|rectPopupWindow
init|=
name|layoutRect
operator|.
name|Rect
argument_list|()
decl_stmt|;
name|TAknTextComponentLayout
name|popupTextLayout
init|=
name|AknLayoutScalable_Avkon
operator|::
name|popup_preview_text_window_t
argument_list|(
name|tableLimits
operator|.
name|FirstIndex
argument_list|()
argument_list|,
name|lineVariety
argument_list|)
decl_stmt|;
comment|// rect for the whole the text inside the popup
name|TAknLayoutText
name|layoutText
decl_stmt|;
name|layoutText
operator|.
name|LayoutText
argument_list|(
name|rectPopupWindow
argument_list|,
name|popupTextLayout
argument_list|)
expr_stmt|;
comment|// Each margin has different value in S60 - let's take average of top& bottom
name|TInt
name|topMargin
init|=
name|layoutText
operator|.
name|TextRect
argument_list|()
operator|.
name|iTl
operator|.
name|iY
operator|-
name|layoutRect
operator|.
name|Rect
argument_list|()
operator|.
name|iTl
operator|.
name|iY
decl_stmt|;
name|TInt
name|bottomMargin
init|=
name|layoutRect
operator|.
name|Rect
argument_list|()
operator|.
name|iBr
operator|.
name|iY
operator|-
name|layoutText
operator|.
name|TextRect
argument_list|()
operator|.
name|iBr
operator|.
name|iY
decl_stmt|;
name|TInt
name|averageMargin
init|=
call|(
name|TInt
call|)
argument_list|(
name|topMargin
operator|+
name|bottomMargin
argument_list|)
operator|/
literal|2
decl_stmt|;
name|value
operator|=
name|averageMargin
expr_stmt|;
block|}
break|break;
case|case
name|QStyle
operator|::
name|PM_ListViewIconSize
case|:
block|{
comment|// todo: there are lots and lots of views with different sized icons - which one to use?
comment|// todo: this is probably not a good default icon size, as this fetches A column icon size
comment|// todo: preferably use settings item with graphic instead
name|TAknLayoutRect
name|iconRect
decl_stmt|;
name|iconRect
operator|.
name|LayoutRect
argument_list|(
name|mainPaneRect
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|list_double_graphic_pane_g1_cp2
argument_list|(
literal|0
argument_list|)
operator|.
name|LayoutLine
argument_list|()
argument_list|)
expr_stmt|;
comment|//icon areas are usually squares - lets take bigger of two dimensions
name|value
operator|=
name|Max
argument_list|(
name|iconRect
operator|.
name|Rect
argument_list|()
operator|.
name|Width
argument_list|()
argument_list|,
name|iconRect
operator|.
name|Rect
argument_list|()
operator|.
name|Height
argument_list|()
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|QStyle
operator|::
name|PM_LargeIconSize
case|:
comment|// lets use AS icon as a base for large icon
case|case
name|QStyle
operator|::
name|PM_IconViewIconSize
case|:
block|{
comment|// Lets assume that we'd take these from grid (3x4) layout
name|TAknLayoutRect
name|appPaneRect
decl_stmt|;
name|TAknLayoutRect
name|gridAppRect
decl_stmt|;
name|TAknLayoutRect
name|cellAppRect
decl_stmt|;
name|TInt
name|varietyGrid
init|=
literal|2
decl_stmt|;
comment|//Let's use the 3x4 grid as a base.
name|TInt
name|varietyCell
init|=
literal|1
decl_stmt|;
comment|//Let's use the 3x4 grid as a base.
if|if
condition|(
name|landscape
condition|)
block|{
name|varietyGrid
operator|=
literal|3
expr_stmt|;
name|varietyCell
operator|=
literal|2
expr_stmt|;
block|}
name|appPaneRect
operator|.
name|LayoutRect
argument_list|(
name|mainPaneRect
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|listscroll_app_pane
argument_list|(
literal|1
argument_list|)
operator|.
name|LayoutLine
argument_list|()
argument_list|)
expr_stmt|;
comment|//3x4 grid
name|gridAppRect
operator|.
name|LayoutRect
argument_list|(
name|appPaneRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|grid_app_pane
argument_list|(
name|varietyGrid
argument_list|)
operator|.
name|LayoutLine
argument_list|()
argument_list|)
expr_stmt|;
name|cellAppRect
operator|.
name|LayoutRect
argument_list|(
name|gridAppRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|cell_app_pane
argument_list|(
name|varietyCell
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|LayoutLine
argument_list|()
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|cellGraphRect
decl_stmt|;
name|TAknWindowComponentLayout
name|appIcon
init|=
name|AknLayoutScalable_Avkon
operator|::
name|cell_app_pane_g1
argument_list|(
literal|0
argument_list|)
decl_stmt|;
comment|// no mark, no highlight
name|cellGraphRect
operator|.
name|LayoutRect
argument_list|(
name|gridAppRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|appIcon
argument_list|)
expr_stmt|;
comment|//icon areas are usually squares - if not, lets take larger
name|value
operator|=
name|Max
argument_list|(
name|cellGraphRect
operator|.
name|Rect
argument_list|()
operator|.
name|Width
argument_list|()
argument_list|,
name|cellGraphRect
operator|.
name|Rect
argument_list|()
operator|.
name|Height
argument_list|()
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|QStyle
operator|::
name|PM_TabBarIconSize
case|:
block|{
name|TAknLayoutRect
name|naviNaviRect
decl_stmt|;
name|naviNaviRect
operator|.
name|LayoutRect
argument_list|(
name|naviPaneRect
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|navi_navi_tabs_pane
argument_list|()
operator|.
name|LayoutLine
argument_list|()
argument_list|)
expr_stmt|;
comment|// two tabs
name|TAknLayoutRect
name|tabRect
decl_stmt|;
name|tabRect
operator|.
name|LayoutRect
argument_list|(
name|naviNaviRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|navi_tabs_3_pane
argument_list|()
operator|.
name|LayoutLine
argument_list|()
argument_list|)
expr_stmt|;
comment|//active tab on left
name|TAknLayoutRect
name|activeTabRect
decl_stmt|;
name|activeTabRect
operator|.
name|LayoutRect
argument_list|(
name|tabRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|tabs_3_active_pane
argument_list|(
literal|0
argument_list|)
operator|.
name|LayoutLine
argument_list|()
argument_list|)
expr_stmt|;
comment|//active tab
name|TAknLayoutRect
name|activeTabGraphicRect
decl_stmt|;
name|activeTabGraphicRect
operator|.
name|LayoutRect
argument_list|(
name|activeTabRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|tabs_3_active_pane_g1
argument_list|()
operator|.
name|LayoutLine
argument_list|()
argument_list|)
expr_stmt|;
comment|//active tab graphic
name|value
operator|=
name|Min
argument_list|(
name|activeTabGraphicRect
operator|.
name|Rect
argument_list|()
operator|.
name|Width
argument_list|()
argument_list|,
name|activeTabGraphicRect
operator|.
name|Rect
argument_list|()
operator|.
name|Height
argument_list|()
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|QStyle
operator|::
name|PM_MessageBoxIconSize
case|:
block|{
name|TAknLayoutRect
name|noteRect
decl_stmt|;
name|noteRect
operator|.
name|LayoutRect
argument_list|(
name|mainPaneRect
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|popup_note_image_window
argument_list|(
literal|0
argument_list|)
operator|.
name|LayoutLine
argument_list|()
argument_list|)
expr_stmt|;
comment|//note with image
name|TAknLayoutRect
name|noteImageRect
decl_stmt|;
name|noteImageRect
operator|.
name|LayoutRect
argument_list|(
name|noteRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|popup_note_image_window_g2
argument_list|(
literal|2
argument_list|)
operator|.
name|LayoutLine
argument_list|()
argument_list|)
expr_stmt|;
comment|//note with image
name|value
operator|=
name|noteImageRect
operator|.
name|Rect
argument_list|()
operator|.
name|Width
argument_list|()
expr_stmt|;
block|}
break|break;
case|case
name|QStyle
operator|::
name|PM_TextCursorWidth
case|:
block|{
name|TAknLayoutRect
name|miscGraphicsRect
decl_stmt|;
name|miscGraphicsRect
operator|.
name|LayoutRect
argument_list|(
name|screenRect
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|misc_graphics
argument_list|()
argument_list|)
expr_stmt|;
name|miscGraphicsRect
operator|.
name|LayoutRect
argument_list|(
name|miscGraphicsRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|misc_graphics
argument_list|()
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|textsGraphicsRect
decl_stmt|;
name|textsGraphicsRect
operator|.
name|LayoutRect
argument_list|(
name|miscGraphicsRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|texts_graphics
argument_list|()
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|cursorGraphicsRect
decl_stmt|;
name|cursorGraphicsRect
operator|.
name|LayoutRect
argument_list|(
name|textsGraphicsRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|cursor_graphics_pane
argument_list|()
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|cursorPrimaryRect
decl_stmt|;
name|cursorPrimaryRect
operator|.
name|LayoutRect
argument_list|(
name|cursorGraphicsRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|cursor_primary_pane
argument_list|()
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|cursorRect
decl_stmt|;
name|cursorRect
operator|.
name|LayoutRect
argument_list|(
name|cursorPrimaryRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|cursor_digital_pane_g1
argument_list|()
argument_list|)
expr_stmt|;
name|value
operator|=
name|cursorRect
operator|.
name|Rect
argument_list|()
operator|.
name|Width
argument_list|()
expr_stmt|;
block|}
break|break;
case|case
name|QStyle
operator|::
name|PM_SliderLength
case|:
block|{
name|TAknLayoutRect
name|settingRect
decl_stmt|;
name|settingRect
operator|.
name|LayoutRect
argument_list|(
name|mainPaneRect
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|listscroll_set_pane
argument_list|()
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|settingContentRect
decl_stmt|;
name|settingContentRect
operator|.
name|LayoutRect
argument_list|(
name|settingRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|set_content_pane
argument_list|()
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|sliderRect
decl_stmt|;
name|sliderRect
operator|.
name|LayoutRect
argument_list|(
name|settingContentRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|setting_slider_graphic_pane
argument_list|()
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|sliderSettingRect
decl_stmt|;
name|sliderSettingRect
operator|.
name|LayoutRect
argument_list|(
name|sliderRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|slider_set_pane_cp
argument_list|()
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|sliderGraph2Rect
decl_stmt|;
name|sliderGraph2Rect
operator|.
name|LayoutRect
argument_list|(
name|sliderSettingRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|slider_set_pane_g6
argument_list|()
argument_list|)
expr_stmt|;
name|value
operator|=
name|sliderGraph2Rect
operator|.
name|Rect
argument_list|()
operator|.
name|Width
argument_list|()
expr_stmt|;
block|}
break|break;
case|case
name|QStyle
operator|::
name|PM_SliderThickness
case|:
block|{
name|TAknLayoutRect
name|settingRect
decl_stmt|;
name|settingRect
operator|.
name|LayoutRect
argument_list|(
name|mainPaneRect
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|listscroll_set_pane
argument_list|()
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|settingContentRect
decl_stmt|;
name|settingContentRect
operator|.
name|LayoutRect
argument_list|(
name|settingRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|set_content_pane
argument_list|()
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|sliderRect
decl_stmt|;
name|sliderRect
operator|.
name|LayoutRect
argument_list|(
name|settingContentRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|setting_slider_graphic_pane
argument_list|()
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|sliderSettingRect
decl_stmt|;
name|sliderSettingRect
operator|.
name|LayoutRect
argument_list|(
name|sliderRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|slider_set_pane_cp
argument_list|()
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|sliderGraph2Rect
decl_stmt|;
name|sliderGraph2Rect
operator|.
name|LayoutRect
argument_list|(
name|sliderSettingRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|slider_set_pane_g6
argument_list|()
argument_list|)
expr_stmt|;
comment|//todo: make a proper calculation for tick marks
name|value
operator|=
call|(
name|TInt
call|)
argument_list|(
name|sliderGraph2Rect
operator|.
name|Rect
argument_list|()
operator|.
name|Height
argument_list|()
operator|*
literal|1.5
argument_list|)
expr_stmt|;
comment|// add assumed tickmark height
block|}
break|break;
case|case
name|QStyle
operator|::
name|PM_SliderTickmarkOffset
case|:
block|{
name|TAknLayoutRect
name|settingRect
decl_stmt|;
name|settingRect
operator|.
name|LayoutRect
argument_list|(
name|mainPaneRect
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|listscroll_set_pane
argument_list|()
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|settingContentRect
decl_stmt|;
name|settingContentRect
operator|.
name|LayoutRect
argument_list|(
name|settingRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|set_content_pane
argument_list|()
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|sliderRect
decl_stmt|;
name|sliderRect
operator|.
name|LayoutRect
argument_list|(
name|settingContentRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|setting_slider_graphic_pane
argument_list|()
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|sliderSettingRect
decl_stmt|;
name|sliderSettingRect
operator|.
name|LayoutRect
argument_list|(
name|sliderRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|slider_set_pane_cp
argument_list|()
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|sliderGraph2Rect
decl_stmt|;
name|sliderGraph2Rect
operator|.
name|LayoutRect
argument_list|(
name|sliderSettingRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|slider_set_pane_g6
argument_list|()
argument_list|)
expr_stmt|;
comment|//todo: make a proper calculation for tick marks
name|value
operator|=
call|(
name|TInt
call|)
argument_list|(
name|sliderGraph2Rect
operator|.
name|Rect
argument_list|()
operator|.
name|Height
argument_list|()
operator|*
literal|0.5
argument_list|)
expr_stmt|;
comment|// no tickmarks in S60, lets assume they are half the size of slider indicator
block|}
break|break;
case|case
name|QStyle
operator|::
name|PM_SliderControlThickness
case|:
block|{
name|TAknLayoutRect
name|settingRect
decl_stmt|;
name|settingRect
operator|.
name|LayoutRect
argument_list|(
name|mainPaneRect
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|listscroll_set_pane
argument_list|()
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|settingContentRect
decl_stmt|;
name|settingContentRect
operator|.
name|LayoutRect
argument_list|(
name|settingRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|set_content_pane
argument_list|()
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|sliderRect
decl_stmt|;
name|sliderRect
operator|.
name|LayoutRect
argument_list|(
name|settingContentRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|setting_slider_graphic_pane
argument_list|()
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|sliderSettingRect
decl_stmt|;
name|sliderSettingRect
operator|.
name|LayoutRect
argument_list|(
name|sliderRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|slider_set_pane_cp
argument_list|()
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|sliderGraph2Rect
decl_stmt|;
name|sliderGraph2Rect
operator|.
name|LayoutRect
argument_list|(
name|sliderSettingRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|slider_set_pane_g6
argument_list|()
argument_list|)
expr_stmt|;
name|value
operator|=
name|sliderGraph2Rect
operator|.
name|Rect
argument_list|()
operator|.
name|Height
argument_list|()
expr_stmt|;
block|}
break|break;
case|case
name|QStyle
operator|::
name|PM_SliderSpaceAvailable
case|:
block|{
name|TAknLayoutRect
name|settingRect
decl_stmt|;
name|settingRect
operator|.
name|LayoutRect
argument_list|(
name|mainPaneRect
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|listscroll_set_pane
argument_list|()
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|settingContentRect
decl_stmt|;
name|settingContentRect
operator|.
name|LayoutRect
argument_list|(
name|settingRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|set_content_pane
argument_list|()
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|sliderRect
decl_stmt|;
name|sliderRect
operator|.
name|LayoutRect
argument_list|(
name|settingContentRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|setting_slider_graphic_pane
argument_list|()
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|sliderSettingRect
decl_stmt|;
name|sliderSettingRect
operator|.
name|LayoutRect
argument_list|(
name|sliderRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|slider_set_pane_cp
argument_list|()
argument_list|)
expr_stmt|;
name|value
operator|=
name|sliderSettingRect
operator|.
name|Rect
argument_list|()
operator|.
name|Width
argument_list|()
expr_stmt|;
block|}
break|break;
case|case
name|QStyle
operator|::
name|PM_MenuBarItemSpacing
case|:
block|{
name|TAknLayoutRect
name|appWindow
decl_stmt|;
name|appWindow
operator|.
name|LayoutRect
argument_list|(
name|screenRect
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|application_window
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|variety
operator|=
literal|0
expr_stmt|;
if|if
condition|(
name|landscape
condition|)
block|{
name|variety
operator|=
literal|2
expr_stmt|;
block|}
name|TAknLayoutRect
name|areaBottomRect
decl_stmt|;
name|areaBottomRect
operator|.
name|LayoutRect
argument_list|(
name|appWindow
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|area_bottom_pane
argument_list|(
name|variety
argument_list|)
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|controlPaneRect
decl_stmt|;
name|controlPaneRect
operator|.
name|LayoutRect
argument_list|(
name|areaBottomRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|control_pane
argument_list|()
argument_list|)
expr_stmt|;
name|TAknLayoutText
name|controlPaneLSKText
decl_stmt|;
name|TAknLayoutText
name|controlPaneRSKText
decl_stmt|;
name|TAknLayoutText
name|controlPaneMSKText
decl_stmt|;
name|variety
operator|=
literal|0
expr_stmt|;
if|if
condition|(
name|AknLayoutUtils
operator|::
name|MSKEnabled
argument_list|()
condition|)
block|{
name|variety
operator|=
literal|3
expr_stmt|;
name|controlPaneMSKText
operator|.
name|LayoutText
argument_list|(
name|controlPaneRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|control_pane_t3
argument_list|(
name|variety
argument_list|)
argument_list|)
expr_stmt|;
comment|//MSK text area
block|}
name|controlPaneLSKText
operator|.
name|LayoutText
argument_list|(
name|controlPaneRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|control_pane_t1
argument_list|(
name|variety
argument_list|)
argument_list|)
expr_stmt|;
comment|//LSK text area
name|controlPaneRSKText
operator|.
name|LayoutText
argument_list|(
name|controlPaneRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|control_pane_t2
argument_list|(
name|variety
argument_list|)
argument_list|)
expr_stmt|;
comment|//RSK text area
comment|/*              *             ==================================================================================             |  A  |     LSK_rect     |  B  |     MSK_rect     |  C  |     RSK_rect     |  D  |             ==================================================================================             where A is left padding (between control pane and LSK rect)                   B is mid-left padding (between LSK and MSK rects)                   C is mid-right padding (between MSK and RSK rects)                   D is right padding (between RSK and control pane)                    ==> Since all these can be separate, lets take Max of {A..D} for PM value             */
name|TInt
name|itemSpacing1
init|=
literal|0
decl_stmt|;
name|TInt
name|itemSpacing2
init|=
literal|0
decl_stmt|;
name|TInt
name|itemSpacing3
init|=
literal|0
decl_stmt|;
name|TInt
name|itemSpacing4
init|=
literal|0
decl_stmt|;
name|TInt
name|itemSpacingMax
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|!
name|AknLayoutUtils
operator|::
name|MSKEnabled
argument_list|()
condition|)
block|{
name|itemSpacing1
operator|=
name|controlPaneRect
operator|.
name|Rect
argument_list|()
operator|.
name|iBr
operator|.
name|iX
operator|-
name|controlPaneRSKText
operator|.
name|TextRect
argument_list|()
operator|.
name|iBr
operator|.
name|iX
expr_stmt|;
name|itemSpacing2
operator|=
name|controlPaneLSKText
operator|.
name|TextRect
argument_list|()
operator|.
name|iTl
operator|.
name|iX
operator|-
name|controlPaneRect
operator|.
name|Rect
argument_list|()
operator|.
name|iTl
operator|.
name|iX
expr_stmt|;
if|if
condition|(
operator|!
name|landscape
condition|)
block|{
comment|// use mid gap only in portrait
name|itemSpacing3
operator|=
name|controlPaneRSKText
operator|.
name|TextRect
argument_list|()
operator|.
name|iTl
operator|.
name|iX
operator|-
name|controlPaneLSKText
operator|.
name|TextRect
argument_list|()
operator|.
name|iBr
operator|.
name|iX
expr_stmt|;
block|}
name|itemSpacingMax
operator|=
name|Max
argument_list|(
name|itemSpacing1
argument_list|,
name|Max
argument_list|(
name|itemSpacing2
argument_list|,
name|itemSpacing3
argument_list|)
argument_list|)
expr_stmt|;
comment|// no itemspacing4 if no MSK
block|}
else|else
block|{
name|itemSpacing1
operator|=
name|controlPaneRect
operator|.
name|Rect
argument_list|()
operator|.
name|iBr
operator|.
name|iX
operator|-
name|controlPaneRSKText
operator|.
name|TextRect
argument_list|()
operator|.
name|iBr
operator|.
name|iX
expr_stmt|;
name|itemSpacing2
operator|=
name|controlPaneLSKText
operator|.
name|TextRect
argument_list|()
operator|.
name|iTl
operator|.
name|iX
operator|-
name|controlPaneRect
operator|.
name|Rect
argument_list|()
operator|.
name|iTl
operator|.
name|iX
expr_stmt|;
if|if
condition|(
operator|!
operator|(
name|AknLayoutUtils
operator|::
name|PenEnabled
argument_list|()
operator|||
name|landscape
operator|)
condition|)
comment|// no MSK in touch, nor in landscape
block|{
name|itemSpacing3
operator|=
name|controlPaneRSKText
operator|.
name|TextRect
argument_list|()
operator|.
name|iTl
operator|.
name|iX
operator|-
name|controlPaneMSKText
operator|.
name|TextRect
argument_list|()
operator|.
name|iBr
operator|.
name|iX
expr_stmt|;
name|itemSpacing4
operator|=
name|controlPaneMSKText
operator|.
name|TextRect
argument_list|()
operator|.
name|iTl
operator|.
name|iX
operator|-
name|controlPaneLSKText
operator|.
name|TextRect
argument_list|()
operator|.
name|iBr
operator|.
name|iX
expr_stmt|;
block|}
name|itemSpacingMax
operator|=
name|Max
argument_list|(
name|itemSpacing1
argument_list|,
name|Max
argument_list|(
name|itemSpacing2
argument_list|,
name|Max
argument_list|(
name|itemSpacing3
argument_list|,
name|itemSpacing4
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|value
operator|=
name|itemSpacingMax
expr_stmt|;
block|}
break|break;
case|case
name|QStyle
operator|::
name|PM_MenuBarHMargin
case|:
block|{
name|TAknLayoutRect
name|appWindow
decl_stmt|;
name|appWindow
operator|.
name|LayoutRect
argument_list|(
name|screenRect
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|application_window
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|variety
operator|=
literal|0
expr_stmt|;
if|if
condition|(
name|landscape
condition|)
block|{
name|variety
operator|=
literal|6
expr_stmt|;
block|}
name|TAknLayoutRect
name|areaBottomRect
decl_stmt|;
name|areaBottomRect
operator|.
name|LayoutRect
argument_list|(
name|appWindow
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|area_bottom_pane
argument_list|(
name|variety
argument_list|)
argument_list|)
expr_stmt|;
comment|// variety 7 if thin status pane, 1 if no status pane, 3 if small status pane and with main pane, 4 otherwise (idle has bunch of own varieties)
name|TAknLayoutRect
name|controlPaneRect
decl_stmt|;
name|controlPaneRect
operator|.
name|LayoutRect
argument_list|(
name|areaBottomRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|control_pane
argument_list|()
argument_list|)
expr_stmt|;
name|value
operator|=
name|areaBottomRect
operator|.
name|Rect
argument_list|()
operator|.
name|Height
argument_list|()
operator|-
name|controlPaneRect
operator|.
name|Rect
argument_list|()
operator|.
name|Height
argument_list|()
expr_stmt|;
block|}
break|break;
case|case
name|QStyle
operator|::
name|PM_MenuBarVMargin
case|:
block|{
name|TAknLayoutRect
name|appWindow
decl_stmt|;
name|appWindow
operator|.
name|LayoutRect
argument_list|(
name|screenRect
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|application_window
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|variety
operator|=
literal|0
expr_stmt|;
if|if
condition|(
name|landscape
condition|)
block|{
name|variety
operator|=
literal|6
expr_stmt|;
block|}
name|TAknLayoutText
name|controlPaneLSKText
decl_stmt|;
name|TAknLayoutRect
name|areaBottomRect
decl_stmt|;
name|areaBottomRect
operator|.
name|LayoutRect
argument_list|(
name|appWindow
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|area_bottom_pane
argument_list|(
name|variety
argument_list|)
argument_list|)
expr_stmt|;
comment|// variety 7 if thin status pane, 1 if no status pane, 3 if small status pane and with main pane, 4 otherwise (idle has bunch of own varieties)
name|TAknLayoutRect
name|controlPaneRect
decl_stmt|;
name|controlPaneRect
operator|.
name|LayoutRect
argument_list|(
name|areaBottomRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|control_pane
argument_list|()
argument_list|)
expr_stmt|;
name|variety
operator|=
literal|0
expr_stmt|;
if|if
condition|(
name|AknLayoutUtils
operator|::
name|MSKEnabled
argument_list|()
condition|)
block|{
name|variety
operator|=
literal|3
expr_stmt|;
block|}
name|controlPaneLSKText
operator|.
name|LayoutText
argument_list|(
name|controlPaneRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|control_pane_t1
argument_list|(
name|variety
argument_list|)
argument_list|)
expr_stmt|;
comment|//LSK text area
name|value
operator|=
name|controlPaneRect
operator|.
name|Rect
argument_list|()
operator|.
name|Height
argument_list|()
operator|-
name|controlPaneLSKText
operator|.
name|TextRect
argument_list|()
operator|.
name|Height
argument_list|()
expr_stmt|;
block|}
break|break;
case|case
name|QStyle
operator|::
name|PM_ToolBarItemSpacing
case|:
block|{
name|TAknLayoutRect
name|popupToolBarWindow
decl_stmt|;
name|variety
operator|=
literal|4
expr_stmt|;
name|popupToolBarWindow
operator|.
name|LayoutRect
argument_list|(
name|mainPaneRect
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|popup_toolbar_window
argument_list|(
name|variety
argument_list|)
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|gridToolBarRect
decl_stmt|;
name|gridToolBarRect
operator|.
name|LayoutRect
argument_list|(
name|popupToolBarWindow
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|grid_toobar_pane
argument_list|()
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|cellToolBarRect1
decl_stmt|;
name|TAknLayoutRect
name|cellToolBarRect2
decl_stmt|;
name|cellToolBarRect1
operator|.
name|LayoutRect
argument_list|(
name|gridToolBarRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|cell_toolbar_pane
argument_list|(
literal|0
argument_list|)
operator|.
name|LayoutLine
argument_list|()
argument_list|)
expr_stmt|;
comment|//first item
name|cellToolBarRect2
operator|.
name|LayoutRect
argument_list|(
name|gridToolBarRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|cell_toolbar_pane
argument_list|(
literal|1
argument_list|)
operator|.
name|LayoutLine
argument_list|()
argument_list|)
expr_stmt|;
comment|//second item
name|value
operator|=
name|cellToolBarRect1
operator|.
name|Rect
argument_list|()
operator|.
name|iBr
operator|.
name|iX
operator|-
name|cellToolBarRect2
operator|.
name|Rect
argument_list|()
operator|.
name|iTl
operator|.
name|iX
expr_stmt|;
block|}
break|break;
case|case
name|QStyle
operator|::
name|PM_ToolBarItemMargin
case|:
block|{
name|variety
operator|=
literal|4
expr_stmt|;
name|TAknLayoutRect
name|popupToolBarWindow
decl_stmt|;
name|popupToolBarWindow
operator|.
name|LayoutRect
argument_list|(
name|mainPaneRect
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|popup_toolbar_window
argument_list|(
name|variety
argument_list|)
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|gridToolBarRect
decl_stmt|;
name|gridToolBarRect
operator|.
name|LayoutRect
argument_list|(
name|popupToolBarWindow
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|grid_toobar_pane
argument_list|()
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|cellToolBarRect1
decl_stmt|;
name|cellToolBarRect1
operator|.
name|LayoutRect
argument_list|(
name|gridToolBarRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|cell_toolbar_pane
argument_list|(
literal|0
argument_list|)
operator|.
name|LayoutLine
argument_list|()
argument_list|)
expr_stmt|;
comment|//first item
name|value
operator|=
name|gridToolBarRect
operator|.
name|Rect
argument_list|()
operator|.
name|iTl
operator|.
name|iX
operator|-
name|cellToolBarRect1
operator|.
name|Rect
argument_list|()
operator|.
name|iTl
operator|.
name|iX
expr_stmt|;
block|}
break|break;
case|case
name|QStyle
operator|::
name|PM_LayoutLeftMargin
case|:
comment|// there really isn't a default layoutting on s60, but lets use AppShell icon deployment as base
case|case
name|QStyle
operator|::
name|PM_LayoutRightMargin
case|:
case|case
name|QStyle
operator|::
name|PM_LayoutTopMargin
case|:
case|case
name|QStyle
operator|::
name|PM_LayoutBottomMargin
case|:
case|case
name|QStyle
operator|::
name|PM_LayoutHorizontalSpacing
case|:
case|case
name|QStyle
operator|::
name|PM_LayoutVerticalSpacing
case|:
block|{
comment|//since spacing and margins should be globally same, lets use same easy component as base - such as find popup
name|TAknLayoutRect
name|popup_find_windowRect
decl_stmt|;
name|TAknLayoutRect
name|bg_popup_window_pane_cp12Rect
decl_stmt|;
name|TAknLayoutRect
name|find_popup_paneRect
decl_stmt|;
name|popup_find_windowRect
operator|.
name|LayoutRect
argument_list|(
name|mainPaneRect
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|popup_find_window
argument_list|(
literal|0
argument_list|)
operator|.
name|LayoutLine
argument_list|()
argument_list|)
expr_stmt|;
name|bg_popup_window_pane_cp12Rect
operator|.
name|LayoutRect
argument_list|(
name|popup_find_windowRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|bg_popup_window_pane_cp12
argument_list|()
operator|.
name|LayoutLine
argument_list|()
argument_list|)
expr_stmt|;
name|find_popup_paneRect
operator|.
name|LayoutRect
argument_list|(
name|bg_popup_window_pane_cp12Rect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|find_popup_pane
argument_list|()
operator|.
name|LayoutLine
argument_list|()
argument_list|)
expr_stmt|;
specifier|const
name|TBool
name|mirrored
init|=
name|AknLayoutUtils
operator|::
name|LayoutMirrored
argument_list|()
decl_stmt|;
if|if
condition|(
operator|(
name|metric
operator|==
name|QStyle
operator|::
name|PM_LayoutVerticalSpacing
operator|&&
operator|!
name|mirrored
operator|)
operator|||
name|metric
operator|==
name|QStyle
operator|::
name|PM_LayoutLeftMargin
condition|)
block|{
if|if
condition|(
name|mirrored
condition|)
block|{
name|value
operator|=
name|find_popup_paneRect
operator|.
name|Rect
argument_list|()
operator|.
name|iTl
operator|.
name|iX
operator|-
name|bg_popup_window_pane_cp12Rect
operator|.
name|Rect
argument_list|()
operator|.
name|iTl
operator|.
name|iX
expr_stmt|;
block|}
else|else
block|{
name|value
operator|=
name|find_popup_paneRect
operator|.
name|Rect
argument_list|()
operator|.
name|iTl
operator|.
name|iX
operator|-
name|bg_popup_window_pane_cp12Rect
operator|.
name|Rect
argument_list|()
operator|.
name|iTl
operator|.
name|iX
expr_stmt|;
block|}
block|}
elseif|else
if|if
condition|(
name|metric
operator|==
name|QStyle
operator|::
name|PM_LayoutRightMargin
operator|||
operator|(
name|metric
operator|==
name|QStyle
operator|::
name|PM_LayoutVerticalSpacing
operator|&&
name|mirrored
operator|)
condition|)
block|{
if|if
condition|(
name|mirrored
condition|)
block|{
name|value
operator|=
name|bg_popup_window_pane_cp12Rect
operator|.
name|Rect
argument_list|()
operator|.
name|iBr
operator|.
name|iX
operator|-
name|find_popup_paneRect
operator|.
name|Rect
argument_list|()
operator|.
name|iBr
operator|.
name|iX
expr_stmt|;
block|}
else|else
block|{
name|value
operator|=
name|bg_popup_window_pane_cp12Rect
operator|.
name|Rect
argument_list|()
operator|.
name|iBr
operator|.
name|iX
operator|-
name|find_popup_paneRect
operator|.
name|Rect
argument_list|()
operator|.
name|iBr
operator|.
name|iX
expr_stmt|;
block|}
block|}
elseif|else
if|if
condition|(
name|metric
operator|==
name|QStyle
operator|::
name|PM_LayoutTopMargin
operator|||
name|metric
operator|==
name|QStyle
operator|::
name|PM_LayoutHorizontalSpacing
condition|)
block|{
name|value
operator|=
name|find_popup_paneRect
operator|.
name|Rect
argument_list|()
operator|.
name|iTl
operator|.
name|iY
operator|-
name|bg_popup_window_pane_cp12Rect
operator|.
name|Rect
argument_list|()
operator|.
name|iTl
operator|.
name|iY
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|metric
operator|==
name|QStyle
operator|::
name|PM_LayoutBottomMargin
condition|)
block|{
name|value
operator|=
name|bg_popup_window_pane_cp12Rect
operator|.
name|Rect
argument_list|()
operator|.
name|iBr
operator|.
name|iY
operator|-
name|find_popup_paneRect
operator|.
name|Rect
argument_list|()
operator|.
name|iBr
operator|.
name|iY
expr_stmt|;
block|}
block|}
break|break;
case|case
name|QStyle
operator|::
name|PM_MaximumDragDistance
case|:
block|{
name|value
operator|=
operator|-
literal|1
expr_stmt|;
comment|//disable - not in S60
block|}
break|break;
case|case
name|QStyle
operator|::
name|PM_SplitterWidth
case|:
case|case
name|QStyle
operator|::
name|PM_ScrollBarExtent
case|:
block|{
name|TAknLayoutRect
name|miscGraphicsRect
decl_stmt|;
name|miscGraphicsRect
operator|.
name|LayoutRect
argument_list|(
name|screenRect
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|misc_graphics
argument_list|()
argument_list|)
expr_stmt|;
name|miscGraphicsRect
operator|.
name|LayoutRect
argument_list|(
name|miscGraphicsRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|misc_graphics
argument_list|()
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|textsGraphicsRect
decl_stmt|;
name|textsGraphicsRect
operator|.
name|LayoutRect
argument_list|(
name|miscGraphicsRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|texts_graphics
argument_list|()
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|editorScrollRect
decl_stmt|;
name|editorScrollRect
operator|.
name|LayoutRect
argument_list|(
name|textsGraphicsRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|editor_scroll_pane
argument_list|()
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|scrollPaneRect
decl_stmt|;
name|scrollPaneRect
operator|.
name|LayoutRect
argument_list|(
name|editorScrollRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|scroll_pane_cp13
argument_list|()
argument_list|)
expr_stmt|;
name|value
operator|=
name|scrollPaneRect
operator|.
name|Rect
argument_list|()
operator|.
name|Width
argument_list|()
expr_stmt|;
comment|// width of editor's scroll bar
block|}
break|break;
case|case
name|QStyle
operator|::
name|PM_ScrollBarSliderMin
case|:
block|{
name|TAknLayoutRect
name|listScrollPane
decl_stmt|;
name|listScrollPane
operator|.
name|LayoutRect
argument_list|(
name|mainPaneRect
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|listscroll_gen_pane
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|scrollPane
decl_stmt|;
name|scrollPane
operator|.
name|LayoutRect
argument_list|(
name|listScrollPane
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|scroll_pane
argument_list|()
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|scrollHandlePane
decl_stmt|;
name|scrollHandlePane
operator|.
name|LayoutRect
argument_list|(
name|scrollPane
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|scroll_handle_pane
argument_list|()
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|aidMinSizePane
decl_stmt|;
name|aidMinSizePane
operator|.
name|LayoutRect
argument_list|(
name|scrollHandlePane
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|aid_size_min_handle
argument_list|()
argument_list|)
expr_stmt|;
comment|// this gives min width size for horizontal scroll bar - same can be used for vertical height minimum
name|value
operator|=
name|aidMinSizePane
operator|.
name|Rect
argument_list|()
operator|.
name|Height
argument_list|()
expr_stmt|;
block|}
break|break;
case|case
name|QStyle
operator|::
name|PM_MenuBarPanelWidth
case|:
block|{
name|TAknLayoutRect
name|appWindow
decl_stmt|;
name|appWindow
operator|.
name|LayoutRect
argument_list|(
name|screenRect
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|application_window
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|variety
operator|=
literal|0
expr_stmt|;
if|if
condition|(
name|landscape
condition|)
block|{
name|variety
operator|=
literal|2
expr_stmt|;
block|}
name|TAknLayoutRect
name|areaBottomRect
decl_stmt|;
name|areaBottomRect
operator|.
name|LayoutRect
argument_list|(
name|appWindow
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|area_bottom_pane
argument_list|(
name|variety
argument_list|)
argument_list|)
expr_stmt|;
comment|// todo: prt: variety 7 if thin status pane, 1 if no status pane, 3 if small status pane and with main pane, 4 otherwise (idle has bunch of own varieties)
comment|// todo: lsc: variety 6 if thin status pane
comment|// todo: should stacon be considered?
name|TAknLayoutRect
name|controlPaneRect
decl_stmt|;
name|controlPaneRect
operator|.
name|LayoutRect
argument_list|(
name|areaBottomRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|control_pane
argument_list|()
argument_list|)
expr_stmt|;
name|value
operator|=
name|areaBottomRect
operator|.
name|Rect
argument_list|()
operator|.
name|Height
argument_list|()
operator|-
name|controlPaneRect
operator|.
name|Rect
argument_list|()
operator|.
name|Height
argument_list|()
expr_stmt|;
comment|//usually zero
block|}
break|break;
case|case
name|QStyle
operator|::
name|PM_ProgressBarChunkWidth
case|:
block|{
comment|// This is either deduced or skinned (for Java) in S60
comment|// Layout data does not know it. It would require parameters from the
comment|// actual progress dialog to be able to calc this (max. value and increment)
comment|// So we need to set up some values - lets take one tenth of progress dialog area:
name|TAknLayoutRect
name|appWindow
decl_stmt|;
name|appWindow
operator|.
name|LayoutRect
argument_list|(
name|screenRect
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|application_window
argument_list|(
name|variety
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|landscape
condition|)
block|{
name|variety
operator|=
literal|6
expr_stmt|;
block|}
name|TAknLayoutRect
name|popupWaitWindowRect
decl_stmt|;
name|popupWaitWindowRect
operator|.
name|LayoutRect
argument_list|(
name|mainPaneRect
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|popup_note_wait_window
argument_list|(
name|variety
argument_list|)
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|waitbarPaneRect
decl_stmt|;
name|waitbarPaneRect
operator|.
name|LayoutRect
argument_list|(
name|popupWaitWindowRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|wait_bar_pane
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|waitAnimRect
decl_stmt|;
name|waitAnimRect
operator|.
name|LayoutRect
argument_list|(
name|waitbarPaneRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|wait_anim_pane
argument_list|()
argument_list|)
expr_stmt|;
name|value
operator|=
call|(
name|TInt
call|)
argument_list|(
name|waitAnimRect
operator|.
name|Rect
argument_list|()
operator|.
name|Width
argument_list|()
operator|/
literal|10
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|QStyle
operator|::
name|PM_TabBarTabOverlap
case|:
case|case
name|QStyle
operator|::
name|PM_TabBarTabHSpace
case|:
case|case
name|QStyle
operator|::
name|PM_TabBarTabVSpace
case|:
case|case
name|QStyle
operator|::
name|PM_TabBarBaseHeight
case|:
case|case
name|QStyle
operator|::
name|PM_TabBarBaseOverlap
case|:
case|case
name|QStyle
operator|::
name|PM_TabBarScrollButtonWidth
case|:
case|case
name|QStyle
operator|::
name|PM_TabBarTabShiftHorizontal
case|:
case|case
name|QStyle
operator|::
name|PM_TabBarTabShiftVertical
case|:
name|value
operator|=
name|PixelMetricTabValue
argument_list|(
name|metric
argument_list|,
name|appWindow
operator|.
name|Rect
argument_list|()
argument_list|,
name|landscape
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_MenuPanelWidth
case|:
case|case
name|QStyle
operator|::
name|PM_MenuHMargin
case|:
case|case
name|QStyle
operator|::
name|PM_MenuVMargin
case|:
name|value
operator|=
name|PixelMetricMenuValue
argument_list|(
name|metric
argument_list|,
name|mainPaneRect
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_ButtonIconSize
case|:
block|{
comment|//lets use voice recorder icons as a base
comment|//Unfortunately S60 graphics don't separate button bevel graphics from the actual icon.
comment|//Se we have no means to query the margin from bevel border to "central icon" border.
comment|//So, we need to make a estimate...
name|TAknLayoutRect
name|vRMainRect
decl_stmt|;
name|vRMainRect
operator|.
name|LayoutRect
argument_list|(
name|mainPaneRect
argument_list|,
name|AknLayoutScalable_Apps
operator|::
name|main_vorec_pane
argument_list|()
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|vRButtonGridRect
decl_stmt|;
name|vRButtonGridRect
operator|.
name|LayoutRect
argument_list|(
name|vRMainRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Apps
operator|::
name|grid_vorec_pane
argument_list|()
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|vRButtonCellRect
decl_stmt|;
name|vRButtonCellRect
operator|.
name|LayoutRect
argument_list|(
name|vRButtonGridRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Apps
operator|::
name|cell_vorec_pane
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|vRButtonCellGraphicsRect
decl_stmt|;
name|vRButtonCellGraphicsRect
operator|.
name|LayoutRect
argument_list|(
name|vRButtonCellRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Apps
operator|::
name|cell_vorec_pane_g1
argument_list|()
argument_list|)
expr_stmt|;
comment|// 0.32 is the estimate how much the icon occupies of the button bevel area
name|value
operator|=
name|vRButtonCellGraphicsRect
operator|.
name|Rect
argument_list|()
operator|.
name|Width
argument_list|()
operator|*
literal|0.32
expr_stmt|;
block|}
break|break;
case|case
name|QStyle
operator|::
name|PM_SmallIconSize
case|:
block|{
comment|// lets use AI2 icon as a base
name|TAknLayoutRect
name|idlePaneRect
decl_stmt|;
name|idlePaneRect
operator|.
name|LayoutRect
argument_list|(
name|mainPaneRect
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|main_idle_act2_pane
argument_list|()
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|idleDataRect
decl_stmt|;
name|idleDataRect
operator|.
name|LayoutRect
argument_list|(
name|idlePaneRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|popup_ai2_data_window
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|ai2GridRect
decl_stmt|;
name|ai2GridRect
operator|.
name|LayoutRect
argument_list|(
name|idleDataRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|grid_ai2_button_pane
argument_list|()
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|ai2MpRect
decl_stmt|;
name|ai2MpRect
operator|.
name|LayoutRect
argument_list|(
name|ai2GridRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|ai2_mp_button_pane
argument_list|()
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|ai2CellPaneRect
decl_stmt|;
name|ai2CellPaneRect
operator|.
name|LayoutRect
argument_list|(
name|ai2MpRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|cell_ai2_button_pane
argument_list|(
literal|1
argument_list|)
operator|.
name|LayoutLine
argument_list|()
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|ai2CellButtonRect
decl_stmt|;
name|ai2CellButtonRect
operator|.
name|LayoutRect
argument_list|(
name|ai2CellPaneRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|cell_ai2_button_pane_g1
argument_list|()
argument_list|)
expr_stmt|;
name|value
operator|=
name|Min
argument_list|(
name|ai2CellButtonRect
operator|.
name|Rect
argument_list|()
operator|.
name|Width
argument_list|()
argument_list|,
name|ai2CellButtonRect
operator|.
name|Rect
argument_list|()
operator|.
name|Height
argument_list|()
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|QStyle
operator|::
name|PM_FocusFrameHMargin
case|:
case|case
name|QStyle
operator|::
name|PM_FocusFrameVMargin
case|:
block|{
name|TAknLayoutRect
name|listScrollPane
decl_stmt|;
name|listScrollPane
operator|.
name|LayoutRect
argument_list|(
name|mainPaneRect
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|listscroll_gen_pane
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|listGenPane
decl_stmt|;
name|listGenPane
operator|.
name|LayoutRect
argument_list|(
name|listScrollPane
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|list_gen_pane
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|listSinglePane
decl_stmt|;
name|listSinglePane
operator|.
name|LayoutRect
argument_list|(
name|listGenPane
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|list_single_pane
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|TAknLayoutText
name|listSinglePaneText
decl_stmt|;
name|listSinglePaneText
operator|.
name|LayoutText
argument_list|(
name|listSinglePane
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|list_single_pane_t1
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|highlightRect
decl_stmt|;
name|highlightRect
operator|.
name|LayoutRect
argument_list|(
name|listSinglePane
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|list_highlight_pane_cp1
argument_list|()
operator|.
name|LayoutLine
argument_list|()
argument_list|)
expr_stmt|;
comment|// The difference of center piece from border tell the frame width.
if|if
condition|(
name|value
operator|==
name|QStyle
operator|::
name|PM_FocusFrameHMargin
condition|)
block|{
comment|//use topleft for horizontal as S60 uses different values for right and left borders
name|value
operator|=
name|listSinglePaneText
operator|.
name|TextRect
argument_list|()
operator|.
name|iTl
operator|.
name|iX
operator|-
name|highlightRect
operator|.
name|Rect
argument_list|()
operator|.
name|iTl
operator|.
name|iX
expr_stmt|;
block|}
else|else
block|{
name|value
operator|=
name|highlightRect
operator|.
name|Rect
argument_list|()
operator|.
name|iBr
operator|.
name|iY
operator|-
name|listSinglePaneText
operator|.
name|TextRect
argument_list|()
operator|.
name|iBr
operator|.
name|iY
expr_stmt|;
block|}
block|}
break|break;
case|case
name|QStyle
operator|::
name|PM_ToolBarIconSize
case|:
block|{
name|TAknLayoutRect
name|popupToolBarWindow
decl_stmt|;
name|variety
operator|=
literal|4
expr_stmt|;
name|popupToolBarWindow
operator|.
name|LayoutRect
argument_list|(
name|mainPaneRect
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|popup_toolbar_window
argument_list|(
name|variety
argument_list|)
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|gridToolBarRect
decl_stmt|;
name|gridToolBarRect
operator|.
name|LayoutRect
argument_list|(
name|popupToolBarWindow
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|grid_toobar_pane
argument_list|()
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|cellToolBarRect1
decl_stmt|;
name|TAknLayoutRect
name|cellToolBarRect2
decl_stmt|;
name|cellToolBarRect1
operator|.
name|LayoutRect
argument_list|(
name|gridToolBarRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|cell_toolbar_pane
argument_list|(
literal|0
argument_list|)
operator|.
name|LayoutLine
argument_list|()
argument_list|)
expr_stmt|;
comment|//first item
name|value
operator|=
name|Min
argument_list|(
name|cellToolBarRect1
operator|.
name|Rect
argument_list|()
operator|.
name|Height
argument_list|()
argument_list|,
name|cellToolBarRect1
operator|.
name|Rect
argument_list|()
operator|.
name|Width
argument_list|()
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|QStyle
operator|::
name|PM_TitleBarHeight
case|:
comment|// use titlepane height
block|{
name|TAknLayoutRect
name|statusPaneRect
decl_stmt|;
name|TAknLayoutRect
name|titlePane
decl_stmt|;
name|TAknLayoutRect
name|areaTopRect
decl_stmt|;
if|if
condition|(
name|landscape
condition|)
block|{
if|if
condition|(
name|AknLayoutUtils
operator|::
name|PenEnabled
argument_list|()
condition|)
block|{
comment|// Top area - 0 is for classic landscape (used in touch landscape as well)
name|areaTopRect
operator|.
name|LayoutRect
argument_list|(
name|appWindow
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|area_top_pane
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
comment|// Status pane - 0 softkeys on right
name|statusPaneRect
operator|.
name|LayoutRect
argument_list|(
name|areaTopRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|stacon_top_pane
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// Top area - 2 is for classic landscape.
name|areaTopRect
operator|.
name|LayoutRect
argument_list|(
name|appWindow
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|area_bottom_pane
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
comment|// Stacon top pane (default ok)
name|statusPaneRect
operator|.
name|LayoutRect
argument_list|(
name|areaTopRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|stacon_bottom_pane
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|titlePane
operator|.
name|LayoutRect
argument_list|(
name|areaTopRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|title_pane_stacon
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|//softkeys on right
block|}
else|else
block|{
comment|// Top area - 0 is for classic portrait
name|areaTopRect
operator|.
name|LayoutRect
argument_list|(
name|appWindow
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|area_top_pane
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|// Status pane - 0 is for classic portrait
name|statusPaneRect
operator|.
name|LayoutRect
argument_list|(
name|areaTopRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|status_pane
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|titlePane
operator|.
name|LayoutRect
argument_list|(
name|statusPaneRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|title_pane
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|value
operator|=
name|titlePane
operator|.
name|Rect
argument_list|()
operator|.
name|Height
argument_list|()
expr_stmt|;
block|}
break|break;
case|case
name|QStyle
operator|::
name|PM_IndicatorWidth
case|:
case|case
name|QStyle
operator|::
name|PM_IndicatorHeight
case|:
block|{
name|TRect
name|rectParent
argument_list|(
name|mainPaneRect
argument_list|)
decl_stmt|;
name|TAknLayoutRect
name|layoutRect
decl_stmt|;
name|layoutRect
operator|.
name|LayoutRect
argument_list|(
name|rectParent
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|set_content_pane
argument_list|()
operator|.
name|LayoutLine
argument_list|()
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|layoutRect2
decl_stmt|;
name|layoutRect2
operator|.
name|LayoutRect
argument_list|(
name|layoutRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|list_set_graphic_pane
argument_list|(
literal|0
argument_list|)
operator|.
name|LayoutLine
argument_list|()
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|iconLayoutRect
decl_stmt|;
name|iconLayoutRect
operator|.
name|LayoutRect
argument_list|(
name|layoutRect2
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|list_set_graphic_pane_g1
argument_list|(
literal|0
argument_list|)
operator|.
name|LayoutLine
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|metric
operator|==
name|QStyle
operator|::
name|PM_IndicatorWidth
condition|)
block|{
name|value
operator|=
name|iconLayoutRect
operator|.
name|Rect
argument_list|()
operator|.
name|Width
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|value
operator|=
name|iconLayoutRect
operator|.
name|Rect
argument_list|()
operator|.
name|Height
argument_list|()
expr_stmt|;
block|}
block|}
break|break;
case|case
name|QStyle
operator|::
name|PM_ExclusiveIndicatorHeight
case|:
case|case
name|QStyle
operator|::
name|PM_ExclusiveIndicatorWidth
case|:
block|{
name|TRect
name|rectParent
argument_list|(
name|mainPaneRect
argument_list|)
decl_stmt|;
name|TAknLayoutRect
name|layoutRect
decl_stmt|;
name|layoutRect
operator|.
name|LayoutRect
argument_list|(
name|rectParent
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|list_choice_list_pane
argument_list|(
literal|1
argument_list|)
operator|.
name|LayoutLine
argument_list|()
argument_list|)
expr_stmt|;
comment|// w/ scrollbar
name|TAknLayoutText
name|itemText
decl_stmt|;
name|itemText
operator|.
name|LayoutText
argument_list|(
name|layoutRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|list_single_choice_list_pane_t1
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|iconLayoutRect
decl_stmt|;
name|iconLayoutRect
operator|.
name|LayoutRect
argument_list|(
name|layoutRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|list_single_choice_list_pane_g1
argument_list|()
operator|.
name|LayoutLine
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|metric
operator|==
name|QStyle
operator|::
name|PM_ExclusiveIndicatorHeight
condition|)
block|{
name|value
operator|=
name|iconLayoutRect
operator|.
name|Rect
argument_list|()
operator|.
name|Height
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|value
operator|=
name|iconLayoutRect
operator|.
name|Rect
argument_list|()
operator|.
name|Width
argument_list|()
expr_stmt|;
block|}
block|}
break|break;
comment|// These are obsolete.
case|case
name|QStyle
operator|::
name|PM_DefaultTopLevelMargin
case|:
case|case
name|QStyle
operator|::
name|PM_DefaultChildMargin
case|:
case|case
name|QStyle
operator|::
name|PM_DefaultLayoutSpacing
case|:
break|break;
case|case
name|QStyle
operator|::
name|PM_Custom_FrameCornerWidth
case|:
block|{
name|TAknLayoutRect
name|inputFocusRect
decl_stmt|;
name|inputFocusRect
operator|.
name|LayoutRect
argument_list|(
name|mainPaneRect
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|input_focus_pane
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|inputFocusInnerRect
decl_stmt|;
name|inputFocusInnerRect
operator|.
name|LayoutRect
argument_list|(
name|mainPaneRect
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|input_focus_pane_g1
argument_list|()
argument_list|)
expr_stmt|;
name|value
operator|=
name|inputFocusRect
operator|.
name|Rect
argument_list|()
operator|.
name|iBr
operator|.
name|iX
operator|-
name|inputFocusInnerRect
operator|.
name|Rect
argument_list|()
operator|.
name|iBr
operator|.
name|iX
expr_stmt|;
name|value
operator|+=
literal|2
expr_stmt|;
comment|//visually better value for generic cases
block|}
break|break;
case|case
name|QStyle
operator|::
name|PM_Custom_FrameCornerHeight
case|:
block|{
name|TAknLayoutRect
name|inputFocusRect
decl_stmt|;
name|inputFocusRect
operator|.
name|LayoutRect
argument_list|(
name|mainPaneRect
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|input_focus_pane
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|inputFocusInnerRect
decl_stmt|;
name|inputFocusInnerRect
operator|.
name|LayoutRect
argument_list|(
name|mainPaneRect
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|input_focus_pane_g1
argument_list|()
argument_list|)
expr_stmt|;
name|value
operator|=
name|inputFocusRect
operator|.
name|Rect
argument_list|()
operator|.
name|iBr
operator|.
name|iY
operator|-
name|inputFocusInnerRect
operator|.
name|Rect
argument_list|()
operator|.
name|iBr
operator|.
name|iY
expr_stmt|;
name|value
operator|+=
literal|2
expr_stmt|;
comment|//visually better value for generic cases
block|}
break|break;
case|case
name|QStyle
operator|::
name|PM_Custom_BoldLineWidth
case|:
name|value
operator|=
literal|3
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_Custom_ThinLineWidth
case|:
name|value
operator|=
literal|1
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_Custom_MessageBoxHeight
case|:
block|{
name|TAknLayoutRect
name|popupRect
decl_stmt|;
name|popupRect
operator|.
name|LayoutRect
argument_list|(
name|mainPaneRect
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|popup_window_general
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|value
operator|=
name|popupRect
operator|.
name|Rect
argument_list|()
operator|.
name|Height
argument_list|()
expr_stmt|;
block|}
break|break;
case|case
name|QStyle
operator|::
name|PM_ButtonShiftHorizontal
case|:
case|case
name|QStyle
operator|::
name|PM_ButtonShiftVertical
case|:
name|value
operator|=
literal|0
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_ToolBarExtensionExtent
case|:
name|value
operator|=
name|PixelMetricTabValue
argument_list|(
name|QStyle
operator|::
name|PM_TabBarScrollButtonWidth
argument_list|,
name|appWindow
operator|.
name|Rect
argument_list|()
argument_list|,
name|landscape
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_MenuScrollerHeight
case|:
block|{
name|TRect
name|rectParent
argument_list|(
name|mainPaneRect
argument_list|)
decl_stmt|;
name|TAknLayoutRect
name|listWidthScrollBarsRect
decl_stmt|;
name|listWidthScrollBarsRect
operator|.
name|LayoutRect
argument_list|(
name|rectParent
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|listscroll_gen_pane
argument_list|(
literal|0
argument_list|)
operator|.
name|LayoutLine
argument_list|()
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|listWidgetRect
decl_stmt|;
name|listWidgetRect
operator|.
name|LayoutRect
argument_list|(
name|listWidthScrollBarsRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|list_gen_pane
argument_list|(
literal|0
argument_list|)
operator|.
name|LayoutLine
argument_list|()
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|singleLineListWidgetRect
decl_stmt|;
name|singleLineListWidgetRect
operator|.
name|LayoutRect
argument_list|(
name|listWidgetRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|list_single_pane
argument_list|(
literal|0
argument_list|)
operator|.
name|LayoutLine
argument_list|()
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|listHighlightRect
decl_stmt|;
name|listHighlightRect
operator|.
name|LayoutRect
argument_list|(
name|singleLineListWidgetRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|list_highlight_pane_cp1
argument_list|(
literal|0
argument_list|)
operator|.
name|LayoutLine
argument_list|()
argument_list|)
expr_stmt|;
name|value
operator|=
name|listHighlightRect
operator|.
name|Rect
argument_list|()
operator|.
name|Height
argument_list|()
expr_stmt|;
block|}
break|break;
comment|// todo: re-check if these really are not available in s60
case|case
name|QStyle
operator|::
name|PM_MenuDesktopFrameWidth
case|:
comment|// not needed in S60 - dislocates Menu both horizontally and vertically
case|case
name|QStyle
operator|::
name|PM_HeaderMarkSize
case|:
comment|// The size of the sort indicator in a header. Not in S60
case|case
name|QStyle
operator|::
name|PM_SpinBoxSliderHeight
case|:
comment|// The height of the optional spin box slider. Not in S60
case|case
name|QStyle
operator|::
name|PM_HeaderMargin
case|:
comment|// not in S60
case|case
name|QStyle
operator|::
name|PM_MenuTearoffHeight
case|:
comment|// not in S60
case|case
name|QStyle
operator|::
name|PM_DockWidgetFrameWidth
case|:
comment|// not in S60
case|case
name|QStyle
operator|::
name|PM_DockWidgetSeparatorExtent
case|:
comment|// not in S60
case|case
name|QStyle
operator|::
name|PM_MdiSubWindowMinimizedWidth
case|:
comment|//no such thing in S60
case|case
name|QStyle
operator|::
name|PM_HeaderGripMargin
case|:
comment|// not in S60
case|case
name|QStyle
operator|::
name|PM_ToolBarSeparatorExtent
case|:
comment|// not in S60
case|case
name|QStyle
operator|::
name|PM_ToolBarHandleExtent
case|:
comment|// not in s60
case|case
name|QStyle
operator|::
name|PM_MenuButtonIndicator
case|:
comment|// none???
case|case
name|QStyle
operator|::
name|PM_TabBar_ScrollButtonOverlap
case|:
comment|// not used in S60 - tab arrows are on left and right side of tab group - not together
case|case
name|QStyle
operator|::
name|PM_SizeGripSize
case|:
comment|// use default
case|case
name|QStyle
operator|::
name|PM_TabCloseIndicatorWidth
case|:
case|case
name|QStyle
operator|::
name|PM_TabCloseIndicatorHeight
case|:
case|case
name|QStyle
operator|::
name|PM_ScrollView_ScrollBarSpacing
case|:
case|case
name|QStyle
operator|::
name|PM_SubMenuOverlap
case|:
default|default:
break|break;
block|}
return|return
name|value
return|;
block|}
end_function
begin_function
DECL|function|PixelMetricTabValue
name|TInt
name|PixelMetrics
operator|::
name|PixelMetricTabValue
parameter_list|(
name|QStyle
operator|::
name|PixelMetric
name|tabMetric
parameter_list|,
name|TRect
name|appWindow
parameter_list|,
name|TBool
name|landscape
parameter_list|)
block|{
name|TInt
name|tabValue
init|=
literal|0
decl_stmt|;
comment|// common ones
name|TAknLayoutRect
name|mainAreaRect
decl_stmt|;
name|TAknLayoutRect
name|rightIndicationRect
decl_stmt|;
name|TAknLayoutRect
name|leftIndicationRect
decl_stmt|;
name|TAknLayoutRect
name|activeTabRect
decl_stmt|;
name|TAknLayoutText
name|activeTabTextRect
decl_stmt|;
name|TAknLayoutRect
name|passiveTabRect
decl_stmt|;
name|TAknLayoutText
name|passiveTabTextRect
decl_stmt|;
name|TAknLayoutRect
name|tabsPaneRect
decl_stmt|;
if|if
condition|(
name|landscape
condition|)
block|{
name|TAknLayoutRect
name|statusPaneRect
decl_stmt|;
name|TAknLayoutRect
name|areaTopRect
decl_stmt|;
if|if
condition|(
name|AknLayoutUtils
operator|::
name|PenEnabled
argument_list|()
condition|)
block|{
comment|// Top area - 0 is for classic landscape (used in touch landscape as well)
name|areaTopRect
operator|.
name|LayoutRect
argument_list|(
name|appWindow
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|area_top_pane
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
comment|// Status pane - 0 softkeys on right
name|statusPaneRect
operator|.
name|LayoutRect
argument_list|(
name|areaTopRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|stacon_top_pane
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// Top area - 2 is for classic landscape.
name|areaTopRect
operator|.
name|LayoutRect
argument_list|(
name|appWindow
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|area_bottom_pane
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
comment|// Stacon top pane (default ok)
name|statusPaneRect
operator|.
name|LayoutRect
argument_list|(
name|areaTopRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|stacon_bottom_pane
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// main pane for landscape
name|mainAreaRect
operator|.
name|LayoutRect
argument_list|(
name|appWindow
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|main_pane
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
comment|// navi pane
name|TAknLayoutRect
name|naviPaneRect
decl_stmt|;
name|naviPaneRect
operator|.
name|LayoutRect
argument_list|(
name|statusPaneRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|navi_pane_stacon
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|// softkeys on right
comment|// navi-navi pane
name|tabsPaneRect
operator|.
name|LayoutRect
argument_list|(
name|naviPaneRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|navi_navi_pane_stacon
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|// softkeys on right
comment|// Passive tab item - lets use layout where active is on left side of passive
name|passiveTabRect
operator|.
name|LayoutRect
argument_list|(
name|tabsPaneRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|tabs_3_passive_pane
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|// Active tab item
name|activeTabRect
operator|.
name|LayoutRect
argument_list|(
name|tabsPaneRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|tabs_3_active_pane
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|// Left indication
name|leftIndicationRect
operator|.
name|LayoutRect
argument_list|(
name|tabsPaneRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|navi_navi_pane_g1
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|// Right indication
name|rightIndicationRect
operator|.
name|LayoutRect
argument_list|(
name|tabsPaneRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|navi_navi_pane_g2
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|// active tab text rect
name|activeTabTextRect
operator|.
name|LayoutText
argument_list|(
name|activeTabRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|tabs_3_active_pane_t1
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// passive tab text rect
name|passiveTabTextRect
operator|.
name|LayoutText
argument_list|(
name|passiveTabRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|tabs_3_passive_pane_t1
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// main pane for portait
name|mainAreaRect
operator|.
name|LayoutRect
argument_list|(
name|appWindow
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|main_pane
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
comment|// Top area - 0 is for classic portrait
name|TAknLayoutRect
name|areaTopRect
decl_stmt|;
name|areaTopRect
operator|.
name|LayoutRect
argument_list|(
name|appWindow
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|area_top_pane
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|// Status pane - 0 is for classic portrait
name|TAknLayoutRect
name|statusPaneRect
decl_stmt|;
name|statusPaneRect
operator|.
name|LayoutRect
argument_list|(
name|areaTopRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|status_pane
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|// Navi pane
name|TAknLayoutRect
name|naviPaneRect
decl_stmt|;
name|naviPaneRect
operator|.
name|LayoutRect
argument_list|(
name|statusPaneRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|navi_pane
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|// Navi-navi pane for tabs (0)
name|TAknLayoutRect
name|navi2PaneRect
decl_stmt|;
name|navi2PaneRect
operator|.
name|LayoutRect
argument_list|(
name|naviPaneRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|navi_navi_pane
argument_list|()
argument_list|)
expr_stmt|;
comment|// Short tab pane
name|tabsPaneRect
operator|.
name|LayoutRect
argument_list|(
name|navi2PaneRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|navi_navi_tabs_pane
argument_list|()
argument_list|)
expr_stmt|;
comment|// Tab pane for 2 items
name|TAknLayoutRect
name|tab2PaneRect
decl_stmt|;
name|tab2PaneRect
operator|.
name|LayoutRect
argument_list|(
name|tabsPaneRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|navi_tabs_3_pane
argument_list|()
argument_list|)
expr_stmt|;
comment|// Passive tab item - lets use layout where active is on left side of passive
name|passiveTabRect
operator|.
name|LayoutRect
argument_list|(
name|tab2PaneRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|tabs_3_passive_pane
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|// Active tab item
name|activeTabRect
operator|.
name|LayoutRect
argument_list|(
name|tab2PaneRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|tabs_3_active_pane
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|// Left indication
name|leftIndicationRect
operator|.
name|LayoutRect
argument_list|(
name|tabsPaneRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|navi_navi_pane_g1
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|// Right indication
name|rightIndicationRect
operator|.
name|LayoutRect
argument_list|(
name|tabsPaneRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|navi_navi_pane_g2
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|// active tab text rect
name|activeTabTextRect
operator|.
name|LayoutText
argument_list|(
name|activeTabRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|tabs_3_active_pane_t1
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|// passive tab text rect
name|passiveTabTextRect
operator|.
name|LayoutText
argument_list|(
name|passiveTabRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|tabs_3_passive_pane_t1
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// active tab on left, passive on rightside
name|TInt
name|tabOverlap
init|=
name|activeTabRect
operator|.
name|Rect
argument_list|()
operator|.
name|iBr
operator|.
name|iX
operator|-
name|passiveTabRect
operator|.
name|Rect
argument_list|()
operator|.
name|iTl
operator|.
name|iX
decl_stmt|;
name|TInt
name|tabHSpace
init|=
call|(
name|TInt
call|)
argument_list|(
operator|(
name|activeTabTextRect
operator|.
name|TextRect
argument_list|()
operator|.
name|iTl
operator|.
name|iX
operator|-
name|activeTabRect
operator|.
name|Rect
argument_list|()
operator|.
name|iTl
operator|.
name|iX
operator|+
name|activeTabRect
operator|.
name|Rect
argument_list|()
operator|.
name|iBr
operator|.
name|iX
operator|-
name|activeTabTextRect
operator|.
name|TextRect
argument_list|()
operator|.
name|iBr
operator|.
name|iX
operator|)
operator|/
literal|2
argument_list|)
decl_stmt|;
name|TInt
name|tabVSpace
init|=
call|(
name|TInt
call|)
argument_list|(
operator|(
name|activeTabTextRect
operator|.
name|TextRect
argument_list|()
operator|.
name|iTl
operator|.
name|iY
operator|-
name|activeTabRect
operator|.
name|Rect
argument_list|()
operator|.
name|iTl
operator|.
name|iY
operator|+
name|activeTabRect
operator|.
name|Rect
argument_list|()
operator|.
name|iBr
operator|.
name|iY
operator|-
name|activeTabTextRect
operator|.
name|TextRect
argument_list|()
operator|.
name|iBr
operator|.
name|iY
operator|)
operator|/
literal|2
argument_list|)
decl_stmt|;
name|TInt
name|tabBaseHeight
init|=
literal|0
decl_stmt|;
if|if
condition|(
name|landscape
operator|&&
operator|!
name|AknLayoutUtils
operator|::
name|PenEnabled
argument_list|()
condition|)
block|{
comment|// In landscape tab is below mainpane
name|tabBaseHeight
operator|=
name|mainAreaRect
operator|.
name|Rect
argument_list|()
operator|.
name|iBr
operator|.
name|iY
operator|-
name|tabsPaneRect
operator|.
name|Rect
argument_list|()
operator|.
name|iTl
operator|.
name|iY
expr_stmt|;
block|}
else|else
block|{
comment|// In portrait (and in landscape touch) tab is above mainpane
name|tabBaseHeight
operator|=
name|tabsPaneRect
operator|.
name|Rect
argument_list|()
operator|.
name|iBr
operator|.
name|iY
operator|-
name|mainAreaRect
operator|.
name|Rect
argument_list|()
operator|.
name|iTl
operator|.
name|iY
expr_stmt|;
block|}
name|TInt
name|tabBaseOverlap
init|=
literal|0
decl_stmt|;
if|if
condition|(
name|landscape
operator|&&
operator|!
name|AknLayoutUtils
operator|::
name|PenEnabled
argument_list|()
condition|)
block|{
comment|// In landscape tab is below mainpane
name|tabBaseOverlap
operator|=
name|Max
argument_list|(
literal|0
argument_list|,
name|mainAreaRect
operator|.
name|Rect
argument_list|()
operator|.
name|iBr
operator|.
name|iY
operator|-
name|tabsPaneRect
operator|.
name|Rect
argument_list|()
operator|.
name|iTl
operator|.
name|iY
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// In portrait tab is above mainpane
name|tabBaseOverlap
operator|=
name|Max
argument_list|(
literal|0
argument_list|,
name|mainAreaRect
operator|.
name|Rect
argument_list|()
operator|.
name|iTl
operator|.
name|iY
operator|-
name|tabsPaneRect
operator|.
name|Rect
argument_list|()
operator|.
name|iBr
operator|.
name|iY
argument_list|)
expr_stmt|;
block|}
name|TInt
name|tabButtonWidth
init|=
name|Max
argument_list|(
name|leftIndicationRect
operator|.
name|Rect
argument_list|()
operator|.
name|Width
argument_list|()
argument_list|,
name|rightIndicationRect
operator|.
name|Rect
argument_list|()
operator|.
name|Width
argument_list|()
argument_list|)
decl_stmt|;
name|TInt
name|tabVShift
init|=
name|Max
argument_list|(
name|Abs
argument_list|(
name|activeTabTextRect
operator|.
name|TextRect
argument_list|()
operator|.
name|iBr
operator|.
name|iY
operator|-
name|passiveTabTextRect
operator|.
name|TextRect
argument_list|()
operator|.
name|iBr
operator|.
name|iY
argument_list|)
argument_list|,
name|Abs
argument_list|(
name|activeTabTextRect
operator|.
name|TextRect
argument_list|()
operator|.
name|iTl
operator|.
name|iY
operator|-
name|passiveTabTextRect
operator|.
name|TextRect
argument_list|()
operator|.
name|iTl
operator|.
name|iY
argument_list|)
argument_list|)
decl_stmt|;
name|TInt
name|tabHShift
init|=
name|Max
argument_list|(
name|Abs
argument_list|(
name|activeTabTextRect
operator|.
name|TextRect
argument_list|()
operator|.
name|iBr
operator|.
name|iX
operator|-
name|passiveTabTextRect
operator|.
name|TextRect
argument_list|()
operator|.
name|iBr
operator|.
name|iX
argument_list|)
argument_list|,
name|Abs
argument_list|(
name|activeTabTextRect
operator|.
name|TextRect
argument_list|()
operator|.
name|iTl
operator|.
name|iX
operator|-
name|passiveTabTextRect
operator|.
name|TextRect
argument_list|()
operator|.
name|iTl
operator|.
name|iX
argument_list|)
argument_list|)
decl_stmt|;
name|tabHShift
operator|-=
operator|(
name|passiveTabRect
operator|.
name|Rect
argument_list|()
operator|.
name|Width
argument_list|()
operator|-
name|tabOverlap
operator|)
expr_stmt|;
comment|// remove tab change and add overlapping area
switch|switch
condition|(
name|tabMetric
condition|)
block|{
case|case
name|QStyle
operator|::
name|PM_TabBarTabOverlap
case|:
name|tabValue
operator|=
name|tabOverlap
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_TabBarTabHSpace
case|:
name|tabValue
operator|=
name|tabHSpace
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_TabBarTabVSpace
case|:
name|tabValue
operator|=
name|tabVSpace
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_TabBarBaseHeight
case|:
name|tabValue
operator|=
name|tabBaseHeight
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_TabBarBaseOverlap
case|:
name|tabValue
operator|=
name|tabBaseOverlap
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_TabBarScrollButtonWidth
case|:
comment|// Since in Qt the scroll indicator is shown within a button, we need to add button margins to this value
block|{
name|tabValue
operator|=
name|tabButtonWidth
operator|+
literal|2
operator|*
name|PixelMetricValue
argument_list|(
name|QStyle
operator|::
name|PM_ButtonMargin
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|QStyle
operator|::
name|PM_TabBarTabShiftHorizontal
case|:
name|tabValue
operator|=
name|tabHShift
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_TabBarTabShiftVertical
case|:
name|tabValue
operator|=
name|tabVShift
expr_stmt|;
break|break;
default|default:
break|break;
block|}
return|return
name|tabValue
return|;
block|}
end_function
begin_function
DECL|function|PixelMetricMenuValue
name|TInt
name|PixelMetrics
operator|::
name|PixelMetricMenuValue
parameter_list|(
name|QStyle
operator|::
name|PixelMetric
name|tabMetric
parameter_list|,
name|TRect
name|mainPaneRect
parameter_list|)
block|{
name|TInt
name|menuValue
init|=
literal|0
decl_stmt|;
name|TAknLayoutRect
name|popupMenuRect
decl_stmt|;
name|popupMenuRect
operator|.
name|LayoutRect
argument_list|(
name|mainPaneRect
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|popup_menu_window
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|listScrollPaneRect
decl_stmt|;
name|listScrollPaneRect
operator|.
name|LayoutRect
argument_list|(
name|popupMenuRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|listscroll_menu_pane
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|listMenuPaneRect
decl_stmt|;
name|listMenuPaneRect
operator|.
name|LayoutRect
argument_list|(
name|listScrollPaneRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|list_menu_pane
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|TAknLayoutRect
name|listMenuRow1Rect
decl_stmt|;
name|listMenuRow1Rect
operator|.
name|LayoutRect
argument_list|(
name|listScrollPaneRect
operator|.
name|Rect
argument_list|()
argument_list|,
name|AknLayoutScalable_Avkon
operator|::
name|list_single_pane_cp2
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
switch|switch
condition|(
name|tabMetric
condition|)
block|{
case|case
name|QStyle
operator|::
name|PM_MenuPanelWidth
case|:
name|menuValue
operator|=
name|listMenuPaneRect
operator|.
name|Rect
argument_list|()
operator|.
name|iTl
operator|.
name|iX
operator|-
name|listScrollPaneRect
operator|.
name|Rect
argument_list|()
operator|.
name|iTl
operator|.
name|iX
expr_stmt|;
if|if
condition|(
name|AknLayoutUtils
operator|::
name|LayoutMirrored
argument_list|()
condition|)
block|{
name|menuValue
operator|=
name|listScrollPaneRect
operator|.
name|Rect
argument_list|()
operator|.
name|iBr
operator|.
name|iX
operator|-
name|listMenuPaneRect
operator|.
name|Rect
argument_list|()
operator|.
name|iBr
operator|.
name|iX
expr_stmt|;
block|}
break|break;
case|case
name|QStyle
operator|::
name|PM_MenuHMargin
case|:
name|menuValue
operator|=
name|listMenuRow1Rect
operator|.
name|Rect
argument_list|()
operator|.
name|iTl
operator|.
name|iX
operator|-
name|popupMenuRect
operator|.
name|Rect
argument_list|()
operator|.
name|iTl
operator|.
name|iX
expr_stmt|;
if|if
condition|(
name|AknLayoutUtils
operator|::
name|LayoutMirrored
argument_list|()
condition|)
block|{
name|menuValue
operator|=
name|popupMenuRect
operator|.
name|Rect
argument_list|()
operator|.
name|iBr
operator|.
name|iX
operator|-
name|listMenuRow1Rect
operator|.
name|Rect
argument_list|()
operator|.
name|iBr
operator|.
name|iX
expr_stmt|;
block|}
break|break;
case|case
name|QStyle
operator|::
name|PM_MenuVMargin
case|:
name|menuValue
operator|=
name|listMenuRow1Rect
operator|.
name|Rect
argument_list|()
operator|.
name|iTl
operator|.
name|iY
operator|-
name|popupMenuRect
operator|.
name|Rect
argument_list|()
operator|.
name|iTl
operator|.
name|iY
expr_stmt|;
break|break;
default|default:
break|break;
block|}
return|return
name|menuValue
return|;
block|}
end_function
end_unit
