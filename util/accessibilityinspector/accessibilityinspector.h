begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the tools applications of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|ACCESSIBILITYINSPECTOR_H
end_ifndef
begin_define
DECL|macro|ACCESSIBILITYINSPECTOR_H
define|#
directive|define
name|ACCESSIBILITYINSPECTOR_H
end_define
begin_include
include|#
directive|include
file|<QObject>
end_include
begin_include
include|#
directive|include
file|<qgraphicsscene.h>
end_include
begin_include
include|#
directive|include
file|<QAccessible>
end_include
begin_decl_stmt
name|QString
name|translateRole
argument_list|(
name|QAccessible
operator|::
name|Role
name|role
argument_list|)
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|OptionsWidget
name|class
name|OptionsWidget
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|MouseInterceptingGraphicsScene
name|class
name|MouseInterceptingGraphicsScene
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QGraphicsView
name|class
name|QGraphicsView
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QGraphicsScene
name|class
name|QGraphicsScene
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|AccessibilitySceneManager
name|class
name|AccessibilitySceneManager
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|ScreenReader
name|class
name|ScreenReader
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|AccessibilityInspector
range|:
name|public
name|QObject
block|{
name|Q_OBJECT
name|public
operator|:
name|explicit
name|AccessibilityInspector
argument_list|(
name|QObject
operator|*
name|parent
operator|=
literal|0
argument_list|)
block|;
operator|~
name|AccessibilityInspector
argument_list|()
block|;
name|void
name|inspectWindow
argument_list|(
name|QWindow
operator|*
name|window
argument_list|)
block|;
name|void
name|saveWindowGeometry
argument_list|()
block|;
name|signals
operator|:
name|private
operator|:
name|OptionsWidget
operator|*
name|optionsWidget
block|;
name|MouseInterceptingGraphicsScene
operator|*
name|accessibilityScene
block|;
name|QGraphicsView
operator|*
name|accessibilityView
block|;
name|QGraphicsScene
operator|*
name|accessibilityTreeScene
block|;
name|QGraphicsView
operator|*
name|accessibilityTreeView
block|;
name|ScreenReader
operator|*
name|screenReader
block|; }
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|MouseInterceptingGraphicsScene
range|:
name|public
name|QGraphicsScene
block|{
name|Q_OBJECT
name|protected
operator|:
name|virtual
name|void
name|mousePressEvent
argument_list|(
name|QGraphicsSceneMouseEvent
operator|*
name|event
argument_list|)
block|;
name|virtual
name|void
name|mouseDoubleClickEvent
argument_list|(
name|QGraphicsSceneMouseEvent
operator|*
name|event
argument_list|)
block|;
name|signals
operator|:
name|void
name|mousePressed
argument_list|(
argument|const QPoint point
argument_list|)
block|;
name|void
name|mouseDobleClicked
argument_list|()
block|; }
decl_stmt|;
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// ACCESSIBILITYINSPECTOR_H
end_comment
end_unit
