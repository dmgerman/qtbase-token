begin_unit
begin_comment
comment|/****************************************************************************  **  ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).  ** Contact: http://www.qt-project.org/  **  ** This file is part of the tools applications of the Qt Toolkit.  **  ** $QT_BEGIN_LICENSE:LGPL$  ** GNU Lesser General Public License Usage  ** This file may be used under the terms of the GNU Lesser General Public  ** License version 2.1 as published by the Free Software Foundation and  ** appearing in the file LICENSE.LGPL included in the packaging of this  ** file. Please review the following information to ensure the GNU Lesser  ** General Public License version 2.1 requirements will be met:  ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.  **  ** In addition, as a special exception, Nokia gives you certain additional  ** rights. These rights are described in the Nokia Qt LGPL Exception  ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.  **  ** GNU General Public License Usage  ** Alternatively, this file may be used under the terms of the GNU General  ** Public License version 3.0 as published by the Free Software Foundation  ** and appearing in the file LICENSE.GPL included in the packaging of this  ** file. Please review the following information to ensure the GNU General  ** Public License version 3.0 requirements will be met:  ** http://www.gnu.org/copyleft/gpl.html.  **  ** Other Usage  ** Alternatively, this file may be used in accordance with the terms and  ** conditions contained in a signed written agreement between you and Nokia.  **  **  **  **  **  **  ** $QT_END_LICENSE$  **  ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"accessibilityinspector.h"
end_include
begin_include
include|#
directive|include
file|"screenreader.h"
end_include
begin_include
include|#
directive|include
file|"optionswidget.h"
end_include
begin_include
include|#
directive|include
file|"accessibilityscenemanager.h"
end_include
begin_include
include|#
directive|include
file|<QtDeclarative/QtDeclarative>
end_include
begin_function
DECL|function|mousePressEvent
name|void
name|MouseInterceptingGraphicsScene
operator|::
name|mousePressEvent
parameter_list|(
name|QGraphicsSceneMouseEvent
modifier|*
name|event
parameter_list|)
block|{
emit|emit
name|mousePressed
argument_list|(
name|event
operator|->
name|scenePos
argument_list|()
operator|.
name|toPoint
argument_list|()
argument_list|)
emit|;
name|QGraphicsScene
operator|::
name|mousePressEvent
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|mouseDoubleClickEvent
name|void
name|MouseInterceptingGraphicsScene
operator|::
name|mouseDoubleClickEvent
parameter_list|(
name|QGraphicsSceneMouseEvent
modifier|*
name|event
parameter_list|)
block|{
emit|emit
name|mouseDobleClicked
argument_list|()
emit|;
name|QGraphicsScene
operator|::
name|mouseDoubleClickEvent
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
end_function
begin_decl_stmt
DECL|variable|sceneManager
name|AccessibilitySceneManager
modifier|*
name|sceneManager
init|=
literal|0
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|previousUpdateHandler
name|QAccessible
operator|::
name|UpdateHandler
name|previousUpdateHandler
init|=
literal|0
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|updateHandlerRecursion
name|bool
name|updateHandlerRecursion
init|=
literal|false
decl_stmt|;
end_decl_stmt
begin_function
DECL|function|accessibilityUpdateHandler
name|void
name|accessibilityUpdateHandler
parameter_list|(
name|QObject
modifier|*
name|object
parameter_list|,
name|int
name|who
parameter_list|,
name|QAccessible
operator|::
name|Event
name|reason
parameter_list|)
block|{
if|if
condition|(
name|updateHandlerRecursion
condition|)
return|return;
name|updateHandlerRecursion
operator|=
literal|true
expr_stmt|;
if|if
condition|(
name|sceneManager
condition|)
block|{
name|sceneManager
operator|->
name|handleUpdate
argument_list|(
name|object
argument_list|,
name|reason
argument_list|)
expr_stmt|;
comment|//qDebug()<< "update";
block|}
if|if
condition|(
name|previousUpdateHandler
condition|)
comment|// call prev just to be sure.
name|previousUpdateHandler
argument_list|(
name|object
argument_list|,
name|who
argument_list|,
name|reason
argument_list|)
expr_stmt|;
name|updateHandlerRecursion
operator|=
literal|false
expr_stmt|;
block|}
end_function
begin_constructor
DECL|function|AccessibilityInspector
name|AccessibilityInspector
operator|::
name|AccessibilityInspector
parameter_list|(
name|QObject
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QObject
argument_list|(
name|parent
argument_list|)
block|{ }
end_constructor
begin_destructor
DECL|function|~AccessibilityInspector
name|AccessibilityInspector
operator|::
name|~
name|AccessibilityInspector
parameter_list|()
block|{
operator|delete
name|optionsWidget
expr_stmt|;
operator|delete
name|accessibilityScene
expr_stmt|;
operator|delete
name|accessibilityView
expr_stmt|;
operator|delete
name|accessibilityTreeScene
expr_stmt|;
operator|delete
name|accessibilityTreeView
expr_stmt|;
operator|delete
name|screenReader
expr_stmt|;
block|}
end_destructor
begin_function
DECL|function|inspectWindow
name|void
name|AccessibilityInspector
operator|::
name|inspectWindow
parameter_list|(
name|QWindow
modifier|*
name|window
parameter_list|)
block|{
name|qDebug
argument_list|()
operator|<<
literal|"AccessibilityInspector::inspectWindow()"
operator|<<
name|window
expr_stmt|;
name|optionsWidget
operator|=
operator|new
name|OptionsWidget
argument_list|()
expr_stmt|;
name|accessibilityScene
operator|=
operator|new
name|MouseInterceptingGraphicsScene
argument_list|()
expr_stmt|;
name|accessibilityView
operator|=
operator|new
name|QGraphicsView
argument_list|()
expr_stmt|;
name|accessibilityView
operator|->
name|setScene
argument_list|(
name|accessibilityScene
argument_list|)
expr_stmt|;
name|accessibilityView
operator|->
name|resize
argument_list|(
literal|640
argument_list|,
literal|480
argument_list|)
expr_stmt|;
name|accessibilityView
operator|->
name|scale
argument_list|(
literal|1.3
argument_list|,
literal|1.3
argument_list|)
expr_stmt|;
name|accessibilityTreeScene
operator|=
operator|new
name|QGraphicsScene
argument_list|()
expr_stmt|;
name|accessibilityTreeView
operator|=
operator|new
name|QGraphicsView
argument_list|()
expr_stmt|;
name|accessibilityTreeView
operator|->
name|setScene
argument_list|(
name|accessibilityTreeScene
argument_list|)
expr_stmt|;
name|accessibilityTreeView
operator|->
name|resize
argument_list|(
literal|640
argument_list|,
literal|480
argument_list|)
expr_stmt|;
name|sceneManager
operator|=
operator|new
name|AccessibilitySceneManager
argument_list|()
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|optionsWidget
argument_list|,
name|SIGNAL
argument_list|(
name|optionsChanged
argument_list|()
argument_list|)
argument_list|,
name|sceneManager
argument_list|,
name|SLOT
argument_list|(
name|updateAccessibilitySceneItemFlags
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|optionsWidget
argument_list|,
name|SIGNAL
argument_list|(
name|refreshClicked
argument_list|()
argument_list|)
argument_list|,
name|sceneManager
argument_list|,
name|SLOT
argument_list|(
name|populateAccessibilityScene
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|optionsWidget
argument_list|,
name|SIGNAL
argument_list|(
name|refreshClicked
argument_list|()
argument_list|)
argument_list|,
name|sceneManager
argument_list|,
name|SLOT
argument_list|(
name|populateAccessibilityTreeScene
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|optionsWidget
argument_list|,
name|SIGNAL
argument_list|(
name|scaleChanged
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|,
name|sceneManager
argument_list|,
name|SLOT
argument_list|(
name|changeScale
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|sceneManager
operator|->
name|setOptionsWidget
argument_list|(
name|optionsWidget
argument_list|)
expr_stmt|;
name|sceneManager
operator|->
name|setRootWindow
argument_list|(
name|window
argument_list|)
expr_stmt|;
name|sceneManager
operator|->
name|setScene
argument_list|(
name|accessibilityScene
argument_list|)
expr_stmt|;
name|sceneManager
operator|->
name|setView
argument_list|(
name|accessibilityView
argument_list|)
expr_stmt|;
name|sceneManager
operator|->
name|setTreeScene
argument_list|(
name|accessibilityTreeScene
argument_list|)
expr_stmt|;
name|sceneManager
operator|->
name|setTreeView
argument_list|(
name|accessibilityTreeView
argument_list|)
expr_stmt|;
name|screenReader
operator|=
operator|new
name|ScreenReader
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|accessibilityScene
argument_list|,
name|SIGNAL
argument_list|(
name|mousePressed
argument_list|(
name|QPoint
argument_list|)
argument_list|)
argument_list|,
name|screenReader
argument_list|,
name|SLOT
argument_list|(
name|touchPoint
argument_list|(
name|QPoint
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|accessibilityScene
argument_list|,
name|SIGNAL
argument_list|(
name|mouseDobleClicked
argument_list|()
argument_list|)
argument_list|,
name|screenReader
argument_list|,
name|SLOT
argument_list|(
name|activate
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|screenReader
argument_list|,
name|SIGNAL
argument_list|(
name|selected
argument_list|(
name|QObject
operator|*
argument_list|)
argument_list|)
argument_list|,
name|sceneManager
argument_list|,
name|SLOT
argument_list|(
name|setSelected
argument_list|(
name|QObject
operator|*
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|screenReader
operator|->
name|setRootObject
argument_list|(
name|window
argument_list|)
expr_stmt|;
name|screenReader
operator|->
name|setOptionsWidget
argument_list|(
name|optionsWidget
argument_list|)
expr_stmt|;
name|previousUpdateHandler
operator|=
name|QAccessible
operator|::
name|installUpdateHandler
argument_list|(
name|accessibilityUpdateHandler
argument_list|)
expr_stmt|;
name|QTimer
operator|::
name|singleShot
argument_list|(
literal|100
argument_list|,
name|sceneManager
argument_list|,
name|SLOT
argument_list|(
name|populateAccessibilityScene
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QTimer
operator|::
name|singleShot
argument_list|(
literal|100
argument_list|,
name|sceneManager
argument_list|,
name|SLOT
argument_list|(
name|populateAccessibilityTreeScene
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QSettings
name|settings
decl_stmt|;
name|accessibilityView
operator|->
name|restoreGeometry
argument_list|(
name|settings
operator|.
name|value
argument_list|(
literal|"accessiblityGeometry"
argument_list|)
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
name|accessibilityView
operator|->
name|setObjectName
argument_list|(
name|QLatin1String
argument_list|(
literal|"accessibilityInspectorView"
argument_list|)
argument_list|)
expr_stmt|;
name|accessibilityView
operator|->
name|show
argument_list|()
expr_stmt|;
name|accessibilityTreeView
operator|->
name|restoreGeometry
argument_list|(
name|settings
operator|.
name|value
argument_list|(
literal|"treeGeometry"
argument_list|)
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
name|accessibilityTreeView
operator|->
name|setObjectName
argument_list|(
name|QLatin1String
argument_list|(
literal|"accessibilityInspectorTreeView"
argument_list|)
argument_list|)
expr_stmt|;
name|accessibilityTreeView
operator|->
name|show
argument_list|()
expr_stmt|;
name|optionsWidget
operator|->
name|restoreGeometry
argument_list|(
name|settings
operator|.
name|value
argument_list|(
literal|"optionsGeometry"
argument_list|)
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
name|optionsWidget
operator|->
name|setObjectName
argument_list|(
name|QLatin1String
argument_list|(
literal|"accessibilityInspectorOptions"
argument_list|)
argument_list|)
expr_stmt|;
name|optionsWidget
operator|->
name|show
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|saveWindowGeometry
name|void
name|AccessibilityInspector
operator|::
name|saveWindowGeometry
parameter_list|()
block|{
name|QSettings
name|settings
decl_stmt|;
name|settings
operator|.
name|setValue
argument_list|(
literal|"accessiblityGeometry"
argument_list|,
name|accessibilityView
operator|->
name|saveGeometry
argument_list|()
argument_list|)
expr_stmt|;
name|settings
operator|.
name|setValue
argument_list|(
literal|"treeGeometry"
argument_list|,
name|accessibilityTreeView
operator|->
name|saveGeometry
argument_list|()
argument_list|)
expr_stmt|;
name|settings
operator|.
name|setValue
argument_list|(
literal|"optionsGeometry"
argument_list|,
name|optionsWidget
operator|->
name|saveGeometry
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|translateRole
name|QString
name|translateRole
parameter_list|(
name|QAccessible
operator|::
name|Role
name|role
parameter_list|)
block|{
if|if
condition|(
name|role
operator|==
literal|0x2B
condition|)
return|return
literal|"PushButton"
return|;
if|if
condition|(
name|role
operator|==
literal|0x2C
condition|)
return|return
literal|"CheckBox"
return|;
if|if
condition|(
name|role
operator|==
literal|0x2D
condition|)
return|return
literal|"RadioButton"
return|;
if|if
condition|(
name|role
operator|==
literal|0xA
condition|)
return|return
literal|"Client"
return|;
if|if
condition|(
name|role
operator|==
literal|0x29
condition|)
return|return
literal|"Static Text"
return|;
if|if
condition|(
name|role
operator|==
literal|0x33
condition|)
return|return
literal|"Slider"
return|;
if|if
condition|(
name|role
operator|==
literal|0x33
condition|)
return|return
literal|"Slider"
return|;
if|if
condition|(
name|role
operator|==
literal|0x10
condition|)
return|return
literal|"Pane"
return|;
return|return
name|QString
operator|::
name|number
argument_list|(
name|role
argument_list|,
literal|16
argument_list|)
return|;
block|}
end_function
end_unit
