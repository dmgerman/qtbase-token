begin_unit
begin_comment
comment|/****************************************************************************  **  ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).  ** All rights reserved.  ** Contact: Nokia Corporation (qt-info@nokia.com)  **  ** This file is part of the tools applications of the Qt Toolkit.  **  ** $QT_BEGIN_LICENSE:LGPL$  ** GNU Lesser General Public License Usage  ** This file may be used under the terms of the GNU Lesser General Public  ** License version 2.1 as published by the Free Software Foundation and  ** appearing in the file LICENSE.LGPL included in the packaging of this  ** file. Please review the following information to ensure the GNU Lesser  ** General Public License version 2.1 requirements will be met:  ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.  **  ** In addition, as a special exception, Nokia gives you certain additional  ** rights. These rights are described in the Nokia Qt LGPL Exception  ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.  **  ** GNU General Public License Usage  ** Alternatively, this file may be used under the terms of the GNU General  ** Public License version 3.0 as published by the Free Software Foundation  ** and appearing in the file LICENSE.GPL included in the packaging of this  ** file. Please review the following information to ensure the GNU General  ** Public License version 3.0 requirements will be met:  ** http://www.gnu.org/copyleft/gpl.html.  **  ** Other Usage  ** Alternatively, this file may be used in accordance with the terms and  ** conditions contained in a signed written agreement between you and Nokia.  **  **  **  **  **  ** $QT_END_LICENSE$  **  ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|SCREENREADER_H
end_ifndef
begin_define
DECL|macro|SCREENREADER_H
define|#
directive|define
name|SCREENREADER_H
end_define
begin_include
include|#
directive|include
file|<QObject>
end_include
begin_include
include|#
directive|include
file|<QAccessible>
end_include
begin_include
include|#
directive|include
file|<QAccessibleBridge>
end_include
begin_comment
comment|/*     A Simple screen reader for touch-based user interfaces.      Requires a text-to-speach backend. Currently implemented on     Mac OS X and using festival on unix. */
end_comment
begin_decl_stmt
DECL|variable|OptionsWidget
name|class
name|OptionsWidget
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|ScreenReader
range|:
name|public
name|QObject
block|{
name|Q_OBJECT
name|public
operator|:
name|explicit
name|ScreenReader
argument_list|(
name|QObject
operator|*
name|parent
operator|=
literal|0
argument_list|)
block|;
operator|~
name|ScreenReader
argument_list|()
block|;
name|void
name|setRootObject
argument_list|(
name|QObject
operator|*
name|rootObject
argument_list|)
block|;
name|void
name|setOptionsWidget
argument_list|(
name|OptionsWidget
operator|*
name|optionsWidget
argument_list|)
block|;
name|public
name|slots
operator|:
name|void
name|touchPoint
argument_list|(
specifier|const
name|QPoint
operator|&
name|point
argument_list|)
block|;
name|void
name|activate
argument_list|()
block|;
name|protected
name|slots
operator|:
name|void
name|processTouchPoint
argument_list|()
block|;
name|signals
operator|:
name|void
name|selected
argument_list|(
name|QObject
operator|*
name|object
argument_list|)
block|;
name|protected
operator|:
name|void
name|speak
argument_list|(
specifier|const
name|QString
operator|&
name|text
argument_list|,
specifier|const
name|QString
operator|&
name|voice
operator|=
name|QString
argument_list|()
argument_list|)
block|;
name|private
operator|:
name|QAccessibleInterface
operator|*
name|m_selectedInterface
block|;
name|QAccessibleInterface
operator|*
name|m_rootInterface
block|;
name|OptionsWidget
operator|*
name|m_optionsWidget
block|;
name|QPoint
name|m_currentTouchPoint
block|;
name|bool
name|m_activateCalled
block|; }
decl_stmt|;
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// SCREENREADER_H
end_comment
end_unit
