begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/ ** ** This file is part of the documentation of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor **     the names of its contributors may be used to endorse or promote **     products derived from this software without specific prior written **     permission. ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtGui>
end_include
begin_include
include|#
directive|include
file|"javastyle.h"
end_include
begin_include
include|#
directive|include
file|<math.h>
end_include
begin_decl_stmt
DECL|variable|windowsItemFrame
specifier|static
specifier|const
name|int
name|windowsItemFrame
init|=
literal|2
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|windowsSepHeight
specifier|static
specifier|const
name|int
name|windowsSepHeight
init|=
literal|2
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|windowsItemHMargin
specifier|static
specifier|const
name|int
name|windowsItemHMargin
init|=
literal|3
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|windowsItemVMargin
specifier|static
specifier|const
name|int
name|windowsItemVMargin
init|=
literal|2
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|windowsArrowHMargin
specifier|static
specifier|const
name|int
name|windowsArrowHMargin
init|=
literal|6
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|windowsTabSpacing
specifier|static
specifier|const
name|int
name|windowsTabSpacing
init|=
literal|12
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|windowsCheckMarkHMargin
specifier|static
specifier|const
name|int
name|windowsCheckMarkHMargin
init|=
literal|2
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|windowsRightBorder
specifier|static
specifier|const
name|int
name|windowsRightBorder
init|=
literal|15
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|windowsCheckMarkWidth
specifier|static
specifier|const
name|int
name|windowsCheckMarkWidth
init|=
literal|12
decl_stmt|;
end_decl_stmt
begin_constructor
DECL|function|JavaStyle
name|JavaStyle
operator|::
name|JavaStyle
parameter_list|()
block|{
name|qApp
operator|->
name|setPalette
argument_list|(
name|standardPalette
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_function
DECL|function|adjustScrollPoint
specifier|inline
name|QPoint
name|JavaStyle
operator|::
name|adjustScrollPoint
parameter_list|(
specifier|const
name|QPoint
modifier|&
name|point
parameter_list|,
name|Qt
operator|::
name|Orientation
name|orientation
parameter_list|,
name|bool
name|add
parameter_list|)
specifier|const
block|{
name|int
name|adder
init|=
name|add
condition|?
operator|-
literal|1
else|:
literal|1
decl_stmt|;
name|QPoint
name|retPoint
decl_stmt|;
if|if
condition|(
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
block|{
name|retPoint
operator|=
name|QPoint
argument_list|(
name|point
operator|.
name|y
argument_list|()
operator|*
name|adder
argument_list|,
name|point
operator|.
name|x
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|retPoint
operator|=
name|QPoint
argument_list|(
name|point
operator|.
name|x
argument_list|()
argument_list|,
name|point
operator|.
name|y
argument_list|()
operator|*
name|adder
argument_list|)
expr_stmt|;
block|}
return|return
name|retPoint
return|;
block|}
end_function
begin_function
DECL|function|standardPalette
name|QPalette
name|JavaStyle
operator|::
name|standardPalette
parameter_list|()
specifier|const
block|{
name|QPalette
name|palette
init|=
name|QWindowsStyle
operator|::
name|standardPalette
argument_list|()
decl_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Active
argument_list|,
name|QPalette
operator|::
name|Button
argument_list|,
name|QColor
argument_list|(
literal|184
argument_list|,
literal|207
argument_list|,
literal|229
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Active
argument_list|,
name|QPalette
operator|::
name|WindowText
argument_list|,
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Active
argument_list|,
name|QPalette
operator|::
name|Background
argument_list|,
name|QColor
argument_list|(
literal|238
argument_list|,
literal|238
argument_list|,
literal|238
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Active
argument_list|,
name|QPalette
operator|::
name|Window
argument_list|,
name|QColor
argument_list|(
literal|238
argument_list|,
literal|238
argument_list|,
literal|238
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Active
argument_list|,
name|QPalette
operator|::
name|Base
argument_list|,
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Active
argument_list|,
name|QPalette
operator|::
name|AlternateBase
argument_list|,
name|QColor
argument_list|(
literal|238
argument_list|,
literal|238
argument_list|,
literal|238
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Active
argument_list|,
name|QPalette
operator|::
name|Text
argument_list|,
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Active
argument_list|,
name|QPalette
operator|::
name|BrightText
argument_list|,
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Active
argument_list|,
name|QPalette
operator|::
name|Light
argument_list|,
name|QColor
argument_list|(
literal|163
argument_list|,
literal|184
argument_list|,
literal|204
argument_list|)
argument_list|)
expr_stmt|;
comment|// focusFrameColor
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Active
argument_list|,
name|QPalette
operator|::
name|Midlight
argument_list|,
name|QColor
argument_list|(
literal|99
argument_list|,
literal|130
argument_list|,
literal|191
argument_list|)
argument_list|)
expr_stmt|;
comment|// tabBarBorderColor
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Active
argument_list|,
name|QPalette
operator|::
name|Dark
argument_list|,
name|QColor
argument_list|(
literal|106
argument_list|,
literal|104
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Active
argument_list|,
name|QPalette
operator|::
name|Mid
argument_list|,
name|QColor
argument_list|(
literal|122
argument_list|,
literal|138
argument_list|,
literal|153
argument_list|)
argument_list|)
expr_stmt|;
comment|//defaultFrameColor
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Active
argument_list|,
name|QPalette
operator|::
name|Shadow
argument_list|,
name|QColor
argument_list|(
literal|122
argument_list|,
literal|138
argument_list|,
literal|153
argument_list|)
argument_list|)
expr_stmt|;
comment|// defaultFrame
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Active
argument_list|,
name|QPalette
operator|::
name|Highlight
argument_list|,
name|QColor
argument_list|(
literal|184
argument_list|,
literal|207
argument_list|,
literal|229
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Active
argument_list|,
name|QPalette
operator|::
name|HighlightedText
argument_list|,
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Inactive
argument_list|,
name|QPalette
operator|::
name|Highlight
argument_list|,
name|QColor
argument_list|(
literal|184
argument_list|,
literal|207
argument_list|,
literal|229
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Inactive
argument_list|,
name|QPalette
operator|::
name|HighlightedText
argument_list|,
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Disabled
argument_list|,
name|QPalette
operator|::
name|Button
argument_list|,
name|QColor
argument_list|(
literal|238
argument_list|,
literal|238
argument_list|,
literal|238
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Disabled
argument_list|,
name|QPalette
operator|::
name|WindowText
argument_list|,
name|QColor
argument_list|(
literal|153
argument_list|,
literal|153
argument_list|,
literal|153
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Disabled
argument_list|,
name|QPalette
operator|::
name|Background
argument_list|,
name|QColor
argument_list|(
literal|238
argument_list|,
literal|238
argument_list|,
literal|238
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Inactive
argument_list|,
name|QPalette
operator|::
name|Button
argument_list|,
name|QColor
argument_list|(
literal|184
argument_list|,
literal|207
argument_list|,
literal|229
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Inactive
argument_list|,
name|QPalette
operator|::
name|Background
argument_list|,
name|QColor
argument_list|(
literal|238
argument_list|,
literal|238
argument_list|,
literal|238
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Inactive
argument_list|,
name|QPalette
operator|::
name|Window
argument_list|,
name|QColor
argument_list|(
literal|238
argument_list|,
literal|238
argument_list|,
literal|238
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Inactive
argument_list|,
name|QPalette
operator|::
name|Light
argument_list|,
name|QColor
argument_list|(
literal|163
argument_list|,
literal|184
argument_list|,
literal|204
argument_list|)
argument_list|)
expr_stmt|;
comment|// focusFrameColor
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Inactive
argument_list|,
name|QPalette
operator|::
name|Midlight
argument_list|,
name|QColor
argument_list|(
literal|99
argument_list|,
literal|130
argument_list|,
literal|191
argument_list|)
argument_list|)
expr_stmt|;
comment|// tabBarBorderColor
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Inactive
argument_list|,
name|QPalette
operator|::
name|Dark
argument_list|,
name|QColor
argument_list|(
literal|106
argument_list|,
literal|104
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Inactive
argument_list|,
name|QPalette
operator|::
name|Mid
argument_list|,
name|QColor
argument_list|(
literal|122
argument_list|,
literal|138
argument_list|,
literal|153
argument_list|)
argument_list|)
expr_stmt|;
comment|//defaultFrame
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Inactive
argument_list|,
name|QPalette
operator|::
name|Shadow
argument_list|,
name|QColor
argument_list|(
literal|122
argument_list|,
literal|138
argument_list|,
literal|153
argument_list|)
argument_list|)
expr_stmt|;
comment|// defaultFrame
return|return
name|palette
return|;
block|}
end_function
begin_function
DECL|function|drawScrollBarArrow
specifier|inline
name|void
name|JavaStyle
operator|::
name|drawScrollBarArrow
parameter_list|(
specifier|const
name|QRect
modifier|&
name|rect
parameter_list|,
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QStyleOptionSlider
modifier|*
name|option
parameter_list|,
name|bool
name|add
parameter_list|)
specifier|const
block|{
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
name|Qt
operator|::
name|Orientation
name|orient
init|=
name|option
operator|->
name|orientation
decl_stmt|;
name|QPoint
name|offset
decl_stmt|;
if|if
condition|(
name|add
condition|)
block|{
if|if
condition|(
name|orient
operator|==
name|Qt
operator|::
name|Vertical
condition|)
block|{
name|offset
operator|=
name|rect
operator|.
name|bottomLeft
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|offset
operator|=
name|rect
operator|.
name|topRight
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
name|offset
operator|=
name|rect
operator|.
name|topLeft
argument_list|()
expr_stmt|;
block|}
name|QPainterPath
name|arrow
decl_stmt|;
name|arrow
operator|.
name|moveTo
argument_list|(
name|offset
operator|+
name|adjustScrollPoint
argument_list|(
name|QPoint
argument_list|(
literal|4
argument_list|,
literal|8
argument_list|)
argument_list|,
name|orient
argument_list|,
name|add
argument_list|)
argument_list|)
expr_stmt|;
name|arrow
operator|.
name|lineTo
argument_list|(
name|offset
operator|+
name|adjustScrollPoint
argument_list|(
name|QPoint
argument_list|(
literal|7
argument_list|,
literal|5
argument_list|)
argument_list|,
name|orient
argument_list|,
name|add
argument_list|)
argument_list|)
expr_stmt|;
name|arrow
operator|.
name|lineTo
argument_list|(
name|offset
operator|+
name|adjustScrollPoint
argument_list|(
name|QPoint
argument_list|(
literal|8
argument_list|,
literal|5
argument_list|)
argument_list|,
name|orient
argument_list|,
name|add
argument_list|)
argument_list|)
expr_stmt|;
name|arrow
operator|.
name|lineTo
argument_list|(
name|offset
operator|+
name|adjustScrollPoint
argument_list|(
name|QPoint
argument_list|(
literal|11
argument_list|,
literal|8
argument_list|)
argument_list|,
name|orient
argument_list|,
name|add
argument_list|)
argument_list|)
expr_stmt|;
name|arrow
operator|.
name|lineTo
argument_list|(
name|offset
operator|+
name|adjustScrollPoint
argument_list|(
name|QPoint
argument_list|(
literal|4
argument_list|,
literal|8
argument_list|)
argument_list|,
name|orient
argument_list|,
name|add
argument_list|)
argument_list|)
expr_stmt|;
name|QColor
name|fillColor
decl_stmt|;
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|State_Sunken
condition|)
name|fillColor
operator|=
name|QColor
argument_list|(
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Button
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|fillColor
operator|=
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Background
argument_list|)
expr_stmt|;
name|painter
operator|->
name|fillRect
argument_list|(
name|rect
argument_list|,
name|fillColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Base
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|adjust
init|=
name|option
operator|->
name|state
operator|&
name|State_Sunken
condition|?
literal|0
else|:
literal|1
decl_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|rect
operator|.
name|adjusted
argument_list|(
name|adjust
argument_list|,
name|adjust
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Mid
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|WindowText
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|WindowText
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPath
argument_list|(
name|arrow
argument_list|)
expr_stmt|;
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|adjustScrollHandlePoint
specifier|inline
name|QPoint
name|JavaStyle
operator|::
name|adjustScrollHandlePoint
parameter_list|(
name|Qt
operator|::
name|Orientation
name|orig
parameter_list|,
specifier|const
name|QPoint
modifier|&
name|point
parameter_list|)
specifier|const
block|{
name|QPoint
name|retPoint
decl_stmt|;
if|if
condition|(
name|orig
operator|==
name|Qt
operator|::
name|Vertical
condition|)
name|retPoint
operator|=
name|point
expr_stmt|;
else|else
name|retPoint
operator|=
name|QPoint
argument_list|(
name|point
operator|.
name|y
argument_list|()
argument_list|,
name|point
operator|.
name|x
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|retPoint
return|;
block|}
end_function
begin_function
DECL|function|drawControl
name|void
name|JavaStyle
operator|::
name|drawControl
parameter_list|(
name|ControlElement
name|control
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|option
parameter_list|,
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
switch|switch
condition|(
name|control
condition|)
block|{
case|case
name|CE_ToolBoxTabShape
case|:
block|{
specifier|const
name|QStyleOptionToolBox
modifier|*
name|box
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionToolBox
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
decl_stmt|;
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
if|if
condition|(
name|box
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
condition|)
block|{
name|painter
operator|->
name|rotate
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|painter
operator|->
name|translate
argument_list|(
name|box
operator|->
name|rect
operator|.
name|width
argument_list|()
argument_list|,
operator|-
name|box
operator|->
name|rect
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|int
name|textWidth
init|=
name|box
operator|->
name|fontMetrics
operator|.
name|width
argument_list|(
name|box
operator|->
name|text
argument_list|)
operator|+
literal|20
decl_stmt|;
name|QPolygon
name|innerLine
decl_stmt|;
name|innerLine
operator|<<
operator|(
name|box
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|)
operator|<<
operator|(
name|box
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
name|textWidth
argument_list|,
literal|1
argument_list|)
operator|)
operator|<<
operator|(
name|box
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
name|textWidth
operator|+
literal|15
argument_list|,
operator|-
literal|3
argument_list|)
operator|)
operator|<<
operator|(
name|box
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|0
argument_list|,
operator|-
literal|3
argument_list|)
operator|)
operator|<<
name|box
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
operator|<<
name|box
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
operator|<<
name|box
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|box
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Base
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|QColor
argument_list|(
literal|200
argument_list|,
literal|221
argument_list|,
literal|242
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPolygon
argument_list|(
name|innerLine
argument_list|)
expr_stmt|;
name|QPolygon
name|outerLine
decl_stmt|;
name|outerLine
operator|<<
operator|(
name|box
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|0
argument_list|,
operator|-
literal|3
argument_list|)
operator|)
operator|<<
name|box
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
operator|<<
name|box
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
operator|<<
name|box
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
operator|<<
operator|(
name|box
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
name|textWidth
argument_list|,
literal|0
argument_list|)
operator|)
operator|<<
operator|(
name|box
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
name|textWidth
operator|+
literal|15
argument_list|,
operator|-
literal|4
argument_list|)
operator|)
operator|<<
operator|(
name|box
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|0
argument_list|,
operator|-
literal|4
argument_list|)
operator|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|box
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Midlight
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|Qt
operator|::
name|NoBrush
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPolyline
argument_list|(
name|outerLine
argument_list|)
expr_stmt|;
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
name|CE_DockWidgetTitle
case|:
block|{
specifier|const
name|QStyleOptionDockWidgetV2
modifier|*
name|docker
init|=
operator|new
name|QStyleOptionDockWidgetV2
argument_list|(
operator|*
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionDockWidget
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
argument_list|)
decl_stmt|;
name|QRect
name|rect
init|=
name|docker
operator|->
name|rect
decl_stmt|;
name|QRect
name|titleRect
init|=
name|rect
decl_stmt|;
if|if
condition|(
name|docker
operator|->
name|verticalTitleBar
condition|)
block|{
name|QRect
name|r
init|=
name|rect
decl_stmt|;
name|QSize
name|s
init|=
name|r
operator|.
name|size
argument_list|()
decl_stmt|;
name|s
operator|.
name|transpose
argument_list|()
expr_stmt|;
name|r
operator|.
name|setSize
argument_list|(
name|s
argument_list|)
expr_stmt|;
name|titleRect
operator|=
name|QRect
argument_list|(
name|r
operator|.
name|left
argument_list|()
operator|+
name|rect
operator|.
name|bottom
argument_list|()
operator|-
name|titleRect
operator|.
name|bottom
argument_list|()
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
name|titleRect
operator|.
name|left
argument_list|()
operator|-
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|titleRect
operator|.
name|height
argument_list|()
argument_list|,
name|titleRect
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|translate
argument_list|(
name|r
operator|.
name|left
argument_list|()
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
name|r
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|rotate
argument_list|(
operator|-
literal|90
argument_list|)
expr_stmt|;
name|painter
operator|->
name|translate
argument_list|(
operator|-
name|r
operator|.
name|left
argument_list|()
argument_list|,
operator|-
name|r
operator|.
name|top
argument_list|()
argument_list|)
expr_stmt|;
name|rect
operator|=
name|r
expr_stmt|;
block|}
name|QLinearGradient
name|gradient
argument_list|(
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|)
decl_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|1.0
argument_list|,
name|QColor
argument_list|(
literal|191
argument_list|,
literal|212
argument_list|,
literal|231
argument_list|)
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0.3
argument_list|,
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0.0
argument_list|,
name|QColor
argument_list|(
literal|221
argument_list|,
literal|232
argument_list|,
literal|243
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|gradient
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|docker
operator|->
name|title
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|QRect
name|textRect
init|=
name|docker
operator|->
name|fontMetrics
operator|.
name|boundingRect
argument_list|(
name|docker
operator|->
name|title
argument_list|)
decl_stmt|;
name|textRect
operator|.
name|moveCenter
argument_list|(
name|rect
operator|.
name|center
argument_list|()
argument_list|)
expr_stmt|;
name|QFont
name|font
init|=
name|painter
operator|->
name|font
argument_list|()
decl_stmt|;
name|font
operator|.
name|setPointSize
argument_list|(
name|font
operator|.
name|pointSize
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setFont
argument_list|(
name|font
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|docker
operator|->
name|palette
operator|.
name|text
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawText
argument_list|(
name|textRect
argument_list|,
name|docker
operator|->
name|title
argument_list|,
name|QTextOption
argument_list|(
name|Qt
operator|::
name|AlignHCenter
operator||
name|Qt
operator|::
name|AlignVCenter
argument_list|)
argument_list|)
expr_stmt|;
block|}
break|break;
block|}
case|case
name|CE_RubberBand
case|:
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Active
argument_list|,
name|QPalette
operator|::
name|WindowText
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|CE_SizeGrip
case|:
block|{
break|break;
block|}
case|case
name|CE_HeaderSection
case|:
block|{
specifier|const
name|QStyleOptionHeader
modifier|*
name|header
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionHeader
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Active
argument_list|,
name|QPalette
operator|::
name|Background
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|option
operator|->
name|rect
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|header
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Mid
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|header
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
block|{
if|if
condition|(
name|header
operator|->
name|position
operator|==
name|QStyleOptionHeader
operator|::
name|Beginning
operator|||
name|header
operator|->
name|position
operator|==
name|QStyleOptionHeader
operator|::
name|OnlyOneSection
condition|)
block|{
name|painter
operator|->
name|drawRect
argument_list|(
name|header
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|header
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Base
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|header
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|header
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|header
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|header
operator|->
name|rect
operator|.
name|topRight
argument_list|()
operator|+
name|QPoint
argument_list|(
operator|-
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|painter
operator|->
name|drawLine
argument_list|(
name|header
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
argument_list|,
name|header
operator|->
name|rect
operator|.
name|topRight
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|header
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|header
operator|->
name|rect
operator|.
name|topRight
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|header
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|,
name|header
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Base
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|header
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|0
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|header
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|header
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|header
operator|->
name|rect
operator|.
name|topRight
argument_list|()
operator|+
name|QPoint
argument_list|(
operator|-
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
comment|// Vertical
if|if
condition|(
name|header
operator|->
name|position
operator|==
name|QStyleOptionHeader
operator|::
name|Beginning
operator|||
name|header
operator|->
name|position
operator|==
name|QStyleOptionHeader
operator|::
name|OnlyOneSection
condition|)
block|{
name|painter
operator|->
name|drawRect
argument_list|(
name|header
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|header
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Base
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|header
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|header
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|header
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|header
operator|->
name|rect
operator|.
name|topRight
argument_list|()
operator|+
name|QPoint
argument_list|(
operator|-
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|painter
operator|->
name|drawLine
argument_list|(
name|header
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|,
name|header
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|header
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|header
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|header
operator|->
name|rect
operator|.
name|topRight
argument_list|()
argument_list|,
name|header
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|header
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Base
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|header
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|header
operator|->
name|rect
operator|.
name|topRight
argument_list|()
operator|+
name|QPoint
argument_list|(
operator|-
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|header
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|header
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
break|break;
block|}
case|case
name|CE_ToolBar
case|:
block|{
name|QRect
name|rect
init|=
name|option
operator|->
name|rect
decl_stmt|;
name|QLinearGradient
name|gradient
argument_list|(
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|)
decl_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|1.0
argument_list|,
name|QColor
argument_list|(
literal|221
argument_list|,
literal|221
argument_list|,
literal|221
argument_list|)
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0.0
argument_list|,
name|QColor
argument_list|(
literal|241
argument_list|,
literal|241
argument_list|,
literal|241
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|State_Horizontal
condition|)
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|QColor
argument_list|(
literal|204
argument_list|,
literal|204
argument_list|,
literal|204
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|gradient
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Background
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|drawRect
argument_list|(
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|CE_ProgressBar
case|:
block|{
specifier|const
name|QStyleOptionProgressBar
modifier|*
name|bar1
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionProgressBar
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
decl_stmt|;
name|QStyleOptionProgressBarV2
modifier|*
name|bar
init|=
operator|new
name|QStyleOptionProgressBarV2
argument_list|(
operator|*
name|bar1
argument_list|)
decl_stmt|;
name|QRect
name|rect
init|=
name|bar
operator|->
name|rect
decl_stmt|;
if|if
condition|(
name|bar
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Vertical
condition|)
block|{
name|rect
operator|=
name|QRect
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|rect
operator|.
name|height
argument_list|()
argument_list|,
name|rect
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
name|QMatrix
name|m
decl_stmt|;
name|m
operator|.
name|translate
argument_list|(
name|rect
operator|.
name|height
argument_list|()
operator|-
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|m
operator|.
name|rotate
argument_list|(
literal|90.0
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setMatrix
argument_list|(
name|m
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|setPen
argument_list|(
name|bar
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Mid
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QRect
name|grooveRect
init|=
name|subElementRect
argument_list|(
name|SE_ProgressBarGroove
argument_list|,
name|bar
argument_list|,
name|widget
argument_list|)
decl_stmt|;
if|if
condition|(
name|bar
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Vertical
condition|)
block|{
name|grooveRect
operator|=
name|QRect
argument_list|(
name|grooveRect
operator|.
name|left
argument_list|()
argument_list|,
name|grooveRect
operator|.
name|top
argument_list|()
argument_list|,
name|grooveRect
operator|.
name|height
argument_list|()
argument_list|,
name|grooveRect
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|QStyleOptionProgressBar
name|grooveBar
init|=
operator|*
name|bar
decl_stmt|;
name|grooveBar
operator|.
name|rect
operator|=
name|grooveRect
expr_stmt|;
name|drawControl
argument_list|(
name|CE_ProgressBarGroove
argument_list|,
operator|&
name|grooveBar
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|QRect
name|progressRect
init|=
name|subElementRect
argument_list|(
name|SE_ProgressBarContents
argument_list|,
name|bar
argument_list|,
name|widget
argument_list|)
decl_stmt|;
if|if
condition|(
name|bar
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Vertical
condition|)
block|{
name|progressRect
operator|=
name|QRect
argument_list|(
name|progressRect
operator|.
name|left
argument_list|()
argument_list|,
name|progressRect
operator|.
name|top
argument_list|()
argument_list|,
name|progressRect
operator|.
name|height
argument_list|()
argument_list|,
name|progressRect
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
name|progressRect
operator|.
name|adjust
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
name|QStyleOptionProgressBar
name|progressOpt
init|=
operator|*
name|bar
decl_stmt|;
name|progressOpt
operator|.
name|rect
operator|=
name|progressRect
expr_stmt|;
name|drawControl
argument_list|(
name|CE_ProgressBarContents
argument_list|,
operator|&
name|progressOpt
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|QRect
name|labelRect
init|=
name|subElementRect
argument_list|(
name|SE_ProgressBarLabel
argument_list|,
name|bar
argument_list|,
name|widget
argument_list|)
decl_stmt|;
if|if
condition|(
name|bar
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Vertical
condition|)
block|{
name|labelRect
operator|=
name|QRect
argument_list|(
name|labelRect
operator|.
name|left
argument_list|()
argument_list|,
name|labelRect
operator|.
name|top
argument_list|()
argument_list|,
name|labelRect
operator|.
name|height
argument_list|()
argument_list|,
name|labelRect
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|QStyleOptionProgressBar
name|subBar
init|=
operator|*
name|bar
decl_stmt|;
name|subBar
operator|.
name|rect
operator|=
name|labelRect
expr_stmt|;
if|if
condition|(
name|bar
operator|->
name|textVisible
condition|)
name|drawControl
argument_list|(
name|CE_ProgressBarLabel
argument_list|,
operator|&
name|subBar
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
operator|delete
name|bar
expr_stmt|;
break|break;
block|}
case|case
name|CE_ProgressBarGroove
case|:
block|{
name|painter
operator|->
name|setBrush
argument_list|(
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Background
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Button
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|option
operator|->
name|rect
operator|.
name|topRight
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|CE_ProgressBarContents
case|:
block|{
specifier|const
name|QStyleOptionProgressBar
modifier|*
name|bar
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionProgressBar
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
decl_stmt|;
name|int
name|progress
init|=
name|int
argument_list|(
operator|(
name|double
argument_list|(
name|bar
operator|->
name|progress
argument_list|)
operator|/
name|double
argument_list|(
name|bar
operator|->
name|maximum
operator|-
name|bar
operator|->
name|minimum
argument_list|)
operator|)
operator|*
name|bar
operator|->
name|rect
operator|.
name|width
argument_list|()
argument_list|)
decl_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|bar
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Light
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|QRect
name|progressRect
init|=
name|QRect
argument_list|(
name|bar
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|QPoint
argument_list|(
name|progress
argument_list|,
name|bar
operator|->
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|progressRect
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|bar
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Midlight
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|Qt
operator|::
name|NoBrush
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|bar
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|,
name|bar
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|bar
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|QPoint
argument_list|(
name|progress
argument_list|,
name|bar
operator|->
name|rect
operator|.
name|top
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|CE_ProgressBarLabel
case|:
block|{
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
specifier|const
name|QStyleOptionProgressBar
modifier|*
name|bar
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionProgressBar
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
decl_stmt|;
name|QRect
name|rect
init|=
name|bar
operator|->
name|rect
decl_stmt|;
name|QRect
name|leftRect
decl_stmt|;
name|int
name|progressIndicatorPos
init|=
name|int
argument_list|(
operator|(
name|double
argument_list|(
name|bar
operator|->
name|progress
argument_list|)
operator|/
name|double
argument_list|(
name|bar
operator|->
name|maximum
operator|-
name|bar
operator|->
name|minimum
argument_list|)
operator|)
operator|*
name|bar
operator|->
name|rect
operator|.
name|width
argument_list|()
argument_list|)
decl_stmt|;
name|QFont
name|font
decl_stmt|;
name|font
operator|.
name|setBold
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setFont
argument_list|(
name|font
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|bar
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Midlight
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|progressIndicatorPos
operator|>=
literal|0
operator|&&
name|progressIndicatorPos
operator|<=
name|rect
operator|.
name|width
argument_list|()
condition|)
block|{
name|leftRect
operator|=
name|QRect
argument_list|(
name|bar
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|QPoint
argument_list|(
name|progressIndicatorPos
argument_list|,
name|bar
operator|->
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|progressIndicatorPos
operator|>
name|rect
operator|.
name|width
argument_list|()
condition|)
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|bar
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Base
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|bar
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Midlight
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QRect
name|textRect
init|=
name|QFontMetrics
argument_list|(
name|font
argument_list|)
operator|.
name|boundingRect
argument_list|(
name|bar
operator|->
name|text
argument_list|)
decl_stmt|;
name|textRect
operator|.
name|moveCenter
argument_list|(
name|option
operator|->
name|rect
operator|.
name|center
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawText
argument_list|(
name|textRect
argument_list|,
name|bar
operator|->
name|text
argument_list|,
name|QTextOption
argument_list|(
name|Qt
operator|::
name|AlignCenter
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|leftRect
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|bar
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Base
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setClipRect
argument_list|(
name|leftRect
argument_list|,
name|Qt
operator|::
name|IntersectClip
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawText
argument_list|(
name|textRect
argument_list|,
name|bar
operator|->
name|text
argument_list|,
name|QTextOption
argument_list|(
name|Qt
operator|::
name|AlignCenter
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
name|CE_MenuBarEmptyArea
case|:
block|{
name|QRect
name|emptyArea
init|=
name|option
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
decl_stmt|;
name|QLinearGradient
name|gradient
argument_list|(
name|emptyArea
operator|.
name|topLeft
argument_list|()
argument_list|,
name|emptyArea
operator|.
name|bottomLeft
argument_list|()
operator|-
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0.0
argument_list|,
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Base
argument_list|)
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|1.0
argument_list|,
name|QColor
argument_list|(
literal|223
argument_list|,
literal|223
argument_list|,
literal|223
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QColor
argument_list|(
literal|238
argument_list|,
literal|238
argument_list|,
literal|238
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|gradient
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|emptyArea
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|CE_MenuBarItem
case|:
block|{
if|if
condition|(
operator|!
operator|(
name|option
operator|->
name|state
operator|&
name|State_Sunken
operator|)
condition|)
block|{
name|QLinearGradient
name|gradient
argument_list|(
name|option
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|)
decl_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0.0
argument_list|,
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|1.0
argument_list|,
name|QColor
argument_list|(
literal|223
argument_list|,
literal|223
argument_list|,
literal|223
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|gradient
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|painter
operator|->
name|setBrush
argument_list|(
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Light
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|drawRect
argument_list|(
name|option
operator|->
name|rect
argument_list|)
expr_stmt|;
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|State_Sunken
condition|)
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Mid
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Base
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|Qt
operator|::
name|NoBrush
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|0
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|option
operator|->
name|rect
operator|.
name|topRight
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|0
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QCommonStyle
operator|::
name|drawControl
argument_list|(
name|control
argument_list|,
name|option
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|CE_MenuItem
case|:
block|{
specifier|const
name|QStyleOptionMenuItem
modifier|*
name|menuItem
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionMenuItem
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
decl_stmt|;
name|bool
name|selected
init|=
name|menuItem
operator|->
name|state
operator|&
name|State_Selected
decl_stmt|;
name|bool
name|checkable
init|=
name|menuItem
operator|->
name|checkType
operator|!=
name|QStyleOptionMenuItem
operator|::
name|NotCheckable
decl_stmt|;
name|bool
name|checked
init|=
name|menuItem
operator|->
name|checked
decl_stmt|;
if|if
condition|(
name|menuItem
operator|->
name|menuItemType
operator|==
name|QStyleOptionMenuItem
operator|::
name|Separator
condition|)
block|{
name|QPoint
name|center
init|=
name|menuItem
operator|->
name|rect
operator|.
name|center
argument_list|()
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|menuItem
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Midlight
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|menuItem
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|-
literal|2
argument_list|,
name|center
operator|.
name|y
argument_list|()
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|menuItem
operator|->
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|center
operator|.
name|y
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|menuItem
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Base
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|menuItem
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|-
literal|2
argument_list|,
name|center
operator|.
name|y
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|menuItem
operator|->
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|center
operator|.
name|y
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
if|if
condition|(
name|selected
condition|)
block|{
name|painter
operator|->
name|setBrush
argument_list|(
name|menuItem
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Light
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|menuItem
operator|->
name|rect
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|menuItem
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Midlight
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|menuItem
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|menuItem
operator|->
name|rect
operator|.
name|topRight
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|menuItem
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Base
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|menuItem
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|,
name|menuItem
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|checkable
condition|)
block|{
name|QRect
name|checkRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|5
argument_list|,
name|option
operator|->
name|rect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|-
literal|5
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
decl_stmt|;
if|if
condition|(
name|menuItem
operator|->
name|checkType
operator|&
name|QStyleOptionMenuItem
operator|::
name|Exclusive
condition|)
block|{
name|QStyleOptionButton
name|button
decl_stmt|;
name|button
operator|.
name|rect
operator|=
name|checkRect
expr_stmt|;
name|button
operator|.
name|state
operator|=
name|menuItem
operator|->
name|state
expr_stmt|;
if|if
condition|(
name|button
operator|.
name|state
operator|&
name|State_Sunken
condition|)
name|button
operator|.
name|state
operator|^=
name|State_Sunken
expr_stmt|;
if|if
condition|(
name|checked
condition|)
name|button
operator|.
name|state
operator||=
name|State_On
expr_stmt|;
name|button
operator|.
name|palette
operator|=
name|menuItem
operator|->
name|palette
expr_stmt|;
name|drawPrimitive
argument_list|(
name|PE_IndicatorRadioButton
argument_list|,
operator|&
name|button
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QBrush
name|buttonBrush
init|=
name|gradientBrush
argument_list|(
name|option
operator|->
name|rect
argument_list|)
decl_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|buttonBrush
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Mid
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|checkRect
argument_list|)
expr_stmt|;
if|if
condition|(
name|checked
condition|)
block|{
name|QImage
name|image
argument_list|(
literal|":/images/checkboxchecked.png"
argument_list|)
decl_stmt|;
name|painter
operator|->
name|drawImage
argument_list|(
name|QPoint
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|5
argument_list|,
name|option
operator|->
name|rect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
operator|-
literal|8
argument_list|)
argument_list|,
name|image
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|bool
name|dis
init|=
operator|!
operator|(
name|menuItem
operator|->
name|state
operator|&
name|State_Enabled
operator|)
decl_stmt|;
name|bool
name|act
init|=
name|menuItem
operator|->
name|state
operator|&
name|State_Selected
decl_stmt|;
specifier|const
name|QStyleOption
modifier|*
name|opt
init|=
name|option
decl_stmt|;
specifier|const
name|QStyleOptionMenuItem
modifier|*
name|menuitem
init|=
name|menuItem
decl_stmt|;
name|int
name|checkcol
init|=
name|qMax
argument_list|(
name|menuitem
operator|->
name|maxIconWidth
argument_list|,
literal|20
argument_list|)
decl_stmt|;
if|if
condition|(
name|menuItem
operator|->
name|icon
operator|.
name|isNull
argument_list|()
condition|)
name|checkcol
operator|=
literal|0
expr_stmt|;
name|QPainter
modifier|*
name|p
init|=
name|painter
decl_stmt|;
name|QRect
name|vCheckRect
init|=
name|visualRect
argument_list|(
name|opt
operator|->
name|direction
argument_list|,
name|menuitem
operator|->
name|rect
argument_list|,
name|QRect
argument_list|(
name|menuitem
operator|->
name|rect
operator|.
name|x
argument_list|()
argument_list|,
name|menuitem
operator|->
name|rect
operator|.
name|y
argument_list|()
argument_list|,
name|checkcol
argument_list|,
name|menuitem
operator|->
name|rect
operator|.
name|height
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|menuItem
operator|->
name|icon
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|QIcon
operator|::
name|Mode
name|mode
init|=
name|dis
condition|?
name|QIcon
operator|::
name|Disabled
else|:
name|QIcon
operator|::
name|Normal
decl_stmt|;
if|if
condition|(
name|act
operator|&&
operator|!
name|dis
condition|)
name|mode
operator|=
name|QIcon
operator|::
name|Active
expr_stmt|;
name|QPixmap
name|pixmap
decl_stmt|;
if|if
condition|(
name|checked
condition|)
name|pixmap
operator|=
name|menuItem
operator|->
name|icon
operator|.
name|pixmap
argument_list|(
name|pixelMetric
argument_list|(
name|PM_SmallIconSize
argument_list|)
argument_list|,
name|mode
argument_list|,
name|QIcon
operator|::
name|On
argument_list|)
expr_stmt|;
else|else
name|pixmap
operator|=
name|menuItem
operator|->
name|icon
operator|.
name|pixmap
argument_list|(
name|pixelMetric
argument_list|(
name|PM_SmallIconSize
argument_list|)
argument_list|,
name|mode
argument_list|)
expr_stmt|;
name|int
name|pixw
init|=
name|pixmap
operator|.
name|width
argument_list|()
decl_stmt|;
name|int
name|pixh
init|=
name|pixmap
operator|.
name|height
argument_list|()
decl_stmt|;
name|int
name|adjustedIcon
init|=
name|checkable
condition|?
literal|15
else|:
literal|0
decl_stmt|;
name|QRect
name|pmr
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|pixw
argument_list|,
name|pixh
argument_list|)
decl_stmt|;
name|pmr
operator|.
name|moveCenter
argument_list|(
name|vCheckRect
operator|.
name|center
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|menuItem
operator|->
name|palette
operator|.
name|text
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|checkable
operator|&&
name|checked
condition|)
name|painter
operator|->
name|drawPixmap
argument_list|(
name|QPoint
argument_list|(
name|pmr
operator|.
name|left
argument_list|()
operator|+
name|adjustedIcon
argument_list|,
name|pmr
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|,
name|pixmap
argument_list|)
expr_stmt|;
else|else
name|painter
operator|->
name|drawPixmap
argument_list|(
name|pmr
operator|.
name|topLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
name|adjustedIcon
argument_list|,
literal|0
argument_list|)
argument_list|,
name|pixmap
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|selected
condition|)
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|menuItem
operator|->
name|palette
operator|.
name|highlightedText
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|menuItem
operator|->
name|palette
operator|.
name|text
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|int
name|x
decl_stmt|,
name|y
decl_stmt|,
name|w
decl_stmt|,
name|h
decl_stmt|;
name|menuitem
operator|->
name|rect
operator|.
name|getRect
argument_list|(
operator|&
name|x
argument_list|,
operator|&
name|y
argument_list|,
operator|&
name|w
argument_list|,
operator|&
name|h
argument_list|)
expr_stmt|;
name|int
name|tab
init|=
name|menuitem
operator|->
name|tabWidth
decl_stmt|;
name|QColor
name|discol
decl_stmt|;
if|if
condition|(
name|dis
condition|)
block|{
name|discol
operator|=
name|menuitem
operator|->
name|palette
operator|.
name|text
argument_list|()
operator|.
name|color
argument_list|()
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|discol
argument_list|)
expr_stmt|;
block|}
name|int
name|xm
init|=
name|windowsItemFrame
operator|+
name|checkcol
operator|+
name|windowsItemHMargin
decl_stmt|;
name|int
name|xpos
init|=
name|menuitem
operator|->
name|rect
operator|.
name|x
argument_list|()
operator|+
name|xm
decl_stmt|;
name|QRect
name|textRect
decl_stmt|;
if|if
condition|(
operator|!
name|menuItem
operator|->
name|icon
operator|.
name|isNull
argument_list|()
condition|)
name|textRect
operator|.
name|setRect
argument_list|(
name|xpos
argument_list|,
name|y
operator|+
name|windowsItemVMargin
argument_list|,
name|w
operator|-
name|xm
operator|-
name|windowsRightBorder
operator|-
name|tab
operator|+
literal|1
argument_list|,
name|h
operator|-
literal|2
operator|*
name|windowsItemVMargin
argument_list|)
expr_stmt|;
else|else
name|textRect
operator|.
name|setRect
argument_list|(
name|menuItem
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|9
argument_list|,
name|y
operator|+
name|windowsItemVMargin
argument_list|,
name|w
operator|-
name|xm
operator|-
name|windowsRightBorder
operator|-
name|tab
argument_list|,
name|h
operator|-
literal|2
operator|*
name|windowsItemVMargin
argument_list|)
expr_stmt|;
if|if
condition|(
name|checkable
condition|)
name|textRect
operator|.
name|adjust
argument_list|(
literal|10
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QRect
name|vTextRect
init|=
name|visualRect
argument_list|(
name|opt
operator|->
name|direction
argument_list|,
name|menuitem
operator|->
name|rect
argument_list|,
name|textRect
argument_list|)
decl_stmt|;
name|QString
name|s
init|=
name|menuitem
operator|->
name|text
decl_stmt|;
if|if
condition|(
operator|!
name|s
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|int
name|t
init|=
name|s
operator|.
name|indexOf
argument_list|(
name|QLatin1Char
argument_list|(
literal|'\t'
argument_list|)
argument_list|)
decl_stmt|;
name|int
name|text_flags
init|=
name|Qt
operator|::
name|AlignVCenter
operator||
name|Qt
operator|::
name|TextShowMnemonic
operator||
name|Qt
operator|::
name|TextDontClip
operator||
name|Qt
operator|::
name|TextSingleLine
decl_stmt|;
if|if
condition|(
operator|!
name|styleHint
argument_list|(
name|SH_UnderlineShortcut
argument_list|,
name|menuitem
argument_list|,
name|widget
argument_list|)
condition|)
name|text_flags
operator||=
name|Qt
operator|::
name|TextHideMnemonic
expr_stmt|;
name|text_flags
operator||=
name|Qt
operator|::
name|AlignLeft
expr_stmt|;
if|if
condition|(
name|t
operator|>=
literal|0
condition|)
block|{
name|QRect
name|vShortcutRect
init|=
name|visualRect
argument_list|(
name|opt
operator|->
name|direction
argument_list|,
name|menuitem
operator|->
name|rect
argument_list|,
name|QRect
argument_list|(
name|textRect
operator|.
name|topRight
argument_list|()
argument_list|,
name|QPoint
argument_list|(
name|menuitem
operator|->
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|textRect
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|dis
operator|&&
operator|!
name|act
condition|)
block|{
name|p
operator|->
name|setPen
argument_list|(
name|menuitem
operator|->
name|palette
operator|.
name|light
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawText
argument_list|(
name|vShortcutRect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|text_flags
argument_list|,
name|s
operator|.
name|mid
argument_list|(
name|t
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|discol
argument_list|)
expr_stmt|;
block|}
name|p
operator|->
name|drawText
argument_list|(
name|vShortcutRect
argument_list|,
name|text_flags
argument_list|,
name|s
operator|.
name|mid
argument_list|(
name|t
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|s
operator|=
name|s
operator|.
name|left
argument_list|(
name|t
argument_list|)
expr_stmt|;
block|}
name|QFont
name|font
init|=
name|menuitem
operator|->
name|font
decl_stmt|;
if|if
condition|(
name|menuitem
operator|->
name|menuItemType
operator|==
name|QStyleOptionMenuItem
operator|::
name|DefaultItem
condition|)
name|font
operator|.
name|setBold
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|p
operator|->
name|setFont
argument_list|(
name|font
argument_list|)
expr_stmt|;
if|if
condition|(
name|dis
operator|&&
operator|!
name|act
condition|)
block|{
name|p
operator|->
name|setPen
argument_list|(
name|menuitem
operator|->
name|palette
operator|.
name|light
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawText
argument_list|(
name|vTextRect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|text_flags
argument_list|,
name|s
operator|.
name|left
argument_list|(
name|t
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|discol
argument_list|)
expr_stmt|;
block|}
name|p
operator|->
name|drawText
argument_list|(
name|vTextRect
argument_list|,
name|text_flags
argument_list|,
name|s
operator|.
name|left
argument_list|(
name|t
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|menuItem
operator|->
name|menuItemType
operator|&
name|QStyleOptionMenuItem
operator|::
name|SubMenu
condition|)
block|{
name|QPoint
name|center
init|=
name|menuItem
operator|->
name|rect
operator|.
name|center
argument_list|()
decl_stmt|;
name|QPoint
name|drawStart
argument_list|(
name|menuItem
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
literal|6
argument_list|,
name|center
operator|.
name|y
argument_list|()
operator|+
literal|4
argument_list|)
decl_stmt|;
name|QPainterPath
name|arrow
decl_stmt|;
name|arrow
operator|.
name|moveTo
argument_list|(
name|drawStart
argument_list|)
expr_stmt|;
name|arrow
operator|.
name|lineTo
argument_list|(
name|drawStart
operator|+
name|QPoint
argument_list|(
literal|0
argument_list|,
operator|-
literal|8
argument_list|)
argument_list|)
expr_stmt|;
name|arrow
operator|.
name|lineTo
argument_list|(
name|drawStart
operator|+
name|QPoint
argument_list|(
literal|4
argument_list|,
operator|-
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|arrow
operator|.
name|lineTo
argument_list|(
name|drawStart
operator|+
name|QPoint
argument_list|(
literal|4
argument_list|,
operator|-
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|arrow
operator|.
name|lineTo
argument_list|(
name|drawStart
operator|+
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|menuItem
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Text
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPath
argument_list|(
name|arrow
argument_list|)
expr_stmt|;
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
break|break;
block|}
case|case
name|CE_MenuVMargin
case|:
block|{
break|break;
block|}
case|case
name|CE_MenuHMargin
case|:
block|{
break|break;
block|}
case|case
name|CE_Splitter
case|:
block|{
name|drawSplitter
argument_list|(
name|option
argument_list|,
name|painter
argument_list|,
name|option
operator|->
name|state
operator|&
name|State_Horizontal
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|CE_ScrollBarAddPage
case|:
block|{
case|case
name|CE_ScrollBarSubPage
case|:
specifier|const
name|QStyleOptionSlider
modifier|*
name|scrollBar
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSlider
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
decl_stmt|;
name|QRect
name|myRect
decl_stmt|;
if|if
condition|(
name|scrollBar
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
block|{
name|myRect
operator|=
name|QRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
argument_list|)
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|myRect
operator|=
name|option
operator|->
name|rect
expr_stmt|;
block|}
name|painter
operator|->
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Background
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|myRect
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|Qt
operator|::
name|NoBrush
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|scrollBar
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Mid
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|myRect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|scrollBar
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Button
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|myRect
operator|.
name|bottomLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|,
name|myRect
operator|.
name|topLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|myRect
operator|.
name|topLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|myRect
operator|.
name|topRight
argument_list|()
operator|+
name|QPoint
argument_list|(
operator|-
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|CE_ScrollBarSubLine
case|:
block|{
specifier|const
name|QStyleOptionSlider
modifier|*
name|scrollBar
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSlider
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
decl_stmt|;
name|int
name|scrollBarExtent
init|=
name|pixelMetric
argument_list|(
name|PM_ScrollBarExtent
argument_list|)
decl_stmt|;
name|QRect
name|scrollBarSubLine
init|=
name|option
operator|->
name|rect
decl_stmt|;
name|QRect
name|button1
decl_stmt|;
name|QRect
name|button2
decl_stmt|;
if|if
condition|(
name|scrollBar
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
block|{
name|button1
operator|.
name|setRect
argument_list|(
name|scrollBarSubLine
operator|.
name|left
argument_list|()
argument_list|,
name|scrollBarSubLine
operator|.
name|top
argument_list|()
argument_list|,
literal|16
argument_list|,
name|scrollBarExtent
argument_list|)
expr_stmt|;
name|button2
operator|.
name|setRect
argument_list|(
name|scrollBarSubLine
operator|.
name|right
argument_list|()
operator|-
literal|15
argument_list|,
name|scrollBarSubLine
operator|.
name|top
argument_list|()
argument_list|,
literal|16
argument_list|,
name|scrollBarExtent
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|button1
operator|.
name|setRect
argument_list|(
name|scrollBarSubLine
operator|.
name|left
argument_list|()
argument_list|,
name|scrollBarSubLine
operator|.
name|top
argument_list|()
argument_list|,
name|scrollBarExtent
argument_list|,
literal|16
argument_list|)
expr_stmt|;
name|button2
operator|.
name|setRect
argument_list|(
name|scrollBarSubLine
operator|.
name|left
argument_list|()
argument_list|,
name|scrollBarSubLine
operator|.
name|bottom
argument_list|()
operator|-
literal|15
argument_list|,
name|scrollBarExtent
argument_list|,
literal|16
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|fillRect
argument_list|(
name|button2
argument_list|,
name|Qt
operator|::
name|blue
argument_list|)
expr_stmt|;
name|drawScrollBarArrow
argument_list|(
name|button1
argument_list|,
name|painter
argument_list|,
name|scrollBar
argument_list|)
expr_stmt|;
name|drawScrollBarArrow
argument_list|(
name|button2
argument_list|,
name|painter
argument_list|,
name|scrollBar
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|CE_ScrollBarAddLine
case|:
block|{
specifier|const
name|QStyleOptionSlider
modifier|*
name|scrollBar
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSlider
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
decl_stmt|;
name|QRect
name|button
argument_list|(
name|option
operator|->
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
argument_list|,
literal|16
argument_list|,
literal|16
argument_list|)
decl_stmt|;
name|drawScrollBarArrow
argument_list|(
name|button
argument_list|,
name|painter
argument_list|,
name|scrollBar
argument_list|,
literal|true
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|CE_ScrollBarSlider
case|:
block|{
specifier|const
name|QStyleOptionSlider
modifier|*
name|scrollBar
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSlider
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|scrollBar
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Midlight
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|scrollBar
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
operator|-
literal|1
argument_list|,
literal|0
argument_list|,
operator|-
literal|3
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QPoint
name|g1
decl_stmt|,
name|g2
decl_stmt|;
if|if
condition|(
name|scrollBar
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
block|{
name|g1
operator|=
name|option
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
expr_stmt|;
name|g2
operator|=
name|option
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|g1
operator|=
name|option
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
expr_stmt|;
name|g2
operator|=
name|option
operator|->
name|rect
operator|.
name|topRight
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|scrollBar
operator|->
name|state
operator|&
name|State_Enabled
condition|)
block|{
name|QLinearGradient
name|gradient
argument_list|(
name|g1
argument_list|,
name|g2
argument_list|)
decl_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|1.0
argument_list|,
name|QColor
argument_list|(
literal|188
argument_list|,
literal|210
argument_list|,
literal|230
argument_list|)
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0.3
argument_list|,
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0.0
argument_list|,
name|QColor
argument_list|(
literal|223
argument_list|,
literal|233
argument_list|,
literal|243
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|gradient
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|scrollBar
operator|->
name|palette
operator|.
name|buttonText
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|scrollBar
operator|->
name|palette
operator|.
name|button
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|drawRect
argument_list|(
name|scrollBar
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|sliderLength
init|=
name|option
operator|->
name|rect
operator|.
name|height
argument_list|()
decl_stmt|;
name|int
name|drawPos
init|=
name|scrollBar
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Vertical
condition|?
operator|(
name|sliderLength
operator|/
literal|2
operator|)
operator|+
literal|1
else|:
literal|1
operator|-
operator|(
operator|(
name|option
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|/
literal|2
operator|)
operator|)
decl_stmt|;
name|QPoint
name|origin
decl_stmt|;
if|if
condition|(
name|scrollBar
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Vertical
condition|)
name|origin
operator|=
name|option
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
expr_stmt|;
else|else
name|origin
operator|=
name|option
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|scrollBar
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Base
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|origin
operator|+
name|adjustScrollHandlePoint
argument_list|(
name|scrollBar
operator|->
name|orientation
argument_list|,
name|QPoint
argument_list|(
literal|4
argument_list|,
operator|-
name|drawPos
argument_list|)
argument_list|)
argument_list|,
name|origin
operator|+
name|adjustScrollHandlePoint
argument_list|(
name|scrollBar
operator|->
name|orientation
argument_list|,
name|QPoint
argument_list|(
literal|13
argument_list|,
operator|-
name|drawPos
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|origin
operator|+
name|adjustScrollHandlePoint
argument_list|(
name|scrollBar
operator|->
name|orientation
argument_list|,
name|QPoint
argument_list|(
literal|4
argument_list|,
literal|2
operator|-
name|drawPos
argument_list|)
argument_list|)
argument_list|,
name|origin
operator|+
name|adjustScrollHandlePoint
argument_list|(
name|scrollBar
operator|->
name|orientation
argument_list|,
name|QPoint
argument_list|(
literal|13
argument_list|,
literal|2
operator|-
name|drawPos
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|origin
operator|+
name|adjustScrollHandlePoint
argument_list|(
name|scrollBar
operator|->
name|orientation
argument_list|,
name|QPoint
argument_list|(
literal|4
argument_list|,
literal|4
operator|-
name|drawPos
argument_list|)
argument_list|)
argument_list|,
name|origin
operator|+
name|adjustScrollHandlePoint
argument_list|(
name|scrollBar
operator|->
name|orientation
argument_list|,
name|QPoint
argument_list|(
literal|13
argument_list|,
literal|4
operator|-
name|drawPos
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Midlight
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|origin
operator|+
name|adjustScrollHandlePoint
argument_list|(
name|scrollBar
operator|->
name|orientation
argument_list|,
name|QPoint
argument_list|(
literal|3
argument_list|,
operator|-
operator|(
name|drawPos
operator|+
literal|1
operator|)
argument_list|)
argument_list|)
argument_list|,
name|origin
operator|+
name|adjustScrollHandlePoint
argument_list|(
name|scrollBar
operator|->
name|orientation
argument_list|,
name|QPoint
argument_list|(
literal|12
argument_list|,
operator|-
operator|(
name|drawPos
operator|+
literal|1
operator|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|origin
operator|+
name|adjustScrollHandlePoint
argument_list|(
name|scrollBar
operator|->
name|orientation
argument_list|,
name|QPoint
argument_list|(
literal|3
argument_list|,
literal|1
operator|-
name|drawPos
argument_list|)
argument_list|)
argument_list|,
name|origin
operator|+
name|adjustScrollHandlePoint
argument_list|(
name|scrollBar
operator|->
name|orientation
argument_list|,
name|QPoint
argument_list|(
literal|12
argument_list|,
literal|1
operator|-
name|drawPos
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|origin
operator|+
name|adjustScrollHandlePoint
argument_list|(
name|scrollBar
operator|->
name|orientation
argument_list|,
name|QPoint
argument_list|(
literal|3
argument_list|,
literal|3
operator|-
name|drawPos
argument_list|)
argument_list|)
argument_list|,
name|origin
operator|+
name|adjustScrollHandlePoint
argument_list|(
name|scrollBar
operator|->
name|orientation
argument_list|,
name|QPoint
argument_list|(
literal|12
argument_list|,
literal|3
operator|-
name|drawPos
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|CE_TabBarTabLabel
case|:
block|{
name|QStyleOptionTab
name|copy
init|=
operator|*
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionTab
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
decl_stmt|;
if|if
condition|(
name|copy
operator|.
name|state
operator|&
name|State_HasFocus
condition|)
name|copy
operator|.
name|state
operator|^=
name|State_HasFocus
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|Qt
operator|::
name|NoBrush
argument_list|)
expr_stmt|;
name|QWindowsStyle
operator|::
name|drawControl
argument_list|(
name|CE_TabBarTabLabel
argument_list|,
operator|&
name|copy
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|CE_TabBarTabShape
case|:
block|{
specifier|const
name|QStyleOptionTab
modifier|*
name|tab
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionTab
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
decl_stmt|;
name|QRect
name|myRect
init|=
name|option
operator|->
name|rect
decl_stmt|;
name|QPoint
name|bottomLeft
decl_stmt|,
name|bottomRight
decl_stmt|,
name|topLeft
decl_stmt|,
name|topRight
decl_stmt|;
if|if
condition|(
operator|(
name|tab
operator|->
name|position
operator|==
name|QStyleOptionTab
operator|::
name|Beginning
operator|)
operator|||
operator|(
name|tab
operator|->
name|position
operator|==
name|QStyleOptionTab
operator|::
name|OnlyOneTab
operator|)
condition|)
block|{
if|if
condition|(
name|tab
operator|->
name|shape
operator|==
name|QTabBar
operator|::
name|RoundedSouth
operator|||
name|tab
operator|->
name|shape
operator|==
name|QTabBar
operator|::
name|RoundedNorth
condition|)
block|{
name|myRect
operator|=
name|myRect
operator|.
name|adjusted
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|myRect
operator|=
name|myRect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
switch|switch
condition|(
name|tab
operator|->
name|shape
condition|)
block|{
case|case
name|QTabBar
operator|::
name|RoundedNorth
case|:
name|topLeft
operator|=
name|myRect
operator|.
name|topLeft
argument_list|()
expr_stmt|;
name|topRight
operator|=
name|myRect
operator|.
name|topRight
argument_list|()
expr_stmt|;
name|bottomLeft
operator|=
name|myRect
operator|.
name|bottomLeft
argument_list|()
expr_stmt|;
name|bottomRight
operator|=
name|myRect
operator|.
name|bottomRight
argument_list|()
expr_stmt|;
break|break;
case|case
name|QTabBar
operator|::
name|RoundedSouth
case|:
name|topLeft
operator|=
name|myRect
operator|.
name|bottomLeft
argument_list|()
expr_stmt|;
name|topRight
operator|=
name|myRect
operator|.
name|bottomRight
argument_list|()
expr_stmt|;
name|bottomLeft
operator|=
name|myRect
operator|.
name|topLeft
argument_list|()
expr_stmt|;
name|bottomRight
operator|=
name|myRect
operator|.
name|topRight
argument_list|()
expr_stmt|;
break|break;
case|case
name|QTabBar
operator|::
name|RoundedWest
case|:
name|topLeft
operator|=
name|myRect
operator|.
name|topLeft
argument_list|()
expr_stmt|;
name|topRight
operator|=
name|myRect
operator|.
name|bottomLeft
argument_list|()
expr_stmt|;
name|bottomLeft
operator|=
name|myRect
operator|.
name|topRight
argument_list|()
expr_stmt|;
name|bottomRight
operator|=
name|myRect
operator|.
name|bottomRight
argument_list|()
expr_stmt|;
break|break;
case|case
name|QTabBar
operator|::
name|RoundedEast
case|:
name|topLeft
operator|=
name|myRect
operator|.
name|topRight
argument_list|()
expr_stmt|;
name|topRight
operator|=
name|myRect
operator|.
name|bottomRight
argument_list|()
expr_stmt|;
name|bottomLeft
operator|=
name|myRect
operator|.
name|topLeft
argument_list|()
expr_stmt|;
name|bottomRight
operator|=
name|myRect
operator|.
name|bottomLeft
argument_list|()
expr_stmt|;
break|break;
default|default:
empty_stmt|;
block|}
name|QPainterPath
name|outerPath
decl_stmt|;
name|outerPath
operator|.
name|moveTo
argument_list|(
name|bottomLeft
operator|+
name|adjustTabPoint
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
operator|-
literal|2
argument_list|)
argument_list|,
name|tab
operator|->
name|shape
argument_list|)
argument_list|)
expr_stmt|;
name|outerPath
operator|.
name|lineTo
argument_list|(
name|bottomLeft
operator|+
name|adjustTabPoint
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
operator|-
literal|14
argument_list|)
argument_list|,
name|tab
operator|->
name|shape
argument_list|)
argument_list|)
expr_stmt|;
name|outerPath
operator|.
name|lineTo
argument_list|(
name|topLeft
operator|+
name|adjustTabPoint
argument_list|(
name|QPoint
argument_list|(
literal|6
argument_list|,
literal|0
argument_list|)
argument_list|,
name|tab
operator|->
name|shape
argument_list|)
argument_list|)
expr_stmt|;
name|outerPath
operator|.
name|lineTo
argument_list|(
name|topRight
operator|+
name|adjustTabPoint
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|tab
operator|->
name|shape
argument_list|)
argument_list|)
expr_stmt|;
name|outerPath
operator|.
name|lineTo
argument_list|(
name|bottomRight
operator|+
name|adjustTabPoint
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
operator|-
literal|2
argument_list|)
argument_list|,
name|tab
operator|->
name|shape
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|tab
operator|->
name|state
operator|&
name|State_Selected
operator|||
name|tab
operator|->
name|position
operator|==
name|QStyleOptionTab
operator|::
name|OnlyOneTab
condition|)
block|{
name|QPainterPath
name|innerPath
decl_stmt|;
name|innerPath
operator|.
name|moveTo
argument_list|(
name|topLeft
operator|+
name|adjustTabPoint
argument_list|(
name|QPoint
argument_list|(
literal|6
argument_list|,
literal|2
argument_list|)
argument_list|,
name|tab
operator|->
name|shape
argument_list|)
argument_list|)
expr_stmt|;
name|innerPath
operator|.
name|lineTo
argument_list|(
name|topRight
operator|+
name|adjustTabPoint
argument_list|(
name|QPoint
argument_list|(
operator|-
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|,
name|tab
operator|->
name|shape
argument_list|)
argument_list|)
expr_stmt|;
name|innerPath
operator|.
name|lineTo
argument_list|(
name|bottomRight
operator|+
name|adjustTabPoint
argument_list|(
name|QPoint
argument_list|(
operator|-
literal|1
argument_list|,
operator|-
literal|2
argument_list|)
argument_list|,
name|tab
operator|->
name|shape
argument_list|)
argument_list|)
expr_stmt|;
name|innerPath
operator|.
name|lineTo
argument_list|(
name|bottomLeft
operator|+
name|adjustTabPoint
argument_list|(
name|QPoint
argument_list|(
literal|2
argument_list|,
operator|-
literal|2
argument_list|)
argument_list|,
name|tab
operator|->
name|shape
argument_list|)
argument_list|)
expr_stmt|;
name|innerPath
operator|.
name|lineTo
argument_list|(
name|bottomLeft
operator|+
name|adjustTabPoint
argument_list|(
name|QPoint
argument_list|(
literal|2
argument_list|,
operator|-
literal|14
argument_list|)
argument_list|,
name|tab
operator|->
name|shape
argument_list|)
argument_list|)
expr_stmt|;
name|innerPath
operator|.
name|lineTo
argument_list|(
name|topLeft
operator|+
name|adjustTabPoint
argument_list|(
name|QPoint
argument_list|(
literal|6
argument_list|,
literal|2
argument_list|)
argument_list|,
name|tab
operator|->
name|shape
argument_list|)
argument_list|)
expr_stmt|;
name|QPainterPath
name|whitePath
decl_stmt|;
name|whitePath
operator|.
name|moveTo
argument_list|(
name|bottomLeft
operator|+
name|adjustTabPoint
argument_list|(
name|QPoint
argument_list|(
literal|1
argument_list|,
operator|-
literal|2
argument_list|)
argument_list|,
name|tab
operator|->
name|shape
argument_list|)
argument_list|)
expr_stmt|;
name|whitePath
operator|.
name|lineTo
argument_list|(
name|bottomLeft
operator|+
name|adjustTabPoint
argument_list|(
name|QPoint
argument_list|(
literal|1
argument_list|,
operator|-
literal|14
argument_list|)
argument_list|,
name|tab
operator|->
name|shape
argument_list|)
argument_list|)
expr_stmt|;
name|whitePath
operator|.
name|lineTo
argument_list|(
name|topLeft
operator|+
name|adjustTabPoint
argument_list|(
name|QPoint
argument_list|(
literal|6
argument_list|,
literal|1
argument_list|)
argument_list|,
name|tab
operator|->
name|shape
argument_list|)
argument_list|)
expr_stmt|;
name|whitePath
operator|.
name|lineTo
argument_list|(
name|topRight
operator|+
name|adjustTabPoint
argument_list|(
name|QPoint
argument_list|(
operator|-
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|tab
operator|->
name|shape
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|tab
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Midlight
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|QColor
argument_list|(
literal|200
argument_list|,
literal|221
argument_list|,
literal|242
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPath
argument_list|(
name|outerPath
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QColor
argument_list|(
literal|200
argument_list|,
literal|221
argument_list|,
literal|242
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|QRect
argument_list|(
name|bottomLeft
operator|+
name|adjustTabPoint
argument_list|(
name|QPoint
argument_list|(
literal|2
argument_list|,
operator|-
literal|3
argument_list|)
argument_list|,
name|tab
operator|->
name|shape
argument_list|)
argument_list|,
name|bottomRight
operator|+
name|adjustTabPoint
argument_list|(
name|QPoint
argument_list|(
operator|-
literal|2
argument_list|,
literal|0
argument_list|)
argument_list|,
name|tab
operator|->
name|shape
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|tab
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Base
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|Qt
operator|::
name|NoBrush
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPath
argument_list|(
name|whitePath
argument_list|)
expr_stmt|;
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|State_HasFocus
condition|)
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Mid
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPath
argument_list|(
name|innerPath
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|tab
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Mid
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPath
argument_list|(
name|outerPath
argument_list|)
expr_stmt|;
block|}
break|break;
block|}
case|case
name|CE_PushButtonLabel
case|:
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
if|if
condition|(
specifier|const
name|QStyleOptionButton
modifier|*
name|button
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionButton
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|QRect
name|ir
init|=
name|button
operator|->
name|rect
decl_stmt|;
name|uint
name|tf
init|=
name|Qt
operator|::
name|AlignVCenter
operator||
name|Qt
operator|::
name|TextShowMnemonic
decl_stmt|;
if|if
condition|(
operator|!
name|styleHint
argument_list|(
name|SH_UnderlineShortcut
argument_list|,
name|button
argument_list|,
name|widget
argument_list|)
condition|)
name|tf
operator||=
name|Qt
operator|::
name|TextHideMnemonic
expr_stmt|;
if|if
condition|(
operator|!
name|button
operator|->
name|icon
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|QPoint
name|point
decl_stmt|;
name|QIcon
operator|::
name|Mode
name|mode
init|=
name|button
operator|->
name|state
operator|&
name|State_Enabled
condition|?
name|QIcon
operator|::
name|Normal
else|:
name|QIcon
operator|::
name|Disabled
decl_stmt|;
if|if
condition|(
name|mode
operator|==
name|QIcon
operator|::
name|Normal
operator|&&
name|button
operator|->
name|state
operator|&
name|State_HasFocus
condition|)
name|mode
operator|=
name|QIcon
operator|::
name|Active
expr_stmt|;
name|QIcon
operator|::
name|State
name|state
init|=
name|QIcon
operator|::
name|Off
decl_stmt|;
if|if
condition|(
name|button
operator|->
name|state
operator|&
name|State_On
condition|)
name|state
operator|=
name|QIcon
operator|::
name|On
expr_stmt|;
name|QPixmap
name|pixmap
init|=
name|button
operator|->
name|icon
operator|.
name|pixmap
argument_list|(
name|button
operator|->
name|iconSize
argument_list|,
name|mode
argument_list|,
name|state
argument_list|)
decl_stmt|;
name|int
name|w
init|=
name|pixmap
operator|.
name|width
argument_list|()
decl_stmt|;
name|int
name|h
init|=
name|pixmap
operator|.
name|height
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|button
operator|->
name|text
operator|.
name|isEmpty
argument_list|()
condition|)
name|w
operator|+=
name|button
operator|->
name|fontMetrics
operator|.
name|width
argument_list|(
name|button
operator|->
name|text
argument_list|)
operator|+
literal|2
expr_stmt|;
name|point
operator|=
name|QPoint
argument_list|(
name|ir
operator|.
name|x
argument_list|()
operator|+
name|ir
operator|.
name|width
argument_list|()
operator|/
literal|2
operator|-
name|w
operator|/
literal|2
argument_list|,
name|ir
operator|.
name|y
argument_list|()
operator|+
name|ir
operator|.
name|height
argument_list|()
operator|/
literal|2
operator|-
name|h
operator|/
literal|2
argument_list|)
expr_stmt|;
if|if
condition|(
name|button
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
condition|)
name|point
operator|.
name|rx
argument_list|()
operator|+=
name|pixmap
operator|.
name|width
argument_list|()
expr_stmt|;
name|painter
operator|->
name|drawPixmap
argument_list|(
name|visualPos
argument_list|(
name|button
operator|->
name|direction
argument_list|,
name|button
operator|->
name|rect
argument_list|,
name|point
argument_list|)
argument_list|,
name|pixmap
argument_list|)
expr_stmt|;
if|if
condition|(
name|button
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
condition|)
name|ir
operator|.
name|translate
argument_list|(
operator|-
name|point
operator|.
name|x
argument_list|()
operator|-
literal|2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
else|else
name|ir
operator|.
name|translate
argument_list|(
name|point
operator|.
name|x
argument_list|()
operator|+
name|pixmap
operator|.
name|width
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|button
operator|->
name|text
operator|.
name|isEmpty
argument_list|()
condition|)
name|tf
operator||=
name|Qt
operator|::
name|AlignLeft
expr_stmt|;
block|}
else|else
block|{
name|tf
operator||=
name|Qt
operator|::
name|AlignHCenter
expr_stmt|;
block|}
if|if
condition|(
name|button
operator|->
name|fontMetrics
operator|.
name|height
argument_list|()
operator|>
literal|14
condition|)
name|ir
operator|.
name|translate
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|drawItemText
argument_list|(
name|painter
argument_list|,
name|ir
argument_list|,
name|tf
argument_list|,
name|button
operator|->
name|palette
argument_list|,
operator|(
name|button
operator|->
name|state
operator|&
name|State_Enabled
operator|)
argument_list|,
name|button
operator|->
name|text
argument_list|,
name|QPalette
operator|::
name|ButtonText
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
default|default:
name|QWindowsStyle
operator|::
name|drawControl
argument_list|(
name|control
argument_list|,
name|option
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|adjustTabPoint
specifier|inline
name|QPoint
name|JavaStyle
operator|::
name|adjustTabPoint
parameter_list|(
specifier|const
name|QPoint
modifier|&
name|point
parameter_list|,
name|QTabBar
operator|::
name|Shape
name|shape
parameter_list|)
specifier|const
block|{
name|QPoint
name|rPoint
decl_stmt|;
switch|switch
condition|(
name|shape
condition|)
block|{
case|case
name|QTabBar
operator|::
name|RoundedWest
case|:
name|rPoint
operator|=
name|QPoint
argument_list|(
name|point
operator|.
name|y
argument_list|()
argument_list|,
name|point
operator|.
name|x
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|QTabBar
operator|::
name|RoundedSouth
case|:
name|rPoint
operator|=
name|QPoint
argument_list|(
name|point
operator|.
name|x
argument_list|()
argument_list|,
name|point
operator|.
name|y
argument_list|()
operator|*
operator|-
literal|1
argument_list|)
expr_stmt|;
break|break;
case|case
name|QTabBar
operator|::
name|RoundedEast
case|:
name|rPoint
operator|=
name|QPoint
argument_list|(
name|point
operator|.
name|y
argument_list|()
operator|*
operator|-
literal|1
argument_list|,
name|point
operator|.
name|x
argument_list|()
argument_list|)
expr_stmt|;
break|break;
default|default:
name|rPoint
operator|=
name|point
expr_stmt|;
block|}
return|return
name|rPoint
return|;
block|}
end_function
begin_function
DECL|function|subControlRect
name|QRect
name|JavaStyle
operator|::
name|subControlRect
parameter_list|(
name|ComplexControl
name|control
parameter_list|,
specifier|const
name|QStyleOptionComplex
modifier|*
name|option
parameter_list|,
name|SubControl
name|subControl
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
name|QRect
name|rect
init|=
name|QWindowsStyle
operator|::
name|subControlRect
argument_list|(
name|control
argument_list|,
name|option
argument_list|,
name|subControl
argument_list|,
name|widget
argument_list|)
decl_stmt|;
switch|switch
condition|(
name|control
condition|)
block|{
case|case
name|CC_TitleBar
case|:
block|{
specifier|const
name|QStyleOptionTitleBar
modifier|*
name|bar
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionTitleBar
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
decl_stmt|;
switch|switch
condition|(
name|subControl
condition|)
block|{
case|case
name|SC_TitleBarMinButton
case|:
block|{
name|rect
operator|=
name|QRect
argument_list|(
name|bar
operator|->
name|rect
operator|.
name|topRight
argument_list|()
operator|+
name|QPoint
argument_list|(
operator|-
literal|68
argument_list|,
literal|2
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|15
argument_list|,
literal|15
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|SC_TitleBarMaxButton
case|:
block|{
name|rect
operator|=
name|QRect
argument_list|(
name|bar
operator|->
name|rect
operator|.
name|topRight
argument_list|()
operator|+
name|QPoint
argument_list|(
operator|-
literal|43
argument_list|,
literal|3
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|15
argument_list|,
literal|15
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|SC_TitleBarCloseButton
case|:
block|{
name|rect
operator|=
name|QRect
argument_list|(
name|bar
operator|->
name|rect
operator|.
name|topRight
argument_list|()
operator|+
name|QPoint
argument_list|(
operator|-
literal|18
argument_list|,
literal|3
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|15
argument_list|,
literal|15
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|SC_TitleBarLabel
case|:
block|{
name|QRect
name|labelRect
init|=
name|bar
operator|->
name|fontMetrics
operator|.
name|boundingRect
argument_list|(
name|bar
operator|->
name|text
argument_list|)
decl_stmt|;
name|rect
operator|=
name|labelRect
expr_stmt|;
name|rect
operator|.
name|translate
argument_list|(
name|bar
operator|->
name|rect
operator|.
name|left
argument_list|()
operator|+
literal|30
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|rect
operator|.
name|moveTop
argument_list|(
name|bar
operator|->
name|rect
operator|.
name|top
argument_list|()
argument_list|)
expr_stmt|;
name|rect
operator|.
name|adjust
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|SC_TitleBarSysMenu
case|:
block|{
name|rect
operator|=
name|QRect
argument_list|(
name|bar
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|6
argument_list|,
literal|3
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
default|default:
empty_stmt|;
block|}
break|break;
block|}
case|case
name|CC_GroupBox
case|:
block|{
specifier|const
name|QStyleOptionGroupBox
modifier|*
name|box
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionGroupBox
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
decl_stmt|;
name|bool
name|hasCheckbox
init|=
name|box
operator|->
name|subControls
operator|&
name|SC_GroupBoxCheckBox
decl_stmt|;
name|int
name|checkAdjust
init|=
literal|13
decl_stmt|;
name|QRect
name|textRect
init|=
name|box
operator|->
name|fontMetrics
operator|.
name|boundingRect
argument_list|(
name|box
operator|->
name|text
argument_list|)
decl_stmt|;
switch|switch
condition|(
name|subControl
condition|)
block|{
case|case
name|SC_GroupBoxFrame
case|:
block|{
name|rect
operator|=
name|box
operator|->
name|rect
expr_stmt|;
break|break;
block|}
case|case
name|SC_GroupBoxCheckBox
case|:
block|{
if|if
condition|(
name|hasCheckbox
condition|)
block|{
name|rect
operator|=
name|QRect
argument_list|(
name|box
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|7
argument_list|,
literal|4
operator|+
operator|(
name|textRect
operator|.
name|height
argument_list|()
operator|/
literal|2
operator|-
name|checkAdjust
operator|/
literal|2
operator|)
argument_list|)
argument_list|,
name|QSize
argument_list|(
name|checkAdjust
argument_list|,
name|checkAdjust
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|rect
operator|=
name|QRect
argument_list|()
expr_stmt|;
block|}
break|break;
block|}
case|case
name|SC_GroupBoxLabel
case|:
block|{
name|rect
operator|=
name|QRect
argument_list|(
name|box
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|7
operator|+
operator|(
name|hasCheckbox
condition|?
name|checkAdjust
operator|+
literal|2
else|:
literal|0
operator|)
argument_list|,
literal|4
argument_list|)
argument_list|,
name|textRect
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|SC_GroupBoxContents
case|:
block|{
name|rect
operator|=
name|box
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|10
argument_list|,
literal|10
operator|+
name|textRect
operator|.
name|height
argument_list|()
argument_list|,
operator|-
literal|10
argument_list|,
operator|-
literal|10
argument_list|)
expr_stmt|;
break|break;
block|}
default|default:
empty_stmt|;
block|}
break|break;
block|}
case|case
name|CC_SpinBox
case|:
block|{
specifier|const
name|QStyleOptionSpinBox
modifier|*
name|spinBox
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSpinBox
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
decl_stmt|;
name|int
name|spinnerWidth
init|=
literal|16
decl_stmt|;
name|QRect
name|myRect
init|=
name|spinBox
operator|->
name|rect
decl_stmt|;
name|QPoint
name|center
init|=
name|myRect
operator|.
name|center
argument_list|()
decl_stmt|;
name|int
name|frameWidth
init|=
name|pixelMetric
argument_list|(
name|PM_SpinBoxFrameWidth
argument_list|,
name|spinBox
argument_list|,
name|widget
argument_list|)
decl_stmt|;
switch|switch
condition|(
name|subControl
condition|)
block|{
case|case
name|SC_SpinBoxUp
case|:
block|{
name|rect
operator|=
name|QRect
argument_list|(
name|myRect
operator|.
name|topRight
argument_list|()
operator|+
name|QPoint
argument_list|(
operator|-
literal|16
argument_list|,
literal|0
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|16
argument_list|,
name|center
operator|.
name|y
argument_list|()
operator|-
name|myRect
operator|.
name|topRight
argument_list|()
operator|.
name|y
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|SC_SpinBoxDown
case|:
block|{
name|rect
operator|=
name|QRect
argument_list|(
name|QPoint
argument_list|(
name|myRect
operator|.
name|bottomRight
argument_list|()
operator|.
name|x
argument_list|()
operator|-
literal|16
argument_list|,
name|center
operator|.
name|y
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|16
argument_list|,
name|myRect
operator|.
name|bottomRight
argument_list|()
operator|.
name|y
argument_list|()
operator|-
name|center
operator|.
name|y
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|SC_SpinBoxFrame
case|:
block|{
name|rect
operator|=
name|QRect
argument_list|(
name|myRect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|myRect
operator|.
name|bottomRight
argument_list|()
operator|+
name|QPoint
argument_list|(
operator|-
literal|16
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|SC_SpinBoxEditField
case|:
block|{
name|rect
operator|=
name|QRect
argument_list|(
name|myRect
operator|.
name|topLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|,
name|myRect
operator|.
name|bottomRight
argument_list|()
operator|+
name|QPoint
argument_list|(
operator|-
literal|15
operator|-
name|frameWidth
argument_list|,
operator|-
literal|2
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
default|default:
empty_stmt|;
block|}
break|break;
block|}
case|case
name|CC_ToolButton
case|:
block|{
specifier|const
name|QStyleOptionToolButton
modifier|*
name|button
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionToolButton
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
decl_stmt|;
switch|switch
condition|(
name|subControl
condition|)
block|{
case|case
name|SC_ToolButton
case|:
block|{
name|rect
operator|=
name|option
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|SC_ToolButtonMenu
case|:
block|{
name|rect
operator|=
name|QRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
operator|+
name|QPoint
argument_list|(
operator|-
literal|11
argument_list|,
operator|-
literal|11
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
break|break;
block|}
case|case
name|CC_ComboBox
case|:
block|{
specifier|const
name|QStyleOptionComboBox
modifier|*
name|combo
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionComboBox
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
decl_stmt|;
name|bool
name|reverse
init|=
name|combo
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
decl_stmt|;
switch|switch
condition|(
name|subControl
condition|)
block|{
case|case
name|SC_ComboBoxFrame
case|:
name|rect
operator|=
name|combo
operator|->
name|rect
expr_stmt|;
break|break;
case|case
name|SC_ComboBoxArrow
case|:
if|if
condition|(
name|reverse
condition|)
block|{
name|rect
operator|=
name|QRect
argument_list|(
name|combo
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|combo
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|17
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|rect
operator|=
name|QRect
argument_list|(
name|combo
operator|->
name|rect
operator|.
name|topRight
argument_list|()
operator|+
name|QPoint
argument_list|(
operator|-
literal|17
argument_list|,
literal|0
argument_list|)
argument_list|,
name|combo
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|SC_ComboBoxEditField
case|:
if|if
condition|(
name|reverse
condition|)
block|{
name|rect
operator|=
name|QRect
argument_list|(
name|combo
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|19
argument_list|,
literal|2
argument_list|)
argument_list|,
name|combo
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
operator|+
name|QPoint
argument_list|(
operator|-
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|rect
operator|=
name|QRect
argument_list|(
name|combo
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|,
name|combo
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
operator|+
name|QPoint
argument_list|(
operator|-
literal|19
argument_list|,
operator|-
literal|2
argument_list|)
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|SC_ComboBoxListBoxPopup
case|:
name|rect
operator|=
name|combo
operator|->
name|rect
expr_stmt|;
break|break;
block|}
break|break;
block|}
case|case
name|CC_ScrollBar
case|:
block|{
specifier|const
name|QStyleOptionSlider
modifier|*
name|scrollBar
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSlider
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
decl_stmt|;
name|int
name|scrollBarExtent
init|=
name|pixelMetric
argument_list|(
name|PM_ScrollBarExtent
argument_list|,
name|scrollBar
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|int
name|sliderMaxLength
init|=
operator|(
operator|(
name|scrollBar
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
operator|)
condition|?
name|scrollBar
operator|->
name|rect
operator|.
name|width
argument_list|()
else|:
name|scrollBar
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|)
operator|-
operator|(
literal|16
operator|*
literal|3
operator|)
decl_stmt|;
name|int
name|sliderMinLength
init|=
name|pixelMetric
argument_list|(
name|PM_ScrollBarSliderMin
argument_list|,
name|scrollBar
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|int
name|sliderLength
decl_stmt|;
if|if
condition|(
name|scrollBar
operator|->
name|maximum
operator|!=
name|scrollBar
operator|->
name|minimum
condition|)
block|{
name|uint
name|valueRange
init|=
name|scrollBar
operator|->
name|maximum
operator|-
name|scrollBar
operator|->
name|minimum
decl_stmt|;
name|sliderLength
operator|=
operator|(
name|scrollBar
operator|->
name|pageStep
operator|*
name|sliderMaxLength
operator|)
operator|/
operator|(
name|valueRange
operator|+
name|scrollBar
operator|->
name|pageStep
operator|)
expr_stmt|;
if|if
condition|(
name|sliderLength
argument_list|<
name|sliderMinLength
operator|||
name|valueRange
argument_list|>
name|INT_MAX
operator|/
literal|2
condition|)
name|sliderLength
operator|=
name|sliderMinLength
expr_stmt|;
if|if
condition|(
name|sliderLength
operator|>
name|sliderMaxLength
condition|)
name|sliderLength
operator|=
name|sliderMaxLength
expr_stmt|;
block|}
else|else
block|{
name|sliderLength
operator|=
name|sliderMaxLength
expr_stmt|;
block|}
name|int
name|sliderStart
init|=
literal|16
operator|+
name|sliderPositionFromValue
argument_list|(
name|scrollBar
operator|->
name|minimum
argument_list|,
name|scrollBar
operator|->
name|maximum
argument_list|,
name|scrollBar
operator|->
name|sliderPosition
argument_list|,
name|sliderMaxLength
operator|-
name|sliderLength
argument_list|,
name|scrollBar
operator|->
name|upsideDown
argument_list|)
decl_stmt|;
name|QRect
name|scrollBarRect
init|=
name|scrollBar
operator|->
name|rect
decl_stmt|;
switch|switch
condition|(
name|subControl
condition|)
block|{
case|case
name|SC_ScrollBarSubLine
case|:
if|if
condition|(
name|scrollBar
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
block|{
name|rect
operator|.
name|setRect
argument_list|(
name|scrollBarRect
operator|.
name|left
argument_list|()
argument_list|,
name|scrollBarRect
operator|.
name|top
argument_list|()
argument_list|,
name|scrollBarRect
operator|.
name|width
argument_list|()
operator|-
literal|16
argument_list|,
name|scrollBarExtent
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|rect
operator|.
name|setRect
argument_list|(
name|scrollBarRect
operator|.
name|left
argument_list|()
argument_list|,
name|scrollBarRect
operator|.
name|top
argument_list|()
argument_list|,
name|scrollBarExtent
argument_list|,
name|scrollBarRect
operator|.
name|height
argument_list|()
operator|-
literal|16
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|SC_ScrollBarAddLine
case|:
if|if
condition|(
name|scrollBar
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
block|{
name|rect
operator|.
name|setRect
argument_list|(
name|scrollBarRect
operator|.
name|right
argument_list|()
operator|-
literal|15
argument_list|,
name|scrollBarRect
operator|.
name|top
argument_list|()
argument_list|,
literal|16
argument_list|,
name|scrollBarExtent
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|rect
operator|.
name|setRect
argument_list|(
name|scrollBarRect
operator|.
name|left
argument_list|()
argument_list|,
name|scrollBarRect
operator|.
name|bottom
argument_list|()
operator|-
literal|15
argument_list|,
name|scrollBarExtent
argument_list|,
literal|16
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|SC_ScrollBarSubPage
case|:
if|if
condition|(
name|scrollBar
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
block|{
name|rect
operator|.
name|setRect
argument_list|(
name|scrollBarRect
operator|.
name|left
argument_list|()
operator|+
literal|16
argument_list|,
name|scrollBarRect
operator|.
name|top
argument_list|()
argument_list|,
name|sliderStart
operator|-
operator|(
name|scrollBarRect
operator|.
name|left
argument_list|()
operator|+
literal|16
operator|)
argument_list|,
name|scrollBarExtent
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|rect
operator|.
name|setRect
argument_list|(
name|scrollBarRect
operator|.
name|left
argument_list|()
argument_list|,
name|scrollBarRect
operator|.
name|top
argument_list|()
operator|+
literal|16
argument_list|,
name|scrollBarExtent
argument_list|,
name|sliderStart
operator|-
operator|(
name|scrollBarRect
operator|.
name|left
argument_list|()
operator|+
literal|16
operator|)
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|SC_ScrollBarAddPage
case|:
if|if
condition|(
name|scrollBar
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
name|rect
operator|.
name|setRect
argument_list|(
name|sliderStart
operator|+
name|sliderLength
argument_list|,
literal|0
argument_list|,
name|sliderMaxLength
operator|-
name|sliderStart
operator|-
name|sliderLength
operator|+
literal|16
argument_list|,
name|scrollBarExtent
argument_list|)
expr_stmt|;
else|else
name|rect
operator|.
name|setRect
argument_list|(
literal|0
argument_list|,
name|sliderStart
operator|+
name|sliderLength
argument_list|,
name|scrollBarExtent
argument_list|,
name|sliderMaxLength
operator|-
name|sliderStart
operator|-
name|sliderLength
operator|+
literal|16
argument_list|)
expr_stmt|;
break|break;
case|case
name|SC_ScrollBarGroove
case|:
if|if
condition|(
name|scrollBar
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
block|{
name|rect
operator|=
name|scrollBarRect
operator|.
name|adjusted
argument_list|(
literal|16
argument_list|,
literal|0
argument_list|,
operator|-
literal|32
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|rect
operator|=
name|scrollBarRect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|16
argument_list|,
literal|0
argument_list|,
operator|-
literal|32
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|SC_ScrollBarSlider
case|:
if|if
condition|(
name|scrollBar
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
block|{
name|rect
operator|.
name|setRect
argument_list|(
name|sliderStart
argument_list|,
literal|0
argument_list|,
name|sliderLength
argument_list|,
name|scrollBarExtent
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|rect
operator|.
name|setRect
argument_list|(
literal|0
argument_list|,
name|sliderStart
argument_list|,
name|scrollBarExtent
argument_list|,
name|sliderLength
argument_list|)
expr_stmt|;
block|}
break|break;
default|default:
return|return
name|QWindowsStyle
operator|::
name|subControlRect
argument_list|(
name|control
argument_list|,
name|option
argument_list|,
name|subControl
argument_list|,
name|widget
argument_list|)
return|;
block|}
break|break;
block|}
case|case
name|CC_Slider
case|:
block|{
specifier|const
name|QStyleOptionSlider
modifier|*
name|slider
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSlider
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
decl_stmt|;
name|rect
operator|=
name|slider
operator|->
name|rect
expr_stmt|;
name|int
name|tickSize
init|=
name|pixelMetric
argument_list|(
name|PM_SliderTickmarkOffset
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|int
name|handleSize
init|=
name|pixelMetric
argument_list|(
name|PM_SliderControlThickness
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|int
name|dist
init|=
name|slider
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Vertical
condition|?
name|slider
operator|->
name|rect
operator|.
name|height
argument_list|()
else|:
name|slider
operator|->
name|rect
operator|.
name|width
argument_list|()
decl_stmt|;
name|int
name|pos
init|=
name|QStyle
operator|::
name|sliderPositionFromValue
argument_list|(
name|slider
operator|->
name|minimum
argument_list|,
name|slider
operator|->
name|maximum
argument_list|,
name|slider
operator|->
name|sliderValue
argument_list|,
name|dist
operator|-
name|handleSize
argument_list|)
decl_stmt|;
switch|switch
condition|(
name|subControl
condition|)
block|{
case|case
name|SC_SliderGroove
case|:
block|{
name|QPoint
name|center
init|=
name|rect
operator|.
name|center
argument_list|()
decl_stmt|;
if|if
condition|(
name|slider
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
block|{
name|rect
operator|.
name|setHeight
argument_list|(
name|handleSize
argument_list|)
expr_stmt|;
if|if
condition|(
name|slider
operator|->
name|tickPosition
operator|==
name|QSlider
operator|::
name|TicksBelow
condition|)
block|{
name|center
operator|.
name|ry
argument_list|()
operator|-=
name|tickSize
expr_stmt|;
block|}
block|}
else|else
block|{
name|rect
operator|.
name|adjust
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|rect
operator|.
name|setWidth
argument_list|(
name|handleSize
argument_list|)
expr_stmt|;
if|if
condition|(
name|slider
operator|->
name|tickPosition
operator|==
name|QSlider
operator|::
name|TicksBelow
condition|)
block|{
name|center
operator|.
name|rx
argument_list|()
operator|-=
name|tickSize
expr_stmt|;
block|}
block|}
name|rect
operator|.
name|moveCenter
argument_list|(
name|center
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|SC_SliderHandle
case|:
block|{
name|QPoint
name|center
init|=
name|rect
operator|.
name|center
argument_list|()
decl_stmt|;
if|if
condition|(
name|slider
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
block|{
name|rect
operator|.
name|setHeight
argument_list|(
name|handleSize
argument_list|)
expr_stmt|;
if|if
condition|(
name|slider
operator|->
name|tickPosition
operator|==
name|QSlider
operator|::
name|TicksBelow
condition|)
block|{
name|center
operator|.
name|ry
argument_list|()
operator|-=
name|tickSize
expr_stmt|;
block|}
name|rect
operator|.
name|moveCenter
argument_list|(
name|center
argument_list|)
expr_stmt|;
if|if
condition|(
name|slider
operator|->
name|upsideDown
condition|)
name|rect
operator|.
name|setLeft
argument_list|(
name|slider
operator|->
name|rect
operator|.
name|right
argument_list|()
operator|-
name|pos
operator|-
operator|(
name|handleSize
operator|-
literal|1
operator|)
argument_list|)
expr_stmt|;
else|else
name|rect
operator|.
name|setLeft
argument_list|(
name|pos
argument_list|)
expr_stmt|;
name|rect
operator|.
name|setWidth
argument_list|(
name|handleSize
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|rect
operator|.
name|setWidth
argument_list|(
name|handleSize
argument_list|)
expr_stmt|;
if|if
condition|(
name|slider
operator|->
name|tickPosition
operator|==
name|QSlider
operator|::
name|TicksBelow
condition|)
block|{
name|center
operator|.
name|rx
argument_list|()
operator|-=
name|tickSize
expr_stmt|;
block|}
name|rect
operator|.
name|moveCenter
argument_list|(
name|center
argument_list|)
expr_stmt|;
if|if
condition|(
name|slider
operator|->
name|upsideDown
condition|)
name|rect
operator|.
name|setTop
argument_list|(
name|slider
operator|->
name|rect
operator|.
name|bottom
argument_list|()
operator|-
operator|(
operator|(
name|pos
operator|+
name|handleSize
operator|)
operator|-
literal|2
operator|)
argument_list|)
expr_stmt|;
else|else
name|rect
operator|.
name|setTop
argument_list|(
name|slider
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
name|pos
argument_list|)
expr_stmt|;
name|rect
operator|.
name|setHeight
argument_list|(
name|handleSize
argument_list|)
expr_stmt|;
block|}
break|break;
block|}
case|case
name|SC_SliderTickmarks
case|:
block|{
name|QPoint
name|center
init|=
name|slider
operator|->
name|rect
operator|.
name|center
argument_list|()
decl_stmt|;
if|if
condition|(
name|slider
operator|->
name|tickPosition
operator|&
name|QSlider
operator|::
name|TicksBelow
condition|)
block|{
if|if
condition|(
name|slider
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
block|{
name|rect
operator|.
name|setHeight
argument_list|(
name|tickSize
argument_list|)
expr_stmt|;
name|center
operator|.
name|ry
argument_list|()
operator|+=
name|tickSize
operator|/
literal|2
expr_stmt|;
name|rect
operator|.
name|adjust
argument_list|(
literal|6
argument_list|,
literal|0
argument_list|,
operator|-
literal|10
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|rect
operator|.
name|setWidth
argument_list|(
name|tickSize
argument_list|)
expr_stmt|;
name|center
operator|.
name|rx
argument_list|()
operator|+=
name|tickSize
operator|/
literal|2
expr_stmt|;
name|rect
operator|.
name|adjust
argument_list|(
literal|0
argument_list|,
literal|6
argument_list|,
literal|0
argument_list|,
operator|-
literal|10
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|rect
operator|=
name|QRect
argument_list|()
expr_stmt|;
block|}
name|rect
operator|.
name|moveCenter
argument_list|(
name|center
argument_list|)
expr_stmt|;
break|break;
block|}
default|default:
empty_stmt|;
block|}
break|break;
block|}
default|default:
return|return
name|QWindowsStyle
operator|::
name|subControlRect
argument_list|(
name|control
argument_list|,
name|option
argument_list|,
name|subControl
argument_list|,
name|widget
argument_list|)
return|;
block|}
return|return
name|rect
return|;
block|}
end_function
begin_decl_stmt
DECL|variable|sliderHandleImage
specifier|static
specifier|const
name|char
modifier|*
specifier|const
name|sliderHandleImage
index|[]
init|=
block|{
literal|"15 16 7 1"
block|,
literal|"   c None"
block|,
literal|"+  c #FFFFFF"
block|,
literal|"@  c #FFFFFF"
block|,
literal|"$  c #FFFFFF"
block|,
literal|"(  c #E5EDF5"
block|,
literal|")  c #F2F6FA"
block|,
literal|"[  c #FFFFFF"
block|,
literal|" +++++++++++++ "
block|,
literal|"+@@@@@@@@@@@@@+"
block|,
literal|"+@(((((((((((@+"
block|,
literal|"+@(((((((((((@+"
block|,
literal|"+@)))))))))))@+"
block|,
literal|"+@[[[[[[[[[[[@+"
block|,
literal|"+@[[[[[[[[[[[@+"
block|,
literal|"+@)))))))))))@+"
block|,
literal|"+@)))))))))))@+"
block|,
literal|" +@)))))))))@+ "
block|,
literal|"  +@(((((((@+  "
block|,
literal|"   +@(((((@+   "
block|,
literal|"    +@(((@+    "
block|,
literal|"     +@(@+     "
block|,
literal|"      +@+      "
block|,
literal|"       +       "
block|}
decl_stmt|;
end_decl_stmt
begin_function
DECL|function|drawComplexControl
name|void
name|JavaStyle
operator|::
name|drawComplexControl
parameter_list|(
name|ComplexControl
name|control
parameter_list|,
specifier|const
name|QStyleOptionComplex
modifier|*
name|option
parameter_list|,
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
switch|switch
condition|(
name|control
condition|)
block|{
case|case
name|CC_TitleBar
case|:
block|{
specifier|const
name|QStyleOptionTitleBar
modifier|*
name|bar
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionTitleBar
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
decl_stmt|;
name|bool
name|sunken
init|=
name|bar
operator|->
name|state
operator|&
name|State_Sunken
decl_stmt|;
name|QLinearGradient
name|gradient
argument_list|(
name|bar
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|,
name|bar
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|)
decl_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0.0
argument_list|,
name|QColor
argument_list|(
literal|191
argument_list|,
literal|212
argument_list|,
literal|231
argument_list|)
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0.7
argument_list|,
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|1.0
argument_list|,
name|QColor
argument_list|(
literal|221
argument_list|,
literal|232
argument_list|,
literal|243
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
if|if
condition|(
name|bar
operator|->
name|titleBarState
operator|&
name|State_Active
condition|)
block|{
name|painter
operator|->
name|setBrush
argument_list|(
name|gradient
argument_list|)
expr_stmt|;
block|}
else|else
name|painter
operator|->
name|setBrush
argument_list|(
name|bar
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Active
argument_list|,
name|QPalette
operator|::
name|Background
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|bar
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|QColor
argument_list|(
literal|233
argument_list|,
literal|233
argument_list|,
literal|233
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|QRect
argument_list|(
name|bar
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|bar
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QRect
name|minButtonRect
init|=
name|subControlRect
argument_list|(
name|control
argument_list|,
name|bar
argument_list|,
name|SC_TitleBarMinButton
argument_list|)
decl_stmt|;
name|QRect
name|maxButtonRect
init|=
name|subControlRect
argument_list|(
name|control
argument_list|,
name|bar
argument_list|,
name|SC_TitleBarMaxButton
argument_list|)
decl_stmt|;
name|QRect
name|closeButtonRect
init|=
name|subControlRect
argument_list|(
name|control
argument_list|,
name|bar
argument_list|,
name|SC_TitleBarCloseButton
argument_list|)
decl_stmt|;
name|QRect
name|systemButtonRect
init|=
name|subControlRect
argument_list|(
name|control
argument_list|,
name|bar
argument_list|,
name|SC_TitleBarSysMenu
argument_list|)
decl_stmt|;
name|QRect
name|labelRect
init|=
name|subControlRect
argument_list|(
name|control
argument_list|,
name|bar
argument_list|,
name|SC_TitleBarLabel
argument_list|)
decl_stmt|;
name|QRect
name|gripRect
init|=
name|QRect
argument_list|(
name|QPoint
argument_list|(
name|labelRect
operator|.
name|right
argument_list|()
operator|+
literal|5
argument_list|,
name|bar
operator|->
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|5
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|minButtonRect
operator|.
name|left
argument_list|()
operator|-
literal|5
argument_list|,
name|bar
operator|->
name|rect
operator|.
name|bottom
argument_list|()
operator|-
literal|4
argument_list|)
argument_list|)
decl_stmt|;
name|QColor
name|textColor
init|=
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Text
argument_list|)
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|textColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|Qt
operator|::
name|NoBrush
argument_list|)
expr_stmt|;
name|drawItemText
argument_list|(
name|painter
argument_list|,
name|labelRect
argument_list|,
name|Qt
operator|::
name|TextShowMnemonic
operator||
name|Qt
operator|::
name|AlignHCenter
operator||
name|Qt
operator|::
name|AlignCenter
argument_list|,
name|bar
operator|->
name|palette
argument_list|,
name|bar
operator|->
name|state
operator|&
name|State_Enabled
argument_list|,
name|bar
operator|->
name|text
argument_list|,
name|textColor
operator|.
name|isValid
argument_list|()
condition|?
name|QPalette
operator|::
name|NoRole
else|:
name|QPalette
operator|::
name|WindowText
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|gripRect
operator|.
name|width
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|i
operator|%
literal|2
condition|?
name|bar
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Midlight
argument_list|)
else|:
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
literal|4
condition|;
operator|++
name|j
control|)
block|{
name|painter
operator|->
name|drawPoint
argument_list|(
name|i
operator|+
name|gripRect
operator|.
name|left
argument_list|()
argument_list|,
name|gripRect
operator|.
name|top
argument_list|()
operator|-
literal|2
operator|+
name|i
operator|%
literal|4
operator|+
literal|4
operator|*
name|j
argument_list|)
expr_stmt|;
block|}
block|}
name|QPixmap
name|maximizePixmap
argument_list|(
literal|":/images/internalmaximize.png"
argument_list|)
decl_stmt|;
name|QPixmap
name|minimizePixmap
argument_list|(
literal|":/images/internalminimize.png"
argument_list|)
decl_stmt|;
name|QPixmap
name|closePixmap
argument_list|(
literal|":/images/internalclose.png"
argument_list|)
decl_stmt|;
name|QPixmap
name|internalPixmap
argument_list|(
literal|":/images/internalsystem.png"
argument_list|)
decl_stmt|;
name|QPixmap
name|internalCloseDownPixmap
argument_list|(
literal|":/images/internalclosedown.png"
argument_list|)
decl_stmt|;
name|QPixmap
name|minimizeDownPixmap
argument_list|(
literal|":/images/internalminimizedown.png"
argument_list|)
decl_stmt|;
name|QPixmap
name|maximizeDownPixmap
argument_list|(
literal|":/images/internalmaximizedown.png"
argument_list|)
decl_stmt|;
if|if
condition|(
name|bar
operator|->
name|activeSubControls
operator|&
name|SC_TitleBarCloseButton
operator|&&
name|bar
operator|->
name|state
operator|&
name|State_Sunken
condition|)
name|painter
operator|->
name|drawPixmap
argument_list|(
name|closeButtonRect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|internalCloseDownPixmap
argument_list|)
expr_stmt|;
else|else
name|painter
operator|->
name|drawPixmap
argument_list|(
name|closeButtonRect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|closePixmap
argument_list|)
expr_stmt|;
if|if
condition|(
name|bar
operator|->
name|activeSubControls
operator|&
name|SC_TitleBarMinButton
operator|&&
name|bar
operator|->
name|state
operator|&
name|State_Sunken
condition|)
name|painter
operator|->
name|drawPixmap
argument_list|(
name|minButtonRect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|minimizeDownPixmap
argument_list|)
expr_stmt|;
else|else
name|painter
operator|->
name|drawPixmap
argument_list|(
name|minButtonRect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|minimizePixmap
argument_list|)
expr_stmt|;
if|if
condition|(
name|bar
operator|->
name|activeSubControls
operator|&
name|SC_TitleBarMaxButton
operator|&&
name|bar
operator|->
name|state
operator|&
name|State_Sunken
condition|)
name|painter
operator|->
name|drawPixmap
argument_list|(
name|maxButtonRect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|maximizeDownPixmap
argument_list|)
expr_stmt|;
else|else
name|painter
operator|->
name|drawPixmap
argument_list|(
name|maxButtonRect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|maximizePixmap
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPixmap
argument_list|(
name|systemButtonRect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|internalPixmap
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|CC_GroupBox
case|:
block|{
specifier|const
name|QStyleOptionGroupBox
modifier|*
name|box
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionGroupBox
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
decl_stmt|;
name|QRect
name|frameRect
init|=
name|subControlRect
argument_list|(
name|control
argument_list|,
name|box
argument_list|,
name|SC_GroupBoxFrame
argument_list|)
decl_stmt|;
name|QRect
name|labelRect
init|=
name|subControlRect
argument_list|(
name|control
argument_list|,
name|box
argument_list|,
name|SC_GroupBoxLabel
argument_list|)
decl_stmt|;
name|QRect
name|contentsRect
init|=
name|subControlRect
argument_list|(
name|control
argument_list|,
name|box
argument_list|,
name|SC_GroupBoxContents
argument_list|)
decl_stmt|;
name|QRect
name|checkerRect
init|=
name|subControlRect
argument_list|(
name|control
argument_list|,
name|box
argument_list|,
name|SC_GroupBoxCheckBox
argument_list|)
decl_stmt|;
name|int
name|y
init|=
name|labelRect
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|box
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Button
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|frameRect
operator|.
name|adjusted
argument_list|(
literal|2
argument_list|,
name|y
operator|-
name|frameRect
operator|.
name|top
argument_list|()
argument_list|,
operator|-
literal|2
argument_list|,
operator|-
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|box
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Background
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|box
operator|->
name|subControls
operator|&
name|SC_GroupBoxCheckBox
condition|)
block|{
name|painter
operator|->
name|drawLine
argument_list|(
name|checkerRect
operator|.
name|left
argument_list|()
operator|-
literal|1
argument_list|,
name|y
argument_list|,
name|checkerRect
operator|.
name|right
argument_list|()
operator|+
literal|2
argument_list|,
name|y
argument_list|)
expr_stmt|;
name|QStyleOptionButton
name|checker
decl_stmt|;
name|checker
operator|.
name|QStyleOption
operator|::
name|operator
name|=
argument_list|(
operator|*
name|box
argument_list|)
expr_stmt|;
name|checker
operator|.
name|rect
operator|=
name|checkerRect
expr_stmt|;
name|drawPrimitive
argument_list|(
name|PE_IndicatorCheckBox
argument_list|,
operator|&
name|checker
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|box
operator|->
name|subControls
operator|&
name|SC_GroupBoxLabel
operator|&&
operator|!
name|box
operator|->
name|text
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|painter
operator|->
name|drawLine
argument_list|(
name|labelRect
operator|.
name|left
argument_list|()
operator|-
literal|1
argument_list|,
name|y
argument_list|,
name|labelRect
operator|.
name|right
argument_list|()
operator|+
literal|1
argument_list|,
name|y
argument_list|)
expr_stmt|;
name|QColor
name|textColor
init|=
name|box
operator|->
name|textColor
decl_stmt|;
if|if
condition|(
name|textColor
operator|.
name|isValid
argument_list|()
condition|)
name|painter
operator|->
name|setPen
argument_list|(
name|textColor
argument_list|)
expr_stmt|;
name|drawItemText
argument_list|(
name|painter
argument_list|,
name|labelRect
argument_list|,
name|Qt
operator|::
name|TextShowMnemonic
operator||
name|Qt
operator|::
name|AlignHCenter
operator||
name|int
argument_list|(
name|box
operator|->
name|textAlignment
argument_list|)
argument_list|,
name|box
operator|->
name|palette
argument_list|,
name|box
operator|->
name|state
operator|&
name|State_Enabled
argument_list|,
name|box
operator|->
name|text
argument_list|,
name|textColor
operator|.
name|isValid
argument_list|()
condition|?
name|QPalette
operator|::
name|NoRole
else|:
name|QPalette
operator|::
name|WindowText
argument_list|)
expr_stmt|;
block|}
break|break;
block|}
case|case
name|CC_SpinBox
case|:
block|{
specifier|const
name|QStyleOptionSpinBox
modifier|*
name|spinner
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSpinBox
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
decl_stmt|;
name|QRect
name|frameRect
init|=
name|subControlRect
argument_list|(
name|control
argument_list|,
name|spinner
argument_list|,
name|SC_SpinBoxFrame
argument_list|)
decl_stmt|;
name|QRect
name|upRect
init|=
name|subControlRect
argument_list|(
name|control
argument_list|,
name|spinner
argument_list|,
name|SC_SpinBoxUp
argument_list|)
decl_stmt|;
name|QRect
name|downRect
init|=
name|subControlRect
argument_list|(
name|control
argument_list|,
name|spinner
argument_list|,
name|SC_SpinBoxDown
argument_list|)
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|frameRect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPoint
argument_list|(
name|frameRect
operator|.
name|bottomLeft
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|spinner
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Mid
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|frameRect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|bool
name|isEnabled
init|=
operator|(
name|spinner
operator|->
name|state
operator|&
name|State_Enabled
operator|)
decl_stmt|;
name|bool
name|hover
init|=
name|isEnabled
operator|&&
operator|(
name|spinner
operator|->
name|state
operator|&
name|State_MouseOver
operator|)
decl_stmt|;
name|bool
name|sunken
init|=
operator|(
name|spinner
operator|->
name|state
operator|&
name|State_Sunken
operator|)
decl_stmt|;
name|bool
name|upIsActive
init|=
operator|(
name|spinner
operator|->
name|activeSubControls
operator|==
name|SC_SpinBoxUp
operator|)
decl_stmt|;
name|bool
name|downIsActive
init|=
operator|(
name|spinner
operator|->
name|activeSubControls
operator|==
name|SC_SpinBoxDown
operator|)
decl_stmt|;
name|bool
name|stepUpEnabled
init|=
name|spinner
operator|->
name|stepEnabled
operator|&
name|QAbstractSpinBox
operator|::
name|StepUpEnabled
decl_stmt|;
name|bool
name|stepDownEnabled
init|=
name|spinner
operator|->
name|stepEnabled
operator|&
name|QAbstractSpinBox
operator|::
name|StepDownEnabled
decl_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|spinner
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Background
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|upRect
argument_list|)
expr_stmt|;
if|if
condition|(
name|upIsActive
operator|&&
name|stepUpEnabled
condition|)
block|{
if|if
condition|(
name|sunken
condition|)
block|{
name|drawSunkenButtonShadow
argument_list|(
name|painter
argument_list|,
name|upRect
argument_list|,
name|spinner
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Mid
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|hover
condition|)
block|{
name|drawButtonHoverFrame
argument_list|(
name|painter
argument_list|,
name|upRect
argument_list|,
name|spinner
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Mid
argument_list|)
argument_list|,
name|spinner
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Button
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|QStyleOptionSpinBox
name|upSpin
init|=
operator|*
name|spinner
decl_stmt|;
name|upSpin
operator|.
name|rect
operator|=
name|upRect
expr_stmt|;
name|drawPrimitive
argument_list|(
name|PE_IndicatorSpinUp
argument_list|,
operator|&
name|upSpin
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|downRect
argument_list|)
expr_stmt|;
if|if
condition|(
name|downIsActive
operator|&&
name|stepDownEnabled
condition|)
block|{
if|if
condition|(
name|sunken
condition|)
block|{
name|drawSunkenButtonShadow
argument_list|(
name|painter
argument_list|,
name|downRect
argument_list|,
name|spinner
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Mid
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|hover
condition|)
block|{
name|drawButtonHoverFrame
argument_list|(
name|painter
argument_list|,
name|downRect
argument_list|,
name|spinner
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Mid
argument_list|)
argument_list|,
name|spinner
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Button
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|QStyleOptionSpinBox
name|downSpin
init|=
operator|*
name|spinner
decl_stmt|;
name|downSpin
operator|.
name|rect
operator|=
name|downRect
expr_stmt|;
name|drawPrimitive
argument_list|(
name|PE_IndicatorSpinDown
argument_list|,
operator|&
name|downSpin
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|CC_ToolButton
case|:
block|{
specifier|const
name|QStyleOptionToolButton
modifier|*
name|button
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionToolButton
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|button
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QStyleOptionToolButton
name|panelOption
init|=
operator|*
name|button
decl_stmt|;
name|QRect
name|panelRect
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|button
operator|->
name|state
operator|&
name|State_MouseOver
operator|)
operator|&&
operator|!
operator|(
name|button
operator|->
name|state
operator|&
name|State_On
operator|)
condition|)
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|QColor
argument_list|(
literal|153
argument_list|,
literal|153
argument_list|,
literal|153
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|button
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|2
argument_list|,
operator|-
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|panelRect
operator|=
name|subControlRect
argument_list|(
name|control
argument_list|,
name|option
argument_list|,
name|SC_ToolButton
argument_list|)
expr_stmt|;
name|panelOption
operator|.
name|rect
operator|=
name|panelRect
expr_stmt|;
block|}
else|else
block|{
name|panelOption
operator|.
name|rect
operator|.
name|adjust
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
name|QRect
name|menuRect
init|=
name|subControlRect
argument_list|(
name|control
argument_list|,
name|option
argument_list|,
name|SC_ToolButtonMenu
argument_list|)
decl_stmt|;
name|drawPrimitive
argument_list|(
name|PE_PanelButtonTool
argument_list|,
operator|&
name|panelOption
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|QStyleOptionToolButton
name|menuOption
init|=
operator|*
name|button
decl_stmt|;
name|menuOption
operator|.
name|rect
operator|=
name|menuRect
expr_stmt|;
name|QStyleOptionToolButton
name|label
init|=
operator|*
name|button
decl_stmt|;
name|int
name|fw
init|=
literal|5
decl_stmt|;
name|drawControl
argument_list|(
name|CE_ToolButtonLabel
argument_list|,
operator|&
name|label
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
if|if
condition|(
name|button
operator|->
name|subControls
operator|&
name|SC_ToolButtonMenu
condition|)
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|button
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|WindowText
argument_list|)
argument_list|)
expr_stmt|;
name|drawPrimitive
argument_list|(
name|PE_IndicatorArrowDown
argument_list|,
operator|&
name|menuOption
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|button
operator|->
name|state
operator|&
name|State_HasFocus
condition|)
block|{
name|QStyleOptionToolButton
name|focusOption
init|=
operator|*
name|button
decl_stmt|;
name|focusOption
operator|.
name|rect
operator|=
name|label
operator|.
name|rect
operator|.
name|adjusted
argument_list|(
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|drawPrimitive
argument_list|(
name|PE_FrameFocusRect
argument_list|,
operator|&
name|focusOption
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
break|break;
block|}
case|case
name|CC_ComboBox
case|:
block|{
specifier|const
name|QStyleOptionComboBox
modifier|*
name|combo
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionComboBox
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
decl_stmt|;
name|QRect
name|frameRect
init|=
name|subControlRect
argument_list|(
name|control
argument_list|,
name|option
argument_list|,
name|SC_ComboBoxFrame
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|combo
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Mid
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|State_HasFocus
condition|)
name|painter
operator|->
name|setBrush
argument_list|(
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Light
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|painter
operator|->
name|setBrush
argument_list|(
name|combo
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Background
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|frameRect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QRect
name|arrowRect
init|=
name|subControlRect
argument_list|(
name|control
argument_list|,
name|option
argument_list|,
name|SC_ComboBoxArrow
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|combo
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Button
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|Qt
operator|::
name|NoBrush
argument_list|)
expr_stmt|;
if|if
condition|(
name|combo
operator|->
name|direction
operator|==
name|Qt
operator|::
name|LeftToRight
condition|)
block|{
name|painter
operator|->
name|drawRect
argument_list|(
name|QRect
argument_list|(
name|frameRect
operator|.
name|topLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|arrowRect
operator|.
name|bottomLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
operator|-
literal|2
argument_list|,
operator|-
literal|2
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|painter
operator|->
name|drawRect
argument_list|(
name|QRect
argument_list|(
name|arrowRect
operator|.
name|topLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|frameRect
operator|.
name|bottomRight
argument_list|()
operator|+
name|QPoint
argument_list|(
operator|-
literal|2
argument_list|,
operator|-
literal|2
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QStyleOptionButton
name|button
decl_stmt|;
name|button
operator|.
name|rect
operator|=
name|arrowRect
expr_stmt|;
name|button
operator|.
name|state
operator|=
name|combo
operator|->
name|state
expr_stmt|;
name|button
operator|.
name|palette
operator|=
name|combo
operator|->
name|palette
expr_stmt|;
if|if
condition|(
name|button
operator|.
name|state
operator|&
name|State_On
condition|)
name|button
operator|.
name|state
operator|^=
name|State_On
expr_stmt|;
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
name|drawButtonBackground
argument_list|(
operator|&
name|button
argument_list|,
name|painter
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
name|QPoint
name|center
init|=
name|arrowRect
operator|.
name|center
argument_list|()
decl_stmt|;
name|QPoint
name|offset
init|=
name|QPoint
argument_list|(
name|arrowRect
operator|.
name|bottomLeft
argument_list|()
operator|.
name|x
argument_list|()
operator|+
literal|1
argument_list|,
name|center
operator|.
name|y
argument_list|()
operator|+
literal|7
argument_list|)
decl_stmt|;
name|QPainterPath
name|arrow
decl_stmt|;
name|arrow
operator|.
name|moveTo
argument_list|(
name|offset
operator|+
name|QPoint
argument_list|(
literal|4
argument_list|,
operator|-
literal|8
argument_list|)
argument_list|)
expr_stmt|;
name|arrow
operator|.
name|lineTo
argument_list|(
name|offset
operator|+
name|QPoint
argument_list|(
literal|7
argument_list|,
operator|-
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|arrow
operator|.
name|lineTo
argument_list|(
name|offset
operator|+
name|QPoint
argument_list|(
literal|8
argument_list|,
operator|-
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|arrow
operator|.
name|lineTo
argument_list|(
name|offset
operator|+
name|QPoint
argument_list|(
literal|11
argument_list|,
operator|-
literal|8
argument_list|)
argument_list|)
expr_stmt|;
name|arrow
operator|.
name|lineTo
argument_list|(
name|offset
operator|+
name|QPoint
argument_list|(
literal|4
argument_list|,
operator|-
literal|8
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|combo
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|WindowText
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|combo
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|WindowText
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPath
argument_list|(
name|arrow
argument_list|)
expr_stmt|;
name|QRect
name|fieldRect
init|=
name|subControlRect
argument_list|(
name|control
argument_list|,
name|option
argument_list|,
name|SC_ComboBoxEditField
argument_list|,
name|widget
argument_list|)
decl_stmt|;
break|break;
block|}
case|case
name|CC_Slider
case|:
block|{
specifier|const
name|QStyleOptionSlider
modifier|*
name|slider
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSlider
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
decl_stmt|;
name|bool
name|horizontal
init|=
name|slider
operator|->
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
decl_stmt|;
name|QRect
name|groove
init|=
name|subControlRect
argument_list|(
name|control
argument_list|,
name|option
argument_list|,
name|SC_SliderGroove
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|QRect
name|ticks
init|=
name|subControlRect
argument_list|(
name|control
argument_list|,
name|option
argument_list|,
name|SC_SliderTickmarks
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|QRect
name|handle
init|=
name|subControlRect
argument_list|(
name|control
argument_list|,
name|option
argument_list|,
name|SC_SliderHandle
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|QRect
name|afterHandle
init|=
name|QRect
argument_list|(
name|handle
operator|.
name|topLeft
argument_list|()
operator|+
name|xySwitch
argument_list|(
name|QPoint
argument_list|(
literal|4
argument_list|,
literal|6
argument_list|)
argument_list|,
name|horizontal
argument_list|)
argument_list|,
name|groove
operator|.
name|bottomRight
argument_list|()
operator|+
name|xySwitch
argument_list|(
name|QPoint
argument_list|(
operator|-
literal|4
argument_list|,
operator|-
literal|6
argument_list|)
argument_list|,
name|horizontal
argument_list|)
argument_list|)
decl_stmt|;
name|QRect
name|beforeHandle
init|=
name|QRect
argument_list|(
name|groove
operator|.
name|topLeft
argument_list|()
operator|+
name|xySwitch
argument_list|(
name|QPoint
argument_list|(
literal|4
argument_list|,
literal|6
argument_list|)
argument_list|,
name|horizontal
argument_list|)
argument_list|,
name|handle
operator|.
name|bottomRight
argument_list|()
operator|+
name|xySwitch
argument_list|(
name|QPoint
argument_list|(
operator|-
literal|4
argument_list|,
operator|-
literal|6
argument_list|)
argument_list|,
name|horizontal
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|slider
operator|->
name|upsideDown
operator|||
operator|!
name|horizontal
condition|)
block|{
name|QRect
name|remember
decl_stmt|;
name|remember
operator|=
name|afterHandle
expr_stmt|;
name|afterHandle
operator|=
name|beforeHandle
expr_stmt|;
name|beforeHandle
operator|=
name|remember
expr_stmt|;
block|}
name|painter
operator|->
name|setPen
argument_list|(
name|slider
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Mid
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Background
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|afterHandle
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|slider
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Light
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|afterHandle
operator|.
name|topLeft
argument_list|()
operator|+
name|xySwitch
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|horizontal
argument_list|)
argument_list|,
name|afterHandle
operator|.
name|topRight
argument_list|()
operator|+
name|xySwitch
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|horizontal
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Midlight
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|horizontal
condition|)
block|{
name|painter
operator|->
name|setBrush
argument_list|(
name|gradientBrush
argument_list|(
name|QRect
argument_list|(
name|QPoint
argument_list|(
name|groove
operator|.
name|x
argument_list|()
argument_list|,
name|handle
operator|.
name|y
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|,
name|QSize
argument_list|(
name|groove
operator|.
name|width
argument_list|()
argument_list|,
name|handle
operator|.
name|height
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QRect
name|rect
init|=
name|QRect
argument_list|(
name|QPoint
argument_list|(
name|groove
operator|.
name|x
argument_list|()
argument_list|,
name|handle
operator|.
name|x
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|,
name|QSize
argument_list|(
name|groove
operator|.
name|height
argument_list|()
argument_list|,
name|handle
operator|.
name|width
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|QLinearGradient
name|gradient
argument_list|(
name|groove
operator|.
name|bottomLeft
argument_list|()
argument_list|,
name|groove
operator|.
name|bottomRight
argument_list|()
argument_list|)
decl_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|1.0
argument_list|,
name|QColor
argument_list|(
literal|188
argument_list|,
literal|210
argument_list|,
literal|230
argument_list|)
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0.3
argument_list|,
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0.0
argument_list|,
name|QColor
argument_list|(
literal|223
argument_list|,
literal|233
argument_list|,
literal|243
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|gradient
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|drawRect
argument_list|(
name|beforeHandle
argument_list|)
expr_stmt|;
name|QPainterPath
name|handlePath
decl_stmt|;
name|QPainterPath
name|innerPath
decl_stmt|;
name|QPoint
name|topLeft
decl_stmt|,
name|topRight
decl_stmt|,
name|bottomLeft
decl_stmt|;
if|if
condition|(
name|horizontal
condition|)
block|{
name|topLeft
operator|=
name|handle
operator|.
name|topLeft
argument_list|()
expr_stmt|;
name|topRight
operator|=
name|handle
operator|.
name|topRight
argument_list|()
expr_stmt|;
name|bottomLeft
operator|=
name|handle
operator|.
name|bottomLeft
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|topLeft
operator|=
name|handle
operator|.
name|bottomLeft
argument_list|()
expr_stmt|;
name|topRight
operator|=
name|handle
operator|.
name|topLeft
argument_list|()
expr_stmt|;
name|bottomLeft
operator|=
name|handle
operator|.
name|topRight
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|horizontal
condition|)
block|{
name|QImage
name|image
argument_list|(
name|sliderHandleImage
argument_list|)
decl_stmt|;
name|image
operator|.
name|setColor
argument_list|(
literal|1
argument_list|,
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Midlight
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
name|image
operator|.
name|setColor
argument_list|(
literal|2
argument_list|,
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Button
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
operator|(
name|slider
operator|->
name|state
operator|&
name|State_Enabled
operator|)
condition|)
block|{
name|image
operator|.
name|setColor
argument_list|(
literal|4
argument_list|,
name|slider
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Background
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
name|image
operator|.
name|setColor
argument_list|(
literal|5
argument_list|,
name|slider
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Background
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
name|image
operator|.
name|setColor
argument_list|(
literal|6
argument_list|,
name|slider
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Background
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|drawImage
argument_list|(
name|handle
operator|.
name|topLeft
argument_list|()
argument_list|,
name|image
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QImage
name|image
argument_list|(
literal|":/images/verticalsliderhandle.png"
argument_list|)
decl_stmt|;
name|painter
operator|->
name|drawImage
argument_list|(
name|handle
operator|.
name|topLeft
argument_list|()
argument_list|,
name|image
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|slider
operator|->
name|tickPosition
operator|&
name|QSlider
operator|::
name|TicksBelow
condition|)
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|slider
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Light
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|tickInterval
init|=
name|slider
operator|->
name|tickInterval
condition|?
name|slider
operator|->
name|tickInterval
else|:
name|slider
operator|->
name|pageStep
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<=
name|slider
operator|->
name|maximum
condition|;
name|i
operator|+=
name|tickInterval
control|)
block|{
if|if
condition|(
name|horizontal
condition|)
block|{
name|int
name|pos
init|=
name|int
argument_list|(
operator|(
operator|(
name|i
operator|/
name|double
argument_list|(
name|slider
operator|->
name|maximum
argument_list|)
operator|)
operator|*
name|ticks
operator|.
name|width
argument_list|()
operator|)
operator|-
literal|1
argument_list|)
decl_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|ticks
operator|.
name|left
argument_list|()
operator|+
name|pos
argument_list|,
name|ticks
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|ticks
operator|.
name|left
argument_list|()
operator|+
name|pos
argument_list|,
name|ticks
operator|.
name|top
argument_list|()
operator|+
literal|8
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|int
name|pos
init|=
name|int
argument_list|(
operator|(
operator|(
name|i
operator|/
name|double
argument_list|(
name|slider
operator|->
name|maximum
argument_list|)
operator|)
operator|*
name|ticks
operator|.
name|height
argument_list|()
operator|)
operator|-
literal|1
argument_list|)
decl_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|ticks
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|ticks
operator|.
name|bottom
argument_list|()
operator|-
name|pos
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|ticks
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|ticks
operator|.
name|bottom
argument_list|()
operator|-
name|pos
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|horizontal
condition|)
block|{
name|painter
operator|->
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|ticks
operator|.
name|right
argument_list|()
argument_list|,
name|ticks
operator|.
name|top
argument_list|()
operator|+
literal|2
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|ticks
operator|.
name|right
argument_list|()
argument_list|,
name|ticks
operator|.
name|top
argument_list|()
operator|+
literal|8
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|painter
operator|->
name|drawLine
argument_list|(
name|QPoint
argument_list|(
name|ticks
operator|.
name|left
argument_list|()
operator|+
literal|2
argument_list|,
name|ticks
operator|.
name|top
argument_list|()
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|ticks
operator|.
name|right
argument_list|()
operator|-
literal|2
argument_list|,
name|ticks
operator|.
name|top
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
break|break;
block|}
default|default:
name|QWindowsStyle
operator|::
name|drawComplexControl
argument_list|(
name|control
argument_list|,
name|option
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|drawSunkenButtonShadow
specifier|inline
name|void
name|JavaStyle
operator|::
name|drawSunkenButtonShadow
parameter_list|(
name|QPainter
modifier|*
name|painter
parameter_list|,
name|QRect
name|rect
parameter_list|,
specifier|const
name|QColor
modifier|&
name|frameColor
parameter_list|,
name|bool
name|reverse
parameter_list|)
specifier|const
block|{
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|frameColor
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|reverse
condition|)
block|{
name|painter
operator|->
name|drawLine
argument_list|(
name|QLine
argument_list|(
name|QPoint
argument_list|(
name|rect
operator|.
name|x
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|y
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|rect
operator|.
name|x
argument_list|()
operator|+
name|rect
operator|.
name|width
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|y
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|QLine
argument_list|(
name|QPoint
argument_list|(
name|rect
operator|.
name|x
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|y
argument_list|()
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|rect
operator|.
name|x
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|y
argument_list|()
operator|+
name|rect
operator|.
name|height
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|painter
operator|->
name|drawLine
argument_list|(
name|QLine
argument_list|(
name|QPoint
argument_list|(
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|QLine
argument_list|(
name|QPoint
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|,
name|QPoint
argument_list|(
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|drawButtonHoverFrame
specifier|inline
name|void
name|JavaStyle
operator|::
name|drawButtonHoverFrame
parameter_list|(
name|QPainter
modifier|*
name|painter
parameter_list|,
name|QRect
name|rect
parameter_list|,
specifier|const
name|QColor
modifier|&
name|frameColor
parameter_list|,
specifier|const
name|QColor
modifier|&
name|activeFrame
parameter_list|)
specifier|const
block|{
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|activeFrame
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|rect
argument_list|)
expr_stmt|;
name|rect
operator|.
name|adjust
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|frameColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|rect
argument_list|)
expr_stmt|;
name|rect
operator|.
name|adjust
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|activeFrame
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|rect
argument_list|)
expr_stmt|;
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|hitTestComplexControl
name|QStyle
operator|::
name|SubControl
name|JavaStyle
operator|::
name|hitTestComplexControl
parameter_list|(
name|ComplexControl
name|control
parameter_list|,
specifier|const
name|QStyleOptionComplex
modifier|*
name|option
parameter_list|,
specifier|const
name|QPoint
modifier|&
name|pos
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
name|SubControl
name|ret
init|=
name|SC_None
decl_stmt|;
switch|switch
condition|(
name|control
condition|)
block|{
case|case
name|CC_TitleBar
case|:
block|{
specifier|const
name|QStyleOptionTitleBar
modifier|*
name|bar
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionTitleBar
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
decl_stmt|;
name|QRect
name|maximize
init|=
name|subControlRect
argument_list|(
name|control
argument_list|,
name|bar
argument_list|,
name|SC_TitleBarMaxButton
argument_list|)
decl_stmt|;
if|if
condition|(
name|maximize
operator|.
name|contains
argument_list|(
name|pos
argument_list|)
condition|)
block|{
name|ret
operator|=
name|SC_TitleBarMaxButton
expr_stmt|;
break|break;
block|}
name|QRect
name|minimize
init|=
name|subControlRect
argument_list|(
name|control
argument_list|,
name|bar
argument_list|,
name|SC_TitleBarMinButton
argument_list|)
decl_stmt|;
if|if
condition|(
name|minimize
operator|.
name|contains
argument_list|(
name|pos
argument_list|)
condition|)
block|{
name|ret
operator|=
name|SC_TitleBarMinButton
expr_stmt|;
break|break;
block|}
name|QRect
name|close
init|=
name|subControlRect
argument_list|(
name|control
argument_list|,
name|bar
argument_list|,
name|SC_TitleBarCloseButton
argument_list|)
decl_stmt|;
if|if
condition|(
name|close
operator|.
name|contains
argument_list|(
name|pos
argument_list|)
condition|)
block|{
name|ret
operator|=
name|SC_TitleBarCloseButton
expr_stmt|;
break|break;
block|}
name|QRect
name|system
init|=
name|subControlRect
argument_list|(
name|control
argument_list|,
name|bar
argument_list|,
name|SC_TitleBarSysMenu
argument_list|)
decl_stmt|;
if|if
condition|(
name|system
operator|.
name|contains
argument_list|(
name|pos
argument_list|)
condition|)
block|{
name|ret
operator|=
name|SC_TitleBarSysMenu
expr_stmt|;
break|break;
block|}
name|ret
operator|=
name|SC_TitleBarLabel
expr_stmt|;
break|break;
block|}
case|case
name|CC_ScrollBar
case|:
if|if
condition|(
specifier|const
name|QStyleOptionSlider
modifier|*
name|scrollBar
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSlider
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
block|{
name|QRect
name|slider
init|=
name|subControlRect
argument_list|(
name|control
argument_list|,
name|scrollBar
argument_list|,
name|SC_ScrollBarSlider
argument_list|,
name|widget
argument_list|)
decl_stmt|;
if|if
condition|(
name|slider
operator|.
name|contains
argument_list|(
name|pos
argument_list|)
condition|)
block|{
name|ret
operator|=
name|SC_ScrollBarSlider
expr_stmt|;
break|break;
block|}
name|QRect
name|scrollBarAddLine
init|=
name|subControlRect
argument_list|(
name|control
argument_list|,
name|scrollBar
argument_list|,
name|SC_ScrollBarAddLine
argument_list|,
name|widget
argument_list|)
decl_stmt|;
if|if
condition|(
name|scrollBarAddLine
operator|.
name|contains
argument_list|(
name|pos
argument_list|)
condition|)
block|{
name|ret
operator|=
name|SC_ScrollBarAddLine
expr_stmt|;
break|break;
block|}
name|QRect
name|scrollBarSubPage
init|=
name|subControlRect
argument_list|(
name|control
argument_list|,
name|scrollBar
argument_list|,
name|SC_ScrollBarSubPage
argument_list|,
name|widget
argument_list|)
decl_stmt|;
if|if
condition|(
name|scrollBarSubPage
operator|.
name|contains
argument_list|(
name|pos
argument_list|)
condition|)
block|{
name|ret
operator|=
name|SC_ScrollBarSubPage
expr_stmt|;
break|break;
block|}
name|QRect
name|scrollBarAddPage
init|=
name|subControlRect
argument_list|(
name|control
argument_list|,
name|scrollBar
argument_list|,
name|SC_ScrollBarAddPage
argument_list|,
name|widget
argument_list|)
decl_stmt|;
if|if
condition|(
name|scrollBarAddPage
operator|.
name|contains
argument_list|(
name|pos
argument_list|)
condition|)
block|{
name|ret
operator|=
name|SC_ScrollBarAddPage
expr_stmt|;
break|break;
block|}
name|QRect
name|scrollBarSubLine
init|=
name|subControlRect
argument_list|(
name|control
argument_list|,
name|scrollBar
argument_list|,
name|SC_ScrollBarSubLine
argument_list|,
name|widget
argument_list|)
decl_stmt|;
if|if
condition|(
name|scrollBarSubLine
operator|.
name|contains
argument_list|(
name|pos
argument_list|)
condition|)
block|{
name|ret
operator|=
name|SC_ScrollBarSubLine
expr_stmt|;
break|break;
block|}
block|}
break|break;
default|default:
name|ret
operator|=
name|QWindowsStyle
operator|::
name|hitTestComplexControl
argument_list|(
name|control
argument_list|,
name|option
argument_list|,
name|pos
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
return|return
name|ret
return|;
block|}
end_function
begin_function
DECL|function|polish
name|void
name|JavaStyle
operator|::
name|polish
parameter_list|(
name|QWidget
modifier|*
name|widget
parameter_list|)
block|{
if|if
condition|(
name|qobject_cast
argument_list|<
name|QCheckBox
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
operator|||
name|qobject_cast
argument_list|<
name|QRadioButton
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
operator|||
name|qobject_cast
argument_list|<
name|QPushButton
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
operator|||
name|qobject_cast
argument_list|<
name|QToolButton
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
operator|||
name|qobject_cast
argument_list|<
name|QSpinBox
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
operator|||
name|qobject_cast
argument_list|<
name|QGroupBox
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
condition|)
name|widget
operator|->
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_Hover
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|unpolish
name|void
name|JavaStyle
operator|::
name|unpolish
parameter_list|(
name|QWidget
modifier|*
name|widget
parameter_list|)
block|{
if|if
condition|(
name|qobject_cast
argument_list|<
name|QPushButton
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
operator|||
name|qobject_cast
argument_list|<
name|QCheckBox
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
operator|||
name|qobject_cast
argument_list|<
name|QRadioButton
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
operator|||
name|qobject_cast
argument_list|<
name|QToolButton
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
operator|||
name|qobject_cast
argument_list|<
name|QSpinBox
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
operator|||
name|qobject_cast
argument_list|<
name|QGroupBox
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
condition|)
name|widget
operator|->
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_Hover
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|drawSplitter
name|void
name|JavaStyle
operator|::
name|drawSplitter
parameter_list|(
specifier|const
name|QStyleOption
modifier|*
name|option
parameter_list|,
name|QPainter
modifier|*
name|painter
parameter_list|,
name|bool
name|horizontal
parameter_list|)
specifier|const
block|{
name|QRect
name|rect
init|=
name|option
operator|->
name|rect
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Background
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|rect
argument_list|)
expr_stmt|;
name|QColor
name|colors
index|[]
init|=
block|{
name|Qt
operator|::
name|white
block|,
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
argument|QPalette::Mid
argument_list|)
block|}
decl_stmt|;
name|int
name|iterations
init|=
name|horizontal
condition|?
name|rect
operator|.
name|height
argument_list|()
operator|-
literal|1
else|:
name|rect
operator|.
name|width
argument_list|()
operator|-
literal|1
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iterations
condition|;
operator|++
name|i
control|)
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|colors
index|[
name|i
operator|%
literal|2
index|]
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPoint
argument_list|(
name|xySwitch
argument_list|(
name|QPoint
argument_list|(
name|rect
operator|.
name|x
argument_list|()
operator|+
literal|0
operator|+
operator|(
name|i
operator|%
literal|4
operator|)
argument_list|,
name|rect
operator|.
name|y
argument_list|()
operator|+
name|i
argument_list|)
argument_list|,
name|horizontal
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|xySwitch
specifier|inline
name|QPoint
name|JavaStyle
operator|::
name|xySwitch
parameter_list|(
specifier|const
name|QPoint
modifier|&
name|point
parameter_list|,
name|bool
name|horizontal
parameter_list|)
specifier|const
block|{
name|QPoint
name|retPoint
init|=
name|point
decl_stmt|;
if|if
condition|(
operator|!
name|horizontal
condition|)
block|{
name|retPoint
operator|=
name|QPoint
argument_list|(
name|point
operator|.
name|y
argument_list|()
argument_list|,
name|point
operator|.
name|x
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|retPoint
return|;
block|}
end_function
begin_function
DECL|function|drawPrimitive
name|void
name|JavaStyle
operator|::
name|drawPrimitive
parameter_list|(
name|PrimitiveElement
name|element
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|option
parameter_list|,
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
switch|switch
condition|(
name|element
condition|)
block|{
case|case
name|PE_PanelButtonBevel
case|:
case|case
name|PE_FrameButtonBevel
case|:
block|{
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|option
operator|->
name|palette
operator|.
name|background
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|option
operator|->
name|rect
argument_list|)
expr_stmt|;
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
name|PE_IndicatorBranch
case|:
block|{
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
name|QColor
name|lineColor
argument_list|(
literal|204
argument_list|,
literal|204
argument_list|,
literal|255
argument_list|)
decl_stmt|;
name|QPixmap
name|openPixmap
argument_list|(
literal|":/images/jtreeopen.png"
argument_list|)
decl_stmt|;
name|QPixmap
name|closedPixmap
argument_list|(
literal|":/images/jtreeclosed.png"
argument_list|)
decl_stmt|;
name|QRect
name|pixmapRect
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|12
argument_list|,
literal|12
argument_list|)
argument_list|)
decl_stmt|;
name|pixmapRect
operator|.
name|moveCenter
argument_list|(
name|option
operator|->
name|rect
operator|.
name|center
argument_list|()
argument_list|)
expr_stmt|;
name|pixmapRect
operator|.
name|translate
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QPoint
name|center
init|=
name|option
operator|->
name|rect
operator|.
name|center
argument_list|()
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|lineColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|Qt
operator|::
name|NoBrush
argument_list|)
expr_stmt|;
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|State_Item
condition|)
block|{
name|painter
operator|->
name|drawLine
argument_list|(
name|center
argument_list|,
name|QPoint
argument_list|(
name|option
operator|->
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|center
operator|.
name|y
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|center
argument_list|,
name|QPoint
argument_list|(
name|center
operator|.
name|x
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|State_Sibling
condition|)
block|{
name|painter
operator|->
name|drawLine
argument_list|(
name|center
argument_list|,
name|QPoint
argument_list|(
name|center
operator|.
name|x
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|State_Children
condition|)
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|State_Open
condition|)
name|painter
operator|->
name|drawPixmap
argument_list|(
name|pixmapRect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|closedPixmap
argument_list|)
expr_stmt|;
else|else
name|painter
operator|->
name|drawPixmap
argument_list|(
name|pixmapRect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|openPixmap
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|State_Sibling
condition|)
block|{
name|painter
operator|->
name|drawLine
argument_list|(
name|center
operator|.
name|x
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|top
argument_list|()
argument_list|,
name|center
operator|.
name|x
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
name|PE_IndicatorViewItemCheck
case|:
block|{
break|break;
block|}
case|case
name|PE_FrameWindow
case|:
block|{
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
name|bool
name|active
init|=
name|option
operator|->
name|state
operator|&
name|State_Active
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|active
condition|?
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Midlight
argument_list|)
else|:
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Mid
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|QRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|5
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|QRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|0
argument_list|,
operator|-
literal|5
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|QRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
operator|+
name|QPoint
argument_list|(
operator|-
literal|5
argument_list|,
literal|0
argument_list|)
argument_list|,
name|option
operator|->
name|rect
operator|.
name|topRight
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|QRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|option
operator|->
name|rect
operator|.
name|topRight
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|4
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|Qt
operator|::
name|NoBrush
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Active
argument_list|,
name|QPalette
operator|::
name|WindowText
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|2
argument_list|,
literal|14
argument_list|)
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|2
argument_list|,
operator|-
literal|14
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|topRight
argument_list|()
operator|+
name|QPoint
argument_list|(
operator|-
literal|2
argument_list|,
literal|14
argument_list|)
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
operator|+
name|QPoint
argument_list|(
operator|-
literal|2
argument_list|,
operator|-
literal|14
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|14
argument_list|,
literal|2
argument_list|)
argument_list|,
name|option
operator|->
name|rect
operator|.
name|topRight
argument_list|()
operator|+
name|QPoint
argument_list|(
operator|-
literal|14
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|14
argument_list|,
operator|-
literal|2
argument_list|)
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
operator|+
name|QPoint
argument_list|(
operator|-
literal|14
argument_list|,
operator|-
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|active
condition|?
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Light
argument_list|)
else|:
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Button
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|3
argument_list|,
literal|15
argument_list|)
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|3
argument_list|,
operator|-
literal|13
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|topRight
argument_list|()
operator|+
name|QPoint
argument_list|(
operator|-
literal|1
argument_list|,
literal|15
argument_list|)
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
operator|+
name|QPoint
argument_list|(
operator|-
literal|1
argument_list|,
operator|-
literal|13
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|15
argument_list|,
literal|3
argument_list|)
argument_list|,
name|option
operator|->
name|rect
operator|.
name|topRight
argument_list|()
operator|+
name|QPoint
argument_list|(
operator|-
literal|13
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|->
name|rect
operator|.
name|bottomLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|15
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|option
operator|->
name|rect
operator|.
name|bottomRight
argument_list|()
operator|+
name|QPoint
argument_list|(
operator|-
literal|13
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
name|PE_IndicatorSpinUp
case|:
block|{
specifier|const
name|QStyleOptionSpinBox
modifier|*
name|spinner
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSpinBox
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
decl_stmt|;
name|int
name|add
init|=
name|spinner
operator|->
name|state
operator|&
name|State_Sunken
operator|&&
name|spinner
operator|->
name|activeSubControls
operator|&
name|SC_SpinBoxUp
condition|?
literal|1
else|:
literal|0
decl_stmt|;
name|QPoint
name|center
init|=
name|option
operator|->
name|rect
operator|.
name|center
argument_list|()
decl_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|center
operator|.
name|x
argument_list|()
operator|+
name|add
argument_list|,
name|center
operator|.
name|y
argument_list|()
operator|+
literal|1
operator|+
name|add
argument_list|,
name|center
operator|.
name|x
argument_list|()
operator|+
literal|2
operator|+
name|add
argument_list|,
name|center
operator|.
name|y
argument_list|()
operator|+
literal|1
operator|+
name|add
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPoint
argument_list|(
name|center
operator|.
name|x
argument_list|()
operator|+
literal|1
operator|+
name|add
argument_list|,
name|center
operator|.
name|y
argument_list|()
operator|+
name|add
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|PE_IndicatorSpinDown
case|:
block|{
specifier|const
name|QStyleOptionSpinBox
modifier|*
name|spinner
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSpinBox
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
decl_stmt|;
name|int
name|add
init|=
name|spinner
operator|->
name|state
operator|&
name|State_Sunken
operator|&&
name|spinner
operator|->
name|activeSubControls
operator|&
name|SC_SpinBoxDown
condition|?
literal|1
else|:
literal|0
decl_stmt|;
name|QPoint
name|center
init|=
name|option
operator|->
name|rect
operator|.
name|center
argument_list|()
decl_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|center
operator|.
name|x
argument_list|()
operator|+
name|add
argument_list|,
name|center
operator|.
name|y
argument_list|()
operator|+
name|add
argument_list|,
name|center
operator|.
name|x
argument_list|()
operator|+
literal|2
operator|+
name|add
argument_list|,
name|center
operator|.
name|y
argument_list|()
operator|+
name|add
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPoint
argument_list|(
name|center
operator|.
name|x
argument_list|()
operator|+
literal|1
operator|+
name|add
argument_list|,
name|center
operator|.
name|y
argument_list|()
operator|+
literal|1
operator|+
name|add
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|PE_FrameDockWidget
case|:
block|{
name|drawPrimitive
argument_list|(
name|PE_FrameWindow
argument_list|,
name|option
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|PE_IndicatorToolBarHandle
case|:
block|{
name|QPoint
name|offset
decl_stmt|;
name|bool
name|horizontal
init|=
name|option
operator|->
name|state
operator|&
name|State_Horizontal
decl_stmt|;
if|if
condition|(
name|horizontal
condition|)
name|offset
operator|=
name|option
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
expr_stmt|;
else|else
name|offset
operator|=
name|option
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
expr_stmt|;
name|int
name|iterations
init|=
name|horizontal
condition|?
name|option
operator|->
name|rect
operator|.
name|height
argument_list|()
else|:
name|option
operator|->
name|rect
operator|.
name|width
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iterations
condition|;
operator|++
name|i
control|)
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|i
operator|%
literal|2
condition|?
name|Qt
operator|::
name|white
else|:
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Mid
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|add
init|=
name|i
operator|%
literal|4
decl_stmt|;
name|painter
operator|->
name|drawPoint
argument_list|(
name|offset
operator|+
name|xySwitch
argument_list|(
name|QPoint
argument_list|(
name|add
argument_list|,
name|i
argument_list|)
argument_list|,
name|horizontal
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPoint
argument_list|(
name|offset
operator|+
name|xySwitch
argument_list|(
name|QPoint
argument_list|(
name|add
operator|+
literal|4
argument_list|,
name|i
argument_list|)
argument_list|,
name|horizontal
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|add
operator|+
literal|8
operator|<
literal|10
condition|)
name|painter
operator|->
name|drawPoint
argument_list|(
name|offset
operator|+
name|xySwitch
argument_list|(
name|QPoint
argument_list|(
name|add
operator|+
literal|8
argument_list|,
name|i
argument_list|)
argument_list|,
name|horizontal
argument_list|)
argument_list|)
expr_stmt|;
block|}
break|break;
block|}
case|case
name|PE_IndicatorToolBarSeparator
case|:
block|{
break|break;
block|}
case|case
name|PE_PanelButtonTool
case|:
block|{
specifier|const
name|QStyleOptionToolButton
modifier|*
name|button
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionToolButton
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|button
condition|)
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
operator|(
name|option
operator|->
name|state
operator|&
name|State_Enabled
operator|)
condition|)
name|painter
operator|->
name|drawRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|drawButtonBackground
argument_list|(
name|option
argument_list|,
name|painter
argument_list|,
literal|false
argument_list|)
expr_stmt|;
break|break;
block|}
if|if
condition|(
name|button
operator|->
name|state
operator|&
name|State_MouseOver
operator|||
name|button
operator|->
name|state
operator|&
name|State_On
condition|)
block|{
name|QStyleOptionButton
name|bevel
decl_stmt|;
name|bevel
operator|.
name|state
operator|=
name|button
operator|->
name|state
expr_stmt|;
name|bevel
operator|.
name|rect
operator|=
name|button
operator|->
name|rect
expr_stmt|;
name|bevel
operator|.
name|palette
operator|=
name|button
operator|->
name|palette
expr_stmt|;
name|drawButtonBackground
argument_list|(
operator|&
name|bevel
argument_list|,
name|painter
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|button
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Background
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|button
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
break|break;
block|}
case|case
name|PE_FrameMenu
case|:
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Midlight
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|PE_PanelButtonCommand
case|:
block|{
specifier|const
name|QStyleOptionButton
modifier|*
name|btn
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionButton
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
decl_stmt|;
name|bool
name|hover
init|=
operator|(
name|btn
operator|->
name|state
operator|&
name|State_Enabled
operator|)
operator|&&
operator|(
name|btn
operator|->
name|state
operator|&
name|State_MouseOver
operator|)
decl_stmt|;
name|bool
name|sunken
init|=
name|btn
operator|->
name|state
operator|&
name|State_Sunken
decl_stmt|;
name|bool
name|isDefault
init|=
name|btn
operator|->
name|features
operator|&
name|QStyleOptionButton
operator|::
name|DefaultButton
decl_stmt|;
name|bool
name|on
init|=
name|option
operator|->
name|state
operator|&
name|State_On
decl_stmt|;
name|drawButtonBackground
argument_list|(
name|option
argument_list|,
name|painter
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QRect
name|rect
init|=
name|option
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
decl_stmt|;
if|if
condition|(
name|hover
operator|&&
operator|!
name|sunken
operator|&&
operator|!
name|isDefault
operator|&&
operator|!
name|on
condition|)
block|{
name|drawButtonHoverFrame
argument_list|(
name|painter
argument_list|,
name|rect
argument_list|,
name|btn
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Mid
argument_list|)
argument_list|,
name|btn
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Button
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|isDefault
condition|)
block|{
name|drawPrimitive
argument_list|(
name|PE_FrameDefaultButton
argument_list|,
name|option
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
break|break;
block|}
case|case
name|PE_FrameDefaultButton
case|:
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Mid
argument_list|)
argument_list|)
expr_stmt|;
name|QRect
name|rect
init|=
name|option
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
decl_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|rect
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|rect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
comment|//! [0]
case|case
name|PE_IndicatorCheckBox
case|:
block|{
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
name|drawButtonBackground
argument_list|(
name|option
argument_list|,
name|painter
argument_list|,
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|State_Enabled
operator|&&
name|option
operator|->
name|state
operator|&
name|State_MouseOver
operator|&&
operator|!
operator|(
name|option
operator|->
name|state
operator|&
name|State_Sunken
operator|)
condition|)
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Button
argument_list|)
argument_list|)
expr_stmt|;
name|QRect
name|rect
init|=
name|option
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|2
argument_list|,
operator|-
literal|2
argument_list|)
decl_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|rect
argument_list|)
expr_stmt|;
name|rect
operator|=
name|rect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|rect
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|State_On
condition|)
block|{
name|QImage
name|image
argument_list|(
literal|":/images/checkboxchecked.png"
argument_list|)
decl_stmt|;
name|painter
operator|->
name|drawImage
argument_list|(
name|option
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|image
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
comment|//! [0]
block|}
case|case
name|PE_IndicatorRadioButton
case|:
block|{
name|painter
operator|->
name|save
argument_list|()
expr_stmt|;
name|QBrush
name|radioBrush
init|=
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|option
operator|->
name|state
operator|&
name|State_Sunken
operator|)
operator|&&
name|option
operator|->
name|state
operator|&
name|State_Enabled
condition|)
name|radioBrush
operator|=
name|gradientBrush
argument_list|(
name|option
operator|->
name|rect
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|radioBrush
argument_list|)
expr_stmt|;
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|State_Enabled
condition|)
name|painter
operator|->
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Mid
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|painter
operator|->
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Disabled
argument_list|,
name|QPalette
operator|::
name|WindowText
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawEllipse
argument_list|(
name|option
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|State_MouseOver
operator|&&
name|option
operator|->
name|state
operator|&
name|State_Enabled
operator|&&
operator|!
operator|(
name|option
operator|->
name|state
operator|&
name|State_Sunken
operator|)
condition|)
block|{
name|gradientBrush
argument_list|(
name|option
operator|->
name|rect
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Button
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|Qt
operator|::
name|NoBrush
argument_list|)
expr_stmt|;
name|QRect
name|rect
init|=
name|option
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|2
argument_list|,
operator|-
literal|2
argument_list|)
decl_stmt|;
name|painter
operator|->
name|drawEllipse
argument_list|(
name|rect
argument_list|)
expr_stmt|;
name|rect
operator|=
name|rect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawEllipse
argument_list|(
name|rect
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|State_On
condition|)
block|{
name|painter
operator|->
name|setBrush
argument_list|(
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Text
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawEllipse
argument_list|(
name|option
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|,
operator|-
literal|3
argument_list|,
operator|-
literal|3
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|State_Sunken
operator|&&
name|option
operator|->
name|state
operator|&
name|State_Enabled
condition|)
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Mid
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawArc
argument_list|(
name|option
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|2
argument_list|,
operator|-
literal|2
argument_list|)
argument_list|,
literal|80
operator|*
literal|16
argument_list|,
literal|100
operator|*
literal|16
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
name|PE_FrameTabWidget
case|:
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Midlight
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|option
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|2
argument_list|,
operator|-
literal|2
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|PE_Frame
case|:
case|case
name|PE_FrameLineEdit
case|:
block|{
specifier|const
name|QStyleOptionFrame
modifier|*
name|frame
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionFrame
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
decl_stmt|;
specifier|const
name|QStyleOptionFrameV2
name|frameV2
argument_list|(
operator|*
name|frame
argument_list|)
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|frame
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Mid
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|frameV2
operator|.
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|2
argument_list|,
operator|-
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|frameV2
operator|.
name|rect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|frameV2
operator|.
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Active
argument_list|,
name|QPalette
operator|::
name|Background
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|frameV2
operator|.
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|,
name|frameV2
operator|.
name|rect
operator|.
name|bottomLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|frameV2
operator|.
name|rect
operator|.
name|topRight
argument_list|()
argument_list|,
name|frameV2
operator|.
name|rect
operator|.
name|topRight
argument_list|()
operator|+
name|QPoint
argument_list|(
operator|-
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|PE_FrameFocusRect
case|:
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Light
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|Qt
operator|::
name|NoBrush
argument_list|)
expr_stmt|;
name|QRect
name|rect
init|=
name|option
operator|->
name|rect
decl_stmt|;
name|rect
operator|=
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|rect
argument_list|)
expr_stmt|;
break|break;
block|}
default|default:
name|QWindowsStyle
operator|::
name|drawPrimitive
argument_list|(
name|element
argument_list|,
name|option
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
name|painter
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [1]
end_comment
begin_function
DECL|function|drawButtonBackground
name|void
name|JavaStyle
operator|::
name|drawButtonBackground
parameter_list|(
specifier|const
name|QStyleOption
modifier|*
name|option
parameter_list|,
name|QPainter
modifier|*
name|painter
parameter_list|,
name|bool
name|isCheckbox
parameter_list|)
specifier|const
block|{
name|QBrush
name|buttonBrush
init|=
name|option
operator|->
name|palette
operator|.
name|button
argument_list|()
decl_stmt|;
name|bool
name|sunken
init|=
name|option
operator|->
name|state
operator|&
name|State_Sunken
decl_stmt|;
name|bool
name|disabled
init|=
operator|!
operator|(
name|option
operator|->
name|state
operator|&
name|State_Enabled
operator|)
decl_stmt|;
name|bool
name|on
init|=
name|option
operator|->
name|state
operator|&
name|State_On
decl_stmt|;
if|if
condition|(
operator|!
name|sunken
operator|&&
operator|!
name|disabled
operator|&&
operator|(
operator|!
name|on
operator|||
name|isCheckbox
operator|)
condition|)
name|buttonBrush
operator|=
name|gradientBrush
argument_list|(
name|option
operator|->
name|rect
argument_list|)
expr_stmt|;
name|painter
operator|->
name|fillRect
argument_list|(
name|option
operator|->
name|rect
argument_list|,
name|buttonBrush
argument_list|)
expr_stmt|;
name|QRect
name|rect
init|=
name|option
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
decl_stmt|;
if|if
condition|(
name|disabled
condition|)
name|painter
operator|->
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Disabled
argument_list|,
name|QPalette
operator|::
name|WindowText
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|painter
operator|->
name|setPen
argument_list|(
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Mid
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|rect
argument_list|)
expr_stmt|;
if|if
condition|(
name|sunken
operator|&&
operator|!
name|disabled
condition|)
block|{
name|drawSunkenButtonShadow
argument_list|(
name|painter
argument_list|,
name|rect
argument_list|,
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Mid
argument_list|)
argument_list|,
name|option
operator|->
name|direction
operator|==
name|Qt
operator|::
name|RightToLeft
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_comment
comment|//! [1]
end_comment
begin_function
DECL|function|gradientBrush
name|QBrush
name|JavaStyle
operator|::
name|gradientBrush
parameter_list|(
specifier|const
name|QRect
modifier|&
name|rect
parameter_list|)
specifier|const
block|{
name|QLinearGradient
name|gradient
argument_list|(
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|)
decl_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|1.0
argument_list|,
name|QColor
argument_list|(
literal|188
argument_list|,
literal|210
argument_list|,
literal|230
argument_list|)
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0.3
argument_list|,
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0.0
argument_list|,
name|QColor
argument_list|(
literal|223
argument_list|,
literal|233
argument_list|,
literal|243
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|QBrush
argument_list|(
name|gradient
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|subElementRect
name|QRect
name|JavaStyle
operator|::
name|subElementRect
parameter_list|(
name|SubElement
name|element
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|option
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
name|QRect
name|rect
decl_stmt|;
switch|switch
condition|(
name|element
condition|)
block|{
case|case
name|SE_ToolBoxTabContents
case|:
block|{
specifier|const
name|QStyleOptionToolBox
modifier|*
name|box
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionToolBox
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
decl_stmt|;
name|rect
operator|.
name|moveTopLeft
argument_list|(
name|box
operator|->
name|rect
operator|.
name|topLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|rect
operator|.
name|setHeight
argument_list|(
name|box
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
literal|4
argument_list|)
expr_stmt|;
name|rect
operator|.
name|setWidth
argument_list|(
name|box
operator|->
name|fontMetrics
operator|.
name|width
argument_list|(
name|box
operator|->
name|text
argument_list|)
operator|+
literal|15
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|SE_ProgressBarLabel
case|:
case|case
name|SE_ProgressBarGroove
case|:
case|case
name|SE_ProgressBarContents
case|:
block|{
name|rect
operator|=
name|option
operator|->
name|rect
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|SE_PushButtonFocusRect
case|:
block|{
specifier|const
name|QStyleOptionButton
modifier|*
name|btn
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionButton
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
decl_stmt|;
name|rect
operator|=
name|btn
operator|->
name|fontMetrics
operator|.
name|boundingRect
argument_list|(
name|btn
operator|->
name|text
argument_list|)
expr_stmt|;
name|rect
operator|=
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|btn
operator|->
name|fontMetrics
operator|.
name|width
argument_list|(
name|btn
operator|->
name|text
argument_list|)
argument_list|,
name|rect
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|btn
operator|->
name|icon
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|rect
operator|.
name|adjust
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|btn
operator|->
name|iconSize
operator|.
name|width
argument_list|()
argument_list|,
name|btn
operator|->
name|iconSize
operator|.
name|height
argument_list|()
operator|>
name|rect
operator|.
name|height
argument_list|()
condition|?
name|btn
operator|->
name|iconSize
operator|.
name|height
argument_list|()
operator|-
name|rect
operator|.
name|height
argument_list|()
else|:
literal|0
argument_list|)
expr_stmt|;
name|rect
operator|.
name|translate
argument_list|(
operator|-
name|btn
operator|->
name|iconSize
operator|.
name|width
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|rect
operator|.
name|adjust
argument_list|(
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
name|rect
operator|=
name|QRect
argument_list|(
name|int
argument_list|(
name|ceil
argument_list|(
operator|(
name|btn
operator|->
name|rect
operator|.
name|width
argument_list|()
operator|-
name|rect
operator|.
name|width
argument_list|()
operator|)
operator|/
literal|2.0
argument_list|)
argument_list|)
argument_list|,
name|int
argument_list|(
name|ceil
argument_list|(
operator|(
name|btn
operator|->
name|rect
operator|.
name|height
argument_list|()
operator|-
name|rect
operator|.
name|height
argument_list|()
operator|)
operator|/
literal|2.0
argument_list|)
argument_list|)
argument_list|,
name|rect
operator|.
name|width
argument_list|()
operator|-
literal|1
argument_list|,
name|rect
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
name|rect
operator|.
name|adjust
argument_list|(
operator|-
literal|1
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
break|break;
block|}
default|default:
name|rect
operator|=
name|QWindowsStyle
operator|::
name|subElementRect
argument_list|(
name|element
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
return|return
name|rect
return|;
block|}
end_function
begin_function
DECL|function|pixelMetric
name|int
name|JavaStyle
operator|::
name|pixelMetric
parameter_list|(
name|PixelMetric
name|metric
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
comment|/* option */
parameter_list|,
specifier|const
name|QWidget
modifier|*
comment|/*widget*/
parameter_list|)
specifier|const
block|{
name|int
name|value
init|=
literal|0
decl_stmt|;
switch|switch
condition|(
name|metric
condition|)
block|{
case|case
name|PM_ButtonShiftHorizontal
case|:
case|case
name|PM_ButtonShiftVertical
case|:
case|case
name|PM_TabBarTabShiftHorizontal
case|:
case|case
name|PM_ButtonDefaultIndicator
case|:
case|case
name|PM_TabBarTabShiftVertical
case|:
name|value
operator|=
literal|0
expr_stmt|;
break|break;
case|case
name|PM_TabBarBaseOverlap
case|:
case|case
name|PM_DefaultFrameWidth
case|:
name|value
operator|=
literal|2
expr_stmt|;
break|break;
case|case
name|PM_TabBarTabVSpace
case|:
name|value
operator|=
literal|4
expr_stmt|;
break|break;
case|case
name|PM_ScrollBarExtent
case|:
name|value
operator|=
literal|16
expr_stmt|;
break|break;
case|case
name|PM_ScrollBarSliderMin
case|:
name|value
operator|=
literal|26
expr_stmt|;
break|break;
case|case
name|PM_SplitterWidth
case|:
name|value
operator|=
literal|8
expr_stmt|;
break|break;
case|case
name|PM_SliderThickness
case|:
name|value
operator|=
literal|16
expr_stmt|;
break|break;
case|case
name|PM_SliderControlThickness
case|:
name|value
operator|=
literal|16
expr_stmt|;
break|break;
case|case
name|PM_SliderTickmarkOffset
case|:
name|value
operator|=
literal|10
expr_stmt|;
break|break;
case|case
name|PM_SliderSpaceAvailable
case|:
break|break;
case|case
name|PM_MenuPanelWidth
case|:
name|value
operator|=
literal|1
expr_stmt|;
break|break;
case|case
name|PM_MenuVMargin
case|:
name|value
operator|=
literal|2
expr_stmt|;
break|break;
case|case
name|PM_MenuBarPanelWidth
case|:
name|value
operator|=
literal|1
expr_stmt|;
break|break;
case|case
name|PM_MenuBarItemSpacing
case|:
name|value
operator|=
literal|0
expr_stmt|;
break|break;
case|case
name|PM_MenuBarHMargin
case|:
name|value
operator|=
literal|3
expr_stmt|;
break|break;
case|case
name|PM_MenuBarVMargin
case|:
name|value
operator|=
literal|0
expr_stmt|;
break|break;
case|case
name|PM_ComboBoxFrameWidth
case|:
name|value
operator|=
literal|1
expr_stmt|;
break|break;
case|case
name|PM_MenuButtonIndicator
case|:
name|value
operator|=
literal|15
expr_stmt|;
break|break;
case|case
name|PM_ToolBarItemMargin
case|:
name|value
operator|=
literal|3
expr_stmt|;
break|break;
case|case
name|PM_ToolBarHandleExtent
case|:
name|value
operator|=
literal|13
expr_stmt|;
break|break;
case|case
name|PM_SpinBoxFrameWidth
case|:
name|value
operator|=
literal|2
expr_stmt|;
break|break;
case|case
name|PM_TitleBarHeight
case|:
block|{
name|value
operator|=
literal|21
expr_stmt|;
break|break;
case|case
name|PM_MDIFrameWidth
case|:
name|value
operator|=
literal|6
expr_stmt|;
break|break;
block|}
case|case
name|PM_DockWidgetFrameWidth
case|:
block|{
name|value
operator|=
literal|5
expr_stmt|;
break|break;
block|}
default|default:
name|value
operator|=
name|QWindowsStyle
operator|::
name|pixelMetric
argument_list|(
name|metric
argument_list|)
expr_stmt|;
block|}
return|return
name|value
return|;
block|}
end_function
begin_function
DECL|function|styleHint
name|int
name|JavaStyle
operator|::
name|styleHint
parameter_list|(
name|StyleHint
name|hint
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|option
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|,
name|QStyleHintReturn
modifier|*
name|returnData
parameter_list|)
specifier|const
block|{
name|int
name|ret
decl_stmt|;
switch|switch
condition|(
name|hint
condition|)
block|{
case|case
name|SH_Table_GridLineColor
case|:
block|{
name|ret
operator|=
cast|static_cast
argument_list|<
name|int
argument_list|>
argument_list|(
name|option
operator|->
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Mid
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|QStyle
operator|::
name|SH_Menu_Scrollable
case|:
name|ret
operator|=
literal|1
expr_stmt|;
break|break;
default|default:
name|ret
operator|=
name|QWindowsStyle
operator|::
name|styleHint
argument_list|(
name|hint
argument_list|,
name|option
argument_list|,
name|widget
argument_list|,
name|returnData
argument_list|)
expr_stmt|;
block|}
return|return
name|ret
return|;
block|}
end_function
begin_function
DECL|function|standardPixmap
name|QPixmap
name|JavaStyle
operator|::
name|standardPixmap
parameter_list|(
name|StandardPixmap
name|standardPixmap
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|option
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
name|QPixmap
name|pixmap
init|=
name|QWindowsStyle
operator|::
name|standardPixmap
argument_list|(
name|standardPixmap
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
decl_stmt|;
name|QPixmap
name|maximizePixmap
argument_list|(
literal|":/images/internalmaximize.png"
argument_list|)
decl_stmt|;
name|QPixmap
name|minimizePixmap
argument_list|(
literal|":/images/internalminimize.png"
argument_list|)
decl_stmt|;
name|QPixmap
name|closePixmap
argument_list|(
literal|":/images/internalclose.png"
argument_list|)
decl_stmt|;
name|QPixmap
name|internalPixmap
argument_list|(
literal|":/images/internalsystem.png"
argument_list|)
decl_stmt|;
name|QPixmap
name|internalCloseDownPixmap
argument_list|(
literal|":/images/internalclosedown.png"
argument_list|)
decl_stmt|;
name|QPixmap
name|minimizeDownPixmap
argument_list|(
literal|":/images/internalminimizedown.png"
argument_list|)
decl_stmt|;
name|QPixmap
name|maximizeDownPixmap
argument_list|(
literal|":/images/internalmaximizedown.png"
argument_list|)
decl_stmt|;
name|QPixmap
name|dirOpenPixmap
argument_list|(
literal|":/images/open24.png"
argument_list|)
decl_stmt|;
name|QPixmap
name|filePixmap
argument_list|(
literal|":/images/file.png"
argument_list|)
decl_stmt|;
switch|switch
condition|(
name|standardPixmap
condition|)
block|{
case|case
name|SP_DirLinkIcon
case|:
case|case
name|SP_DirClosedIcon
case|:
case|case
name|SP_DirIcon
case|:
case|case
name|SP_DirOpenIcon
case|:
block|{
name|pixmap
operator|=
name|closePixmap
expr_stmt|;
break|break;
block|}
case|case
name|SP_FileIcon
case|:
block|{
name|pixmap
operator|=
name|filePixmap
expr_stmt|;
break|break;
block|}
case|case
name|SP_FileDialogBack
case|:
block|{
name|pixmap
operator|=
name|QPixmap
argument_list|(
literal|":/images/fileback.png"
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|SP_FileDialogToParent
case|:
block|{
name|pixmap
operator|=
name|QPixmap
argument_list|(
literal|":/images/fileparent.png"
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|SP_FileDialogNewFolder
case|:
block|{
name|pixmap
operator|=
name|QPixmap
argument_list|(
literal|":/images/open24.png"
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|SP_FileDialogListView
case|:
block|{
name|pixmap
operator|=
name|QPixmap
argument_list|(
literal|":/images/filelist.png"
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|SP_FileDialogDetailedView
case|:
block|{
name|pixmap
operator|=
name|QPixmap
argument_list|(
literal|":/images/filedetail.png"
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|SP_MessageBoxInformation
case|:
block|{
name|pixmap
operator|=
name|QPixmap
argument_list|(
literal|":/images/information.png"
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|SP_MessageBoxWarning
case|:
block|{
name|pixmap
operator|=
name|QPixmap
argument_list|(
literal|":/images/warning.png"
argument_list|)
expr_stmt|;
block|}
case|case
name|SP_MessageBoxCritical
case|:
block|{
name|pixmap
operator|=
name|QPixmap
argument_list|(
literal|":/images/critical.png"
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|SP_MessageBoxQuestion
case|:
block|{
name|pixmap
operator|=
name|QPixmap
argument_list|(
literal|":/images/question.png"
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|SP_TitleBarNormalButton
case|:
name|pixmap
operator|=
name|maximizePixmap
expr_stmt|;
break|break;
case|case
name|SP_TitleBarCloseButton
case|:
name|pixmap
operator|=
name|closePixmap
expr_stmt|;
break|break;
default|default:
empty_stmt|;
block|}
return|return
name|pixmap
return|;
block|}
end_function
begin_function
DECL|function|sizeFromContents
name|QSize
name|JavaStyle
operator|::
name|sizeFromContents
parameter_list|(
name|ContentsType
name|type
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|option
parameter_list|,
specifier|const
name|QSize
modifier|&
name|contentsSize
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
switch|switch
condition|(
name|type
condition|)
block|{
case|case
name|CT_ComboBox
case|:
block|{
return|return
name|QSize
argument_list|(
name|contentsSize
operator|.
name|width
argument_list|()
operator|+
literal|27
argument_list|,
name|contentsSize
operator|.
name|height
argument_list|()
argument_list|)
return|;
block|}
case|case
name|CT_Slider
case|:
block|{
specifier|const
name|QStyleOptionSlider
modifier|*
name|slider
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionSlider
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
decl_stmt|;
if|if
condition|(
name|slider
operator|->
name|tickPosition
operator|==
name|QSlider
operator|::
name|TicksBelow
condition|)
block|{
return|return
name|QSize
argument_list|(
name|contentsSize
operator|.
name|width
argument_list|()
argument_list|,
name|contentsSize
operator|.
name|height
argument_list|()
operator|+
literal|15
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|contentsSize
return|;
block|}
block|}
case|case
name|CT_MenuBarItem
case|:
block|{
specifier|const
name|QStyleOptionMenuItem
modifier|*
name|menuItem
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionMenuItem
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
decl_stmt|;
name|QFontMetrics
name|metrics
argument_list|(
name|menuItem
operator|->
name|font
argument_list|)
decl_stmt|;
name|QRect
name|boundingRect
init|=
name|metrics
operator|.
name|boundingRect
argument_list|(
name|menuItem
operator|->
name|text
argument_list|)
decl_stmt|;
name|int
name|width
init|=
name|boundingRect
operator|.
name|width
argument_list|()
operator|+
literal|14
decl_stmt|;
name|int
name|height
init|=
name|boundingRect
operator|.
name|height
argument_list|()
operator|+
literal|3
decl_stmt|;
if|if
condition|(
name|height
operator|<
literal|20
condition|)
name|height
operator|=
literal|20
expr_stmt|;
return|return
name|QSize
argument_list|(
name|width
argument_list|,
name|height
argument_list|)
return|;
block|}
case|case
name|CT_MenuItem
case|:
block|{
specifier|const
name|QStyleOptionMenuItem
modifier|*
name|menuItem
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionMenuItem
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
decl_stmt|;
name|QSize
name|defaultSize
init|=
name|QWindowsStyle
operator|::
name|sizeFromContents
argument_list|(
name|type
argument_list|,
name|option
argument_list|,
name|contentsSize
argument_list|,
name|widget
argument_list|)
decl_stmt|;
if|if
condition|(
name|menuItem
operator|->
name|menuItemType
operator|==
name|QStyleOptionMenuItem
operator|::
name|Separator
condition|)
return|return
name|defaultSize
return|;
name|int
name|width
init|=
literal|30
decl_stmt|;
name|int
name|height
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|!
name|menuItem
operator|->
name|icon
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|width
operator|+=
literal|20
expr_stmt|;
name|height
operator|+=
literal|20
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|menuItem
operator|->
name|text
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|QFontMetrics
name|metrics
argument_list|(
name|menuItem
operator|->
name|font
argument_list|)
decl_stmt|;
name|QString
name|text
init|=
name|menuItem
operator|->
name|text
decl_stmt|;
name|text
operator|.
name|remove
argument_list|(
name|QLatin1Char
argument_list|(
literal|'\t'
argument_list|)
argument_list|)
expr_stmt|;
name|QRect
name|textRect
init|=
name|metrics
operator|.
name|boundingRect
argument_list|(
name|text
argument_list|)
decl_stmt|;
name|width
operator|+=
name|textRect
operator|.
name|width
argument_list|()
expr_stmt|;
if|if
condition|(
name|height
operator|<
name|textRect
operator|.
name|height
argument_list|()
condition|)
name|height
operator|+=
name|textRect
operator|.
name|height
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|menuItem
operator|->
name|checkType
operator|!=
name|QStyleOptionMenuItem
operator|::
name|NotCheckable
condition|)
block|{
name|width
operator|+=
literal|10
expr_stmt|;
if|if
condition|(
name|height
operator|<
literal|10
condition|)
name|height
operator|=
literal|10
expr_stmt|;
block|}
return|return
name|QSize
argument_list|(
name|width
argument_list|,
name|height
argument_list|)
return|;
block|}
default|default:
return|return
name|QWindowsStyle
operator|::
name|sizeFromContents
argument_list|(
name|type
argument_list|,
name|option
argument_list|,
name|contentsSize
argument_list|,
name|widget
argument_list|)
return|;
block|}
block|}
end_function
end_unit
