begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: http://www.qt-project.org/ ** ** This file is part of the documentation of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor **     the names of its contributors may be used to endorse or promote **     products derived from this software without specific prior written **     permission. ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtGui>
end_include
begin_function
DECL|function|main
name|int
name|main
parameter_list|()
block|{
name|int
name|x
decl_stmt|,
name|y
decl_stmt|;
block|{
comment|// BIT ACCESS
name|QImage
name|image
decl_stmt|;
comment|// sets bit at (x, y) to 1
if|if
condition|(
name|image
operator|.
name|format
argument_list|()
operator|==
name|QImage
operator|::
name|Format_MonoLSB
condition|)
name|image
operator|.
name|scanLine
argument_list|(
name|y
argument_list|)
index|[
name|x
operator|>>
literal|3
index|]
operator||=
literal|1
operator|<<
operator|(
name|x
operator|&
literal|7
operator|)
expr_stmt|;
else|else
name|image
operator|.
name|scanLine
argument_list|(
name|y
argument_list|)
index|[
name|x
operator|>>
literal|3
index|]
operator||=
literal|1
operator|<<
operator|(
literal|7
operator|-
operator|(
name|x
operator|&
literal|7
operator|)
operator|)
expr_stmt|;
block|}
block|{
comment|// 8-BIT ACCESS
name|QImage
name|image
decl_stmt|;
comment|// set entry 19 in the color table to yellow
name|image
operator|.
name|setColor
argument_list|(
literal|19
argument_list|,
name|qRgb
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|// set 8 bit pixel at (x,y) to value yellow (in color table)
name|image
operator|.
name|scanLine
argument_list|(
name|y
argument_list|)
index|[
name|x
index|]
operator|=
literal|19
expr_stmt|;
block|}
block|{
comment|// 32-BIT
name|QImage
name|image
decl_stmt|;
comment|// sets 32 bit pixel at (x,y) to yellow.
name|uint
modifier|*
name|ptr
init|=
cast|reinterpret_cast
argument_list|<
name|uint
operator|*
argument_list|>
argument_list|(
name|image
operator|.
name|scanLine
argument_list|(
name|y
argument_list|)
argument_list|)
operator|+
name|x
decl_stmt|;
operator|*
name|ptr
operator|=
name|qRgb
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
block|{
comment|// SAVE
comment|//! [0]
name|QImage
name|image
decl_stmt|;
name|QByteArray
name|ba
decl_stmt|;
name|QBuffer
name|buffer
argument_list|(
operator|&
name|ba
argument_list|)
decl_stmt|;
name|buffer
operator|.
name|open
argument_list|(
name|QIODevice
operator|::
name|WriteOnly
argument_list|)
expr_stmt|;
name|image
operator|.
name|save
argument_list|(
operator|&
name|buffer
argument_list|,
literal|"PNG"
argument_list|)
expr_stmt|;
comment|// writes image into ba in PNG format
comment|//! [0]
block|}
block|{
comment|// PIX SAVE
comment|//! [1]
name|QPixmap
name|pixmap
decl_stmt|;
name|QByteArray
name|bytes
decl_stmt|;
name|QBuffer
name|buffer
argument_list|(
operator|&
name|bytes
argument_list|)
decl_stmt|;
name|buffer
operator|.
name|open
argument_list|(
name|QIODevice
operator|::
name|WriteOnly
argument_list|)
expr_stmt|;
name|pixmap
operator|.
name|save
argument_list|(
operator|&
name|buffer
argument_list|,
literal|"PNG"
argument_list|)
expr_stmt|;
comment|// writes pixmap into bytes in PNG format
comment|//! [1]
block|}
block|{
comment|// MASK
comment|//! [2]
name|QPixmap
name|alpha
argument_list|(
literal|"image-with-alpha.png"
argument_list|)
decl_stmt|;
name|QPixmap
name|alphacopy
init|=
name|alpha
decl_stmt|;
name|alphacopy
operator|.
name|setMask
argument_list|(
name|alphacopy
operator|.
name|mask
argument_list|()
argument_list|)
expr_stmt|;
comment|//! [2]
block|}
block|}
end_function
end_unit
