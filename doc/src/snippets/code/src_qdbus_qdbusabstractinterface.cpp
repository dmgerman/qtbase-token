begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/ ** ** This file is part of the documentation of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor **     the names of its contributors may be used to endorse or promote **     products derived from this software without specific prior written **     permission. ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_comment
comment|//! [0]
end_comment
begin_decl_stmt
DECL|variable|value
name|QString
name|value
init|=
name|retrieveValue
argument_list|()
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|reply
name|QDBusMessage
name|reply
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|api
name|QDBusReply
argument_list|<
name|int
argument_list|>
name|api
init|=
name|interface
operator|->
name|call
argument_list|(
name|QLatin1String
argument_list|(
literal|"GetAPIVersion"
argument_list|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_if
if|if
condition|(
name|api
operator|>=
literal|14
condition|)
name|reply
operator|=
name|interface
operator|->
name|call
argument_list|(
name|QLatin1String
argument_list|(
literal|"ProcessWorkUnicode"
argument_list|)
argument_list|,
name|value
argument_list|)
expr_stmt|;
else|else
name|reply
operator|=
name|interface
operator|->
name|call
argument_list|(
name|QLatin1String
argument_list|(
literal|"ProcessWork"
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"UTF-8"
argument_list|)
argument_list|,
name|value
operator|.
name|toUtf8
argument_list|()
argument_list|)
expr_stmt|;
end_if
begin_comment
comment|//! [0]
end_comment
begin_comment
comment|//! [1]
end_comment
begin_decl_stmt
DECL|variable|value
name|QString
name|value
init|=
name|retrieveValue
argument_list|()
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|pcall
name|QDBusPendingCall
name|pcall
init|=
name|interface
operator|->
name|asyncCall
argument_list|(
name|QLatin1String
argument_list|(
literal|"Process"
argument_list|)
argument_list|,
name|value
argument_list|)
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|watcher
name|QDBusPendingCallWatcher
modifier|*
name|watcher
init|=
operator|new
name|QDBusPendingCallWatcher
argument_list|(
name|pcall
argument_list|,
name|this
argument_list|)
decl_stmt|;
end_decl_stmt
begin_expr_stmt
name|QObject
operator|::
name|connect
argument_list|(
name|watcher
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|(
name|QDBusPendingCallWatcher
operator|*
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|callFinishedSlot
argument_list|(
name|QDBusPendingCallWatcher
operator|*
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
end_expr_stmt
begin_comment
comment|//! [1]
end_comment
end_unit
