begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: http://www.qt-project.org/ ** ** This file is part of the documentation of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor **     the names of its contributors may be used to endorse or promote **     products derived from this software without specific prior written **     permission. ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_comment
comment|//! [0]
end_comment
begin_decl_stmt
DECL|variable|wordList
name|QStringList
name|wordList
decl_stmt|;
end_decl_stmt
begin_expr_stmt
name|wordList
operator|<<
literal|"alpha"
operator|<<
literal|"omega"
operator|<<
literal|"omicron"
operator|<<
literal|"zeta"
expr_stmt|;
end_expr_stmt
begin_decl_stmt
DECL|variable|lineEdit
name|QLineEdit
modifier|*
name|lineEdit
init|=
operator|new
name|QLineEdit
argument_list|(
name|this
argument_list|)
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|completer
name|QCompleter
modifier|*
name|completer
init|=
operator|new
name|QCompleter
argument_list|(
name|wordList
argument_list|,
name|this
argument_list|)
decl_stmt|;
end_decl_stmt
begin_expr_stmt
name|completer
operator|->
name|setCaseSensitivity
argument_list|(
name|Qt
operator|::
name|CaseInsensitive
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|lineEdit
operator|->
name|setCompleter
argument_list|(
name|completer
argument_list|)
expr_stmt|;
end_expr_stmt
begin_comment
comment|//! [0]
end_comment
begin_comment
comment|//! [1]
end_comment
begin_decl_stmt
DECL|variable|completer
name|QCompleter
modifier|*
name|completer
init|=
operator|new
name|QCompleter
argument_list|(
name|this
argument_list|)
decl_stmt|;
end_decl_stmt
begin_expr_stmt
name|completer
operator|->
name|setModel
argument_list|(
operator|new
name|QDirModel
argument_list|(
name|completer
argument_list|)
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|lineEdit
operator|->
name|setCompleter
argument_list|(
name|completer
argument_list|)
expr_stmt|;
end_expr_stmt
begin_comment
comment|//! [1]
end_comment
begin_comment
comment|//! [2]
end_comment
begin_for
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|completer
operator|->
name|setCurrentRow
argument_list|(
name|i
argument_list|)
condition|;
name|i
operator|++
control|)
name|qDebug
argument_list|()
operator|<<
name|completer
operator|->
name|currentCompletion
argument_list|()
operator|<<
literal|" is match number "
operator|<<
name|i
expr_stmt|;
end_for
begin_comment
comment|//! [2]
end_comment
end_unit
