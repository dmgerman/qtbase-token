begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<qdialog.h>
end_include
begin_include
include|#
directive|include
file|<qapplication.h>
end_include
begin_include
include|#
directive|include
file|<qlineedit.h>
end_include
begin_include
include|#
directive|include
file|<qpushbutton.h>
end_include
begin_include
include|#
directive|include
file|<qstyle.h>
end_include
begin_include
include|#
directive|include
file|<QVBoxLayout>
end_include
begin_include
include|#
directive|include
file|<QSizeGrip>
end_include
begin_include
include|#
directive|include
file|"../../shared/util.h"
end_include
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QSize
argument_list|)
end_macro
begin_macro
name|QT_FORWARD_DECLARE_CLASS
argument_list|(
argument|QDialog
argument_list|)
end_macro
begin_comment
comment|//TESTED_CLASS=
end_comment
begin_comment
comment|//TESTED_FILES=
end_comment
begin_class
DECL|class|tst_QDialog
class|class
name|tst_QDialog
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
name|tst_QDialog
parameter_list|()
constructor_decl|;
public|public
name|slots
public|:
name|void
name|initTestCase
parameter_list|()
function_decl|;
name|void
name|cleanupTestCase
parameter_list|()
function_decl|;
private|private
name|slots
private|:
name|void
name|getSetCheck
parameter_list|()
function_decl|;
name|void
name|showExtension_data
parameter_list|()
function_decl|;
name|void
name|showExtension
parameter_list|()
function_decl|;
name|void
name|defaultButtons
parameter_list|()
function_decl|;
name|void
name|showMaximized
parameter_list|()
function_decl|;
name|void
name|showMinimized
parameter_list|()
function_decl|;
name|void
name|showFullScreen
parameter_list|()
function_decl|;
if|#
directive|if
operator|!
name|defined
argument_list|(
name|Q_WS_X11
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
name|void
name|showAsTool
parameter_list|()
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|Q_OS_WINCE
name|void
name|toolDialogPosition
parameter_list|()
function_decl|;
endif|#
directive|endif
name|void
name|deleteMainDefault
parameter_list|()
function_decl|;
name|void
name|deleteInExec
parameter_list|()
function_decl|;
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_NO_EXCEPTIONS
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|Q_OS_MAC
argument_list|)
operator|&&
operator|!
operator|(
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
operator|&&
name|defined
argument_list|(
name|_ARM_
argument_list|)
operator|)
name|void
name|throwInExec
parameter_list|()
function_decl|;
endif|#
directive|endif
name|void
name|showSizeGrip
parameter_list|()
function_decl|;
name|void
name|setVisible
parameter_list|()
function_decl|;
name|void
name|reject
parameter_list|()
function_decl|;
private|private:
DECL|member|testWidget
name|QDialog
modifier|*
name|testWidget
decl_stmt|;
block|}
class|;
end_class
begin_comment
comment|// Testing get/set functions
end_comment
begin_function
DECL|function|getSetCheck
name|void
name|tst_QDialog
operator|::
name|getSetCheck
parameter_list|()
block|{
name|QDialog
name|obj1
decl_stmt|;
comment|// QWidget* QDialog::extension()
comment|// void QDialog::setExtension(QWidget*)
name|QWidget
modifier|*
name|var1
init|=
operator|new
name|QWidget
decl_stmt|;
name|obj1
operator|.
name|setExtension
argument_list|(
name|var1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|var1
argument_list|,
name|obj1
operator|.
name|extension
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setExtension
argument_list|(
operator|(
name|QWidget
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
operator|(
name|QWidget
operator|*
operator|)
literal|0
argument_list|,
name|obj1
operator|.
name|extension
argument_list|()
argument_list|)
expr_stmt|;
comment|// No delete var1, since setExtension takes ownership
comment|// int QDialog::result()
comment|// void QDialog::setResult(int)
name|obj1
operator|.
name|setResult
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|0
argument_list|,
name|obj1
operator|.
name|result
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setResult
argument_list|(
name|INT_MIN
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|INT_MIN
argument_list|,
name|obj1
operator|.
name|result
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setResult
argument_list|(
name|INT_MAX
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|INT_MAX
argument_list|,
name|obj1
operator|.
name|result
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|// work around function being protected
end_comment
begin_class
DECL|class|DummyDialog
class|class
name|DummyDialog
super|:
specifier|public
name|QDialog
block|{
public|public:
DECL|function|DummyDialog
name|DummyDialog
parameter_list|()
member_init_list|:
name|QDialog
argument_list|(
literal|0
argument_list|)
block|{}
DECL|function|showExtension
name|void
name|showExtension
parameter_list|(
name|bool
name|b
parameter_list|)
block|{
name|QDialog
operator|::
name|showExtension
argument_list|(
name|b
argument_list|)
expr_stmt|;
block|}
block|}
class|;
end_class
begin_class
DECL|class|ToolDialog
class|class
name|ToolDialog
super|:
specifier|public
name|QDialog
block|{
public|public:
DECL|function|ToolDialog
name|ToolDialog
parameter_list|(
name|QWidget
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QDialog
argument_list|(
name|parent
argument_list|,
name|Qt
operator|::
name|Tool
argument_list|)
member_init_list|,
name|mWasActive
argument_list|(
literal|false
argument_list|)
member_init_list|,
name|tId
argument_list|(
operator|-
literal|1
argument_list|)
block|{     }
DECL|function|wasActive
name|bool
name|wasActive
parameter_list|()
specifier|const
block|{
return|return
name|mWasActive
return|;
block|}
DECL|function|exec
name|int
name|exec
parameter_list|()
block|{
name|tId
operator|=
name|startTimer
argument_list|(
literal|300
argument_list|)
expr_stmt|;
return|return
name|QDialog
operator|::
name|exec
argument_list|()
return|;
block|}
protected|protected:
DECL|function|timerEvent
name|void
name|timerEvent
parameter_list|(
name|QTimerEvent
modifier|*
name|event
parameter_list|)
block|{
if|if
condition|(
name|tId
operator|==
name|event
operator|->
name|timerId
argument_list|()
condition|)
block|{
name|killTimer
argument_list|(
name|tId
argument_list|)
expr_stmt|;
name|mWasActive
operator|=
name|isActiveWindow
argument_list|()
expr_stmt|;
name|reject
argument_list|()
expr_stmt|;
block|}
block|}
private|private:
DECL|member|mWasActive
name|int
name|mWasActive
decl_stmt|;
DECL|member|tId
name|int
name|tId
decl_stmt|;
block|}
class|;
end_class
begin_constructor
DECL|function|tst_QDialog
name|tst_QDialog
operator|::
name|tst_QDialog
parameter_list|()
block|{ }
end_constructor
begin_function
DECL|function|initTestCase
name|void
name|tst_QDialog
operator|::
name|initTestCase
parameter_list|()
block|{
comment|// Create the test class
name|testWidget
operator|=
operator|new
name|QDialog
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|X11BypassWindowManagerHint
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|resize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|show
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|setActiveWindow
argument_list|(
name|testWidget
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|cleanupTestCase
name|void
name|tst_QDialog
operator|::
name|cleanupTestCase
parameter_list|()
block|{
if|if
condition|(
name|testWidget
condition|)
block|{
operator|delete
name|testWidget
expr_stmt|;
name|testWidget
operator|=
literal|0
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|showExtension_data
name|void
name|tst_QDialog
operator|::
name|showExtension_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QSize
argument_list|>
argument_list|(
literal|"dlgSize"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QSize
argument_list|>
argument_list|(
literal|"extSize"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"horizontal"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QSize
argument_list|>
argument_list|(
literal|"result"
argument_list|)
expr_stmt|;
comment|//next we fill it with data
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data0"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
operator|(
name|bool
operator|)
name|FALSE
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|150
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data1"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|120
argument_list|,
literal|50
argument_list|)
operator|<<
operator|(
name|bool
operator|)
name|FALSE
operator|<<
name|QSize
argument_list|(
literal|120
argument_list|,
literal|150
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data2"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
operator|(
name|bool
operator|)
name|TRUE
operator|<<
name|QSize
argument_list|(
literal|150
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data3"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|50
argument_list|,
literal|120
argument_list|)
operator|<<
operator|(
name|bool
operator|)
name|TRUE
operator|<<
name|QSize
argument_list|(
literal|150
argument_list|,
literal|120
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|showExtension
name|void
name|tst_QDialog
operator|::
name|showExtension
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QSize
argument_list|,
name|dlgSize
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QSize
argument_list|,
name|extSize
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|horizontal
argument_list|)
expr_stmt|;
comment|// set geometry of main dialog and extension widget
name|testWidget
operator|->
name|setFixedSize
argument_list|(
name|dlgSize
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|ext
init|=
operator|new
name|QWidget
argument_list|(
name|testWidget
argument_list|)
decl_stmt|;
name|ext
operator|->
name|setFixedSize
argument_list|(
name|extSize
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setExtension
argument_list|(
name|ext
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setOrientation
argument_list|(
name|horizontal
condition|?
name|Qt
operator|::
name|Horizontal
else|:
name|Qt
operator|::
name|Vertical
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|size
argument_list|()
argument_list|,
name|dlgSize
argument_list|)
expr_stmt|;
name|QPoint
name|oldPosition
init|=
name|testWidget
operator|->
name|pos
argument_list|()
decl_stmt|;
comment|// show
operator|(
operator|(
name|DummyDialog
operator|*
operator|)
name|testWidget
operator|)
operator|->
name|showExtension
argument_list|(
name|TRUE
argument_list|)
expr_stmt|;
comment|//     while ( testWidget->size() == dlgSize )
comment|// 	qApp->processEvents();
name|QTEST
argument_list|(
name|testWidget
operator|->
name|size
argument_list|()
argument_list|,
literal|"result"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|pos
argument_list|()
argument_list|,
name|oldPosition
argument_list|)
expr_stmt|;
comment|// hide extension. back to old size ?
operator|(
operator|(
name|DummyDialog
operator|*
operator|)
name|testWidget
operator|)
operator|->
name|showExtension
argument_list|(
name|FALSE
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|size
argument_list|()
argument_list|,
name|dlgSize
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setExtension
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|defaultButtons
name|void
name|tst_QDialog
operator|::
name|defaultButtons
parameter_list|()
block|{
name|QLineEdit
modifier|*
name|lineEdit
init|=
operator|new
name|QLineEdit
argument_list|(
name|testWidget
argument_list|)
decl_stmt|;
name|QPushButton
modifier|*
name|push
init|=
operator|new
name|QPushButton
argument_list|(
literal|"Button 1"
argument_list|,
name|testWidget
argument_list|)
decl_stmt|;
name|QPushButton
modifier|*
name|pushTwo
init|=
operator|new
name|QPushButton
argument_list|(
literal|"Button 2"
argument_list|,
name|testWidget
argument_list|)
decl_stmt|;
name|QPushButton
modifier|*
name|pushThree
init|=
operator|new
name|QPushButton
argument_list|(
literal|"Button 3"
argument_list|,
name|testWidget
argument_list|)
decl_stmt|;
name|pushThree
operator|->
name|setAutoDefault
argument_list|(
name|FALSE
argument_list|)
expr_stmt|;
comment|//we need to show the buttons. Otherwise they won't get the focus
name|push
operator|->
name|show
argument_list|()
expr_stmt|;
name|pushTwo
operator|->
name|show
argument_list|()
expr_stmt|;
name|pushThree
operator|->
name|show
argument_list|()
expr_stmt|;
name|push
operator|->
name|setDefault
argument_list|(
name|TRUE
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|push
operator|->
name|isDefault
argument_list|()
argument_list|)
expr_stmt|;
name|pushTwo
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|pushTwo
operator|->
name|isDefault
argument_list|()
argument_list|)
expr_stmt|;
name|pushThree
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|push
operator|->
name|isDefault
argument_list|()
argument_list|)
expr_stmt|;
name|lineEdit
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|push
operator|->
name|isDefault
argument_list|()
argument_list|)
expr_stmt|;
name|pushTwo
operator|->
name|setDefault
argument_list|(
name|TRUE
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|pushTwo
operator|->
name|isDefault
argument_list|()
argument_list|)
expr_stmt|;
name|pushTwo
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|pushTwo
operator|->
name|isDefault
argument_list|()
argument_list|)
expr_stmt|;
name|lineEdit
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|pushTwo
operator|->
name|isDefault
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|showMaximized
name|void
name|tst_QDialog
operator|::
name|showMaximized
parameter_list|()
block|{
name|QDialog
name|dialog
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|dialog
operator|.
name|setSizeGripEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QSizeGrip
modifier|*
name|sizeGrip
init|=
name|qFindChild
argument_list|<
name|QSizeGrip
operator|*
argument_list|>
argument_list|(
operator|&
name|dialog
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|sizeGrip
argument_list|)
expr_stmt|;
name|dialog
operator|.
name|showMaximized
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|dialog
operator|.
name|isMaximized
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dialog
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
if|#
directive|if
operator|!
name|defined
argument_list|(
name|Q_OS_MAC
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|Q_OS_IRIX
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|Q_OS_HPUX
argument_list|)
name|QVERIFY
argument_list|(
operator|!
name|sizeGrip
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|dialog
operator|.
name|showNormal
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|dialog
operator|.
name|isMaximized
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dialog
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|sizeGrip
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|dialog
operator|.
name|showMaximized
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|dialog
operator|.
name|isMaximized
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dialog
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|dialog
operator|.
name|hide
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|dialog
operator|.
name|isMaximized
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|dialog
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|dialog
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|dialog
operator|.
name|isMaximized
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dialog
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|dialog
operator|.
name|hide
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|dialog
operator|.
name|isMaximized
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|dialog
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|dialog
operator|.
name|showMaximized
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|dialog
operator|.
name|isMaximized
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dialog
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|showMinimized
name|void
name|tst_QDialog
operator|::
name|showMinimized
parameter_list|()
block|{
name|QDialog
name|dialog
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|dialog
operator|.
name|showMinimized
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|dialog
operator|.
name|isMinimized
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dialog
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|dialog
operator|.
name|showNormal
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|dialog
operator|.
name|isMinimized
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dialog
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|dialog
operator|.
name|showMinimized
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|dialog
operator|.
name|isMinimized
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dialog
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|dialog
operator|.
name|hide
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|dialog
operator|.
name|isMinimized
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|dialog
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|dialog
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|dialog
operator|.
name|isMinimized
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dialog
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|dialog
operator|.
name|hide
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|dialog
operator|.
name|isMinimized
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|dialog
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|dialog
operator|.
name|showMinimized
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|dialog
operator|.
name|isMinimized
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dialog
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|showFullScreen
name|void
name|tst_QDialog
operator|::
name|showFullScreen
parameter_list|()
block|{
name|QDialog
name|dialog
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|X11BypassWindowManagerHint
argument_list|)
decl_stmt|;
name|dialog
operator|.
name|setSizeGripEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QSizeGrip
modifier|*
name|sizeGrip
init|=
name|qFindChild
argument_list|<
name|QSizeGrip
operator|*
argument_list|>
argument_list|(
operator|&
name|dialog
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|sizeGrip
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|syncX
argument_list|()
expr_stmt|;
name|dialog
operator|.
name|showFullScreen
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|dialog
operator|.
name|isFullScreen
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dialog
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|sizeGrip
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|syncX
argument_list|()
expr_stmt|;
name|dialog
operator|.
name|showNormal
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|dialog
operator|.
name|isFullScreen
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dialog
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|sizeGrip
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|syncX
argument_list|()
expr_stmt|;
name|dialog
operator|.
name|showFullScreen
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|dialog
operator|.
name|isFullScreen
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dialog
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|syncX
argument_list|()
expr_stmt|;
name|dialog
operator|.
name|hide
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|dialog
operator|.
name|isFullScreen
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|dialog
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|syncX
argument_list|()
expr_stmt|;
name|dialog
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|dialog
operator|.
name|isFullScreen
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dialog
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|syncX
argument_list|()
expr_stmt|;
name|dialog
operator|.
name|hide
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|dialog
operator|.
name|isFullScreen
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|dialog
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|syncX
argument_list|()
expr_stmt|;
name|dialog
operator|.
name|showFullScreen
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|dialog
operator|.
name|isFullScreen
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dialog
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|syncX
argument_list|()
expr_stmt|;
name|dialog
operator|.
name|hide
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|dialog
operator|.
name|isFullScreen
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|dialog
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|// Qt/X11: Skipped since activeWindow() is not respected by all window managers.
end_comment
begin_comment
comment|// Qt/WinCE: No real support for Qt::Tool on WinCE.
end_comment
begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|Q_WS_X11
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
end_if
begin_function
DECL|function|showAsTool
name|void
name|tst_QDialog
operator|::
name|showAsTool
parameter_list|()
block|{
name|ToolDialog
name|dialog
argument_list|(
name|testWidget
argument_list|)
decl_stmt|;
name|testWidget
operator|->
name|activateWindow
argument_list|()
expr_stmt|;
name|dialog
operator|.
name|exec
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
if|if
condition|(
name|testWidget
operator|->
name|style
argument_list|()
operator|->
name|styleHint
argument_list|(
name|QStyle
operator|::
name|SH_Widget_ShareActivation
argument_list|,
literal|0
argument_list|,
name|testWidget
argument_list|)
condition|)
block|{
name|QCOMPARE
argument_list|(
name|dialog
operator|.
name|wasActive
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QCOMPARE
argument_list|(
name|dialog
operator|.
name|wasActive
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// Verify that pos() returns the same before and after show()
end_comment
begin_comment
comment|// for a dialog with the Tool window type.
end_comment
begin_comment
comment|// No real support for Qt::Tool on WinCE, so skip this test.
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|Q_OS_WINCE
end_ifndef
begin_function
DECL|function|toolDialogPosition
name|void
name|tst_QDialog
operator|::
name|toolDialogPosition
parameter_list|()
block|{
name|QDialog
name|dialog
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|Tool
argument_list|)
decl_stmt|;
name|dialog
operator|.
name|move
argument_list|(
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
specifier|const
name|QPoint
name|beforeShowPosition
init|=
name|dialog
operator|.
name|pos
argument_list|()
decl_stmt|;
name|dialog
operator|.
name|show
argument_list|()
expr_stmt|;
specifier|const
name|QPoint
name|afterShowPosition
init|=
name|dialog
operator|.
name|pos
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|afterShowPosition
argument_list|,
name|beforeShowPosition
argument_list|)
expr_stmt|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_class
DECL|class|Dialog
class|class
name|Dialog
super|:
specifier|public
name|QDialog
block|{
public|public:
DECL|function|Dialog
name|Dialog
parameter_list|(
name|QPushButton
modifier|*
modifier|&
name|button
parameter_list|)
block|{
name|button
operator|=
operator|new
name|QPushButton
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|deleteMainDefault
name|void
name|tst_QDialog
operator|::
name|deleteMainDefault
parameter_list|()
block|{
name|QPushButton
modifier|*
name|button
decl_stmt|;
name|Dialog
name|dialog
argument_list|(
name|button
argument_list|)
decl_stmt|;
name|button
operator|->
name|setDefault
argument_list|(
literal|true
argument_list|)
expr_stmt|;
operator|delete
name|button
expr_stmt|;
name|dialog
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|enterLoop
argument_list|(
literal|2
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|deleteInExec
name|void
name|tst_QDialog
operator|::
name|deleteInExec
parameter_list|()
block|{
name|QDialog
modifier|*
name|dialog
init|=
operator|new
name|QDialog
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
name|dialog
argument_list|,
literal|"deleteLater"
argument_list|,
name|Qt
operator|::
name|QueuedConnection
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dialog
operator|->
name|exec
argument_list|()
argument_list|,
name|int
argument_list|(
name|QDialog
operator|::
name|Rejected
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|// Throwing exceptions in exec() is not supported on Mac or on WinCE/ARM.
end_comment
begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_NO_EXCEPTIONS
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|Q_OS_MAC
argument_list|)
operator|&&
operator|!
operator|(
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
operator|&&
name|defined
argument_list|(
name|_ARM_
argument_list|)
operator|)
end_if
begin_class
DECL|class|QDialogTestException
class|class
name|QDialogTestException
super|:
specifier|public
name|std
operator|::
name|exception
block|{
block|}
class|;
end_class
begin_class
DECL|class|ExceptionDialog
class|class
name|ExceptionDialog
super|:
specifier|public
name|QDialog
block|{
name|Q_OBJECT
public|public:
DECL|function|ExceptionDialog
name|ExceptionDialog
parameter_list|()
member_init_list|:
name|QDialog
argument_list|(
literal|0
argument_list|)
block|{ }
public|public
name|slots
public|:
DECL|function|throwException
name|void
name|throwException
parameter_list|()
block|{
name|QDialogTestException
name|e
decl_stmt|;
throw|throw
name|e
throw|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|throwInExec
name|void
name|tst_QDialog
operator|::
name|throwInExec
parameter_list|()
block|{
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_LINUX
argument_list|)
comment|// C++ exceptions can't be passed through glib callbacks.  Skip the test if
comment|// we're using the glib event loop.
name|QByteArray
name|dispatcher
init|=
name|QAbstractEventDispatcher
operator|::
name|instance
argument_list|()
operator|->
name|metaObject
argument_list|()
operator|->
name|className
argument_list|()
decl_stmt|;
if|if
condition|(
name|dispatcher
operator|.
name|contains
argument_list|(
literal|"Glib"
argument_list|)
condition|)
block|{
name|QSKIP
argument_list|(
name|qPrintable
argument_list|(
name|QString
argument_list|(
literal|"Throwing exceptions in exec() won't work if %1 event dispatcher is used.\n"
literal|"Try running with QT_NO_GLIB=1 in environment."
argument_list|)
operator|.
name|arg
argument_list|(
name|QString
operator|::
name|fromLatin1
argument_list|(
name|dispatcher
argument_list|)
argument_list|)
argument_list|)
argument_list|,
name|SkipAll
argument_list|)
expr_stmt|;
block|}
endif|#
directive|endif
name|int
name|caughtExceptions
init|=
literal|0
decl_stmt|;
try|try
block|{
name|ExceptionDialog
name|dialog
decl_stmt|;
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|dialog
argument_list|,
literal|"throwException"
argument_list|,
name|Qt
operator|::
name|QueuedConnection
argument_list|)
expr_stmt|;
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|dialog
argument_list|,
literal|"reject"
argument_list|,
name|Qt
operator|::
name|QueuedConnection
argument_list|)
expr_stmt|;
operator|(
name|void
operator|)
name|dialog
operator|.
name|exec
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
modifier|...
parameter_list|)
block|{
operator|++
name|caughtExceptions
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|caughtExceptions
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// From Task 124269
end_comment
begin_function
DECL|function|showSizeGrip
name|void
name|tst_QDialog
operator|::
name|showSizeGrip
parameter_list|()
block|{
ifndef|#
directive|ifndef
name|QT_NO_SIZEGRIP
name|QDialog
name|dialog
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|dialog
operator|.
name|show
argument_list|()
expr_stmt|;
name|QWidget
modifier|*
name|ext
init|=
operator|new
name|QWidget
argument_list|(
operator|&
name|dialog
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|dialog
operator|.
name|extension
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|dialog
operator|.
name|isSizeGripEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|dialog
operator|.
name|setSizeGripEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QPointer
argument_list|<
name|QSizeGrip
argument_list|>
name|sizeGrip
init|=
name|qFindChild
argument_list|<
name|QSizeGrip
operator|*
argument_list|>
argument_list|(
operator|&
name|dialog
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|sizeGrip
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|sizeGrip
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dialog
operator|.
name|isSizeGripEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|dialog
operator|.
name|setExtension
argument_list|(
name|ext
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dialog
operator|.
name|extension
argument_list|()
operator|&&
operator|!
name|dialog
operator|.
name|extension
argument_list|()
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dialog
operator|.
name|isSizeGripEnabled
argument_list|()
argument_list|)
expr_stmt|;
comment|// normal show/hide sequence
name|dialog
operator|.
name|showExtension
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dialog
operator|.
name|extension
argument_list|()
operator|&&
name|dialog
operator|.
name|extension
argument_list|()
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|dialog
operator|.
name|isSizeGripEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|sizeGrip
argument_list|)
expr_stmt|;
name|dialog
operator|.
name|showExtension
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dialog
operator|.
name|extension
argument_list|()
operator|&&
operator|!
name|dialog
operator|.
name|extension
argument_list|()
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dialog
operator|.
name|isSizeGripEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|sizeGrip
operator|=
name|qFindChild
argument_list|<
name|QSizeGrip
operator|*
argument_list|>
argument_list|(
operator|&
name|dialog
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|sizeGrip
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|sizeGrip
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
comment|// show/hide sequence with interleaved size grip update
name|dialog
operator|.
name|showExtension
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dialog
operator|.
name|extension
argument_list|()
operator|&&
name|dialog
operator|.
name|extension
argument_list|()
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|dialog
operator|.
name|isSizeGripEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|sizeGrip
argument_list|)
expr_stmt|;
name|dialog
operator|.
name|setSizeGripEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|dialog
operator|.
name|isSizeGripEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|dialog
operator|.
name|showExtension
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dialog
operator|.
name|extension
argument_list|()
operator|&&
operator|!
name|dialog
operator|.
name|extension
argument_list|()
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|dialog
operator|.
name|isSizeGripEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|dialog
operator|.
name|setSizeGripEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|sizeGrip
operator|=
name|qFindChild
argument_list|<
name|QSizeGrip
operator|*
argument_list|>
argument_list|(
operator|&
name|dialog
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|sizeGrip
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|sizeGrip
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|sizeGrip
operator|->
name|hide
argument_list|()
expr_stmt|;
name|dialog
operator|.
name|hide
argument_list|()
expr_stmt|;
name|dialog
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|sizeGrip
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
endif|#
directive|endif
block|}
end_function
begin_function
DECL|function|setVisible
name|void
name|tst_QDialog
operator|::
name|setVisible
parameter_list|()
block|{
name|QWidget
name|topLevel
decl_stmt|;
name|topLevel
operator|.
name|show
argument_list|()
expr_stmt|;
name|QDialog
modifier|*
name|dialog
init|=
operator|new
name|QDialog
decl_stmt|;
name|dialog
operator|->
name|setLayout
argument_list|(
operator|new
name|QVBoxLayout
argument_list|)
expr_stmt|;
name|dialog
operator|->
name|layout
argument_list|()
operator|->
name|addWidget
argument_list|(
operator|new
name|QPushButton
argument_list|(
literal|"dialog button"
argument_list|)
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|widget
init|=
operator|new
name|QWidget
argument_list|(
operator|&
name|topLevel
argument_list|)
decl_stmt|;
name|widget
operator|->
name|setLayout
argument_list|(
operator|new
name|QVBoxLayout
argument_list|)
expr_stmt|;
name|widget
operator|->
name|layout
argument_list|()
operator|->
name|addWidget
argument_list|(
name|dialog
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|dialog
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|dialog
operator|->
name|isHidden
argument_list|()
argument_list|)
expr_stmt|;
name|widget
operator|->
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|dialog
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|dialog
operator|->
name|isHidden
argument_list|()
argument_list|)
expr_stmt|;
name|widget
operator|->
name|hide
argument_list|()
expr_stmt|;
name|dialog
operator|->
name|hide
argument_list|()
expr_stmt|;
name|widget
operator|->
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|dialog
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dialog
operator|->
name|isHidden
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|TestRejectDialog
class|class
name|TestRejectDialog
super|:
specifier|public
name|QDialog
block|{
public|public:
DECL|function|TestRejectDialog
name|TestRejectDialog
parameter_list|()
member_init_list|:
name|cancelReject
argument_list|(
literal|false
argument_list|)
member_init_list|,
name|called
argument_list|(
literal|0
argument_list|)
block|{}
DECL|function|reject
name|void
name|reject
parameter_list|()
block|{
name|called
operator|++
expr_stmt|;
if|if
condition|(
operator|!
name|cancelReject
condition|)
name|QDialog
operator|::
name|reject
argument_list|()
expr_stmt|;
block|}
DECL|member|cancelReject
name|bool
name|cancelReject
decl_stmt|;
DECL|member|called
name|int
name|called
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|reject
name|void
name|tst_QDialog
operator|::
name|reject
parameter_list|()
block|{
name|TestRejectDialog
name|dialog
decl_stmt|;
name|dialog
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|dialog
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|dialog
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|dialog
operator|.
name|reject
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
operator|!
name|dialog
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dialog
operator|.
name|called
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|dialog
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|dialog
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|dialog
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dialog
operator|.
name|close
argument_list|()
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
operator|!
name|dialog
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dialog
operator|.
name|called
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|dialog
operator|.
name|cancelReject
operator|=
literal|true
expr_stmt|;
name|dialog
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|dialog
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|dialog
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|dialog
operator|.
name|reject
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|dialog
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dialog
operator|.
name|called
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|dialog
operator|.
name|close
argument_list|()
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|dialog
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dialog
operator|.
name|called
argument_list|,
literal|4
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QDialog
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qdialog.moc"
end_include
end_unit
