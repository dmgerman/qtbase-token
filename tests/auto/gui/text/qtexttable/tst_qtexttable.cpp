begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<qtextdocument.h>
end_include
begin_include
include|#
directive|include
file|<qtextdocumentfragment.h>
end_include
begin_include
include|#
directive|include
file|<qtexttable.h>
end_include
begin_include
include|#
directive|include
file|<qdebug.h>
end_include
begin_include
include|#
directive|include
file|<qtextcursor.h>
end_include
begin_include
include|#
directive|include
file|<qtextdocument.h>
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_WIDGETS
end_ifndef
begin_include
include|#
directive|include
file|<qtextedit.h>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_PRINTER
end_ifndef
begin_include
include|#
directive|include
file|<QPagedPaintDevice>
end_include
begin_include
include|#
directive|include
file|<QPainter>
end_include
begin_include
include|#
directive|include
file|<QPaintEngine>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_typedef
DECL|typedef|IntList
typedef|typedef
name|QList
argument_list|<
name|int
argument_list|>
name|IntList
typedef|;
end_typedef
begin_macro
name|QT_FORWARD_DECLARE_CLASS
argument_list|(
argument|QTextDocument
argument_list|)
end_macro
begin_class
DECL|class|tst_QTextTable
class|class
name|tst_QTextTable
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
name|tst_QTextTable
parameter_list|()
constructor_decl|;
public|public
name|slots
public|:
name|void
name|init
parameter_list|()
function_decl|;
name|void
name|cleanup
parameter_list|()
function_decl|;
private|private
name|slots
private|:
name|void
name|cursorPositioning
parameter_list|()
function_decl|;
name|void
name|variousTableModifications
parameter_list|()
function_decl|;
name|void
name|tableShrinking
parameter_list|()
function_decl|;
name|void
name|spans
parameter_list|()
function_decl|;
name|void
name|variousModifications2
parameter_list|()
function_decl|;
name|void
name|tableManager_undo
parameter_list|()
function_decl|;
name|void
name|tableManager_removeCell
parameter_list|()
function_decl|;
name|void
name|rowAt
parameter_list|()
function_decl|;
name|void
name|rowAtWithSpans
parameter_list|()
function_decl|;
name|void
name|multiBlockCells
parameter_list|()
function_decl|;
name|void
name|insertRows
parameter_list|()
function_decl|;
name|void
name|deleteInTable
parameter_list|()
function_decl|;
name|void
name|mergeCells
parameter_list|()
function_decl|;
name|void
name|mergeAndInsert
parameter_list|()
function_decl|;
name|void
name|splitCells
parameter_list|()
function_decl|;
name|void
name|blocksForTableShouldHaveEmptyFormat
parameter_list|()
function_decl|;
name|void
name|removeTableByRemoveRows
parameter_list|()
function_decl|;
name|void
name|removeTableByRemoveColumns
parameter_list|()
function_decl|;
name|void
name|setCellFormat
parameter_list|()
function_decl|;
name|void
name|removeRows1
parameter_list|()
function_decl|;
name|void
name|removeRows2
parameter_list|()
function_decl|;
name|void
name|removeRows3
parameter_list|()
function_decl|;
name|void
name|removeRows4
parameter_list|()
function_decl|;
name|void
name|removeRows5
parameter_list|()
function_decl|;
name|void
name|removeColumns1
parameter_list|()
function_decl|;
name|void
name|removeColumns2
parameter_list|()
function_decl|;
name|void
name|removeColumns3
parameter_list|()
function_decl|;
name|void
name|removeColumns4
parameter_list|()
function_decl|;
name|void
name|removeColumns5
parameter_list|()
function_decl|;
name|void
name|removeColumnsInTableWithMergedRows
parameter_list|()
function_decl|;
ifndef|#
directive|ifndef
name|QT_NO_WIDGETS
name|void
name|QTBUG11282_insertBeforeMergedEnding_data
parameter_list|()
function_decl|;
name|void
name|QTBUG11282_insertBeforeMergedEnding
parameter_list|()
function_decl|;
endif|#
directive|endif
name|void
name|QTBUG22011_insertBeforeRowSpan
parameter_list|()
function_decl|;
ifndef|#
directive|ifndef
name|QT_NO_PRINTER
name|void
name|QTBUG31330_renderBackground
parameter_list|()
function_decl|;
endif|#
directive|endif
private|private:
name|QTextTable
modifier|*
name|create2x2Table
parameter_list|()
function_decl|;
name|QTextTable
modifier|*
name|create4x4Table
parameter_list|()
function_decl|;
name|QTextTable
modifier|*
name|createTable
parameter_list|(
name|int
name|rows
parameter_list|,
name|int
name|cols
parameter_list|)
function_decl|;
DECL|member|doc
name|QTextDocument
modifier|*
name|doc
decl_stmt|;
DECL|member|cursor
name|QTextCursor
name|cursor
decl_stmt|;
block|}
class|;
end_class
begin_constructor
DECL|function|tst_QTextTable
name|tst_QTextTable
operator|::
name|tst_QTextTable
parameter_list|()
block|{}
end_constructor
begin_function
DECL|function|init
name|void
name|tst_QTextTable
operator|::
name|init
parameter_list|()
block|{
name|doc
operator|=
operator|new
name|QTextDocument
expr_stmt|;
name|cursor
operator|=
name|QTextCursor
argument_list|(
name|doc
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|cleanup
name|void
name|tst_QTextTable
operator|::
name|cleanup
parameter_list|()
block|{
name|cursor
operator|=
name|QTextCursor
argument_list|()
expr_stmt|;
operator|delete
name|doc
expr_stmt|;
name|doc
operator|=
literal|0
expr_stmt|;
block|}
end_function
begin_function
DECL|function|cursorPositioning
name|void
name|tst_QTextTable
operator|::
name|cursorPositioning
parameter_list|()
block|{
comment|// ensure the cursor is placed at the beginning of the first cell upon
comment|// table creation
name|QTextTable
modifier|*
name|table
init|=
name|cursor
operator|.
name|insertTable
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|cursor
operator|==
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|firstPosition
argument_list|()
operator|==
name|table
operator|->
name|firstPosition
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|variousTableModifications
name|void
name|tst_QTextTable
operator|::
name|variousTableModifications
parameter_list|()
block|{
name|QTextTableFormat
name|tableFmt
decl_stmt|;
name|QTextTable
modifier|*
name|tab
init|=
name|cursor
operator|.
name|insertTable
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
name|tableFmt
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|->
name|toPlainText
argument_list|()
operator|.
name|length
argument_list|()
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tab
argument_list|,
name|cursor
operator|.
name|currentTable
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tab
operator|->
name|columns
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tab
operator|->
name|rows
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|cursor
operator|.
name|position
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QTextCharFormat
name|fmt
init|=
name|cursor
operator|.
name|charFormat
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|fmt
operator|.
name|objectIndex
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QTextTableCell
name|cell
init|=
name|tab
operator|->
name|cellAt
argument_list|(
name|cursor
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|cell
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|cell
operator|.
name|row
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|cell
operator|.
name|column
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|cursor
operator|.
name|movePosition
argument_list|(
name|QTextCursor
operator|::
name|NextBlock
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|cursor
operator|.
name|position
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|fmt
operator|=
name|cursor
operator|.
name|charFormat
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|fmt
operator|.
name|objectIndex
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|cell
operator|=
name|tab
operator|->
name|cellAt
argument_list|(
name|cursor
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|cell
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|cell
operator|.
name|row
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|cell
operator|.
name|column
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|cursor
operator|.
name|movePosition
argument_list|(
name|QTextCursor
operator|::
name|NextBlock
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|cursor
operator|.
name|position
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|fmt
operator|=
name|cursor
operator|.
name|charFormat
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|fmt
operator|.
name|objectIndex
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|cell
operator|=
name|tab
operator|->
name|cellAt
argument_list|(
name|cursor
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|cell
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|cell
operator|.
name|row
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|cell
operator|.
name|column
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|cursor
operator|.
name|movePosition
argument_list|(
name|QTextCursor
operator|::
name|NextBlock
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|cursor
operator|.
name|position
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|fmt
operator|=
name|cursor
operator|.
name|charFormat
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|fmt
operator|.
name|objectIndex
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|cell
operator|=
name|tab
operator|->
name|cellAt
argument_list|(
name|cursor
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|cell
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|cell
operator|.
name|row
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|cell
operator|.
name|column
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|cursor
operator|.
name|movePosition
argument_list|(
name|QTextCursor
operator|::
name|NextBlock
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|cursor
operator|.
name|position
argument_list|()
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|fmt
operator|=
name|cursor
operator|.
name|charFormat
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|fmt
operator|.
name|objectIndex
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|cell
operator|=
name|tab
operator|->
name|cellAt
argument_list|(
name|cursor
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|cell
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|cursor
operator|.
name|movePosition
argument_list|(
name|QTextCursor
operator|::
name|NextBlock
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|cursor
operator|.
name|position
argument_list|()
argument_list|,
literal|5
argument_list|)
expr_stmt|;
comment|// check we can't delete the cells with the cursor
name|cursor
operator|.
name|movePosition
argument_list|(
name|QTextCursor
operator|::
name|Start
argument_list|)
expr_stmt|;
name|cursor
operator|.
name|movePosition
argument_list|(
name|QTextCursor
operator|::
name|NextBlock
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|cursor
operator|.
name|position
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|cursor
operator|.
name|deleteChar
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|->
name|toPlainText
argument_list|()
operator|.
name|length
argument_list|()
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|cursor
operator|.
name|movePosition
argument_list|(
name|QTextCursor
operator|::
name|NextBlock
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|cursor
operator|.
name|position
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|cursor
operator|.
name|deleteChar
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|->
name|toPlainText
argument_list|()
operator|.
name|length
argument_list|()
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|cursor
operator|.
name|deletePreviousChar
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|cursor
operator|.
name|position
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|->
name|toPlainText
argument_list|()
operator|.
name|length
argument_list|()
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QTextTable
modifier|*
name|table
init|=
name|cursor
operator|.
name|currentTable
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|rows
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|columns
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|table
operator|->
name|insertRows
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|rows
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|columns
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|->
name|toPlainText
argument_list|()
operator|.
name|length
argument_list|()
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|table
operator|->
name|insertColumns
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|rows
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|columns
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|->
name|toPlainText
argument_list|()
operator|.
name|length
argument_list|()
argument_list|,
literal|13
argument_list|)
expr_stmt|;
name|table
operator|->
name|resize
argument_list|(
literal|4
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|rows
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|columns
argument_list|()
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|->
name|toPlainText
argument_list|()
operator|.
name|length
argument_list|()
argument_list|,
literal|21
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|tableShrinking
name|void
name|tst_QTextTable
operator|::
name|tableShrinking
parameter_list|()
block|{
name|QTextTableFormat
name|tableFmt
decl_stmt|;
name|cursor
operator|.
name|insertTable
argument_list|(
literal|3
argument_list|,
literal|4
argument_list|,
name|tableFmt
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|->
name|toPlainText
argument_list|()
operator|.
name|length
argument_list|()
argument_list|,
literal|13
argument_list|)
expr_stmt|;
name|QTextTable
modifier|*
name|table
init|=
name|cursor
operator|.
name|currentTable
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|rows
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|columns
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|table
operator|->
name|removeRows
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|rows
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|columns
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|->
name|toPlainText
argument_list|()
operator|.
name|length
argument_list|()
argument_list|,
literal|9
argument_list|)
expr_stmt|;
name|table
operator|->
name|removeColumns
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|rows
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|columns
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|->
name|toPlainText
argument_list|()
operator|.
name|length
argument_list|()
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|table
operator|->
name|resize
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|rows
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|columns
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|->
name|toPlainText
argument_list|()
operator|.
name|length
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|spans
name|void
name|tst_QTextTable
operator|::
name|spans
parameter_list|()
block|{
name|QTextTableFormat
name|tableFmt
decl_stmt|;
name|cursor
operator|.
name|insertTable
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
name|tableFmt
argument_list|)
expr_stmt|;
name|QTextTable
modifier|*
name|table
init|=
name|cursor
operator|.
name|currentTable
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|!=
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|mergeCells
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|rows
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|columns
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|==
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|mergeCells
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|rows
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|columns
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|variousModifications2
name|void
name|tst_QTextTable
operator|::
name|variousModifications2
parameter_list|()
block|{
name|QTextTableFormat
name|tableFmt
decl_stmt|;
name|cursor
operator|.
name|insertTable
argument_list|(
literal|2
argument_list|,
literal|5
argument_list|,
name|tableFmt
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|->
name|toPlainText
argument_list|()
operator|.
name|length
argument_list|()
argument_list|,
literal|11
argument_list|)
expr_stmt|;
name|QTextTable
modifier|*
name|table
init|=
name|cursor
operator|.
name|currentTable
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|cursor
operator|.
name|position
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|rows
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|columns
argument_list|()
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|table
operator|->
name|insertColumns
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|rows
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|columns
argument_list|()
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|table
operator|->
name|insertColumns
argument_list|(
literal|6
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|rows
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|columns
argument_list|()
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|table
operator|->
name|insertRows
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|rows
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|columns
argument_list|()
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|table
operator|->
name|insertRows
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|rows
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|columns
argument_list|()
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|table
operator|->
name|removeRows
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|rows
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|columns
argument_list|()
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|table
operator|->
name|removeRows
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|rows
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|columns
argument_list|()
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|table
operator|->
name|removeColumns
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|rows
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|columns
argument_list|()
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|table
operator|->
name|removeColumns
argument_list|(
literal|5
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|rows
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|columns
argument_list|()
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|tableFmt
operator|=
name|table
operator|->
name|format
argument_list|()
expr_stmt|;
name|table
operator|->
name|insertColumns
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|table
operator|->
name|setFormat
argument_list|(
name|tableFmt
argument_list|)
expr_stmt|;
name|table
operator|->
name|insertColumns
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|columns
argument_list|()
argument_list|,
literal|7
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|tableManager_undo
name|void
name|tst_QTextTable
operator|::
name|tableManager_undo
parameter_list|()
block|{
name|QTextTableFormat
name|fmt
decl_stmt|;
name|fmt
operator|.
name|setBorder
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QTextTable
modifier|*
name|table
init|=
name|cursor
operator|.
name|insertTable
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
name|fmt
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|format
argument_list|()
operator|.
name|border
argument_list|()
argument_list|,
name|qreal
argument_list|(
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|fmt
operator|.
name|setBorder
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|table
operator|->
name|setFormat
argument_list|(
name|fmt
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|format
argument_list|()
operator|.
name|border
argument_list|()
argument_list|,
name|qreal
argument_list|(
literal|20
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|->
name|undo
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|format
argument_list|()
operator|.
name|border
argument_list|()
argument_list|,
name|qreal
argument_list|(
literal|10
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|tableManager_removeCell
name|void
name|tst_QTextTable
operator|::
name|tableManager_removeCell
parameter_list|()
block|{
comment|// essentially a test for TableManager::removeCell, in particular to remove empty items from the rowlist.
comment|// If it fails it'll triger assertions inside TableManager. Yeah, not pretty, should VERIFY here ;(
name|cursor
operator|.
name|insertTable
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
name|QTextTableFormat
argument_list|()
argument_list|)
expr_stmt|;
name|doc
operator|->
name|undo
argument_list|()
expr_stmt|;
comment|// ###
name|QVERIFY
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|rowAt
name|void
name|tst_QTextTable
operator|::
name|rowAt
parameter_list|()
block|{
comment|// test TablePrivate::rowAt
name|QTextTable
modifier|*
name|table
init|=
name|cursor
operator|.
name|insertTable
argument_list|(
literal|4
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|rows
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|columns
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QTextCursor
name|cell00Cursor
init|=
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
decl_stmt|;
name|QTextCursor
name|cell10Cursor
init|=
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
decl_stmt|;
name|QTextCursor
name|cell20Cursor
init|=
name|table
operator|->
name|cellAt
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
decl_stmt|;
name|QTextCursor
name|cell21Cursor
init|=
name|table
operator|->
name|cellAt
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
decl_stmt|;
name|QTextCursor
name|cell30Cursor
init|=
name|table
operator|->
name|cellAt
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
name|cell00Cursor
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
argument_list|,
name|cell00Cursor
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
name|cell10Cursor
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
argument_list|,
name|cell10Cursor
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
name|cell20Cursor
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
argument_list|,
name|cell20Cursor
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
name|cell30Cursor
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
argument_list|,
name|cell30Cursor
argument_list|)
expr_stmt|;
name|table
operator|->
name|mergeCells
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|rows
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|columns
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|cell00Cursor
operator|==
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|cell10Cursor
operator|==
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|cell10Cursor
operator|==
name|table
operator|->
name|cellAt
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|cell21Cursor
operator|==
name|table
operator|->
name|cellAt
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|cell30Cursor
operator|==
name|table
operator|->
name|cellAt
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|->
name|mergeCells
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|rows
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|columns
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|cell00Cursor
operator|==
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|cell00Cursor
operator|==
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|cell10Cursor
operator|==
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|cell10Cursor
operator|==
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|cell10Cursor
operator|==
name|table
operator|->
name|cellAt
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|cell10Cursor
operator|==
name|table
operator|->
name|cellAt
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|cell30Cursor
operator|==
name|table
operator|->
name|cellAt
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|rowAtWithSpans
name|void
name|tst_QTextTable
operator|::
name|rowAtWithSpans
parameter_list|()
block|{
name|QTextTable
modifier|*
name|table
init|=
name|cursor
operator|.
name|insertTable
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|rows
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|columns
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|table
operator|->
name|mergeCells
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|rowSpan
argument_list|()
operator|==
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|rows
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|columns
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|table
operator|->
name|mergeCells
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|columnSpan
argument_list|()
operator|==
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|rows
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|columns
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|multiBlockCells
name|void
name|tst_QTextTable
operator|::
name|multiBlockCells
parameter_list|()
block|{
comment|// little testcase for multi-block cells
name|QTextTable
modifier|*
name|table
init|=
name|cursor
operator|.
name|insertTable
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|cursor
operator|==
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
argument_list|)
expr_stmt|;
name|cursor
operator|.
name|insertText
argument_list|(
literal|"Hello"
argument_list|)
expr_stmt|;
name|cursor
operator|.
name|insertBlock
argument_list|(
name|QTextBlockFormat
argument_list|()
argument_list|)
expr_stmt|;
name|cursor
operator|.
name|insertText
argument_list|(
literal|"World"
argument_list|)
expr_stmt|;
name|cursor
operator|.
name|movePosition
argument_list|(
name|QTextCursor
operator|::
name|Left
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|==
name|table
operator|->
name|cellAt
argument_list|(
name|cursor
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|insertRows
name|void
name|tst_QTextTable
operator|::
name|insertRows
parameter_list|()
block|{
comment|// little testcase for multi-block cells
name|QTextTable
modifier|*
name|table
init|=
name|cursor
operator|.
name|insertTable
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|cursor
operator|==
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|->
name|insertRows
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|rows
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|table
operator|->
name|insertRows
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|rows
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|table
operator|->
name|insertRows
argument_list|(
operator|-
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|rows
argument_list|()
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|table
operator|->
name|insertRows
argument_list|(
literal|5
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|rows
argument_list|()
argument_list|,
literal|7
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|deleteInTable
name|void
name|tst_QTextTable
operator|::
name|deleteInTable
parameter_list|()
block|{
name|QTextTable
modifier|*
name|table
init|=
name|cursor
operator|.
name|insertTable
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Blah"
argument_list|)
expr_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Foo"
argument_list|)
expr_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Bar"
argument_list|)
expr_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Hah"
argument_list|)
expr_stmt|;
name|cursor
operator|=
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
expr_stmt|;
name|cursor
operator|.
name|movePosition
argument_list|(
name|QTextCursor
operator|::
name|PreviousBlock
argument_list|,
name|QTextCursor
operator|::
name|KeepAnchor
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
name|cursor
operator|.
name|position
argument_list|()
argument_list|)
operator|.
name|row
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
name|cursor
operator|.
name|position
argument_list|()
argument_list|)
operator|.
name|column
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|cursor
operator|.
name|removeSelectedText
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|columns
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|rows
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
comment|// verify table is still all in shape. Only the text inside should get deleted
for|for
control|(
name|int
name|row
init|=
literal|0
init|;
name|row
operator|<
name|table
operator|->
name|rows
argument_list|()
condition|;
operator|++
name|row
control|)
for|for
control|(
name|int
name|col
init|=
literal|0
init|;
name|col
operator|<
name|table
operator|->
name|columns
argument_list|()
condition|;
operator|++
name|col
control|)
block|{
specifier|const
name|QTextTableCell
name|cell
init|=
name|table
operator|->
name|cellAt
argument_list|(
name|row
argument_list|,
name|col
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|cell
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|cell
operator|.
name|rowSpan
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|cell
operator|.
name|columnSpan
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|create2x2Table
name|QTextTable
modifier|*
name|tst_QTextTable
operator|::
name|create2x2Table
parameter_list|()
block|{
name|cleanup
argument_list|()
expr_stmt|;
name|init
argument_list|()
expr_stmt|;
name|QTextTable
modifier|*
name|table
init|=
name|cursor
operator|.
name|insertTable
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Blah"
argument_list|)
expr_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Foo"
argument_list|)
expr_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Bar"
argument_list|)
expr_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Hah"
argument_list|)
expr_stmt|;
return|return
name|table
return|;
block|}
end_function
begin_function
DECL|function|create4x4Table
name|QTextTable
modifier|*
name|tst_QTextTable
operator|::
name|create4x4Table
parameter_list|()
block|{
name|cleanup
argument_list|()
expr_stmt|;
name|init
argument_list|()
expr_stmt|;
name|QTextTable
modifier|*
name|table
init|=
name|cursor
operator|.
name|insertTable
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Blah"
argument_list|)
expr_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Foo"
argument_list|)
expr_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Bar"
argument_list|)
expr_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Hah"
argument_list|)
expr_stmt|;
return|return
name|table
return|;
block|}
end_function
begin_function
DECL|function|createTable
name|QTextTable
modifier|*
name|tst_QTextTable
operator|::
name|createTable
parameter_list|(
name|int
name|rows
parameter_list|,
name|int
name|cols
parameter_list|)
block|{
name|cleanup
argument_list|()
expr_stmt|;
name|init
argument_list|()
expr_stmt|;
name|QTextTable
modifier|*
name|table
init|=
name|cursor
operator|.
name|insertTable
argument_list|(
name|rows
argument_list|,
name|cols
argument_list|)
decl_stmt|;
return|return
name|table
return|;
block|}
end_function
begin_function
DECL|function|mergeCells
name|void
name|tst_QTextTable
operator|::
name|mergeCells
parameter_list|()
block|{
name|QTextTable
modifier|*
name|table
init|=
name|create4x4Table
argument_list|()
decl_stmt|;
name|table
operator|->
name|mergeCells
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|==
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|mergeCells
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|==
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|==
name|table
operator|->
name|cellAt
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|==
name|table
operator|->
name|cellAt
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|=
name|create4x4Table
argument_list|()
expr_stmt|;
name|table
operator|->
name|mergeCells
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|==
name|table
operator|->
name|cellAt
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|mergeCells
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|==
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|==
name|table
operator|->
name|cellAt
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|==
name|table
operator|->
name|cellAt
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|=
name|create4x4Table
argument_list|()
expr_stmt|;
name|table
operator|->
name|mergeCells
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|==
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|==
name|table
operator|->
name|cellAt
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|==
name|table
operator|->
name|cellAt
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
comment|// should do nothing
name|table
operator|->
name|mergeCells
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|==
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|==
name|table
operator|->
name|cellAt
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|==
name|table
operator|->
name|cellAt
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|=
name|create2x2Table
argument_list|()
expr_stmt|;
name|table
operator|->
name|mergeCells
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|table
operator|->
name|mergeCells
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|==
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|==
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|==
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QTextBlock
name|block
init|=
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|block
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|block
operator|.
name|text
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"Blah Foo"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|block
operator|.
name|next
argument_list|()
operator|.
name|text
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"Hah"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|block
operator|.
name|next
argument_list|()
operator|.
name|next
argument_list|()
operator|.
name|text
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"Bar"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|=
name|create4x4Table
argument_list|()
expr_stmt|;
name|QTextCursor
name|cursor
init|=
name|table
operator|->
name|cellAt
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
decl_stmt|;
name|QTextTable
modifier|*
name|t2
init|=
name|cursor
operator|.
name|insertTable
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|t2
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Test"
argument_list|)
expr_stmt|;
name|table
operator|->
name|mergeCells
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|cursor
operator|=
name|table
operator|->
name|cellAt
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
expr_stmt|;
name|QTextFrame
modifier|*
name|frame
init|=
name|cursor
operator|.
name|currentFrame
argument_list|()
decl_stmt|;
name|QTextFrame
operator|::
name|iterator
name|it
init|=
name|frame
operator|->
name|begin
argument_list|()
decl_stmt|;
comment|// find the embedded table
while|while
condition|(
name|it
operator|!=
name|frame
operator|->
name|end
argument_list|()
operator|&&
operator|!
name|it
operator|.
name|currentFrame
argument_list|()
condition|)
operator|++
name|it
expr_stmt|;
name|table
operator|=
name|qobject_cast
argument_list|<
name|QTextTable
operator|*
argument_list|>
argument_list|(
name|it
operator|.
name|currentFrame
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
argument_list|)
expr_stmt|;
if|if
condition|(
name|table
condition|)
block|{
name|cursor
operator|=
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|cursor
operator|.
name|block
argument_list|()
operator|.
name|text
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"Test"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|table
operator|=
name|create2x2Table
argument_list|()
expr_stmt|;
name|table
operator|->
name|mergeCells
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|!=
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|==
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// should do nothing
name|table
operator|->
name|mergeCells
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|!=
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|==
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|mergeAndInsert
name|void
name|tst_QTextTable
operator|::
name|mergeAndInsert
parameter_list|()
block|{
name|QTextTable
modifier|*
name|table
init|=
name|cursor
operator|.
name|insertTable
argument_list|(
literal|4
argument_list|,
literal|3
argument_list|)
decl_stmt|;
name|table
operator|->
name|mergeCells
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
literal|3
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|table
operator|->
name|mergeCells
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|3
argument_list|)
expr_stmt|;
comment|//Don't crash !
name|table
operator|->
name|insertColumns
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|columns
argument_list|()
argument_list|,
literal|5
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|splitCells
name|void
name|tst_QTextTable
operator|::
name|splitCells
parameter_list|()
block|{
name|QTextTable
modifier|*
name|table
init|=
name|create4x4Table
argument_list|()
decl_stmt|;
name|table
operator|->
name|mergeCells
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|==
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|==
name|table
operator|->
name|cellAt
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|==
name|table
operator|->
name|cellAt
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|splitCell
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|==
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|!=
name|table
operator|->
name|cellAt
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|!=
name|table
operator|->
name|cellAt
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|splitCell
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|!=
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|!=
name|table
operator|->
name|cellAt
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|!=
name|table
operator|->
name|cellAt
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|=
name|create4x4Table
argument_list|()
expr_stmt|;
name|table
operator|->
name|mergeCells
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|==
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|==
name|table
operator|->
name|cellAt
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|==
name|table
operator|->
name|cellAt
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|splitCell
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|==
name|table
operator|->
name|cellAt
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|!=
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|!=
name|table
operator|->
name|cellAt
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|splitCell
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|!=
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|!=
name|table
operator|->
name|cellAt
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|!=
name|table
operator|->
name|cellAt
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|=
name|create4x4Table
argument_list|()
expr_stmt|;
name|table
operator|->
name|mergeCells
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|==
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|==
name|table
operator|->
name|cellAt
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|==
name|table
operator|->
name|cellAt
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|splitCell
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|!=
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|!=
name|table
operator|->
name|cellAt
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|!=
name|table
operator|->
name|cellAt
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|=
name|createTable
argument_list|(
literal|2
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|table
operator|->
name|mergeCells
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|table
operator|->
name|mergeCells
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|==
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|==
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|splitCell
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|!=
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|==
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|=
name|createTable
argument_list|(
literal|2
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|table
operator|->
name|mergeCells
argument_list|(
literal|0
argument_list|,
literal|4
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|4
argument_list|)
operator|==
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|splitCell
argument_list|(
literal|0
argument_list|,
literal|4
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|4
argument_list|)
operator|!=
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|4
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|blocksForTableShouldHaveEmptyFormat
name|void
name|tst_QTextTable
operator|::
name|blocksForTableShouldHaveEmptyFormat
parameter_list|()
block|{
name|QTextBlockFormat
name|fmt
decl_stmt|;
name|fmt
operator|.
name|setProperty
argument_list|(
name|QTextFormat
operator|::
name|UserProperty
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|cursor
operator|.
name|insertBlock
argument_list|(
name|fmt
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|cursor
operator|.
name|blockFormat
argument_list|()
operator|.
name|hasProperty
argument_list|(
name|QTextFormat
operator|::
name|UserProperty
argument_list|)
argument_list|)
expr_stmt|;
name|QTextTable
modifier|*
name|table
init|=
name|cursor
operator|.
name|insertTable
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|blockFormat
argument_list|()
operator|.
name|hasProperty
argument_list|(
name|QTextFormat
operator|::
name|UserProperty
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|userPropCount
init|=
literal|0
decl_stmt|;
for|for
control|(
name|QTextBlock
name|block
init|=
name|doc
operator|->
name|begin
argument_list|()
init|;
name|block
operator|.
name|isValid
argument_list|()
condition|;
name|block
operator|=
name|block
operator|.
name|next
argument_list|()
control|)
block|{
if|if
condition|(
name|block
operator|.
name|blockFormat
argument_list|()
operator|.
name|hasProperty
argument_list|(
name|QTextFormat
operator|::
name|UserProperty
argument_list|)
condition|)
name|userPropCount
operator|++
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|userPropCount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|removeTableByRemoveRows
name|void
name|tst_QTextTable
operator|::
name|removeTableByRemoveRows
parameter_list|()
block|{
name|QPointer
argument_list|<
name|QTextTable
argument_list|>
name|table1
init|=
name|QTextCursor
argument_list|(
name|cursor
argument_list|)
operator|.
name|insertTable
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|QPointer
argument_list|<
name|QTextTable
argument_list|>
name|table2
init|=
name|QTextCursor
argument_list|(
name|cursor
argument_list|)
operator|.
name|insertTable
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|QPointer
argument_list|<
name|QTextTable
argument_list|>
name|table3
init|=
name|QTextCursor
argument_list|(
name|cursor
argument_list|)
operator|.
name|insertTable
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|table1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table3
argument_list|)
expr_stmt|;
name|table2
operator|->
name|removeRows
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table3
argument_list|)
expr_stmt|;
name|table2
operator|->
name|removeRows
argument_list|(
literal|0
argument_list|,
name|table2
operator|->
name|rows
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|table2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table3
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|removeTableByRemoveColumns
name|void
name|tst_QTextTable
operator|::
name|removeTableByRemoveColumns
parameter_list|()
block|{
name|QPointer
argument_list|<
name|QTextTable
argument_list|>
name|table1
init|=
name|QTextCursor
argument_list|(
name|cursor
argument_list|)
operator|.
name|insertTable
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|QPointer
argument_list|<
name|QTextTable
argument_list|>
name|table2
init|=
name|QTextCursor
argument_list|(
name|cursor
argument_list|)
operator|.
name|insertTable
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|QPointer
argument_list|<
name|QTextTable
argument_list|>
name|table3
init|=
name|QTextCursor
argument_list|(
name|cursor
argument_list|)
operator|.
name|insertTable
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|table1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table3
argument_list|)
expr_stmt|;
name|table2
operator|->
name|removeColumns
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table3
argument_list|)
expr_stmt|;
name|table2
operator|->
name|removeColumns
argument_list|(
literal|0
argument_list|,
name|table2
operator|->
name|columns
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|table2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table3
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setCellFormat
name|void
name|tst_QTextTable
operator|::
name|setCellFormat
parameter_list|()
block|{
name|QTextTable
modifier|*
name|table
init|=
name|cursor
operator|.
name|insertTable
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"First"
argument_list|)
expr_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Second"
argument_list|)
expr_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Third"
argument_list|)
expr_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Fourth"
argument_list|)
expr_stmt|;
name|QTextTableCell
name|cell
init|=
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QTextCharFormat
name|fmt
decl_stmt|;
name|fmt
operator|.
name|setObjectIndex
argument_list|(
literal|23
argument_list|)
expr_stmt|;
name|fmt
operator|.
name|setBackground
argument_list|(
name|Qt
operator|::
name|blue
argument_list|)
expr_stmt|;
name|fmt
operator|.
name|setTableCellColumnSpan
argument_list|(
literal|25
argument_list|)
expr_stmt|;
name|fmt
operator|.
name|setTableCellRowSpan
argument_list|(
literal|42
argument_list|)
expr_stmt|;
name|cell
operator|.
name|setFormat
argument_list|(
name|fmt
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|cell
operator|.
name|format
argument_list|()
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|blue
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|cell
operator|.
name|format
argument_list|()
operator|.
name|tableCellColumnSpan
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|cell
operator|.
name|format
argument_list|()
operator|.
name|tableCellRowSpan
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|removeRows1
name|void
name|tst_QTextTable
operator|::
name|removeRows1
parameter_list|()
block|{
name|QTextTable
modifier|*
name|table
init|=
name|cursor
operator|.
name|insertTable
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"First"
argument_list|)
expr_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Second"
argument_list|)
expr_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Third"
argument_list|)
expr_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Fourth"
argument_list|)
expr_stmt|;
name|table
operator|->
name|removeRows
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|rows
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|columns
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|block
argument_list|()
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Third"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|block
argument_list|()
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Fourth"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|removeRows2
name|void
name|tst_QTextTable
operator|::
name|removeRows2
parameter_list|()
block|{
name|QTextTable
modifier|*
name|table
init|=
name|cursor
operator|.
name|insertTable
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"First"
argument_list|)
expr_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Second"
argument_list|)
expr_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Third"
argument_list|)
expr_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Fourth"
argument_list|)
expr_stmt|;
name|table
operator|->
name|removeRows
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|rows
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|columns
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|block
argument_list|()
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"First"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|block
argument_list|()
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Second"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|removeRows3
name|void
name|tst_QTextTable
operator|::
name|removeRows3
parameter_list|()
block|{
name|QTextTable
modifier|*
name|table
init|=
name|cursor
operator|.
name|insertTable
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"First"
argument_list|)
expr_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Second"
argument_list|)
expr_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Third"
argument_list|)
expr_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Fourth"
argument_list|)
expr_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Fifth"
argument_list|)
expr_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Sixth"
argument_list|)
expr_stmt|;
name|table
operator|->
name|removeRows
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|rows
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|columns
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|block
argument_list|()
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"First"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|block
argument_list|()
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Second"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|block
argument_list|()
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Fifth"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|block
argument_list|()
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Sixth"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|removeRows4
name|void
name|tst_QTextTable
operator|::
name|removeRows4
parameter_list|()
block|{
name|QTextTable
modifier|*
name|table
init|=
name|cursor
operator|.
name|insertTable
argument_list|(
literal|4
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"First"
argument_list|)
expr_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Second"
argument_list|)
expr_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Third"
argument_list|)
expr_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Fourth"
argument_list|)
expr_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Fifth"
argument_list|)
expr_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Sixth"
argument_list|)
expr_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Seventh"
argument_list|)
expr_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Eighth"
argument_list|)
expr_stmt|;
name|table
operator|->
name|removeRows
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|rows
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|columns
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|block
argument_list|()
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"First"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|block
argument_list|()
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Second"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|block
argument_list|()
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Seventh"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|block
argument_list|()
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Eighth"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|removeRows5
name|void
name|tst_QTextTable
operator|::
name|removeRows5
parameter_list|()
block|{
name|QTextTable
modifier|*
name|table
init|=
name|cursor
operator|.
name|insertTable
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"First"
argument_list|)
expr_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Second"
argument_list|)
expr_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Third"
argument_list|)
expr_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Fourth"
argument_list|)
expr_stmt|;
name|table
operator|->
name|insertRows
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|table
operator|->
name|mergeCells
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|table
operator|->
name|removeRows
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|rows
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|columns
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|block
argument_list|()
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"First"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|block
argument_list|()
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Second"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|block
argument_list|()
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Third"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|block
argument_list|()
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Fourth"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|removeColumns1
name|void
name|tst_QTextTable
operator|::
name|removeColumns1
parameter_list|()
block|{
name|QTextTable
modifier|*
name|table
init|=
name|cursor
operator|.
name|insertTable
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"First"
argument_list|)
expr_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Second"
argument_list|)
expr_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Third"
argument_list|)
expr_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Fourth"
argument_list|)
expr_stmt|;
name|table
operator|->
name|removeColumns
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|rows
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|columns
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|block
argument_list|()
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Second"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|block
argument_list|()
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Fourth"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|removeColumns2
name|void
name|tst_QTextTable
operator|::
name|removeColumns2
parameter_list|()
block|{
name|QTextTable
modifier|*
name|table
init|=
name|cursor
operator|.
name|insertTable
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"First"
argument_list|)
expr_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Second"
argument_list|)
expr_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Third"
argument_list|)
expr_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Fourth"
argument_list|)
expr_stmt|;
name|table
operator|->
name|removeColumns
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|rows
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|columns
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|block
argument_list|()
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"First"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|block
argument_list|()
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Third"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|removeColumns3
name|void
name|tst_QTextTable
operator|::
name|removeColumns3
parameter_list|()
block|{
name|QTextTable
modifier|*
name|table
init|=
name|cursor
operator|.
name|insertTable
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|)
decl_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"First"
argument_list|)
expr_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Second"
argument_list|)
expr_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Third"
argument_list|)
expr_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Fourth"
argument_list|)
expr_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Fifth"
argument_list|)
expr_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Sixth"
argument_list|)
expr_stmt|;
name|table
operator|->
name|removeColumns
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|rows
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|columns
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|block
argument_list|()
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"First"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|block
argument_list|()
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Third"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|block
argument_list|()
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Fourth"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|block
argument_list|()
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Sixth"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|removeColumns4
name|void
name|tst_QTextTable
operator|::
name|removeColumns4
parameter_list|()
block|{
name|QTextTable
modifier|*
name|table
init|=
name|cursor
operator|.
name|insertTable
argument_list|(
literal|2
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"First"
argument_list|)
expr_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Second"
argument_list|)
expr_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Third"
argument_list|)
expr_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Fourth"
argument_list|)
expr_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Fifth"
argument_list|)
expr_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Sixth"
argument_list|)
expr_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Seventh"
argument_list|)
expr_stmt|;
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|insertText
argument_list|(
literal|"Eighth"
argument_list|)
expr_stmt|;
name|table
operator|->
name|removeColumns
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|rows
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|columns
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|block
argument_list|()
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"First"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|block
argument_list|()
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Fourth"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|block
argument_list|()
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Fifth"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|.
name|firstCursorPosition
argument_list|()
operator|.
name|block
argument_list|()
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Eighth"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|removeColumns5
name|void
name|tst_QTextTable
operator|::
name|removeColumns5
parameter_list|()
block|{
name|QTextTable
modifier|*
name|table
init|=
name|cursor
operator|.
name|insertTable
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|QTextCursor
name|tc
argument_list|(
name|doc
argument_list|)
decl_stmt|;
name|tc
operator|.
name|setPosition
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
operator|.
name|firstPosition
argument_list|()
argument_list|)
expr_stmt|;
name|tc
operator|.
name|setPosition
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
operator|.
name|firstPosition
argument_list|()
argument_list|,
name|QTextCursor
operator|::
name|KeepAnchor
argument_list|)
expr_stmt|;
name|table
operator|->
name|mergeCells
argument_list|(
name|tc
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|rows
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|columns
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|firstPosition
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|.
name|firstPosition
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
operator|.
name|firstPosition
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
operator|.
name|firstPosition
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|.
name|firstPosition
argument_list|()
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|.
name|firstPosition
argument_list|()
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
operator|.
name|firstPosition
argument_list|()
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
operator|.
name|firstPosition
argument_list|()
argument_list|,
literal|8
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
operator|.
name|firstPosition
argument_list|()
argument_list|,
literal|9
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
operator|.
name|rowSpan
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
operator|.
name|columnSpan
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
operator|.
name|firstPosition
argument_list|()
argument_list|,
literal|9
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
operator|.
name|firstPosition
argument_list|()
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|)
operator|.
name|firstPosition
argument_list|()
argument_list|,
literal|11
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
operator|.
name|firstPosition
argument_list|()
argument_list|,
literal|9
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
operator|.
name|firstPosition
argument_list|()
argument_list|,
literal|9
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
operator|.
name|firstPosition
argument_list|()
argument_list|,
literal|12
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
operator|.
name|firstPosition
argument_list|()
argument_list|,
literal|13
argument_list|)
expr_stmt|;
name|table
operator|->
name|removeColumns
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|rows
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|columns
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|firstPosition
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|.
name|firstPosition
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
operator|.
name|firstPosition
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|.
name|firstPosition
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|.
name|firstPosition
argument_list|()
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
operator|.
name|firstPosition
argument_list|()
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
operator|.
name|firstPosition
argument_list|()
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
operator|.
name|rowSpan
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
operator|.
name|columnSpan
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
operator|.
name|firstPosition
argument_list|()
argument_list|,
literal|8
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
operator|.
name|firstPosition
argument_list|()
argument_list|,
literal|9
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
operator|.
name|firstPosition
argument_list|()
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
operator|.
name|firstPosition
argument_list|()
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|cellAt
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
operator|.
name|firstPosition
argument_list|()
argument_list|,
literal|11
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|removeColumnsInTableWithMergedRows
name|void
name|tst_QTextTable
operator|::
name|removeColumnsInTableWithMergedRows
parameter_list|()
block|{
name|QTextTable
modifier|*
name|table
init|=
name|cursor
operator|.
name|insertTable
argument_list|(
literal|3
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|table
operator|->
name|mergeCells
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|rows
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|columns
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|table
operator|->
name|removeColumns
argument_list|(
literal|0
argument_list|,
name|table
operator|->
name|columns
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|rows
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|columns
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_WIDGETS
end_ifndef
begin_function
DECL|function|QTBUG11282_insertBeforeMergedEnding_data
name|void
name|tst_QTextTable
operator|::
name|QTBUG11282_insertBeforeMergedEnding_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rows"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"columns"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QList
argument_list|<
name|int
argument_list|>
argument_list|>
argument_list|(
literal|"merge"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QList
argument_list|<
name|int
argument_list|>
argument_list|>
argument_list|(
literal|"insert"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"2x3, merge two, insert one"
argument_list|)
operator|<<
literal|2
operator|<<
literal|3
operator|<<
operator|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
literal|1
operator|<<
literal|2
operator|<<
literal|2
operator|)
operator|<<
operator|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
literal|1
operator|<<
literal|1
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"3x4, merge three, insert one"
argument_list|)
operator|<<
literal|3
operator|<<
literal|4
operator|<<
operator|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
literal|1
operator|<<
literal|3
operator|<<
literal|3
operator|)
operator|<<
operator|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
literal|1
operator|<<
literal|1
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"4x3, merge two, insert two"
argument_list|)
operator|<<
literal|4
operator|<<
literal|3
operator|<<
operator|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
literal|1
operator|<<
literal|4
operator|<<
literal|2
operator|)
operator|<<
operator|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
literal|1
operator|<<
literal|2
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"4x4, merge middle two, insert one"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
operator|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
literal|1
operator|<<
literal|4
operator|<<
literal|2
operator|)
operator|<<
operator|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
literal|1
operator|<<
literal|1
operator|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|QTBUG11282_insertBeforeMergedEnding
name|void
name|tst_QTextTable
operator|::
name|QTBUG11282_insertBeforeMergedEnding
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|rows
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|columns
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|,
name|merge
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|,
name|insert
argument_list|)
expr_stmt|;
name|QTextTable
modifier|*
name|table
init|=
name|cursor
operator|.
name|insertTable
argument_list|(
name|rows
argument_list|,
name|columns
argument_list|)
decl_stmt|;
name|QTextEdit
modifier|*
name|textEdit
init|=
operator|new
name|QTextEdit
decl_stmt|;
name|textEdit
operator|->
name|setDocument
argument_list|(
name|doc
argument_list|)
expr_stmt|;
name|textEdit
operator|->
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
name|textEdit
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|mergeCells
argument_list|(
literal|0
argument_list|,
name|merge
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
name|merge
operator|.
name|at
argument_list|(
literal|1
argument_list|)
argument_list|,
name|merge
operator|.
name|at
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
comment|//Don't crash !
name|table
operator|->
name|insertColumns
argument_list|(
name|insert
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
name|insert
operator|.
name|at
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|//Check that the final size is what we expected
name|QCOMPARE
argument_list|(
name|table
operator|->
name|rows
argument_list|()
argument_list|,
name|rows
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|columns
argument_list|()
argument_list|,
name|columns
operator|+
name|insert
operator|.
name|at
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
operator|delete
name|textEdit
expr_stmt|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_function
DECL|function|QTBUG22011_insertBeforeRowSpan
name|void
name|tst_QTextTable
operator|::
name|QTBUG22011_insertBeforeRowSpan
parameter_list|()
block|{
name|QTextDocument
name|doc
decl_stmt|;
name|QTextCursor
name|cursor
argument_list|(
operator|&
name|doc
argument_list|)
decl_stmt|;
name|QTextTable
modifier|*
name|table
init|=
name|cursor
operator|.
name|insertTable
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
decl_stmt|;
comment|// 1x1
name|table
operator|->
name|appendColumns
argument_list|(
literal|1
argument_list|)
expr_stmt|;
comment|// 1x2
name|table
operator|->
name|appendRows
argument_list|(
literal|1
argument_list|)
expr_stmt|;
comment|// 2x2
name|table
operator|->
name|mergeCells
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// 2x2
name|table
operator|->
name|insertColumns
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// 2x3
name|table
operator|->
name|mergeCells
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
comment|// 2x3
name|table
operator|->
name|appendRows
argument_list|(
literal|1
argument_list|)
expr_stmt|;
comment|// 3x3
name|table
operator|->
name|mergeCells
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|3
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// 3x3
name|table
operator|->
name|appendRows
argument_list|(
literal|1
argument_list|)
expr_stmt|;
comment|// 4x3
name|table
operator|->
name|insertColumns
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// 4x4
name|table
operator|->
name|mergeCells
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|table
operator|->
name|mergeCells
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|table
operator|->
name|mergeCells
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|table
operator|->
name|mergeCells
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|table
operator|->
name|insertColumns
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// 4x5
name|table
operator|->
name|mergeCells
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|table
operator|->
name|appendColumns
argument_list|(
literal|1
argument_list|)
expr_stmt|;
comment|// 4x6
name|QCOMPARE
argument_list|(
name|table
operator|->
name|rows
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|->
name|columns
argument_list|()
argument_list|,
literal|6
argument_list|)
expr_stmt|;
block|}
end_function
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_PRINTER
end_ifndef
begin_namespace
namespace|namespace
block|{
DECL|class|QTBUG31330_PaintDevice
class|class
name|QTBUG31330_PaintDevice
super|:
specifier|public
name|QPagedPaintDevice
block|{
public|public:
DECL|class|PaintEngine
class|class
name|PaintEngine
super|:
specifier|public
name|QPaintEngine
block|{
public|public:
DECL|member|rects
name|QList
argument_list|<
name|QRectF
argument_list|>
name|rects
decl_stmt|;
DECL|function|PaintEngine
name|PaintEngine
parameter_list|()
member_init_list|:
name|QPaintEngine
argument_list|(
literal|0
argument_list|)
block|{}
DECL|function|type
specifier|virtual
name|Type
name|type
parameter_list|()
specifier|const
block|{
return|return
name|User
return|;
block|}
DECL|function|begin
specifier|virtual
name|bool
name|begin
parameter_list|(
name|QPaintDevice
modifier|*
parameter_list|)
block|{
return|return
literal|true
return|;
block|}
DECL|function|end
specifier|virtual
name|bool
name|end
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
DECL|function|updateState
specifier|virtual
name|void
name|updateState
parameter_list|(
specifier|const
name|QPaintEngineState
modifier|&
parameter_list|)
block|{}
DECL|function|drawRects
specifier|virtual
name|void
name|drawRects
parameter_list|(
specifier|const
name|QRect
modifier|*
parameter_list|,
name|int
parameter_list|)
block|{}
DECL|function|drawRects
specifier|virtual
name|void
name|drawRects
parameter_list|(
specifier|const
name|QRectF
modifier|*
name|r
parameter_list|,
name|int
parameter_list|)
block|{
if|if
condition|(
name|painter
argument_list|()
operator|->
name|brush
argument_list|()
operator|==
name|QBrush
argument_list|(
name|Qt
operator|::
name|green
argument_list|)
condition|)
block|{
name|rects
operator|.
name|append
argument_list|(
operator|*
name|r
argument_list|)
expr_stmt|;
block|}
block|}
DECL|function|drawPixmap
specifier|virtual
name|void
name|drawPixmap
parameter_list|(
specifier|const
name|QRectF
modifier|&
parameter_list|,
specifier|const
name|QPixmap
modifier|&
parameter_list|,
specifier|const
name|QRectF
modifier|&
parameter_list|)
block|{}
block|}
class|;
DECL|member|pages
name|int
name|pages
decl_stmt|;
DECL|member|engine
name|QPaintEngine
modifier|*
name|engine
decl_stmt|;
DECL|function|QTBUG31330_PaintDevice
name|QTBUG31330_PaintDevice
parameter_list|(
name|QPaintEngine
modifier|*
name|engine
parameter_list|)
member_init_list|:
name|pages
argument_list|(
literal|1
argument_list|)
member_init_list|,
name|engine
argument_list|(
name|engine
argument_list|)
block|{
name|QPageLayout
name|layout
init|=
name|pageLayout
argument_list|()
decl_stmt|;
name|layout
operator|.
name|setUnits
argument_list|(
name|QPageLayout
operator|::
name|Point
argument_list|)
expr_stmt|;
name|setPageLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
block|}
DECL|function|metric
specifier|virtual
name|int
name|metric
parameter_list|(
name|PaintDeviceMetric
name|metric
parameter_list|)
specifier|const
block|{
if|if
condition|(
name|PdmDevicePixelRatio
operator|==
name|metric
condition|)
return|return
literal|1
return|;
if|if
condition|(
name|PdmDevicePixelRatioScaled
operator|==
name|metric
condition|)
return|return
literal|1
operator|*
name|QPaintDevice
operator|::
name|devicePixelRatioFScale
argument_list|()
return|;
if|if
condition|(
name|PdmDpiY
operator|==
name|metric
condition|)
return|return
literal|96
return|;
if|if
condition|(
name|PdmDpiX
operator|==
name|metric
condition|)
return|return
literal|96
return|;
if|if
condition|(
name|PdmHeight
operator|==
name|metric
condition|)
return|return
literal|1000
return|;
if|if
condition|(
name|PdmWidth
operator|==
name|metric
condition|)
return|return
literal|700
return|;
return|return
literal|900
return|;
block|}
DECL|function|paintEngine
specifier|virtual
name|QPaintEngine
modifier|*
name|paintEngine
parameter_list|()
specifier|const
block|{
return|return
name|engine
return|;
block|}
DECL|function|newPage
name|bool
name|newPage
parameter_list|()
block|{
operator|++
name|pages
expr_stmt|;
return|return
literal|true
return|;
block|}
block|}
class|;
block|}
end_namespace
begin_function
DECL|function|QTBUG31330_renderBackground
name|void
name|tst_QTextTable
operator|::
name|QTBUG31330_renderBackground
parameter_list|()
block|{
name|QTextDocument
name|doc
decl_stmt|;
name|QTextCursor
name|cursor
argument_list|(
operator|&
name|doc
argument_list|)
decl_stmt|;
name|QTextTable
modifier|*
name|table
init|=
name|cursor
operator|.
name|insertTable
argument_list|(
literal|4
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|QTextTableCell
name|cell
init|=
name|table
operator|->
name|cellAt
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QTextCharFormat
name|cellFormat
init|=
name|cell
operator|.
name|format
argument_list|()
decl_stmt|;
name|cellFormat
operator|.
name|setBackground
argument_list|(
name|QBrush
argument_list|(
name|Qt
operator|::
name|green
argument_list|)
argument_list|)
expr_stmt|;
name|cell
operator|.
name|setFormat
argument_list|(
name|cellFormat
argument_list|)
expr_stmt|;
name|QTextCursor
name|tc
init|=
name|cell
operator|.
name|firstCursorPosition
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|60
condition|;
operator|++
name|i
control|)
block|{
name|tc
operator|.
name|insertBlock
argument_list|()
expr_stmt|;
block|}
name|QTBUG31330_PaintDevice
operator|::
name|PaintEngine
name|engine
decl_stmt|;
name|QTBUG31330_PaintDevice
name|paintDevice
argument_list|(
operator|&
name|engine
argument_list|)
decl_stmt|;
name|paintDevice
operator|.
name|setPageSize
argument_list|(
name|QPagedPaintDevice
operator|::
name|A4
argument_list|)
expr_stmt|;
name|doc
operator|.
name|print
argument_list|(
operator|&
name|paintDevice
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|paintDevice
operator|.
name|pages
operator|>=
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|engine
operator|.
name|rects
operator|.
name|count
argument_list|()
argument_list|,
name|paintDevice
operator|.
name|pages
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|engine
operator|.
name|rects
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|QRectF
name|rect
init|=
name|engine
operator|.
name|rects
index|[
name|i
index|]
decl_stmt|;
name|QVERIFY
argument_list|(
name|rect
operator|.
name|top
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|rect
operator|.
name|bottom
argument_list|()
operator|<
literal|1000
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QTextTable
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qtexttable.moc"
end_include
end_unit
