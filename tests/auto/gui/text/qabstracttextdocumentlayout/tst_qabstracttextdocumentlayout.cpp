begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<qcoreapplication.h>
end_include
begin_include
include|#
directive|include
file|<qdebug.h>
end_include
begin_include
include|#
directive|include
file|<qabstracttextdocumentlayout.h>
end_include
begin_include
include|#
directive|include
file|<qimage.h>
end_include
begin_include
include|#
directive|include
file|<qtextobject.h>
end_include
begin_class
DECL|class|tst_QAbstractTextDocumentLayout
class|class
name|tst_QAbstractTextDocumentLayout
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
name|tst_QAbstractTextDocumentLayout
parameter_list|()
constructor_decl|;
specifier|virtual
name|~
name|tst_QAbstractTextDocumentLayout
parameter_list|()
destructor_decl|;
private|private
name|slots
private|:
name|void
name|getSetCheck
parameter_list|()
function_decl|;
name|void
name|maximumBlockCount
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_constructor
DECL|function|tst_QAbstractTextDocumentLayout
name|tst_QAbstractTextDocumentLayout
operator|::
name|tst_QAbstractTextDocumentLayout
parameter_list|()
block|{ }
end_constructor
begin_destructor
DECL|function|~tst_QAbstractTextDocumentLayout
name|tst_QAbstractTextDocumentLayout
operator|::
name|~
name|tst_QAbstractTextDocumentLayout
parameter_list|()
block|{ }
end_destructor
begin_class
DECL|class|MyAbstractTextDocumentLayout
class|class
name|MyAbstractTextDocumentLayout
super|:
specifier|public
name|QAbstractTextDocumentLayout
block|{
name|Q_OBJECT
public|public:
DECL|function|MyAbstractTextDocumentLayout
name|MyAbstractTextDocumentLayout
parameter_list|(
name|QTextDocument
modifier|*
name|doc
parameter_list|)
member_init_list|:
name|QAbstractTextDocumentLayout
argument_list|(
name|doc
argument_list|)
member_init_list|,
name|gotFullLayout
argument_list|(
literal|false
argument_list|)
member_init_list|,
name|blockCount
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|changeEvents
argument_list|(
literal|0
argument_list|)
block|{     }
DECL|function|draw
name|void
name|draw
parameter_list|(
name|QPainter
modifier|*
parameter_list|,
specifier|const
name|PaintContext
modifier|&
parameter_list|)
block|{}
DECL|function|hitTest
name|int
name|hitTest
parameter_list|(
specifier|const
name|QPointF
modifier|&
parameter_list|,
name|Qt
operator|::
name|HitTestAccuracy
parameter_list|)
specifier|const
block|{
return|return
literal|0
return|;
block|}
DECL|function|pageCount
name|int
name|pageCount
parameter_list|()
specifier|const
block|{
return|return
literal|0
return|;
block|}
DECL|function|documentSize
name|QSizeF
name|documentSize
parameter_list|()
specifier|const
block|{
return|return
name|QSizeF
argument_list|()
return|;
block|}
DECL|function|frameBoundingRect
name|QRectF
name|frameBoundingRect
parameter_list|(
name|QTextFrame
modifier|*
parameter_list|)
specifier|const
block|{
return|return
name|QRectF
argument_list|()
return|;
block|}
DECL|function|blockBoundingRect
name|QRectF
name|blockBoundingRect
parameter_list|(
specifier|const
name|QTextBlock
modifier|&
parameter_list|)
specifier|const
block|{
return|return
name|QRectF
argument_list|()
return|;
block|}
DECL|function|documentChanged
name|void
name|documentChanged
parameter_list|(
name|int
name|from
parameter_list|,
name|int
comment|/* oldLength */
parameter_list|,
name|int
name|length
parameter_list|)
block|{
operator|++
name|changeEvents
expr_stmt|;
name|QTextBlock
name|last
init|=
name|document
argument_list|()
operator|->
name|lastBlock
argument_list|()
decl_stmt|;
name|int
name|lastPos
init|=
name|last
operator|.
name|position
argument_list|()
operator|+
name|last
operator|.
name|length
argument_list|()
operator|-
literal|1
decl_stmt|;
if|if
condition|(
name|from
operator|==
literal|0
operator|&&
name|length
operator|==
name|lastPos
condition|)
name|gotFullLayout
operator|=
literal|true
expr_stmt|;
block|}
DECL|member|gotFullLayout
name|bool
name|gotFullLayout
decl_stmt|;
DECL|member|blockCount
name|int
name|blockCount
decl_stmt|;
DECL|member|changeEvents
name|int
name|changeEvents
decl_stmt|;
public|public
name|slots
public|:
DECL|function|blockCountChanged
name|void
name|blockCountChanged
parameter_list|(
name|int
name|bc
parameter_list|)
block|{
name|blockCount
operator|=
name|bc
expr_stmt|;
block|}
block|}
class|;
end_class
begin_comment
comment|// Testing get/set functions
end_comment
begin_function
DECL|function|getSetCheck
name|void
name|tst_QAbstractTextDocumentLayout
operator|::
name|getSetCheck
parameter_list|()
block|{
name|QTextDocument
name|doc
decl_stmt|;
name|MyAbstractTextDocumentLayout
name|obj1
argument_list|(
operator|&
name|doc
argument_list|)
decl_stmt|;
comment|// QPaintDevice * QAbstractTextDocumentLayout::paintDevice()
comment|// void QAbstractTextDocumentLayout::setPaintDevice(QPaintDevice *)
name|QImage
modifier|*
name|var1
init|=
operator|new
name|QImage
argument_list|(
name|QSize
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|obj1
operator|.
name|setPaintDevice
argument_list|(
name|var1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
cast|static_cast
argument_list|<
name|QPaintDevice
operator|*
argument_list|>
argument_list|(
name|var1
argument_list|)
argument_list|,
name|obj1
operator|.
name|paintDevice
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setPaintDevice
argument_list|(
operator|(
name|QPaintDevice
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
cast|static_cast
argument_list|<
name|QPaintDevice
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|,
name|obj1
operator|.
name|paintDevice
argument_list|()
argument_list|)
expr_stmt|;
operator|delete
name|var1
expr_stmt|;
block|}
end_function
begin_function
DECL|function|maximumBlockCount
name|void
name|tst_QAbstractTextDocumentLayout
operator|::
name|maximumBlockCount
parameter_list|()
block|{
name|QTextDocument
name|doc
decl_stmt|;
name|doc
operator|.
name|setMaximumBlockCount
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|MyAbstractTextDocumentLayout
name|layout
argument_list|(
operator|&
name|doc
argument_list|)
decl_stmt|;
name|doc
operator|.
name|setDocumentLayout
argument_list|(
operator|&
name|layout
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
operator|&
name|doc
argument_list|,
name|SIGNAL
argument_list|(
name|blockCountChanged
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|,
operator|&
name|layout
argument_list|,
name|SLOT
argument_list|(
name|blockCountChanged
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QTextCursor
name|cursor
argument_list|(
operator|&
name|doc
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
operator|++
name|i
control|)
block|{
name|cursor
operator|.
name|insertBlock
argument_list|()
expr_stmt|;
name|cursor
operator|.
name|insertText
argument_list|(
literal|"bla"
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|layout
operator|.
name|blockCount
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|layout
operator|.
name|gotFullLayout
operator|=
literal|false
expr_stmt|;
name|layout
operator|.
name|changeEvents
operator|=
literal|0
expr_stmt|;
name|cursor
operator|.
name|insertBlock
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|layout
operator|.
name|changeEvents
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|cursor
operator|.
name|insertText
argument_list|(
literal|"foo"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|layout
operator|.
name|changeEvents
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|cursor
operator|.
name|insertBlock
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|layout
operator|.
name|changeEvents
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|cursor
operator|.
name|insertText
argument_list|(
literal|"foo"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|layout
operator|.
name|changeEvents
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|layout
operator|.
name|gotFullLayout
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|layout
operator|.
name|blockCount
argument_list|,
literal|10
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QAbstractTextDocumentLayout
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qabstracttextdocumentlayout.moc"
end_include
end_unit
