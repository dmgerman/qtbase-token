begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<qsurfaceformat.h>
end_include
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_class
DECL|class|tst_QSurfaceFormat
class|class
name|tst_QSurfaceFormat
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
private|private
name|slots
private|:
name|void
name|versionCheck_data
parameter_list|()
function_decl|;
name|void
name|versionCheck
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_function
DECL|function|versionCheck_data
name|void
name|tst_QSurfaceFormat
operator|::
name|versionCheck_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"formatMajor"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"formatMinor"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"compareMajor"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"compareMinor"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"expected"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"lower major, lower minor"
argument_list|)
operator|<<
literal|3
operator|<<
literal|2
operator|<<
literal|2
operator|<<
literal|1
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"lower major, same minor"
argument_list|)
operator|<<
literal|3
operator|<<
literal|2
operator|<<
literal|2
operator|<<
literal|2
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"lower major, greater minor"
argument_list|)
operator|<<
literal|3
operator|<<
literal|2
operator|<<
literal|2
operator|<<
literal|3
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"same major, lower minor"
argument_list|)
operator|<<
literal|3
operator|<<
literal|2
operator|<<
literal|3
operator|<<
literal|1
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"same major, same minor"
argument_list|)
operator|<<
literal|3
operator|<<
literal|2
operator|<<
literal|3
operator|<<
literal|2
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"same major, greater minor"
argument_list|)
operator|<<
literal|3
operator|<<
literal|2
operator|<<
literal|3
operator|<<
literal|3
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"greater major, lower minor"
argument_list|)
operator|<<
literal|3
operator|<<
literal|2
operator|<<
literal|4
operator|<<
literal|1
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"greater major, same minor"
argument_list|)
operator|<<
literal|3
operator|<<
literal|2
operator|<<
literal|4
operator|<<
literal|2
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"greater major, greater minor"
argument_list|)
operator|<<
literal|3
operator|<<
literal|2
operator|<<
literal|4
operator|<<
literal|3
operator|<<
literal|false
expr_stmt|;
block|}
end_function
begin_function
DECL|function|versionCheck
name|void
name|tst_QSurfaceFormat
operator|::
name|versionCheck
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|formatMajor
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|formatMinor
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|compareMajor
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|compareMinor
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|expected
argument_list|)
expr_stmt|;
name|QSurfaceFormat
name|format
decl_stmt|;
name|format
operator|.
name|setMinorVersion
argument_list|(
name|formatMinor
argument_list|)
expr_stmt|;
name|format
operator|.
name|setMajorVersion
argument_list|(
name|formatMajor
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|format
operator|.
name|version
argument_list|()
operator|>=
name|qMakePair
argument_list|(
name|compareMajor
argument_list|,
name|compareMinor
argument_list|)
argument_list|,
name|expected
argument_list|)
expr_stmt|;
name|format
operator|.
name|setVersion
argument_list|(
name|formatMajor
argument_list|,
name|formatMinor
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|format
operator|.
name|version
argument_list|()
operator|>=
name|qMakePair
argument_list|(
name|compareMajor
argument_list|,
name|compareMinor
argument_list|)
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
end_function
begin_include
include|#
directive|include
file|<tst_qsurfaceformat.moc>
end_include
begin_expr_stmt
DECL|variable|tst_QSurfaceFormat
name|QTEST_MAIN
argument_list|(
name|tst_QSurfaceFormat
argument_list|)
expr_stmt|;
end_expr_stmt
end_unit
