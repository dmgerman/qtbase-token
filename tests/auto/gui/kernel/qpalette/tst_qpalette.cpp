begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: http://www.qt-project.org/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|"qpalette.h"
end_include
begin_include
include|#
directive|include
file|<qapplication.h>
end_include
begin_class
DECL|class|tst_QPalette
class|class
name|tst_QPalette
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
name|tst_QPalette
parameter_list|()
constructor_decl|;
specifier|virtual
name|~
name|tst_QPalette
parameter_list|()
destructor_decl|;
public|public
name|slots
public|:
name|void
name|initTestCase
parameter_list|()
function_decl|;
name|void
name|cleanupTestCase
parameter_list|()
function_decl|;
name|void
name|init
parameter_list|()
function_decl|;
name|void
name|cleanup
parameter_list|()
function_decl|;
private|private
name|slots
private|:
name|void
name|roleValues_data
parameter_list|()
function_decl|;
name|void
name|roleValues
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_constructor
DECL|function|tst_QPalette
name|tst_QPalette
operator|::
name|tst_QPalette
parameter_list|()
block|{ }
end_constructor
begin_destructor
DECL|function|~tst_QPalette
name|tst_QPalette
operator|::
name|~
name|tst_QPalette
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|initTestCase
name|void
name|tst_QPalette
operator|::
name|initTestCase
parameter_list|()
block|{ }
end_function
begin_function
DECL|function|cleanupTestCase
name|void
name|tst_QPalette
operator|::
name|cleanupTestCase
parameter_list|()
block|{ }
end_function
begin_function
DECL|function|init
name|void
name|tst_QPalette
operator|::
name|init
parameter_list|()
block|{ }
end_function
begin_function
DECL|function|cleanup
name|void
name|tst_QPalette
operator|::
name|cleanup
parameter_list|()
block|{ }
end_function
begin_function
DECL|function|roleValues_data
name|void
name|tst_QPalette
operator|::
name|roleValues_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"role"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"value"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"QPalette::WindowText"
argument_list|)
operator|<<
name|int
argument_list|(
name|QPalette
operator|::
name|WindowText
argument_list|)
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"QPalette::Button"
argument_list|)
operator|<<
name|int
argument_list|(
name|QPalette
operator|::
name|Button
argument_list|)
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"QPalette::Light"
argument_list|)
operator|<<
name|int
argument_list|(
name|QPalette
operator|::
name|Light
argument_list|)
operator|<<
literal|2
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"QPalette::Midlight"
argument_list|)
operator|<<
name|int
argument_list|(
name|QPalette
operator|::
name|Midlight
argument_list|)
operator|<<
literal|3
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"QPalette::Dark"
argument_list|)
operator|<<
name|int
argument_list|(
name|QPalette
operator|::
name|Dark
argument_list|)
operator|<<
literal|4
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"QPalette::Mid"
argument_list|)
operator|<<
name|int
argument_list|(
name|QPalette
operator|::
name|Mid
argument_list|)
operator|<<
literal|5
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"QPalette::Text"
argument_list|)
operator|<<
name|int
argument_list|(
name|QPalette
operator|::
name|Text
argument_list|)
operator|<<
literal|6
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"QPalette::BrightText"
argument_list|)
operator|<<
name|int
argument_list|(
name|QPalette
operator|::
name|BrightText
argument_list|)
operator|<<
literal|7
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"QPalette::ButtonText"
argument_list|)
operator|<<
name|int
argument_list|(
name|QPalette
operator|::
name|ButtonText
argument_list|)
operator|<<
literal|8
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"QPalette::Base"
argument_list|)
operator|<<
name|int
argument_list|(
name|QPalette
operator|::
name|Base
argument_list|)
operator|<<
literal|9
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"QPalette::Window"
argument_list|)
operator|<<
name|int
argument_list|(
name|QPalette
operator|::
name|Window
argument_list|)
operator|<<
literal|10
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"QPalette::Shadow"
argument_list|)
operator|<<
name|int
argument_list|(
name|QPalette
operator|::
name|Shadow
argument_list|)
operator|<<
literal|11
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"QPalette::Highlight"
argument_list|)
operator|<<
name|int
argument_list|(
name|QPalette
operator|::
name|Highlight
argument_list|)
operator|<<
literal|12
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"QPalette::HighlightedText"
argument_list|)
operator|<<
name|int
argument_list|(
name|QPalette
operator|::
name|HighlightedText
argument_list|)
operator|<<
literal|13
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"QPalette::Link"
argument_list|)
operator|<<
name|int
argument_list|(
name|QPalette
operator|::
name|Link
argument_list|)
operator|<<
literal|14
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"QPalette::LinkVisited"
argument_list|)
operator|<<
name|int
argument_list|(
name|QPalette
operator|::
name|LinkVisited
argument_list|)
operator|<<
literal|15
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"QPalette::AlternateBase"
argument_list|)
operator|<<
name|int
argument_list|(
name|QPalette
operator|::
name|AlternateBase
argument_list|)
operator|<<
literal|16
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"QPalette::NoRole"
argument_list|)
operator|<<
name|int
argument_list|(
name|QPalette
operator|::
name|NoRole
argument_list|)
operator|<<
literal|17
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"QPalette::ToolTipBase"
argument_list|)
operator|<<
name|int
argument_list|(
name|QPalette
operator|::
name|ToolTipBase
argument_list|)
operator|<<
literal|18
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"QPalette::ToolTipText"
argument_list|)
operator|<<
name|int
argument_list|(
name|QPalette
operator|::
name|ToolTipText
argument_list|)
operator|<<
literal|19
expr_stmt|;
comment|// Change this value as you add more roles.
name|QTest
operator|::
name|newRow
argument_list|(
literal|"QPalette::NColorRoles"
argument_list|)
operator|<<
name|int
argument_list|(
name|QPalette
operator|::
name|NColorRoles
argument_list|)
operator|<<
literal|20
expr_stmt|;
block|}
end_function
begin_function
DECL|function|roleValues
name|void
name|tst_QPalette
operator|::
name|roleValues
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|role
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|role
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QPalette
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qpalette.moc"
end_include
end_unit
