begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:GPL-EXCEPT$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3 as published by the Free Software ** Foundation with exceptions as appearing in the file LICENSE.GPL3-EXCEPT ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<qwindow.h>
end_include
begin_include
include|#
directive|include
file|<qbackingstore.h>
end_include
begin_include
include|#
directive|include
file|<qpainter.h>
end_include
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<QEvent>
end_include
begin_comment
comment|// For QSignalSpy slot connections.
end_comment
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|Qt::ScreenOrientation
argument_list|)
end_macro
begin_class
DECL|class|tst_QBackingStore
class|class
name|tst_QBackingStore
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
private|private
name|slots
private|:
name|void
name|flush
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_class
DECL|class|Window
class|class
name|Window
super|:
specifier|public
name|QWindow
block|{
public|public:
DECL|function|Window
name|Window
parameter_list|()
member_init_list|:
name|backingStore
argument_list|(
name|this
argument_list|)
block|{     }
DECL|function|resizeEvent
name|void
name|resizeEvent
parameter_list|(
name|QResizeEvent
modifier|*
parameter_list|)
block|{
name|backingStore
operator|.
name|resize
argument_list|(
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|function|exposeEvent
name|void
name|exposeEvent
parameter_list|(
name|QExposeEvent
modifier|*
name|event
parameter_list|)
block|{
name|QRect
name|rect
argument_list|(
name|QPoint
argument_list|()
argument_list|,
name|size
argument_list|()
argument_list|)
decl_stmt|;
name|backingStore
operator|.
name|beginPaint
argument_list|(
name|rect
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
name|backingStore
operator|.
name|paintDevice
argument_list|()
argument_list|)
decl_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
name|rect
argument_list|,
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|backingStore
operator|.
name|endPaint
argument_list|()
expr_stmt|;
name|backingStore
operator|.
name|flush
argument_list|(
name|event
operator|->
name|region
argument_list|()
operator|.
name|boundingRect
argument_list|()
argument_list|)
expr_stmt|;
block|}
private|private:
DECL|member|backingStore
name|QBackingStore
name|backingStore
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|flush
name|void
name|tst_QBackingStore
operator|::
name|flush
parameter_list|()
block|{
name|Window
name|window
decl_stmt|;
name|window
operator|.
name|setGeometry
argument_list|(
literal|20
argument_list|,
literal|20
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|window
operator|.
name|showMaximized
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|window
operator|.
name|isExposed
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_include
include|#
directive|include
file|<tst_qbackingstore.moc>
end_include
begin_expr_stmt
DECL|variable|tst_QBackingStore
name|QTEST_MAIN
argument_list|(
name|tst_QBackingStore
argument_list|)
expr_stmt|;
end_expr_stmt
end_unit
