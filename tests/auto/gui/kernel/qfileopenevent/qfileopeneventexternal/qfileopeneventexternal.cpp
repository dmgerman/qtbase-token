begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:GPL-EXCEPT$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3 as published by the Free Software ** Foundation with exceptions as appearing in the file LICENSE.GPL3-EXCEPT ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtGui>
end_include
begin_include
include|#
directive|include
file|<QEvent>
end_include
begin_struct
DECL|struct|MyApplication
struct|struct
name|MyApplication
super|:
specifier|public
name|QGuiApplication
block|{
DECL|function|MyApplication
name|MyApplication
parameter_list|(
name|int
modifier|&
name|argc
parameter_list|,
name|char
modifier|*
modifier|*
name|argv
parameter_list|)
member_init_list|:
name|QGuiApplication
argument_list|(
name|argc
argument_list|,
name|argv
argument_list|)
block|{}
DECL|function|event
name|bool
name|event
parameter_list|(
name|QEvent
modifier|*
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|->
name|type
argument_list|()
operator|==
name|QEvent
operator|::
name|FileOpen
condition|)
block|{
name|QFileOpenEvent
modifier|*
name|ev
init|=
cast|static_cast
argument_list|<
name|QFileOpenEvent
operator|*
argument_list|>
argument_list|(
name|event
argument_list|)
decl_stmt|;
name|QFile
name|file
decl_stmt|;
name|bool
name|ok
init|=
name|ev
operator|->
name|openFile
argument_list|(
name|file
argument_list|,
name|QFile
operator|::
name|Append
operator||
name|QFile
operator|::
name|Unbuffered
argument_list|)
decl_stmt|;
if|if
condition|(
name|ok
condition|)
name|file
operator|.
name|write
argument_list|(
name|QByteArray
argument_list|(
literal|"+external"
argument_list|)
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
else|else
block|{
return|return
name|QGuiApplication
operator|::
name|event
argument_list|(
name|event
argument_list|)
return|;
block|}
block|}
block|}
struct|;
end_struct
begin_function
DECL|function|main
name|int
name|main
parameter_list|(
name|int
name|argc
parameter_list|,
name|char
modifier|*
name|argv
index|[]
parameter_list|)
block|{
name|MyApplication
name|a
argument_list|(
name|argc
argument_list|,
name|argv
argument_list|)
decl_stmt|;
name|a
operator|.
name|sendPostedEvents
argument_list|(
operator|&
name|a
argument_list|,
name|QEvent
operator|::
name|FileOpen
argument_list|)
expr_stmt|;
return|return
literal|0
return|;
block|}
end_function
end_unit
