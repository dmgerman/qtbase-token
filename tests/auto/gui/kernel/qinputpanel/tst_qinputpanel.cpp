begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<private/qguiapplication_p.h>
end_include
begin_include
include|#
directive|include
file|<private/qinputpanel_p.h>
end_include
begin_include
include|#
directive|include
file|<qplatforminputcontext_qpa.h>
end_include
begin_class
DECL|class|PlatformInputContext
class|class
name|PlatformInputContext
super|:
specifier|public
name|QPlatformInputContext
block|{
public|public:
DECL|function|PlatformInputContext
name|PlatformInputContext
parameter_list|()
member_init_list|:
name|m_animating
argument_list|(
literal|false
argument_list|)
member_init_list|,
name|m_visible
argument_list|(
literal|false
argument_list|)
member_init_list|,
name|m_updateCallCount
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|m_resetCallCount
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|m_commitCallCount
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|m_localeCallCount
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|m_inputDirectionCallCount
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|m_lastQueries
argument_list|(
name|Qt
operator|::
name|ImhNone
argument_list|)
member_init_list|,
name|m_action
argument_list|(
name|QInputPanel
operator|::
name|Click
argument_list|)
member_init_list|,
name|m_cursorPosition
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|m_lastEventType
argument_list|(
name|QEvent
operator|::
name|None
argument_list|)
block|{}
DECL|function|keyboardRect
specifier|virtual
name|QRectF
name|keyboardRect
parameter_list|()
specifier|const
block|{
return|return
name|m_keyboardRect
return|;
block|}
DECL|function|isAnimating
specifier|virtual
name|bool
name|isAnimating
parameter_list|()
specifier|const
block|{
return|return
name|m_animating
return|;
block|}
DECL|function|reset
specifier|virtual
name|void
name|reset
parameter_list|()
block|{
name|m_resetCallCount
operator|++
expr_stmt|;
block|}
DECL|function|commit
specifier|virtual
name|void
name|commit
parameter_list|()
block|{
name|m_commitCallCount
operator|++
expr_stmt|;
block|}
DECL|function|update
specifier|virtual
name|void
name|update
parameter_list|(
name|Qt
operator|::
name|InputMethodQueries
name|queries
parameter_list|)
block|{
name|m_updateCallCount
operator|++
expr_stmt|;
name|m_lastQueries
operator|=
name|queries
expr_stmt|;
block|}
DECL|function|invokeAction
specifier|virtual
name|void
name|invokeAction
parameter_list|(
name|QInputPanel
operator|::
name|Action
name|action
parameter_list|,
name|int
name|cursorPosition
parameter_list|)
block|{
name|m_action
operator|=
name|action
expr_stmt|;
name|m_cursorPosition
operator|=
name|cursorPosition
expr_stmt|;
block|}
DECL|function|filterEvent
specifier|virtual
name|bool
name|filterEvent
parameter_list|(
specifier|const
name|QEvent
modifier|*
name|event
parameter_list|)
block|{
name|m_lastEventType
operator|=
name|event
operator|->
name|type
argument_list|()
expr_stmt|;
return|return
literal|false
return|;
block|}
DECL|function|showInputPanel
specifier|virtual
name|void
name|showInputPanel
parameter_list|()
block|{
name|m_visible
operator|=
literal|true
expr_stmt|;
block|}
DECL|function|hideInputPanel
specifier|virtual
name|void
name|hideInputPanel
parameter_list|()
block|{
name|m_visible
operator|=
literal|false
expr_stmt|;
block|}
DECL|function|isInputPanelVisible
specifier|virtual
name|bool
name|isInputPanelVisible
parameter_list|()
specifier|const
block|{
return|return
name|m_visible
return|;
block|}
DECL|function|locale
specifier|virtual
name|QLocale
name|locale
parameter_list|()
specifier|const
block|{
name|m_localeCallCount
operator|++
expr_stmt|;
return|return
name|QLocale
operator|::
name|c
argument_list|()
return|;
block|}
DECL|function|inputDirection
specifier|virtual
name|Qt
operator|::
name|LayoutDirection
name|inputDirection
parameter_list|()
specifier|const
block|{
name|m_inputDirectionCallCount
operator|++
expr_stmt|;
return|return
name|Qt
operator|::
name|LeftToRight
return|;
block|}
DECL|member|m_animating
name|bool
name|m_animating
decl_stmt|;
DECL|member|m_visible
name|bool
name|m_visible
decl_stmt|;
DECL|member|m_updateCallCount
name|int
name|m_updateCallCount
decl_stmt|;
DECL|member|m_resetCallCount
name|int
name|m_resetCallCount
decl_stmt|;
DECL|member|m_commitCallCount
name|int
name|m_commitCallCount
decl_stmt|;
DECL|member|m_localeCallCount
specifier|mutable
name|int
name|m_localeCallCount
decl_stmt|;
DECL|member|m_inputDirectionCallCount
specifier|mutable
name|int
name|m_inputDirectionCallCount
decl_stmt|;
DECL|member|m_lastQueries
name|Qt
operator|::
name|InputMethodQueries
name|m_lastQueries
decl_stmt|;
DECL|member|m_action
name|QInputPanel
operator|::
name|Action
name|m_action
decl_stmt|;
DECL|member|m_cursorPosition
name|int
name|m_cursorPosition
decl_stmt|;
DECL|member|m_lastEventType
name|int
name|m_lastEventType
decl_stmt|;
DECL|member|m_keyboardRect
name|QRectF
name|m_keyboardRect
decl_stmt|;
block|}
class|;
end_class
begin_class
DECL|class|InputItem
class|class
name|InputItem
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
DECL|function|event
name|bool
name|event
parameter_list|(
name|QEvent
modifier|*
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|->
name|type
argument_list|()
operator|==
name|QEvent
operator|::
name|InputMethodQuery
condition|)
block|{
name|QInputMethodQueryEvent
modifier|*
name|query
init|=
cast|static_cast
argument_list|<
name|QInputMethodQueryEvent
operator|*
argument_list|>
argument_list|(
name|event
argument_list|)
decl_stmt|;
if|if
condition|(
name|query
operator|->
name|queries
argument_list|()
operator|&
name|Qt
operator|::
name|ImCursorRectangle
condition|)
name|query
operator|->
name|setValue
argument_list|(
name|Qt
operator|::
name|ImCursorRectangle
argument_list|,
name|QRectF
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|query
operator|->
name|queries
argument_list|()
operator|&
name|Qt
operator|::
name|ImPreferredLanguage
condition|)
name|query
operator|->
name|setValue
argument_list|(
name|Qt
operator|::
name|ImPreferredLanguage
argument_list|,
name|QString
argument_list|(
literal|"English"
argument_list|)
argument_list|)
expr_stmt|;
name|m_lastQueries
operator|=
name|query
operator|->
name|queries
argument_list|()
expr_stmt|;
name|query
operator|->
name|accept
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
return|return
literal|false
return|;
block|}
DECL|member|m_lastQueries
name|Qt
operator|::
name|InputMethodQueries
name|m_lastQueries
decl_stmt|;
block|}
class|;
end_class
begin_class
DECL|class|tst_qinputpanel
class|class
name|tst_qinputpanel
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
DECL|function|tst_qinputpanel
name|tst_qinputpanel
parameter_list|()
block|{}
DECL|function|~tst_qinputpanel
specifier|virtual
name|~
name|tst_qinputpanel
parameter_list|()
block|{}
private|private
name|slots
private|:
name|void
name|initTestCase
parameter_list|()
function_decl|;
name|void
name|visible
parameter_list|()
function_decl|;
name|void
name|animating
parameter_list|()
function_decl|;
name|void
name|keyboarRectangle
parameter_list|()
function_decl|;
name|void
name|inputItem
parameter_list|()
function_decl|;
name|void
name|inputItemTransform
parameter_list|()
function_decl|;
name|void
name|cursorRectangle
parameter_list|()
function_decl|;
name|void
name|invokeAction
parameter_list|()
function_decl|;
name|void
name|reset
parameter_list|()
function_decl|;
name|void
name|commit
parameter_list|()
function_decl|;
name|void
name|update
parameter_list|()
function_decl|;
name|void
name|query
parameter_list|()
function_decl|;
name|void
name|inputDirection
parameter_list|()
function_decl|;
private|private:
DECL|member|m_inputItem
name|InputItem
name|m_inputItem
decl_stmt|;
DECL|member|m_platformInputContext
name|PlatformInputContext
name|m_platformInputContext
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|initTestCase
name|void
name|tst_qinputpanel
operator|::
name|initTestCase
parameter_list|()
block|{
name|QInputPanelPrivate
modifier|*
name|inputPanelPrivate
init|=
name|QInputPanelPrivate
operator|::
name|get
argument_list|(
name|qApp
operator|->
name|inputPanel
argument_list|()
argument_list|)
decl_stmt|;
name|inputPanelPrivate
operator|->
name|testContext
operator|=
operator|&
name|m_platformInputContext
expr_stmt|;
block|}
end_function
begin_function
DECL|function|visible
name|void
name|tst_qinputpanel
operator|::
name|visible
parameter_list|()
block|{
name|QCOMPARE
argument_list|(
name|qApp
operator|->
name|inputPanel
argument_list|()
operator|->
name|visible
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|inputPanel
argument_list|()
operator|->
name|show
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qApp
operator|->
name|inputPanel
argument_list|()
operator|->
name|visible
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|inputPanel
argument_list|()
operator|->
name|hide
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qApp
operator|->
name|inputPanel
argument_list|()
operator|->
name|visible
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|inputPanel
argument_list|()
operator|->
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qApp
operator|->
name|inputPanel
argument_list|()
operator|->
name|visible
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|inputPanel
argument_list|()
operator|->
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qApp
operator|->
name|inputPanel
argument_list|()
operator|->
name|visible
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|animating
name|void
name|tst_qinputpanel
operator|::
name|animating
parameter_list|()
block|{
name|QCOMPARE
argument_list|(
name|qApp
operator|->
name|inputPanel
argument_list|()
operator|->
name|isAnimating
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|m_platformInputContext
operator|.
name|m_animating
operator|=
literal|true
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qApp
operator|->
name|inputPanel
argument_list|()
operator|->
name|isAnimating
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|m_platformInputContext
operator|.
name|m_animating
operator|=
literal|false
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qApp
operator|->
name|inputPanel
argument_list|()
operator|->
name|isAnimating
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QSignalSpy
name|spy
argument_list|(
name|qApp
operator|->
name|inputPanel
argument_list|()
argument_list|,
name|SIGNAL
argument_list|(
name|animatingChanged
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|m_platformInputContext
operator|.
name|emitAnimatingChanged
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|keyboarRectangle
name|void
name|tst_qinputpanel
operator|::
name|keyboarRectangle
parameter_list|()
block|{
name|QCOMPARE
argument_list|(
name|qApp
operator|->
name|inputPanel
argument_list|()
operator|->
name|keyboardRectangle
argument_list|()
argument_list|,
name|QRectF
argument_list|()
argument_list|)
expr_stmt|;
name|m_platformInputContext
operator|.
name|m_keyboardRect
operator|=
name|QRectF
argument_list|(
literal|10
argument_list|,
literal|20
argument_list|,
literal|30
argument_list|,
literal|40
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qApp
operator|->
name|inputPanel
argument_list|()
operator|->
name|keyboardRectangle
argument_list|()
argument_list|,
name|QRectF
argument_list|(
literal|10
argument_list|,
literal|20
argument_list|,
literal|30
argument_list|,
literal|40
argument_list|)
argument_list|)
expr_stmt|;
name|QSignalSpy
name|spy
argument_list|(
name|qApp
operator|->
name|inputPanel
argument_list|()
argument_list|,
name|SIGNAL
argument_list|(
name|keyboardRectangleChanged
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|m_platformInputContext
operator|.
name|emitKeyboardRectChanged
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|inputItem
name|void
name|tst_qinputpanel
operator|::
name|inputItem
parameter_list|()
block|{
name|QVERIFY
argument_list|(
operator|!
name|qApp
operator|->
name|inputPanel
argument_list|()
operator|->
name|inputItem
argument_list|()
argument_list|)
expr_stmt|;
name|QSignalSpy
name|spy
argument_list|(
name|qApp
operator|->
name|inputPanel
argument_list|()
argument_list|,
name|SIGNAL
argument_list|(
name|inputItemChanged
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|qApp
operator|->
name|inputPanel
argument_list|()
operator|->
name|setInputItem
argument_list|(
operator|&
name|m_inputItem
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qApp
operator|->
name|inputPanel
argument_list|()
operator|->
name|inputItem
argument_list|()
argument_list|,
operator|&
name|m_inputItem
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// reset
name|qApp
operator|->
name|inputPanel
argument_list|()
operator|->
name|setInputItem
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|inputItemTransform
name|void
name|tst_qinputpanel
operator|::
name|inputItemTransform
parameter_list|()
block|{
name|QCOMPARE
argument_list|(
name|qApp
operator|->
name|inputPanel
argument_list|()
operator|->
name|inputItemTransform
argument_list|()
argument_list|,
name|QTransform
argument_list|()
argument_list|)
expr_stmt|;
name|QSignalSpy
name|spy
argument_list|(
name|qApp
operator|->
name|inputPanel
argument_list|()
argument_list|,
name|SIGNAL
argument_list|(
name|cursorRectangleChanged
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QTransform
name|transform
decl_stmt|;
name|transform
operator|.
name|translate
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|transform
operator|.
name|scale
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|transform
operator|.
name|shear
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|inputPanel
argument_list|()
operator|->
name|setInputItemTransform
argument_list|(
name|transform
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qApp
operator|->
name|inputPanel
argument_list|()
operator|->
name|inputItemTransform
argument_list|()
argument_list|,
name|transform
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// reset
name|qApp
operator|->
name|inputPanel
argument_list|()
operator|->
name|setInputItemTransform
argument_list|(
name|QTransform
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|cursorRectangle
name|void
name|tst_qinputpanel
operator|::
name|cursorRectangle
parameter_list|()
block|{
name|QCOMPARE
argument_list|(
name|qApp
operator|->
name|inputPanel
argument_list|()
operator|->
name|cursorRectangle
argument_list|()
argument_list|,
name|QRectF
argument_list|()
argument_list|)
expr_stmt|;
name|QTransform
name|transform
decl_stmt|;
name|transform
operator|.
name|translate
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|transform
operator|.
name|scale
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|transform
operator|.
name|shear
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|inputPanel
argument_list|()
operator|->
name|setInputItemTransform
argument_list|(
name|transform
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|inputPanel
argument_list|()
operator|->
name|setInputItem
argument_list|(
operator|&
name|m_inputItem
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qApp
operator|->
name|inputPanel
argument_list|()
operator|->
name|cursorRectangle
argument_list|()
argument_list|,
name|transform
operator|.
name|mapRect
argument_list|(
name|QRectF
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// reset
name|qApp
operator|->
name|inputPanel
argument_list|()
operator|->
name|setInputItem
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|inputPanel
argument_list|()
operator|->
name|setInputItemTransform
argument_list|(
name|QTransform
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|invokeAction
name|void
name|tst_qinputpanel
operator|::
name|invokeAction
parameter_list|()
block|{
name|QCOMPARE
argument_list|(
name|m_platformInputContext
operator|.
name|m_action
argument_list|,
name|QInputPanel
operator|::
name|Click
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|m_platformInputContext
operator|.
name|m_cursorPosition
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|inputPanel
argument_list|()
operator|->
name|invokeAction
argument_list|(
name|QInputPanel
operator|::
name|ContextMenu
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|m_platformInputContext
operator|.
name|m_action
argument_list|,
name|QInputPanel
operator|::
name|ContextMenu
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|m_platformInputContext
operator|.
name|m_cursorPosition
argument_list|,
literal|5
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|reset
name|void
name|tst_qinputpanel
operator|::
name|reset
parameter_list|()
block|{
name|QCOMPARE
argument_list|(
name|m_platformInputContext
operator|.
name|m_resetCallCount
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|inputPanel
argument_list|()
operator|->
name|reset
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|m_platformInputContext
operator|.
name|m_resetCallCount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|inputPanel
argument_list|()
operator|->
name|reset
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|m_platformInputContext
operator|.
name|m_resetCallCount
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|commit
name|void
name|tst_qinputpanel
operator|::
name|commit
parameter_list|()
block|{
name|QCOMPARE
argument_list|(
name|m_platformInputContext
operator|.
name|m_commitCallCount
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|inputPanel
argument_list|()
operator|->
name|commit
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|m_platformInputContext
operator|.
name|m_commitCallCount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|inputPanel
argument_list|()
operator|->
name|commit
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|m_platformInputContext
operator|.
name|m_commitCallCount
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|update
name|void
name|tst_qinputpanel
operator|::
name|update
parameter_list|()
block|{
name|qApp
operator|->
name|inputPanel
argument_list|()
operator|->
name|setInputItem
argument_list|(
operator|&
name|m_inputItem
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|m_platformInputContext
operator|.
name|m_updateCallCount
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|int
argument_list|(
name|m_platformInputContext
operator|.
name|m_lastQueries
argument_list|)
argument_list|,
name|int
argument_list|(
name|Qt
operator|::
name|ImhNone
argument_list|)
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|inputPanel
argument_list|()
operator|->
name|update
argument_list|(
name|Qt
operator|::
name|ImQueryInput
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|m_platformInputContext
operator|.
name|m_updateCallCount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|int
argument_list|(
name|m_platformInputContext
operator|.
name|m_lastQueries
argument_list|)
argument_list|,
name|int
argument_list|(
name|Qt
operator|::
name|ImQueryInput
argument_list|)
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|inputPanel
argument_list|()
operator|->
name|update
argument_list|(
name|Qt
operator|::
name|ImQueryAll
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|m_platformInputContext
operator|.
name|m_updateCallCount
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|int
argument_list|(
name|m_platformInputContext
operator|.
name|m_lastQueries
argument_list|)
argument_list|,
name|int
argument_list|(
name|Qt
operator|::
name|ImQueryAll
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qApp
operator|->
name|inputPanel
argument_list|()
operator|->
name|keyboardRectangle
argument_list|()
argument_list|,
name|QRectF
argument_list|(
literal|10
argument_list|,
literal|20
argument_list|,
literal|30
argument_list|,
literal|40
argument_list|)
argument_list|)
expr_stmt|;
comment|// reset
name|qApp
operator|->
name|inputPanel
argument_list|()
operator|->
name|setInputItem
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|query
name|void
name|tst_qinputpanel
operator|::
name|query
parameter_list|()
block|{
name|QInputMethodQueryEvent
name|query
argument_list|(
name|Qt
operator|::
name|InputMethodQueries
argument_list|(
name|Qt
operator|::
name|ImPreferredLanguage
operator||
name|Qt
operator|::
name|ImCursorRectangle
argument_list|)
argument_list|)
decl_stmt|;
name|QGuiApplication
operator|::
name|sendEvent
argument_list|(
operator|&
name|m_inputItem
argument_list|,
operator|&
name|query
argument_list|)
expr_stmt|;
name|QString
name|language
init|=
name|query
operator|.
name|value
argument_list|(
name|Qt
operator|::
name|ImPreferredLanguage
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|language
argument_list|,
name|QString
argument_list|(
literal|"English"
argument_list|)
argument_list|)
expr_stmt|;
name|QRect
name|cursorRectangle
init|=
name|query
operator|.
name|value
argument_list|(
name|Qt
operator|::
name|ImCursorRectangle
argument_list|)
operator|.
name|toRect
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|cursorRectangle
argument_list|,
name|QRect
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|inputDirection
name|void
name|tst_qinputpanel
operator|::
name|inputDirection
parameter_list|()
block|{
name|QCOMPARE
argument_list|(
name|m_platformInputContext
operator|.
name|m_inputDirectionCallCount
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|inputPanel
argument_list|()
operator|->
name|inputDirection
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|m_platformInputContext
operator|.
name|m_inputDirectionCallCount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|m_platformInputContext
operator|.
name|m_localeCallCount
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|inputPanel
argument_list|()
operator|->
name|locale
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|m_platformInputContext
operator|.
name|m_localeCallCount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_qinputpanel
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qinputpanel.moc"
end_include
end_unit
