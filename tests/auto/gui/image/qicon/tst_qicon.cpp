begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<QImageReader>
end_include
begin_include
include|#
directive|include
file|<qicon.h>
end_include
begin_include
include|#
directive|include
file|<qiconengine.h>
end_include
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QSize
argument_list|)
end_macro
begin_class
DECL|class|tst_QIcon
class|class
name|tst_QIcon
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
name|tst_QIcon
parameter_list|()
constructor_decl|;
private|private
name|slots
private|:
name|void
name|actualSize_data
parameter_list|()
function_decl|;
comment|// test with 1 pixmap
name|void
name|actualSize
parameter_list|()
function_decl|;
name|void
name|actualSize2_data
parameter_list|()
function_decl|;
comment|// test with 2 pixmaps with different aspect ratio
name|void
name|actualSize2
parameter_list|()
function_decl|;
name|void
name|isNull
parameter_list|()
function_decl|;
name|void
name|swap
parameter_list|()
function_decl|;
name|void
name|bestMatch
parameter_list|()
function_decl|;
name|void
name|cacheKey
parameter_list|()
function_decl|;
name|void
name|detach
parameter_list|()
function_decl|;
name|void
name|addFile
parameter_list|()
function_decl|;
name|void
name|availableSizes
parameter_list|()
function_decl|;
name|void
name|name
parameter_list|()
function_decl|;
name|void
name|streamAvailableSizes_data
parameter_list|()
function_decl|;
name|void
name|streamAvailableSizes
parameter_list|()
function_decl|;
name|void
name|fromTheme
parameter_list|()
function_decl|;
name|void
name|task184901_badCache
parameter_list|()
function_decl|;
name|void
name|task223279_inconsistentAddFile
parameter_list|()
function_decl|;
private|private:
name|bool
name|haveImageFormat
parameter_list|(
name|QByteArray
specifier|const
modifier|&
parameter_list|)
function_decl|;
DECL|member|staticIcon
specifier|const
specifier|static
name|QIcon
name|staticIcon
decl_stmt|;
block|}
class|;
end_class
begin_comment
comment|// Creating an icon statically should not cause a crash.
end_comment
begin_comment
comment|// But we do not officially support this. See QTBUG-8666
end_comment
begin_decl_stmt
DECL|member|staticIcon
specifier|const
name|QIcon
name|tst_QIcon
operator|::
name|staticIcon
init|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
literal|"edit-find"
argument_list|)
decl_stmt|;
end_decl_stmt
begin_function
DECL|function|haveImageFormat
name|bool
name|tst_QIcon
operator|::
name|haveImageFormat
parameter_list|(
name|QByteArray
specifier|const
modifier|&
name|desiredFormat
parameter_list|)
block|{
return|return
name|QImageReader
operator|::
name|supportedImageFormats
argument_list|()
operator|.
name|contains
argument_list|(
name|desiredFormat
argument_list|)
return|;
block|}
end_function
begin_constructor
DECL|function|tst_QIcon
name|tst_QIcon
operator|::
name|tst_QIcon
parameter_list|()
block|{ }
end_constructor
begin_function
DECL|function|actualSize_data
name|void
name|tst_QIcon
operator|::
name|actualSize_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"source"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QSize
argument_list|>
argument_list|(
literal|"argument"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QSize
argument_list|>
argument_list|(
literal|"result"
argument_list|)
expr_stmt|;
comment|// square image
name|QTest
operator|::
name|newRow
argument_list|(
literal|"resource0"
argument_list|)
operator|<<
literal|":/image.png"
operator|<<
name|QSize
argument_list|(
literal|128
argument_list|,
literal|128
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|128
argument_list|,
literal|128
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"resource1"
argument_list|)
operator|<<
literal|":/image.png"
operator|<<
name|QSize
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"resource2"
argument_list|)
operator|<<
literal|":/image.png"
operator|<<
name|QSize
argument_list|(
literal|32
argument_list|,
literal|64
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"resource3"
argument_list|)
operator|<<
literal|":/image.png"
operator|<<
name|QSize
argument_list|(
literal|16
argument_list|,
literal|64
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"resource4"
argument_list|)
operator|<<
literal|":/image.png"
operator|<<
name|QSize
argument_list|(
literal|16
argument_list|,
literal|128
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"resource5"
argument_list|)
operator|<<
literal|":/image.png"
operator|<<
name|QSize
argument_list|(
literal|128
argument_list|,
literal|16
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"resource6"
argument_list|)
operator|<<
literal|":/image.png"
operator|<<
name|QSize
argument_list|(
literal|150
argument_list|,
literal|150
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|128
argument_list|,
literal|128
argument_list|)
expr_stmt|;
comment|// rect image
name|QTest
operator|::
name|newRow
argument_list|(
literal|"resource7"
argument_list|)
operator|<<
literal|":/rect.png"
operator|<<
name|QSize
argument_list|(
literal|20
argument_list|,
literal|40
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|20
argument_list|,
literal|40
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"resource8"
argument_list|)
operator|<<
literal|":/rect.png"
operator|<<
name|QSize
argument_list|(
literal|10
argument_list|,
literal|20
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|10
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"resource9"
argument_list|)
operator|<<
literal|":/rect.png"
operator|<<
name|QSize
argument_list|(
literal|15
argument_list|,
literal|50
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|15
argument_list|,
literal|30
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"resource10"
argument_list|)
operator|<<
literal|":/rect.png"
operator|<<
name|QSize
argument_list|(
literal|25
argument_list|,
literal|50
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|20
argument_list|,
literal|40
argument_list|)
expr_stmt|;
specifier|const
name|QString
name|prefix
init|=
name|QFileInfo
argument_list|(
name|QFINDTESTDATA
argument_list|(
literal|"icons"
argument_list|)
argument_list|)
operator|.
name|absolutePath
argument_list|()
operator|+
literal|"/"
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"external0"
argument_list|)
operator|<<
name|prefix
operator|+
literal|"image.png"
operator|<<
name|QSize
argument_list|(
literal|128
argument_list|,
literal|128
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|128
argument_list|,
literal|128
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"external1"
argument_list|)
operator|<<
name|prefix
operator|+
literal|"image.png"
operator|<<
name|QSize
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"external2"
argument_list|)
operator|<<
name|prefix
operator|+
literal|"image.png"
operator|<<
name|QSize
argument_list|(
literal|32
argument_list|,
literal|64
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"external3"
argument_list|)
operator|<<
name|prefix
operator|+
literal|"image.png"
operator|<<
name|QSize
argument_list|(
literal|16
argument_list|,
literal|64
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"external4"
argument_list|)
operator|<<
name|prefix
operator|+
literal|"image.png"
operator|<<
name|QSize
argument_list|(
literal|16
argument_list|,
literal|128
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"external5"
argument_list|)
operator|<<
name|prefix
operator|+
literal|"image.png"
operator|<<
name|QSize
argument_list|(
literal|128
argument_list|,
literal|16
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"external6"
argument_list|)
operator|<<
name|prefix
operator|+
literal|"image.png"
operator|<<
name|QSize
argument_list|(
literal|150
argument_list|,
literal|150
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|128
argument_list|,
literal|128
argument_list|)
expr_stmt|;
comment|// rect image
name|QTest
operator|::
name|newRow
argument_list|(
literal|"external7"
argument_list|)
operator|<<
literal|":/rect.png"
operator|<<
name|QSize
argument_list|(
literal|20
argument_list|,
literal|40
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|20
argument_list|,
literal|40
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"external8"
argument_list|)
operator|<<
literal|":/rect.png"
operator|<<
name|QSize
argument_list|(
literal|10
argument_list|,
literal|20
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|10
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"external9"
argument_list|)
operator|<<
literal|":/rect.png"
operator|<<
name|QSize
argument_list|(
literal|15
argument_list|,
literal|50
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|15
argument_list|,
literal|30
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"external10"
argument_list|)
operator|<<
literal|":/rect.png"
operator|<<
name|QSize
argument_list|(
literal|25
argument_list|,
literal|50
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|20
argument_list|,
literal|40
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|actualSize
name|void
name|tst_QIcon
operator|::
name|actualSize
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|source
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QSize
argument_list|,
name|argument
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QSize
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|{
name|QPixmap
name|pixmap
argument_list|(
name|source
argument_list|)
decl_stmt|;
name|QIcon
name|icon
argument_list|(
name|pixmap
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|icon
operator|.
name|actualSize
argument_list|(
name|argument
argument_list|)
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|icon
operator|.
name|pixmap
argument_list|(
name|argument
argument_list|)
operator|.
name|size
argument_list|()
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
block|{
name|QIcon
name|icon
argument_list|(
name|source
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|icon
operator|.
name|actualSize
argument_list|(
name|argument
argument_list|)
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|icon
operator|.
name|pixmap
argument_list|(
name|argument
argument_list|)
operator|.
name|size
argument_list|()
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|actualSize2_data
name|void
name|tst_QIcon
operator|::
name|actualSize2_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QSize
argument_list|>
argument_list|(
literal|"argument"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QSize
argument_list|>
argument_list|(
literal|"result"
argument_list|)
expr_stmt|;
comment|// two images - 128x128 and 20x40. Let the games begin
name|QTest
operator|::
name|newRow
argument_list|(
literal|"trivial1"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|128
argument_list|,
literal|128
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|128
argument_list|,
literal|128
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"trivial2"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|20
argument_list|,
literal|40
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|20
argument_list|,
literal|40
argument_list|)
expr_stmt|;
comment|// QIcon chooses the one with the smallest area to choose the pixmap
name|QTest
operator|::
name|newRow
argument_list|(
literal|"best1"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"best2"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|20
argument_list|,
literal|20
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|10
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"best3"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|15
argument_list|,
literal|30
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|15
argument_list|,
literal|30
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"best4"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|2
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"best5"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|10
argument_list|,
literal|15
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|7
argument_list|,
literal|15
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|actualSize2
name|void
name|tst_QIcon
operator|::
name|actualSize2
parameter_list|()
block|{
name|QIcon
name|icon
decl_stmt|;
specifier|const
name|QString
name|prefix
init|=
name|QFileInfo
argument_list|(
name|QFINDTESTDATA
argument_list|(
literal|"icons"
argument_list|)
argument_list|)
operator|.
name|absolutePath
argument_list|()
operator|+
literal|"/"
decl_stmt|;
name|icon
operator|.
name|addPixmap
argument_list|(
name|QPixmap
argument_list|(
name|prefix
operator|+
literal|"image.png"
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addPixmap
argument_list|(
name|QPixmap
argument_list|(
name|prefix
operator|+
literal|"rect.png"
argument_list|)
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QSize
argument_list|,
name|argument
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QSize
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|icon
operator|.
name|actualSize
argument_list|(
name|argument
argument_list|)
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|icon
operator|.
name|pixmap
argument_list|(
name|argument
argument_list|)
operator|.
name|size
argument_list|()
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|isNull
name|void
name|tst_QIcon
operator|::
name|isNull
parameter_list|()
block|{
comment|// test default constructor
name|QIcon
name|defaultConstructor
decl_stmt|;
name|QVERIFY
argument_list|(
name|defaultConstructor
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
comment|// test copy constructor
name|QVERIFY
argument_list|(
name|QIcon
argument_list|(
name|defaultConstructor
argument_list|)
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
comment|// test pixmap constructor
name|QPixmap
name|nullPixmap
decl_stmt|;
name|QVERIFY
argument_list|(
name|QIcon
argument_list|(
name|nullPixmap
argument_list|)
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
comment|// test string constructor with empty string
name|QIcon
name|iconEmptyString
init|=
name|QIcon
argument_list|(
name|QString
argument_list|()
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|iconEmptyString
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|iconEmptyString
operator|.
name|actualSize
argument_list|(
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|)
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
empty_stmt|;
comment|// test string constructor with non-existing file
name|QIcon
name|iconNoFile
init|=
name|QIcon
argument_list|(
literal|"imagedoesnotexist"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|iconNoFile
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|iconNoFile
operator|.
name|actualSize
argument_list|(
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|)
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
comment|// test string constructor with non-existing file with suffix
name|QIcon
name|iconNoFileSuffix
init|=
name|QIcon
argument_list|(
literal|"imagedoesnotexist.png"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|iconNoFileSuffix
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|iconNoFileSuffix
operator|.
name|actualSize
argument_list|(
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|)
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
specifier|const
name|QString
name|prefix
init|=
name|QFileInfo
argument_list|(
name|QFINDTESTDATA
argument_list|(
literal|"icons"
argument_list|)
argument_list|)
operator|.
name|absolutePath
argument_list|()
operator|+
literal|"/"
decl_stmt|;
comment|// test string constructor with existing file but unsupported format
name|QIcon
name|iconUnsupportedFormat
init|=
name|QIcon
argument_list|(
name|prefix
operator|+
literal|"tst_qicon.cpp"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|iconUnsupportedFormat
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|iconUnsupportedFormat
operator|.
name|actualSize
argument_list|(
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|)
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
comment|// test string constructor with existing file and supported format
name|QIcon
name|iconSupportedFormat
init|=
name|QIcon
argument_list|(
name|prefix
operator|+
literal|"image.png"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|iconSupportedFormat
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|iconSupportedFormat
operator|.
name|actualSize
argument_list|(
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|)
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|swap
name|void
name|tst_QIcon
operator|::
name|swap
parameter_list|()
block|{
name|QPixmap
name|p1
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
decl_stmt|,
name|p2
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|p1
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|p2
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|QIcon
name|i1
argument_list|(
name|p1
argument_list|)
decl_stmt|,
name|i2
argument_list|(
name|p2
argument_list|)
decl_stmt|;
specifier|const
name|qint64
name|i1k
init|=
name|i1
operator|.
name|cacheKey
argument_list|()
decl_stmt|;
specifier|const
name|qint64
name|i2k
init|=
name|i2
operator|.
name|cacheKey
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|i1k
operator|!=
name|i2k
argument_list|)
expr_stmt|;
name|i1
operator|.
name|swap
argument_list|(
name|i2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|i1
operator|.
name|cacheKey
argument_list|()
argument_list|,
name|i2k
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|i2
operator|.
name|cacheKey
argument_list|()
argument_list|,
name|i1k
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|bestMatch
name|void
name|tst_QIcon
operator|::
name|bestMatch
parameter_list|()
block|{
name|QPixmap
name|p1
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|QPixmap
name|p2
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|QPixmap
name|p3
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
decl_stmt|;
name|QPixmap
name|p4
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|QPixmap
name|p5
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
decl_stmt|;
name|QPixmap
name|p6
argument_list|(
literal|6
argument_list|,
literal|6
argument_list|)
decl_stmt|;
name|QPixmap
name|p7
argument_list|(
literal|7
argument_list|,
literal|7
argument_list|)
decl_stmt|;
name|QPixmap
name|p8
argument_list|(
literal|8
argument_list|,
literal|8
argument_list|)
decl_stmt|;
name|p1
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|p2
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|p3
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|p4
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|p5
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|p6
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|p7
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|p8
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|4
condition|;
operator|++
name|i
control|)
block|{
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
literal|2
condition|;
operator|++
name|j
control|)
block|{
name|QIcon
operator|::
name|State
name|state
init|=
operator|(
name|j
operator|==
literal|0
operator|)
condition|?
name|QIcon
operator|::
name|On
else|:
name|QIcon
operator|::
name|Off
decl_stmt|;
name|QIcon
operator|::
name|State
name|oppositeState
init|=
operator|(
name|state
operator|==
name|QIcon
operator|::
name|On
operator|)
condition|?
name|QIcon
operator|::
name|Off
else|:
name|QIcon
operator|::
name|On
decl_stmt|;
name|QIcon
operator|::
name|Mode
name|mode
decl_stmt|;
name|QIcon
operator|::
name|Mode
name|oppositeMode
decl_stmt|;
name|QIcon
name|icon
decl_stmt|;
switch|switch
condition|(
name|i
condition|)
block|{
case|case
literal|0
case|:
default|default:
name|mode
operator|=
name|QIcon
operator|::
name|Normal
expr_stmt|;
name|oppositeMode
operator|=
name|QIcon
operator|::
name|Active
expr_stmt|;
break|break;
case|case
literal|1
case|:
name|mode
operator|=
name|QIcon
operator|::
name|Active
expr_stmt|;
name|oppositeMode
operator|=
name|QIcon
operator|::
name|Normal
expr_stmt|;
break|break;
case|case
literal|2
case|:
name|mode
operator|=
name|QIcon
operator|::
name|Disabled
expr_stmt|;
name|oppositeMode
operator|=
name|QIcon
operator|::
name|Selected
expr_stmt|;
break|break;
case|case
literal|3
case|:
name|mode
operator|=
name|QIcon
operator|::
name|Selected
expr_stmt|;
name|oppositeMode
operator|=
name|QIcon
operator|::
name|Disabled
expr_stmt|;
block|}
comment|/*                 The test mirrors the code in                 QPixmapIconEngine::bestMatch(), to make sure that                 nobody breaks QPixmapIconEngine by mistake. Before                 you change this test or the code that it tests,                 please talk to the maintainer if possible.             */
if|if
condition|(
name|mode
operator|==
name|QIcon
operator|::
name|Disabled
operator|||
name|mode
operator|==
name|QIcon
operator|::
name|Selected
condition|)
block|{
name|icon
operator|.
name|addPixmap
argument_list|(
name|p1
argument_list|,
name|oppositeMode
argument_list|,
name|oppositeState
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|icon
operator|.
name|pixmap
argument_list|(
literal|100
argument_list|,
name|mode
argument_list|,
name|state
argument_list|)
operator|.
name|size
argument_list|()
operator|==
name|p1
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addPixmap
argument_list|(
name|p2
argument_list|,
name|oppositeMode
argument_list|,
name|state
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|icon
operator|.
name|pixmap
argument_list|(
literal|100
argument_list|,
name|mode
argument_list|,
name|state
argument_list|)
operator|.
name|size
argument_list|()
operator|==
name|p2
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addPixmap
argument_list|(
name|p3
argument_list|,
name|QIcon
operator|::
name|Active
argument_list|,
name|oppositeState
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|icon
operator|.
name|pixmap
argument_list|(
literal|100
argument_list|,
name|mode
argument_list|,
name|state
argument_list|)
operator|.
name|size
argument_list|()
operator|==
name|p3
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addPixmap
argument_list|(
name|p4
argument_list|,
name|QIcon
operator|::
name|Normal
argument_list|,
name|oppositeState
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|icon
operator|.
name|pixmap
argument_list|(
literal|100
argument_list|,
name|mode
argument_list|,
name|state
argument_list|)
operator|.
name|size
argument_list|()
operator|==
name|p4
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addPixmap
argument_list|(
name|p5
argument_list|,
name|mode
argument_list|,
name|oppositeState
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|icon
operator|.
name|pixmap
argument_list|(
literal|100
argument_list|,
name|mode
argument_list|,
name|state
argument_list|)
operator|.
name|size
argument_list|()
operator|==
name|p5
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addPixmap
argument_list|(
name|p6
argument_list|,
name|QIcon
operator|::
name|Active
argument_list|,
name|state
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|icon
operator|.
name|pixmap
argument_list|(
literal|100
argument_list|,
name|mode
argument_list|,
name|state
argument_list|)
operator|.
name|size
argument_list|()
operator|==
name|p6
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addPixmap
argument_list|(
name|p7
argument_list|,
name|QIcon
operator|::
name|Normal
argument_list|,
name|state
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|icon
operator|.
name|pixmap
argument_list|(
literal|100
argument_list|,
name|mode
argument_list|,
name|state
argument_list|)
operator|.
name|size
argument_list|()
operator|==
name|p7
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addPixmap
argument_list|(
name|p8
argument_list|,
name|mode
argument_list|,
name|state
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|icon
operator|.
name|pixmap
argument_list|(
literal|100
argument_list|,
name|mode
argument_list|,
name|state
argument_list|)
operator|.
name|size
argument_list|()
operator|==
name|p8
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|icon
operator|.
name|addPixmap
argument_list|(
name|p1
argument_list|,
name|QIcon
operator|::
name|Selected
argument_list|,
name|oppositeState
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|icon
operator|.
name|pixmap
argument_list|(
literal|100
argument_list|,
name|mode
argument_list|,
name|state
argument_list|)
operator|.
name|size
argument_list|()
operator|==
name|p1
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addPixmap
argument_list|(
name|p2
argument_list|,
name|QIcon
operator|::
name|Disabled
argument_list|,
name|oppositeState
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|icon
operator|.
name|pixmap
argument_list|(
literal|100
argument_list|,
name|mode
argument_list|,
name|state
argument_list|)
operator|.
name|size
argument_list|()
operator|==
name|p2
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addPixmap
argument_list|(
name|p3
argument_list|,
name|QIcon
operator|::
name|Selected
argument_list|,
name|state
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|icon
operator|.
name|pixmap
argument_list|(
literal|100
argument_list|,
name|mode
argument_list|,
name|state
argument_list|)
operator|.
name|size
argument_list|()
operator|==
name|p3
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addPixmap
argument_list|(
name|p4
argument_list|,
name|QIcon
operator|::
name|Disabled
argument_list|,
name|state
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|icon
operator|.
name|pixmap
argument_list|(
literal|100
argument_list|,
name|mode
argument_list|,
name|state
argument_list|)
operator|.
name|size
argument_list|()
operator|==
name|p4
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addPixmap
argument_list|(
name|p5
argument_list|,
name|oppositeMode
argument_list|,
name|oppositeState
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|icon
operator|.
name|pixmap
argument_list|(
literal|100
argument_list|,
name|mode
argument_list|,
name|state
argument_list|)
operator|.
name|size
argument_list|()
operator|==
name|p5
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addPixmap
argument_list|(
name|p6
argument_list|,
name|mode
argument_list|,
name|oppositeState
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|icon
operator|.
name|pixmap
argument_list|(
literal|100
argument_list|,
name|mode
argument_list|,
name|state
argument_list|)
operator|.
name|size
argument_list|()
operator|==
name|p6
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addPixmap
argument_list|(
name|p7
argument_list|,
name|oppositeMode
argument_list|,
name|state
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|icon
operator|.
name|pixmap
argument_list|(
literal|100
argument_list|,
name|mode
argument_list|,
name|state
argument_list|)
operator|.
name|size
argument_list|()
operator|==
name|p7
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addPixmap
argument_list|(
name|p8
argument_list|,
name|mode
argument_list|,
name|state
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|icon
operator|.
name|pixmap
argument_list|(
literal|100
argument_list|,
name|mode
argument_list|,
name|state
argument_list|)
operator|.
name|size
argument_list|()
operator|==
name|p8
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_function
begin_function
DECL|function|cacheKey
name|void
name|tst_QIcon
operator|::
name|cacheKey
parameter_list|()
block|{
name|QIcon
name|icon1
argument_list|(
literal|"image.png"
argument_list|)
decl_stmt|;
name|qint64
name|icon1_key
init|=
name|icon1
operator|.
name|cacheKey
argument_list|()
decl_stmt|;
name|QIcon
name|icon2
init|=
name|icon1
decl_stmt|;
name|QVERIFY
argument_list|(
name|icon2
operator|.
name|cacheKey
argument_list|()
operator|==
name|icon1
operator|.
name|cacheKey
argument_list|()
argument_list|)
expr_stmt|;
name|icon2
operator|.
name|detach
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|icon2
operator|.
name|cacheKey
argument_list|()
operator|!=
name|icon1
operator|.
name|cacheKey
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|icon1
operator|.
name|cacheKey
argument_list|()
operator|==
name|icon1_key
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|detach
name|void
name|tst_QIcon
operator|::
name|detach
parameter_list|()
block|{
name|QImage
name|img
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|img
operator|.
name|fill
argument_list|(
literal|0xffff0000
argument_list|)
expr_stmt|;
name|QIcon
name|icon1
argument_list|(
name|QPixmap
operator|::
name|fromImage
argument_list|(
name|img
argument_list|)
argument_list|)
decl_stmt|;
name|QIcon
name|icon2
init|=
name|icon1
decl_stmt|;
name|icon2
operator|.
name|addFile
argument_list|(
name|QFINDTESTDATA
argument_list|(
literal|"image.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|)
argument_list|)
expr_stmt|;
name|QImage
name|img1
init|=
name|icon1
operator|.
name|pixmap
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|)
operator|.
name|toImage
argument_list|()
decl_stmt|;
name|QImage
name|img2
init|=
name|icon2
operator|.
name|pixmap
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|)
operator|.
name|toImage
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|img1
operator|!=
name|img2
argument_list|)
expr_stmt|;
name|img1
operator|=
name|icon1
operator|.
name|pixmap
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
operator|.
name|toImage
argument_list|()
expr_stmt|;
name|img2
operator|=
name|icon2
operator|.
name|pixmap
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
operator|.
name|toImage
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|img1
operator|==
name|img2
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|addFile
name|void
name|tst_QIcon
operator|::
name|addFile
parameter_list|()
block|{
name|QIcon
name|icon
decl_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/trolltech/styles/commonstyle/images/standardbutton-open-16.png"
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/trolltech/styles/commonstyle/images/standardbutton-open-32.png"
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/trolltech/styles/commonstyle/images/standardbutton-open-128.png"
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/trolltech/styles/commonstyle/images/standardbutton-save-16.png"
argument_list|)
argument_list|,
name|QSize
argument_list|()
argument_list|,
name|QIcon
operator|::
name|Selected
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/trolltech/styles/commonstyle/images/standardbutton-save-32.png"
argument_list|)
argument_list|,
name|QSize
argument_list|()
argument_list|,
name|QIcon
operator|::
name|Selected
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/trolltech/styles/commonstyle/images/standardbutton-save-128.png"
argument_list|)
argument_list|,
name|QSize
argument_list|()
argument_list|,
name|QIcon
operator|::
name|Selected
argument_list|)
expr_stmt|;
ifndef|#
directive|ifndef
name|Q_OS_WINCE
name|QVERIFY
argument_list|(
name|icon
operator|.
name|pixmap
argument_list|(
literal|16
argument_list|,
name|QIcon
operator|::
name|Normal
argument_list|)
operator|.
name|toImage
argument_list|()
operator|==
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/trolltech/styles/commonstyle/images/standardbutton-open-16.png"
argument_list|)
argument_list|)
operator|.
name|toImage
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|icon
operator|.
name|pixmap
argument_list|(
literal|32
argument_list|,
name|QIcon
operator|::
name|Normal
argument_list|)
operator|.
name|toImage
argument_list|()
operator|==
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/trolltech/styles/commonstyle/images/standardbutton-open-32.png"
argument_list|)
argument_list|)
operator|.
name|toImage
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|icon
operator|.
name|pixmap
argument_list|(
literal|128
argument_list|,
name|QIcon
operator|::
name|Normal
argument_list|)
operator|.
name|toImage
argument_list|()
operator|==
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/trolltech/styles/commonstyle/images/standardbutton-open-128.png"
argument_list|)
argument_list|)
operator|.
name|toImage
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|icon
operator|.
name|pixmap
argument_list|(
literal|16
argument_list|,
name|QIcon
operator|::
name|Selected
argument_list|)
operator|.
name|toImage
argument_list|()
operator|==
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/trolltech/styles/commonstyle/images/standardbutton-save-16.png"
argument_list|)
argument_list|)
operator|.
name|toImage
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|icon
operator|.
name|pixmap
argument_list|(
literal|32
argument_list|,
name|QIcon
operator|::
name|Selected
argument_list|)
operator|.
name|toImage
argument_list|()
operator|==
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/trolltech/styles/commonstyle/images/standardbutton-save-32.png"
argument_list|)
argument_list|)
operator|.
name|toImage
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|icon
operator|.
name|pixmap
argument_list|(
literal|128
argument_list|,
name|QIcon
operator|::
name|Selected
argument_list|)
operator|.
name|toImage
argument_list|()
operator|==
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/trolltech/styles/commonstyle/images/standardbutton-save-128.png"
argument_list|)
argument_list|)
operator|.
name|toImage
argument_list|()
argument_list|)
expr_stmt|;
else|#
directive|else
comment|// WinCE only includes the 16x16 images for size reasons
name|QVERIFY
argument_list|(
name|icon
operator|.
name|pixmap
argument_list|(
literal|16
argument_list|,
name|QIcon
operator|::
name|Normal
argument_list|)
operator|.
name|toImage
argument_list|()
operator|==
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/trolltech/styles/commonstyle/images/standardbutton-open-16.png"
argument_list|)
argument_list|)
operator|.
name|toImage
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|icon
operator|.
name|pixmap
argument_list|(
literal|16
argument_list|,
name|QIcon
operator|::
name|Selected
argument_list|)
operator|.
name|toImage
argument_list|()
operator|==
name|QPixmap
argument_list|(
name|QLatin1String
argument_list|(
literal|":/trolltech/styles/commonstyle/images/standardbutton-save-16.png"
argument_list|)
argument_list|)
operator|.
name|toImage
argument_list|()
argument_list|)
expr_stmt|;
endif|#
directive|endif
block|}
end_function
begin_function
DECL|function|sizeLess
specifier|static
name|bool
name|sizeLess
parameter_list|(
specifier|const
name|QSize
modifier|&
name|a
parameter_list|,
specifier|const
name|QSize
modifier|&
name|b
parameter_list|)
block|{
return|return
name|a
operator|.
name|width
argument_list|()
operator|<
name|b
operator|.
name|width
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|availableSizes
name|void
name|tst_QIcon
operator|::
name|availableSizes
parameter_list|()
block|{
block|{
name|QIcon
name|icon
decl_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
literal|"image.png"
argument_list|,
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
literal|"image.png"
argument_list|,
name|QSize
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
literal|"image.png"
argument_list|,
name|QSize
argument_list|(
literal|128
argument_list|,
literal|128
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
literal|"image.png"
argument_list|,
name|QSize
argument_list|(
literal|256
argument_list|,
literal|256
argument_list|)
argument_list|,
name|QIcon
operator|::
name|Disabled
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
literal|"image.png"
argument_list|,
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|,
name|QIcon
operator|::
name|Normal
argument_list|,
name|QIcon
operator|::
name|On
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|QSize
argument_list|>
name|availableSizes
init|=
name|icon
operator|.
name|availableSizes
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|availableSizes
operator|.
name|size
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|qSort
argument_list|(
name|availableSizes
operator|.
name|begin
argument_list|()
argument_list|,
name|availableSizes
operator|.
name|end
argument_list|()
argument_list|,
name|sizeLess
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|availableSizes
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|availableSizes
operator|.
name|at
argument_list|(
literal|1
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|availableSizes
operator|.
name|at
argument_list|(
literal|2
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|128
argument_list|,
literal|128
argument_list|)
argument_list|)
expr_stmt|;
name|availableSizes
operator|=
name|icon
operator|.
name|availableSizes
argument_list|(
name|QIcon
operator|::
name|Disabled
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|availableSizes
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|availableSizes
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|256
argument_list|,
literal|256
argument_list|)
argument_list|)
expr_stmt|;
name|availableSizes
operator|=
name|icon
operator|.
name|availableSizes
argument_list|(
name|QIcon
operator|::
name|Normal
argument_list|,
name|QIcon
operator|::
name|On
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|availableSizes
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|availableSizes
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
comment|// we try to load an icon from resources
name|QIcon
name|icon
argument_list|(
name|QLatin1String
argument_list|(
literal|":/trolltech/styles/commonstyle/images/standardbutton-open-16.png"
argument_list|)
argument_list|)
decl_stmt|;
name|QList
argument_list|<
name|QSize
argument_list|>
name|availableSizes
init|=
name|icon
operator|.
name|availableSizes
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|availableSizes
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|availableSizes
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
comment|// load an icon from binary data.
name|QPixmap
name|pix
decl_stmt|;
name|QFile
name|file
argument_list|(
name|QLatin1String
argument_list|(
literal|":/trolltech/styles/commonstyle/images/standardbutton-open-16.png"
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|file
operator|.
name|open
argument_list|(
name|QIODevice
operator|::
name|ReadOnly
argument_list|)
argument_list|)
expr_stmt|;
name|uchar
modifier|*
name|data
init|=
name|file
operator|.
name|map
argument_list|(
literal|0
argument_list|,
name|file
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|data
operator|!=
literal|0
argument_list|)
expr_stmt|;
name|pix
operator|.
name|loadFromData
argument_list|(
name|data
argument_list|,
name|file
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QIcon
name|icon
argument_list|(
name|pix
argument_list|)
decl_stmt|;
name|QList
argument_list|<
name|QSize
argument_list|>
name|availableSizes
init|=
name|icon
operator|.
name|availableSizes
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|availableSizes
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|availableSizes
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
comment|// there shouldn't be available sizes for invalid images!
name|QVERIFY
argument_list|(
name|QIcon
argument_list|(
name|QLatin1String
argument_list|(
literal|""
argument_list|)
argument_list|)
operator|.
name|availableSizes
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QIcon
argument_list|(
name|QLatin1String
argument_list|(
literal|"non-existing.png"
argument_list|)
argument_list|)
operator|.
name|availableSizes
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|name
name|void
name|tst_QIcon
operator|::
name|name
parameter_list|()
block|{
block|{
comment|// No name if icon does not come from a theme
name|QIcon
name|icon
argument_list|(
literal|":/image.png"
argument_list|)
decl_stmt|;
name|QString
name|name
init|=
name|icon
operator|.
name|name
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|name
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
comment|// Getting the name of an icon coming from a theme should work
name|QString
name|searchPath
init|=
name|QLatin1String
argument_list|(
literal|":/icons"
argument_list|)
decl_stmt|;
name|QIcon
operator|::
name|setThemeSearchPaths
argument_list|(
name|QStringList
argument_list|()
operator|<<
name|searchPath
argument_list|)
expr_stmt|;
name|QString
name|themeName
argument_list|(
literal|"testtheme"
argument_list|)
decl_stmt|;
name|QIcon
operator|::
name|setThemeName
argument_list|(
name|themeName
argument_list|)
expr_stmt|;
name|QIcon
name|icon
init|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
literal|"appointment-new"
argument_list|)
decl_stmt|;
name|QString
name|name
init|=
name|icon
operator|.
name|name
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|name
argument_list|,
name|QLatin1String
argument_list|(
literal|"appointment-new"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|streamAvailableSizes_data
name|void
name|tst_QIcon
operator|::
name|streamAvailableSizes_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QIcon
argument_list|>
argument_list|(
literal|"icon"
argument_list|)
expr_stmt|;
name|QIcon
name|icon
decl_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
literal|":/image.png"
argument_list|,
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"32x32"
argument_list|)
operator|<<
name|icon
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
literal|":/image.png"
argument_list|,
name|QSize
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"64x64"
argument_list|)
operator|<<
name|icon
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
literal|":/image.png"
argument_list|,
name|QSize
argument_list|(
literal|128
argument_list|,
literal|128
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"128x128"
argument_list|)
operator|<<
name|icon
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
literal|":/image.png"
argument_list|,
name|QSize
argument_list|(
literal|256
argument_list|,
literal|256
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"256x256"
argument_list|)
operator|<<
name|icon
expr_stmt|;
block|}
end_function
begin_function
DECL|function|streamAvailableSizes
name|void
name|tst_QIcon
operator|::
name|streamAvailableSizes
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QIcon
argument_list|,
name|icon
argument_list|)
expr_stmt|;
name|QByteArray
name|ba
decl_stmt|;
comment|// write to QByteArray
block|{
name|QBuffer
name|buffer
argument_list|(
operator|&
name|ba
argument_list|)
decl_stmt|;
name|buffer
operator|.
name|open
argument_list|(
name|QIODevice
operator|::
name|WriteOnly
argument_list|)
expr_stmt|;
name|QDataStream
name|stream
argument_list|(
operator|&
name|buffer
argument_list|)
decl_stmt|;
name|stream
operator|<<
name|icon
expr_stmt|;
block|}
comment|// read from QByteArray
block|{
name|QBuffer
name|buffer
argument_list|(
operator|&
name|ba
argument_list|)
decl_stmt|;
name|buffer
operator|.
name|open
argument_list|(
name|QIODevice
operator|::
name|ReadOnly
argument_list|)
expr_stmt|;
name|QDataStream
name|stream
argument_list|(
operator|&
name|buffer
argument_list|)
decl_stmt|;
name|QIcon
name|i
decl_stmt|;
name|stream
operator|>>
name|i
expr_stmt|;
name|QCOMPARE
argument_list|(
name|i
operator|.
name|isNull
argument_list|()
argument_list|,
name|icon
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|i
operator|.
name|availableSizes
argument_list|()
argument_list|,
name|icon
operator|.
name|availableSizes
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|operator <
specifier|static
specifier|inline
name|bool
name|operator
name|<
parameter_list|(
specifier|const
name|QSize
modifier|&
name|lhs
parameter_list|,
specifier|const
name|QSize
modifier|&
name|rhs
parameter_list|)
block|{
if|if
condition|(
name|lhs
operator|.
name|width
argument_list|()
operator|<
name|rhs
operator|.
name|width
argument_list|()
condition|)
return|return
literal|true
return|;
elseif|else
if|if
condition|(
name|lhs
operator|.
name|width
argument_list|()
operator|==
name|lhs
operator|.
name|width
argument_list|()
condition|)
return|return
name|lhs
operator|.
name|height
argument_list|()
operator|<
name|lhs
operator|.
name|height
argument_list|()
return|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|task184901_badCache
name|void
name|tst_QIcon
operator|::
name|task184901_badCache
parameter_list|()
block|{
name|QPixmap
name|pm
argument_list|(
name|QFINDTESTDATA
argument_list|(
literal|"image.png"
argument_list|)
argument_list|)
decl_stmt|;
name|QIcon
name|icon
argument_list|(
name|pm
argument_list|)
decl_stmt|;
comment|//the disabled icon must have an effect (grayed)
name|QVERIFY
argument_list|(
name|icon
operator|.
name|pixmap
argument_list|(
literal|32
argument_list|,
name|QIcon
operator|::
name|Normal
argument_list|)
operator|.
name|toImage
argument_list|()
operator|!=
name|icon
operator|.
name|pixmap
argument_list|(
literal|32
argument_list|,
name|QIcon
operator|::
name|Disabled
argument_list|)
operator|.
name|toImage
argument_list|()
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addPixmap
argument_list|(
name|pm
argument_list|,
name|QIcon
operator|::
name|Disabled
argument_list|)
expr_stmt|;
comment|//the disabled icon must now be the same as the normal one.
name|QVERIFY
argument_list|(
name|icon
operator|.
name|pixmap
argument_list|(
literal|32
argument_list|,
name|QIcon
operator|::
name|Normal
argument_list|)
operator|.
name|toImage
argument_list|()
operator|==
name|icon
operator|.
name|pixmap
argument_list|(
literal|32
argument_list|,
name|QIcon
operator|::
name|Disabled
argument_list|)
operator|.
name|toImage
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|fromTheme
name|void
name|tst_QIcon
operator|::
name|fromTheme
parameter_list|()
block|{
name|QString
name|searchPath
init|=
name|QLatin1String
argument_list|(
literal|":/icons"
argument_list|)
decl_stmt|;
name|QIcon
operator|::
name|setThemeSearchPaths
argument_list|(
name|QStringList
argument_list|()
operator|<<
name|searchPath
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QIcon
operator|::
name|themeSearchPaths
argument_list|()
operator|.
name|size
argument_list|()
operator|==
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|searchPath
argument_list|,
name|QIcon
operator|::
name|themeSearchPaths
argument_list|()
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|QString
name|themeName
argument_list|(
literal|"testtheme"
argument_list|)
decl_stmt|;
name|QIcon
operator|::
name|setThemeName
argument_list|(
name|themeName
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QIcon
operator|::
name|themeName
argument_list|()
argument_list|,
name|themeName
argument_list|)
expr_stmt|;
comment|// Test normal icon
name|QIcon
name|appointmentIcon
init|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
literal|"appointment-new"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|appointmentIcon
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|appointmentIcon
operator|.
name|availableSizes
argument_list|(
name|QIcon
operator|::
name|Normal
argument_list|,
name|QIcon
operator|::
name|Off
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|appointmentIcon
operator|.
name|availableSizes
argument_list|()
operator|.
name|contains
argument_list|(
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|appointmentIcon
operator|.
name|availableSizes
argument_list|()
operator|.
name|contains
argument_list|(
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|appointmentIcon
operator|.
name|availableSizes
argument_list|()
operator|.
name|contains
argument_list|(
name|QSize
argument_list|(
literal|22
argument_list|,
literal|22
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// Test icon from parent theme
name|QIcon
name|abIcon
init|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
literal|"address-book-new"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|abIcon
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QIcon
operator|::
name|hasThemeIcon
argument_list|(
literal|"address-book-new"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|abIcon
operator|.
name|availableSizes
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
comment|// Test non existing icon
name|QIcon
name|noIcon
init|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
literal|"broken-icon"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|noIcon
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QIcon
operator|::
name|hasThemeIcon
argument_list|(
literal|"broken-icon"
argument_list|)
argument_list|)
expr_stmt|;
comment|// Test non existing icon with fallback
name|noIcon
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
literal|"broken-icon"
argument_list|,
name|abIcon
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|noIcon
operator|.
name|cacheKey
argument_list|()
operator|==
name|abIcon
operator|.
name|cacheKey
argument_list|()
argument_list|)
expr_stmt|;
comment|// Test svg-only icon
name|noIcon
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
literal|"svg-icon"
argument_list|,
name|abIcon
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|noIcon
operator|.
name|availableSizes
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QByteArray
name|ba
decl_stmt|;
comment|// write to QByteArray
block|{
name|QBuffer
name|buffer
argument_list|(
operator|&
name|ba
argument_list|)
decl_stmt|;
name|buffer
operator|.
name|open
argument_list|(
name|QIODevice
operator|::
name|WriteOnly
argument_list|)
expr_stmt|;
name|QDataStream
name|stream
argument_list|(
operator|&
name|buffer
argument_list|)
decl_stmt|;
name|stream
operator|<<
name|abIcon
expr_stmt|;
block|}
comment|// read from QByteArray
block|{
name|QBuffer
name|buffer
argument_list|(
operator|&
name|ba
argument_list|)
decl_stmt|;
name|buffer
operator|.
name|open
argument_list|(
name|QIODevice
operator|::
name|ReadOnly
argument_list|)
expr_stmt|;
name|QDataStream
name|stream
argument_list|(
operator|&
name|buffer
argument_list|)
decl_stmt|;
name|QIcon
name|i
decl_stmt|;
name|stream
operator|>>
name|i
expr_stmt|;
name|QCOMPARE
argument_list|(
name|i
operator|.
name|isNull
argument_list|()
argument_list|,
name|abIcon
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|i
operator|.
name|availableSizes
argument_list|()
argument_list|,
name|abIcon
operator|.
name|availableSizes
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// Make sure setting the theme name clears the state
name|QIcon
operator|::
name|setThemeName
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|abIcon
operator|=
name|QIcon
operator|::
name|fromTheme
argument_list|(
literal|"address-book-new"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|abIcon
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|task223279_inconsistentAddFile
name|void
name|tst_QIcon
operator|::
name|task223279_inconsistentAddFile
parameter_list|()
block|{
name|QIcon
name|icon1
decl_stmt|;
name|icon1
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/trolltech/styles/commonstyle/images/standardbutton-open-16.png"
argument_list|)
argument_list|)
expr_stmt|;
name|icon1
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|"IconThatDoesntExist"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|)
expr_stmt|;
name|QPixmap
name|pm1
init|=
name|icon1
operator|.
name|pixmap
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
decl_stmt|;
name|QIcon
name|icon2
decl_stmt|;
name|icon2
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/trolltech/styles/commonstyle/images/standardbutton-open-16.png"
argument_list|)
argument_list|)
expr_stmt|;
name|icon2
operator|.
name|addFile
argument_list|(
name|QLatin1String
argument_list|(
literal|"IconThatDoesntExist"
argument_list|)
argument_list|)
expr_stmt|;
name|QPixmap
name|pm2
init|=
name|icon1
operator|.
name|pixmap
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|pm1
operator|.
name|isNull
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|pm1
operator|.
name|size
argument_list|()
argument_list|,
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|pm1
operator|.
name|isNull
argument_list|()
argument_list|,
name|pm2
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|pm1
operator|.
name|size
argument_list|()
argument_list|,
name|pm2
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QIcon
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qicon.moc"
end_include
end_unit
