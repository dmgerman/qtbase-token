begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<QBuffer>
end_include
begin_include
include|#
directive|include
file|<QDebug>
end_include
begin_include
include|#
directive|include
file|<QFile>
end_include
begin_include
include|#
directive|include
file|<QImage>
end_include
begin_include
include|#
directive|include
file|<QImageReader>
end_include
begin_include
include|#
directive|include
file|<QImageWriter>
end_include
begin_include
include|#
directive|include
file|<QLabel>
end_include
begin_include
include|#
directive|include
file|<QPixmap>
end_include
begin_include
include|#
directive|include
file|<QSet>
end_include
begin_include
include|#
directive|include
file|<QTcpSocket>
end_include
begin_include
include|#
directive|include
file|<QTcpServer>
end_include
begin_include
include|#
directive|include
file|<QTimer>
end_include
begin_include
include|#
directive|include
file|"../../../platformquirks.h"
end_include
begin_if
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_SYMBIAN
argument_list|)
end_if
begin_define
DECL|macro|SRCDIR
define|#
directive|define
name|SRCDIR
value|"."
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_typedef
DECL|typedef|QStringMap
typedef|typedef
name|QMap
argument_list|<
name|QString
argument_list|,
name|QString
argument_list|>
name|QStringMap
typedef|;
end_typedef
begin_typedef
DECL|typedef|QIntList
typedef|typedef
name|QList
argument_list|<
name|int
argument_list|>
name|QIntList
typedef|;
end_typedef
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QImage
argument_list|)
end_macro
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QRect
argument_list|)
end_macro
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QSize
argument_list|)
end_macro
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QColor
argument_list|)
end_macro
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QStringMap
argument_list|)
end_macro
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QIntList
argument_list|)
end_macro
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QIODevice *
argument_list|)
end_macro
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QImage::Format
argument_list|)
end_macro
begin_comment
comment|//TESTED_FILES=
end_comment
begin_class
DECL|class|tst_QImageReader
class|class
name|tst_QImageReader
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
name|tst_QImageReader
parameter_list|()
constructor_decl|;
specifier|virtual
name|~
name|tst_QImageReader
parameter_list|()
destructor_decl|;
public|public
name|slots
public|:
name|void
name|init
parameter_list|()
function_decl|;
name|void
name|cleanup
parameter_list|()
function_decl|;
private|private
name|slots
private|:
name|void
name|getSetCheck
parameter_list|()
function_decl|;
name|void
name|readImage_data
parameter_list|()
function_decl|;
name|void
name|readImage
parameter_list|()
function_decl|;
name|void
name|jpegRgbCmyk
parameter_list|()
function_decl|;
name|void
name|setScaledSize_data
parameter_list|()
function_decl|;
name|void
name|setScaledSize
parameter_list|()
function_decl|;
name|void
name|setClipRect_data
parameter_list|()
function_decl|;
name|void
name|setClipRect
parameter_list|()
function_decl|;
name|void
name|setScaledClipRect_data
parameter_list|()
function_decl|;
name|void
name|setScaledClipRect
parameter_list|()
function_decl|;
name|void
name|imageFormat_data
parameter_list|()
function_decl|;
name|void
name|imageFormat
parameter_list|()
function_decl|;
name|void
name|blackXPM
parameter_list|()
function_decl|;
name|void
name|transparentXPM
parameter_list|()
function_decl|;
name|void
name|multiWordNamedColorXPM
parameter_list|()
function_decl|;
name|void
name|supportedFormats
parameter_list|()
function_decl|;
name|void
name|readFromDevice_data
parameter_list|()
function_decl|;
name|void
name|readFromDevice
parameter_list|()
function_decl|;
name|void
name|readFromFileAfterJunk_data
parameter_list|()
function_decl|;
name|void
name|readFromFileAfterJunk
parameter_list|()
function_decl|;
name|void
name|devicePosition_data
parameter_list|()
function_decl|;
name|void
name|devicePosition
parameter_list|()
function_decl|;
name|void
name|setBackgroundColor_data
parameter_list|()
function_decl|;
name|void
name|setBackgroundColor
parameter_list|()
function_decl|;
name|void
name|supportsAnimation_data
parameter_list|()
function_decl|;
name|void
name|supportsAnimation
parameter_list|()
function_decl|;
name|void
name|readFromResources_data
parameter_list|()
function_decl|;
name|void
name|readFromResources
parameter_list|()
function_decl|;
name|void
name|dotsPerMeter_data
parameter_list|()
function_decl|;
name|void
name|dotsPerMeter
parameter_list|()
function_decl|;
name|void
name|physicalDpi_data
parameter_list|()
function_decl|;
name|void
name|physicalDpi
parameter_list|()
function_decl|;
name|void
name|sizeBeforeRead_data
parameter_list|()
function_decl|;
name|void
name|sizeBeforeRead
parameter_list|()
function_decl|;
name|void
name|sizeBeforeFormat_data
parameter_list|()
function_decl|;
name|void
name|sizeBeforeFormat
parameter_list|()
function_decl|;
name|void
name|imageFormatBeforeRead_data
parameter_list|()
function_decl|;
name|void
name|imageFormatBeforeRead
parameter_list|()
function_decl|;
name|void
name|gifHandlerBugs
parameter_list|()
function_decl|;
name|void
name|animatedGif
parameter_list|()
function_decl|;
name|void
name|gifImageCount
parameter_list|()
function_decl|;
name|void
name|gifLoopCount
parameter_list|()
function_decl|;
name|void
name|readCorruptImage_data
parameter_list|()
function_decl|;
name|void
name|readCorruptImage
parameter_list|()
function_decl|;
name|void
name|readCorruptBmp
parameter_list|()
function_decl|;
name|void
name|supportsOption_data
parameter_list|()
function_decl|;
name|void
name|supportsOption
parameter_list|()
function_decl|;
name|void
name|tiffCompression_data
parameter_list|()
function_decl|;
name|void
name|tiffCompression
parameter_list|()
function_decl|;
name|void
name|tiffEndianness
parameter_list|()
function_decl|;
name|void
name|tiffOrientation_data
parameter_list|()
function_decl|;
name|void
name|tiffOrientation
parameter_list|()
function_decl|;
name|void
name|tiffGrayscale
parameter_list|()
function_decl|;
name|void
name|autoDetectImageFormat
parameter_list|()
function_decl|;
name|void
name|fileNameProbing
parameter_list|()
function_decl|;
name|void
name|pixelCompareWithBaseline_data
parameter_list|()
function_decl|;
name|void
name|pixelCompareWithBaseline
parameter_list|()
function_decl|;
name|void
name|task255627_setNullScaledSize_data
parameter_list|()
function_decl|;
name|void
name|task255627_setNullScaledSize
parameter_list|()
function_decl|;
name|void
name|testIgnoresFormatAndExtension_data
parameter_list|()
function_decl|;
name|void
name|testIgnoresFormatAndExtension
parameter_list|()
function_decl|;
name|void
name|saveFormat_data
parameter_list|()
function_decl|;
name|void
name|saveFormat
parameter_list|()
function_decl|;
name|void
name|readText_data
parameter_list|()
function_decl|;
name|void
name|readText
parameter_list|()
function_decl|;
name|void
name|preserveTexts_data
parameter_list|()
function_decl|;
name|void
name|preserveTexts
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_decl_stmt
specifier|static
specifier|const
name|QLatin1String
name|prefix
argument_list|(
name|SRCDIR
literal|"/images/"
argument_list|)
decl_stmt|;
end_decl_stmt
begin_comment
comment|// helper to skip an autotest when the given image format is not supported
end_comment
begin_define
DECL|macro|SKIP_IF_UNSUPPORTED
define|#
directive|define
name|SKIP_IF_UNSUPPORTED
parameter_list|(
name|format
parameter_list|)
value|do {                                                          \     if (!QByteArray(format).isEmpty()&& !QImageReader::supportedImageFormats().contains(format)) \         QSKIP("\"" + QByteArray(format) + "\" images are not supported", SkipSingle);             \ } while (0)
end_define
begin_comment
comment|// Testing get/set functions
end_comment
begin_function
DECL|function|getSetCheck
name|void
name|tst_QImageReader
operator|::
name|getSetCheck
parameter_list|()
block|{
name|QImageReader
name|obj1
decl_stmt|;
comment|// QIODevice * QImageReader::device()
comment|// void QImageReader::setDevice(QIODevice *)
name|QFile
modifier|*
name|var1
init|=
operator|new
name|QFile
decl_stmt|;
name|obj1
operator|.
name|setDevice
argument_list|(
name|var1
argument_list|)
expr_stmt|;
comment|//A bit strange but that's the only way to compile under windows.
name|QCOMPARE
argument_list|(
operator|(
name|QIODevice
operator|*
operator|)
name|var1
argument_list|,
name|obj1
operator|.
name|device
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setDevice
argument_list|(
operator|(
name|QIODevice
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
operator|(
name|QIODevice
operator|*
operator|)
literal|0
argument_list|,
name|obj1
operator|.
name|device
argument_list|()
argument_list|)
expr_stmt|;
operator|delete
name|var1
expr_stmt|;
block|}
end_function
begin_constructor
DECL|function|tst_QImageReader
name|tst_QImageReader
operator|::
name|tst_QImageReader
parameter_list|()
block|{ }
end_constructor
begin_destructor
DECL|function|~tst_QImageReader
name|tst_QImageReader
operator|::
name|~
name|tst_QImageReader
parameter_list|()
block|{  }
end_destructor
begin_function
DECL|function|init
name|void
name|tst_QImageReader
operator|::
name|init
parameter_list|()
block|{ }
end_function
begin_function
DECL|function|cleanup
name|void
name|tst_QImageReader
operator|::
name|cleanup
parameter_list|()
block|{ }
end_function
begin_function
DECL|function|readImage_data
name|void
name|tst_QImageReader
operator|::
name|readImage_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"fileName"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"success"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"format"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"empty"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
literal|false
operator|<<
name|QByteArray
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"BMP: colorful"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"colorful.bmp"
argument_list|)
operator|<<
literal|true
operator|<<
name|QByteArray
argument_list|(
literal|"bmp"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"BMP: test32bfv4"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"test32bfv4.bmp"
argument_list|)
operator|<<
literal|true
operator|<<
name|QByteArray
argument_list|(
literal|"bmp"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"BMP: test32v5"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"test32v5.bmp"
argument_list|)
operator|<<
literal|true
operator|<<
name|QByteArray
argument_list|(
literal|"bmp"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"BMP: font"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"font.bmp"
argument_list|)
operator|<<
literal|true
operator|<<
name|QByteArray
argument_list|(
literal|"bmp"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"BMP: signed char"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"crash-signed-char.bmp"
argument_list|)
operator|<<
literal|true
operator|<<
name|QByteArray
argument_list|(
literal|"bmp"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"BMP: 4bpp RLE"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"4bpp-rle.bmp"
argument_list|)
operator|<<
literal|true
operator|<<
name|QByteArray
argument_list|(
literal|"bmp"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"BMP: 4bpp uncompressed"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"tst7.bmp"
argument_list|)
operator|<<
literal|true
operator|<<
name|QByteArray
argument_list|(
literal|"bmp"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"BMP: 16bpp"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"16bpp.bmp"
argument_list|)
operator|<<
literal|true
operator|<<
name|QByteArray
argument_list|(
literal|"bmp"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"BMP: negative height"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"negativeheight.bmp"
argument_list|)
operator|<<
literal|true
operator|<<
name|QByteArray
argument_list|(
literal|"bmp"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"XPM: marble"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"marble.xpm"
argument_list|)
operator|<<
literal|true
operator|<<
name|QByteArray
argument_list|(
literal|"xpm"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"PNG: kollada"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"kollada.png"
argument_list|)
operator|<<
literal|true
operator|<<
name|QByteArray
argument_list|(
literal|"png"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"PPM: teapot"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"teapot.ppm"
argument_list|)
operator|<<
literal|true
operator|<<
name|QByteArray
argument_list|(
literal|"ppm"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"PPM: runners"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"runners.ppm"
argument_list|)
operator|<<
literal|true
operator|<<
name|QByteArray
argument_list|(
literal|"ppm"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"PPM: test"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"test.ppm"
argument_list|)
operator|<<
literal|true
operator|<<
name|QByteArray
argument_list|(
literal|"ppm"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"XBM: gnus"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"gnus.xbm"
argument_list|)
operator|<<
literal|true
operator|<<
name|QByteArray
argument_list|(
literal|"xbm"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"JPEG: beavis"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"beavis.jpg"
argument_list|)
operator|<<
literal|true
operator|<<
name|QByteArray
argument_list|(
literal|"jpeg"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"JPEG: qtbug13653"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"qtbug13653-no_eoi.jpg"
argument_list|)
operator|<<
literal|true
operator|<<
name|QByteArray
argument_list|(
literal|"jpeg"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"GIF: earth"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"earth.gif"
argument_list|)
operator|<<
literal|true
operator|<<
name|QByteArray
argument_list|(
literal|"gif"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"GIF: trolltech"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"trolltech.gif"
argument_list|)
operator|<<
literal|true
operator|<<
name|QByteArray
argument_list|(
literal|"gif"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MNG: ball"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ball.mng"
argument_list|)
operator|<<
literal|true
operator|<<
name|QByteArray
argument_list|(
literal|"mng"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MNG: fire"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"fire.mng"
argument_list|)
operator|<<
literal|true
operator|<<
name|QByteArray
argument_list|(
literal|"mng"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"SVG: rect"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"rect.svg"
argument_list|)
operator|<<
literal|true
operator|<<
name|QByteArray
argument_list|(
literal|"svg"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"SVGZ: rect"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"rect.svgz"
argument_list|)
operator|<<
literal|true
operator|<<
name|QByteArray
argument_list|(
literal|"svgz"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|readImage
name|void
name|tst_QImageReader
operator|::
name|readImage
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|fileName
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|success
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|format
argument_list|)
expr_stmt|;
name|SKIP_IF_UNSUPPORTED
argument_list|(
name|format
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
operator|++
name|i
control|)
block|{
name|QImageReader
name|io
argument_list|(
name|prefix
operator|+
name|fileName
argument_list|,
name|i
condition|?
name|QByteArray
argument_list|()
else|:
name|format
argument_list|)
decl_stmt|;
if|if
condition|(
name|success
condition|)
block|{
if|if
condition|(
operator|!
name|io
operator|.
name|supportsAnimation
argument_list|()
condition|)
name|QVERIFY
argument_list|(
name|io
operator|.
name|imageCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QCOMPARE
argument_list|(
name|io
operator|.
name|imageCount
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
name|QImage
name|image
init|=
name|io
operator|.
name|read
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|success
condition|)
block|{
name|QVERIFY
argument_list|(
name|image
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
return|return;
block|}
name|QVERIFY2
argument_list|(
operator|!
name|image
operator|.
name|isNull
argument_list|()
argument_list|,
name|io
operator|.
name|errorString
argument_list|()
operator|.
name|toLatin1
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|)
expr_stmt|;
comment|// No format
name|QImageReader
name|io2
argument_list|(
name|prefix
operator|+
name|fileName
argument_list|)
decl_stmt|;
name|QVERIFY2
argument_list|(
operator|!
name|io2
operator|.
name|read
argument_list|()
operator|.
name|isNull
argument_list|()
argument_list|,
name|io
operator|.
name|errorString
argument_list|()
operator|.
name|toLatin1
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|)
expr_stmt|;
comment|// No extension, no format
name|QImageReader
name|io3
argument_list|(
name|prefix
operator|+
name|fileName
operator|.
name|left
argument_list|(
name|fileName
operator|.
name|lastIndexOf
argument_list|(
name|QLatin1Char
argument_list|(
literal|'.'
argument_list|)
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY2
argument_list|(
operator|!
name|io3
operator|.
name|read
argument_list|()
operator|.
name|isNull
argument_list|()
argument_list|,
name|io
operator|.
name|errorString
argument_list|()
operator|.
name|toLatin1
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|)
expr_stmt|;
comment|// Read into \a image2
name|QImage
name|image2
decl_stmt|;
name|QImageReader
name|image2Reader
argument_list|(
name|prefix
operator|+
name|fileName
argument_list|,
name|i
condition|?
name|QByteArray
argument_list|()
else|:
name|format
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|image2Reader
operator|.
name|format
argument_list|()
argument_list|,
name|format
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|image2Reader
operator|.
name|read
argument_list|(
operator|&
name|image2
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|image2Reader
operator|.
name|canRead
argument_list|()
condition|)
block|{
if|if
condition|(
name|i
condition|)
name|QVERIFY
argument_list|(
operator|!
name|image2Reader
operator|.
name|format
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|QCOMPARE
argument_list|(
name|image2Reader
operator|.
name|format
argument_list|()
argument_list|,
name|format
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|i
condition|)
name|QVERIFY
argument_list|(
name|image2Reader
operator|.
name|format
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|QVERIFY
argument_list|(
operator|!
name|image2Reader
operator|.
name|format
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|image
argument_list|,
name|image2
argument_list|)
expr_stmt|;
do|do
block|{
name|QVERIFY2
argument_list|(
operator|!
name|image
operator|.
name|isNull
argument_list|()
argument_list|,
name|io
operator|.
name|errorString
argument_list|()
operator|.
name|toLatin1
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|)
expr_stmt|;
block|}
do|while
condition|(
operator|!
operator|(
name|image
operator|=
name|io
operator|.
name|read
argument_list|()
operator|)
operator|.
name|isNull
argument_list|()
condition|)
do|;
block|}
block|}
end_function
begin_function
DECL|function|jpegRgbCmyk
name|void
name|tst_QImageReader
operator|::
name|jpegRgbCmyk
parameter_list|()
block|{
name|QImage
name|image1
argument_list|(
name|prefix
operator|+
name|QLatin1String
argument_list|(
literal|"YCbCr_cmyk.jpg"
argument_list|)
argument_list|)
decl_stmt|;
name|QImage
name|image2
argument_list|(
name|prefix
operator|+
name|QLatin1String
argument_list|(
literal|"YCbCr_cmyk.png"
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|PlatformQuirks
operator|::
name|isImageLoaderImprecise
argument_list|()
condition|)
block|{
comment|// first, do some obvious tests
name|QCOMPARE
argument_list|(
name|image1
operator|.
name|height
argument_list|()
argument_list|,
name|image2
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|image1
operator|.
name|width
argument_list|()
argument_list|,
name|image2
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|image1
operator|.
name|format
argument_list|()
argument_list|,
name|image2
operator|.
name|format
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|image1
operator|.
name|format
argument_list|()
argument_list|,
name|QImage
operator|::
name|Format_RGB32
argument_list|)
expr_stmt|;
comment|// compare all the pixels with a slack of 3. This ignores rounding errors in libjpeg/libpng
for|for
control|(
name|int
name|h
init|=
literal|0
init|;
name|h
operator|<
name|image1
operator|.
name|height
argument_list|()
condition|;
operator|++
name|h
control|)
block|{
specifier|const
name|uchar
modifier|*
name|s1
init|=
name|image1
operator|.
name|constScanLine
argument_list|(
name|h
argument_list|)
decl_stmt|;
specifier|const
name|uchar
modifier|*
name|s2
init|=
name|image2
operator|.
name|constScanLine
argument_list|(
name|h
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|w
init|=
literal|0
init|;
name|w
operator|<
name|image1
operator|.
name|width
argument_list|()
operator|*
literal|4
condition|;
operator|++
name|w
control|)
block|{
if|if
condition|(
operator|*
name|s1
operator|!=
operator|*
name|s2
condition|)
block|{
name|QVERIFY2
argument_list|(
name|qAbs
argument_list|(
operator|*
name|s1
operator|-
operator|*
name|s2
argument_list|)
operator|<=
literal|3
argument_list|,
name|qPrintable
argument_list|(
name|QString
argument_list|(
literal|"images differ in line %1, col %2 (image1: %3, image2: %4)"
argument_list|)
operator|.
name|arg
argument_list|(
name|h
argument_list|)
operator|.
name|arg
argument_list|(
name|w
argument_list|)
operator|.
name|arg
argument_list|(
operator|*
name|s1
argument_list|,
literal|0
argument_list|,
literal|16
argument_list|)
operator|.
name|arg
argument_list|(
operator|*
name|s2
argument_list|,
literal|0
argument_list|,
literal|16
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|s1
operator|++
expr_stmt|;
name|s2
operator|++
expr_stmt|;
block|}
block|}
block|}
else|else
block|{
name|QCOMPARE
argument_list|(
name|image1
argument_list|,
name|image2
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|setScaledSize_data
name|void
name|tst_QImageReader
operator|::
name|setScaledSize_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"fileName"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QSize
argument_list|>
argument_list|(
literal|"newSize"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"format"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"BMP: colorful"
argument_list|)
operator|<<
literal|"colorful"
operator|<<
name|QSize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"bmp"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"BMP: font"
argument_list|)
operator|<<
literal|"font"
operator|<<
name|QSize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"bmp"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"XPM: marble"
argument_list|)
operator|<<
literal|"marble"
operator|<<
name|QSize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"xpm"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"PNG: kollada"
argument_list|)
operator|<<
literal|"kollada"
operator|<<
name|QSize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"png"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"PPM: teapot"
argument_list|)
operator|<<
literal|"teapot"
operator|<<
name|QSize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"ppm"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"PPM: runners"
argument_list|)
operator|<<
literal|"runners.ppm"
operator|<<
name|QSize
argument_list|(
literal|400
argument_list|,
literal|400
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"ppm"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"PPM: test"
argument_list|)
operator|<<
literal|"test.ppm"
operator|<<
name|QSize
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"ppm"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"XBM: gnus"
argument_list|)
operator|<<
literal|"gnus"
operator|<<
name|QSize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"xbm"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"JPEG: beavis A"
argument_list|)
operator|<<
literal|"beavis"
operator|<<
name|QSize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"jpeg"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"JPEG: beavis B"
argument_list|)
operator|<<
literal|"beavis"
operator|<<
name|QSize
argument_list|(
literal|175
argument_list|,
literal|175
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"jpeg"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"JPEG: beavis C"
argument_list|)
operator|<<
literal|"beavis"
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"jpeg"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"JPEG: beavis D"
argument_list|)
operator|<<
literal|"beavis"
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|200
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"jpeg"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"JPEG: beavis E"
argument_list|)
operator|<<
literal|"beavis"
operator|<<
name|QSize
argument_list|(
literal|200
argument_list|,
literal|100
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"jpeg"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"JPEG: beavis F"
argument_list|)
operator|<<
literal|"beavis"
operator|<<
name|QSize
argument_list|(
literal|87
argument_list|,
literal|87
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"jpeg"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"JPEG: beavis G"
argument_list|)
operator|<<
literal|"beavis"
operator|<<
name|QSize
argument_list|(
literal|50
argument_list|,
literal|45
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"jpeg"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"JPEG: beavis H"
argument_list|)
operator|<<
literal|"beavis"
operator|<<
name|QSize
argument_list|(
literal|43
argument_list|,
literal|43
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"jpeg"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"JPEG: beavis I"
argument_list|)
operator|<<
literal|"beavis"
operator|<<
name|QSize
argument_list|(
literal|25
argument_list|,
literal|25
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"jpeg"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"GIF: earth"
argument_list|)
operator|<<
literal|"earth"
operator|<<
name|QSize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"gif"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"GIF: trolltech"
argument_list|)
operator|<<
literal|"trolltech"
operator|<<
name|QSize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"gif"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MNG: ball"
argument_list|)
operator|<<
literal|"ball"
operator|<<
name|QSize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"mng"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MNG: fire"
argument_list|)
operator|<<
literal|"fire"
operator|<<
name|QSize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"mng"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"SVG: rect"
argument_list|)
operator|<<
literal|"rect"
operator|<<
name|QSize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"svg"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"SVGZ: rect"
argument_list|)
operator|<<
literal|"rect"
operator|<<
name|QSize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"svgz"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setScaledSize
name|void
name|tst_QImageReader
operator|::
name|setScaledSize
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|fileName
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QSize
argument_list|,
name|newSize
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|format
argument_list|)
expr_stmt|;
name|SKIP_IF_UNSUPPORTED
argument_list|(
name|format
argument_list|)
expr_stmt|;
name|QImageReader
name|reader
argument_list|(
name|prefix
operator|+
name|fileName
argument_list|)
decl_stmt|;
name|reader
operator|.
name|setScaledSize
argument_list|(
name|newSize
argument_list|)
expr_stmt|;
name|QImage
name|image
init|=
name|reader
operator|.
name|read
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|image
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|image
operator|.
name|size
argument_list|()
argument_list|,
name|newSize
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|task255627_setNullScaledSize_data
name|void
name|tst_QImageReader
operator|::
name|task255627_setNullScaledSize_data
parameter_list|()
block|{
name|setScaledSize_data
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|task255627_setNullScaledSize
name|void
name|tst_QImageReader
operator|::
name|task255627_setNullScaledSize
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|fileName
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|format
argument_list|)
expr_stmt|;
name|SKIP_IF_UNSUPPORTED
argument_list|(
name|format
argument_list|)
expr_stmt|;
name|QImageReader
name|reader
argument_list|(
name|prefix
operator|+
name|fileName
argument_list|)
decl_stmt|;
comment|// set a null size
name|reader
operator|.
name|setScaledSize
argument_list|(
name|QSize
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|reader
operator|.
name|setQuality
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QImage
name|image
init|=
name|reader
operator|.
name|read
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|image
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|image
operator|.
name|size
argument_list|()
argument_list|,
name|QSize
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setClipRect_data
name|void
name|tst_QImageReader
operator|::
name|setClipRect_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"fileName"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QRect
argument_list|>
argument_list|(
literal|"newRect"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"format"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"BMP: colorful"
argument_list|)
operator|<<
literal|"colorful"
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"bmp"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"BMP: test32bfv4"
argument_list|)
operator|<<
literal|"test32bfv4"
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"bmp"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"BMP: test32v5"
argument_list|)
operator|<<
literal|"test32v5"
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"bmp"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"BMP: font"
argument_list|)
operator|<<
literal|"font"
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"bmp"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"BMP: 4bpp uncompressed"
argument_list|)
operator|<<
literal|"tst7.bmp"
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|31
argument_list|,
literal|31
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"bmp"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"XPM: marble"
argument_list|)
operator|<<
literal|"marble"
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"xpm"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"PNG: kollada"
argument_list|)
operator|<<
literal|"kollada"
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"png"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"PPM: teapot"
argument_list|)
operator|<<
literal|"teapot"
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"ppm"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"PPM: runners"
argument_list|)
operator|<<
literal|"runners.ppm"
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"ppm"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"PPM: test"
argument_list|)
operator|<<
literal|"test.ppm"
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"ppm"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"XBM: gnus"
argument_list|)
operator|<<
literal|"gnus"
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"xbm"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"JPEG: beavis"
argument_list|)
operator|<<
literal|"beavis"
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"jpeg"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"GIF: earth"
argument_list|)
operator|<<
literal|"earth"
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"gif"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"GIF: trolltech"
argument_list|)
operator|<<
literal|"trolltech"
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"gif"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MNG: ball"
argument_list|)
operator|<<
literal|"ball"
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"mng"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MNG: fire"
argument_list|)
operator|<<
literal|"fire"
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"mng"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"SVG: rect"
argument_list|)
operator|<<
literal|"rect"
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"svg"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"SVGZ: rect"
argument_list|)
operator|<<
literal|"rect"
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"svgz"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setClipRect
name|void
name|tst_QImageReader
operator|::
name|setClipRect
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|fileName
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QRect
argument_list|,
name|newRect
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|format
argument_list|)
expr_stmt|;
name|SKIP_IF_UNSUPPORTED
argument_list|(
name|format
argument_list|)
expr_stmt|;
name|QImageReader
name|reader
argument_list|(
name|prefix
operator|+
name|fileName
argument_list|)
decl_stmt|;
name|reader
operator|.
name|setClipRect
argument_list|(
name|newRect
argument_list|)
expr_stmt|;
name|QImage
name|image
init|=
name|reader
operator|.
name|read
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|image
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|image
operator|.
name|rect
argument_list|()
argument_list|,
name|newRect
argument_list|)
expr_stmt|;
name|QImageReader
name|originalReader
argument_list|(
name|prefix
operator|+
name|fileName
argument_list|)
decl_stmt|;
name|QImage
name|originalImage
init|=
name|originalReader
operator|.
name|read
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|originalImage
operator|.
name|copy
argument_list|(
name|newRect
argument_list|)
argument_list|,
name|image
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setScaledClipRect_data
name|void
name|tst_QImageReader
operator|::
name|setScaledClipRect_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"fileName"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QRect
argument_list|>
argument_list|(
literal|"newRect"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"format"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"BMP: colorful"
argument_list|)
operator|<<
literal|"colorful"
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"bmp"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"BMP: test32bfv4"
argument_list|)
operator|<<
literal|"test32bfv4"
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"bmp"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"BMP: test32v5"
argument_list|)
operator|<<
literal|"test32v5"
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"bmp"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"BMP: font"
argument_list|)
operator|<<
literal|"font"
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"bmp"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"XPM: marble"
argument_list|)
operator|<<
literal|"marble"
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"xpm"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"PNG: kollada"
argument_list|)
operator|<<
literal|"kollada"
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"png"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"PPM: teapot"
argument_list|)
operator|<<
literal|"teapot"
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"ppm"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"PPM: runners"
argument_list|)
operator|<<
literal|"runners.ppm"
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"ppm"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"PPM: test"
argument_list|)
operator|<<
literal|"test.ppm"
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"ppm"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"XBM: gnus"
argument_list|)
operator|<<
literal|"gnus"
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"xbm"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"JPEG: beavis"
argument_list|)
operator|<<
literal|"beavis"
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"jpeg"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"GIF: earth"
argument_list|)
operator|<<
literal|"earth"
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"gif"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"GIF: trolltech"
argument_list|)
operator|<<
literal|"trolltech"
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"gif"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MNG: ball"
argument_list|)
operator|<<
literal|"ball"
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"mng"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MNG: fire"
argument_list|)
operator|<<
literal|"fire"
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"mng"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"SVG: rect"
argument_list|)
operator|<<
literal|"rect"
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"svg"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"SVGZ: rect"
argument_list|)
operator|<<
literal|"rect"
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"svgz"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setScaledClipRect
name|void
name|tst_QImageReader
operator|::
name|setScaledClipRect
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|fileName
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QRect
argument_list|,
name|newRect
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|format
argument_list|)
expr_stmt|;
name|SKIP_IF_UNSUPPORTED
argument_list|(
name|format
argument_list|)
expr_stmt|;
name|QImageReader
name|reader
argument_list|(
name|prefix
operator|+
name|fileName
argument_list|)
decl_stmt|;
name|reader
operator|.
name|setScaledSize
argument_list|(
name|QSize
argument_list|(
literal|300
argument_list|,
literal|300
argument_list|)
argument_list|)
expr_stmt|;
name|reader
operator|.
name|setScaledClipRect
argument_list|(
name|newRect
argument_list|)
expr_stmt|;
name|QImage
name|image
init|=
name|reader
operator|.
name|read
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|image
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|image
operator|.
name|rect
argument_list|()
argument_list|,
name|newRect
argument_list|)
expr_stmt|;
name|QImageReader
name|originalReader
argument_list|(
name|prefix
operator|+
name|fileName
argument_list|)
decl_stmt|;
name|originalReader
operator|.
name|setScaledSize
argument_list|(
name|QSize
argument_list|(
literal|300
argument_list|,
literal|300
argument_list|)
argument_list|)
expr_stmt|;
name|QImage
name|originalImage
init|=
name|originalReader
operator|.
name|read
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|originalImage
operator|.
name|copy
argument_list|(
name|newRect
argument_list|)
argument_list|,
name|image
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|imageFormat_data
name|void
name|tst_QImageReader
operator|::
name|imageFormat_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"fileName"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"format"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QImage
operator|::
name|Format
argument_list|>
argument_list|(
literal|"imageFormat"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"pbm"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"image.pbm"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"pbm"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_Mono
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"pgm"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"image.pgm"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"pgm"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_Indexed8
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ppm-1"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"image.ppm"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"ppm"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB32
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ppm-2"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"teapot.ppm"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"ppm"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB32
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ppm-3"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"runners.ppm"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"ppm"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB32
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ppm-4"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"test.ppm"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"ppm"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB32
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"jpeg-1"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"beavis.jpg"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"jpeg"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_Indexed8
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"jpeg-2"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"YCbCr_cmyk.jpg"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"jpeg"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB32
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"jpeg-3"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"YCbCr_rgb.jpg"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"jpeg"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB32
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"gif-1"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"earth.gif"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"gif"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_Invalid
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"gif-2"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"trolltech.gif"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"gif"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_Invalid
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"xbm"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"gnus.xbm"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"xbm"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_MonoLSB
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"xpm"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"marble.xpm"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"xpm"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_Indexed8
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"bmp-1"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"colorful.bmp"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"bmp"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_Indexed8
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"bmp-2"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"font.bmp"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"bmp"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_Indexed8
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"bmp-3"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"test32bfv4.bmp"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"bmp"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB32
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"bmp-4"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"test32v5.bmp"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"bmp"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB32
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"png"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"kollada.png"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"png"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_ARGB32
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"png-2"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"YCbCr_cmyk.png"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"png"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB32
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"mng-1"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ball.mng"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"mng"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_Invalid
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"mng-2"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"fire.mng"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"mng"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_Invalid
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"svg"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"rect.svg"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"svg"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"svgz"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"rect.svgz"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"svgz"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
expr_stmt|;
block|}
end_function
begin_function
DECL|function|imageFormat
name|void
name|tst_QImageReader
operator|::
name|imageFormat
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|fileName
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|format
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QImage
operator|::
name|Format
argument_list|,
name|imageFormat
argument_list|)
expr_stmt|;
name|SKIP_IF_UNSUPPORTED
argument_list|(
name|format
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QImageReader
operator|::
name|imageFormat
argument_list|(
name|prefix
operator|+
name|fileName
argument_list|)
argument_list|,
name|format
argument_list|)
expr_stmt|;
name|QImageReader
name|reader
argument_list|(
name|prefix
operator|+
name|fileName
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|reader
operator|.
name|imageFormat
argument_list|()
argument_list|,
name|imageFormat
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|blackXPM
name|void
name|tst_QImageReader
operator|::
name|blackXPM
parameter_list|()
block|{
name|QImage
name|image
argument_list|(
name|prefix
operator|+
name|QLatin1String
argument_list|(
literal|"black.xpm"
argument_list|)
argument_list|)
decl_stmt|;
name|QImage
name|image2
argument_list|(
name|prefix
operator|+
name|QLatin1String
argument_list|(
literal|"black.png"
argument_list|)
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|image
operator|.
name|pixel
argument_list|(
literal|25
argument_list|,
literal|25
argument_list|)
argument_list|,
name|qRgb
argument_list|(
literal|190
argument_list|,
literal|190
argument_list|,
literal|190
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|image
operator|.
name|pixel
argument_list|(
literal|25
argument_list|,
literal|25
argument_list|)
argument_list|,
name|image2
operator|.
name|pixel
argument_list|(
literal|25
argument_list|,
literal|25
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|transparentXPM
name|void
name|tst_QImageReader
operator|::
name|transparentXPM
parameter_list|()
block|{
name|QImage
name|image
argument_list|(
name|prefix
operator|+
name|QLatin1String
argument_list|(
literal|"nontransparent.xpm"
argument_list|)
argument_list|)
decl_stmt|;
name|QImage
name|image2
argument_list|(
name|prefix
operator|+
name|QLatin1String
argument_list|(
literal|"transparent.xpm"
argument_list|)
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|image
operator|.
name|format
argument_list|()
argument_list|,
name|QImage
operator|::
name|Format_RGB32
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|image2
operator|.
name|format
argument_list|()
argument_list|,
name|QImage
operator|::
name|Format_ARGB32
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|multiWordNamedColorXPM
name|void
name|tst_QImageReader
operator|::
name|multiWordNamedColorXPM
parameter_list|()
block|{
name|QImage
name|image
argument_list|(
name|prefix
operator|+
name|QLatin1String
argument_list|(
literal|"namedcolors.xpm"
argument_list|)
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|image
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|qRgb
argument_list|(
literal|102
argument_list|,
literal|139
argument_list|,
literal|139
argument_list|)
argument_list|)
expr_stmt|;
comment|// pale turquoise 4
name|QCOMPARE
argument_list|(
name|image
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|qRgb
argument_list|(
literal|250
argument_list|,
literal|250
argument_list|,
literal|210
argument_list|)
argument_list|)
expr_stmt|;
comment|// light golden rod yellow
name|QCOMPARE
argument_list|(
name|image
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|,
name|qRgb
argument_list|(
literal|255
argument_list|,
literal|250
argument_list|,
literal|205
argument_list|)
argument_list|)
expr_stmt|;
comment|// lemon chiffon
block|}
end_function
begin_function
DECL|function|supportedFormats
name|void
name|tst_QImageReader
operator|::
name|supportedFormats
parameter_list|()
block|{
name|QList
argument_list|<
name|QByteArray
argument_list|>
name|formats
init|=
name|QImageReader
operator|::
name|supportedImageFormats
argument_list|()
decl_stmt|;
name|QList
argument_list|<
name|QByteArray
argument_list|>
name|sortedFormats
init|=
name|formats
decl_stmt|;
name|qSort
argument_list|(
name|sortedFormats
argument_list|)
expr_stmt|;
comment|// check that the list is sorted
name|QCOMPARE
argument_list|(
name|formats
argument_list|,
name|sortedFormats
argument_list|)
expr_stmt|;
name|QSet
argument_list|<
name|QByteArray
argument_list|>
name|formatSet
decl_stmt|;
foreach|foreach
control|(
name|QByteArray
name|format
decl|,
name|formats
control|)
name|formatSet
operator|<<
name|format
expr_stmt|;
comment|// check that the list does not contain duplicates
name|QCOMPARE
argument_list|(
name|formatSet
operator|.
name|size
argument_list|()
argument_list|,
name|formats
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setBackgroundColor_data
name|void
name|tst_QImageReader
operator|::
name|setBackgroundColor_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"fileName"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QColor
argument_list|>
argument_list|(
literal|"color"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"BMP: colorful"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"colorful.bmp"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"BMP: font"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"font.bmp"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"BMP: signed char"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"crash-signed-char.bmp"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"XPM: marble"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"marble.xpm"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|darkRed
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"PNG: kollada"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"kollada.png"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|green
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"PPM: teapot"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"teapot.ppm"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|darkGreen
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"PPM: runners"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"runners.ppm"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"PPM: test"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"test.ppm"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"XBM: gnus"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"gnus.xbm"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|blue
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"JPEG: beavis"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"beavis.jpg"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|darkBlue
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"GIF: earth"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"earth.gif"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|cyan
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"GIF: trolltech"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"trolltech.gif"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|magenta
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MNG: ball"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ball.mng"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|yellow
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MNG: fire"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"fire.mng"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|gray
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"SVG: rect"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"rect.svg"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|darkGreen
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"SVGZ: rect"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"rect.svgz"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|darkGreen
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setBackgroundColor
name|void
name|tst_QImageReader
operator|::
name|setBackgroundColor
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|fileName
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QColor
argument_list|,
name|color
argument_list|)
expr_stmt|;
name|QImageReader
name|io
argument_list|(
literal|"images/"
operator|+
name|fileName
argument_list|)
decl_stmt|;
name|io
operator|.
name|setBackgroundColor
argument_list|(
name|color
argument_list|)
expr_stmt|;
if|if
condition|(
name|io
operator|.
name|backgroundColor
argument_list|()
operator|.
name|isValid
argument_list|()
condition|)
name|QCOMPARE
argument_list|(
name|io
operator|.
name|backgroundColor
argument_list|()
argument_list|,
name|color
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|supportsAnimation_data
name|void
name|tst_QImageReader
operator|::
name|supportsAnimation_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"fileName"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"success"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"BMP: colorful"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"colorful.bmp"
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"BMP: font"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"font.bmp"
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"BMP: signed char"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"crash-signed-char.bmp"
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"BMP: test32bfv4"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"test32bfv4.bmp"
argument_list|)
operator|<<
literal|false
expr_stmt|;
empty_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"BMP: test32v5"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"test32v5.bmp"
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"XPM: marble"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"marble.xpm"
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"PNG: kollada"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"kollada.png"
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"PPM: teapot"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"teapot.ppm"
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"PPM: teapot"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"teapot.ppm"
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"PPM: runners"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"runners.ppm"
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"XBM: gnus"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"gnus.xbm"
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"JPEG: beavis"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"beavis.jpg"
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"GIF: earth"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"earth.gif"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"GIF: trolltech"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"trolltech.gif"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MNG: ball"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ball.mng"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MNG: fire"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"fire.mng"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"SVG: rect"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"rect.svg"
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"SVGZ: rect"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"rect.svgz"
argument_list|)
operator|<<
literal|false
expr_stmt|;
block|}
end_function
begin_function
DECL|function|supportsAnimation
name|void
name|tst_QImageReader
operator|::
name|supportsAnimation
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|fileName
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|success
argument_list|)
expr_stmt|;
name|QImageReader
name|io
argument_list|(
name|prefix
operator|+
name|fileName
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|io
operator|.
name|supportsAnimation
argument_list|()
argument_list|,
name|success
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|sizeBeforeRead_data
name|void
name|tst_QImageReader
operator|::
name|sizeBeforeRead_data
parameter_list|()
block|{
name|imageFormat_data
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|sizeBeforeRead
name|void
name|tst_QImageReader
operator|::
name|sizeBeforeRead
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|fileName
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|format
argument_list|)
expr_stmt|;
name|SKIP_IF_UNSUPPORTED
argument_list|(
name|format
argument_list|)
expr_stmt|;
name|QImageReader
name|reader
argument_list|(
name|prefix
operator|+
name|fileName
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|reader
operator|.
name|canRead
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|format
operator|==
literal|"mng"
condition|)
block|{
name|QCOMPARE
argument_list|(
name|reader
operator|.
name|size
argument_list|()
argument_list|,
name|QSize
argument_list|()
argument_list|)
expr_stmt|;
return|return;
block|}
name|QSize
name|size
init|=
name|reader
operator|.
name|size
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|reader
operator|.
name|canRead
argument_list|()
argument_list|)
expr_stmt|;
name|QImage
name|image
init|=
name|reader
operator|.
name|read
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|image
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|size
argument_list|,
name|image
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|sizeBeforeFormat_data
name|void
name|tst_QImageReader
operator|::
name|sizeBeforeFormat_data
parameter_list|()
block|{
name|imageFormat_data
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|sizeBeforeFormat
name|void
name|tst_QImageReader
operator|::
name|sizeBeforeFormat
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|fileName
argument_list|)
expr_stmt|;
name|QByteArray
name|formatA
decl_stmt|,
name|formatB
decl_stmt|;
block|{
name|QImageReader
name|reader
argument_list|(
name|prefix
operator|+
name|fileName
argument_list|)
decl_stmt|;
name|formatA
operator|=
name|reader
operator|.
name|format
argument_list|()
expr_stmt|;
block|}
block|{
name|QImageReader
name|reader
argument_list|(
name|prefix
operator|+
name|fileName
argument_list|)
decl_stmt|;
name|QSize
name|size
init|=
name|reader
operator|.
name|size
argument_list|()
decl_stmt|;
name|formatB
operator|=
name|reader
operator|.
name|format
argument_list|()
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|formatA
argument_list|,
name|formatB
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|imageFormatBeforeRead_data
name|void
name|tst_QImageReader
operator|::
name|imageFormatBeforeRead_data
parameter_list|()
block|{
name|imageFormat_data
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|imageFormatBeforeRead
name|void
name|tst_QImageReader
operator|::
name|imageFormatBeforeRead
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|fileName
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|format
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QImage
operator|::
name|Format
argument_list|,
name|imageFormat
argument_list|)
expr_stmt|;
name|SKIP_IF_UNSUPPORTED
argument_list|(
name|format
argument_list|)
expr_stmt|;
name|QImageReader
name|reader
argument_list|(
name|fileName
argument_list|)
decl_stmt|;
if|if
condition|(
name|reader
operator|.
name|supportsOption
argument_list|(
name|QImageIOHandler
operator|::
name|ImageFormat
argument_list|)
condition|)
block|{
name|QImage
operator|::
name|Format
name|fileFormat
init|=
name|reader
operator|.
name|imageFormat
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|fileFormat
argument_list|,
name|imageFormat
argument_list|)
expr_stmt|;
name|QSize
name|size
init|=
name|reader
operator|.
name|size
argument_list|()
decl_stmt|;
name|QImage
name|image
argument_list|(
name|size
argument_list|,
name|fileFormat
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|reader
operator|.
name|read
argument_list|(
operator|&
name|image
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|image
operator|.
name|format
argument_list|()
argument_list|,
name|fileFormat
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|gifHandlerBugs
name|void
name|tst_QImageReader
operator|::
name|gifHandlerBugs
parameter_list|()
block|{
name|SKIP_IF_UNSUPPORTED
argument_list|(
literal|"gif"
argument_list|)
expr_stmt|;
block|{
name|QImageReader
name|io
argument_list|(
name|prefix
operator|+
literal|"trolltech.gif"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|io
operator|.
name|loopCount
argument_list|()
operator|!=
literal|1
argument_list|)
expr_stmt|;
name|int
name|count
init|=
literal|0
decl_stmt|;
for|for
control|(
init|;
name|io
operator|.
name|canRead
argument_list|()
condition|;
name|io
operator|.
name|read
argument_list|()
operator|,
operator|++
name|count
control|)
empty_stmt|;
name|QVERIFY
argument_list|(
name|count
operator|==
literal|34
argument_list|)
expr_stmt|;
block|}
comment|// Task 95166
block|{
name|QImageReader
name|io1
argument_list|(
name|prefix
operator|+
literal|"bat1.gif"
argument_list|)
decl_stmt|;
name|QImageReader
name|io2
argument_list|(
name|prefix
operator|+
literal|"bat2.gif"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|io1
operator|.
name|canRead
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|io2
operator|.
name|canRead
argument_list|()
argument_list|)
expr_stmt|;
name|QImage
name|im1
init|=
name|io1
operator|.
name|read
argument_list|()
decl_stmt|;
name|QImage
name|im2
init|=
name|io2
operator|.
name|read
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|im1
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|im2
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|im1
argument_list|,
name|im2
argument_list|)
expr_stmt|;
block|}
comment|// Task 9994
block|{
name|QImageReader
name|io1
argument_list|(
name|prefix
operator|+
literal|"noclearcode.gif"
argument_list|)
decl_stmt|;
name|QImageReader
name|io2
argument_list|(
name|prefix
operator|+
literal|"noclearcode.bmp"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|io1
operator|.
name|canRead
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|io2
operator|.
name|canRead
argument_list|()
argument_list|)
expr_stmt|;
name|QImage
name|im1
init|=
name|io1
operator|.
name|read
argument_list|()
decl_stmt|;
name|QImage
name|im2
init|=
name|io2
operator|.
name|read
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|im1
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|im2
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|im1
operator|.
name|convertToFormat
argument_list|(
name|QImage
operator|::
name|Format_ARGB32
argument_list|)
argument_list|,
name|im2
operator|.
name|convertToFormat
argument_list|(
name|QImage
operator|::
name|Format_ARGB32
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// Check the undocumented feature.
block|{
name|QImageReader
name|io
argument_list|(
name|prefix
operator|+
literal|"endless-anim.gif"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|io
operator|.
name|canRead
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|io
operator|.
name|loopCount
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|animatedGif
name|void
name|tst_QImageReader
operator|::
name|animatedGif
parameter_list|()
block|{
name|SKIP_IF_UNSUPPORTED
argument_list|(
literal|"gif"
argument_list|)
expr_stmt|;
name|QImageReader
name|io
argument_list|(
literal|":images/qt.gif"
argument_list|)
decl_stmt|;
name|QImage
name|image
init|=
name|io
operator|.
name|read
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|image
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|int
name|i
init|=
literal|0
decl_stmt|;
while|while
condition|(
operator|!
name|image
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|QString
name|frameName
init|=
name|QString
argument_list|(
literal|":images/qt%1.gif"
argument_list|)
operator|.
name|arg
argument_list|(
operator|++
name|i
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|image
argument_list|,
name|QImage
argument_list|(
name|frameName
argument_list|)
argument_list|)
expr_stmt|;
name|image
operator|=
name|io
operator|.
name|read
argument_list|()
expr_stmt|;
block|}
block|}
end_function
begin_comment
comment|// http://bugreports.qt.nokia.com/browse/QTBUG-6696
end_comment
begin_comment
comment|// Check the count of images in various call orders...
end_comment
begin_function
DECL|function|gifImageCount
name|void
name|tst_QImageReader
operator|::
name|gifImageCount
parameter_list|()
block|{
name|SKIP_IF_UNSUPPORTED
argument_list|(
literal|"gif"
argument_list|)
expr_stmt|;
comment|// just read every frame... and see how much we got..
block|{
name|QImageReader
name|io
argument_list|(
literal|":images/four-frames.gif"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|io
operator|.
name|canRead
argument_list|()
argument_list|)
expr_stmt|;
name|QImage
name|blackFrame
init|=
name|io
operator|.
name|read
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|io
operator|.
name|canRead
argument_list|()
argument_list|)
expr_stmt|;
name|QImage
name|whiteFrame
init|=
name|io
operator|.
name|read
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|io
operator|.
name|canRead
argument_list|()
argument_list|)
expr_stmt|;
name|QImage
name|greenFrame
init|=
name|io
operator|.
name|read
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|io
operator|.
name|imageCount
argument_list|()
operator|==
literal|4
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|io
operator|.
name|canRead
argument_list|()
argument_list|)
expr_stmt|;
name|QImage
name|blueFrame
init|=
name|io
operator|.
name|read
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|io
operator|.
name|canRead
argument_list|()
argument_list|)
expr_stmt|;
name|QImage
name|emptyFrame
init|=
name|io
operator|.
name|read
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|io
operator|.
name|canRead
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|blackFrame
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|qRgb
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|blackFrame
operator|.
name|size
argument_list|()
argument_list|,
name|QSize
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|whiteFrame
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|qRgb
argument_list|(
literal|0xff
argument_list|,
literal|0xff
argument_list|,
literal|0xff
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|whiteFrame
operator|.
name|size
argument_list|()
argument_list|,
name|QSize
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|greenFrame
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|qRgb
argument_list|(
literal|0x0
argument_list|,
literal|0xff
argument_list|,
literal|0x0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|greenFrame
operator|.
name|size
argument_list|()
argument_list|,
name|QSize
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|blueFrame
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|qRgb
argument_list|(
literal|0x0
argument_list|,
literal|0x0
argument_list|,
literal|0xff
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|blueFrame
operator|.
name|size
argument_list|()
argument_list|,
name|QSize
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|emptyFrame
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// Read and get the size
block|{
name|QImageReader
name|io
argument_list|(
literal|":images/four-frames.gif"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|io
operator|.
name|canRead
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|io
operator|.
name|size
argument_list|()
argument_list|,
name|QSize
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|io
operator|.
name|canRead
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|io
operator|.
name|size
argument_list|()
argument_list|,
name|QSize
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|io
operator|.
name|size
argument_list|()
argument_list|,
name|QSize
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|io
operator|.
name|canRead
argument_list|()
argument_list|)
expr_stmt|;
name|QImage
name|blackFrame
init|=
name|io
operator|.
name|read
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|io
operator|.
name|canRead
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|io
operator|.
name|size
argument_list|()
argument_list|,
name|QSize
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|io
operator|.
name|size
argument_list|()
argument_list|,
name|QSize
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|io
operator|.
name|canRead
argument_list|()
argument_list|)
expr_stmt|;
name|QImage
name|whiteFrame
init|=
name|io
operator|.
name|read
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|io
operator|.
name|canRead
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|io
operator|.
name|size
argument_list|()
argument_list|,
name|QSize
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|io
operator|.
name|size
argument_list|()
argument_list|,
name|QSize
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|io
operator|.
name|canRead
argument_list|()
argument_list|)
expr_stmt|;
name|QImage
name|greenFrame
init|=
name|io
operator|.
name|read
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|io
operator|.
name|canRead
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|io
operator|.
name|size
argument_list|()
argument_list|,
name|QSize
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|io
operator|.
name|size
argument_list|()
argument_list|,
name|QSize
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|io
operator|.
name|canRead
argument_list|()
argument_list|)
expr_stmt|;
name|QImage
name|blueFrame
init|=
name|io
operator|.
name|read
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|io
operator|.
name|canRead
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|io
operator|.
name|size
argument_list|()
argument_list|,
name|QSize
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|io
operator|.
name|size
argument_list|()
argument_list|,
name|QSize
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|io
operator|.
name|canRead
argument_list|()
argument_list|)
expr_stmt|;
name|QImage
name|emptyFrame
init|=
name|io
operator|.
name|read
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|io
operator|.
name|canRead
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|blackFrame
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|qRgb
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|blackFrame
operator|.
name|size
argument_list|()
argument_list|,
name|QSize
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|whiteFrame
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|qRgb
argument_list|(
literal|0xff
argument_list|,
literal|0xff
argument_list|,
literal|0xff
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|whiteFrame
operator|.
name|size
argument_list|()
argument_list|,
name|QSize
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|greenFrame
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|qRgb
argument_list|(
literal|0x0
argument_list|,
literal|0xff
argument_list|,
literal|0x0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|greenFrame
operator|.
name|size
argument_list|()
argument_list|,
name|QSize
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|blueFrame
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|qRgb
argument_list|(
literal|0x0
argument_list|,
literal|0x0
argument_list|,
literal|0xff
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|blueFrame
operator|.
name|size
argument_list|()
argument_list|,
name|QSize
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|emptyFrame
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// Do a Size query as substitute for canRead
block|{
name|QImageReader
name|io
argument_list|(
literal|":images/four-frames.gif"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|io
operator|.
name|size
argument_list|()
argument_list|,
name|QSize
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|io
operator|.
name|size
argument_list|()
argument_list|,
name|QSize
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|)
argument_list|)
expr_stmt|;
name|QImage
name|blackFrame
init|=
name|io
operator|.
name|read
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|io
operator|.
name|size
argument_list|()
argument_list|,
name|QSize
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|io
operator|.
name|size
argument_list|()
argument_list|,
name|QSize
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|)
argument_list|)
expr_stmt|;
name|QImage
name|whiteFrame
init|=
name|io
operator|.
name|read
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|io
operator|.
name|size
argument_list|()
argument_list|,
name|QSize
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|io
operator|.
name|size
argument_list|()
argument_list|,
name|QSize
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|)
argument_list|)
expr_stmt|;
name|QImage
name|greenFrame
init|=
name|io
operator|.
name|read
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|io
operator|.
name|size
argument_list|()
argument_list|,
name|QSize
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|io
operator|.
name|size
argument_list|()
argument_list|,
name|QSize
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|)
argument_list|)
expr_stmt|;
name|QImage
name|blueFrame
init|=
name|io
operator|.
name|read
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|io
operator|.
name|size
argument_list|()
argument_list|,
name|QSize
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|io
operator|.
name|canRead
argument_list|()
argument_list|)
expr_stmt|;
name|QImage
name|emptyFrame
init|=
name|io
operator|.
name|read
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|io
operator|.
name|canRead
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|blackFrame
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|qRgb
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|blackFrame
operator|.
name|size
argument_list|()
argument_list|,
name|QSize
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|whiteFrame
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|qRgb
argument_list|(
literal|0xff
argument_list|,
literal|0xff
argument_list|,
literal|0xff
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|whiteFrame
operator|.
name|size
argument_list|()
argument_list|,
name|QSize
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|greenFrame
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|qRgb
argument_list|(
literal|0x0
argument_list|,
literal|0xff
argument_list|,
literal|0x0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|greenFrame
operator|.
name|size
argument_list|()
argument_list|,
name|QSize
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|blueFrame
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|qRgb
argument_list|(
literal|0x0
argument_list|,
literal|0x0
argument_list|,
literal|0xff
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|blueFrame
operator|.
name|size
argument_list|()
argument_list|,
name|QSize
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|emptyFrame
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|QImageReader
name|io
argument_list|(
literal|":images/trolltech.gif"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|io
operator|.
name|imageCount
argument_list|()
operator|==
literal|34
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|io
operator|.
name|size
argument_list|()
operator|==
name|QSize
argument_list|(
literal|128
argument_list|,
literal|64
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|gifLoopCount
name|void
name|tst_QImageReader
operator|::
name|gifLoopCount
parameter_list|()
block|{
name|SKIP_IF_UNSUPPORTED
argument_list|(
literal|"gif"
argument_list|)
expr_stmt|;
block|{
name|QImageReader
name|io
argument_list|(
literal|":images/qt-gif-anim.gif"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|io
operator|.
name|loopCount
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
comment|// infinite loop
block|}
block|{
name|QImageReader
name|io
argument_list|(
literal|":images/qt-gif-noanim.gif"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|io
operator|.
name|loopCount
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// no loop
block|}
block|}
end_function
begin_class
DECL|class|Server
class|class
name|Server
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
DECL|function|Server
name|Server
parameter_list|(
specifier|const
name|QByteArray
modifier|&
name|data
parameter_list|)
member_init_list|:
name|serverSocket
argument_list|(
literal|0
argument_list|)
block|{
name|connect
argument_list|(
operator|&
name|server
argument_list|,
name|SIGNAL
argument_list|(
name|newConnection
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|acceptNewConnection
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|server
operator|.
name|listen
argument_list|()
expr_stmt|;
name|this
operator|->
name|data
operator|=
name|data
expr_stmt|;
block|}
public|public
name|slots
public|:
DECL|function|runTest
name|void
name|runTest
parameter_list|()
block|{
name|connect
argument_list|(
operator|&
name|clientSocket
argument_list|,
name|SIGNAL
argument_list|(
name|connected
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|connected
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|clientSocket
operator|.
name|connectToHost
argument_list|(
name|QHostAddress
operator|::
name|LocalHost
argument_list|,
name|server
operator|.
name|serverPort
argument_list|()
argument_list|)
expr_stmt|;
block|}
public|public:
DECL|function|socket
specifier|inline
name|QTcpSocket
modifier|*
name|socket
parameter_list|()
specifier|const
block|{
return|return
name|serverSocket
return|;
block|}
signals|signals:
name|void
name|ready
parameter_list|()
function_decl|;
private|private
name|slots
private|:
DECL|function|acceptNewConnection
name|void
name|acceptNewConnection
parameter_list|()
block|{
name|serverSocket
operator|=
name|server
operator|.
name|nextPendingConnection
argument_list|()
expr_stmt|;
name|connect
argument_list|(
name|serverSocket
argument_list|,
name|SIGNAL
argument_list|(
name|error
argument_list|(
name|QAbstractSocket
operator|::
name|SocketError
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|remoteHostClosed
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|function|connected
name|void
name|connected
parameter_list|()
block|{
name|clientSocket
operator|.
name|write
argument_list|(
name|data
argument_list|)
expr_stmt|;
name|clientSocket
operator|.
name|disconnectFromHost
argument_list|()
expr_stmt|;
block|}
DECL|function|remoteHostClosed
name|void
name|remoteHostClosed
parameter_list|()
block|{
emit|emit
name|ready
argument_list|()
emit|;
block|}
private|private:
DECL|member|server
name|QTcpServer
name|server
decl_stmt|;
DECL|member|clientSocket
name|QTcpSocket
name|clientSocket
decl_stmt|;
DECL|member|serverSocket
name|QTcpSocket
modifier|*
name|serverSocket
decl_stmt|;
DECL|member|data
name|QByteArray
name|data
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|readFromDevice_data
name|void
name|tst_QImageReader
operator|::
name|readFromDevice_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"fileName"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"format"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"pbm"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"image.pbm"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"pbm"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"pgm"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"image.pgm"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"pgm"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ppm-1"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"image.ppm"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"ppm"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ppm-2"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"teapot.ppm"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"ppm"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ppm-3"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"teapot.ppm"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"ppm"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ppm-4"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"runners.ppm"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"ppm"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"jpeg-1"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"beavis.jpg"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"jpeg"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"jpeg-2"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"YCbCr_cmyk.jpg"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"jpeg"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"jpeg-3"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"YCbCr_rgb.jpg"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"jpeg"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"jpeg-4"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"qtbug13653-no_eoi.jpg"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"jpeg"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"gif-1"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"earth.gif"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"gif"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"gif-2"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"trolltech.gif"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"gif"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"xbm"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"gnus.xbm"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"xbm"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"xpm"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"marble.xpm"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"xpm"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"bmp-1"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"colorful.bmp"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"bmp"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"bmp-2"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"font.bmp"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"bmp"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"bmp-3"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"test32bfv4.bmp"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"bmp"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"bmp-4"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"test32v5.bmp"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"bmp"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"png"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"kollada.png"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"png"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"mng-1"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ball.mng"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"mng"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"mng-2"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"fire.mng"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"mng"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"svg"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"rect.svg"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"svg"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"svgz"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"rect.svgz"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"svgz"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|readFromDevice
name|void
name|tst_QImageReader
operator|::
name|readFromDevice
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|fileName
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|format
argument_list|)
expr_stmt|;
name|SKIP_IF_UNSUPPORTED
argument_list|(
name|format
argument_list|)
expr_stmt|;
name|QImage
name|expectedImage
argument_list|(
name|prefix
operator|+
name|fileName
argument_list|,
name|format
argument_list|)
decl_stmt|;
name|QFile
name|file
argument_list|(
name|prefix
operator|+
name|fileName
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|file
operator|.
name|open
argument_list|(
name|QFile
operator|::
name|ReadOnly
argument_list|)
argument_list|)
expr_stmt|;
name|QByteArray
name|imageData
init|=
name|file
operator|.
name|readAll
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|imageData
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|{
name|QBuffer
name|buffer
decl_stmt|;
name|buffer
operator|.
name|setData
argument_list|(
name|imageData
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|buffer
operator|.
name|open
argument_list|(
name|QBuffer
operator|::
name|ReadOnly
argument_list|)
argument_list|)
expr_stmt|;
name|QImageReader
name|reader
argument_list|(
operator|&
name|buffer
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|reader
operator|.
name|canRead
argument_list|()
argument_list|)
expr_stmt|;
name|QImage
name|imageReaderImage
init|=
name|reader
operator|.
name|read
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|imageReaderImage
argument_list|,
name|expectedImage
argument_list|)
expr_stmt|;
name|buffer
operator|.
name|seek
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QImage
name|image1
decl_stmt|;
name|QVERIFY
argument_list|(
name|image1
operator|.
name|loadFromData
argument_list|(
operator|(
specifier|const
name|uchar
operator|*
operator|)
name|buffer
operator|.
name|data
argument_list|()
operator|.
name|data
argument_list|()
argument_list|,
name|buffer
operator|.
name|data
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|format
operator|.
name|data
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|image1
argument_list|,
name|expectedImage
argument_list|)
expr_stmt|;
name|QByteArray
name|throughBase64
init|=
name|QByteArray
operator|::
name|fromBase64
argument_list|(
name|imageData
operator|.
name|toBase64
argument_list|()
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|image1
operator|.
name|loadFromData
argument_list|(
operator|(
specifier|const
name|uchar
operator|*
operator|)
name|throughBase64
operator|.
name|data
argument_list|()
argument_list|,
name|throughBase64
operator|.
name|size
argument_list|()
argument_list|,
name|format
operator|.
name|data
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|image1
argument_list|,
name|expectedImage
argument_list|)
expr_stmt|;
block|}
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_SYMBIAN
argument_list|)
operator|&&
name|defined
argument_list|(
name|__WINS__
argument_list|)
comment|//the emulator hangs in socket write (this is a test bug, it assumes the TCP stack can accept a whole image to its buffers)
if|if
condition|(
name|imageData
operator|.
name|size
argument_list|()
operator|>
literal|16384
condition|)
name|QSKIP
argument_list|(
literal|"image larger than socket buffer (test needs to be rewritten)"
argument_list|,
name|SkipSingle
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|Server
name|server
argument_list|(
name|imageData
argument_list|)
decl_stmt|;
name|QEventLoop
name|loop
decl_stmt|;
name|connect
argument_list|(
operator|&
name|server
argument_list|,
name|SIGNAL
argument_list|(
name|ready
argument_list|()
argument_list|)
argument_list|,
operator|&
name|loop
argument_list|,
name|SLOT
argument_list|(
name|quit
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QTimer
operator|::
name|singleShot
argument_list|(
literal|0
argument_list|,
operator|&
name|server
argument_list|,
name|SLOT
argument_list|(
name|runTest
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QTimer
operator|::
name|singleShot
argument_list|(
literal|5000
argument_list|,
operator|&
name|loop
argument_list|,
name|SLOT
argument_list|(
name|quit
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|loop
operator|.
name|exec
argument_list|()
expr_stmt|;
name|QImageReader
name|reader
argument_list|(
name|server
operator|.
name|socket
argument_list|()
argument_list|,
name|format
operator|==
literal|"xbm"
condition|?
literal|"xbm"
else|:
literal|""
argument_list|)
decl_stmt|;
if|if
condition|(
name|format
operator|==
literal|"xbm"
condition|)
name|QVERIFY
argument_list|(
operator|!
name|reader
operator|.
name|canRead
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|QVERIFY
argument_list|(
name|reader
operator|.
name|canRead
argument_list|()
argument_list|)
expr_stmt|;
name|QImage
name|imageReaderImage
init|=
name|reader
operator|.
name|read
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|imageReaderImage
argument_list|,
name|expectedImage
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|readFromFileAfterJunk_data
name|void
name|tst_QImageReader
operator|::
name|readFromFileAfterJunk_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"fileName"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"format"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"pbm"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"image.pbm"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"pbm"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"pgm"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"image.pgm"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"pgm"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ppm-1"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"image.ppm"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"ppm"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ppm-2"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"teapot.ppm"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"ppm"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ppm-3"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"teapot.ppm"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"ppm"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ppm-4"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"runners.ppm"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"ppm"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"jpeg-1"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"beavis.jpg"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"jpeg"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"jpeg-2"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"YCbCr_cmyk.jpg"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"jpeg"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"jpeg-3"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"YCbCr_rgb.jpg"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"jpeg"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"xbm"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"gnus.xbm"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"xbm"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"xpm"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"marble.xpm"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"xpm"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"bmp-1"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"colorful.bmp"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"bmp"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"bmp-2"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"font.bmp"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"bmp"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"bmp-3"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"test32bfv4.bmp"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"bmp"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"bmp-4"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"test32v5.bmp"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"bmp"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"png"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"kollada.png"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"png"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"svg"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"rect.svg"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"svg"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"svgz"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"rect.svgz"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"svgz"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|readFromFileAfterJunk
name|void
name|tst_QImageReader
operator|::
name|readFromFileAfterJunk
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|fileName
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|format
argument_list|)
expr_stmt|;
name|SKIP_IF_UNSUPPORTED
argument_list|(
name|format
argument_list|)
expr_stmt|;
name|QFile
operator|::
name|remove
argument_list|(
literal|"junk"
argument_list|)
expr_stmt|;
name|QFile
name|junkFile
argument_list|(
literal|"junk"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|junkFile
operator|.
name|open
argument_list|(
name|QFile
operator|::
name|WriteOnly
argument_list|)
argument_list|)
expr_stmt|;
name|QFile
name|imageFile
argument_list|(
name|prefix
operator|+
name|fileName
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|imageFile
operator|.
name|open
argument_list|(
name|QFile
operator|::
name|ReadOnly
argument_list|)
argument_list|)
expr_stmt|;
name|QByteArray
name|imageData
init|=
name|imageFile
operator|.
name|readAll
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|imageData
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|int
name|iterations
init|=
literal|3
decl_stmt|;
if|if
condition|(
name|format
operator|==
literal|"ppm"
operator|||
name|format
operator|==
literal|"pbm"
operator|||
name|format
operator|==
literal|"pgm"
operator|||
name|format
operator|==
literal|"svg"
operator|||
name|format
operator|==
literal|"svgz"
condition|)
name|iterations
operator|=
literal|1
expr_stmt|;
if|if
condition|(
name|format
operator|==
literal|"mng"
operator|||
operator|!
name|QImageWriter
operator|::
name|supportedImageFormats
argument_list|()
operator|.
name|contains
argument_list|(
name|format
argument_list|)
condition|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iterations
condition|;
operator|++
name|i
control|)
block|{
name|junkFile
operator|.
name|write
argument_list|(
literal|"deadbeef"
argument_list|,
literal|9
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|junkFile
operator|.
name|write
argument_list|(
name|imageData
argument_list|)
argument_list|,
name|qint64
argument_list|(
name|imageData
operator|.
name|size
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iterations
condition|;
operator|++
name|i
control|)
block|{
name|QImageWriter
name|writer
argument_list|(
operator|&
name|junkFile
argument_list|,
name|format
argument_list|)
decl_stmt|;
name|junkFile
operator|.
name|write
argument_list|(
literal|"deadbeef"
argument_list|,
literal|9
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|writer
operator|.
name|write
argument_list|(
name|QImage
argument_list|(
name|prefix
operator|+
name|fileName
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|junkFile
operator|.
name|close
argument_list|()
expr_stmt|;
name|junkFile
operator|.
name|open
argument_list|(
name|QFile
operator|::
name|ReadOnly
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iterations
condition|;
operator|++
name|i
control|)
block|{
name|QByteArray
name|ole
init|=
name|junkFile
operator|.
name|read
argument_list|(
literal|9
argument_list|)
decl_stmt|;
name|junkFile
operator|.
name|ungetChar
argument_list|(
name|ole
index|[
name|ole
operator|.
name|size
argument_list|()
operator|-
literal|1
index|]
argument_list|)
expr_stmt|;
name|char
name|c
decl_stmt|;
name|junkFile
operator|.
name|getChar
argument_list|(
operator|&
name|c
argument_list|)
expr_stmt|;
name|QImageReader
name|reader
argument_list|(
operator|&
name|junkFile
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|reader
operator|.
name|canRead
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|reader
operator|.
name|read
argument_list|()
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|devicePosition_data
name|void
name|tst_QImageReader
operator|::
name|devicePosition_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"fileName"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"format"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"pbm"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"image.pbm"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"pbm"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"pgm"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"image.pgm"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"pgm"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ppm-1"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"image.ppm"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"ppm"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"jpeg-1"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"beavis.jpg"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"jpeg"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"jpeg-2"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"YCbCr_cmyk.jpg"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"jpeg"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"jpeg-3"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"YCbCr_rgb.jpg"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"jpeg"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"gif-1"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"earth.gif"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"gif"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"xbm"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"gnus.xbm"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"xbm"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"xpm"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"marble.xpm"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"xpm"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"bmp-1"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"colorful.bmp"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"bmp"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"bmp-2"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"font.bmp"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"bmp"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"bmp-3"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"test32bfv4.bmp"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"bmp"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"bmp-4"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"test32v5.bmp"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"bmp"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"png"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"kollada.png"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"png"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"svg"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"rect.svg"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"svg"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"svgz"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"rect.svgz"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"svgz"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|devicePosition
name|void
name|tst_QImageReader
operator|::
name|devicePosition
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|fileName
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|format
argument_list|)
expr_stmt|;
name|SKIP_IF_UNSUPPORTED
argument_list|(
name|format
argument_list|)
expr_stmt|;
name|QImage
name|expected
argument_list|(
name|prefix
operator|+
name|fileName
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|expected
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QFile
name|imageFile
argument_list|(
name|prefix
operator|+
name|fileName
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|imageFile
operator|.
name|open
argument_list|(
name|QFile
operator|::
name|ReadOnly
argument_list|)
argument_list|)
expr_stmt|;
name|QByteArray
name|imageData
init|=
name|imageFile
operator|.
name|readAll
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|imageData
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|int
name|imageDataSize
init|=
name|imageData
operator|.
name|size
argument_list|()
decl_stmt|;
specifier|const
name|char
modifier|*
name|preStr
init|=
literal|"prebeef\n"
decl_stmt|;
name|int
name|preLen
init|=
name|qstrlen
argument_list|(
name|preStr
argument_list|)
decl_stmt|;
name|imageData
operator|.
name|prepend
argument_list|(
name|preStr
argument_list|)
expr_stmt|;
if|if
condition|(
name|format
operator|!=
literal|"svg"
operator|&&
name|format
operator|!=
literal|"svgz"
condition|)
comment|// Doesn't handle trailing data
name|imageData
operator|.
name|append
argument_list|(
literal|"\npostbeef"
argument_list|)
expr_stmt|;
name|QBuffer
name|buf
argument_list|(
operator|&
name|imageData
argument_list|)
decl_stmt|;
name|buf
operator|.
name|open
argument_list|(
name|QIODevice
operator|::
name|ReadOnly
argument_list|)
expr_stmt|;
name|buf
operator|.
name|seek
argument_list|(
name|preLen
argument_list|)
expr_stmt|;
name|QImageReader
name|reader
argument_list|(
operator|&
name|buf
argument_list|,
name|format
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|expected
argument_list|,
name|reader
operator|.
name|read
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|format
operator|!=
literal|"ppm"
operator|&&
name|format
operator|!=
literal|"pgm"
operator|&&
name|format
operator|!=
literal|"pbm"
operator|&&
name|format
operator|!=
literal|"gif"
condition|)
comment|// Known not to work
name|QCOMPARE
argument_list|(
name|buf
operator|.
name|pos
argument_list|()
argument_list|,
name|qint64
argument_list|(
name|preLen
operator|+
name|imageDataSize
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|readFromResources_data
name|void
name|tst_QImageReader
operator|::
name|readFromResources_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"fileName"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"format"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QSize
argument_list|>
argument_list|(
literal|"size"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"message"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"corrupt.bmp"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"corrupt.bmp"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"bmp"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"negativeheight.bmp"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"negativeheight.bmp"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"bmp"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|127
argument_list|,
literal|64
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"font.bmp"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"font.bmp"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"bmp"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|240
argument_list|,
literal|8
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"noclearcode.bmp"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"noclearcode.bmp"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"bmp"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|29
argument_list|,
literal|18
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"colorful.bmp"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"colorful.bmp"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"bmp"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|320
argument_list|,
literal|200
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"16bpp.bmp"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"16bpp.bmp"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"bmp"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|320
argument_list|,
literal|240
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"crash-signed-char.bmp"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"crash-signed-char.bmp"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"bmp"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|360
argument_list|,
literal|280
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"4bpp-rle.bmp"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"4bpp-rle.bmp"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"bmp"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|640
argument_list|,
literal|480
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"test32bfv4.bmp"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"test32bfv4.bmp"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"bmp"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|373
argument_list|,
literal|156
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"test32v5.bmp"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"test32v5.bmp"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"bmp"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|373
argument_list|,
literal|156
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"corrupt.gif"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"corrupt.gif"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"gif"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"trolltech.gif"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"trolltech.gif"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"gif"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|128
argument_list|,
literal|64
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"noclearcode.gif"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"noclearcode.gif"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"gif"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|29
argument_list|,
literal|18
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"earth.gif"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"earth.gif"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"gif"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|320
argument_list|,
literal|200
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"bat1.gif"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"bat1.gif"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"gif"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"bat2.gif"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"bat2.gif"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"gif"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"corrupt.jpg"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"corrupt.jpg"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"jpg"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"JPEG datastream contains no image"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"beavis.jpg"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"beavis.jpg"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"jpg"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|350
argument_list|,
literal|350
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"YCbCr_cmyk.jpg"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"YCbCr_cmyk.jpg"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"jpg"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|75
argument_list|,
literal|50
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"YCbCr_rgb.jpg"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"YCbCr_rgb.jpg"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"jpg"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|75
argument_list|,
literal|50
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"qtbug13653-no_eoi.jpg"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"qtbug13653-no_eoi.jpg"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"jpg"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|240
argument_list|,
literal|180
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"corrupt.mng"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"corrupt.mng"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"mng"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"MNG error 901: Application signalled I/O error; chunk IHDR; subcode 0:0"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"fire.mng"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"fire.mng"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"mng"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|30
argument_list|,
literal|60
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ball.mng"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ball.mng"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"mng"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rect.svg"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"rect.svg"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"svg"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|105
argument_list|,
literal|137
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rect.svgz"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"rect.svgz"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"svgz"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|105
argument_list|,
literal|137
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"corrupt.svg"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"corrupt.svg"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"svg"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"corrupt.svgz"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"corrupt.svgz"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"svgz"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"image.pbm"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"image.pbm"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"pbm"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|16
argument_list|,
literal|6
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"image.pgm"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"image.pgm"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"pgm"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|24
argument_list|,
literal|7
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"corrupt.png"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"corrupt.png"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"png"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"away.png"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"away.png"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"png"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"image.png"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"image.png"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"png"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|22
argument_list|,
literal|22
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"kollada.png"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"kollada.png"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"png"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|436
argument_list|,
literal|160
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"black.png"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"black.png"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"png"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|48
argument_list|,
literal|48
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"YCbCr_cmyk.png"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"YCbCr_cmyk.png"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"png"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|75
argument_list|,
literal|50
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"teapot.ppm"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"teapot.ppm"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"ppm"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|256
argument_list|,
literal|256
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"image.ppm"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"image.ppm"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"ppm"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"runners.ppm"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"runners.ppm"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"ppm"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|400
argument_list|,
literal|400
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"test.ppm"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"test.ppm"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"ppm"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"gnus.xbm"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"gnus.xbm"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"xbm"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|271
argument_list|,
literal|273
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"corrupt-colors.xpm"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"corrupt-colors.xpm"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"xpm"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"QImage: XPM color specification is missing: bla9an.n#x"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"corrupt-pixels.xpm"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"corrupt-pixels.xpm"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"xpm"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"QImage: XPM pixels missing on image line 3"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"corrupt-pixel-count.xpm"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"corrupt-pixel-count.xpm"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"xpm"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"marble.xpm"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"marble.xpm"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"xpm"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|240
argument_list|,
literal|240
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"test.xpm"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"test.xpm"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"xpm"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|256
argument_list|,
literal|256
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"black.xpm"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"black.xpm"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"xpm"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|48
argument_list|,
literal|48
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"namedcolors.xpm"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"namedcolors.xpm"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"xpm"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|8
argument_list|,
literal|8
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"nontransparent.xpm"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"nontransparent.xpm"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"xpm"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|8
argument_list|,
literal|8
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"transparent.xpm"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"transparent.xpm"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"xpm"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|8
argument_list|,
literal|8
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|readFromResources
name|void
name|tst_QImageReader
operator|::
name|readFromResources
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|fileName
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|format
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QSize
argument_list|,
name|size
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|message
argument_list|)
expr_stmt|;
name|SKIP_IF_UNSUPPORTED
argument_list|(
name|format
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
operator|++
name|i
control|)
block|{
name|QString
name|file
init|=
name|i
condition|?
operator|(
literal|":/images/"
operator|+
name|fileName
operator|)
else|:
operator|(
name|prefix
operator|+
name|fileName
operator|)
decl_stmt|;
block|{
comment|// suppress warnings if we expect them
if|if
condition|(
operator|!
name|message
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
literal|5
condition|;
operator|++
name|j
control|)
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
name|message
operator|.
name|toLatin1
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// 1) full filename, no format
name|QImageReader
name|reader
argument_list|(
name|file
argument_list|)
decl_stmt|;
name|QImage
name|image
init|=
name|reader
operator|.
name|read
argument_list|()
decl_stmt|;
if|if
condition|(
name|size
operator|.
name|isNull
argument_list|()
condition|)
name|QVERIFY
argument_list|(
name|image
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|QVERIFY
argument_list|(
operator|!
name|image
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|image
operator|.
name|size
argument_list|()
argument_list|,
name|size
argument_list|)
expr_stmt|;
block|}
block|{
comment|// 2) full filename, with format
name|QImageReader
name|reader
argument_list|(
name|file
argument_list|,
name|format
argument_list|)
decl_stmt|;
name|QImage
name|image
init|=
name|reader
operator|.
name|read
argument_list|()
decl_stmt|;
if|if
condition|(
name|size
operator|.
name|isNull
argument_list|()
condition|)
name|QVERIFY
argument_list|(
name|image
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|QVERIFY
argument_list|(
operator|!
name|image
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|image
operator|.
name|size
argument_list|()
argument_list|,
name|size
argument_list|)
expr_stmt|;
block|}
block|{
comment|// 3) full filename, with uppercase format
name|QImageReader
name|reader
argument_list|(
name|file
argument_list|,
name|format
operator|.
name|toUpper
argument_list|()
argument_list|)
decl_stmt|;
name|QImage
name|image
init|=
name|reader
operator|.
name|read
argument_list|()
decl_stmt|;
if|if
condition|(
name|size
operator|.
name|isNull
argument_list|()
condition|)
name|QVERIFY
argument_list|(
name|image
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|QVERIFY
argument_list|(
operator|!
name|image
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|image
operator|.
name|size
argument_list|()
argument_list|,
name|size
argument_list|)
expr_stmt|;
block|}
block|{
comment|// 4) chopped filename, with format
name|QImageReader
name|reader
argument_list|(
name|file
operator|.
name|left
argument_list|(
name|file
operator|.
name|lastIndexOf
argument_list|(
name|QLatin1Char
argument_list|(
literal|'.'
argument_list|)
argument_list|)
argument_list|)
argument_list|,
name|format
argument_list|)
decl_stmt|;
name|QImage
name|image
init|=
name|reader
operator|.
name|read
argument_list|()
decl_stmt|;
if|if
condition|(
name|size
operator|.
name|isNull
argument_list|()
condition|)
name|QVERIFY
argument_list|(
name|image
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|QVERIFY
argument_list|(
operator|!
name|image
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|image
operator|.
name|size
argument_list|()
argument_list|,
name|size
argument_list|)
expr_stmt|;
block|}
block|{
comment|// 5) chopped filename, with uppercase format
name|QImageReader
name|reader
argument_list|(
name|file
operator|.
name|left
argument_list|(
name|file
operator|.
name|lastIndexOf
argument_list|(
name|QLatin1Char
argument_list|(
literal|'.'
argument_list|)
argument_list|)
argument_list|)
argument_list|,
name|format
operator|.
name|toUpper
argument_list|()
argument_list|)
decl_stmt|;
name|QImage
name|image
init|=
name|reader
operator|.
name|read
argument_list|()
decl_stmt|;
if|if
condition|(
name|size
operator|.
name|isNull
argument_list|()
condition|)
name|QVERIFY
argument_list|(
name|image
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|QVERIFY
argument_list|(
operator|!
name|image
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|image
operator|.
name|size
argument_list|()
argument_list|,
name|size
argument_list|)
expr_stmt|;
block|}
block|}
comment|// Check that the results are identical
if|if
condition|(
operator|!
name|message
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
name|message
operator|.
name|toLatin1
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
name|message
operator|.
name|toLatin1
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|QImageReader
argument_list|(
name|prefix
operator|+
name|fileName
argument_list|)
operator|.
name|read
argument_list|()
argument_list|,
name|QImageReader
argument_list|(
literal|":/images/"
operator|+
name|fileName
argument_list|)
operator|.
name|read
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|readCorruptImage_data
name|void
name|tst_QImageReader
operator|::
name|readCorruptImage_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"fileName"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"shouldFail"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"message"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"format"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"corrupt jpeg"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"corrupt.jpg"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"JPEG datastream contains no image"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"jpeg"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"corrupt gif"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"corrupt.gif"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"gif"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"corrupt mng"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"corrupt.mng"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"MNG error 901: Application signalled I/O error; chunk IHDR; subcode 0:0"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"mng"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"corrupt png"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"corrupt.png"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"png"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"corrupt bmp"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"corrupt.bmp"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"bmp"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"corrupt xpm (colors)"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"corrupt-colors.xpm"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"QImage: XPM color specification is missing: bla9an.n#x"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"xpm"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"corrupt xpm (pixels)"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"corrupt-pixels.xpm"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"QImage: XPM pixels missing on image line 3"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"xpm"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"corrupt xbm"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"corrupt.xbm"
argument_list|)
operator|<<
literal|false
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"xbm"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"corrupt tiff"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"corrupt-data.tif"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"tiff"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"corrupt svg"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"corrupt.svg"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"svg"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"corrupt svgz"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"corrupt.svgz"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"svgz"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|readCorruptImage
name|void
name|tst_QImageReader
operator|::
name|readCorruptImage
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|fileName
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|shouldFail
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|message
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|format
argument_list|)
expr_stmt|;
name|SKIP_IF_UNSUPPORTED
argument_list|(
name|format
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|message
operator|.
name|isEmpty
argument_list|()
condition|)
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
name|message
operator|.
name|toLatin1
argument_list|()
argument_list|)
expr_stmt|;
name|QImageReader
name|reader
argument_list|(
name|prefix
operator|+
name|fileName
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|reader
operator|.
name|canRead
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|reader
operator|.
name|read
argument_list|()
operator|.
name|isNull
argument_list|()
argument_list|,
name|shouldFail
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|readCorruptBmp
name|void
name|tst_QImageReader
operator|::
name|readCorruptBmp
parameter_list|()
block|{
name|QCOMPARE
argument_list|(
name|QImage
argument_list|(
name|prefix
operator|+
literal|"tst7.bmp"
argument_list|)
operator|.
name|convertToFormat
argument_list|(
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
argument_list|,
name|QImage
argument_list|(
name|prefix
operator|+
literal|"tst7.png"
argument_list|)
operator|.
name|convertToFormat
argument_list|(
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|supportsOption_data
name|void
name|tst_QImageReader
operator|::
name|supportsOption_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"fileName"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QIntList
argument_list|>
argument_list|(
literal|"options"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"png"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"black.png"
argument_list|)
operator|<<
operator|(
name|QIntList
argument_list|()
operator|<<
name|QImageIOHandler
operator|::
name|Gamma
operator|<<
name|QImageIOHandler
operator|::
name|Description
operator|<<
name|QImageIOHandler
operator|::
name|Quality
operator|<<
name|QImageIOHandler
operator|::
name|Size
operator|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|supportsOption
name|void
name|tst_QImageReader
operator|::
name|supportsOption
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|fileName
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QIntList
argument_list|,
name|options
argument_list|)
expr_stmt|;
name|QSet
argument_list|<
name|QImageIOHandler
operator|::
name|ImageOption
argument_list|>
name|allOptions
decl_stmt|;
name|allOptions
operator|<<
name|QImageIOHandler
operator|::
name|Size
operator|<<
name|QImageIOHandler
operator|::
name|ClipRect
operator|<<
name|QImageIOHandler
operator|::
name|Description
operator|<<
name|QImageIOHandler
operator|::
name|ScaledClipRect
operator|<<
name|QImageIOHandler
operator|::
name|ScaledSize
operator|<<
name|QImageIOHandler
operator|::
name|CompressionRatio
operator|<<
name|QImageIOHandler
operator|::
name|Gamma
operator|<<
name|QImageIOHandler
operator|::
name|Quality
operator|<<
name|QImageIOHandler
operator|::
name|Name
operator|<<
name|QImageIOHandler
operator|::
name|SubType
operator|<<
name|QImageIOHandler
operator|::
name|IncrementalReading
operator|<<
name|QImageIOHandler
operator|::
name|Endianness
operator|<<
name|QImageIOHandler
operator|::
name|Animation
operator|<<
name|QImageIOHandler
operator|::
name|BackgroundColor
expr_stmt|;
name|QImageReader
name|reader
argument_list|(
name|prefix
operator|+
name|fileName
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|options
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|QVERIFY
argument_list|(
name|reader
operator|.
name|supportsOption
argument_list|(
name|QImageIOHandler
operator|::
name|ImageOption
argument_list|(
name|options
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|allOptions
operator|.
name|remove
argument_list|(
name|QImageIOHandler
operator|::
name|ImageOption
argument_list|(
name|options
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
foreach|foreach
control|(
name|QImageIOHandler
operator|::
name|ImageOption
name|option
decl|,
name|allOptions
control|)
name|QVERIFY
argument_list|(
operator|!
name|reader
operator|.
name|supportsOption
argument_list|(
name|option
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|tiffCompression_data
name|void
name|tst_QImageReader
operator|::
name|tiffCompression_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"uncompressedFile"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"compressedFile"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"TIFF: adobedeflate"
argument_list|)
operator|<<
literal|"rgba_nocompression_littleendian.tif"
operator|<<
literal|"rgba_adobedeflate_littleendian.tif"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"TIFF: lzw"
argument_list|)
operator|<<
literal|"rgba_nocompression_littleendian.tif"
operator|<<
literal|"rgba_lzw_littleendian.tif"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"TIFF: packbits"
argument_list|)
operator|<<
literal|"rgba_nocompression_littleendian.tif"
operator|<<
literal|"rgba_packbits_littleendian.tif"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"TIFF: zipdeflate"
argument_list|)
operator|<<
literal|"rgba_nocompression_littleendian.tif"
operator|<<
literal|"rgba_zipdeflate_littleendian.tif"
expr_stmt|;
block|}
end_function
begin_function
DECL|function|tiffCompression
name|void
name|tst_QImageReader
operator|::
name|tiffCompression
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|uncompressedFile
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|compressedFile
argument_list|)
expr_stmt|;
name|SKIP_IF_UNSUPPORTED
argument_list|(
literal|"tiff"
argument_list|)
expr_stmt|;
name|QImage
name|uncompressedImage
argument_list|(
name|prefix
operator|+
name|uncompressedFile
argument_list|)
decl_stmt|;
name|QImage
name|compressedImage
argument_list|(
name|prefix
operator|+
name|compressedFile
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|uncompressedImage
argument_list|,
name|compressedImage
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|tiffEndianness
name|void
name|tst_QImageReader
operator|::
name|tiffEndianness
parameter_list|()
block|{
name|SKIP_IF_UNSUPPORTED
argument_list|(
literal|"tiff"
argument_list|)
expr_stmt|;
name|QImage
name|littleEndian
argument_list|(
name|prefix
operator|+
literal|"rgba_nocompression_littleendian.tif"
argument_list|)
decl_stmt|;
name|QImage
name|bigEndian
argument_list|(
name|prefix
operator|+
literal|"rgba_nocompression_bigendian.tif"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|littleEndian
argument_list|,
name|bigEndian
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|tiffOrientation_data
name|void
name|tst_QImageReader
operator|::
name|tiffOrientation_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"expected"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"oriented"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Indexed TIFF, orientation1"
argument_list|)
operator|<<
literal|"tiff_oriented/original_indexed.tiff"
operator|<<
literal|"tiff_oriented/indexed_orientation_1.tiff"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Indexed TIFF, orientation2"
argument_list|)
operator|<<
literal|"tiff_oriented/original_indexed.tiff"
operator|<<
literal|"tiff_oriented/indexed_orientation_2.tiff"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Indexed TIFF, orientation3"
argument_list|)
operator|<<
literal|"tiff_oriented/original_indexed.tiff"
operator|<<
literal|"tiff_oriented/indexed_orientation_3.tiff"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Indexed TIFF, orientation4"
argument_list|)
operator|<<
literal|"tiff_oriented/original_indexed.tiff"
operator|<<
literal|"tiff_oriented/indexed_orientation_4.tiff"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Indexed TIFF, orientation5"
argument_list|)
operator|<<
literal|"tiff_oriented/original_indexed.tiff"
operator|<<
literal|"tiff_oriented/indexed_orientation_5.tiff"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Indexed TIFF, orientation6"
argument_list|)
operator|<<
literal|"tiff_oriented/original_indexed.tiff"
operator|<<
literal|"tiff_oriented/indexed_orientation_6.tiff"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Indexed TIFF, orientation7"
argument_list|)
operator|<<
literal|"tiff_oriented/original_indexed.tiff"
operator|<<
literal|"tiff_oriented/indexed_orientation_7.tiff"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Indexed TIFF, orientation8"
argument_list|)
operator|<<
literal|"tiff_oriented/original_indexed.tiff"
operator|<<
literal|"tiff_oriented/indexed_orientation_8.tiff"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Mono TIFF, orientation1"
argument_list|)
operator|<<
literal|"tiff_oriented/original_mono.tiff"
operator|<<
literal|"tiff_oriented/mono_orientation_1.tiff"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Mono TIFF, orientation2"
argument_list|)
operator|<<
literal|"tiff_oriented/original_mono.tiff"
operator|<<
literal|"tiff_oriented/mono_orientation_2.tiff"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Mono TIFF, orientation3"
argument_list|)
operator|<<
literal|"tiff_oriented/original_mono.tiff"
operator|<<
literal|"tiff_oriented/mono_orientation_3.tiff"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Mono TIFF, orientation4"
argument_list|)
operator|<<
literal|"tiff_oriented/original_mono.tiff"
operator|<<
literal|"tiff_oriented/mono_orientation_4.tiff"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Mono TIFF, orientation5"
argument_list|)
operator|<<
literal|"tiff_oriented/original_mono.tiff"
operator|<<
literal|"tiff_oriented/mono_orientation_5.tiff"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Mono TIFF, orientation6"
argument_list|)
operator|<<
literal|"tiff_oriented/original_mono.tiff"
operator|<<
literal|"tiff_oriented/mono_orientation_6.tiff"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Mono TIFF, orientation7"
argument_list|)
operator|<<
literal|"tiff_oriented/original_mono.tiff"
operator|<<
literal|"tiff_oriented/mono_orientation_7.tiff"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Mono TIFF, orientation8"
argument_list|)
operator|<<
literal|"tiff_oriented/original_mono.tiff"
operator|<<
literal|"tiff_oriented/mono_orientation_8.tiff"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"RGB TIFF, orientation1"
argument_list|)
operator|<<
literal|"tiff_oriented/original_rgb.tiff"
operator|<<
literal|"tiff_oriented/rgb_orientation_1.tiff"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"RGB TIFF, orientation2"
argument_list|)
operator|<<
literal|"tiff_oriented/original_rgb.tiff"
operator|<<
literal|"tiff_oriented/rgb_orientation_2.tiff"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"RGB TIFF, orientation3"
argument_list|)
operator|<<
literal|"tiff_oriented/original_rgb.tiff"
operator|<<
literal|"tiff_oriented/rgb_orientation_3.tiff"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"RGB TIFF, orientation4"
argument_list|)
operator|<<
literal|"tiff_oriented/original_rgb.tiff"
operator|<<
literal|"tiff_oriented/rgb_orientation_4.tiff"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"RGB TIFF, orientation5"
argument_list|)
operator|<<
literal|"tiff_oriented/original_rgb.tiff"
operator|<<
literal|"tiff_oriented/rgb_orientation_5.tiff"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"RGB TIFF, orientation6"
argument_list|)
operator|<<
literal|"tiff_oriented/original_rgb.tiff"
operator|<<
literal|"tiff_oriented/rgb_orientation_6.tiff"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"RGB TIFF, orientation7"
argument_list|)
operator|<<
literal|"tiff_oriented/original_rgb.tiff"
operator|<<
literal|"tiff_oriented/rgb_orientation_7.tiff"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"RGB TIFF, orientation8"
argument_list|)
operator|<<
literal|"tiff_oriented/original_rgb.tiff"
operator|<<
literal|"tiff_oriented/rgb_orientation_8.tiff"
expr_stmt|;
block|}
end_function
begin_function
DECL|function|tiffOrientation
name|void
name|tst_QImageReader
operator|::
name|tiffOrientation
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|expected
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|oriented
argument_list|)
expr_stmt|;
name|SKIP_IF_UNSUPPORTED
argument_list|(
literal|"tiff"
argument_list|)
expr_stmt|;
name|QImage
name|expectedImage
argument_list|(
name|prefix
operator|+
name|expected
argument_list|)
decl_stmt|;
name|QImage
name|orientedImage
argument_list|(
name|prefix
operator|+
name|oriented
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|expectedImage
argument_list|,
name|orientedImage
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|tiffGrayscale
name|void
name|tst_QImageReader
operator|::
name|tiffGrayscale
parameter_list|()
block|{
name|SKIP_IF_UNSUPPORTED
argument_list|(
literal|"tiff"
argument_list|)
expr_stmt|;
name|QImage
name|actualImage
argument_list|(
name|prefix
operator|+
literal|"grayscale.tif"
argument_list|)
decl_stmt|;
name|QImage
name|expectedImage
argument_list|(
name|prefix
operator|+
literal|"grayscale-ref.tif"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|expectedImage
argument_list|,
name|actualImage
operator|.
name|convertToFormat
argument_list|(
name|expectedImage
operator|.
name|format
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|dotsPerMeter_data
name|void
name|tst_QImageReader
operator|::
name|dotsPerMeter_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"fileName"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expectedDotsPerMeterX"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expectedDotsPerMeterY"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"format"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"TIFF: 72 dpi"
argument_list|)
operator|<<
operator|(
literal|"rgba_nocompression_littleendian.tif"
operator|)
operator|<<
name|qRound
argument_list|(
literal|72
operator|*
operator|(
literal|100
operator|/
literal|2.54
operator|)
argument_list|)
operator|<<
name|qRound
argument_list|(
literal|72
operator|*
operator|(
literal|100
operator|/
literal|2.54
operator|)
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"tiff"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"TIFF: 100 dpi"
argument_list|)
operator|<<
operator|(
literal|"image_100dpi.tif"
operator|)
operator|<<
name|qRound
argument_list|(
literal|100
operator|*
operator|(
literal|100
operator|/
literal|2.54
operator|)
argument_list|)
operator|<<
name|qRound
argument_list|(
literal|100
operator|*
operator|(
literal|100
operator|/
literal|2.54
operator|)
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"tiff"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|dotsPerMeter
name|void
name|tst_QImageReader
operator|::
name|dotsPerMeter
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|fileName
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expectedDotsPerMeterX
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expectedDotsPerMeterY
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|format
argument_list|)
expr_stmt|;
name|SKIP_IF_UNSUPPORTED
argument_list|(
name|format
argument_list|)
expr_stmt|;
name|QImage
name|image
argument_list|(
name|prefix
operator|+
name|fileName
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|image
operator|.
name|dotsPerMeterX
argument_list|()
argument_list|,
name|expectedDotsPerMeterX
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|image
operator|.
name|dotsPerMeterY
argument_list|()
argument_list|,
name|expectedDotsPerMeterY
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|physicalDpi_data
name|void
name|tst_QImageReader
operator|::
name|physicalDpi_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"fileName"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expectedPhysicalDpiX"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expectedPhysicalDpiY"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"format"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"TIFF: 72 dpi"
argument_list|)
operator|<<
literal|"rgba_nocompression_littleendian.tif"
operator|<<
literal|72
operator|<<
literal|72
operator|<<
name|QByteArray
argument_list|(
literal|"tiff"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"TIFF: 100 dpi"
argument_list|)
operator|<<
literal|"image_100dpi.tif"
operator|<<
literal|100
operator|<<
literal|100
operator|<<
name|QByteArray
argument_list|(
literal|"tiff"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|physicalDpi
name|void
name|tst_QImageReader
operator|::
name|physicalDpi
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|fileName
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expectedPhysicalDpiX
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expectedPhysicalDpiY
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|format
argument_list|)
expr_stmt|;
name|SKIP_IF_UNSUPPORTED
argument_list|(
name|format
argument_list|)
expr_stmt|;
name|QImage
name|image
argument_list|(
name|prefix
operator|+
name|fileName
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|image
operator|.
name|physicalDpiX
argument_list|()
argument_list|,
name|expectedPhysicalDpiX
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|image
operator|.
name|physicalDpiY
argument_list|()
argument_list|,
name|expectedPhysicalDpiY
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|autoDetectImageFormat
name|void
name|tst_QImageReader
operator|::
name|autoDetectImageFormat
parameter_list|()
block|{
comment|// Assume PNG is supported :-)
block|{
comment|// Disables file name extension probing
name|QImageReader
name|reader
argument_list|(
name|prefix
operator|+
literal|"kollada"
argument_list|)
decl_stmt|;
name|reader
operator|.
name|setAutoDetectImageFormat
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|reader
operator|.
name|canRead
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|reader
operator|.
name|read
argument_list|()
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|reader
operator|.
name|setAutoDetectImageFormat
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|reader
operator|.
name|canRead
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|reader
operator|.
name|read
argument_list|()
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
comment|// Disables detection based on suffix
name|QImageReader
name|reader
argument_list|(
name|prefix
operator|+
literal|"kollada.png"
argument_list|)
decl_stmt|;
name|reader
operator|.
name|setAutoDetectImageFormat
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|reader
operator|.
name|canRead
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|reader
operator|.
name|read
argument_list|()
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|reader
operator|.
name|setAutoDetectImageFormat
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|reader
operator|.
name|canRead
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|reader
operator|.
name|read
argument_list|()
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
comment|// Disables detection based on content
name|QImageReader
name|reader
argument_list|(
name|prefix
operator|+
literal|"kollada-noext"
argument_list|)
decl_stmt|;
name|reader
operator|.
name|setAutoDetectImageFormat
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|reader
operator|.
name|canRead
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|reader
operator|.
name|read
argument_list|()
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|reader
operator|.
name|setAutoDetectImageFormat
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|reader
operator|.
name|canRead
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|reader
operator|.
name|read
argument_list|()
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|QImageReader
operator|::
name|supportedImageFormats
argument_list|()
operator|.
name|contains
argument_list|(
literal|"jpeg"
argument_list|)
condition|)
block|{
name|QImageReader
name|io
argument_list|(
name|prefix
operator|+
literal|"YCbCr_rgb.jpg"
argument_list|)
decl_stmt|;
name|io
operator|.
name|setAutoDetectImageFormat
argument_list|(
literal|false
argument_list|)
expr_stmt|;
comment|// This should fail since no format string is given
name|QImage
name|image
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|io
operator|.
name|read
argument_list|(
operator|&
name|image
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|QImageReader
operator|::
name|supportedImageFormats
argument_list|()
operator|.
name|contains
argument_list|(
literal|"jpeg"
argument_list|)
condition|)
block|{
name|QImageReader
name|io
argument_list|(
name|prefix
operator|+
literal|"YCbCr_rgb.jpg"
argument_list|,
literal|"jpg"
argument_list|)
decl_stmt|;
name|io
operator|.
name|setAutoDetectImageFormat
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QImage
name|image
decl_stmt|;
name|QVERIFY
argument_list|(
name|io
operator|.
name|read
argument_list|(
operator|&
name|image
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QImageReader
name|io
argument_list|(
name|prefix
operator|+
literal|"tst7.png"
argument_list|)
decl_stmt|;
name|io
operator|.
name|setAutoDetectImageFormat
argument_list|(
literal|false
argument_list|)
expr_stmt|;
comment|// This should fail since no format string is given
name|QImage
name|image
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|io
operator|.
name|read
argument_list|(
operator|&
name|image
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QImageReader
name|io
argument_list|(
name|prefix
operator|+
literal|"tst7.png"
argument_list|,
literal|"png"
argument_list|)
decl_stmt|;
name|io
operator|.
name|setAutoDetectImageFormat
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QImage
name|image
decl_stmt|;
name|QVERIFY
argument_list|(
name|io
operator|.
name|read
argument_list|(
operator|&
name|image
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|fileNameProbing
name|void
name|tst_QImageReader
operator|::
name|fileNameProbing
parameter_list|()
block|{
name|QString
name|name
argument_list|(
literal|"doesnotexist.png"
argument_list|)
decl_stmt|;
name|QImageReader
name|r
decl_stmt|;
name|r
operator|.
name|setFileName
argument_list|(
name|name
argument_list|)
expr_stmt|;
comment|// non-existing / non-readable file
name|QCOMPARE
argument_list|(
name|r
operator|.
name|fileName
argument_list|()
argument_list|,
name|name
argument_list|)
expr_stmt|;
name|r
operator|.
name|size
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r
operator|.
name|fileName
argument_list|()
argument_list|,
name|name
argument_list|)
expr_stmt|;
name|r
operator|.
name|read
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r
operator|.
name|fileName
argument_list|()
argument_list|,
name|name
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|pixelCompareWithBaseline_data
name|void
name|tst_QImageReader
operator|::
name|pixelCompareWithBaseline_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"fileName"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"floppy (16px,32px - 16 colors)"
argument_list|)
operator|<<
literal|"35floppy.ico"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"semitransparent"
argument_list|)
operator|<<
literal|"semitransparent.ico"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"slightlybrokenBMPHeader"
argument_list|)
operator|<<
literal|"kde_favicon.ico"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"sightlybrokenIconHeader"
argument_list|)
operator|<<
literal|"connect.ico"
expr_stmt|;
block|}
end_function
begin_function
DECL|function|pixelCompareWithBaseline
name|void
name|tst_QImageReader
operator|::
name|pixelCompareWithBaseline
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|fileName
argument_list|)
expr_stmt|;
specifier|static
name|int
name|enteredCount
init|=
literal|0
decl_stmt|;
comment|// Used for better error diagnostics if something fails. We
specifier|static
name|int
name|loadFailCount
init|=
literal|0
decl_stmt|;
comment|// don't know if the reason load() fails is that the plugin
comment|// does not exist or because of a bug in the plugin. But if at
comment|// least one file succeeded we know that the plugin was built.
comment|// The other failures are then real failures.
name|QImage
name|icoImg
decl_stmt|;
specifier|const
name|QString
name|inputFileName
argument_list|(
name|QString
operator|::
name|fromAscii
argument_list|(
literal|"images/%1"
argument_list|)
operator|.
name|arg
argument_list|(
name|fileName
argument_list|)
argument_list|)
decl_stmt|;
name|QFileInfo
name|fi
argument_list|(
name|inputFileName
argument_list|)
decl_stmt|;
operator|++
name|enteredCount
expr_stmt|;
comment|// might fail if the plugin does not exist, which is ok.
if|if
condition|(
name|icoImg
operator|.
name|load
argument_list|(
name|inputFileName
argument_list|)
condition|)
block|{
name|icoImg
operator|=
name|icoImg
operator|.
name|convertToFormat
argument_list|(
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
expr_stmt|;
specifier|const
name|QString
name|baselineFileName
argument_list|(
name|QString
operator|::
name|fromAscii
argument_list|(
literal|"baseline/%1.png"
argument_list|)
operator|.
name|arg
argument_list|(
name|fi
operator|.
name|baseName
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
if|#
directive|if
literal|0
block|icoImg.save(baselineFileName);
else|#
directive|else
name|QImage
name|baseImg
decl_stmt|;
name|QVERIFY
argument_list|(
name|baseImg
operator|.
name|load
argument_list|(
name|baselineFileName
argument_list|)
argument_list|)
expr_stmt|;
name|baseImg
operator|=
name|baseImg
operator|.
name|convertToFormat
argument_list|(
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|int
argument_list|(
name|baseImg
operator|.
name|format
argument_list|()
argument_list|)
argument_list|,
name|int
argument_list|(
name|icoImg
operator|.
name|format
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|baseImg
argument_list|,
name|icoImg
argument_list|)
expr_stmt|;
endif|#
directive|endif
block|}
else|else
block|{
operator|++
name|loadFailCount
expr_stmt|;
if|if
condition|(
name|enteredCount
operator|!=
name|loadFailCount
condition|)
block|{
name|QFAIL
argument_list|(
literal|"Plugin is built, but some did not load properly"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|qWarning
argument_list|(
literal|"loading failed, check if ico plugin is built"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_function
begin_function
DECL|function|testIgnoresFormatAndExtension_data
name|void
name|tst_QImageReader
operator|::
name|testIgnoresFormatAndExtension_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"name"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"extension"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"expected"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"black.png"
argument_list|)
operator|<<
literal|"black"
operator|<<
literal|"png"
operator|<<
literal|"png"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"black.xpm"
argument_list|)
operator|<<
literal|"black"
operator|<<
literal|"xpm"
operator|<<
literal|"xpm"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"colorful.bmp"
argument_list|)
operator|<<
literal|"colorful"
operator|<<
literal|"bmp"
operator|<<
literal|"bmp"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"image.ppm"
argument_list|)
operator|<<
literal|"image"
operator|<<
literal|"ppm"
operator|<<
literal|"ppm"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"image.pbm"
argument_list|)
operator|<<
literal|"image"
operator|<<
literal|"pbm"
operator|<<
literal|"pbm"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"image.pgm"
argument_list|)
operator|<<
literal|"image"
operator|<<
literal|"pgm"
operator|<<
literal|"pgm"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"bat1.gif"
argument_list|)
operator|<<
literal|"bat1"
operator|<<
literal|"gif"
operator|<<
literal|"gif"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"beavis.jpg"
argument_list|)
operator|<<
literal|"beavis"
operator|<<
literal|"jpg"
operator|<<
literal|"jpeg"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"fire.mng"
argument_list|)
operator|<<
literal|"fire"
operator|<<
literal|"mng"
operator|<<
literal|"mng"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"image_100dpi.tif"
argument_list|)
operator|<<
literal|"image_100dpi"
operator|<<
literal|"tif"
operator|<<
literal|"tiff"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rect.svg"
argument_list|)
operator|<<
literal|"rect"
operator|<<
literal|"svg"
operator|<<
literal|"svg"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rect.svgz"
argument_list|)
operator|<<
literal|"rect"
operator|<<
literal|"svgz"
operator|<<
literal|"svgz"
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testIgnoresFormatAndExtension
name|void
name|tst_QImageReader
operator|::
name|testIgnoresFormatAndExtension
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|name
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|extension
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|expected
argument_list|)
expr_stmt|;
name|SKIP_IF_UNSUPPORTED
argument_list|(
name|expected
operator|.
name|toLatin1
argument_list|()
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|QByteArray
argument_list|>
name|formats
init|=
name|QImageReader
operator|::
name|supportedImageFormats
argument_list|()
decl_stmt|;
name|QString
name|fileNameBase
init|=
name|prefix
operator|+
name|name
operator|+
literal|"."
decl_stmt|;
foreach|foreach
control|(
specifier|const
name|QByteArray
modifier|&
name|f
decl|,
name|formats
control|)
block|{
if|if
condition|(
name|f
operator|==
name|extension
condition|)
continue|continue;
name|QFile
name|tmp
argument_list|(
name|QDir
operator|::
name|tempPath
argument_list|()
operator|+
literal|"/"
operator|+
name|name
operator|+
literal|"_"
operator|+
name|expected
operator|+
literal|"."
operator|+
name|f
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|QFile
operator|::
name|copy
argument_list|(
name|fileNameBase
operator|+
name|extension
argument_list|,
name|QFileInfo
argument_list|(
name|tmp
argument_list|)
operator|.
name|absoluteFilePath
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QString
name|format
decl_stmt|;
name|QImage
name|image
decl_stmt|;
block|{
comment|// image reader needs to be scoped for the remove() to work..
name|QImageReader
name|r
decl_stmt|;
name|r
operator|.
name|setFileName
argument_list|(
name|QFileInfo
argument_list|(
name|tmp
argument_list|)
operator|.
name|absoluteFilePath
argument_list|()
argument_list|)
expr_stmt|;
name|r
operator|.
name|setDecideFormatFromContent
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|format
operator|=
name|r
operator|.
name|format
argument_list|()
expr_stmt|;
name|r
operator|.
name|read
argument_list|(
operator|&
name|image
argument_list|)
expr_stmt|;
block|}
name|tmp
operator|.
name|remove
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|image
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|format
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|saveFormat_data
name|void
name|tst_QImageReader
operator|::
name|saveFormat_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QImage
operator|::
name|Format
argument_list|>
argument_list|(
literal|"format"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Format_Mono"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_Mono
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Format_MonoLSB"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_MonoLSB
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Format_Indexed8"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_Indexed8
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Format_RGB32"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB32
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Format_ARGB32"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_ARGB32
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Format_ARGB32_Premultiplied"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Format_RGB16"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB16
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Format_ARGB8565_Premultiplied"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_ARGB8565_Premultiplied
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Format_RGB666"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB666
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Format_ARGB6666_Premultiplied"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_ARGB6666_Premultiplied
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Format_RGB555"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB555
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Format_ARGB8555_Premultiplied"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_ARGB8555_Premultiplied
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Format_RGB888"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB888
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Format_RGB444"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB444
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Format_ARGB4444_Premultiplied"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_ARGB4444_Premultiplied
expr_stmt|;
block|}
end_function
begin_function
DECL|function|saveFormat
name|void
name|tst_QImageReader
operator|::
name|saveFormat
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QImage
operator|::
name|Format
argument_list|,
name|format
argument_list|)
expr_stmt|;
name|QImage
name|orig
argument_list|(
literal|":/images/kollada.png"
argument_list|)
decl_stmt|;
name|QImage
name|converted
init|=
name|orig
operator|.
name|convertToFormat
argument_list|(
name|format
argument_list|)
decl_stmt|;
name|QBuffer
name|buf
decl_stmt|;
name|buf
operator|.
name|open
argument_list|(
name|QIODevice
operator|::
name|WriteOnly
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|converted
operator|.
name|save
argument_list|(
operator|&
name|buf
argument_list|,
literal|"png"
argument_list|)
argument_list|)
expr_stmt|;
name|buf
operator|.
name|close
argument_list|()
expr_stmt|;
name|QImage
name|stored
init|=
name|QImage
operator|::
name|fromData
argument_list|(
name|buf
operator|.
name|buffer
argument_list|()
argument_list|,
literal|"png"
argument_list|)
decl_stmt|;
name|stored
operator|=
name|stored
operator|.
name|convertToFormat
argument_list|(
name|QImage
operator|::
name|Format_ARGB32
argument_list|)
expr_stmt|;
name|converted
operator|=
name|converted
operator|.
name|convertToFormat
argument_list|(
name|QImage
operator|::
name|Format_ARGB32
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|stored
argument_list|,
name|converted
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|readText_data
name|void
name|tst_QImageReader
operator|::
name|readText_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"fileName"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"key"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"text"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"png, tEXt before img"
argument_list|)
operator|<<
literal|"txts.png"
operator|<<
literal|"Title"
operator|<<
literal|"PNG"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"png, zTXt before img"
argument_list|)
operator|<<
literal|"txts.png"
operator|<<
literal|"Comment"
operator|<<
literal|"Some compressed text."
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"png, tEXt after img"
argument_list|)
operator|<<
literal|"txts.png"
operator|<<
literal|"Disclaimer"
operator|<<
literal|"For testing only."
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"png, zTXt after img"
argument_list|)
operator|<<
literal|"txts.png"
operator|<<
literal|"Description"
operator|<<
literal|"Rendered by Persistence of Vision (tm) Ray Tracer"
expr_stmt|;
block|}
end_function
begin_function
DECL|function|readText
name|void
name|tst_QImageReader
operator|::
name|readText
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|fileName
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|key
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|text
argument_list|)
expr_stmt|;
name|QImage
name|img
argument_list|(
name|prefix
operator|+
name|fileName
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|img
operator|.
name|textKeys
argument_list|()
operator|.
name|contains
argument_list|(
name|key
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|img
operator|.
name|text
argument_list|(
name|key
argument_list|)
argument_list|,
name|text
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|preserveTexts_data
name|void
name|tst_QImageReader
operator|::
name|preserveTexts_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"text"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Simple"
argument_list|)
operator|<<
literal|"simpletext"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Whitespace"
argument_list|)
operator|<<
literal|" A text  with whitespace "
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Newline"
argument_list|)
operator|<<
literal|"A text\nwith newlines\n"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Double newlines"
argument_list|)
operator|<<
literal|"A text\n\nwith double newlines\n\n"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Long"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"A rather long text, at least after many repetitions. "
argument_list|)
operator|.
name|repeated
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QString
name|latin1set
decl_stmt|;
name|int
name|c
decl_stmt|;
for|for
control|(
name|c
operator|=
literal|0x20
init|;
name|c
operator|<=
literal|0x7e
condition|;
name|c
operator|++
control|)
name|latin1set
operator|.
name|append
argument_list|(
name|QLatin1Char
argument_list|(
name|c
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|c
operator|=
literal|0xa0
init|;
name|c
operator|<=
literal|0xff
condition|;
name|c
operator|++
control|)
name|latin1set
operator|.
name|append
argument_list|(
name|QLatin1Char
argument_list|(
name|c
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"All Latin1 chars"
argument_list|)
operator|<<
name|latin1set
expr_stmt|;
if|#
directive|if
literal|0
comment|// Depends on iTXt support in libpng
block|QTest::newRow("Multibyte string")<< QString::fromUtf8("\341\233\222\341\233\226\341\232\251\341\232\271\341\232\242\341\233\232\341\232\240");
endif|#
directive|endif
block|}
end_function
begin_function
DECL|function|preserveTexts
name|void
name|tst_QImageReader
operator|::
name|preserveTexts
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|text
argument_list|)
expr_stmt|;
name|QString
name|key
argument_list|(
literal|"testkey"
argument_list|)
decl_stmt|;
name|QString
name|key2
argument_list|(
literal|"testkey2"
argument_list|)
decl_stmt|;
name|QString
name|text2
argument_list|(
literal|"Some other text."
argument_list|)
decl_stmt|;
name|QString
name|key3
argument_list|(
literal|"testkey3"
argument_list|)
decl_stmt|;
name|QString
name|text3
argument_list|(
literal|"Some more other text."
argument_list|)
decl_stmt|;
name|QImage
name|img
argument_list|(
literal|":/images/kollada.png"
argument_list|)
decl_stmt|;
name|img
operator|.
name|setText
argument_list|(
name|key
argument_list|,
name|text
argument_list|)
expr_stmt|;
name|img
operator|.
name|setText
argument_list|(
name|key2
argument_list|,
name|text2
argument_list|)
expr_stmt|;
name|QBuffer
name|buf
decl_stmt|;
name|buf
operator|.
name|open
argument_list|(
name|QIODevice
operator|::
name|WriteOnly
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|img
operator|.
name|save
argument_list|(
operator|&
name|buf
argument_list|,
literal|"png"
argument_list|)
argument_list|)
expr_stmt|;
name|buf
operator|.
name|close
argument_list|()
expr_stmt|;
name|QImage
name|stored
init|=
name|QImage
operator|::
name|fromData
argument_list|(
name|buf
operator|.
name|buffer
argument_list|()
argument_list|,
literal|"png"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|stored
operator|.
name|text
argument_list|(
name|key
argument_list|)
argument_list|,
name|text
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|stored
operator|.
name|text
argument_list|(
name|key2
argument_list|)
argument_list|,
name|text2
argument_list|)
expr_stmt|;
name|QImage
name|img2
argument_list|(
literal|":/images/kollada.png"
argument_list|)
decl_stmt|;
name|img2
operator|.
name|setText
argument_list|(
name|key3
argument_list|,
name|text3
argument_list|)
expr_stmt|;
name|QBuffer
name|buf2
decl_stmt|;
name|QImageWriter
name|w
argument_list|(
operator|&
name|buf2
argument_list|,
literal|"png"
argument_list|)
decl_stmt|;
name|w
operator|.
name|setText
argument_list|(
name|key
argument_list|,
name|text
argument_list|)
expr_stmt|;
name|w
operator|.
name|setText
argument_list|(
name|key2
argument_list|,
name|text2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|w
operator|.
name|write
argument_list|(
name|img2
argument_list|)
argument_list|)
expr_stmt|;
name|buf2
operator|.
name|close
argument_list|()
expr_stmt|;
name|QImageReader
name|r
argument_list|(
operator|&
name|buf2
argument_list|,
literal|"png"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|r
operator|.
name|text
argument_list|(
name|key
argument_list|)
argument_list|,
name|text
operator|.
name|simplified
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r
operator|.
name|text
argument_list|(
name|key2
argument_list|)
argument_list|,
name|text2
operator|.
name|simplified
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r
operator|.
name|text
argument_list|(
name|key3
argument_list|)
argument_list|,
name|text3
operator|.
name|simplified
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QImageReader
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qimagereader.moc"
end_include
end_unit
