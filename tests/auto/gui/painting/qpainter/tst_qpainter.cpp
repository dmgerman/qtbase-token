begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<qpainter.h>
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_WIDGETS
end_ifndef
begin_include
include|#
directive|include
file|<qdrawutil.h>
end_include
begin_include
include|#
directive|include
file|<qapplication.h>
end_include
begin_include
include|#
directive|include
file|<qwidget.h>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_include
include|#
directive|include
file|<qfontmetrics.h>
end_include
begin_include
include|#
directive|include
file|<qbitmap.h>
end_include
begin_include
include|#
directive|include
file|<qimage.h>
end_include
begin_include
include|#
directive|include
file|<qthread.h>
end_include
begin_include
include|#
directive|include
file|<limits.h>
end_include
begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
end_if
begin_include
include|#
directive|include
file|<math.h>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_include
include|#
directive|include
file|<qpaintengine.h>
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_WIDGETS
end_ifndef
begin_include
include|#
directive|include
file|<qdesktopwidget.h>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_include
include|#
directive|include
file|<qpixmap.h>
end_include
begin_include
include|#
directive|include
file|<qpainter.h>
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_WIDGETS
end_ifndef
begin_include
include|#
directive|include
file|<qlabel.h>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_include
include|#
directive|include
file|<qqueue.h>
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_WIDGETS
end_ifndef
begin_include
include|#
directive|include
file|<qgraphicsview.h>
end_include
begin_include
include|#
directive|include
file|<qgraphicsscene.h>
end_include
begin_include
include|#
directive|include
file|<qgraphicsproxywidget.h>
end_include
begin_include
include|#
directive|include
file|<qlayout.h>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_include
include|#
directive|include
file|<qfontdatabase.h>
end_include
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QGradientStops
argument_list|)
end_macro
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QPainterPath
argument_list|)
end_macro
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QImage::Format
argument_list|)
end_macro
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QPainter::CompositionMode
argument_list|)
end_macro
begin_class
DECL|class|tst_QPainter
class|class
name|tst_QPainter
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
name|tst_QPainter
parameter_list|()
constructor_decl|;
specifier|virtual
name|~
name|tst_QPainter
parameter_list|()
destructor_decl|;
public|public
name|slots
public|:
name|void
name|init
parameter_list|()
function_decl|;
name|void
name|cleanup
parameter_list|()
function_decl|;
name|void
name|cleanupTestCase
parameter_list|()
function_decl|;
private|private
name|slots
private|:
name|void
name|getSetCheck
parameter_list|()
function_decl|;
ifndef|#
directive|ifndef
name|QT_NO_WIDGETS
name|void
name|drawPixmap_comp_data
parameter_list|()
function_decl|;
name|void
name|drawPixmap_comp
parameter_list|()
function_decl|;
endif|#
directive|endif
name|void
name|saveAndRestore_data
parameter_list|()
function_decl|;
name|void
name|saveAndRestore
parameter_list|()
function_decl|;
ifndef|#
directive|ifndef
name|QT_NO_WIDGETS
name|void
name|drawBorderPixmap
parameter_list|()
function_decl|;
endif|#
directive|endif
name|void
name|drawPixmapFragments
parameter_list|()
function_decl|;
name|void
name|drawPixmapNegativeScale
parameter_list|()
function_decl|;
name|void
name|drawLine_data
parameter_list|()
function_decl|;
name|void
name|drawLine
parameter_list|()
function_decl|;
name|void
name|drawLine_clipped
parameter_list|()
function_decl|;
name|void
name|drawLine_task121143
parameter_list|()
function_decl|;
name|void
name|drawLine_task216948
parameter_list|()
function_decl|;
name|void
name|drawLine_task190634
parameter_list|()
function_decl|;
name|void
name|drawLine_task229459
parameter_list|()
function_decl|;
name|void
name|drawLine_task234891
parameter_list|()
function_decl|;
DECL|function|drawRect_data
name|void
name|drawRect_data
parameter_list|()
block|{
name|fillData
argument_list|()
expr_stmt|;
block|}
name|void
name|drawRect
parameter_list|()
function_decl|;
name|void
name|drawRect2
parameter_list|()
function_decl|;
name|void
name|fillRect_data
parameter_list|()
function_decl|;
name|void
name|fillRect
parameter_list|()
function_decl|;
name|void
name|fillRect2_data
parameter_list|()
function_decl|;
name|void
name|fillRect2
parameter_list|()
function_decl|;
DECL|function|fillRect3_data
name|void
name|fillRect3_data
parameter_list|()
block|{
name|fillRect2_data
argument_list|()
expr_stmt|;
block|}
name|void
name|fillRect3
parameter_list|()
function_decl|;
DECL|function|fillRect4_data
name|void
name|fillRect4_data
parameter_list|()
block|{
name|fillRect2_data
argument_list|()
expr_stmt|;
block|}
name|void
name|fillRect4
parameter_list|()
function_decl|;
name|void
name|fillRectNonPremul
parameter_list|()
function_decl|;
name|void
name|drawEllipse_data
parameter_list|()
function_decl|;
name|void
name|drawEllipse
parameter_list|()
function_decl|;
name|void
name|drawClippedEllipse_data
parameter_list|()
function_decl|;
name|void
name|drawClippedEllipse
parameter_list|()
function_decl|;
name|void
name|drawPath_data
parameter_list|()
function_decl|;
name|void
name|drawPath
parameter_list|()
function_decl|;
name|void
name|drawPath2
parameter_list|()
function_decl|;
name|void
name|drawPath3
parameter_list|()
function_decl|;
DECL|function|drawRoundRect_data
name|void
name|drawRoundRect_data
parameter_list|()
block|{
name|fillData
argument_list|()
expr_stmt|;
block|}
name|void
name|drawRoundRect
parameter_list|()
function_decl|;
name|void
name|qimageFormats_data
parameter_list|()
function_decl|;
name|void
name|qimageFormats
parameter_list|()
function_decl|;
name|void
name|textOnTransparentImage
parameter_list|()
function_decl|;
ifndef|#
directive|ifndef
name|QT_NO_WIDGETS
name|void
name|initFrom
parameter_list|()
function_decl|;
endif|#
directive|endif
name|void
name|setWindow
parameter_list|()
function_decl|;
name|void
name|combinedMatrix
parameter_list|()
function_decl|;
name|void
name|renderHints
parameter_list|()
function_decl|;
name|void
name|disableEnableClipping
parameter_list|()
function_decl|;
name|void
name|setClipRect
parameter_list|()
function_decl|;
name|void
name|setEqualClipRegionAndPath_data
parameter_list|()
function_decl|;
name|void
name|setEqualClipRegionAndPath
parameter_list|()
function_decl|;
name|void
name|clipRectSaveRestore
parameter_list|()
function_decl|;
name|void
name|clippedFillPath_data
parameter_list|()
function_decl|;
name|void
name|clippedFillPath
parameter_list|()
function_decl|;
name|void
name|clippedLines_data
parameter_list|()
function_decl|;
name|void
name|clippedLines
parameter_list|()
function_decl|;
name|void
name|clippedPolygon_data
parameter_list|()
function_decl|;
name|void
name|clippedPolygon
parameter_list|()
function_decl|;
name|void
name|clippedText
parameter_list|()
function_decl|;
name|void
name|clipBoundingRect
parameter_list|()
function_decl|;
name|void
name|setOpacity_data
parameter_list|()
function_decl|;
name|void
name|setOpacity
parameter_list|()
function_decl|;
name|void
name|drawhelper_blend_untransformed_data
parameter_list|()
function_decl|;
name|void
name|drawhelper_blend_untransformed
parameter_list|()
function_decl|;
name|void
name|drawhelper_blend_tiled_untransformed_data
parameter_list|()
function_decl|;
name|void
name|drawhelper_blend_tiled_untransformed
parameter_list|()
function_decl|;
name|void
name|porterDuff_warning
parameter_list|()
function_decl|;
name|void
name|drawhelper_blend_color
parameter_list|()
function_decl|;
ifndef|#
directive|ifndef
name|QT_NO_WIDGETS
name|void
name|childWidgetViewport
parameter_list|()
function_decl|;
endif|#
directive|endif
name|void
name|fillRect_objectBoundingModeGradient
parameter_list|()
function_decl|;
name|void
name|fillRect_stretchToDeviceMode
parameter_list|()
function_decl|;
name|void
name|monoImages
parameter_list|()
function_decl|;
name|void
name|linearGradientSymmetry_data
parameter_list|()
function_decl|;
name|void
name|linearGradientSymmetry
parameter_list|()
function_decl|;
name|void
name|gradientInterpolation
parameter_list|()
function_decl|;
name|void
name|fpe_pixmapTransform
parameter_list|()
function_decl|;
name|void
name|fpe_zeroLengthLines
parameter_list|()
function_decl|;
name|void
name|fpe_divByZero
parameter_list|()
function_decl|;
name|void
name|fpe_steepSlopes_data
parameter_list|()
function_decl|;
name|void
name|fpe_steepSlopes
parameter_list|()
function_decl|;
name|void
name|fpe_rasterizeLine_task232012
parameter_list|()
function_decl|;
name|void
name|fpe_radialGradients
parameter_list|()
function_decl|;
name|void
name|rasterizer_asserts
parameter_list|()
function_decl|;
name|void
name|rasterizer_negativeCoords
parameter_list|()
function_decl|;
name|void
name|blendOverFlow_data
parameter_list|()
function_decl|;
name|void
name|blendOverFlow
parameter_list|()
function_decl|;
name|void
name|largeImagePainting_data
parameter_list|()
function_decl|;
name|void
name|largeImagePainting
parameter_list|()
function_decl|;
name|void
name|imageScaling_task206785
parameter_list|()
function_decl|;
name|void
name|outlineFillConsistency
parameter_list|()
function_decl|;
name|void
name|drawImage_task217400_data
parameter_list|()
function_decl|;
name|void
name|drawImage_task217400
parameter_list|()
function_decl|;
name|void
name|drawImage_1x1
parameter_list|()
function_decl|;
name|void
name|drawImage_task258776
parameter_list|()
function_decl|;
name|void
name|drawImage_QTBUG28324
parameter_list|()
function_decl|;
name|void
name|drawRect_task215378
parameter_list|()
function_decl|;
name|void
name|drawRect_task247505
parameter_list|()
function_decl|;
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_MAC
argument_list|)
name|void
name|drawText_subPixelPositionsInRaster_qtbug5053
parameter_list|()
function_decl|;
endif|#
directive|endif
name|void
name|drawImage_data
parameter_list|()
function_decl|;
name|void
name|drawImage
parameter_list|()
function_decl|;
name|void
name|clippedImage
parameter_list|()
function_decl|;
name|void
name|stateResetBetweenQPainters
parameter_list|()
function_decl|;
name|void
name|imageCoordinateLimit
parameter_list|()
function_decl|;
name|void
name|imageBlending_data
parameter_list|()
function_decl|;
name|void
name|imageBlending
parameter_list|()
function_decl|;
name|void
name|imageBlending_clipped
parameter_list|()
function_decl|;
name|void
name|paintOnNullPixmap
parameter_list|()
function_decl|;
name|void
name|checkCompositionMode
parameter_list|()
function_decl|;
name|void
name|drawPolygon
parameter_list|()
function_decl|;
name|void
name|inactivePainter
parameter_list|()
function_decl|;
name|void
name|extendedBlendModes
parameter_list|()
function_decl|;
name|void
name|zeroOpacity
parameter_list|()
function_decl|;
name|void
name|clippingBug
parameter_list|()
function_decl|;
name|void
name|emptyClip
parameter_list|()
function_decl|;
name|void
name|taskQT4444_dontOverflowDashOffset
parameter_list|()
function_decl|;
name|void
name|painterBegin
parameter_list|()
function_decl|;
name|void
name|setPenColorOnImage
parameter_list|()
function_decl|;
name|void
name|setPenColorOnPixmap
parameter_list|()
function_decl|;
ifndef|#
directive|ifndef
name|QT_NO_WIDGETS
name|void
name|QTBUG5939_attachPainterPrivate
parameter_list|()
function_decl|;
endif|#
directive|endif
name|void
name|drawPointScaled
parameter_list|()
function_decl|;
name|void
name|QTBUG14614_gradientCacheRaceCondition
parameter_list|()
function_decl|;
name|void
name|drawTextOpacity
parameter_list|()
function_decl|;
name|void
name|QTBUG17053_zeroDashPattern
parameter_list|()
function_decl|;
name|void
name|drawTextOutsideGuiThread
parameter_list|()
function_decl|;
name|void
name|drawTextWithComplexBrush
parameter_list|()
function_decl|;
name|void
name|QTBUG26013_squareCapStroke
parameter_list|()
function_decl|;
name|void
name|QTBUG25153_drawLine
parameter_list|()
function_decl|;
name|void
name|cosmeticStrokerClipping_data
parameter_list|()
function_decl|;
name|void
name|cosmeticStrokerClipping
parameter_list|()
function_decl|;
name|void
name|blendARGBonRGB_data
parameter_list|()
function_decl|;
name|void
name|blendARGBonRGB
parameter_list|()
function_decl|;
private|private:
name|void
name|fillData
parameter_list|()
function_decl|;
name|void
name|setPenColor
parameter_list|(
name|QPainter
modifier|&
name|p
parameter_list|)
function_decl|;
name|QColor
name|baseColor
parameter_list|(
name|int
name|k
parameter_list|,
name|int
name|intensity
init|=
literal|255
parameter_list|)
function_decl|;
name|QImage
name|getResImage
parameter_list|(
specifier|const
name|QString
modifier|&
name|dir
parameter_list|,
specifier|const
name|QString
modifier|&
name|addition
parameter_list|,
specifier|const
name|QString
modifier|&
name|extension
parameter_list|)
function_decl|;
name|QBitmap
name|getBitmap
parameter_list|(
specifier|const
name|QString
modifier|&
name|dir
parameter_list|,
specifier|const
name|QString
modifier|&
name|filename
parameter_list|,
name|bool
name|mask
parameter_list|)
function_decl|;
block|}
class|;
end_class
begin_comment
comment|// Testing get/set functions
end_comment
begin_function
DECL|function|getSetCheck
name|void
name|tst_QPainter
operator|::
name|getSetCheck
parameter_list|()
block|{
name|QImage
name|img
argument_list|(
name|QSize
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|QPainter
name|obj1
decl_stmt|;
name|obj1
operator|.
name|begin
argument_list|(
operator|&
name|img
argument_list|)
expr_stmt|;
comment|// CompositionMode QPainter::compositionMode()
comment|// void QPainter::setCompositionMode(CompositionMode)
name|obj1
operator|.
name|setCompositionMode
argument_list|(
name|QPainter
operator|::
name|CompositionMode
argument_list|(
name|QPainter
operator|::
name|CompositionMode_SourceOver
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QPainter
operator|::
name|CompositionMode
argument_list|(
name|QPainter
operator|::
name|CompositionMode_SourceOver
argument_list|)
argument_list|,
name|obj1
operator|.
name|compositionMode
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setCompositionMode
argument_list|(
name|QPainter
operator|::
name|CompositionMode
argument_list|(
name|QPainter
operator|::
name|CompositionMode_DestinationOver
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QPainter
operator|::
name|CompositionMode
argument_list|(
name|QPainter
operator|::
name|CompositionMode_DestinationOver
argument_list|)
argument_list|,
name|obj1
operator|.
name|compositionMode
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setCompositionMode
argument_list|(
name|QPainter
operator|::
name|CompositionMode
argument_list|(
name|QPainter
operator|::
name|CompositionMode_Clear
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QPainter
operator|::
name|CompositionMode
argument_list|(
name|QPainter
operator|::
name|CompositionMode_Clear
argument_list|)
argument_list|,
name|obj1
operator|.
name|compositionMode
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setCompositionMode
argument_list|(
name|QPainter
operator|::
name|CompositionMode
argument_list|(
name|QPainter
operator|::
name|CompositionMode_Source
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QPainter
operator|::
name|CompositionMode
argument_list|(
name|QPainter
operator|::
name|CompositionMode_Source
argument_list|)
argument_list|,
name|obj1
operator|.
name|compositionMode
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setCompositionMode
argument_list|(
name|QPainter
operator|::
name|CompositionMode
argument_list|(
name|QPainter
operator|::
name|CompositionMode_Destination
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QPainter
operator|::
name|CompositionMode
argument_list|(
name|QPainter
operator|::
name|CompositionMode_Destination
argument_list|)
argument_list|,
name|obj1
operator|.
name|compositionMode
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setCompositionMode
argument_list|(
name|QPainter
operator|::
name|CompositionMode
argument_list|(
name|QPainter
operator|::
name|CompositionMode_SourceIn
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QPainter
operator|::
name|CompositionMode
argument_list|(
name|QPainter
operator|::
name|CompositionMode_SourceIn
argument_list|)
argument_list|,
name|obj1
operator|.
name|compositionMode
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setCompositionMode
argument_list|(
name|QPainter
operator|::
name|CompositionMode
argument_list|(
name|QPainter
operator|::
name|CompositionMode_DestinationIn
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QPainter
operator|::
name|CompositionMode
argument_list|(
name|QPainter
operator|::
name|CompositionMode_DestinationIn
argument_list|)
argument_list|,
name|obj1
operator|.
name|compositionMode
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setCompositionMode
argument_list|(
name|QPainter
operator|::
name|CompositionMode
argument_list|(
name|QPainter
operator|::
name|CompositionMode_SourceOut
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QPainter
operator|::
name|CompositionMode
argument_list|(
name|QPainter
operator|::
name|CompositionMode_SourceOut
argument_list|)
argument_list|,
name|obj1
operator|.
name|compositionMode
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setCompositionMode
argument_list|(
name|QPainter
operator|::
name|CompositionMode
argument_list|(
name|QPainter
operator|::
name|CompositionMode_DestinationOut
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QPainter
operator|::
name|CompositionMode
argument_list|(
name|QPainter
operator|::
name|CompositionMode_DestinationOut
argument_list|)
argument_list|,
name|obj1
operator|.
name|compositionMode
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setCompositionMode
argument_list|(
name|QPainter
operator|::
name|CompositionMode
argument_list|(
name|QPainter
operator|::
name|CompositionMode_SourceAtop
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QPainter
operator|::
name|CompositionMode
argument_list|(
name|QPainter
operator|::
name|CompositionMode_SourceAtop
argument_list|)
argument_list|,
name|obj1
operator|.
name|compositionMode
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setCompositionMode
argument_list|(
name|QPainter
operator|::
name|CompositionMode
argument_list|(
name|QPainter
operator|::
name|CompositionMode_DestinationAtop
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QPainter
operator|::
name|CompositionMode
argument_list|(
name|QPainter
operator|::
name|CompositionMode_DestinationAtop
argument_list|)
argument_list|,
name|obj1
operator|.
name|compositionMode
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setCompositionMode
argument_list|(
name|QPainter
operator|::
name|CompositionMode
argument_list|(
name|QPainter
operator|::
name|CompositionMode_Xor
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QPainter
operator|::
name|CompositionMode
argument_list|(
name|QPainter
operator|::
name|CompositionMode_Xor
argument_list|)
argument_list|,
name|obj1
operator|.
name|compositionMode
argument_list|()
argument_list|)
expr_stmt|;
comment|// const QPen& QPainter::pen()
comment|// void QPainter::setPen(const QPen&)
name|QPen
name|var3
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
decl_stmt|;
name|obj1
operator|.
name|setPen
argument_list|(
name|var3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|var3
argument_list|,
name|obj1
operator|.
name|pen
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setPen
argument_list|(
name|QPen
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QPen
argument_list|()
argument_list|,
name|obj1
operator|.
name|pen
argument_list|()
argument_list|)
expr_stmt|;
comment|// const QBrush& QPainter::brush()
comment|// void QPainter::setBrush(const QBrush&)
name|QBrush
name|var4
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
decl_stmt|;
name|obj1
operator|.
name|setBrush
argument_list|(
name|var4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|var4
argument_list|,
name|obj1
operator|.
name|brush
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setBrush
argument_list|(
name|QBrush
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QBrush
argument_list|()
argument_list|,
name|obj1
operator|.
name|brush
argument_list|()
argument_list|)
expr_stmt|;
comment|// const QBrush& QPainter::background()
comment|// void QPainter::setBackground(const QBrush&)
name|QBrush
name|var5
argument_list|(
name|Qt
operator|::
name|yellow
argument_list|)
decl_stmt|;
name|obj1
operator|.
name|setBackground
argument_list|(
name|var5
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|var5
argument_list|,
name|obj1
operator|.
name|background
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setBackground
argument_list|(
name|QBrush
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QBrush
argument_list|()
argument_list|,
name|obj1
operator|.
name|background
argument_list|()
argument_list|)
expr_stmt|;
comment|// bool QPainter::matrixEnabled()
comment|// void QPainter::setMatrixEnabled(bool)
name|obj1
operator|.
name|setMatrixEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|false
argument_list|,
name|obj1
operator|.
name|matrixEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setMatrixEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|true
argument_list|,
name|obj1
operator|.
name|matrixEnabled
argument_list|()
argument_list|)
expr_stmt|;
comment|// bool QPainter::viewTransformEnabled()
comment|// void QPainter::setViewTransformEnabled(bool)
name|obj1
operator|.
name|setViewTransformEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|false
argument_list|,
name|obj1
operator|.
name|viewTransformEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setViewTransformEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|true
argument_list|,
name|obj1
operator|.
name|viewTransformEnabled
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_constructor
DECL|function|tst_QPainter
name|tst_QPainter
operator|::
name|tst_QPainter
parameter_list|()
block|{
comment|// QtTestCase sets this to false, but this turns off alpha pixmaps on Unix.
name|QGuiApplication
operator|::
name|setDesktopSettingsAware
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_destructor
DECL|function|~tst_QPainter
name|tst_QPainter
operator|::
name|~
name|tst_QPainter
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|init
name|void
name|tst_QPainter
operator|::
name|init
parameter_list|()
block|{ }
end_function
begin_function
DECL|function|cleanup
name|void
name|tst_QPainter
operator|::
name|cleanup
parameter_list|()
block|{ }
end_function
begin_function
DECL|function|cleanupTestCase
name|void
name|tst_QPainter
operator|::
name|cleanupTestCase
parameter_list|()
block|{
name|QFile
operator|::
name|remove
argument_list|(
name|QLatin1String
argument_list|(
literal|"dest.png"
argument_list|)
argument_list|)
expr_stmt|;
name|QFile
operator|::
name|remove
argument_list|(
name|QLatin1String
argument_list|(
literal|"expected.png"
argument_list|)
argument_list|)
expr_stmt|;
name|QFile
operator|::
name|remove
argument_list|(
name|QLatin1String
argument_list|(
literal|"foo.png"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_decl_stmt
DECL|variable|maskSource_data
specifier|static
specifier|const
name|char
modifier|*
specifier|const
name|maskSource_data
index|[]
init|=
block|{
literal|"16 13 6 1"
block|,
literal|". c None"
block|,
literal|"d c #000000"
block|,
literal|"# c #999999"
block|,
literal|"c c #cccccc"
block|,
literal|"b c #ffff00"
block|,
literal|"a c #ffffff"
block|,
literal|"...#####........"
block|,
literal|"..#aaaaa#......."
block|,
literal|".#abcbcba######."
block|,
literal|".#acbcbcaaaaaa#d"
block|,
literal|".#abcbcbcbcbcb#d"
block|,
literal|"#############b#d"
block|,
literal|"#aaaaaaaaaa##c#d"
block|,
literal|"#abcbcbcbcbbd##d"
block|,
literal|".#abcbcbcbcbcd#d"
block|,
literal|".#acbcbcbcbcbd#d"
block|,
literal|"..#acbcbcbcbb#dd"
block|,
literal|"..#############d"
block|,
literal|"...ddddddddddddd"
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|maskResult_data
specifier|static
specifier|const
name|char
modifier|*
specifier|const
name|maskResult_data
index|[]
init|=
block|{
literal|"16 13 6 1"
block|,
literal|". c #ff0000"
block|,
literal|"d c #000000"
block|,
literal|"# c #999999"
block|,
literal|"c c #cccccc"
block|,
literal|"b c #ffff00"
block|,
literal|"a c #ffffff"
block|,
literal|"...#####........"
block|,
literal|"..#aaaaa#......."
block|,
literal|".#abcbcba######."
block|,
literal|".#acbcbcaaaaaa#d"
block|,
literal|".#abcbcbcbcbcb#d"
block|,
literal|"#############b#d"
block|,
literal|"#aaaaaaaaaa##c#d"
block|,
literal|"#abcbcbcbcbbd##d"
block|,
literal|".#abcbcbcbcbcd#d"
block|,
literal|".#acbcbcbcbcbd#d"
block|,
literal|"..#acbcbcbcbb#dd"
block|,
literal|"..#############d"
block|,
literal|"...ddddddddddddd"
block|}
decl_stmt|;
end_decl_stmt
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_WIDGETS
end_ifndef
begin_function
DECL|function|drawPixmap_comp_data
name|void
name|tst_QPainter
operator|::
name|drawPixmap_comp_data
parameter_list|()
block|{
if|if
condition|(
name|qApp
operator|->
name|desktop
argument_list|()
operator|->
name|depth
argument_list|()
operator|<
literal|24
condition|)
name|QSKIP
argument_list|(
literal|"Test only works on 32 bit displays"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|uint
argument_list|>
argument_list|(
literal|"dest"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|uint
argument_list|>
argument_list|(
literal|"source"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0% on 0%, 1"
argument_list|)
operator|<<
literal|0x00000000u
operator|<<
literal|0x00000000u
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0% on 0%, 2"
argument_list|)
operator|<<
literal|0x00007fffu
operator|<<
literal|0x00ff007fu
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"50% on a=0%"
argument_list|)
operator|<<
literal|0x00000000u
operator|<<
literal|0x7fff0000u
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"50% on a=50%"
argument_list|)
operator|<<
literal|0x7f000000u
operator|<<
literal|0x7fff0000u
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"50% on deadbeef"
argument_list|)
operator|<<
literal|0xdeafbeefu
operator|<<
literal|0x7fff0000u
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"deadbeef on a=0%"
argument_list|)
operator|<<
literal|0x00000000u
operator|<<
literal|0xdeadbeefu
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"deadbeef on a=50%"
argument_list|)
operator|<<
literal|0x7f000000u
operator|<<
literal|0xdeadbeefu
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"50% blue on 50% red"
argument_list|)
operator|<<
literal|0x7fff0000u
operator|<<
literal|0x7f0000ffu
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"50% blue on 50% green"
argument_list|)
operator|<<
literal|0x7f00ff00u
operator|<<
literal|0x7f0000ffu
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"50% red on 50% green"
argument_list|)
operator|<<
literal|0x7f00ff00u
operator|<<
literal|0x7fff0000u
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0% on 50%"
argument_list|)
operator|<<
literal|0x7fff00ffu
operator|<<
literal|0x00ffffffu
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"100% on deadbeef"
argument_list|)
operator|<<
literal|0xdeafbeefu
operator|<<
literal|0xffabcdefu
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"100% on a=0%"
argument_list|)
operator|<<
literal|0x00000000u
operator|<<
literal|0xffabcdefu
expr_stmt|;
block|}
end_function
begin_function
DECL|function|qt_compose_alpha
name|QRgb
name|qt_compose_alpha
parameter_list|(
name|QRgb
name|source
parameter_list|,
name|QRgb
name|dest
parameter_list|)
block|{
name|int
name|r1
init|=
name|qRed
argument_list|(
name|dest
argument_list|)
decl_stmt|,
name|g1
init|=
name|qGreen
argument_list|(
name|dest
argument_list|)
decl_stmt|,
name|b1
init|=
name|qBlue
argument_list|(
name|dest
argument_list|)
decl_stmt|,
name|a1
init|=
name|qAlpha
argument_list|(
name|dest
argument_list|)
decl_stmt|;
name|int
name|r2
init|=
name|qRed
argument_list|(
name|source
argument_list|)
decl_stmt|,
name|g2
init|=
name|qGreen
argument_list|(
name|source
argument_list|)
decl_stmt|,
name|b2
init|=
name|qBlue
argument_list|(
name|source
argument_list|)
decl_stmt|,
name|a2
init|=
name|qAlpha
argument_list|(
name|source
argument_list|)
decl_stmt|;
name|int
name|alpha
init|=
name|qMin
argument_list|(
name|a2
operator|+
operator|(
operator|(
literal|255
operator|-
name|a2
operator|)
operator|*
name|a1
operator|+
literal|127
operator|)
operator|/
literal|255
argument_list|,
literal|255
argument_list|)
decl_stmt|;
if|if
condition|(
name|alpha
operator|==
literal|0
condition|)
return|return
name|qRgba
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
return|;
return|return
name|qRgba
argument_list|(
name|qMin
argument_list|(
operator|(
name|r2
operator|*
name|a2
operator|+
operator|(
literal|255
operator|-
name|a2
operator|)
operator|*
name|r1
operator|*
name|a1
operator|/
literal|255
operator|)
operator|/
name|alpha
argument_list|,
literal|255
argument_list|)
argument_list|,
name|qMin
argument_list|(
operator|(
name|g2
operator|*
name|a2
operator|+
operator|(
literal|255
operator|-
name|a2
operator|)
operator|*
name|g1
operator|*
name|a1
operator|/
literal|255
operator|)
operator|/
name|alpha
argument_list|,
literal|255
argument_list|)
argument_list|,
name|qMin
argument_list|(
operator|(
name|b2
operator|*
name|a2
operator|+
operator|(
literal|255
operator|-
name|a2
operator|)
operator|*
name|b1
operator|*
name|a1
operator|/
literal|255
operator|)
operator|/
name|alpha
argument_list|,
literal|255
argument_list|)
argument_list|,
name|alpha
argument_list|)
return|;
block|}
end_function
begin_comment
comment|/* Tests that drawing masked pixmaps works */
end_comment
begin_function
DECL|function|drawPixmap_comp
name|void
name|tst_QPainter
operator|::
name|drawPixmap_comp
parameter_list|()
block|{
ifdef|#
directive|ifdef
name|Q_OS_MAC
name|QSKIP
argument_list|(
literal|"Mac has other ideas about alpha composition"
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QFETCH
argument_list|(
name|uint
argument_list|,
name|dest
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|uint
argument_list|,
name|source
argument_list|)
expr_stmt|;
name|QRgb
name|expected
init|=
name|qt_compose_alpha
argument_list|(
name|source
argument_list|,
name|dest
argument_list|)
decl_stmt|;
name|QColor
name|c1
argument_list|(
name|qRed
argument_list|(
name|dest
argument_list|)
argument_list|,
name|qGreen
argument_list|(
name|dest
argument_list|)
argument_list|,
name|qBlue
argument_list|(
name|dest
argument_list|)
argument_list|,
name|qAlpha
argument_list|(
name|dest
argument_list|)
argument_list|)
decl_stmt|;
name|QColor
name|c2
argument_list|(
name|qRed
argument_list|(
name|source
argument_list|)
argument_list|,
name|qGreen
argument_list|(
name|source
argument_list|)
argument_list|,
name|qBlue
argument_list|(
name|source
argument_list|)
argument_list|,
name|qAlpha
argument_list|(
name|source
argument_list|)
argument_list|)
decl_stmt|;
name|QPixmap
name|destPm
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
decl_stmt|,
name|srcPm
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|destPm
operator|.
name|fill
argument_list|(
name|c1
argument_list|)
expr_stmt|;
name|srcPm
operator|.
name|fill
argument_list|(
name|c2
argument_list|)
expr_stmt|;
if|#
directive|if
name|defined
argument_list|(
name|Q_WS_X11
argument_list|)
if|if
condition|(
operator|!
name|destPm
operator|.
name|x11PictureHandle
argument_list|()
condition|)
name|QSKIP
argument_list|(
literal|"Requires XRender support"
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QPainter
name|p
argument_list|(
operator|&
name|destPm
argument_list|)
decl_stmt|;
name|p
operator|.
name|drawPixmap
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|srcPm
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|QImage
name|result
init|=
name|destPm
operator|.
name|toImage
argument_list|()
operator|.
name|convertToFormat
argument_list|(
name|QImage
operator|::
name|Format_ARGB32
argument_list|)
decl_stmt|;
name|bool
name|different
init|=
literal|false
decl_stmt|;
for|for
control|(
name|int
name|y
init|=
literal|0
init|;
name|y
operator|<
name|result
operator|.
name|height
argument_list|()
condition|;
operator|++
name|y
control|)
for|for
control|(
name|int
name|x
init|=
literal|0
init|;
name|x
operator|<
name|result
operator|.
name|width
argument_list|()
condition|;
operator|++
name|x
control|)
block|{
name|bool
name|diff
decl_stmt|;
if|if
condition|(
name|qAlpha
argument_list|(
name|expected
argument_list|)
operator|==
literal|0
condition|)
block|{
name|diff
operator|=
name|qAlpha
argument_list|(
name|result
operator|.
name|pixel
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
argument_list|)
operator|!=
literal|0
expr_stmt|;
block|}
else|else
block|{
comment|// Compensate for possible roundoff / platform fudge
name|int
name|off
init|=
literal|1
decl_stmt|;
name|QRgb
name|pix
init|=
name|result
operator|.
name|pixel
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
decl_stmt|;
name|diff
operator|=
operator|(
name|qAbs
argument_list|(
name|qRed
argument_list|(
name|pix
argument_list|)
operator|-
name|qRed
argument_list|(
name|expected
argument_list|)
argument_list|)
operator|>
name|off
operator|)
operator|||
operator|(
name|qAbs
argument_list|(
name|qGreen
argument_list|(
name|pix
argument_list|)
operator|-
name|qGreen
argument_list|(
name|expected
argument_list|)
argument_list|)
operator|>
name|off
operator|)
operator|||
operator|(
name|qAbs
argument_list|(
name|qBlue
argument_list|(
name|pix
argument_list|)
operator|-
name|qBlue
argument_list|(
name|expected
argument_list|)
argument_list|)
operator|>
name|off
operator|)
operator|||
operator|(
name|qAbs
argument_list|(
name|qAlpha
argument_list|(
name|pix
argument_list|)
operator|-
name|qAlpha
argument_list|(
name|expected
argument_list|)
argument_list|)
operator|>
name|off
operator|)
expr_stmt|;
block|}
if|if
condition|(
name|diff
operator|&&
operator|!
name|different
condition|)
name|qDebug
argument_list|(
literal|"Different at %d,%d pixel [%d,%d,%d,%d] expected [%d,%d,%d,%d]"
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|qRed
argument_list|(
name|result
operator|.
name|pixel
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
argument_list|)
argument_list|,
name|qGreen
argument_list|(
name|result
operator|.
name|pixel
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
argument_list|)
argument_list|,
name|qBlue
argument_list|(
name|result
operator|.
name|pixel
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
argument_list|)
argument_list|,
name|qAlpha
argument_list|(
name|result
operator|.
name|pixel
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
argument_list|)
argument_list|,
name|qRed
argument_list|(
name|expected
argument_list|)
argument_list|,
name|qGreen
argument_list|(
name|expected
argument_list|)
argument_list|,
name|qBlue
argument_list|(
name|expected
argument_list|)
argument_list|,
name|qAlpha
argument_list|(
name|expected
argument_list|)
argument_list|)
expr_stmt|;
name|different
operator||=
name|diff
expr_stmt|;
block|}
name|QVERIFY
argument_list|(
operator|!
name|different
argument_list|)
expr_stmt|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_function
DECL|function|saveAndRestore_data
name|void
name|tst_QPainter
operator|::
name|saveAndRestore_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QFont
argument_list|>
argument_list|(
literal|"font"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QPen
argument_list|>
argument_list|(
literal|"pen"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QBrush
argument_list|>
argument_list|(
literal|"brush"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QColor
argument_list|>
argument_list|(
literal|"backgroundColor"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"backgroundMode"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QPoint
argument_list|>
argument_list|(
literal|"brushOrigin"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QRegion
argument_list|>
argument_list|(
literal|"clipRegion"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QRect
argument_list|>
argument_list|(
literal|"window"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QRect
argument_list|>
argument_list|(
literal|"viewport"
argument_list|)
expr_stmt|;
name|QPixmap
name|pixmap
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|pixmap
argument_list|)
decl_stmt|;
name|QFont
name|font
init|=
name|p
operator|.
name|font
argument_list|()
decl_stmt|;
name|QPen
name|pen
init|=
name|p
operator|.
name|pen
argument_list|()
decl_stmt|;
name|QBrush
name|brush
init|=
name|p
operator|.
name|brush
argument_list|()
decl_stmt|;
name|QColor
name|backgroundColor
init|=
name|p
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
decl_stmt|;
name|Qt
operator|::
name|BGMode
name|backgroundMode
init|=
name|p
operator|.
name|backgroundMode
argument_list|()
decl_stmt|;
name|QPoint
name|brushOrigin
init|=
name|p
operator|.
name|brushOrigin
argument_list|()
decl_stmt|;
name|QRegion
name|clipRegion
init|=
name|p
operator|.
name|clipRegion
argument_list|()
decl_stmt|;
name|QRect
name|window
init|=
name|p
operator|.
name|window
argument_list|()
decl_stmt|;
name|QRect
name|viewport
init|=
name|p
operator|.
name|viewport
argument_list|()
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Original"
argument_list|)
operator|<<
name|font
operator|<<
name|pen
operator|<<
name|brush
operator|<<
name|backgroundColor
operator|<<
name|int
argument_list|(
name|backgroundMode
argument_list|)
operator|<<
name|brushOrigin
operator|<<
name|clipRegion
operator|<<
name|window
operator|<<
name|viewport
expr_stmt|;
name|QFont
name|font2
init|=
name|font
decl_stmt|;
name|font2
operator|.
name|setPointSize
argument_list|(
literal|24
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Modified font.pointSize, brush, backgroundColor, backgroundMode"
argument_list|)
operator|<<
name|font2
operator|<<
name|pen
operator|<<
name|QBrush
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|blue
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|TransparentMode
argument_list|)
operator|<<
name|brushOrigin
operator|<<
name|clipRegion
operator|<<
name|window
operator|<<
name|viewport
expr_stmt|;
name|font2
operator|=
name|font
expr_stmt|;
name|font2
operator|.
name|setPixelSize
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Modified font.pixelSize, brushOrigin, pos"
argument_list|)
operator|<<
name|font2
operator|<<
name|pen
operator|<<
name|brush
operator|<<
name|backgroundColor
operator|<<
name|int
argument_list|(
name|backgroundMode
argument_list|)
operator|<<
name|QPoint
argument_list|(
literal|50
argument_list|,
literal|32
argument_list|)
operator|<<
name|clipRegion
operator|<<
name|window
operator|<<
name|viewport
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Modified clipRegion, window, viewport"
argument_list|)
operator|<<
name|font
operator|<<
name|pen
operator|<<
name|brush
operator|<<
name|backgroundColor
operator|<<
name|int
argument_list|(
name|backgroundMode
argument_list|)
operator|<<
name|brushOrigin
operator|<<
name|clipRegion
operator|.
name|subtracted
argument_list|(
name|QRect
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|50
argument_list|,
literal|30
argument_list|)
argument_list|)
operator|<<
name|QRect
argument_list|(
operator|-
literal|500
argument_list|,
operator|-
literal|500
argument_list|,
literal|500
argument_list|,
literal|500
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|saveAndRestore
name|void
name|tst_QPainter
operator|::
name|saveAndRestore
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QFont
argument_list|,
name|font
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QPen
argument_list|,
name|pen
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QBrush
argument_list|,
name|brush
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QColor
argument_list|,
name|backgroundColor
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|backgroundMode
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QPoint
argument_list|,
name|brushOrigin
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QRegion
argument_list|,
name|clipRegion
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QRect
argument_list|,
name|window
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QRect
argument_list|,
name|viewport
argument_list|)
expr_stmt|;
name|QPixmap
name|pixmap
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|QPainter
name|painter
argument_list|(
operator|&
name|pixmap
argument_list|)
decl_stmt|;
name|QFont
name|font_org
init|=
name|painter
operator|.
name|font
argument_list|()
decl_stmt|;
name|QPen
name|pen_org
init|=
name|painter
operator|.
name|pen
argument_list|()
decl_stmt|;
name|QBrush
name|brush_org
init|=
name|painter
operator|.
name|brush
argument_list|()
decl_stmt|;
name|QColor
name|backgroundColor_org
init|=
name|painter
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
decl_stmt|;
name|Qt
operator|::
name|BGMode
name|backgroundMode_org
init|=
name|painter
operator|.
name|backgroundMode
argument_list|()
decl_stmt|;
name|QPoint
name|brushOrigin_org
init|=
name|painter
operator|.
name|brushOrigin
argument_list|()
decl_stmt|;
name|QRegion
name|clipRegion_org
init|=
name|painter
operator|.
name|clipRegion
argument_list|()
decl_stmt|;
name|QRect
name|window_org
init|=
name|painter
operator|.
name|window
argument_list|()
decl_stmt|;
name|QRect
name|viewport_org
init|=
name|painter
operator|.
name|viewport
argument_list|()
decl_stmt|;
name|painter
operator|.
name|save
argument_list|()
expr_stmt|;
name|painter
operator|.
name|setFont
argument_list|(
name|font
argument_list|)
expr_stmt|;
name|painter
operator|.
name|setPen
argument_list|(
name|QPen
argument_list|(
name|pen
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|.
name|setBrush
argument_list|(
name|brush
argument_list|)
expr_stmt|;
name|painter
operator|.
name|setBackground
argument_list|(
name|backgroundColor
argument_list|)
expr_stmt|;
name|painter
operator|.
name|setBackgroundMode
argument_list|(
operator|(
name|Qt
operator|::
name|BGMode
operator|)
name|backgroundMode
argument_list|)
expr_stmt|;
name|painter
operator|.
name|setBrushOrigin
argument_list|(
name|brushOrigin
argument_list|)
expr_stmt|;
name|painter
operator|.
name|setClipRegion
argument_list|(
name|clipRegion
argument_list|)
expr_stmt|;
name|painter
operator|.
name|setWindow
argument_list|(
name|window
argument_list|)
expr_stmt|;
name|painter
operator|.
name|setViewport
argument_list|(
name|viewport
argument_list|)
expr_stmt|;
name|painter
operator|.
name|restore
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|painter
operator|.
name|font
argument_list|()
argument_list|,
name|font_org
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|painter
operator|.
name|font
argument_list|()
operator|.
name|pointSize
argument_list|()
argument_list|,
name|font_org
operator|.
name|pointSize
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|painter
operator|.
name|font
argument_list|()
operator|.
name|pixelSize
argument_list|()
argument_list|,
name|font_org
operator|.
name|pixelSize
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|painter
operator|.
name|pen
argument_list|()
argument_list|,
name|pen_org
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|painter
operator|.
name|brush
argument_list|()
argument_list|,
name|brush_org
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|painter
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
name|backgroundColor_org
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|painter
operator|.
name|backgroundMode
argument_list|()
argument_list|,
name|backgroundMode_org
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|painter
operator|.
name|brushOrigin
argument_list|()
argument_list|,
name|brushOrigin_org
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|painter
operator|.
name|clipRegion
argument_list|()
argument_list|,
name|clipRegion_org
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|painter
operator|.
name|window
argument_list|()
argument_list|,
name|window_org
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|painter
operator|.
name|viewport
argument_list|()
argument_list|,
name|viewport_org
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|/*    Helper functions */
end_comment
begin_function
DECL|function|baseColor
name|QColor
name|tst_QPainter
operator|::
name|baseColor
parameter_list|(
name|int
name|k
parameter_list|,
name|int
name|intensity
parameter_list|)
block|{
name|int
name|r
init|=
operator|(
name|k
operator|&
literal|1
operator|)
operator|*
name|intensity
decl_stmt|;
name|int
name|g
init|=
operator|(
operator|(
name|k
operator|>>
literal|1
operator|)
operator|&
literal|1
operator|)
operator|*
name|intensity
decl_stmt|;
name|int
name|b
init|=
operator|(
operator|(
name|k
operator|>>
literal|2
operator|)
operator|&
literal|1
operator|)
operator|*
name|intensity
decl_stmt|;
return|return
name|QColor
argument_list|(
name|r
argument_list|,
name|g
argument_list|,
name|b
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getResImage
name|QImage
name|tst_QPainter
operator|::
name|getResImage
parameter_list|(
specifier|const
name|QString
modifier|&
name|dir
parameter_list|,
specifier|const
name|QString
modifier|&
name|addition
parameter_list|,
specifier|const
name|QString
modifier|&
name|extension
parameter_list|)
block|{
name|QImage
name|res
decl_stmt|;
name|QString
name|resFilename
init|=
name|dir
operator|+
name|QString
argument_list|(
literal|"/res_%1."
argument_list|)
operator|.
name|arg
argument_list|(
name|addition
argument_list|)
operator|+
name|extension
decl_stmt|;
if|if
condition|(
operator|!
name|res
operator|.
name|load
argument_list|(
name|resFilename
argument_list|)
condition|)
block|{
name|QWARN
argument_list|(
name|QString
argument_list|(
literal|"Could not load result data %s %1"
argument_list|)
operator|.
name|arg
argument_list|(
name|resFilename
argument_list|)
operator|.
name|toLatin1
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|QImage
argument_list|()
return|;
block|}
return|return
name|res
return|;
block|}
end_function
begin_function
DECL|function|getBitmap
name|QBitmap
name|tst_QPainter
operator|::
name|getBitmap
parameter_list|(
specifier|const
name|QString
modifier|&
name|dir
parameter_list|,
specifier|const
name|QString
modifier|&
name|filename
parameter_list|,
name|bool
name|mask
parameter_list|)
block|{
name|QBitmap
name|bm
decl_stmt|;
name|QString
name|bmFilename
init|=
name|dir
operator|+
name|QString
argument_list|(
literal|"/%1.xbm"
argument_list|)
operator|.
name|arg
argument_list|(
name|filename
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|bm
operator|.
name|load
argument_list|(
name|bmFilename
argument_list|)
condition|)
block|{
name|QWARN
argument_list|(
name|QString
argument_list|(
literal|"Could not load bitmap '%1'"
argument_list|)
operator|.
name|arg
argument_list|(
name|bmFilename
argument_list|)
operator|.
name|toLatin1
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|QBitmap
argument_list|()
return|;
block|}
if|if
condition|(
name|mask
condition|)
block|{
name|QBitmap
name|mask
decl_stmt|;
name|QString
name|maskFilename
init|=
name|dir
operator|+
name|QString
argument_list|(
literal|"/%1-mask.xbm"
argument_list|)
operator|.
name|arg
argument_list|(
name|filename
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|mask
operator|.
name|load
argument_list|(
name|maskFilename
argument_list|)
condition|)
block|{
name|QWARN
argument_list|(
name|QString
argument_list|(
literal|"Could not load mask '%1'"
argument_list|)
operator|.
name|arg
argument_list|(
name|maskFilename
argument_list|)
operator|.
name|toLatin1
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|QBitmap
argument_list|()
return|;
block|}
name|bm
operator|.
name|setMask
argument_list|(
name|mask
argument_list|)
expr_stmt|;
block|}
return|return
name|bm
return|;
block|}
end_function
begin_function
DECL|function|getPaintedPixels
specifier|static
name|int
name|getPaintedPixels
parameter_list|(
specifier|const
name|QImage
modifier|&
name|image
parameter_list|,
specifier|const
name|QColor
modifier|&
name|background
parameter_list|)
block|{
name|uint
name|color
init|=
name|background
operator|.
name|rgba
argument_list|()
decl_stmt|;
name|int
name|pixels
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|y
init|=
literal|0
init|;
name|y
operator|<
name|image
operator|.
name|height
argument_list|()
condition|;
operator|++
name|y
control|)
for|for
control|(
name|int
name|x
init|=
literal|0
init|;
name|x
operator|<
name|image
operator|.
name|width
argument_list|()
condition|;
operator|++
name|x
control|)
if|if
condition|(
name|image
operator|.
name|pixel
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
operator|!=
name|color
condition|)
operator|++
name|pixels
expr_stmt|;
return|return
name|pixels
return|;
block|}
end_function
begin_function
DECL|function|getPaintedSize
specifier|static
name|QRect
name|getPaintedSize
parameter_list|(
specifier|const
name|QImage
modifier|&
name|image
parameter_list|,
specifier|const
name|QColor
modifier|&
name|background
parameter_list|)
block|{
comment|// not the fastest but at least it works..
name|int
name|xmin
init|=
name|image
operator|.
name|width
argument_list|()
operator|+
literal|1
decl_stmt|;
name|int
name|xmax
init|=
operator|-
literal|1
decl_stmt|;
name|int
name|ymin
init|=
name|image
operator|.
name|height
argument_list|()
operator|+
literal|1
decl_stmt|;
name|int
name|ymax
init|=
operator|-
literal|1
decl_stmt|;
name|uint
name|color
init|=
name|background
operator|.
name|rgba
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|y
init|=
literal|0
init|;
name|y
operator|<
name|image
operator|.
name|height
argument_list|()
condition|;
operator|++
name|y
control|)
block|{
for|for
control|(
name|int
name|x
init|=
literal|0
init|;
name|x
operator|<
name|image
operator|.
name|width
argument_list|()
condition|;
operator|++
name|x
control|)
block|{
name|QRgb
name|pixel
init|=
name|image
operator|.
name|pixel
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
decl_stmt|;
if|if
condition|(
name|pixel
operator|!=
name|color
operator|&&
name|x
operator|<
name|xmin
condition|)
name|xmin
operator|=
name|x
expr_stmt|;
if|if
condition|(
name|pixel
operator|!=
name|color
operator|&&
name|x
operator|>
name|xmax
condition|)
name|xmax
operator|=
name|x
expr_stmt|;
if|if
condition|(
name|pixel
operator|!=
name|color
operator|&&
name|y
operator|<
name|ymin
condition|)
name|ymin
operator|=
name|y
expr_stmt|;
if|if
condition|(
name|pixel
operator|!=
name|color
operator|&&
name|y
operator|>
name|ymax
condition|)
name|ymax
operator|=
name|y
expr_stmt|;
block|}
block|}
return|return
name|QRect
argument_list|(
name|xmin
argument_list|,
name|ymin
argument_list|,
name|xmax
operator|-
name|xmin
operator|+
literal|1
argument_list|,
name|ymax
operator|-
name|ymin
operator|+
literal|1
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getPaintedSize
specifier|static
name|QRect
name|getPaintedSize
parameter_list|(
specifier|const
name|QPixmap
modifier|&
name|pm
parameter_list|,
specifier|const
name|QColor
modifier|&
name|background
parameter_list|)
block|{
return|return
name|getPaintedSize
argument_list|(
name|pm
operator|.
name|toImage
argument_list|()
argument_list|,
name|background
argument_list|)
return|;
block|}
end_function
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_WIDGETS
end_ifndef
begin_function
DECL|function|initFrom
name|void
name|tst_QPainter
operator|::
name|initFrom
parameter_list|()
block|{
name|QWidget
modifier|*
name|widget
init|=
operator|new
name|QWidget
argument_list|()
decl_stmt|;
name|QPalette
name|pal
init|=
name|widget
operator|->
name|palette
argument_list|()
decl_stmt|;
name|pal
operator|.
name|setColor
argument_list|(
name|QPalette
operator|::
name|Foreground
argument_list|,
name|QColor
argument_list|(
literal|255
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|pal
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Background
argument_list|,
name|QColor
argument_list|(
literal|0
argument_list|,
literal|255
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|widget
operator|->
name|setPalette
argument_list|(
name|pal
argument_list|)
expr_stmt|;
name|QFont
name|font
init|=
name|widget
operator|->
name|font
argument_list|()
decl_stmt|;
name|font
operator|.
name|setPointSize
argument_list|(
literal|26
argument_list|)
expr_stmt|;
name|font
operator|.
name|setItalic
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|widget
operator|->
name|setFont
argument_list|(
name|font
argument_list|)
expr_stmt|;
name|QPixmap
name|pm
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
decl_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|pm
argument_list|)
decl_stmt|;
name|p
operator|.
name|initFrom
argument_list|(
name|widget
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|p
operator|.
name|font
argument_list|()
argument_list|,
name|font
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|p
operator|.
name|pen
argument_list|()
operator|.
name|color
argument_list|()
argument_list|,
name|pal
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Foreground
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|p
operator|.
name|background
argument_list|()
argument_list|,
name|pal
operator|.
name|background
argument_list|()
argument_list|)
expr_stmt|;
operator|delete
name|widget
expr_stmt|;
block|}
end_function
begin_function
DECL|function|drawBorderPixmap
name|void
name|tst_QPainter
operator|::
name|drawBorderPixmap
parameter_list|()
block|{
name|QPixmap
name|src
argument_list|(
literal|79
argument_list|,
literal|79
argument_list|)
decl_stmt|;
name|src
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|transparent
argument_list|)
expr_stmt|;
name|QImage
name|pm
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|,
name|QImage
operator|::
name|Format_RGB32
argument_list|)
decl_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|pm
argument_list|)
decl_stmt|;
name|p
operator|.
name|setTransform
argument_list|(
name|QTransform
argument_list|(
operator|-
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
literal|173.5
argument_list|,
literal|153.5
argument_list|)
argument_list|)
expr_stmt|;
name|qDrawBorderPixmap
argument_list|(
operator|&
name|p
argument_list|,
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|75
argument_list|,
literal|105
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|39
argument_list|,
literal|39
argument_list|,
literal|39
argument_list|,
literal|39
argument_list|)
argument_list|,
name|src
argument_list|,
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|79
argument_list|,
literal|79
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|39
argument_list|,
literal|39
argument_list|,
literal|39
argument_list|,
literal|39
argument_list|)
argument_list|,
name|QTileRules
argument_list|(
name|Qt
operator|::
name|StretchTile
argument_list|,
name|Qt
operator|::
name|StretchTile
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_function
DECL|function|drawPixmapFragments
name|void
name|tst_QPainter
operator|::
name|drawPixmapFragments
parameter_list|()
block|{
name|QPixmap
name|origPixmap
argument_list|(
literal|20
argument_list|,
literal|20
argument_list|)
decl_stmt|;
name|QPixmap
name|resPixmap
argument_list|(
literal|20
argument_list|,
literal|20
argument_list|)
decl_stmt|;
name|QPainter
operator|::
name|PixmapFragment
name|fragments
index|[
literal|4
index|]
init|=
block|{
block|{
literal|15
block|,
literal|15
block|,
literal|0
block|,
literal|0
block|,
literal|10
block|,
literal|10
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|1
block|}
block|,
block|{
literal|5
block|,
literal|15
block|,
literal|10
block|,
literal|0
block|,
literal|10
block|,
literal|10
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|1
block|}
block|,
block|{
literal|15
block|,
literal|5
block|,
literal|0
block|,
literal|10
block|,
literal|10
block|,
literal|10
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|1
block|}
block|,
block|{
literal|5
block|,
literal|5
block|,
literal|10
block|,
literal|10
block|,
literal|10
block|,
literal|10
block|,
literal|1
block|,
literal|1
block|,
literal|0
block|,
literal|1
block|}
block|}
decl_stmt|;
block|{
name|QPainter
name|p
argument_list|(
operator|&
name|origPixmap
argument_list|)
decl_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
literal|10
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
name|Qt
operator|::
name|green
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
name|Qt
operator|::
name|blue
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
name|Qt
operator|::
name|yellow
argument_list|)
expr_stmt|;
block|}
block|{
name|QPainter
name|p
argument_list|(
operator|&
name|resPixmap
argument_list|)
decl_stmt|;
name|p
operator|.
name|drawPixmapFragments
argument_list|(
name|fragments
argument_list|,
literal|4
argument_list|,
name|origPixmap
argument_list|)
expr_stmt|;
block|}
name|QImage
name|origImage
init|=
name|origPixmap
operator|.
name|toImage
argument_list|()
operator|.
name|convertToFormat
argument_list|(
name|QImage
operator|::
name|Format_ARGB32
argument_list|)
decl_stmt|;
name|QImage
name|resImage
init|=
name|resPixmap
operator|.
name|toImage
argument_list|()
operator|.
name|convertToFormat
argument_list|(
name|QImage
operator|::
name|Format_ARGB32
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|resImage
operator|.
name|size
argument_list|()
operator|==
name|resPixmap
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|resImage
operator|.
name|pixel
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
operator|==
name|origImage
operator|.
name|pixel
argument_list|(
literal|15
argument_list|,
literal|15
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|resImage
operator|.
name|pixel
argument_list|(
literal|5
argument_list|,
literal|15
argument_list|)
operator|==
name|origImage
operator|.
name|pixel
argument_list|(
literal|15
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|resImage
operator|.
name|pixel
argument_list|(
literal|15
argument_list|,
literal|5
argument_list|)
operator|==
name|origImage
operator|.
name|pixel
argument_list|(
literal|5
argument_list|,
literal|15
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|resImage
operator|.
name|pixel
argument_list|(
literal|15
argument_list|,
literal|15
argument_list|)
operator|==
name|origImage
operator|.
name|pixel
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|QPainter
operator|::
name|PixmapFragment
name|fragment
init|=
name|QPainter
operator|::
name|PixmapFragment
operator|::
name|create
argument_list|(
name|QPointF
argument_list|(
literal|20
argument_list|,
literal|20
argument_list|)
argument_list|,
name|QRectF
argument_list|(
literal|30
argument_list|,
literal|30
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|fragment
operator|.
name|x
operator|==
literal|20
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|fragment
operator|.
name|y
operator|==
literal|20
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|fragment
operator|.
name|sourceLeft
operator|==
literal|30
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|fragment
operator|.
name|sourceTop
operator|==
literal|30
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|fragment
operator|.
name|width
operator|==
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|fragment
operator|.
name|height
operator|==
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|fragment
operator|.
name|scaleX
operator|==
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|fragment
operator|.
name|scaleY
operator|==
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|fragment
operator|.
name|rotation
operator|==
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|fragment
operator|.
name|opacity
operator|==
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|drawPixmapNegativeScale
name|void
name|tst_QPainter
operator|::
name|drawPixmapNegativeScale
parameter_list|()
block|{
comment|// basePixmap is a 16x16 opaque white square ...
name|QPixmap
name|basePixmap
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
decl_stmt|;
name|basePixmap
operator|.
name|fill
argument_list|(
name|QColor
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|)
argument_list|)
expr_stmt|;
comment|// ... with an opaque black 8x16 left strip
name|QPainter
name|p
argument_list|(
operator|&
name|basePixmap
argument_list|)
decl_stmt|;
name|p
operator|.
name|setCompositionMode
argument_list|(
name|QPainter
operator|::
name|CompositionMode_Source
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|8
argument_list|,
literal|16
argument_list|)
argument_list|,
name|QColor
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|255
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
comment|// verify one pixel value for each strip
name|QImage
name|baseImage
init|=
name|basePixmap
operator|.
name|toImage
argument_list|()
operator|.
name|convertToFormat
argument_list|(
name|QImage
operator|::
name|Format_ARGB32
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|baseImage
operator|.
name|pixel
argument_list|(
literal|4
argument_list|,
literal|8
argument_list|)
operator|==
name|qRgba
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|255
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|baseImage
operator|.
name|pixel
argument_list|(
literal|12
argument_list|,
literal|8
argument_list|)
operator|==
name|qRgba
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|)
argument_list|)
expr_stmt|;
comment|// resultPixmap is a 16x16 square
name|QPixmap
name|resultPixmap
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
decl_stmt|;
comment|// draw basePixmap over resultPixmap using x=-1.0 y=-1.0
comment|// scaling factors (i.e. 180Â° rotation)
name|QPainter
name|p2
argument_list|(
operator|&
name|resultPixmap
argument_list|)
decl_stmt|;
name|p2
operator|.
name|setCompositionMode
argument_list|(
name|QPainter
operator|::
name|CompositionMode_Source
argument_list|)
expr_stmt|;
name|p2
operator|.
name|scale
argument_list|(
name|qreal
argument_list|(
operator|-
literal|1.0
argument_list|)
argument_list|,
name|qreal
argument_list|(
operator|-
literal|1.0
argument_list|)
argument_list|)
expr_stmt|;
name|p2
operator|.
name|translate
argument_list|(
operator|-
name|resultPixmap
operator|.
name|width
argument_list|()
argument_list|,
operator|-
name|resultPixmap
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
name|p2
operator|.
name|drawPixmap
argument_list|(
name|resultPixmap
operator|.
name|rect
argument_list|()
argument_list|,
name|basePixmap
argument_list|)
expr_stmt|;
name|p2
operator|.
name|end
argument_list|()
expr_stmt|;
comment|// check result
name|QImage
name|resultImage
init|=
name|resultPixmap
operator|.
name|toImage
argument_list|()
operator|.
name|convertToFormat
argument_list|(
name|QImage
operator|::
name|Format_ARGB32
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|resultImage
operator|.
name|pixel
argument_list|(
literal|4
argument_list|,
literal|8
argument_list|)
operator|==
name|qRgba
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|)
argument_list|)
expr_stmt|;
comment|// left strip is now white
name|QVERIFY
argument_list|(
name|resultImage
operator|.
name|pixel
argument_list|(
literal|12
argument_list|,
literal|8
argument_list|)
operator|==
name|qRgba
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|255
argument_list|)
argument_list|)
expr_stmt|;
comment|// and right strip is now black
block|}
end_function
begin_function
DECL|function|drawLine_data
name|void
name|tst_QPainter
operator|::
name|drawLine_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QLine
argument_list|>
argument_list|(
literal|"line"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0-45"
argument_list|)
operator|<<
name|QLine
argument_list|(
literal|0
argument_list|,
literal|20
argument_list|,
literal|100
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"45-90"
argument_list|)
operator|<<
name|QLine
argument_list|(
literal|0
argument_list|,
literal|100
argument_list|,
literal|20
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"90-135"
argument_list|)
operator|<<
name|QLine
argument_list|(
literal|20
argument_list|,
literal|100
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"135-180"
argument_list|)
operator|<<
name|QLine
argument_list|(
literal|100
argument_list|,
literal|20
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"180-225"
argument_list|)
operator|<<
name|QLine
argument_list|(
literal|100
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"225-270"
argument_list|)
operator|<<
name|QLine
argument_list|(
literal|20
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"270-315"
argument_list|)
operator|<<
name|QLine
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|20
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"315-360"
argument_list|)
operator|<<
name|QLine
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|20
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|drawLine
name|void
name|tst_QPainter
operator|::
name|drawLine
parameter_list|()
block|{
specifier|const
name|int
name|offset
init|=
literal|5
decl_stmt|;
specifier|const
name|int
name|epsilon
init|=
literal|1
decl_stmt|;
comment|// allow for one pixel difference
name|QFETCH
argument_list|(
name|QLine
argument_list|,
name|line
argument_list|)
expr_stmt|;
name|QPixmap
name|pixmapUnclipped
argument_list|(
name|qMin
argument_list|(
name|line
operator|.
name|x1
argument_list|()
argument_list|,
name|line
operator|.
name|x2
argument_list|()
argument_list|)
operator|+
literal|2
operator|*
name|offset
operator|+
name|qAbs
argument_list|(
name|line
operator|.
name|dx
argument_list|()
argument_list|)
argument_list|,
name|qMin
argument_list|(
name|line
operator|.
name|y1
argument_list|()
argument_list|,
name|line
operator|.
name|y2
argument_list|()
argument_list|)
operator|+
literal|2
operator|*
name|offset
operator|+
name|qAbs
argument_list|(
name|line
operator|.
name|dy
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
block|{
comment|// unclipped
name|pixmapUnclipped
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|pixmapUnclipped
argument_list|)
decl_stmt|;
name|p
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Qt4CompatiblePainting
argument_list|)
expr_stmt|;
name|p
operator|.
name|translate
argument_list|(
name|offset
argument_list|,
name|offset
argument_list|)
expr_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|QPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawLine
argument_list|(
name|line
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
specifier|const
name|QRect
name|painted
init|=
name|getPaintedSize
argument_list|(
name|pixmapUnclipped
argument_list|,
name|Qt
operator|::
name|white
argument_list|)
decl_stmt|;
name|QLine
name|l
init|=
name|line
decl_stmt|;
name|l
operator|.
name|translate
argument_list|(
name|offset
argument_list|,
name|offset
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|qAbs
argument_list|(
name|painted
operator|.
name|width
argument_list|()
operator|-
name|qAbs
argument_list|(
name|l
operator|.
name|dx
argument_list|()
argument_list|)
argument_list|)
operator|<=
name|epsilon
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|qAbs
argument_list|(
name|painted
operator|.
name|height
argument_list|()
operator|-
name|qAbs
argument_list|(
name|l
operator|.
name|dy
argument_list|()
argument_list|)
argument_list|)
operator|<=
name|epsilon
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|qAbs
argument_list|(
name|painted
operator|.
name|top
argument_list|()
operator|-
name|qMin
argument_list|(
name|l
operator|.
name|y1
argument_list|()
argument_list|,
name|l
operator|.
name|y2
argument_list|()
argument_list|)
argument_list|)
operator|<=
name|epsilon
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|qAbs
argument_list|(
name|painted
operator|.
name|left
argument_list|()
operator|-
name|qMin
argument_list|(
name|l
operator|.
name|x1
argument_list|()
argument_list|,
name|l
operator|.
name|x2
argument_list|()
argument_list|)
argument_list|)
operator|<=
name|epsilon
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|qAbs
argument_list|(
name|painted
operator|.
name|bottom
argument_list|()
operator|-
name|qMax
argument_list|(
name|l
operator|.
name|y1
argument_list|()
argument_list|,
name|l
operator|.
name|y2
argument_list|()
argument_list|)
argument_list|)
operator|<=
name|epsilon
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|qAbs
argument_list|(
name|painted
operator|.
name|right
argument_list|()
operator|-
name|qMax
argument_list|(
name|l
operator|.
name|x1
argument_list|()
argument_list|,
name|l
operator|.
name|x2
argument_list|()
argument_list|)
argument_list|)
operator|<=
name|epsilon
argument_list|)
expr_stmt|;
block|}
name|QPixmap
name|pixmapClipped
argument_list|(
name|qMin
argument_list|(
name|line
operator|.
name|x1
argument_list|()
argument_list|,
name|line
operator|.
name|x2
argument_list|()
argument_list|)
operator|+
literal|2
operator|*
name|offset
operator|+
name|qAbs
argument_list|(
name|line
operator|.
name|dx
argument_list|()
argument_list|)
argument_list|,
name|qMin
argument_list|(
name|line
operator|.
name|y1
argument_list|()
argument_list|,
name|line
operator|.
name|y2
argument_list|()
argument_list|)
operator|+
literal|2
operator|*
name|offset
operator|+
name|qAbs
argument_list|(
name|line
operator|.
name|dy
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
block|{
comment|// clipped
specifier|const
name|QRect
name|clip
init|=
name|QRect
argument_list|(
name|line
operator|.
name|p1
argument_list|()
argument_list|,
name|line
operator|.
name|p2
argument_list|()
argument_list|)
operator|.
name|normalized
argument_list|()
decl_stmt|;
name|pixmapClipped
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|pixmapClipped
argument_list|)
decl_stmt|;
name|p
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Qt4CompatiblePainting
argument_list|)
expr_stmt|;
name|p
operator|.
name|translate
argument_list|(
name|offset
argument_list|,
name|offset
argument_list|)
expr_stmt|;
name|p
operator|.
name|setClipRect
argument_list|(
name|clip
argument_list|)
expr_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|QPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawLine
argument_list|(
name|line
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
block|}
specifier|const
name|QImage
name|unclipped
init|=
name|pixmapUnclipped
operator|.
name|toImage
argument_list|()
decl_stmt|;
specifier|const
name|QImage
name|clipped
init|=
name|pixmapClipped
operator|.
name|toImage
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|unclipped
argument_list|,
name|clipped
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|drawLine_clipped
name|void
name|tst_QPainter
operator|::
name|drawLine_clipped
parameter_list|()
block|{
name|QImage
name|image
argument_list|(
literal|16
argument_list|,
literal|1
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|image
operator|.
name|fill
argument_list|(
literal|0x0
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|image
argument_list|)
decl_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|QPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
comment|// this should fill the whole image
name|p
operator|.
name|drawLine
argument_list|(
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|17
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|x
init|=
literal|0
init|;
name|x
operator|<
literal|16
condition|;
operator|++
name|x
control|)
name|QCOMPARE
argument_list|(
name|image
operator|.
name|pixel
argument_list|(
name|x
argument_list|,
literal|0
argument_list|)
argument_list|,
literal|0xff000000
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|drawLine_task121143
name|void
name|tst_QPainter
operator|::
name|drawLine_task121143
parameter_list|()
block|{
name|QPen
name|pen
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
decl_stmt|;
name|QImage
name|image
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|image
operator|.
name|fill
argument_list|(
literal|0xffffffff
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|image
argument_list|)
decl_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|pen
argument_list|)
expr_stmt|;
name|p
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Qt4CompatiblePainting
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawLine
argument_list|(
name|QLine
argument_list|(
literal|0
argument_list|,
literal|0
operator|+
literal|4
argument_list|,
literal|0
operator|+
literal|4
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|QImage
name|expected
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|expected
operator|.
name|fill
argument_list|(
literal|0xffffffff
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|x
init|=
literal|0
init|;
name|x
operator|<
literal|5
condition|;
operator|++
name|x
control|)
name|expected
operator|.
name|setPixel
argument_list|(
name|x
argument_list|,
literal|5
operator|-
name|x
operator|-
literal|1
argument_list|,
name|pen
operator|.
name|color
argument_list|()
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|image
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|drawLine_task190634
name|void
name|tst_QPainter
operator|::
name|drawLine_task190634
parameter_list|()
block|{
name|QPen
name|pen
argument_list|(
name|Qt
operator|::
name|black
argument_list|,
literal|3
argument_list|)
decl_stmt|;
name|QImage
name|image
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|image
argument_list|)
decl_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|image
operator|.
name|width
argument_list|()
argument_list|,
name|image
operator|.
name|height
argument_list|()
argument_list|,
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|pen
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawLine
argument_list|(
name|QLineF
argument_list|(
literal|2
argument_list|,
operator|-
literal|1.6
argument_list|,
literal|10
argument_list|,
operator|-
literal|1.6
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
specifier|const
name|uint
modifier|*
name|data
init|=
cast|reinterpret_cast
argument_list|<
name|uint
operator|*
argument_list|>
argument_list|(
name|image
operator|.
name|bits
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|image
operator|.
name|width
argument_list|()
operator|*
name|image
operator|.
name|height
argument_list|()
condition|;
operator|++
name|i
control|)
name|QCOMPARE
argument_list|(
name|data
index|[
name|i
index|]
argument_list|,
literal|0xffffffff
argument_list|)
expr_stmt|;
name|p
operator|.
name|begin
argument_list|(
operator|&
name|image
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|image
operator|.
name|width
argument_list|()
argument_list|,
name|image
operator|.
name|height
argument_list|()
argument_list|,
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|pen
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawLine
argument_list|(
name|QLineF
argument_list|(
operator|-
literal|1.6
argument_list|,
literal|2
argument_list|,
operator|-
literal|1.6
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|data
operator|=
cast|reinterpret_cast
argument_list|<
name|uint
operator|*
argument_list|>
argument_list|(
name|image
operator|.
name|bits
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|image
operator|.
name|width
argument_list|()
operator|*
name|image
operator|.
name|height
argument_list|()
condition|;
operator|++
name|i
control|)
name|QCOMPARE
argument_list|(
name|data
index|[
name|i
index|]
argument_list|,
literal|0xffffffff
argument_list|)
expr_stmt|;
name|p
operator|.
name|begin
argument_list|(
operator|&
name|image
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|image
operator|.
name|width
argument_list|()
argument_list|,
name|image
operator|.
name|height
argument_list|()
argument_list|,
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|pen
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawLine
argument_list|(
name|QPoint
argument_list|(
literal|2
argument_list|,
operator|-
literal|2
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|3
argument_list|,
operator|-
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|data
operator|=
cast|reinterpret_cast
argument_list|<
name|uint
operator|*
argument_list|>
argument_list|(
name|image
operator|.
name|bits
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|image
operator|.
name|width
argument_list|()
operator|*
name|image
operator|.
name|height
argument_list|()
condition|;
operator|++
name|i
control|)
name|QCOMPARE
argument_list|(
name|data
index|[
name|i
index|]
argument_list|,
literal|0xffffffff
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|drawLine_task229459
name|void
name|tst_QPainter
operator|::
name|drawLine_task229459
parameter_list|()
block|{
name|QImage
name|image
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|image
operator|.
name|fill
argument_list|(
literal|0x0
argument_list|)
expr_stmt|;
name|QPen
name|pen
argument_list|(
name|Qt
operator|::
name|black
argument_list|,
literal|64
argument_list|)
decl_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|image
argument_list|)
decl_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|pen
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawLine
argument_list|(
operator|-
literal|8
argument_list|,
operator|-
literal|8
argument_list|,
literal|10000000
argument_list|,
literal|10000000
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|QImage
name|expected
init|=
name|image
decl_stmt|;
name|expected
operator|.
name|fill
argument_list|(
literal|0xff000000
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|image
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|drawLine_task234891
name|void
name|tst_QPainter
operator|::
name|drawLine_task234891
parameter_list|()
block|{
name|QImage
name|img
argument_list|(
literal|100
argument_list|,
literal|1000
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|img
operator|.
name|fill
argument_list|(
literal|0x0
argument_list|)
expr_stmt|;
name|QImage
name|expected
init|=
name|img
decl_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|img
argument_list|)
decl_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|QPen
argument_list|(
name|QBrush
argument_list|(
name|QColor
argument_list|(
literal|255
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|,
literal|6
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawLine
argument_list|(
name|QPointF
argument_list|(
literal|25000
argument_list|,
literal|100
argument_list|)
argument_list|,
name|QPointF
argument_list|(
literal|30000
argument_list|,
literal|105
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|QPen
argument_list|(
name|QBrush
argument_list|(
name|QColor
argument_list|(
literal|0
argument_list|,
literal|255
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|,
literal|6
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawLine
argument_list|(
name|QPointF
argument_list|(
literal|30000
argument_list|,
literal|150
argument_list|)
argument_list|,
name|QPointF
argument_list|(
literal|35000
argument_list|,
literal|155
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|QPen
argument_list|(
name|QBrush
argument_list|(
name|QColor
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|255
argument_list|)
argument_list|)
argument_list|,
literal|6
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawLine
argument_list|(
name|QPointF
argument_list|(
literal|65000
argument_list|,
literal|200
argument_list|)
argument_list|,
name|QPointF
argument_list|(
literal|66000
argument_list|,
literal|205
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|expected
argument_list|,
name|img
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|drawLine_task216948
name|void
name|tst_QPainter
operator|::
name|drawLine_task216948
parameter_list|()
block|{
name|QImage
name|img
argument_list|(
literal|1
argument_list|,
literal|10
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|img
operator|.
name|fill
argument_list|(
literal|0x0
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|img
argument_list|)
decl_stmt|;
name|QLine
name|line
argument_list|(
literal|10
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|p
operator|.
name|translate
argument_list|(
operator|-
literal|10
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawLine
argument_list|(
name|line
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|img
operator|.
name|height
argument_list|()
condition|;
operator|++
name|i
control|)
name|QCOMPARE
argument_list|(
name|img
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
name|i
argument_list|)
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|drawRect
name|void
name|tst_QPainter
operator|::
name|drawRect
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QRect
argument_list|,
name|rect
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|usePen
argument_list|)
expr_stmt|;
name|QPixmap
name|pixmap
argument_list|(
name|rect
operator|.
name|x
argument_list|()
operator|+
name|rect
operator|.
name|width
argument_list|()
operator|+
literal|10
argument_list|,
name|rect
operator|.
name|y
argument_list|()
operator|+
name|rect
operator|.
name|height
argument_list|()
operator|+
literal|10
argument_list|)
decl_stmt|;
block|{
name|pixmap
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|pixmap
argument_list|)
decl_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|usePen
condition|?
name|QPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
else|:
name|QPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|setBrush
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawRect
argument_list|(
name|rect
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|int
name|increment
init|=
name|usePen
condition|?
literal|1
else|:
literal|0
decl_stmt|;
specifier|const
name|QRect
name|painted
init|=
name|getPaintedSize
argument_list|(
name|pixmap
argument_list|,
name|Qt
operator|::
name|white
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|painted
operator|.
name|width
argument_list|()
argument_list|,
name|rect
operator|.
name|width
argument_list|()
operator|+
name|increment
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|painted
operator|.
name|height
argument_list|()
argument_list|,
name|rect
operator|.
name|height
argument_list|()
operator|+
name|increment
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|drawRect2
name|void
name|tst_QPainter
operator|::
name|drawRect2
parameter_list|()
block|{
name|QImage
name|image
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
block|{
name|image
operator|.
name|fill
argument_list|(
literal|0xffffffff
argument_list|)
expr_stmt|;
name|QTransform
name|transform
argument_list|(
literal|0.368567
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0.368567
argument_list|,
literal|0
argument_list|,
literal|0.0289
argument_list|,
literal|0.0289
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|image
argument_list|)
decl_stmt|;
name|p
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Qt4CompatiblePainting
argument_list|)
expr_stmt|;
name|p
operator|.
name|setTransform
argument_list|(
name|transform
argument_list|)
expr_stmt|;
name|p
operator|.
name|setBrush
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawRect
argument_list|(
name|QRect
argument_list|(
literal|14
argument_list|,
literal|14
argument_list|,
literal|39
argument_list|,
literal|39
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|QRect
name|fill
init|=
name|getPaintedSize
argument_list|(
name|image
argument_list|,
name|Qt
operator|::
name|white
argument_list|)
decl_stmt|;
name|image
operator|.
name|fill
argument_list|(
literal|0xffffffff
argument_list|)
expr_stmt|;
name|p
operator|.
name|begin
argument_list|(
operator|&
name|image
argument_list|)
expr_stmt|;
name|p
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Qt4CompatiblePainting
argument_list|)
expr_stmt|;
name|p
operator|.
name|setTransform
argument_list|(
name|transform
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawRect
argument_list|(
name|QRect
argument_list|(
literal|14
argument_list|,
literal|14
argument_list|,
literal|39
argument_list|,
literal|39
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|QRect
name|stroke
init|=
name|getPaintedSize
argument_list|(
name|image
argument_list|,
name|Qt
operator|::
name|white
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|stroke
operator|.
name|adjusted
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|fill
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|fillRect_data
name|void
name|tst_QPainter
operator|::
name|fillRect_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QImage
operator|::
name|Format
argument_list|>
argument_list|(
literal|"format"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"argb32pm"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rgba8888pm"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGBA8888_Premultiplied
expr_stmt|;
block|}
end_function
begin_function
DECL|function|fillRect
name|void
name|tst_QPainter
operator|::
name|fillRect
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QImage
operator|::
name|Format
argument_list|,
name|format
argument_list|)
expr_stmt|;
name|QImage
name|image
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
name|format
argument_list|)
decl_stmt|;
name|image
operator|.
name|fill
argument_list|(
name|QColor
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|image
argument_list|)
decl_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
name|QColor
argument_list|(
literal|255
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|127
argument_list|)
argument_list|)
expr_stmt|;
comment|//    pixmap.save("bla1.png", "PNG");
name|QCOMPARE
argument_list|(
name|getPaintedSize
argument_list|(
name|image
argument_list|,
name|QColor
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|,
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|getPaintedSize
argument_list|(
name|image
argument_list|,
name|QColor
argument_list|(
literal|127
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|127
argument_list|)
argument_list|)
operator|.
name|isValid
argument_list|()
argument_list|,
name|QRect
argument_list|()
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|.
name|setCompositionMode
argument_list|(
name|QPainter
operator|::
name|CompositionMode_SourceIn
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
literal|50
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|100
argument_list|,
name|QColor
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|getPaintedSize
argument_list|(
name|image
argument_list|,
name|QColor
argument_list|(
literal|127
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|127
argument_list|)
argument_list|)
argument_list|,
name|QRect
argument_list|(
literal|50
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|getPaintedSize
argument_list|(
name|image
argument_list|,
name|QColor
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|127
argument_list|,
literal|127
argument_list|)
argument_list|)
argument_list|,
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|fillRect2_data
name|void
name|tst_QPainter
operator|::
name|fillRect2_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QImage
operator|::
name|Format
argument_list|>
argument_list|(
literal|"format"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"argb32"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_ARGB32
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"argb32pm"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rgba8888"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGBA8888
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rgba8888pm"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGBA8888_Premultiplied
expr_stmt|;
block|}
end_function
begin_function
DECL|function|fillRect2
name|void
name|tst_QPainter
operator|::
name|fillRect2
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QImage
operator|::
name|Format
argument_list|,
name|format
argument_list|)
expr_stmt|;
name|QRgb
name|background
init|=
literal|0x0
decl_stmt|;
name|QImage
name|img
argument_list|(
literal|1
argument_list|,
literal|20
argument_list|,
name|format
argument_list|)
decl_stmt|;
name|img
operator|.
name|fill
argument_list|(
name|background
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|img
argument_list|)
decl_stmt|;
name|QRectF
name|rect
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
literal|1.2
argument_list|,
literal|18
argument_list|)
decl_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
name|rect
argument_list|,
name|Qt
operator|::
name|yellow
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|img
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|background
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|img
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
name|img
operator|.
name|height
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|,
name|background
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|img
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|img
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|img
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
name|img
operator|.
name|height
argument_list|()
operator|-
literal|2
argument_list|)
argument_list|,
name|img
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
name|img
operator|.
name|height
argument_list|()
operator|-
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|img
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|yellow
argument_list|)
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|fillRect3
name|void
name|tst_QPainter
operator|::
name|fillRect3
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QImage
operator|::
name|Format
argument_list|,
name|format
argument_list|)
expr_stmt|;
name|QImage
name|img
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
name|format
argument_list|)
decl_stmt|;
name|img
operator|.
name|fill
argument_list|(
name|QColor
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|img
argument_list|)
decl_stmt|;
name|p
operator|.
name|setCompositionMode
argument_list|(
name|QPainter
operator|::
name|CompositionMode_Source
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
name|img
operator|.
name|rect
argument_list|()
argument_list|,
name|Qt
operator|::
name|transparent
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|img
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
literal|0U
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|fillRect4
name|void
name|tst_QPainter
operator|::
name|fillRect4
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QImage
operator|::
name|Format
argument_list|,
name|format
argument_list|)
expr_stmt|;
name|QImage
name|image
argument_list|(
literal|100
argument_list|,
literal|1
argument_list|,
name|format
argument_list|)
decl_stmt|;
name|image
operator|.
name|fill
argument_list|(
literal|0x0
argument_list|)
expr_stmt|;
name|QImage
name|expected
init|=
name|image
decl_stmt|;
name|expected
operator|.
name|fill
argument_list|(
literal|0xffffffff
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|image
argument_list|)
decl_stmt|;
name|p
operator|.
name|scale
argument_list|(
literal|1.1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|33
condition|;
operator|++
name|i
control|)
name|p
operator|.
name|fillRect
argument_list|(
name|QRectF
argument_list|(
literal|3
operator|*
name|i
argument_list|,
literal|0
argument_list|,
literal|3
argument_list|,
literal|1
argument_list|)
argument_list|,
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|image
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|fillRectNonPremul
name|void
name|tst_QPainter
operator|::
name|fillRectNonPremul
parameter_list|()
block|{
name|QImage
name|img1
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
name|QImage
operator|::
name|Format_ARGB32
argument_list|)
decl_stmt|;
name|QImage
name|img2
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
name|QImage
operator|::
name|Format_RGBA8888
argument_list|)
decl_stmt|;
name|QPainter
name|p1
argument_list|(
operator|&
name|img1
argument_list|)
decl_stmt|;
name|QPainter
name|p2
argument_list|(
operator|&
name|img2
argument_list|)
decl_stmt|;
name|QRectF
name|rect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|p1
operator|.
name|fillRect
argument_list|(
name|rect
argument_list|,
name|qRgba
argument_list|(
literal|31
argument_list|,
literal|63
argument_list|,
literal|127
argument_list|,
literal|127
argument_list|)
argument_list|)
expr_stmt|;
name|p2
operator|.
name|fillRect
argument_list|(
name|rect
argument_list|,
name|qRgba
argument_list|(
literal|31
argument_list|,
literal|63
argument_list|,
literal|127
argument_list|,
literal|127
argument_list|)
argument_list|)
expr_stmt|;
name|p1
operator|.
name|end
argument_list|()
expr_stmt|;
name|p2
operator|.
name|end
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|img1
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|img2
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|drawPath_data
name|void
name|tst_QPainter
operator|::
name|drawPath_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QPainterPath
argument_list|>
argument_list|(
literal|"path"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QRect
argument_list|>
argument_list|(
literal|"expectedBounds"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expectedPixels"
argument_list|)
expr_stmt|;
block|{
name|QPainterPath
name|p
decl_stmt|;
name|p
operator|.
name|addRect
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"int-aligned rect"
argument_list|)
operator|<<
name|p
operator|<<
name|QRect
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
literal|10
operator|*
literal|10
expr_stmt|;
block|}
block|{
name|QPainterPath
name|p
decl_stmt|;
name|p
operator|.
name|addRect
argument_list|(
literal|2.25
argument_list|,
literal|2.25
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"non-aligned rect"
argument_list|)
operator|<<
name|p
operator|<<
name|QRect
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
literal|10
operator|*
literal|10
expr_stmt|;
block|}
block|{
name|QPainterPath
name|p
decl_stmt|;
name|p
operator|.
name|addRect
argument_list|(
literal|2.25
argument_list|,
literal|2.25
argument_list|,
literal|10.5
argument_list|,
literal|10.5
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"non-aligned rect 2"
argument_list|)
operator|<<
name|p
operator|<<
name|QRect
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
literal|10
operator|*
literal|10
expr_stmt|;
block|}
block|{
name|QPainterPath
name|p
decl_stmt|;
name|p
operator|.
name|addRect
argument_list|(
literal|2.5
argument_list|,
literal|2.5
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"non-aligned rect 3"
argument_list|)
operator|<<
name|p
operator|<<
name|QRect
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
literal|10
operator|*
literal|10
expr_stmt|;
block|}
block|{
name|QPainterPath
name|p
decl_stmt|;
name|p
operator|.
name|addRect
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|p
operator|.
name|addRect
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|,
literal|6
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rect-in-rect"
argument_list|)
operator|<<
name|p
operator|<<
name|QRect
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
literal|10
operator|*
literal|10
operator|-
literal|6
operator|*
literal|6
expr_stmt|;
block|}
block|{
name|QPainterPath
name|p
decl_stmt|;
name|p
operator|.
name|addRect
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|p
operator|.
name|addRect
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|,
literal|6
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|p
operator|.
name|addRect
argument_list|(
literal|6
argument_list|,
literal|6
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rect-in-rect-in-rect"
argument_list|)
operator|<<
name|p
operator|<<
name|QRect
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
literal|10
operator|*
literal|10
operator|-
literal|6
operator|*
literal|6
operator|+
literal|2
operator|*
literal|2
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|drawPath
name|void
name|tst_QPainter
operator|::
name|drawPath
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QPainterPath
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QRect
argument_list|,
name|expectedBounds
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expectedPixels
argument_list|)
expr_stmt|;
specifier|const
name|int
name|offset
init|=
literal|2
decl_stmt|;
name|QImage
name|image
argument_list|(
name|expectedBounds
operator|.
name|width
argument_list|()
operator|+
literal|2
operator|*
name|offset
argument_list|,
name|expectedBounds
operator|.
name|height
argument_list|()
operator|+
literal|2
operator|*
name|offset
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|image
operator|.
name|fill
argument_list|(
name|QColor
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|image
argument_list|)
decl_stmt|;
name|p
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Qt4CompatiblePainting
argument_list|)
expr_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|p
operator|.
name|setBrush
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|p
operator|.
name|translate
argument_list|(
name|offset
operator|-
name|expectedBounds
operator|.
name|left
argument_list|()
argument_list|,
name|offset
operator|-
name|expectedBounds
operator|.
name|top
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawPath
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
specifier|const
name|QRect
name|paintedBounds
init|=
name|getPaintedSize
argument_list|(
name|image
argument_list|,
name|Qt
operator|::
name|white
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|paintedBounds
operator|.
name|x
argument_list|()
argument_list|,
name|offset
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|paintedBounds
operator|.
name|y
argument_list|()
argument_list|,
name|offset
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|paintedBounds
operator|.
name|width
argument_list|()
argument_list|,
name|expectedBounds
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|paintedBounds
operator|.
name|height
argument_list|()
argument_list|,
name|expectedBounds
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|expectedPixels
operator|!=
operator|-
literal|1
condition|)
block|{
name|int
name|paintedPixels
init|=
name|getPaintedPixels
argument_list|(
name|image
argument_list|,
name|Qt
operator|::
name|white
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|paintedPixels
argument_list|,
name|expectedPixels
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|drawPath2
name|void
name|tst_QPainter
operator|::
name|drawPath2
parameter_list|()
block|{
specifier|const
name|int
name|w
init|=
literal|50
decl_stmt|;
for|for
control|(
name|int
name|h
init|=
literal|5
init|;
name|h
operator|<
literal|200
condition|;
operator|++
name|h
control|)
block|{
name|QPainterPath
name|p1
decl_stmt|,
name|p2
decl_stmt|;
name|p1
operator|.
name|lineTo
argument_list|(
name|w
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|p1
operator|.
name|lineTo
argument_list|(
name|w
argument_list|,
name|h
argument_list|)
expr_stmt|;
name|p2
operator|.
name|lineTo
argument_list|(
name|w
argument_list|,
name|h
argument_list|)
expr_stmt|;
name|p2
operator|.
name|lineTo
argument_list|(
literal|0
argument_list|,
name|h
argument_list|)
expr_stmt|;
specifier|const
name|int
name|offset
init|=
literal|2
decl_stmt|;
name|QImage
name|image
argument_list|(
name|w
operator|+
literal|2
operator|*
name|offset
argument_list|,
name|h
operator|+
literal|2
operator|*
name|offset
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|image
operator|.
name|fill
argument_list|(
name|QColor
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|image
argument_list|)
decl_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|p
operator|.
name|setBrush
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|p
operator|.
name|translate
argument_list|(
name|offset
argument_list|,
name|offset
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawPath
argument_list|(
name|p1
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
specifier|const
name|int
name|p1Pixels
init|=
name|getPaintedPixels
argument_list|(
name|image
argument_list|,
name|Qt
operator|::
name|white
argument_list|)
decl_stmt|;
name|image
operator|.
name|fill
argument_list|(
name|QColor
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|.
name|begin
argument_list|(
operator|&
name|image
argument_list|)
expr_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|p
operator|.
name|setBrush
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|p
operator|.
name|translate
argument_list|(
name|offset
argument_list|,
name|offset
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawPath
argument_list|(
name|p2
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
specifier|const
name|int
name|p2Pixels
init|=
name|getPaintedPixels
argument_list|(
name|image
argument_list|,
name|Qt
operator|::
name|white
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|p1Pixels
operator|+
name|p2Pixels
argument_list|,
name|w
operator|*
name|h
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|drawPath3
name|void
name|tst_QPainter
operator|::
name|drawPath3
parameter_list|()
block|{
name|QImage
name|imgA
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
name|QImage
operator|::
name|Format_RGB32
argument_list|)
decl_stmt|;
name|imgA
operator|.
name|fill
argument_list|(
literal|0xffffff
argument_list|)
expr_stmt|;
name|QImage
name|imgB
init|=
name|imgA
decl_stmt|;
name|QPainterPath
name|path
decl_stmt|;
for|for
control|(
name|int
name|y
init|=
literal|0
init|;
name|y
operator|<
name|imgA
operator|.
name|height
argument_list|()
condition|;
operator|++
name|y
control|)
block|{
for|for
control|(
name|int
name|x
init|=
literal|0
init|;
name|x
operator|<
name|imgA
operator|.
name|width
argument_list|()
condition|;
operator|++
name|x
control|)
block|{
if|if
condition|(
operator|(
name|x
operator|+
name|y
operator|)
operator|&
literal|1
condition|)
block|{
name|imgA
operator|.
name|setPixel
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|path
operator|.
name|addRect
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|QPainter
name|p
argument_list|(
operator|&
name|imgB
argument_list|)
decl_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|p
operator|.
name|setBrush
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawPath
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|imgA
operator|==
name|imgB
argument_list|)
expr_stmt|;
name|imgA
operator|.
name|invertPixels
argument_list|()
expr_stmt|;
name|imgB
operator|.
name|fill
argument_list|(
literal|0xffffff
argument_list|)
expr_stmt|;
name|p
operator|.
name|begin
argument_list|(
operator|&
name|imgB
argument_list|)
expr_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|p
operator|.
name|setBrush
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|QRectF
name|rect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|imgA
operator|.
name|width
argument_list|()
argument_list|,
name|imgA
operator|.
name|height
argument_list|()
argument_list|)
decl_stmt|;
name|path
operator|.
name|addRect
argument_list|(
name|rect
operator|.
name|adjusted
argument_list|(
operator|-
literal|10
argument_list|,
operator|-
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawPath
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|imgA
operator|==
name|imgB
argument_list|)
expr_stmt|;
name|path
operator|.
name|setFillRule
argument_list|(
name|Qt
operator|::
name|WindingFill
argument_list|)
expr_stmt|;
name|imgB
operator|.
name|fill
argument_list|(
literal|0xffffff
argument_list|)
expr_stmt|;
name|p
operator|.
name|begin
argument_list|(
operator|&
name|imgB
argument_list|)
expr_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|p
operator|.
name|setBrush
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|QRect
name|clip
init|=
name|rect
operator|.
name|adjusted
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
operator|-
literal|10
argument_list|,
operator|-
literal|10
argument_list|)
operator|.
name|toRect
argument_list|()
decl_stmt|;
name|p
operator|.
name|setClipRect
argument_list|(
name|clip
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawPath
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|getPaintedPixels
argument_list|(
name|imgB
argument_list|,
name|Qt
operator|::
name|white
argument_list|)
argument_list|,
name|clip
operator|.
name|width
argument_list|()
operator|*
name|clip
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|drawEllipse_data
name|void
name|tst_QPainter
operator|::
name|drawEllipse_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QSize
argument_list|>
argument_list|(
literal|"size"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"usePen"
argument_list|)
expr_stmt|;
comment|// The current drawEllipse algorithm (drawEllipse_midpoint_i in
comment|// qpaintengine_raster.cpp) draws ellipses that are too wide if the
comment|// ratio between width and hight is too large/small (task 114874). Those
comment|// ratios are therefore currently avoided.
for|for
control|(
name|int
name|w
init|=
literal|10
init|;
name|w
operator|<
literal|128
condition|;
name|w
operator|+=
literal|7
control|)
block|{
for|for
control|(
name|int
name|h
init|=
name|w
operator|/
literal|2
init|;
name|h
operator|<
name|qMin
argument_list|(
literal|2
operator|*
name|w
argument_list|,
literal|128
argument_list|)
condition|;
name|h
operator|+=
literal|13
control|)
block|{
name|QString
name|s
init|=
name|QString
argument_list|(
literal|"%1x%2"
argument_list|)
operator|.
name|arg
argument_list|(
name|w
argument_list|)
operator|.
name|arg
argument_list|(
name|h
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|QString
argument_list|(
literal|"%1 with pen"
argument_list|)
operator|.
name|arg
argument_list|(
name|s
argument_list|)
operator|.
name|toLatin1
argument_list|()
argument_list|)
operator|<<
name|QSize
argument_list|(
name|w
argument_list|,
name|h
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|QString
argument_list|(
literal|"%1 no pen"
argument_list|)
operator|.
name|arg
argument_list|(
name|s
argument_list|)
operator|.
name|toLatin1
argument_list|()
argument_list|)
operator|<<
name|QSize
argument_list|(
name|w
argument_list|,
name|h
argument_list|)
operator|<<
literal|false
expr_stmt|;
block|}
block|}
block|}
end_function
begin_function
DECL|function|drawEllipse
name|void
name|tst_QPainter
operator|::
name|drawEllipse
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QSize
argument_list|,
name|size
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|usePen
argument_list|)
expr_stmt|;
specifier|const
name|int
name|offset
init|=
literal|10
decl_stmt|;
name|QRect
name|rect
argument_list|(
name|QPoint
argument_list|(
name|offset
argument_list|,
name|offset
argument_list|)
argument_list|,
name|size
argument_list|)
decl_stmt|;
name|QImage
name|image
argument_list|(
name|size
operator|.
name|width
argument_list|()
operator|+
literal|2
operator|*
name|offset
argument_list|,
name|size
operator|.
name|height
argument_list|()
operator|+
literal|2
operator|*
name|offset
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|image
operator|.
name|fill
argument_list|(
name|QColor
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|image
argument_list|)
decl_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|usePen
condition|?
name|QPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
else|:
name|QPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|setBrush
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawEllipse
argument_list|(
name|rect
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|QPixmap
name|pixmap
init|=
name|QPixmap
operator|::
name|fromImage
argument_list|(
name|image
argument_list|)
decl_stmt|;
specifier|const
name|QRect
name|painted
init|=
name|getPaintedSize
argument_list|(
name|pixmap
argument_list|,
name|Qt
operator|::
name|white
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|painted
operator|.
name|x
argument_list|()
argument_list|,
name|rect
operator|.
name|x
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|painted
operator|.
name|y
argument_list|()
argument_list|,
name|rect
operator|.
name|y
argument_list|()
operator|+
operator|(
name|usePen
condition|?
literal|0
else|:
literal|1
operator|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|painted
operator|.
name|width
argument_list|()
argument_list|,
name|size
operator|.
name|width
argument_list|()
operator|+
operator|(
name|usePen
condition|?
literal|1
else|:
literal|0
operator|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|painted
operator|.
name|height
argument_list|()
argument_list|,
name|size
operator|.
name|height
argument_list|()
operator|+
operator|(
name|usePen
condition|?
literal|1
else|:
operator|-
literal|1
operator|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|drawClippedEllipse_data
name|void
name|tst_QPainter
operator|::
name|drawClippedEllipse_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QRect
argument_list|>
argument_list|(
literal|"rect"
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|w
init|=
literal|20
init|;
name|w
operator|<
literal|128
condition|;
name|w
operator|+=
literal|7
control|)
block|{
for|for
control|(
name|int
name|h
init|=
name|w
operator|/
literal|2
init|;
name|h
operator|<
name|qMin
argument_list|(
literal|2
operator|*
name|w
argument_list|,
literal|128
argument_list|)
condition|;
name|h
operator|+=
literal|13
control|)
block|{
name|QString
name|s
init|=
name|QString
argument_list|(
literal|"%1x%2"
argument_list|)
operator|.
name|arg
argument_list|(
name|w
argument_list|)
operator|.
name|arg
argument_list|(
name|h
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|QString
argument_list|(
literal|"%1 top"
argument_list|)
operator|.
name|arg
argument_list|(
name|s
argument_list|)
operator|.
name|toLatin1
argument_list|()
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
operator|-
name|h
operator|/
literal|2
argument_list|,
name|w
argument_list|,
name|h
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|QString
argument_list|(
literal|"%1 topright"
argument_list|)
operator|.
name|arg
argument_list|(
name|s
argument_list|)
operator|.
name|toLatin1
argument_list|()
argument_list|)
operator|<<
name|QRect
argument_list|(
name|w
operator|/
literal|2
argument_list|,
operator|-
name|h
operator|/
literal|2
argument_list|,
name|w
argument_list|,
name|h
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|QString
argument_list|(
literal|"%1 right"
argument_list|)
operator|.
name|arg
argument_list|(
name|s
argument_list|)
operator|.
name|toLatin1
argument_list|()
argument_list|)
operator|<<
name|QRect
argument_list|(
name|w
operator|/
literal|2
argument_list|,
literal|0
argument_list|,
name|w
argument_list|,
name|h
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|QString
argument_list|(
literal|"%1 bottomright"
argument_list|)
operator|.
name|arg
argument_list|(
name|s
argument_list|)
operator|.
name|toLatin1
argument_list|()
argument_list|)
operator|<<
name|QRect
argument_list|(
name|w
operator|/
literal|2
argument_list|,
name|h
operator|/
literal|2
argument_list|,
name|w
argument_list|,
name|h
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|QString
argument_list|(
literal|"%1 bottom"
argument_list|)
operator|.
name|arg
argument_list|(
name|s
argument_list|)
operator|.
name|toLatin1
argument_list|()
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
name|h
operator|/
literal|2
argument_list|,
name|w
argument_list|,
name|h
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|QString
argument_list|(
literal|"%1 bottomleft"
argument_list|)
operator|.
name|arg
argument_list|(
name|s
argument_list|)
operator|.
name|toLatin1
argument_list|()
argument_list|)
operator|<<
name|QRect
argument_list|(
operator|-
name|w
operator|/
literal|2
argument_list|,
name|h
operator|/
literal|2
argument_list|,
name|w
argument_list|,
name|h
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|QString
argument_list|(
literal|"%1 left"
argument_list|)
operator|.
name|arg
argument_list|(
name|s
argument_list|)
operator|.
name|toLatin1
argument_list|()
argument_list|)
operator|<<
name|QRect
argument_list|(
operator|-
name|w
operator|/
literal|2
argument_list|,
literal|0
argument_list|,
name|w
argument_list|,
name|h
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|QString
argument_list|(
literal|"%1 topleft"
argument_list|)
operator|.
name|arg
argument_list|(
name|s
argument_list|)
operator|.
name|toLatin1
argument_list|()
argument_list|)
operator|<<
name|QRect
argument_list|(
operator|-
name|w
operator|/
literal|2
argument_list|,
operator|-
name|h
operator|/
literal|2
argument_list|,
name|w
argument_list|,
name|h
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_function
begin_function
DECL|function|drawClippedEllipse
name|void
name|tst_QPainter
operator|::
name|drawClippedEllipse
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QRect
argument_list|,
name|rect
argument_list|)
expr_stmt|;
if|if
condition|(
sizeof|sizeof
argument_list|(
name|qreal
argument_list|)
operator|!=
sizeof|sizeof
argument_list|(
name|double
argument_list|)
condition|)
name|QSKIP
argument_list|(
literal|"Test only works for qreal==double"
argument_list|)
expr_stmt|;
name|QImage
name|image
argument_list|(
name|rect
operator|.
name|width
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|height
argument_list|()
operator|+
literal|1
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|QRect
name|expected
init|=
name|QRect
argument_list|(
name|rect
operator|.
name|x
argument_list|()
argument_list|,
name|rect
operator|.
name|y
argument_list|()
argument_list|,
name|rect
operator|.
name|width
argument_list|()
operator|+
literal|1
argument_list|,
name|rect
operator|.
name|height
argument_list|()
operator|+
literal|1
argument_list|)
operator|&
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|image
operator|.
name|width
argument_list|()
argument_list|,
name|image
operator|.
name|height
argument_list|()
argument_list|)
decl_stmt|;
name|image
operator|.
name|fill
argument_list|(
name|QColor
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|image
argument_list|)
decl_stmt|;
name|p
operator|.
name|drawEllipse
argument_list|(
name|rect
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|QPixmap
name|pixmap
init|=
name|QPixmap
operator|::
name|fromImage
argument_list|(
name|image
argument_list|)
decl_stmt|;
specifier|const
name|QRect
name|painted
init|=
name|getPaintedSize
argument_list|(
name|pixmap
argument_list|,
name|Qt
operator|::
name|white
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|painted
operator|.
name|x
argument_list|()
argument_list|,
name|expected
operator|.
name|x
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|painted
operator|.
name|y
argument_list|()
argument_list|,
name|expected
operator|.
name|y
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|painted
operator|.
name|width
argument_list|()
argument_list|,
name|expected
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|painted
operator|.
name|height
argument_list|()
argument_list|,
name|expected
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|drawRoundRect
name|void
name|tst_QPainter
operator|::
name|drawRoundRect
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QRect
argument_list|,
name|rect
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|usePen
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_OS_MAC
if|if
condition|(
name|QTest
operator|::
name|currentDataTag
argument_list|()
operator|==
name|QByteArray
argument_list|(
literal|"rect(6, 12, 3, 14) with pen"
argument_list|)
operator|||
name|QTest
operator|::
name|currentDataTag
argument_list|()
operator|==
name|QByteArray
argument_list|(
literal|"rect(6, 17, 3, 25) with pen"
argument_list|)
operator|||
name|QTest
operator|::
name|currentDataTag
argument_list|()
operator|==
name|QByteArray
argument_list|(
literal|"rect(10, 6, 10, 3) with pen"
argument_list|)
operator|||
name|QTest
operator|::
name|currentDataTag
argument_list|()
operator|==
name|QByteArray
argument_list|(
literal|"rect(10, 12, 10, 14) with pen"
argument_list|)
operator|||
name|QTest
operator|::
name|currentDataTag
argument_list|()
operator|==
name|QByteArray
argument_list|(
literal|"rect(13, 45, 17, 80) with pen"
argument_list|)
operator|||
name|QTest
operator|::
name|currentDataTag
argument_list|()
operator|==
name|QByteArray
argument_list|(
literal|"rect(13, 50, 17, 91) with pen"
argument_list|)
operator|||
name|QTest
operator|::
name|currentDataTag
argument_list|()
operator|==
name|QByteArray
argument_list|(
literal|"rect(17, 6, 24, 3) with pen"
argument_list|)
operator|||
name|QTest
operator|::
name|currentDataTag
argument_list|()
operator|==
name|QByteArray
argument_list|(
literal|"rect(24, 12, 38, 14) with pen"
argument_list|)
condition|)
name|QSKIP
argument_list|(
literal|"The Mac paint engine is off-by-one on certain rect sizes"
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QPixmap
name|pixmap
argument_list|(
name|rect
operator|.
name|x
argument_list|()
operator|+
name|rect
operator|.
name|width
argument_list|()
operator|+
literal|10
argument_list|,
name|rect
operator|.
name|y
argument_list|()
operator|+
name|rect
operator|.
name|height
argument_list|()
operator|+
literal|10
argument_list|)
decl_stmt|;
block|{
name|pixmap
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|pixmap
argument_list|)
decl_stmt|;
name|p
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Qt4CompatiblePainting
argument_list|)
expr_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|usePen
condition|?
name|QPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
else|:
name|QPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|setBrush
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawRoundRect
argument_list|(
name|rect
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|int
name|increment
init|=
name|usePen
condition|?
literal|1
else|:
literal|0
decl_stmt|;
specifier|const
name|QRect
name|painted
init|=
name|getPaintedSize
argument_list|(
name|pixmap
argument_list|,
name|Qt
operator|::
name|white
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|painted
operator|.
name|width
argument_list|()
argument_list|,
name|rect
operator|.
name|width
argument_list|()
operator|+
name|increment
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|painted
operator|.
name|height
argument_list|()
argument_list|,
name|rect
operator|.
name|height
argument_list|()
operator|+
name|increment
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|qimageFormats_data
name|void
name|tst_QPainter
operator|::
name|qimageFormats_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QImage
operator|::
name|Format
argument_list|>
argument_list|(
literal|"format"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"QImage::Format_RGB32"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB32
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"QImage::Format_ARGB32"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_ARGB32
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"QImage::Format_ARGB32_Premultiplied"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"QImage::Format_RGB16"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB16
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Qimage::Format_ARGB8565_Premultiplied"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_ARGB8565_Premultiplied
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Qimage::Format_RGB666"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB666
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Qimage::Format_RGB555"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB555
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Qimage::Format_ARGB8555_Premultiplied"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_ARGB8555_Premultiplied
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Qimage::Format_RGB888"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB888
expr_stmt|;
block|}
end_function
begin_comment
comment|/*     Tests that QPainter can paint on various QImage formats. */
end_comment
begin_function
DECL|function|qimageFormats
name|void
name|tst_QPainter
operator|::
name|qimageFormats
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QImage
operator|::
name|Format
argument_list|,
name|format
argument_list|)
expr_stmt|;
specifier|const
name|QSize
name|size
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
decl_stmt|;
name|QImage
name|image
argument_list|(
name|size
argument_list|,
name|format
argument_list|)
decl_stmt|;
name|image
operator|.
name|fill
argument_list|(
literal|0
argument_list|)
expr_stmt|;
specifier|const
name|QColor
name|testColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
decl_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|image
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|p
operator|.
name|isActive
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|.
name|setBrush
argument_list|(
name|QBrush
argument_list|(
name|testColor
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawRect
argument_list|(
name|QRect
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|size
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|image
operator|.
name|pixel
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|,
name|testColor
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|fillData
name|void
name|tst_QPainter
operator|::
name|fillData
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QRect
argument_list|>
argument_list|(
literal|"rect"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"usePen"
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|w
init|=
literal|3
init|;
name|w
operator|<
literal|50
condition|;
name|w
operator|+=
literal|7
control|)
block|{
for|for
control|(
name|int
name|h
init|=
literal|3
init|;
name|h
operator|<
literal|50
condition|;
name|h
operator|+=
literal|11
control|)
block|{
name|int
name|x
init|=
name|w
operator|/
literal|2
operator|+
literal|5
decl_stmt|;
name|int
name|y
init|=
name|h
operator|/
literal|2
operator|+
literal|5
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|QString
argument_list|(
literal|"rect(%1, %2, %3, %4) with pen"
argument_list|)
operator|.
name|arg
argument_list|(
name|x
argument_list|)
operator|.
name|arg
argument_list|(
name|y
argument_list|)
operator|.
name|arg
argument_list|(
name|w
argument_list|)
operator|.
name|arg
argument_list|(
name|h
argument_list|)
operator|.
name|toLatin1
argument_list|()
argument_list|)
operator|<<
name|QRect
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|w
argument_list|,
name|h
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|QString
argument_list|(
literal|"rect(%1, %2, %3, %4) no pen"
argument_list|)
operator|.
name|arg
argument_list|(
name|x
argument_list|)
operator|.
name|arg
argument_list|(
name|y
argument_list|)
operator|.
name|arg
argument_list|(
name|w
argument_list|)
operator|.
name|arg
argument_list|(
name|h
argument_list|)
operator|.
name|toLatin1
argument_list|()
argument_list|)
operator|<<
name|QRect
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|w
argument_list|,
name|h
argument_list|)
operator|<<
literal|false
expr_stmt|;
block|}
block|}
block|}
end_function
begin_comment
comment|/*     Test that drawline works properly after setWindow has been called. */
end_comment
begin_function
DECL|function|setWindow
name|void
name|tst_QPainter
operator|::
name|setWindow
parameter_list|()
block|{
name|QPixmap
name|pixmap
argument_list|(
literal|600
argument_list|,
literal|600
argument_list|)
decl_stmt|;
name|pixmap
operator|.
name|fill
argument_list|(
name|QColor
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
argument_list|)
expr_stmt|;
name|QPainter
name|painter
argument_list|(
operator|&
name|pixmap
argument_list|)
decl_stmt|;
name|painter
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Qt4CompatiblePainting
argument_list|)
expr_stmt|;
name|painter
operator|.
name|setWindow
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|3
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|painter
operator|.
name|drawLine
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
specifier|const
name|QRect
name|painted
init|=
name|getPaintedSize
argument_list|(
name|pixmap
argument_list|,
name|Qt
operator|::
name|white
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
literal|195
operator|<
name|painted
operator|.
name|y
argument_list|()
operator|&&
name|painted
operator|.
name|y
argument_list|()
operator|<
literal|205
argument_list|)
expr_stmt|;
comment|// correct value is around 200
name|QVERIFY
argument_list|(
literal|195
operator|<
name|painted
operator|.
name|height
argument_list|()
operator|&&
name|painted
operator|.
name|height
argument_list|()
operator|<
literal|205
argument_list|)
expr_stmt|;
comment|// correct value is around 200
block|}
end_function
begin_function
DECL|function|combinedMatrix
name|void
name|tst_QPainter
operator|::
name|combinedMatrix
parameter_list|()
block|{
name|QPixmap
name|pm
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|)
decl_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|pm
argument_list|)
decl_stmt|;
name|p
operator|.
name|setWindow
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|p
operator|.
name|setViewport
argument_list|(
literal|32
argument_list|,
literal|0
argument_list|,
literal|32
argument_list|,
literal|32
argument_list|)
expr_stmt|;
name|p
operator|.
name|translate
argument_list|(
literal|0.5
argument_list|,
literal|0.5
argument_list|)
expr_stmt|;
name|QMatrix
name|cm
init|=
name|p
operator|.
name|combinedMatrix
argument_list|()
decl_stmt|;
name|QPointF
name|pt
init|=
name|QPointF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|*
name|cm
decl_stmt|;
name|QCOMPARE
argument_list|(
name|pt
operator|.
name|x
argument_list|()
argument_list|,
literal|48.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|pt
operator|.
name|y
argument_list|()
argument_list|,
literal|16.0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|textOnTransparentImage
name|void
name|tst_QPainter
operator|::
name|textOnTransparentImage
parameter_list|()
block|{
name|bool
name|foundPixel
init|=
literal|false
decl_stmt|;
name|QImage
name|image
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|image
operator|.
name|fill
argument_list|(
name|qRgba
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|// transparent
block|{
name|QPainter
name|painter
argument_list|(
operator|&
name|image
argument_list|)
decl_stmt|;
name|painter
operator|.
name|setPen
argument_list|(
name|QColor
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|.
name|drawText
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|,
literal|"W"
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|x
init|=
literal|0
init|;
name|x
operator|<
name|image
operator|.
name|width
argument_list|()
condition|;
operator|++
name|x
control|)
for|for
control|(
name|int
name|y
init|=
literal|0
init|;
name|y
operator|<
name|image
operator|.
name|height
argument_list|()
condition|;
operator|++
name|y
control|)
if|if
condition|(
name|image
operator|.
name|pixel
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
operator|!=
literal|0
condition|)
name|foundPixel
operator|=
literal|true
expr_stmt|;
name|QVERIFY
argument_list|(
name|foundPixel
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|renderHints
name|void
name|tst_QPainter
operator|::
name|renderHints
parameter_list|()
block|{
name|QImage
name|img
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
name|QImage
operator|::
name|Format_RGB32
argument_list|)
decl_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|img
argument_list|)
decl_stmt|;
comment|// Turn off all...
name|p
operator|.
name|setRenderHints
argument_list|(
name|QPainter
operator|::
name|RenderHints
argument_list|(
literal|0xffffffff
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|p
operator|.
name|renderHints
argument_list|()
argument_list|,
name|QPainter
operator|::
name|RenderHints
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|// Single set/get
name|p
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|p
operator|.
name|renderHints
argument_list|()
operator|&
name|QPainter
operator|::
name|Antialiasing
argument_list|)
expr_stmt|;
name|p
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|p
operator|.
name|renderHints
argument_list|()
operator|&
name|QPainter
operator|::
name|Antialiasing
operator|)
argument_list|)
expr_stmt|;
comment|// Multi set/get
name|p
operator|.
name|setRenderHints
argument_list|(
name|QPainter
operator|::
name|Antialiasing
operator||
name|QPainter
operator|::
name|SmoothPixmapTransform
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|p
operator|.
name|renderHints
argument_list|()
operator|&
operator|(
name|QPainter
operator|::
name|Antialiasing
operator||
name|QPainter
operator|::
name|SmoothPixmapTransform
operator|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|setRenderHints
argument_list|(
name|QPainter
operator|::
name|Antialiasing
operator||
name|QPainter
operator|::
name|SmoothPixmapTransform
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|p
operator|.
name|renderHints
argument_list|()
operator|&
operator|(
name|QPainter
operator|::
name|Antialiasing
operator||
name|QPainter
operator|::
name|SmoothPixmapTransform
operator|)
operator|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|countPixels
name|int
name|countPixels
parameter_list|(
specifier|const
name|QImage
modifier|&
name|img
parameter_list|,
specifier|const
name|QRgb
modifier|&
name|color
parameter_list|)
block|{
name|int
name|count
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|y
init|=
literal|0
init|;
name|y
operator|<
name|img
operator|.
name|height
argument_list|()
condition|;
operator|++
name|y
control|)
block|{
for|for
control|(
name|int
name|x
init|=
literal|0
init|;
name|x
operator|<
name|img
operator|.
name|width
argument_list|()
condition|;
operator|++
name|x
control|)
block|{
name|count
operator|+=
operator|(
operator|(
name|img
operator|.
name|pixel
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
operator|&
literal|0xffffff
operator|)
operator|==
name|color
operator|)
expr_stmt|;
block|}
block|}
return|return
name|count
return|;
block|}
end_function
begin_function
template|template
parameter_list|<
name|typename
name|T
parameter_list|>
DECL|function|testClipping
name|void
name|testClipping
parameter_list|(
name|QImage
modifier|&
name|img
parameter_list|)
block|{
name|QPainterPath
name|a
decl_stmt|,
name|b
decl_stmt|;
name|a
operator|.
name|addRect
argument_list|(
name|QRect
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
literal|4
argument_list|,
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|b
operator|.
name|addRect
argument_list|(
name|QRect
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|,
literal|4
argument_list|,
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|img
argument_list|)
decl_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|img
operator|.
name|fill
argument_list|(
literal|0x0
argument_list|)
expr_stmt|;
name|p
operator|.
name|begin
argument_list|(
operator|&
name|img
argument_list|)
expr_stmt|;
name|p
operator|.
name|setClipPath
argument_list|(
name|a
argument_list|)
expr_stmt|;
name|p
operator|.
name|setClipPath
argument_list|(
name|b
argument_list|,
name|Qt
operator|::
name|IntersectClip
argument_list|)
expr_stmt|;
name|p
operator|.
name|setClipping
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|p
operator|.
name|setBrush
argument_list|(
name|QColor
argument_list|(
literal|0xff0000
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawRect
argument_list|(
name|T
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|setClipping
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|p
operator|.
name|setBrush
argument_list|(
name|QColor
argument_list|(
literal|0x00ff00
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawRect
argument_list|(
name|T
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|countPixels
argument_list|(
name|img
argument_list|,
literal|0xff0000
argument_list|)
argument_list|,
literal|96
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|countPixels
argument_list|(
name|img
argument_list|,
literal|0x00ff00
argument_list|)
argument_list|,
literal|4
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|disableEnableClipping
name|void
name|tst_QPainter
operator|::
name|disableEnableClipping
parameter_list|()
block|{
name|QImage
name|img
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
name|QImage
operator|::
name|Format_RGB32
argument_list|)
decl_stmt|;
name|testClipping
argument_list|<
name|QRectF
argument_list|>
argument_list|(
name|img
argument_list|)
expr_stmt|;
name|testClipping
argument_list|<
name|QRect
argument_list|>
argument_list|(
name|img
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setClipRect
name|void
name|tst_QPainter
operator|::
name|setClipRect
parameter_list|()
block|{
name|QImage
name|img
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
name|QImage
operator|::
name|Format_RGB32
argument_list|)
decl_stmt|;
comment|// simple test to let valgrind check for buffer overflow
block|{
name|QPainter
name|p
argument_list|(
operator|&
name|img
argument_list|)
decl_stmt|;
name|p
operator|.
name|setClipRect
argument_list|(
operator|-
literal|10
argument_list|,
operator|-
literal|10
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
operator|-
literal|10
argument_list|,
operator|-
literal|10
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
name|QBrush
argument_list|(
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// rects with negative width/height
block|{
name|QPainter
name|p
argument_list|(
operator|&
name|img
argument_list|)
decl_stmt|;
name|p
operator|.
name|setClipRect
argument_list|(
name|QRect
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
operator|-
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|p
operator|.
name|clipRegion
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|.
name|setClipRect
argument_list|(
name|QRect
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
operator|-
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|p
operator|.
name|clipRegion
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|.
name|setClipRect
argument_list|(
name|QRectF
argument_list|(
literal|10.5
argument_list|,
literal|10.5
argument_list|,
operator|-
literal|10.5
argument_list|,
literal|10.5
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|p
operator|.
name|clipRegion
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|.
name|setClipRect
argument_list|(
name|QRectF
argument_list|(
literal|10.5
argument_list|,
literal|10.5
argument_list|,
literal|10.5
argument_list|,
operator|-
literal|10.5
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|p
operator|.
name|clipRegion
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_comment
comment|/*     This tests the two different clipping approaches in QRasterPaintEngine,     one when using a QRegion and one when using a QPainterPath. They should     give equal results. */
end_comment
begin_function
DECL|function|setEqualClipRegionAndPath_data
name|void
name|tst_QPainter
operator|::
name|setEqualClipRegionAndPath_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QSize
argument_list|>
argument_list|(
literal|"deviceSize"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QRegion
argument_list|>
argument_list|(
literal|"region"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"empty"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|QRegion
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"simple rect"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|QRegion
argument_list|(
name|QRect
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QVector
argument_list|<
name|QRect
argument_list|>
name|rects
decl_stmt|;
name|QRegion
name|region
decl_stmt|;
name|rects
operator|<<
name|QRect
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|20
argument_list|,
literal|20
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|region
operator|.
name|setRects
argument_list|(
name|rects
operator|.
name|constData
argument_list|()
argument_list|,
name|rects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"two rects"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|region
expr_stmt|;
name|rects
operator|.
name|clear
argument_list|()
expr_stmt|;
name|rects
operator|<<
name|QRect
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|20
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|region
operator|.
name|setRects
argument_list|(
name|rects
operator|.
name|constData
argument_list|()
argument_list|,
name|rects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"two x-adjacent rects"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|region
expr_stmt|;
name|rects
operator|.
name|clear
argument_list|()
expr_stmt|;
name|rects
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|100
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|12
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|region
operator|.
name|setRects
argument_list|(
name|rects
operator|.
name|constData
argument_list|()
argument_list|,
name|rects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"two x-adjacent rects 2"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|region
expr_stmt|;
name|rects
operator|.
name|clear
argument_list|()
expr_stmt|;
name|rects
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|100
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|12
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|region
operator|.
name|setRects
argument_list|(
name|rects
operator|.
name|constData
argument_list|()
argument_list|,
name|rects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"two x-adjacent rects 3"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
name|region
expr_stmt|;
name|rects
operator|.
name|clear
argument_list|()
expr_stmt|;
name|rects
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|100
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|12
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|region
operator|.
name|setRects
argument_list|(
name|rects
operator|.
name|constData
argument_list|()
argument_list|,
name|rects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"two x-adjacent rects 4"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|101
argument_list|,
literal|101
argument_list|)
operator|<<
name|region
expr_stmt|;
name|region
operator|=
name|QRegion
argument_list|(
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|)
argument_list|,
name|QRegion
operator|::
name|Ellipse
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ellipse"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|190
argument_list|,
literal|200
argument_list|)
operator|<<
name|region
expr_stmt|;
name|region
operator|^=
name|QRect
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ellipse 2"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
operator|<<
name|region
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setEqualClipRegionAndPath
name|void
name|tst_QPainter
operator|::
name|setEqualClipRegionAndPath
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QSize
argument_list|,
name|deviceSize
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QRegion
argument_list|,
name|region
argument_list|)
expr_stmt|;
name|QPainterPath
name|path
decl_stmt|;
name|path
operator|.
name|addRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
name|QImage
name|img1
argument_list|(
name|deviceSize
operator|.
name|width
argument_list|()
argument_list|,
name|deviceSize
operator|.
name|height
argument_list|()
argument_list|,
name|QImage
operator|::
name|Format_ARGB32
argument_list|)
decl_stmt|;
name|QImage
name|img2
argument_list|(
name|deviceSize
operator|.
name|width
argument_list|()
argument_list|,
name|deviceSize
operator|.
name|height
argument_list|()
argument_list|,
name|QImage
operator|::
name|Format_ARGB32
argument_list|)
decl_stmt|;
name|img1
operator|.
name|fill
argument_list|(
literal|0x12345678
argument_list|)
expr_stmt|;
name|img2
operator|.
name|fill
argument_list|(
literal|0x12345678
argument_list|)
expr_stmt|;
block|{
name|QPainter
name|p
argument_list|(
operator|&
name|img1
argument_list|)
decl_stmt|;
name|p
operator|.
name|setClipRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|img1
operator|.
name|width
argument_list|()
argument_list|,
name|img1
operator|.
name|height
argument_list|()
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QPainter
name|p
argument_list|(
operator|&
name|img2
argument_list|)
decl_stmt|;
name|p
operator|.
name|setClipPath
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|img2
operator|.
name|width
argument_list|()
argument_list|,
name|img2
operator|.
name|height
argument_list|()
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|img1
argument_list|,
name|img2
argument_list|)
expr_stmt|;
comment|// rotated
name|img1
operator|.
name|fill
argument_list|(
literal|0x12345678
argument_list|)
expr_stmt|;
name|img2
operator|.
name|fill
argument_list|(
literal|0x12345678
argument_list|)
expr_stmt|;
block|{
name|QPainter
name|p
argument_list|(
operator|&
name|img1
argument_list|)
decl_stmt|;
name|p
operator|.
name|rotate
argument_list|(
literal|25
argument_list|)
expr_stmt|;
name|p
operator|.
name|setClipRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|img1
operator|.
name|width
argument_list|()
argument_list|,
name|img1
operator|.
name|height
argument_list|()
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QPainter
name|p
argument_list|(
operator|&
name|img2
argument_list|)
decl_stmt|;
name|p
operator|.
name|rotate
argument_list|(
literal|25
argument_list|)
expr_stmt|;
name|p
operator|.
name|setClipPath
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|img2
operator|.
name|width
argument_list|()
argument_list|,
name|img2
operator|.
name|height
argument_list|()
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|img1
argument_list|,
name|img2
argument_list|)
expr_stmt|;
name|img1
operator|.
name|fill
argument_list|(
literal|0x12345678
argument_list|)
expr_stmt|;
name|img2
operator|.
name|fill
argument_list|(
literal|0x12345678
argument_list|)
expr_stmt|;
comment|// simple intersectclip
name|img1
operator|.
name|fill
argument_list|(
literal|0x12345678
argument_list|)
expr_stmt|;
name|img2
operator|.
name|fill
argument_list|(
literal|0x12345678
argument_list|)
expr_stmt|;
block|{
name|QPainter
name|p
argument_list|(
operator|&
name|img1
argument_list|)
decl_stmt|;
name|p
operator|.
name|setClipRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
name|p
operator|.
name|setClipRegion
argument_list|(
name|region
argument_list|,
name|Qt
operator|::
name|IntersectClip
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|img1
operator|.
name|width
argument_list|()
argument_list|,
name|img1
operator|.
name|height
argument_list|()
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QPainter
name|p
argument_list|(
operator|&
name|img2
argument_list|)
decl_stmt|;
name|p
operator|.
name|setClipPath
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|p
operator|.
name|setClipPath
argument_list|(
name|path
argument_list|,
name|Qt
operator|::
name|IntersectClip
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|img2
operator|.
name|width
argument_list|()
argument_list|,
name|img2
operator|.
name|height
argument_list|()
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|img1
argument_list|,
name|img2
argument_list|)
expr_stmt|;
name|img1
operator|.
name|fill
argument_list|(
literal|0x12345678
argument_list|)
expr_stmt|;
name|img2
operator|.
name|fill
argument_list|(
literal|0x12345678
argument_list|)
expr_stmt|;
block|{
name|QPainter
name|p
argument_list|(
operator|&
name|img1
argument_list|)
decl_stmt|;
name|p
operator|.
name|setClipPath
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|p
operator|.
name|setClipRegion
argument_list|(
name|region
argument_list|,
name|Qt
operator|::
name|IntersectClip
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|img1
operator|.
name|width
argument_list|()
argument_list|,
name|img1
operator|.
name|height
argument_list|()
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QPainter
name|p
argument_list|(
operator|&
name|img2
argument_list|)
decl_stmt|;
name|p
operator|.
name|setClipRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
name|p
operator|.
name|setClipPath
argument_list|(
name|path
argument_list|,
name|Qt
operator|::
name|IntersectClip
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|img2
operator|.
name|width
argument_list|()
argument_list|,
name|img2
operator|.
name|height
argument_list|()
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|img1
argument_list|,
name|img2
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|clippedFillPath_data
name|void
name|tst_QPainter
operator|::
name|clippedFillPath_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QSize
argument_list|>
argument_list|(
literal|"imageSize"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QPainterPath
argument_list|>
argument_list|(
literal|"path"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QRect
argument_list|>
argument_list|(
literal|"clipRect"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QBrush
argument_list|>
argument_list|(
literal|"brush"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QPen
argument_list|>
argument_list|(
literal|"pen"
argument_list|)
expr_stmt|;
name|QLinearGradient
name|gradient
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
decl_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|1
argument_list|,
name|Qt
operator|::
name|blue
argument_list|)
expr_stmt|;
name|QPen
name|pen2
argument_list|(
name|QColor
argument_list|(
literal|223
argument_list|,
literal|223
argument_list|,
literal|0
argument_list|,
literal|223
argument_list|)
argument_list|)
decl_stmt|;
name|pen2
operator|.
name|setWidth
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|QPainterPath
name|path
decl_stmt|;
name|path
operator|.
name|addRect
argument_list|(
name|QRect
argument_list|(
literal|15
argument_list|,
literal|15
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"simple rect 0"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|path
operator|<<
name|QRect
argument_list|(
literal|15
argument_list|,
literal|15
argument_list|,
literal|49
argument_list|,
literal|49
argument_list|)
operator|<<
name|QBrush
argument_list|(
name|Qt
operator|::
name|NoBrush
argument_list|)
operator|<<
name|QPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"simple rect 1"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|path
operator|<<
name|QRect
argument_list|(
literal|15
argument_list|,
literal|15
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
name|QBrush
argument_list|(
name|Qt
operator|::
name|NoBrush
argument_list|)
operator|<<
name|QPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"simple rect 2"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|path
operator|<<
name|QRect
argument_list|(
literal|15
argument_list|,
literal|15
argument_list|,
literal|51
argument_list|,
literal|51
argument_list|)
operator|<<
name|QBrush
argument_list|(
name|Qt
operator|::
name|NoBrush
argument_list|)
operator|<<
name|QPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"simple rect 3"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|path
operator|<<
name|QRect
argument_list|(
literal|15
argument_list|,
literal|15
argument_list|,
literal|51
argument_list|,
literal|51
argument_list|)
operator|<<
name|QBrush
argument_list|(
name|QColor
argument_list|(
name|Qt
operator|::
name|blue
argument_list|)
argument_list|)
operator|<<
name|QPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"simple rect 4"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|path
operator|<<
name|QRect
argument_list|(
literal|15
argument_list|,
literal|15
argument_list|,
literal|51
argument_list|,
literal|51
argument_list|)
operator|<<
name|QBrush
argument_list|(
name|gradient
argument_list|)
operator|<<
name|pen2
expr_stmt|;
name|path
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|path
operator|.
name|addEllipse
argument_list|(
name|QRect
argument_list|(
literal|15
argument_list|,
literal|15
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ellipse 0"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|path
operator|<<
name|QRect
argument_list|(
literal|15
argument_list|,
literal|15
argument_list|,
literal|49
argument_list|,
literal|49
argument_list|)
operator|<<
name|QBrush
argument_list|(
name|Qt
operator|::
name|NoBrush
argument_list|)
operator|<<
name|QPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ellipse 1"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|path
operator|<<
name|QRect
argument_list|(
literal|15
argument_list|,
literal|15
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
name|QBrush
argument_list|(
name|Qt
operator|::
name|NoBrush
argument_list|)
operator|<<
name|QPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ellipse 2"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|path
operator|<<
name|QRect
argument_list|(
literal|15
argument_list|,
literal|15
argument_list|,
literal|51
argument_list|,
literal|51
argument_list|)
operator|<<
name|QBrush
argument_list|(
name|Qt
operator|::
name|NoBrush
argument_list|)
operator|<<
name|QPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ellipse 3"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|path
operator|<<
name|QRect
argument_list|(
literal|15
argument_list|,
literal|15
argument_list|,
literal|51
argument_list|,
literal|51
argument_list|)
operator|<<
name|QBrush
argument_list|(
name|QColor
argument_list|(
name|Qt
operator|::
name|blue
argument_list|)
argument_list|)
operator|<<
name|QPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ellipse 4"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|path
operator|<<
name|QRect
argument_list|(
literal|15
argument_list|,
literal|15
argument_list|,
literal|51
argument_list|,
literal|51
argument_list|)
operator|<<
name|QBrush
argument_list|(
name|gradient
argument_list|)
operator|<<
name|pen2
expr_stmt|;
name|path
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|path
operator|.
name|addRoundRect
argument_list|(
name|QRect
argument_list|(
literal|15
argument_list|,
literal|15
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"round rect 0"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|path
operator|<<
name|QRect
argument_list|(
literal|15
argument_list|,
literal|15
argument_list|,
literal|49
argument_list|,
literal|49
argument_list|)
operator|<<
name|QBrush
argument_list|(
name|Qt
operator|::
name|NoBrush
argument_list|)
operator|<<
name|QPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"round rect 1"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|path
operator|<<
name|QRect
argument_list|(
literal|15
argument_list|,
literal|15
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
name|QBrush
argument_list|(
name|Qt
operator|::
name|NoBrush
argument_list|)
operator|<<
name|QPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"round rect 2"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|path
operator|<<
name|QRect
argument_list|(
literal|15
argument_list|,
literal|15
argument_list|,
literal|51
argument_list|,
literal|51
argument_list|)
operator|<<
name|QBrush
argument_list|(
name|Qt
operator|::
name|NoBrush
argument_list|)
operator|<<
name|QPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"round rect 3"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|path
operator|<<
name|QRect
argument_list|(
literal|15
argument_list|,
literal|15
argument_list|,
literal|51
argument_list|,
literal|51
argument_list|)
operator|<<
name|QBrush
argument_list|(
name|QColor
argument_list|(
name|Qt
operator|::
name|blue
argument_list|)
argument_list|)
operator|<<
name|QPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"round rect 4"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|path
operator|<<
name|QRect
argument_list|(
literal|15
argument_list|,
literal|15
argument_list|,
literal|51
argument_list|,
literal|51
argument_list|)
operator|<<
name|QBrush
argument_list|(
name|gradient
argument_list|)
operator|<<
name|pen2
expr_stmt|;
name|path
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|path
operator|.
name|moveTo
argument_list|(
literal|15
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|path
operator|.
name|cubicTo
argument_list|(
literal|40
argument_list|,
literal|50
argument_list|,
literal|40
argument_list|,
literal|15
argument_list|,
literal|65
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
literal|15
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"cubic 0"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|path
operator|<<
name|QRect
argument_list|(
literal|15
argument_list|,
literal|15
argument_list|,
literal|49
argument_list|,
literal|49
argument_list|)
operator|<<
name|QBrush
argument_list|(
name|Qt
operator|::
name|NoBrush
argument_list|)
operator|<<
name|QPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"cubic 1"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|path
operator|<<
name|QRect
argument_list|(
literal|15
argument_list|,
literal|15
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
name|QBrush
argument_list|(
name|Qt
operator|::
name|NoBrush
argument_list|)
operator|<<
name|QPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"cubic 2"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|path
operator|<<
name|QRect
argument_list|(
literal|15
argument_list|,
literal|15
argument_list|,
literal|51
argument_list|,
literal|51
argument_list|)
operator|<<
name|QBrush
argument_list|(
name|Qt
operator|::
name|NoBrush
argument_list|)
operator|<<
name|QPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"cubic 3"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|path
operator|<<
name|QRect
argument_list|(
literal|15
argument_list|,
literal|15
argument_list|,
literal|51
argument_list|,
literal|51
argument_list|)
operator|<<
name|QBrush
argument_list|(
name|QColor
argument_list|(
name|Qt
operator|::
name|blue
argument_list|)
argument_list|)
operator|<<
name|QPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"cubic 4"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|path
operator|<<
name|QRect
argument_list|(
literal|15
argument_list|,
literal|15
argument_list|,
literal|51
argument_list|,
literal|51
argument_list|)
operator|<<
name|QBrush
argument_list|(
name|gradient
argument_list|)
operator|<<
name|pen2
expr_stmt|;
block|}
end_function
begin_function
DECL|function|clippedFillPath
name|void
name|tst_QPainter
operator|::
name|clippedFillPath
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QSize
argument_list|,
name|imageSize
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QPainterPath
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QRect
argument_list|,
name|clipRect
argument_list|)
expr_stmt|;
name|QPainterPath
name|clipPath
decl_stmt|;
name|clipPath
operator|.
name|addRect
argument_list|(
name|clipRect
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QBrush
argument_list|,
name|brush
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QPen
argument_list|,
name|pen
argument_list|)
expr_stmt|;
specifier|const
name|int
name|width
init|=
name|imageSize
operator|.
name|width
argument_list|()
decl_stmt|;
specifier|const
name|int
name|height
init|=
name|imageSize
operator|.
name|height
argument_list|()
decl_stmt|;
name|QImage
name|clippedRect
argument_list|(
name|width
argument_list|,
name|height
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|clippedRect
operator|.
name|fill
argument_list|(
literal|0x12345678
argument_list|)
expr_stmt|;
block|{
name|QPainter
name|painter
argument_list|(
operator|&
name|clippedRect
argument_list|)
decl_stmt|;
name|painter
operator|.
name|setPen
argument_list|(
name|pen
argument_list|)
expr_stmt|;
name|painter
operator|.
name|setBrush
argument_list|(
name|brush
argument_list|)
expr_stmt|;
name|painter
operator|.
name|setClipRect
argument_list|(
name|clipRect
argument_list|)
expr_stmt|;
name|painter
operator|.
name|drawPath
argument_list|(
name|path
argument_list|)
expr_stmt|;
block|}
name|QImage
name|clippedPath
argument_list|(
name|width
argument_list|,
name|height
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|clippedPath
operator|.
name|fill
argument_list|(
literal|0x12345678
argument_list|)
expr_stmt|;
block|{
name|QPainter
name|painter
argument_list|(
operator|&
name|clippedPath
argument_list|)
decl_stmt|;
name|painter
operator|.
name|setPen
argument_list|(
name|pen
argument_list|)
expr_stmt|;
name|painter
operator|.
name|setBrush
argument_list|(
name|brush
argument_list|)
expr_stmt|;
name|painter
operator|.
name|setClipPath
argument_list|(
name|clipPath
argument_list|)
expr_stmt|;
name|painter
operator|.
name|drawPath
argument_list|(
name|path
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|clippedRect
argument_list|,
name|clippedPath
argument_list|)
expr_stmt|;
comment|// repeat with antialiasing
name|clippedRect
operator|.
name|fill
argument_list|(
literal|0x12345678
argument_list|)
expr_stmt|;
block|{
name|QPainter
name|painter
argument_list|(
operator|&
name|clippedRect
argument_list|)
decl_stmt|;
name|painter
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|)
expr_stmt|;
name|painter
operator|.
name|setPen
argument_list|(
name|pen
argument_list|)
expr_stmt|;
name|painter
operator|.
name|setBrush
argument_list|(
name|brush
argument_list|)
expr_stmt|;
name|painter
operator|.
name|setClipRect
argument_list|(
name|clipRect
argument_list|)
expr_stmt|;
name|painter
operator|.
name|drawPath
argument_list|(
name|path
argument_list|)
expr_stmt|;
block|}
name|clippedPath
operator|.
name|fill
argument_list|(
literal|0x12345678
argument_list|)
expr_stmt|;
block|{
name|QPainter
name|painter
argument_list|(
operator|&
name|clippedPath
argument_list|)
decl_stmt|;
name|painter
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|)
expr_stmt|;
name|painter
operator|.
name|setPen
argument_list|(
name|pen
argument_list|)
expr_stmt|;
name|painter
operator|.
name|setBrush
argument_list|(
name|brush
argument_list|)
expr_stmt|;
name|painter
operator|.
name|setClipPath
argument_list|(
name|clipPath
argument_list|)
expr_stmt|;
name|painter
operator|.
name|drawPath
argument_list|(
name|path
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|clippedRect
argument_list|,
name|clippedPath
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|clippedLines_data
name|void
name|tst_QPainter
operator|::
name|clippedLines_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QSize
argument_list|>
argument_list|(
literal|"imageSize"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QLineF
argument_list|>
argument_list|(
literal|"line"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QRect
argument_list|>
argument_list|(
literal|"clipRect"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QPen
argument_list|>
argument_list|(
literal|"pen"
argument_list|)
expr_stmt|;
name|QPen
name|pen2
argument_list|(
name|QColor
argument_list|(
literal|223
argument_list|,
literal|223
argument_list|,
literal|0
argument_list|,
literal|223
argument_list|)
argument_list|)
decl_stmt|;
name|pen2
operator|.
name|setWidth
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|QVector
argument_list|<
name|QLineF
argument_list|>
name|lines
decl_stmt|;
name|lines
operator|<<
name|QLineF
argument_list|(
literal|15
argument_list|,
literal|15
argument_list|,
literal|65
argument_list|,
literal|65
argument_list|)
operator|<<
name|QLineF
argument_list|(
literal|14
argument_list|,
literal|14
argument_list|,
literal|66
argument_list|,
literal|66
argument_list|)
operator|<<
name|QLineF
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|,
literal|64
argument_list|,
literal|64
argument_list|)
operator|<<
name|QLineF
argument_list|(
literal|65
argument_list|,
literal|65
argument_list|,
literal|15
argument_list|,
literal|15
argument_list|)
operator|<<
name|QLineF
argument_list|(
literal|66
argument_list|,
literal|66
argument_list|,
literal|14
argument_list|,
literal|14
argument_list|)
operator|<<
name|QLineF
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|,
literal|14
argument_list|,
literal|14
argument_list|)
operator|<<
name|QLineF
argument_list|(
literal|15
argument_list|,
literal|50
argument_list|,
literal|15
argument_list|,
literal|64
argument_list|)
operator|<<
name|QLineF
argument_list|(
literal|15
argument_list|,
literal|50
argument_list|,
literal|15
argument_list|,
literal|65
argument_list|)
operator|<<
name|QLineF
argument_list|(
literal|15
argument_list|,
literal|50
argument_list|,
literal|15
argument_list|,
literal|66
argument_list|)
operator|<<
name|QLineF
argument_list|(
literal|15
argument_list|,
literal|50
argument_list|,
literal|64
argument_list|,
literal|50
argument_list|)
operator|<<
name|QLineF
argument_list|(
literal|15
argument_list|,
literal|50
argument_list|,
literal|65
argument_list|,
literal|50
argument_list|)
operator|<<
name|QLineF
argument_list|(
literal|15
argument_list|,
literal|50
argument_list|,
literal|66
argument_list|,
literal|50
argument_list|)
expr_stmt|;
foreach|foreach
control|(
name|QLineF
name|line
decl|,
name|lines
control|)
block|{
name|QString
name|desc
init|=
name|QString
argument_list|(
literal|"line (%1, %2, %3, %4) %5"
argument_list|)
operator|.
name|arg
argument_list|(
name|line
operator|.
name|x1
argument_list|()
argument_list|)
operator|.
name|arg
argument_list|(
name|line
operator|.
name|y1
argument_list|()
argument_list|)
operator|.
name|arg
argument_list|(
name|line
operator|.
name|x2
argument_list|()
argument_list|)
operator|.
name|arg
argument_list|(
name|line
operator|.
name|y2
argument_list|()
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|qPrintable
argument_list|(
name|desc
operator|.
name|arg
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|line
operator|<<
name|QRect
argument_list|(
literal|15
argument_list|,
literal|15
argument_list|,
literal|49
argument_list|,
literal|49
argument_list|)
operator|<<
name|QPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|qPrintable
argument_list|(
name|desc
operator|.
name|arg
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|line
operator|<<
name|QRect
argument_list|(
literal|15
argument_list|,
literal|15
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
name|QPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|qPrintable
argument_list|(
name|desc
operator|.
name|arg
argument_list|(
literal|2
argument_list|)
argument_list|)
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|line
operator|<<
name|QRect
argument_list|(
literal|15
argument_list|,
literal|15
argument_list|,
literal|51
argument_list|,
literal|51
argument_list|)
operator|<<
name|QPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|qPrintable
argument_list|(
name|desc
operator|.
name|arg
argument_list|(
literal|3
argument_list|)
argument_list|)
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|line
operator|<<
name|QRect
argument_list|(
literal|15
argument_list|,
literal|15
argument_list|,
literal|51
argument_list|,
literal|51
argument_list|)
operator|<<
name|QPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|qPrintable
argument_list|(
name|desc
operator|.
name|arg
argument_list|(
literal|4
argument_list|)
argument_list|)
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|line
operator|<<
name|QRect
argument_list|(
literal|15
argument_list|,
literal|15
argument_list|,
literal|51
argument_list|,
literal|51
argument_list|)
operator|<<
name|pen2
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|clippedLines
name|void
name|tst_QPainter
operator|::
name|clippedLines
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QSize
argument_list|,
name|imageSize
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QLineF
argument_list|,
name|line
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QRect
argument_list|,
name|clipRect
argument_list|)
expr_stmt|;
name|QPainterPath
name|clipPath
decl_stmt|;
name|clipPath
operator|.
name|addRect
argument_list|(
name|clipRect
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QPen
argument_list|,
name|pen
argument_list|)
expr_stmt|;
specifier|const
name|int
name|width
init|=
name|imageSize
operator|.
name|width
argument_list|()
decl_stmt|;
specifier|const
name|int
name|height
init|=
name|imageSize
operator|.
name|height
argument_list|()
decl_stmt|;
name|QImage
name|clippedRect
argument_list|(
name|width
argument_list|,
name|height
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|clippedRect
operator|.
name|fill
argument_list|(
literal|0x12345678
argument_list|)
expr_stmt|;
block|{
name|QPainter
name|painter
argument_list|(
operator|&
name|clippedRect
argument_list|)
decl_stmt|;
name|painter
operator|.
name|setPen
argument_list|(
name|pen
argument_list|)
expr_stmt|;
name|painter
operator|.
name|setClipRect
argument_list|(
name|clipRect
argument_list|)
expr_stmt|;
name|painter
operator|.
name|drawLine
argument_list|(
name|line
argument_list|)
expr_stmt|;
name|painter
operator|.
name|drawLine
argument_list|(
name|line
operator|.
name|toLine
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|QImage
name|clippedPath
argument_list|(
name|width
argument_list|,
name|height
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|clippedPath
operator|.
name|fill
argument_list|(
literal|0x12345678
argument_list|)
expr_stmt|;
block|{
name|QPainter
name|painter
argument_list|(
operator|&
name|clippedPath
argument_list|)
decl_stmt|;
name|painter
operator|.
name|setPen
argument_list|(
name|pen
argument_list|)
expr_stmt|;
name|painter
operator|.
name|setClipPath
argument_list|(
name|clipPath
argument_list|)
expr_stmt|;
name|painter
operator|.
name|drawLine
argument_list|(
name|line
argument_list|)
expr_stmt|;
name|painter
operator|.
name|drawLine
argument_list|(
name|line
operator|.
name|toLine
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|clippedRect
argument_list|,
name|clippedPath
argument_list|)
expr_stmt|;
comment|// repeat with antialiasing
name|clippedRect
operator|.
name|fill
argument_list|(
literal|0x12345678
argument_list|)
expr_stmt|;
block|{
name|QPainter
name|painter
argument_list|(
operator|&
name|clippedRect
argument_list|)
decl_stmt|;
name|painter
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|)
expr_stmt|;
name|painter
operator|.
name|setPen
argument_list|(
name|pen
argument_list|)
expr_stmt|;
name|painter
operator|.
name|setClipRect
argument_list|(
name|clipRect
argument_list|)
expr_stmt|;
name|painter
operator|.
name|drawLine
argument_list|(
name|line
argument_list|)
expr_stmt|;
name|painter
operator|.
name|drawLine
argument_list|(
name|line
operator|.
name|toLine
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|clippedPath
operator|.
name|fill
argument_list|(
literal|0x12345678
argument_list|)
expr_stmt|;
block|{
name|QPainter
name|painter
argument_list|(
operator|&
name|clippedPath
argument_list|)
decl_stmt|;
name|painter
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|)
expr_stmt|;
name|painter
operator|.
name|setPen
argument_list|(
name|pen
argument_list|)
expr_stmt|;
name|painter
operator|.
name|setClipPath
argument_list|(
name|clipPath
argument_list|)
expr_stmt|;
name|painter
operator|.
name|drawLine
argument_list|(
name|line
argument_list|)
expr_stmt|;
name|painter
operator|.
name|drawLine
argument_list|(
name|line
operator|.
name|toLine
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|clippedRect
argument_list|,
name|clippedPath
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|clippedPolygon_data
name|void
name|tst_QPainter
operator|::
name|clippedPolygon_data
parameter_list|()
block|{
name|clippedFillPath_data
argument_list|()
expr_stmt|;
block|}
end_function
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_function
DECL|function|clippedPolygon
name|void
name|tst_QPainter
operator|::
name|clippedPolygon
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QSize
argument_list|,
name|imageSize
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QPainterPath
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|QPolygonF
name|polygon
init|=
name|path
operator|.
name|toFillPolygon
argument_list|()
decl_stmt|;
name|QFETCH
argument_list|(
name|QRect
argument_list|,
name|clipRect
argument_list|)
expr_stmt|;
name|QPainterPath
name|clipPath
decl_stmt|;
name|clipPath
operator|.
name|addRect
argument_list|(
name|clipRect
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QPen
argument_list|,
name|pen
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QBrush
argument_list|,
name|brush
argument_list|)
expr_stmt|;
specifier|const
name|int
name|width
init|=
name|imageSize
operator|.
name|width
argument_list|()
decl_stmt|;
specifier|const
name|int
name|height
init|=
name|imageSize
operator|.
name|height
argument_list|()
decl_stmt|;
name|QImage
name|clippedRect
argument_list|(
name|width
argument_list|,
name|height
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|clippedRect
operator|.
name|fill
argument_list|(
literal|0x12345678
argument_list|)
expr_stmt|;
block|{
name|QPainter
name|painter
argument_list|(
operator|&
name|clippedRect
argument_list|)
decl_stmt|;
name|painter
operator|.
name|setPen
argument_list|(
name|pen
argument_list|)
expr_stmt|;
name|painter
operator|.
name|setBrush
argument_list|(
name|brush
argument_list|)
expr_stmt|;
name|painter
operator|.
name|setClipRect
argument_list|(
name|clipRect
argument_list|)
expr_stmt|;
name|painter
operator|.
name|drawPolygon
argument_list|(
name|polygon
argument_list|)
expr_stmt|;
name|painter
operator|.
name|drawPolygon
argument_list|(
name|polygon
operator|.
name|toPolygon
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|QImage
name|clippedPath
argument_list|(
name|width
argument_list|,
name|height
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|clippedPath
operator|.
name|fill
argument_list|(
literal|0x12345678
argument_list|)
expr_stmt|;
block|{
name|QPainter
name|painter
argument_list|(
operator|&
name|clippedPath
argument_list|)
decl_stmt|;
name|painter
operator|.
name|setPen
argument_list|(
name|pen
argument_list|)
expr_stmt|;
name|painter
operator|.
name|setBrush
argument_list|(
name|brush
argument_list|)
expr_stmt|;
name|painter
operator|.
name|setClipRect
argument_list|(
name|clipRect
argument_list|)
expr_stmt|;
name|painter
operator|.
name|drawPolygon
argument_list|(
name|polygon
argument_list|)
expr_stmt|;
name|painter
operator|.
name|drawPolygon
argument_list|(
name|polygon
operator|.
name|toPolygon
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|clippedRect
argument_list|,
name|clippedPath
argument_list|)
expr_stmt|;
comment|// repeat with antialiasing
name|clippedRect
operator|.
name|fill
argument_list|(
literal|0x12345678
argument_list|)
expr_stmt|;
block|{
name|QPainter
name|painter
argument_list|(
operator|&
name|clippedRect
argument_list|)
decl_stmt|;
name|painter
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|)
expr_stmt|;
name|painter
operator|.
name|setPen
argument_list|(
name|pen
argument_list|)
expr_stmt|;
name|painter
operator|.
name|setBrush
argument_list|(
name|brush
argument_list|)
expr_stmt|;
name|painter
operator|.
name|setClipRect
argument_list|(
name|clipRect
argument_list|)
expr_stmt|;
name|painter
operator|.
name|drawPolygon
argument_list|(
name|polygon
argument_list|)
expr_stmt|;
name|painter
operator|.
name|drawPolygon
argument_list|(
name|polygon
operator|.
name|toPolygon
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|clippedPath
operator|.
name|fill
argument_list|(
literal|0x12345678
argument_list|)
expr_stmt|;
block|{
name|QPainter
name|painter
argument_list|(
operator|&
name|clippedPath
argument_list|)
decl_stmt|;
name|painter
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|)
expr_stmt|;
name|painter
operator|.
name|setPen
argument_list|(
name|pen
argument_list|)
expr_stmt|;
name|painter
operator|.
name|setBrush
argument_list|(
name|brush
argument_list|)
expr_stmt|;
name|painter
operator|.
name|setClipRect
argument_list|(
name|clipRect
argument_list|)
expr_stmt|;
name|painter
operator|.
name|drawPolygon
argument_list|(
name|polygon
argument_list|)
expr_stmt|;
name|painter
operator|.
name|drawPolygon
argument_list|(
name|polygon
operator|.
name|toPolygon
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|clippedRect
argument_list|,
name|clippedPath
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|// this just draws some text that should be clipped in the raster
end_comment
begin_comment
comment|// paint engine.
end_comment
begin_function
DECL|function|clippedText
name|void
name|tst_QPainter
operator|::
name|clippedText
parameter_list|()
block|{
for|for
control|(
name|char
name|ch
init|=
literal|'A'
init|;
name|ch
operator|<
literal|'Z'
condition|;
operator|++
name|ch
control|)
block|{
comment|//qDebug()<< ch;
name|QFont
name|f
decl_stmt|;
name|f
operator|.
name|setPixelSize
argument_list|(
literal|24
argument_list|)
expr_stmt|;
name|QFontMetrics
name|metrics
argument_list|(
name|f
argument_list|)
decl_stmt|;
name|QRect
name|textRect
init|=
name|metrics
operator|.
name|boundingRect
argument_list|(
name|QChar
argument_list|(
name|ch
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|textRect
operator|.
name|width
argument_list|()
operator|<=
literal|8
condition|)
continue|continue;
if|if
condition|(
name|textRect
operator|.
name|height
argument_list|()
operator|<=
literal|8
condition|)
continue|continue;
name|QRect
name|imageRect
init|=
name|textRect
operator|.
name|adjusted
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|,
operator|-
literal|4
argument_list|,
operator|-
literal|4
argument_list|)
decl_stmt|;
name|QImage
name|image
argument_list|(
name|imageRect
operator|.
name|size
argument_list|()
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|image
operator|.
name|fill
argument_list|(
name|qRgba
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|)
argument_list|)
expr_stmt|;
block|{
name|QPainter
name|painter
argument_list|(
operator|&
name|image
argument_list|)
decl_stmt|;
name|painter
operator|.
name|setFont
argument_list|(
name|f
argument_list|)
expr_stmt|;
name|painter
operator|.
name|setPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|painter
operator|.
name|drawText
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QChar
argument_list|(
name|ch
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|image
operator|.
name|fill
argument_list|(
name|qRgba
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|)
argument_list|)
expr_stmt|;
block|{
name|QPainter
name|painter
argument_list|(
operator|&
name|image
argument_list|)
decl_stmt|;
name|painter
operator|.
name|setFont
argument_list|(
name|f
argument_list|)
expr_stmt|;
name|painter
operator|.
name|setPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|painter
operator|.
name|drawText
argument_list|(
operator|-
name|imageRect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|QChar
argument_list|(
name|ch
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|bool
name|foundPixel
init|=
literal|false
decl_stmt|;
for|for
control|(
name|int
name|x
init|=
literal|0
init|;
name|x
operator|<
name|image
operator|.
name|width
argument_list|()
condition|;
operator|++
name|x
control|)
for|for
control|(
name|int
name|y
init|=
literal|0
init|;
name|y
operator|<
name|image
operator|.
name|height
argument_list|()
condition|;
operator|++
name|y
control|)
if|if
condition|(
name|image
operator|.
name|pixel
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
operator|!=
literal|0
condition|)
name|foundPixel
operator|=
literal|true
expr_stmt|;
comment|// can't QVERIFY(foundPixel) as sometimes all pixels are clipped
comment|// away. For example for 'O'
comment|// just call /some/ function to prevent the compiler from optimizing
comment|// foundPixel away
name|QString
operator|::
name|number
argument_list|(
name|foundPixel
argument_list|)
expr_stmt|;
comment|//image.save(QString("debug") + ch + ".xpm");
block|}
name|QVERIFY
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|// reached, don't trigger any valgrind errors
block|}
end_function
begin_function
DECL|function|setOpacity_data
name|void
name|tst_QPainter
operator|::
name|setOpacity_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QImage
operator|::
name|Format
argument_list|>
argument_list|(
literal|"destFormat"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QImage
operator|::
name|Format
argument_list|>
argument_list|(
literal|"srcFormat"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ARGB32P on ARGB32P"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
operator|<<
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ARGB32 on ARGB32"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_ARGB32
operator|<<
name|QImage
operator|::
name|Format_ARGB32
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"RGB32 on RGB32"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB32
operator|<<
name|QImage
operator|::
name|Format_RGB32
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"RGB16 on RGB16"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB16
operator|<<
name|QImage
operator|::
name|Format_RGB16
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ARGB8565_Premultiplied on ARGB8565_Premultiplied"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_ARGB8565_Premultiplied
operator|<<
name|QImage
operator|::
name|Format_ARGB8565_Premultiplied
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"RGB555 on RGB555"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB555
operator|<<
name|QImage
operator|::
name|Format_RGB555
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"RGB666 on RGB666"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB666
operator|<<
name|QImage
operator|::
name|Format_RGB666
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ARGB8555_Premultiplied on ARGB8555_Premultiplied"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_ARGB8555_Premultiplied
operator|<<
name|QImage
operator|::
name|Format_ARGB8555_Premultiplied
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"RGB888 on RGB888"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB888
operator|<<
name|QImage
operator|::
name|Format_RGB888
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"RGB32 on RGB16"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB16
operator|<<
name|QImage
operator|::
name|Format_RGB32
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"RGB32 on ARGB8565_Premultiplied"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_ARGB8565_Premultiplied
operator|<<
name|QImage
operator|::
name|Format_RGB32
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"RGB32 on RGB666"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB666
operator|<<
name|QImage
operator|::
name|Format_RGB32
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"RGB32 on RGB555"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB555
operator|<<
name|QImage
operator|::
name|Format_RGB32
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"RGB32 on ARGB8555_Premultiplied"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_ARGB8555_Premultiplied
operator|<<
name|QImage
operator|::
name|Format_RGB32
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"RGB32 on RGB888"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB888
operator|<<
name|QImage
operator|::
name|Format_RGB32
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"RGB16 on RGB32"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB32
operator|<<
name|QImage
operator|::
name|Format_RGB16
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ARGB8565_Premultiplied on RGB32"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB32
operator|<<
name|QImage
operator|::
name|Format_ARGB8565_Premultiplied
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"RGB666 on RGB32"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB32
operator|<<
name|QImage
operator|::
name|Format_RGB666
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"RGB555 on RGB32"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB32
operator|<<
name|QImage
operator|::
name|Format_RGB555
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ARGB8555_Premultiplied on RGB32"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB32
operator|<<
name|QImage
operator|::
name|Format_ARGB8555_Premultiplied
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"RGB888 on RGB32"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB32
operator|<<
name|QImage
operator|::
name|Format_RGB888
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"RGB555 on RGB888"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB888
operator|<<
name|QImage
operator|::
name|Format_RGB555
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"RGB666 on RGB888"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB888
operator|<<
name|QImage
operator|::
name|Format_RGB666
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"RGB444 on RGB444"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB444
operator|<<
name|QImage
operator|::
name|Format_RGB444
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"RGBA8888P on RGBA8888P"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGBA8888_Premultiplied
operator|<<
name|QImage
operator|::
name|Format_RGBA8888_Premultiplied
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"RGBA8888 on RGBA8888"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGBA8888
operator|<<
name|QImage
operator|::
name|Format_RGBA8888
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"RGBx8888 on RGBx8888"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGBX8888
operator|<<
name|QImage
operator|::
name|Format_RGBX8888
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"RGBA8888P on ARGB32P"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGBA8888_Premultiplied
operator|<<
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"RGBx8888 on ARGB32P"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGBX8888
operator|<<
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ARGB32P on RGBA8888P"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
operator|<<
name|QImage
operator|::
name|Format_RGBA8888_Premultiplied
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"RGB32 on RGBx8888"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB32
operator|<<
name|QImage
operator|::
name|Format_RGBX8888
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setOpacity
name|void
name|tst_QPainter
operator|::
name|setOpacity
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QImage
operator|::
name|Format
argument_list|,
name|destFormat
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QImage
operator|::
name|Format
argument_list|,
name|srcFormat
argument_list|)
expr_stmt|;
specifier|const
name|QSize
name|imageSize
argument_list|(
literal|12
argument_list|,
literal|12
argument_list|)
decl_stmt|;
specifier|const
name|QRect
name|imageRect
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|imageSize
argument_list|)
decl_stmt|;
name|QColor
name|destColor
init|=
name|Qt
operator|::
name|black
decl_stmt|;
name|QColor
name|srcColor
init|=
name|Qt
operator|::
name|white
decl_stmt|;
name|QImage
name|dest
argument_list|(
name|imageSize
argument_list|,
name|destFormat
argument_list|)
decl_stmt|;
name|QImage
name|src
argument_list|(
name|imageSize
argument_list|,
name|srcFormat
argument_list|)
decl_stmt|;
name|QPainter
name|p
decl_stmt|;
name|p
operator|.
name|begin
argument_list|(
operator|&
name|dest
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
name|imageRect
argument_list|,
name|destColor
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|p
operator|.
name|begin
argument_list|(
operator|&
name|src
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
name|imageRect
argument_list|,
name|srcColor
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|p
operator|.
name|begin
argument_list|(
operator|&
name|dest
argument_list|)
expr_stmt|;
name|p
operator|.
name|setOpacity
argument_list|(
literal|0.5
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawImage
argument_list|(
name|imageRect
argument_list|,
name|src
argument_list|,
name|imageRect
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|QImage
name|actual
init|=
name|dest
operator|.
name|convertToFormat
argument_list|(
name|QImage
operator|::
name|Format_RGB32
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|y
init|=
literal|0
init|;
name|y
operator|<
name|actual
operator|.
name|height
argument_list|()
condition|;
operator|++
name|y
control|)
block|{
name|QRgb
modifier|*
name|p
init|=
operator|(
name|QRgb
operator|*
operator|)
name|actual
operator|.
name|scanLine
argument_list|(
name|y
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|x
init|=
literal|0
init|;
name|x
operator|<
name|actual
operator|.
name|width
argument_list|()
condition|;
operator|++
name|x
control|)
block|{
name|QVERIFY
argument_list|(
name|qAbs
argument_list|(
name|qRed
argument_list|(
name|p
index|[
name|x
index|]
argument_list|)
operator|-
literal|127
argument_list|)
operator|<=
literal|0xf
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|qAbs
argument_list|(
name|qGreen
argument_list|(
name|p
index|[
name|x
index|]
argument_list|)
operator|-
literal|127
argument_list|)
operator|<=
literal|0xf
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|qAbs
argument_list|(
name|qBlue
argument_list|(
name|p
index|[
name|x
index|]
argument_list|)
operator|-
literal|127
argument_list|)
operator|<=
literal|0xf
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_function
begin_function
DECL|function|drawhelper_blend_untransformed_data
name|void
name|tst_QPainter
operator|::
name|drawhelper_blend_untransformed_data
parameter_list|()
block|{
name|setOpacity_data
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|drawhelper_blend_untransformed
name|void
name|tst_QPainter
operator|::
name|drawhelper_blend_untransformed
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QImage
operator|::
name|Format
argument_list|,
name|destFormat
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QImage
operator|::
name|Format
argument_list|,
name|srcFormat
argument_list|)
expr_stmt|;
specifier|const
name|int
name|size
init|=
literal|128
decl_stmt|;
specifier|const
name|QSize
name|imageSize
argument_list|(
name|size
argument_list|,
name|size
argument_list|)
decl_stmt|;
specifier|const
name|QRect
name|paintRect
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
name|size
operator|-
literal|2
argument_list|,
name|size
argument_list|)
decl_stmt|;
comment|// needs alignment and tailing
name|QColor
name|destColor
argument_list|(
literal|127
argument_list|,
literal|127
argument_list|,
literal|127
argument_list|)
decl_stmt|;
name|QColor
name|srcColor
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
decl_stmt|;
name|QImage
name|dest
argument_list|(
name|imageSize
argument_list|,
name|destFormat
argument_list|)
decl_stmt|;
name|QImage
name|src
argument_list|(
name|imageSize
argument_list|,
name|srcFormat
argument_list|)
decl_stmt|;
name|QPainter
name|p
decl_stmt|;
name|p
operator|.
name|begin
argument_list|(
operator|&
name|src
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
name|paintRect
argument_list|,
name|srcColor
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|QList
argument_list|<
name|qreal
argument_list|>
name|opacities
init|=
operator|(
name|QList
argument_list|<
name|qreal
argument_list|>
argument_list|()
operator|<<
literal|0.0
operator|<<
literal|0.1
operator|<<
literal|0.01
operator|<<
literal|0.4
operator|<<
literal|0.5
operator|<<
literal|0.6
operator|<<
literal|0.9
operator|<<
literal|1.0
operator|)
decl_stmt|;
foreach|foreach
control|(
name|qreal
name|opacity
decl|,
name|opacities
control|)
block|{
name|p
operator|.
name|begin
argument_list|(
operator|&
name|dest
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
name|paintRect
argument_list|,
name|destColor
argument_list|)
expr_stmt|;
name|p
operator|.
name|setOpacity
argument_list|(
name|opacity
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawImage
argument_list|(
name|paintRect
argument_list|,
name|src
argument_list|,
name|paintRect
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
comment|// sanity check: make sure all pixels are equal
name|QImage
name|expected
argument_list|(
name|size
operator|-
literal|2
argument_list|,
name|size
argument_list|,
name|destFormat
argument_list|)
decl_stmt|;
name|p
operator|.
name|begin
argument_list|(
operator|&
name|expected
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|expected
operator|.
name|width
argument_list|()
argument_list|,
name|expected
operator|.
name|height
argument_list|()
argument_list|,
name|QColor
argument_list|(
name|dest
operator|.
name|pixel
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
specifier|const
name|QImage
name|subDest
argument_list|(
name|dest
operator|.
name|bits
argument_list|()
operator|+
name|dest
operator|.
name|depth
argument_list|()
operator|/
literal|8
argument_list|,
name|dest
operator|.
name|width
argument_list|()
operator|-
literal|2
argument_list|,
name|dest
operator|.
name|height
argument_list|()
argument_list|,
name|dest
operator|.
name|bytesPerLine
argument_list|()
argument_list|,
name|dest
operator|.
name|format
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|dest
operator|.
name|format
argument_list|()
operator|==
name|QImage
operator|::
name|Format_ARGB8565_Premultiplied
operator|||
name|dest
operator|.
name|format
argument_list|()
operator|==
name|QImage
operator|::
name|Format_ARGB8555_Premultiplied
condition|)
block|{
comment|// Test skipped due to rounding errors...
continue|continue;
block|}
name|QCOMPARE
argument_list|(
name|subDest
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|drawhelper_blend_tiled_untransformed_data
name|void
name|tst_QPainter
operator|::
name|drawhelper_blend_tiled_untransformed_data
parameter_list|()
block|{
name|setOpacity_data
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|drawhelper_blend_tiled_untransformed
name|void
name|tst_QPainter
operator|::
name|drawhelper_blend_tiled_untransformed
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QImage
operator|::
name|Format
argument_list|,
name|destFormat
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QImage
operator|::
name|Format
argument_list|,
name|srcFormat
argument_list|)
expr_stmt|;
specifier|const
name|int
name|size
init|=
literal|128
decl_stmt|;
specifier|const
name|QSize
name|imageSize
argument_list|(
name|size
argument_list|,
name|size
argument_list|)
decl_stmt|;
specifier|const
name|QRect
name|paintRect
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
name|size
operator|-
literal|2
argument_list|,
name|size
argument_list|)
decl_stmt|;
comment|// needs alignment and tailing
name|QColor
name|destColor
argument_list|(
literal|127
argument_list|,
literal|127
argument_list|,
literal|127
argument_list|)
decl_stmt|;
name|QColor
name|srcColor
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
decl_stmt|;
name|QImage
name|dest
argument_list|(
name|imageSize
argument_list|,
name|destFormat
argument_list|)
decl_stmt|;
name|QImage
name|src
argument_list|(
name|imageSize
operator|/
literal|2
argument_list|,
name|srcFormat
argument_list|)
decl_stmt|;
name|QPainter
name|p
decl_stmt|;
name|p
operator|.
name|begin
argument_list|(
operator|&
name|src
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
name|QRect
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|imageSize
operator|/
literal|2
argument_list|)
argument_list|,
name|srcColor
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
specifier|const
name|QBrush
name|brush
argument_list|(
name|src
argument_list|)
decl_stmt|;
name|QList
argument_list|<
name|qreal
argument_list|>
name|opacities
init|=
operator|(
name|QList
argument_list|<
name|qreal
argument_list|>
argument_list|()
operator|<<
literal|0.0
operator|<<
literal|0.1
operator|<<
literal|0.01
operator|<<
literal|0.4
operator|<<
literal|0.5
operator|<<
literal|0.6
operator|<<
literal|0.9
operator|<<
literal|1.0
operator|)
decl_stmt|;
foreach|foreach
control|(
name|qreal
name|opacity
decl|,
name|opacities
control|)
block|{
name|p
operator|.
name|begin
argument_list|(
operator|&
name|dest
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
name|paintRect
argument_list|,
name|destColor
argument_list|)
expr_stmt|;
name|p
operator|.
name|setOpacity
argument_list|(
name|opacity
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
name|paintRect
argument_list|,
name|brush
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
comment|// sanity check: make sure all pixels are equal
name|QImage
name|expected
argument_list|(
name|size
operator|-
literal|2
argument_list|,
name|size
argument_list|,
name|destFormat
argument_list|)
decl_stmt|;
name|p
operator|.
name|begin
argument_list|(
operator|&
name|expected
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|expected
operator|.
name|width
argument_list|()
argument_list|,
name|expected
operator|.
name|height
argument_list|()
argument_list|,
name|QColor
argument_list|(
name|dest
operator|.
name|pixel
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
specifier|const
name|QImage
name|subDest
argument_list|(
name|dest
operator|.
name|bits
argument_list|()
operator|+
name|dest
operator|.
name|depth
argument_list|()
operator|/
literal|8
argument_list|,
name|dest
operator|.
name|width
argument_list|()
operator|-
literal|2
argument_list|,
name|dest
operator|.
name|height
argument_list|()
argument_list|,
name|dest
operator|.
name|bytesPerLine
argument_list|()
argument_list|,
name|dest
operator|.
name|format
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|dest
operator|.
name|format
argument_list|()
operator|==
name|QImage
operator|::
name|Format_ARGB8565_Premultiplied
operator|||
name|dest
operator|.
name|format
argument_list|()
operator|==
name|QImage
operator|::
name|Format_ARGB8555_Premultiplied
condition|)
block|{
comment|// Skipping test due to rounding errors. Test needs rewrite
continue|continue;
block|}
name|QCOMPARE
argument_list|(
name|subDest
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|no_porter_duff
specifier|static
name|QPaintEngine
operator|::
name|PaintEngineFeatures
name|no_porter_duff
parameter_list|()
block|{
name|QPaintEngine
operator|::
name|PaintEngineFeatures
name|features
init|=
name|QPaintEngine
operator|::
name|AllFeatures
decl_stmt|;
return|return
name|features
operator|&
operator|~
name|QPaintEngine
operator|::
name|PorterDuff
return|;
block|}
end_function
begin_class
DECL|class|DummyPaintEngine
class|class
name|DummyPaintEngine
super|:
specifier|public
name|QPaintEngine
super|,
specifier|public
name|QPaintDevice
block|{
public|public:
DECL|function|DummyPaintEngine
name|DummyPaintEngine
parameter_list|()
member_init_list|:
name|QPaintEngine
argument_list|(
name|no_porter_duff
argument_list|()
argument_list|)
block|{}
DECL|function|begin
specifier|virtual
name|bool
name|begin
parameter_list|(
name|QPaintDevice
modifier|*
parameter_list|)
block|{
return|return
literal|true
return|;
block|}
DECL|function|end
specifier|virtual
name|bool
name|end
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
DECL|function|updateState
specifier|virtual
name|void
name|updateState
parameter_list|(
specifier|const
name|QPaintEngineState
modifier|&
parameter_list|)
block|{}
DECL|function|drawPixmap
specifier|virtual
name|void
name|drawPixmap
parameter_list|(
specifier|const
name|QRectF
modifier|&
parameter_list|,
specifier|const
name|QPixmap
modifier|&
parameter_list|,
specifier|const
name|QRectF
modifier|&
parameter_list|)
block|{}
DECL|function|type
specifier|virtual
name|Type
name|type
parameter_list|()
specifier|const
block|{
return|return
name|User
return|;
block|}
DECL|function|paintEngine
specifier|virtual
name|QPaintEngine
modifier|*
name|paintEngine
parameter_list|()
specifier|const
block|{
return|return
operator|(
name|QPaintEngine
operator|*
operator|)
name|this
return|;
block|}
DECL|function|metric
specifier|virtual
name|int
name|metric
parameter_list|(
name|PaintDeviceMetric
name|metric
parameter_list|)
specifier|const
block|{
name|Q_UNUSED
argument_list|(
name|metric
argument_list|)
expr_stmt|;
return|return
literal|0
return|;
block|}
empty_stmt|;
block|}
class|;
end_class
begin_decl_stmt
DECL|variable|success
specifier|static
name|bool
name|success
decl_stmt|;
end_decl_stmt
begin_function
DECL|function|porterDuff_warningChecker
name|void
name|porterDuff_warningChecker
parameter_list|(
name|QtMsgType
name|type
parameter_list|,
specifier|const
name|QMessageLogContext
modifier|&
parameter_list|,
specifier|const
name|QString
modifier|&
name|msg
parameter_list|)
block|{
if|if
condition|(
name|type
operator|==
name|QtWarningMsg
operator|&&
name|msg
operator|==
name|QLatin1String
argument_list|(
literal|"QPainter::setCompositionMode: PorterDuff modes not supported on device"
argument_list|)
condition|)
name|success
operator|=
literal|false
expr_stmt|;
block|}
end_function
begin_function
DECL|function|porterDuff_warning
name|void
name|tst_QPainter
operator|::
name|porterDuff_warning
parameter_list|()
block|{
name|QtMessageHandler
name|old
init|=
name|qInstallMessageHandler
argument_list|(
name|porterDuff_warningChecker
argument_list|)
decl_stmt|;
name|DummyPaintEngine
name|dummy
decl_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|dummy
argument_list|)
decl_stmt|;
name|success
operator|=
literal|true
expr_stmt|;
name|p
operator|.
name|setCompositionMode
argument_list|(
name|QPainter
operator|::
name|CompositionMode_Source
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|success
argument_list|)
expr_stmt|;
name|success
operator|=
literal|true
expr_stmt|;
name|p
operator|.
name|setCompositionMode
argument_list|(
name|QPainter
operator|::
name|CompositionMode_SourceOver
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|success
argument_list|)
expr_stmt|;
name|success
operator|=
literal|true
expr_stmt|;
name|p
operator|.
name|setCompositionMode
argument_list|(
name|QPainter
operator|::
name|CompositionMode_DestinationOver
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|success
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|qInstallMessageHandler
argument_list|(
name|old
argument_list|)
operator|==
name|porterDuff_warningChecker
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|quint24
class|class
name|quint24
block|{
public|public:
DECL|function|quint24
specifier|inline
name|quint24
parameter_list|(
name|quint32
name|v
parameter_list|)
block|{
name|data
index|[
literal|0
index|]
operator|=
name|qBlue
argument_list|(
name|v
argument_list|)
expr_stmt|;
name|data
index|[
literal|1
index|]
operator|=
name|qGreen
argument_list|(
name|v
argument_list|)
expr_stmt|;
name|data
index|[
literal|2
index|]
operator|=
name|qRed
argument_list|(
name|v
argument_list|)
expr_stmt|;
block|}
DECL|function|operator quint32
specifier|inline
name|operator
name|quint32
parameter_list|()
block|{
return|return
name|qRgb
argument_list|(
name|data
index|[
literal|2
index|]
argument_list|,
name|data
index|[
literal|1
index|]
argument_list|,
name|data
index|[
literal|0
index|]
argument_list|)
return|;
block|}
DECL|function|operator ==
specifier|inline
name|bool
name|operator
name|==
parameter_list|(
specifier|const
name|quint24
modifier|&
name|v
parameter_list|)
specifier|const
block|{
return|return
operator|(
name|data
index|[
literal|0
index|]
operator|==
name|v
operator|.
name|data
index|[
literal|0
index|]
operator|&&
name|data
index|[
literal|1
index|]
operator|==
name|v
operator|.
name|data
index|[
literal|1
index|]
operator|&&
name|data
index|[
literal|2
index|]
operator|==
name|v
operator|.
name|data
index|[
literal|2
index|]
operator|)
return|;
block|}
DECL|member|data
name|uchar
name|data
index|[
literal|3
index|]
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|drawhelper_blend_color
name|void
name|tst_QPainter
operator|::
name|drawhelper_blend_color
parameter_list|()
block|{
name|QImage
name|dest
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|,
name|QImage
operator|::
name|Format_ARGB8555_Premultiplied
argument_list|)
decl_stmt|;
name|dest
operator|.
name|fill
argument_list|(
literal|0xff000000
argument_list|)
expr_stmt|;
block|{
name|QPainter
name|p
argument_list|(
operator|&
name|dest
argument_list|)
decl_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|dest
operator|.
name|width
argument_list|()
argument_list|,
name|dest
operator|.
name|height
argument_list|()
argument_list|,
name|QColor
argument_list|(
literal|255
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|127
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QImage
name|expected
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|,
name|QImage
operator|::
name|Format_ARGB8555_Premultiplied
argument_list|)
decl_stmt|;
name|expected
operator|.
name|fill
argument_list|(
literal|0xff3c007f
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dest
operator|.
name|pixel
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|expected
operator|.
name|pixel
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dest
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
end_function
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_WIDGETS
end_ifndef
begin_class
DECL|class|ViewportTestWidget
class|class
name|ViewportTestWidget
super|:
specifier|public
name|QWidget
block|{
public|public:
DECL|function|ViewportTestWidget
name|ViewportTestWidget
parameter_list|(
name|QWidget
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QWidget
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|hasPainted
argument_list|(
literal|false
argument_list|)
block|{}
DECL|function|sizeHint
name|QSize
name|sizeHint
parameter_list|()
specifier|const
block|{
return|return
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
return|;
block|}
DECL|member|viewport
name|QRect
name|viewport
decl_stmt|;
DECL|member|hasPainted
name|bool
name|hasPainted
decl_stmt|;
protected|protected:
DECL|function|paintEvent
name|void
name|paintEvent
parameter_list|(
name|QPaintEvent
modifier|*
parameter_list|)
block|{
name|hasPainted
operator|=
literal|true
expr_stmt|;
name|QPainter
name|p
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|viewport
operator|=
name|p
operator|.
name|viewport
argument_list|()
expr_stmt|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|childWidgetViewport
name|void
name|tst_QPainter
operator|::
name|childWidgetViewport
parameter_list|()
block|{
name|QWidget
name|parent
decl_stmt|;
name|parent
operator|.
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|parent
operator|.
name|resize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|ViewportTestWidget
name|child
argument_list|(
operator|&
name|parent
argument_list|)
decl_stmt|;
name|child
operator|.
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|parent
operator|.
name|show
argument_list|()
expr_stmt|;
name|parent
operator|.
name|update
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
if|if
condition|(
name|child
operator|.
name|hasPainted
condition|)
block|{
name|QCOMPARE
argument_list|(
name|child
operator|.
name|viewport
argument_list|,
name|QRect
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|child
operator|.
name|sizeHint
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|qWarning
argument_list|(
literal|"Failed to ensure that paintEvent has been run. Could not run test."
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_function
DECL|function|fillRect_objectBoundingModeGradient
name|void
name|tst_QPainter
operator|::
name|fillRect_objectBoundingModeGradient
parameter_list|()
block|{
name|QImage
name|a
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|a
operator|.
name|fill
argument_list|(
literal|0x0
argument_list|)
expr_stmt|;
name|QImage
name|b
init|=
name|a
decl_stmt|;
name|QLinearGradient
name|g
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|g
operator|.
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|g
operator|.
name|setColorAt
argument_list|(
literal|1
argument_list|,
name|Qt
operator|::
name|blue
argument_list|)
expr_stmt|;
name|g
operator|.
name|setCoordinateMode
argument_list|(
name|QGradient
operator|::
name|ObjectBoundingMode
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|a
argument_list|)
decl_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|a
operator|.
name|width
argument_list|()
argument_list|,
name|a
operator|.
name|height
argument_list|()
argument_list|)
argument_list|,
name|g
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|QPainterPath
name|path
decl_stmt|;
name|path
operator|.
name|addRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|a
operator|.
name|width
argument_list|()
argument_list|,
name|a
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|.
name|begin
argument_list|(
operator|&
name|b
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillPath
argument_list|(
name|path
argument_list|,
name|g
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a
argument_list|,
name|b
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|fillRect_stretchToDeviceMode
name|void
name|tst_QPainter
operator|::
name|fillRect_stretchToDeviceMode
parameter_list|()
block|{
name|QImage
name|img
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|QLinearGradient
name|g
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|g
operator|.
name|setCoordinateMode
argument_list|(
name|QGradient
operator|::
name|StretchToDeviceMode
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|img
argument_list|)
decl_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
name|img
operator|.
name|rect
argument_list|()
argument_list|,
name|g
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
name|img
operator|.
name|height
argument_list|()
condition|;
operator|++
name|i
control|)
name|QVERIFY
argument_list|(
name|img
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
name|i
argument_list|)
operator|!=
name|img
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
name|i
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|monoImages
name|void
name|tst_QPainter
operator|::
name|monoImages
parameter_list|()
block|{
name|Qt
operator|::
name|GlobalColor
name|colorPairs
index|[]
index|[
literal|2
index|]
init|=
block|{
block|{
name|Qt
operator|::
name|white
block|,
name|Qt
operator|::
name|black
block|}
block|,
block|{
name|Qt
operator|::
name|color0
block|,
name|Qt
operator|::
name|color1
block|}
block|,
block|{
name|Qt
operator|::
name|red
block|,
name|Qt
operator|::
name|blue
block|}
block|}
decl_stmt|;
specifier|const
name|int
name|numColorPairs
init|=
sizeof|sizeof
argument_list|(
name|colorPairs
argument_list|)
operator|/
sizeof|sizeof
argument_list|(
name|QRgb
index|[
literal|2
index|]
argument_list|)
decl_stmt|;
name|QImage
name|transparent
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|transparent
operator|.
name|fill
argument_list|(
literal|0x0
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
name|QImage
operator|::
name|NImageFormats
condition|;
operator|++
name|i
control|)
block|{
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|numColorPairs
condition|;
operator|++
name|j
control|)
block|{
specifier|const
name|QImage
operator|::
name|Format
name|format
init|=
name|QImage
operator|::
name|Format
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|format
operator|==
name|QImage
operator|::
name|Format_Indexed8
condition|)
continue|continue;
name|QImage
name|img
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
name|format
argument_list|)
decl_stmt|;
if|if
condition|(
name|img
operator|.
name|colorCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|img
operator|.
name|setColor
argument_list|(
literal|0
argument_list|,
name|QColor
argument_list|(
name|colorPairs
index|[
name|j
index|]
index|[
literal|0
index|]
argument_list|)
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
name|img
operator|.
name|setColor
argument_list|(
literal|1
argument_list|,
name|QColor
argument_list|(
name|colorPairs
index|[
name|j
index|]
index|[
literal|1
index|]
argument_list|)
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|img
operator|.
name|fill
argument_list|(
literal|0x0
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|img
argument_list|)
decl_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|,
name|colorPairs
index|[
name|j
index|]
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|colorPairs
index|[
name|j
index|]
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
name|colorPairs
index|[
name|j
index|]
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|QImage
name|original
init|=
name|img
decl_stmt|;
name|p
operator|.
name|begin
argument_list|(
operator|&
name|img
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawImage
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|transparent
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
comment|// drawing a transparent image on top of another image
comment|// should not change the image
name|QCOMPARE
argument_list|(
name|original
argument_list|,
name|img
argument_list|)
expr_stmt|;
if|if
condition|(
name|img
operator|.
name|colorCount
argument_list|()
operator|==
literal|0
condition|)
continue|continue;
for|for
control|(
name|int
name|k
init|=
literal|0
init|;
name|k
operator|<
literal|2
condition|;
operator|++
name|k
control|)
block|{
name|QPainter
name|p
argument_list|(
operator|&
name|img
argument_list|)
decl_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|,
name|colorPairs
index|[
name|j
index|]
index|[
name|k
index|]
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|QImage
name|argb32p
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|p
operator|.
name|begin
argument_list|(
operator|&
name|argb32p
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|,
name|colorPairs
index|[
name|j
index|]
index|[
name|k
index|]
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|argb32p
argument_list|,
name|img
operator|.
name|convertToFormat
argument_list|(
name|argb32p
operator|.
name|format
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// drawing argb32p image on mono image
name|p
operator|.
name|begin
argument_list|(
operator|&
name|img
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawImage
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|argb32p
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|argb32p
argument_list|,
name|img
operator|.
name|convertToFormat
argument_list|(
name|argb32p
operator|.
name|format
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// drawing mono image on argb32p image
name|p
operator|.
name|begin
argument_list|(
operator|&
name|argb32p
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawImage
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|img
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|argb32p
argument_list|,
name|img
operator|.
name|convertToFormat
argument_list|(
name|argb32p
operator|.
name|format
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_function
begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|Q_OS_IRIX
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|Q_OS_AIX
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|Q_CC_MSVC
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|Q_OS_SOLARIS
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|__UCLIBC__
argument_list|)
end_if
begin_include
include|#
directive|include
file|<fenv.h>
end_include
begin_function
DECL|function|fpeExceptionString
specifier|static
specifier|const
name|QString
name|fpeExceptionString
parameter_list|(
name|int
name|exception
parameter_list|)
block|{
ifdef|#
directive|ifdef
name|FE_INEXACT
if|if
condition|(
name|exception
operator|&
name|FE_INEXACT
condition|)
return|return
name|QLatin1String
argument_list|(
literal|"Inexact result"
argument_list|)
return|;
endif|#
directive|endif
if|if
condition|(
name|exception
operator|&
name|FE_UNDERFLOW
condition|)
return|return
name|QLatin1String
argument_list|(
literal|"Underflow"
argument_list|)
return|;
if|if
condition|(
name|exception
operator|&
name|FE_OVERFLOW
condition|)
return|return
name|QLatin1String
argument_list|(
literal|"Overflow"
argument_list|)
return|;
if|if
condition|(
name|exception
operator|&
name|FE_DIVBYZERO
condition|)
return|return
name|QLatin1String
argument_list|(
literal|"Divide by zero"
argument_list|)
return|;
if|if
condition|(
name|exception
operator|&
name|FE_INVALID
condition|)
return|return
name|QLatin1String
argument_list|(
literal|"Invalid operation"
argument_list|)
return|;
return|return
name|QLatin1String
argument_list|(
literal|"No exception"
argument_list|)
return|;
block|}
end_function
begin_class
DECL|class|FpExceptionChecker
class|class
name|FpExceptionChecker
block|{
public|public:
DECL|function|FpExceptionChecker
name|FpExceptionChecker
parameter_list|(
name|int
name|exceptionMask
parameter_list|)
member_init_list|:
name|m_exceptionMask
argument_list|(
name|exceptionMask
argument_list|)
block|{
name|feclearexcept
argument_list|(
name|m_exceptionMask
argument_list|)
expr_stmt|;
block|}
DECL|function|~FpExceptionChecker
name|~
name|FpExceptionChecker
parameter_list|()
block|{
specifier|const
name|int
name|exceptions
init|=
name|fetestexcept
argument_list|(
name|m_exceptionMask
argument_list|)
decl_stmt|;
name|QVERIFY2
argument_list|(
operator|!
name|exceptions
argument_list|,
name|qPrintable
argument_list|(
name|QLatin1String
argument_list|(
literal|"Floating point exception: "
argument_list|)
operator|+
name|fpeExceptionString
argument_list|(
name|exceptions
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
private|private:
DECL|member|m_exceptionMask
name|int
name|m_exceptionMask
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|fpe_rasterizeLine_task232012
name|void
name|fpe_rasterizeLine_task232012
parameter_list|()
block|{
name|FpExceptionChecker
name|checker
argument_list|(
name|FE_UNDERFLOW
operator||
name|FE_OVERFLOW
operator||
name|FE_INVALID
operator||
name|FE_DIVBYZERO
argument_list|)
decl_stmt|;
name|QImage
name|img
argument_list|(
literal|128
argument_list|,
literal|128
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|img
operator|.
name|fill
argument_list|(
literal|0x0
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|img
argument_list|)
decl_stmt|;
name|p
operator|.
name|setBrush
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawRect
argument_list|(
name|QRectF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|5
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawRect
argument_list|(
name|QRectF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|fpe_pixmapTransform
name|void
name|fpe_pixmapTransform
parameter_list|()
block|{
name|FpExceptionChecker
name|checker
argument_list|(
name|FE_UNDERFLOW
operator||
name|FE_OVERFLOW
operator||
name|FE_INVALID
operator||
name|FE_DIVBYZERO
argument_list|)
decl_stmt|;
name|QImage
name|img
argument_list|(
literal|128
argument_list|,
literal|128
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|img
argument_list|)
decl_stmt|;
specifier|const
name|qreal
name|scaleFactor
init|=
literal|0.001
decl_stmt|;
specifier|const
name|int
name|translateDistance
init|=
literal|1000000
decl_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|p
operator|.
name|setBrush
argument_list|(
name|QBrush
argument_list|(
name|Qt
operator|::
name|red
argument_list|,
name|Qt
operator|::
name|Dense6Pattern
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
operator|++
name|i
control|)
block|{
name|p
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|SmoothPixmapTransform
argument_list|,
name|i
argument_list|)
expr_stmt|;
name|p
operator|.
name|resetTransform
argument_list|()
expr_stmt|;
name|p
operator|.
name|scale
argument_list|(
literal|1.1
argument_list|,
literal|1.1
argument_list|)
expr_stmt|;
name|p
operator|.
name|translate
argument_list|(
name|translateDistance
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawRect
argument_list|(
operator|-
name|translateDistance
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|p
operator|.
name|resetTransform
argument_list|()
expr_stmt|;
name|p
operator|.
name|scale
argument_list|(
name|scaleFactor
argument_list|,
name|scaleFactor
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawRect
argument_list|(
name|QRectF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
operator|/
name|scaleFactor
argument_list|,
literal|1
operator|/
name|scaleFactor
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|fpe_zeroLengthLines
name|void
name|fpe_zeroLengthLines
parameter_list|()
block|{
name|FpExceptionChecker
name|checker
argument_list|(
name|FE_UNDERFLOW
operator||
name|FE_OVERFLOW
operator||
name|FE_INVALID
operator||
name|FE_DIVBYZERO
argument_list|)
decl_stmt|;
name|QImage
name|img
argument_list|(
literal|128
argument_list|,
literal|128
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|img
argument_list|)
decl_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|QPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawLine
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|,
literal|64
argument_list|,
literal|64
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|fpe_divByZero
name|void
name|fpe_divByZero
parameter_list|()
block|{
name|FpExceptionChecker
name|checker
argument_list|(
name|FE_UNDERFLOW
operator||
name|FE_OVERFLOW
operator||
name|FE_INVALID
operator||
name|FE_DIVBYZERO
argument_list|)
decl_stmt|;
name|QImage
name|img
argument_list|(
literal|128
argument_list|,
literal|128
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|img
argument_list|)
decl_stmt|;
name|p
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawRect
argument_list|(
name|QRectF
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|100
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawRect
argument_list|(
name|QRectF
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawRect
argument_list|(
name|QRect
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|100
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawRect
argument_list|(
name|QRect
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
name|QRectF
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|100
argument_list|,
literal|0
argument_list|)
argument_list|,
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
name|QRectF
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|)
argument_list|,
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
name|QRect
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|100
argument_list|,
literal|0
argument_list|)
argument_list|,
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
name|QRect
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|)
argument_list|,
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|fpe_steepSlopes
name|void
name|fpe_steepSlopes
parameter_list|()
block|{
name|FpExceptionChecker
name|checker
argument_list|(
name|FE_UNDERFLOW
operator||
name|FE_OVERFLOW
operator||
name|FE_INVALID
operator||
name|FE_DIVBYZERO
argument_list|)
decl_stmt|;
name|QImage
name|img
argument_list|(
literal|1024
argument_list|,
literal|1024
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|QFETCH
argument_list|(
name|QTransform
argument_list|,
name|transform
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QLineF
argument_list|,
name|line
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|antialiased
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|img
argument_list|)
decl_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|QPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|,
name|antialiased
argument_list|)
expr_stmt|;
name|p
operator|.
name|setTransform
argument_list|(
name|transform
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawLine
argument_list|(
name|line
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|fpe_radialGradients
name|void
name|fpe_radialGradients
parameter_list|()
block|{
name|FpExceptionChecker
name|checker
argument_list|(
name|FE_UNDERFLOW
operator||
name|FE_OVERFLOW
operator||
name|FE_INVALID
operator||
name|FE_DIVBYZERO
argument_list|)
decl_stmt|;
name|QImage
name|img
argument_list|(
literal|21
argument_list|,
literal|21
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|img
operator|.
name|fill
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|double
name|m
init|=
name|img
operator|.
name|width
argument_list|()
operator|*
literal|0.5
decl_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|img
argument_list|)
decl_stmt|;
name|p
operator|.
name|setRenderHints
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|)
expr_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|p
operator|.
name|setBrush
argument_list|(
name|QRadialGradient
argument_list|(
name|m
argument_list|,
name|m
argument_list|,
name|m
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawEllipse
argument_list|(
name|img
operator|.
name|rect
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_define
DECL|macro|FPE_TEST
define|#
directive|define
name|FPE_TEST
parameter_list|(
name|x
parameter_list|)
define|\
value|void tst_QPainter::x() \ { \     ::x(); \ }
end_define
begin_else
else|#
directive|else
end_else
begin_define
DECL|macro|FPE_TEST
define|#
directive|define
name|FPE_TEST
parameter_list|(
name|x
parameter_list|)
define|\
value|void tst_QPainter::x() \ { \     QSKIP("Floating point exception checking (fenv.h) not available"); \ }
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_macro
name|FPE_TEST
argument_list|(
argument|fpe_rasterizeLine_task232012
argument_list|)
end_macro
begin_macro
name|FPE_TEST
argument_list|(
argument|fpe_pixmapTransform
argument_list|)
end_macro
begin_macro
name|FPE_TEST
argument_list|(
argument|fpe_zeroLengthLines
argument_list|)
end_macro
begin_macro
name|FPE_TEST
argument_list|(
argument|fpe_divByZero
argument_list|)
end_macro
begin_macro
name|FPE_TEST
argument_list|(
argument|fpe_steepSlopes
argument_list|)
end_macro
begin_macro
name|FPE_TEST
argument_list|(
argument|fpe_radialGradients
argument_list|)
end_macro
begin_function
DECL|function|fpe_steepSlopes_data
name|void
name|tst_QPainter
operator|::
name|fpe_steepSlopes_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QTransform
argument_list|>
argument_list|(
literal|"transform"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QLineF
argument_list|>
argument_list|(
literal|"line"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"antialiased"
argument_list|)
expr_stmt|;
block|{
specifier|const
name|qreal
name|dsin
init|=
literal|0.000014946676875461832484392500630665523431162000633776187896728515625
decl_stmt|;
specifier|const
name|qreal
name|dcos
init|=
literal|0.9999999998882984630910186751862056553363800048828125
decl_stmt|;
specifier|const
name|QTransform
name|transform
init|=
name|QTransform
argument_list|(
name|QMatrix
argument_list|(
name|dcos
argument_list|,
name|dsin
argument_list|,
operator|-
name|dsin
argument_list|,
name|dcos
argument_list|,
literal|64
argument_list|,
literal|64
argument_list|)
argument_list|)
decl_stmt|;
specifier|const
name|QLineF
name|line
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|,
literal|6
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"task 207147 aa"
argument_list|)
operator|<<
name|transform
operator|<<
name|line
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"task 207147 no aa"
argument_list|)
operator|<<
name|transform
operator|<<
name|line
operator|<<
literal|false
expr_stmt|;
block|}
block|{
name|QTransform
name|transform
decl_stmt|;
name|transform
operator|.
name|rotate
argument_list|(
literal|0.0000001
argument_list|)
expr_stmt|;
specifier|const
name|QLineF
name|line
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|,
literal|5
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"task 166702 aa"
argument_list|)
operator|<<
name|transform
operator|<<
name|line
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"task 166702 no aa"
argument_list|)
operator|<<
name|transform
operator|<<
name|line
operator|<<
literal|false
expr_stmt|;
block|}
block|{
specifier|const
name|QTransform
name|transform
decl_stmt|;
specifier|const
name|QLineF
name|line
argument_list|(
literal|2.5
argument_list|,
literal|2.5
argument_list|,
literal|2.5
operator|+
literal|1
operator|/
literal|256.
argument_list|,
literal|60000.5
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"steep line aa"
argument_list|)
operator|<<
name|transform
operator|<<
name|line
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"steep line no aa"
argument_list|)
operator|<<
name|transform
operator|<<
name|line
operator|<<
literal|false
expr_stmt|;
block|}
block|{
specifier|const
name|QTransform
name|transform
decl_stmt|;
specifier|const
name|QLineF
name|line
argument_list|(
literal|2.5
argument_list|,
literal|2.5
argument_list|,
literal|2.5
operator|+
literal|1
operator|/
literal|256.
argument_list|,
literal|1024
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"steep line 2 aa"
argument_list|)
operator|<<
name|transform
operator|<<
name|line
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"steep line 2 no aa"
argument_list|)
operator|<<
name|transform
operator|<<
name|line
operator|<<
literal|false
expr_stmt|;
block|}
block|{
specifier|const
name|QTransform
name|transform
decl_stmt|;
specifier|const
name|QLineF
name|line
argument_list|(
literal|2.5
argument_list|,
literal|2.5
argument_list|,
literal|2.5
operator|+
literal|1
operator|/
literal|64.
argument_list|,
literal|1024
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"steep line 3 aa"
argument_list|)
operator|<<
name|transform
operator|<<
name|line
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"steep line 3 no aa"
argument_list|)
operator|<<
name|transform
operator|<<
name|line
operator|<<
literal|false
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|randf
name|qreal
name|randf
parameter_list|()
block|{
return|return
name|rand
argument_list|()
operator|/
operator|(
name|RAND_MAX
operator|+
literal|1.0
operator|)
return|;
block|}
end_function
begin_function
DECL|function|randInRect
name|QPointF
name|randInRect
parameter_list|(
specifier|const
name|QRectF
modifier|&
name|rect
parameter_list|)
block|{
specifier|const
name|qreal
name|x
init|=
name|rect
operator|.
name|left
argument_list|()
operator|+
name|rect
operator|.
name|width
argument_list|()
operator|*
name|randf
argument_list|()
decl_stmt|;
specifier|const
name|qreal
name|y
init|=
name|rect
operator|.
name|top
argument_list|()
operator|+
name|rect
operator|.
name|height
argument_list|()
operator|*
name|randf
argument_list|()
decl_stmt|;
return|return
name|QPointF
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|rasterizer_asserts
name|void
name|tst_QPainter
operator|::
name|rasterizer_asserts
parameter_list|()
block|{
name|QImage
name|img
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|QRectF
name|middle
argument_list|(
name|QPointF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|img
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
name|QRectF
name|left
init|=
name|middle
operator|.
name|translated
argument_list|(
operator|-
name|middle
operator|.
name|width
argument_list|()
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QRectF
name|right
init|=
name|middle
operator|.
name|translated
argument_list|(
name|middle
operator|.
name|width
argument_list|()
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|img
argument_list|)
decl_stmt|;
name|img
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|p
operator|.
name|setCompositionMode
argument_list|(
name|QPainter
operator|::
name|CompositionMode_Destination
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|100000
condition|;
operator|++
name|i
control|)
block|{
name|QPainterPath
name|path
decl_stmt|;
name|path
operator|.
name|moveTo
argument_list|(
name|randInRect
argument_list|(
name|middle
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|randInRect
argument_list|(
name|left
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|randInRect
argument_list|(
name|right
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillPath
argument_list|(
name|path
argument_list|,
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|rasterizer_negativeCoords
name|void
name|tst_QPainter
operator|::
name|rasterizer_negativeCoords
parameter_list|()
block|{
name|QImage
name|img
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|img
operator|.
name|fill
argument_list|(
literal|0x0
argument_list|)
expr_stmt|;
name|QImage
name|original
init|=
name|img
decl_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|img
argument_list|)
decl_stmt|;
name|p
operator|.
name|rotate
argument_list|(
literal|90
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|70
argument_list|,
literal|50
argument_list|,
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
comment|// image should not have changed
name|QCOMPARE
argument_list|(
name|img
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
literal|0x0U
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|img
argument_list|,
name|original
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|blendOverFlow_data
name|void
name|tst_QPainter
operator|::
name|blendOverFlow_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QImage
operator|::
name|Format
argument_list|>
argument_list|(
literal|"format"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"width"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"height"
argument_list|)
expr_stmt|;
name|QImage
operator|::
name|Format
name|format
init|=
name|QImage
operator|::
name|Format_ARGB8555_Premultiplied
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"555,1,1"
argument_list|)
operator|<<
name|format
operator|<<
literal|1
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"555,2,2"
argument_list|)
operator|<<
name|format
operator|<<
literal|2
operator|<<
literal|2
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"555,10,10"
argument_list|)
operator|<<
name|format
operator|<<
literal|10
operator|<<
literal|10
expr_stmt|;
name|format
operator|=
name|QImage
operator|::
name|Format_ARGB8565_Premultiplied
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"565,1,1"
argument_list|)
operator|<<
name|format
operator|<<
literal|1
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"565,2,2"
argument_list|)
operator|<<
name|format
operator|<<
literal|2
operator|<<
literal|2
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"565,10,10"
argument_list|)
operator|<<
name|format
operator|<<
literal|10
operator|<<
literal|10
expr_stmt|;
block|}
end_function
begin_function
DECL|function|blendOverFlow
name|void
name|tst_QPainter
operator|::
name|blendOverFlow
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QImage
operator|::
name|Format
argument_list|,
name|format
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|width
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|height
argument_list|)
expr_stmt|;
name|QImage
name|dest
argument_list|(
name|width
argument_list|,
name|height
argument_list|,
name|format
argument_list|)
decl_stmt|;
name|QImage
name|src
argument_list|(
name|width
argument_list|,
name|height
argument_list|,
name|format
argument_list|)
decl_stmt|;
block|{
name|QPainter
name|p
argument_list|(
operator|&
name|dest
argument_list|)
decl_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|Qt
operator|::
name|green
argument_list|)
expr_stmt|;
block|}
name|QImage
name|expected
init|=
name|dest
decl_stmt|;
block|{
name|QPainter
name|p
argument_list|(
operator|&
name|src
argument_list|)
decl_stmt|;
name|p
operator|.
name|setCompositionMode
argument_list|(
name|QPainter
operator|::
name|CompositionMode_Source
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|QColor
argument_list|(
literal|0
argument_list|,
literal|255
argument_list|,
literal|0
argument_list|,
literal|6
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QPainter
name|p
argument_list|(
operator|&
name|dest
argument_list|)
decl_stmt|;
name|p
operator|.
name|drawImage
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|src
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|dest
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|expected
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dest
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|largeImagePainting_data
name|void
name|tst_QPainter
operator|::
name|largeImagePainting_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"width"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"height"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"antialiased"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"tall"
argument_list|)
operator|<<
literal|1
operator|<<
literal|32767
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"tall aa"
argument_list|)
operator|<<
literal|1
operator|<<
literal|32767
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"wide"
argument_list|)
operator|<<
literal|32767
operator|<<
literal|1
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"wide aa"
argument_list|)
operator|<<
literal|32767
operator|<<
literal|1
operator|<<
literal|true
expr_stmt|;
block|}
end_function
begin_function
DECL|function|largeImagePainting
name|void
name|tst_QPainter
operator|::
name|largeImagePainting
parameter_list|()
block|{
name|QPainterPath
name|path
decl_stmt|;
name|path
operator|.
name|addRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|path
operator|.
name|addRect
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|path
operator|.
name|addRect
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|width
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|height
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|antialiased
argument_list|)
expr_stmt|;
name|QImage
name|img
argument_list|(
name|width
argument_list|,
name|height
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|img
operator|.
name|fill
argument_list|(
literal|0x0
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|img
argument_list|)
decl_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|p
operator|.
name|setBrush
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|p
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|,
name|antialiased
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|img
operator|.
name|width
argument_list|()
condition|;
name|i
operator|+=
literal|4
control|)
block|{
name|p
operator|.
name|drawPath
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|p
operator|.
name|translate
argument_list|(
literal|4
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
name|p
operator|.
name|resetMatrix
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|4
init|;
name|i
operator|<
name|img
operator|.
name|height
argument_list|()
condition|;
name|i
operator|+=
literal|4
control|)
block|{
name|p
operator|.
name|translate
argument_list|(
literal|0
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawPath
argument_list|(
name|path
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|img
operator|.
name|width
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
if|if
condition|(
name|i
operator|%
literal|2
condition|)
name|QCOMPARE
argument_list|(
name|img
operator|.
name|pixel
argument_list|(
name|i
argument_list|,
literal|0
argument_list|)
argument_list|,
literal|0x0U
argument_list|)
expr_stmt|;
else|else
name|QCOMPARE
argument_list|(
name|img
operator|.
name|pixel
argument_list|(
name|i
argument_list|,
literal|0
argument_list|)
argument_list|,
literal|0xffffffffU
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
name|img
operator|.
name|height
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
if|if
condition|(
name|i
operator|%
literal|2
condition|)
name|QCOMPARE
argument_list|(
name|img
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
name|i
argument_list|)
argument_list|,
literal|0x0U
argument_list|)
expr_stmt|;
else|else
name|QCOMPARE
argument_list|(
name|img
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
name|i
argument_list|)
argument_list|,
literal|0xffffffffU
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|imageScaling_task206785
name|void
name|tst_QPainter
operator|::
name|imageScaling_task206785
parameter_list|()
block|{
name|QImage
name|src
argument_list|(
literal|32
argument_list|,
literal|2
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|src
operator|.
name|fill
argument_list|(
literal|0xffffffff
argument_list|)
expr_stmt|;
name|QImage
name|dst
argument_list|(
literal|128
argument_list|,
literal|128
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|QImage
name|expected
argument_list|(
literal|128
argument_list|,
literal|128
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|expected
operator|.
name|fill
argument_list|(
literal|0xffffffff
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
literal|5
condition|;
operator|++
name|i
control|)
block|{
name|qreal
name|scale
init|=
name|i
operator|/
name|qreal
argument_list|(
literal|5
argument_list|)
decl_stmt|;
name|dst
operator|.
name|fill
argument_list|(
literal|0xff000000
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|dst
argument_list|)
decl_stmt|;
name|p
operator|.
name|scale
argument_list|(
name|dst
operator|.
name|width
argument_list|()
operator|/
name|qreal
argument_list|(
name|src
operator|.
name|width
argument_list|()
argument_list|)
argument_list|,
name|scale
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|y
init|=
literal|0
init|;
name|y
operator|*
name|scale
operator|<
name|dst
operator|.
name|height
argument_list|()
condition|;
operator|++
name|y
control|)
name|p
operator|.
name|drawImage
argument_list|(
literal|0
argument_list|,
name|y
argument_list|,
name|src
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dst
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_define
DECL|macro|FOR_EACH_NEIGHBOR_8
define|#
directive|define
name|FOR_EACH_NEIGHBOR_8
value|for (int dx = -1; dx<= 1; ++dx) for (int dy = -1; dy<= 1; ++dy) if (dx != 0 || dy != 0)
end_define
begin_define
DECL|macro|FOR_EACH_NEIGHBOR_4
define|#
directive|define
name|FOR_EACH_NEIGHBOR_4
value|for (int dx = -1; dx<= 1; ++dx) for (int dy = -1; dy<= 1; ++dy) if ((dx == 0) != (dy == 0))
end_define
begin_function
DECL|function|qHash
name|uint
name|qHash
parameter_list|(
specifier|const
name|QPoint
modifier|&
name|point
parameter_list|)
block|{
return|return
name|qHash
argument_list|(
name|qMakePair
argument_list|(
name|point
operator|.
name|x
argument_list|()
argument_list|,
name|point
operator|.
name|y
argument_list|()
argument_list|)
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|verifyOutlineFillConsistency
name|bool
name|verifyOutlineFillConsistency
parameter_list|(
specifier|const
name|QImage
modifier|&
name|img
parameter_list|,
name|QRgb
name|outside
parameter_list|,
name|QRgb
name|inside
parameter_list|,
name|QRgb
name|outline
parameter_list|)
block|{
if|if
condition|(
name|img
operator|.
name|pixel
argument_list|(
name|img
operator|.
name|width
argument_list|()
operator|/
literal|2
argument_list|,
name|img
operator|.
name|height
argument_list|()
operator|/
literal|2
argument_list|)
operator|!=
name|inside
condition|)
return|return
literal|false
return|;
name|int
name|x
init|=
name|img
operator|.
name|width
argument_list|()
operator|/
literal|2
decl_stmt|;
name|int
name|y
init|=
name|img
operator|.
name|height
argument_list|()
operator|/
literal|2
decl_stmt|;
while|while
condition|(
name|img
operator|.
name|pixel
argument_list|(
operator|++
name|x
argument_list|,
name|y
argument_list|)
operator|==
name|inside
condition|)
empty_stmt|;
if|if
condition|(
name|img
operator|.
name|pixel
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
operator|!=
name|outline
condition|)
return|return
literal|false
return|;
name|QQueue
argument_list|<
name|QPoint
argument_list|>
name|discovered
decl_stmt|;
name|discovered
operator|.
name|enqueue
argument_list|(
name|QPoint
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
argument_list|)
expr_stmt|;
name|QVector
argument_list|<
name|bool
argument_list|>
name|visited
argument_list|(
name|img
operator|.
name|width
argument_list|()
operator|*
name|img
operator|.
name|height
argument_list|()
argument_list|)
decl_stmt|;
name|visited
operator|.
name|fill
argument_list|(
literal|false
argument_list|)
expr_stmt|;
while|while
condition|(
operator|!
name|discovered
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|QPoint
name|p
init|=
name|discovered
operator|.
name|dequeue
argument_list|()
decl_stmt|;
name|QRgb
name|pixel
init|=
name|img
operator|.
name|pixel
argument_list|(
name|p
operator|.
name|x
argument_list|()
argument_list|,
name|p
operator|.
name|y
argument_list|()
argument_list|)
decl_stmt|;
name|bool
modifier|&
name|v
init|=
name|visited
index|[
name|p
operator|.
name|y
argument_list|()
operator|*
name|img
operator|.
name|width
argument_list|()
operator|+
name|p
operator|.
name|x
argument_list|()
index|]
decl_stmt|;
if|if
condition|(
name|v
condition|)
continue|continue;
name|v
operator|=
literal|true
expr_stmt|;
if|if
condition|(
name|pixel
operator|==
name|outline
condition|)
block|{
name|FOR_EACH_NEIGHBOR_8
block|{
name|QPoint
name|x
argument_list|(
name|p
operator|.
name|x
argument_list|()
operator|+
name|dx
argument_list|,
name|p
operator|.
name|y
argument_list|()
operator|+
name|dy
argument_list|)
decl_stmt|;
name|discovered
operator|.
name|enqueue
argument_list|(
name|x
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|FOR_EACH_NEIGHBOR_4
block|{
if|if
condition|(
operator|(
name|dx
operator|==
literal|0
operator|)
operator|==
operator|(
name|dy
operator|==
literal|0
operator|)
condition|)
continue|continue;
name|QRgb
name|neighbor
init|=
name|img
operator|.
name|pixel
argument_list|(
name|p
operator|.
name|x
argument_list|()
operator|+
name|dx
argument_list|,
name|p
operator|.
name|y
argument_list|()
operator|+
name|dy
argument_list|)
decl_stmt|;
if|if
condition|(
operator|(
name|pixel
operator|==
name|inside
operator|&&
name|neighbor
operator|==
name|outside
operator|)
operator|||
operator|(
name|pixel
operator|==
name|outside
operator|&&
name|neighbor
operator|==
name|inside
operator|)
condition|)
return|return
literal|false
return|;
block|}
block|}
block|}
return|return
literal|true
return|;
block|}
end_function
begin_undef
DECL|macro|FOR_EACH_NEIGHBOR_8
undef|#
directive|undef
name|FOR_EACH_NEIGHBOR_8
end_undef
begin_undef
DECL|macro|FOR_EACH_NEIGHBOR_4
undef|#
directive|undef
name|FOR_EACH_NEIGHBOR_4
end_undef
begin_function
DECL|function|outlineFillConsistency
name|void
name|tst_QPainter
operator|::
name|outlineFillConsistency
parameter_list|()
block|{
name|QImage
name|dst
argument_list|(
literal|256
argument_list|,
literal|256
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|QPolygonF
name|poly
decl_stmt|;
name|poly
operator|<<
name|QPointF
argument_list|(
literal|5
argument_list|,
operator|-
literal|100
argument_list|)
operator|<<
name|QPointF
argument_list|(
operator|-
literal|70
argument_list|,
literal|20
argument_list|)
operator|<<
name|QPointF
argument_list|(
literal|95
argument_list|,
literal|25
argument_list|)
expr_stmt|;
name|QPen
name|pen
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
decl_stmt|;
name|QBrush
name|brush
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
decl_stmt|;
name|QRgb
name|background
init|=
literal|0xffffffff
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|360
condition|;
operator|++
name|i
control|)
block|{
name|dst
operator|.
name|fill
argument_list|(
name|background
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|dst
argument_list|)
decl_stmt|;
name|p
operator|.
name|translate
argument_list|(
name|dst
operator|.
name|width
argument_list|()
operator|/
literal|2
argument_list|,
name|dst
operator|.
name|height
argument_list|()
operator|/
literal|2
argument_list|)
expr_stmt|;
name|QPolygonF
name|copy
init|=
name|poly
decl_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|copy
operator|.
name|size
argument_list|()
condition|;
operator|++
name|j
control|)
name|copy
index|[
name|j
index|]
operator|=
name|QTransform
argument_list|()
operator|.
name|rotate
argument_list|(
name|i
argument_list|)
operator|.
name|map
argument_list|(
name|copy
index|[
name|j
index|]
argument_list|)
expr_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|pen
argument_list|)
expr_stmt|;
name|p
operator|.
name|setBrush
argument_list|(
name|brush
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawPolygon
argument_list|(
name|copy
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|verifyOutlineFillConsistency
argument_list|(
name|dst
argument_list|,
name|background
argument_list|,
name|brush
operator|.
name|color
argument_list|()
operator|.
name|rgba
argument_list|()
argument_list|,
name|pen
operator|.
name|color
argument_list|()
operator|.
name|rgba
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|drawImage_task217400_data
name|void
name|tst_QPainter
operator|::
name|drawImage_task217400_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QImage
operator|::
name|Format
argument_list|>
argument_list|(
literal|"format"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"444"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_ARGB4444_Premultiplied
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"555"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_ARGB8555_Premultiplied
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"565"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_ARGB8565_Premultiplied
expr_stmt|;
comment|//    QTest::newRow("666")<< QImage::Format_ARGB6666_Premultiplied;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"888p"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"888"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_ARGB32
expr_stmt|;
block|}
end_function
begin_function
DECL|function|drawImage_task217400
name|void
name|tst_QPainter
operator|::
name|drawImage_task217400
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QImage
operator|::
name|Format
argument_list|,
name|format
argument_list|)
expr_stmt|;
specifier|const
name|QImage
name|src
init|=
name|QImage
argument_list|(
name|QFINDTESTDATA
argument_list|(
literal|"task217400.png"
argument_list|)
argument_list|)
operator|.
name|convertToFormat
argument_list|(
name|format
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|src
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QImage
name|expected
argument_list|(
name|src
operator|.
name|size
argument_list|()
argument_list|,
name|format
argument_list|)
decl_stmt|;
block|{
name|QPainter
name|p
argument_list|(
operator|&
name|expected
argument_list|)
decl_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|expected
operator|.
name|width
argument_list|()
argument_list|,
name|expected
operator|.
name|height
argument_list|()
argument_list|,
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawImage
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|src
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<=
literal|4
condition|;
operator|++
name|i
control|)
block|{
name|QImage
name|dest
argument_list|(
name|src
operator|.
name|width
argument_list|()
operator|+
name|i
argument_list|,
name|src
operator|.
name|height
argument_list|()
argument_list|,
name|format
argument_list|)
decl_stmt|;
block|{
name|QPainter
name|p
argument_list|(
operator|&
name|dest
argument_list|)
decl_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|dest
operator|.
name|width
argument_list|()
argument_list|,
name|dest
operator|.
name|height
argument_list|()
argument_list|,
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawImage
argument_list|(
name|i
argument_list|,
literal|0
argument_list|,
name|src
argument_list|)
expr_stmt|;
block|}
specifier|const
name|QImage
name|result
init|=
name|dest
operator|.
name|copy
argument_list|(
name|i
argument_list|,
literal|0
argument_list|,
name|src
operator|.
name|width
argument_list|()
argument_list|,
name|src
operator|.
name|height
argument_list|()
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|result
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|drawImage_task258776
name|void
name|tst_QPainter
operator|::
name|drawImage_task258776
parameter_list|()
block|{
name|QImage
name|src
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|,
name|QImage
operator|::
name|Format_RGB888
argument_list|)
decl_stmt|;
name|QImage
name|dest
argument_list|(
literal|33
argument_list|,
literal|33
argument_list|,
name|QImage
operator|::
name|Format_RGB888
argument_list|)
decl_stmt|;
name|src
operator|.
name|fill
argument_list|(
literal|0x00ff00
argument_list|)
expr_stmt|;
name|dest
operator|.
name|fill
argument_list|(
literal|0xff0000
argument_list|)
expr_stmt|;
name|QPainter
name|painter
argument_list|(
operator|&
name|dest
argument_list|)
decl_stmt|;
name|painter
operator|.
name|drawImage
argument_list|(
name|QRectF
argument_list|(
literal|0.499
argument_list|,
literal|0.499
argument_list|,
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|,
name|src
argument_list|,
name|QRectF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|.
name|end
argument_list|()
expr_stmt|;
name|QImage
name|expected
argument_list|(
literal|33
argument_list|,
literal|33
argument_list|,
name|QImage
operator|::
name|Format_RGB32
argument_list|)
decl_stmt|;
name|expected
operator|.
name|fill
argument_list|(
literal|0xff0000
argument_list|)
expr_stmt|;
name|painter
operator|.
name|begin
argument_list|(
operator|&
name|expected
argument_list|)
expr_stmt|;
name|painter
operator|.
name|drawImage
argument_list|(
name|QRectF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|,
name|src
argument_list|)
expr_stmt|;
name|painter
operator|.
name|end
argument_list|()
expr_stmt|;
name|dest
operator|=
name|dest
operator|.
name|convertToFormat
argument_list|(
name|QImage
operator|::
name|Format_RGB32
argument_list|)
expr_stmt|;
name|dest
operator|.
name|save
argument_list|(
literal|"dest.png"
argument_list|)
expr_stmt|;
name|expected
operator|.
name|save
argument_list|(
literal|"expected.png"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dest
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|drawImage_QTBUG28324
name|void
name|tst_QPainter
operator|::
name|drawImage_QTBUG28324
parameter_list|()
block|{
name|QImage
name|dest
argument_list|(
literal|512
argument_list|,
literal|512
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|dest
operator|.
name|fill
argument_list|(
literal|0x0
argument_list|)
expr_stmt|;
name|int
name|x
init|=
literal|263
decl_stmt|;
name|int
name|y
init|=
literal|89
decl_stmt|;
name|int
name|w
init|=
literal|61
decl_stmt|;
name|int
name|h
init|=
literal|39
decl_stmt|;
name|QImage
name|source
argument_list|(
name|w
argument_list|,
name|h
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|quint32
modifier|*
name|b
init|=
operator|(
name|quint32
operator|*
operator|)
name|source
operator|.
name|bits
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|w
operator|*
name|h
condition|;
operator|++
name|j
control|)
name|b
index|[
name|j
index|]
operator|=
literal|0x7f7f7f7f
expr_stmt|;
comment|// nothing to test here since the bug is about
comment|// an invalid memory read, which valgrind
comment|// would complain about
name|QPainter
name|p
argument_list|(
operator|&
name|dest
argument_list|)
decl_stmt|;
name|p
operator|.
name|drawImage
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|source
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|clipRectSaveRestore
name|void
name|tst_QPainter
operator|::
name|clipRectSaveRestore
parameter_list|()
block|{
name|QImage
name|img
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|img
operator|.
name|fill
argument_list|(
literal|0x0
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|img
argument_list|)
decl_stmt|;
name|p
operator|.
name|setClipRect
argument_list|(
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|save
argument_list|()
expr_stmt|;
name|p
operator|.
name|setClipRect
argument_list|(
name|QRect
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|)
argument_list|,
name|Qt
operator|::
name|IntersectClip
argument_list|)
expr_stmt|;
name|p
operator|.
name|restore
argument_list|()
expr_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|64
argument_list|,
literal|64
argument_list|,
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|img
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|clippedImage
name|void
name|tst_QPainter
operator|::
name|clippedImage
parameter_list|()
block|{
name|QImage
name|img
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|img
operator|.
name|fill
argument_list|(
literal|0x0
argument_list|)
expr_stmt|;
name|QImage
name|src
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|,
name|QImage
operator|::
name|Format_RGB32
argument_list|)
decl_stmt|;
name|src
operator|.
name|fill
argument_list|(
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|img
argument_list|)
decl_stmt|;
name|p
operator|.
name|setClipRect
argument_list|(
name|QRect
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|14
argument_list|,
literal|14
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawImage
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|src
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|img
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
literal|0x0U
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|img
operator|.
name|pixel
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|src
operator|.
name|pixel
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|stateResetBetweenQPainters
name|void
name|tst_QPainter
operator|::
name|stateResetBetweenQPainters
parameter_list|()
block|{
name|QImage
name|img
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|,
name|QImage
operator|::
name|Format_ARGB32
argument_list|)
decl_stmt|;
block|{
name|QPainter
name|p
argument_list|(
operator|&
name|img
argument_list|)
decl_stmt|;
name|p
operator|.
name|setCompositionMode
argument_list|(
name|QPainter
operator|::
name|CompositionMode_Source
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|16
argument_list|,
literal|16
argument_list|,
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
block|}
block|{
name|QPainter
name|p2
argument_list|(
operator|&
name|img
argument_list|)
decl_stmt|;
name|p2
operator|.
name|fillRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|16
argument_list|,
literal|16
argument_list|,
name|QColor
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|255
argument_list|,
literal|63
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|img
operator|.
name|save
argument_list|(
literal|"foo.png"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|img
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|!=
name|qRgba
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|255
argument_list|,
literal|63
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|qRed
argument_list|(
name|img
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|>
literal|0
argument_list|)
expr_stmt|;
comment|// We didn't erase the red channel...
name|QVERIFY
argument_list|(
name|qBlue
argument_list|(
name|img
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|<
literal|255
argument_list|)
expr_stmt|;
comment|// We blended the blue channel
block|}
end_function
begin_function
DECL|function|drawRect_task215378
name|void
name|tst_QPainter
operator|::
name|drawRect_task215378
parameter_list|()
block|{
name|QImage
name|img
argument_list|(
literal|11
argument_list|,
literal|11
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|img
operator|.
name|fill
argument_list|(
name|QColor
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|img
argument_list|)
decl_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|QColor
argument_list|(
literal|127
argument_list|,
literal|127
argument_list|,
literal|127
argument_list|,
literal|127
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|img
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|img
operator|.
name|pixel
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|img
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|img
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|img
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|!=
name|img
operator|.
name|pixel
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|drawRect_task247505
name|void
name|tst_QPainter
operator|::
name|drawRect_task247505
parameter_list|()
block|{
name|QImage
name|a
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|a
operator|.
name|fill
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QImage
name|b
init|=
name|a
decl_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|a
argument_list|)
decl_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|p
operator|.
name|setBrush
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawRect
argument_list|(
name|QRectF
argument_list|(
literal|10
argument_list|,
literal|0
argument_list|,
operator|-
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|p
operator|.
name|begin
argument_list|(
operator|&
name|b
argument_list|)
expr_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|p
operator|.
name|setBrush
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawRect
argument_list|(
name|QRectF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a
argument_list|,
name|b
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|drawImage_data
name|void
name|tst_QPainter
operator|::
name|drawImage_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"x"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"y"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"w"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"h"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QImage
operator|::
name|Format
argument_list|>
argument_list|(
literal|"srcFormat"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QImage
operator|::
name|Format
argument_list|>
argument_list|(
literal|"dstFormat"
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|srcFormat
init|=
name|QImage
operator|::
name|Format_Mono
init|;
name|srcFormat
operator|<
name|QImage
operator|::
name|NImageFormats
condition|;
operator|++
name|srcFormat
control|)
block|{
for|for
control|(
name|int
name|dstFormat
init|=
name|QImage
operator|::
name|Format_Mono
init|;
name|dstFormat
operator|<
name|QImage
operator|::
name|NImageFormats
condition|;
operator|++
name|dstFormat
control|)
block|{
if|if
condition|(
name|dstFormat
operator|==
name|QImage
operator|::
name|Format_Indexed8
condition|)
continue|continue;
for|for
control|(
name|int
name|odd_x
init|=
literal|0
init|;
name|odd_x
operator|<=
literal|1
condition|;
operator|++
name|odd_x
control|)
block|{
for|for
control|(
name|int
name|odd_width
init|=
literal|0
init|;
name|odd_width
operator|<=
literal|1
condition|;
operator|++
name|odd_width
control|)
block|{
name|QString
name|description
init|=
name|QString
argument_list|(
literal|"srcFormat %1, dstFormat %2, odd x: %3, odd width: %4"
argument_list|)
operator|.
name|arg
argument_list|(
name|srcFormat
argument_list|)
operator|.
name|arg
argument_list|(
name|dstFormat
argument_list|)
operator|.
name|arg
argument_list|(
name|odd_x
argument_list|)
operator|.
name|arg
argument_list|(
name|odd_width
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|qPrintable
argument_list|(
name|description
argument_list|)
argument_list|)
operator|<<
operator|(
literal|10
operator|+
name|odd_x
operator|)
operator|<<
literal|10
operator|<<
operator|(
literal|20
operator|+
name|odd_width
operator|)
operator|<<
literal|20
operator|<<
name|QImage
operator|::
name|Format
argument_list|(
name|srcFormat
argument_list|)
operator|<<
name|QImage
operator|::
name|Format
argument_list|(
name|dstFormat
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
end_function
begin_function
DECL|function|verifyImage
name|bool
name|verifyImage
parameter_list|(
specifier|const
name|QImage
modifier|&
name|img
parameter_list|,
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|,
name|int
name|w
parameter_list|,
name|int
name|h
parameter_list|,
name|uint
name|background
parameter_list|)
block|{
name|int
name|imgWidth
init|=
name|img
operator|.
name|width
argument_list|()
decl_stmt|;
name|int
name|imgHeight
init|=
name|img
operator|.
name|height
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|imgHeight
condition|;
operator|++
name|i
control|)
block|{
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|imgWidth
condition|;
operator|++
name|j
control|)
block|{
name|uint
name|pixel
init|=
name|img
operator|.
name|pixel
argument_list|(
name|j
argument_list|,
name|i
argument_list|)
decl_stmt|;
name|bool
name|outside
init|=
name|j
operator|<
name|x
operator|||
name|j
operator|>=
operator|(
name|x
operator|+
name|w
operator|)
operator|||
name|i
operator|<
name|y
operator|||
name|i
operator|>=
operator|(
name|y
operator|+
name|h
operator|)
decl_stmt|;
if|if
condition|(
name|outside
operator|!=
operator|(
name|pixel
operator|==
name|background
operator|)
condition|)
block|{
comment|//printf("%d %d, expected %x, got %x, outside: %d\n", x, y, background, pixel, outside);
return|return
literal|false
return|;
block|}
block|}
block|}
return|return
literal|true
return|;
block|}
end_function
begin_function
DECL|function|drawImage
name|void
name|tst_QPainter
operator|::
name|drawImage
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|x
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|y
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|w
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|h
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QImage
operator|::
name|Format
argument_list|,
name|srcFormat
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QImage
operator|::
name|Format
argument_list|,
name|dstFormat
argument_list|)
expr_stmt|;
name|QImage
name|dst
argument_list|(
literal|40
argument_list|,
literal|40
argument_list|,
name|QImage
operator|::
name|Format_RGB32
argument_list|)
decl_stmt|;
name|dst
operator|.
name|fill
argument_list|(
literal|0xffffffff
argument_list|)
expr_stmt|;
name|dst
operator|=
name|dst
operator|.
name|convertToFormat
argument_list|(
name|dstFormat
argument_list|)
expr_stmt|;
name|uint
name|background
init|=
name|dst
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QImage
name|src
argument_list|(
name|w
argument_list|,
name|h
argument_list|,
name|QImage
operator|::
name|Format_RGB32
argument_list|)
decl_stmt|;
name|src
operator|.
name|fill
argument_list|(
literal|0xff000000
argument_list|)
expr_stmt|;
name|src
operator|=
name|src
operator|.
name|convertToFormat
argument_list|(
name|srcFormat
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|dst
argument_list|)
decl_stmt|;
name|p
operator|.
name|drawImage
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|src
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|verifyImage
argument_list|(
name|dst
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|w
argument_list|,
name|h
argument_list|,
name|background
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|imageCoordinateLimit
name|void
name|tst_QPainter
operator|::
name|imageCoordinateLimit
parameter_list|()
block|{
name|QImage
name|img
argument_list|(
literal|64
argument_list|,
literal|40000
argument_list|,
name|QImage
operator|::
name|Format_MonoLSB
argument_list|)
decl_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|img
argument_list|)
decl_stmt|;
name|p
operator|.
name|drawText
argument_list|(
literal|10
argument_list|,
literal|36000
argument_list|,
name|QLatin1String
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|QPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawLine
argument_list|(
literal|10
argument_list|,
literal|0
argument_list|,
literal|60
argument_list|,
literal|40000
argument_list|)
expr_stmt|;
name|p
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawLine
argument_list|(
literal|10
argument_list|,
literal|0
argument_list|,
literal|60
argument_list|,
literal|40000
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|imageBlending_data
name|void
name|tst_QPainter
operator|::
name|imageBlending_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QImage
operator|::
name|Format
argument_list|>
argument_list|(
literal|"sourceFormat"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QImage
operator|::
name|Format
argument_list|>
argument_list|(
literal|"destFormat"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"error"
argument_list|)
expr_stmt|;
name|int
name|error_rgb565
init|=
operator|(
operator|(
literal|1
operator|<<
literal|3
operator|)
operator|+
operator|(
literal|1
operator|<<
literal|2
operator|)
operator|+
operator|(
literal|1
operator|<<
literal|3
operator|)
operator|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rgb565_on_rgb565"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB16
operator|<<
name|QImage
operator|::
name|Format_RGB16
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"argb8565_on_rgb565"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_ARGB8565_Premultiplied
operator|<<
name|QImage
operator|::
name|Format_RGB16
operator|<<
name|error_rgb565
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rgb32_on_rgb565"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB32
operator|<<
name|QImage
operator|::
name|Format_RGB16
operator|<<
name|error_rgb565
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"argb32pm_on_rgb565"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
operator|<<
name|QImage
operator|::
name|Format_RGB16
operator|<<
name|error_rgb565
expr_stmt|;
block|}
end_function
begin_function
DECL|function|diffColor
name|int
name|diffColor
parameter_list|(
name|quint32
name|ap
parameter_list|,
name|quint32
name|bp
parameter_list|)
block|{
name|int
name|a
init|=
name|qAlpha
argument_list|(
name|ap
argument_list|)
operator|-
name|qAlpha
argument_list|(
name|bp
argument_list|)
decl_stmt|;
name|int
name|r
init|=
name|qRed
argument_list|(
name|ap
argument_list|)
operator|-
name|qRed
argument_list|(
name|bp
argument_list|)
decl_stmt|;
name|int
name|b
init|=
name|qBlue
argument_list|(
name|ap
argument_list|)
operator|-
name|qBlue
argument_list|(
name|bp
argument_list|)
decl_stmt|;
name|int
name|g
init|=
name|qBlue
argument_list|(
name|ap
argument_list|)
operator|-
name|qBlue
argument_list|(
name|bp
argument_list|)
decl_stmt|;
return|return
name|qAbs
argument_list|(
name|a
argument_list|)
operator|+
name|qAbs
argument_list|(
name|r
argument_list|)
operator|+
name|qAbs
argument_list|(
name|g
argument_list|)
operator|+
name|qAbs
argument_list|(
name|b
argument_list|)
return|;
block|}
end_function
begin_comment
comment|// this test assumes premultiplied pixels...
end_comment
begin_function
DECL|function|imageBlending
name|void
name|tst_QPainter
operator|::
name|imageBlending
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QImage
operator|::
name|Format
argument_list|,
name|sourceFormat
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QImage
operator|::
name|Format
argument_list|,
name|destFormat
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|error
argument_list|)
expr_stmt|;
name|QImage
name|dest
decl_stmt|;
block|{
name|QImage
name|orig_dest
argument_list|(
literal|6
argument_list|,
literal|6
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|orig_dest
operator|.
name|fill
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|orig_dest
argument_list|)
decl_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|6
argument_list|,
literal|3
argument_list|,
name|QColor
operator|::
name|fromRgbF
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|,
literal|3
argument_list|,
literal|6
argument_list|,
name|QColor
operator|::
name|fromRgbF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|0.5
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|dest
operator|=
name|orig_dest
operator|.
name|convertToFormat
argument_list|(
name|destFormat
argument_list|)
expr_stmt|;
comment|// An image like this: (r = red, m = magenta, b = light alpha blue, 0 = transparent)
comment|// r r r m m m
comment|// r r r m m m
comment|// r r r m m m
comment|// 0 0 0 b b b
comment|// 0 0 0 b b b
comment|// 0 0 0 b b b
block|}
name|QImage
name|source
decl_stmt|;
block|{
name|QImage
name|orig_source
argument_list|(
literal|6
argument_list|,
literal|6
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|orig_source
operator|.
name|fill
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|orig_source
argument_list|)
decl_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|4
argument_list|,
literal|4
argument_list|,
name|QColor
operator|::
name|fromRgbF
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|0.5
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|,
name|QColor
operator|::
name|fromRgbF
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|source
operator|=
name|orig_source
operator|.
name|convertToFormat
argument_list|(
name|sourceFormat
argument_list|)
expr_stmt|;
comment|// An image like this: (0 = transparent, . = green at 0.5 alpha, g = opaque green.
comment|// 0 0 0 0 0 0
comment|// 0 . . . . 0
comment|// 0 . g g . 0
comment|// 0 . g g . 0
comment|// 0 . . . . 0
comment|// 0 0 0 0 0 0
block|}
name|QPainter
name|p
argument_list|(
operator|&
name|dest
argument_list|)
decl_stmt|;
name|p
operator|.
name|drawImage
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|source
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
comment|// resulting image:
comment|// r  r  r  m  m  m
comment|// r  r. r. m. m. m
comment|// r  r. g  g  m. m
comment|// 0  .  g  g  b. b
comment|// 0  .  .  b. b. b
comment|// 0  0  0  b  b  b
comment|// the g pixels, always green..
name|QVERIFY
argument_list|(
name|diffColor
argument_list|(
name|dest
operator|.
name|pixel
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|0xff00ff00
argument_list|)
operator|<=
name|error
argument_list|)
expr_stmt|;
comment|// g
if|if
condition|(
name|source
operator|.
name|hasAlphaChannel
argument_list|()
condition|)
block|{
name|QVERIFY
argument_list|(
name|diffColor
argument_list|(
name|dest
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
literal|0xffff0000
argument_list|)
operator|<=
name|error
argument_list|)
expr_stmt|;
comment|// r
name|QVERIFY
argument_list|(
name|diffColor
argument_list|(
name|dest
operator|.
name|pixel
argument_list|(
literal|5
argument_list|,
literal|0
argument_list|)
argument_list|,
literal|0xff7f007f
argument_list|)
operator|<=
name|error
argument_list|)
expr_stmt|;
comment|// m
name|QVERIFY
argument_list|(
name|diffColor
argument_list|(
name|dest
operator|.
name|pixel
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
literal|0xff7f7f00
argument_list|)
operator|<=
name|error
argument_list|)
expr_stmt|;
comment|// r.
name|QVERIFY
argument_list|(
name|diffColor
argument_list|(
name|dest
operator|.
name|pixel
argument_list|(
literal|4
argument_list|,
literal|1
argument_list|)
argument_list|,
literal|0xff3f7f3f
argument_list|)
operator|<=
name|error
argument_list|)
expr_stmt|;
comment|// m.
if|if
condition|(
name|dest
operator|.
name|hasAlphaChannel
argument_list|()
condition|)
block|{
name|QVERIFY
argument_list|(
name|diffColor
argument_list|(
name|dest
operator|.
name|pixel
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
argument_list|,
literal|0x7f007f00
argument_list|)
operator|<=
name|error
argument_list|)
expr_stmt|;
comment|// .
name|QVERIFY
argument_list|(
name|diffColor
argument_list|(
name|dest
operator|.
name|pixel
argument_list|(
literal|4
argument_list|,
literal|3
argument_list|)
argument_list|,
literal|0x7f007f3f
argument_list|)
operator|<=
name|error
argument_list|)
expr_stmt|;
comment|// b.
name|QVERIFY
argument_list|(
name|diffColor
argument_list|(
name|dest
operator|.
name|pixel
argument_list|(
literal|4
argument_list|,
literal|3
argument_list|)
argument_list|,
literal|0x7f007f3f
argument_list|)
operator|<=
name|error
argument_list|)
expr_stmt|;
comment|// b.
name|QVERIFY
argument_list|(
name|diffColor
argument_list|(
name|dest
operator|.
name|pixel
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|)
argument_list|,
literal|0x7f00007f
argument_list|)
operator|<=
name|error
argument_list|)
expr_stmt|;
comment|// b
name|QVERIFY
argument_list|(
name|diffColor
argument_list|(
name|dest
operator|.
name|pixel
argument_list|(
literal|4
argument_list|,
literal|0
argument_list|)
argument_list|,
literal|0
argument_list|)
operator|<=
literal|0
argument_list|)
expr_stmt|;
comment|// 0
block|}
block|}
else|else
block|{
name|QVERIFY
argument_list|(
name|diffColor
argument_list|(
name|dest
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
literal|0xff000000
argument_list|)
operator|<=
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|diffColor
argument_list|(
name|dest
operator|.
name|pixel
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
literal|0xff007f00
argument_list|)
operator|<=
name|error
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|imageBlending_clipped
name|void
name|tst_QPainter
operator|::
name|imageBlending_clipped
parameter_list|()
block|{
name|QImage
name|src
argument_list|(
literal|20
argument_list|,
literal|20
argument_list|,
name|QImage
operator|::
name|Format_RGB16
argument_list|)
decl_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|src
argument_list|)
decl_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
name|src
operator|.
name|rect
argument_list|()
argument_list|,
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|QImage
name|dst
argument_list|(
literal|40
argument_list|,
literal|20
argument_list|,
name|QImage
operator|::
name|Format_RGB16
argument_list|)
decl_stmt|;
name|p
operator|.
name|begin
argument_list|(
operator|&
name|dst
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
name|dst
operator|.
name|rect
argument_list|()
argument_list|,
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|QImage
name|expected
init|=
name|dst
decl_stmt|;
name|p
operator|.
name|begin
argument_list|(
operator|&
name|dst
argument_list|)
expr_stmt|;
name|p
operator|.
name|setClipRect
argument_list|(
name|QRect
argument_list|(
literal|23
argument_list|,
literal|0
argument_list|,
literal|20
argument_list|,
literal|20
argument_list|)
argument_list|)
expr_stmt|;
comment|// should be completely clipped
name|p
operator|.
name|drawImage
argument_list|(
name|QRectF
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|,
literal|20
argument_list|,
literal|20
argument_list|)
argument_list|,
name|src
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
comment|// dst should be left unchanged
name|QCOMPARE
argument_list|(
name|dst
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|paintOnNullPixmap
name|void
name|tst_QPainter
operator|::
name|paintOnNullPixmap
parameter_list|()
block|{
name|QPixmap
name|pix
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
decl_stmt|;
name|QPixmap
name|textPixmap
decl_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|textPixmap
argument_list|)
decl_stmt|;
name|p
operator|.
name|drawPixmap
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
name|pix
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|QPixmap
name|textPixmap2
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
decl_stmt|;
name|p
operator|.
name|begin
argument_list|(
operator|&
name|textPixmap2
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|checkCompositionMode
name|void
name|tst_QPainter
operator|::
name|checkCompositionMode
parameter_list|()
block|{
name|QImage
name|refImage
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
name|QImage
operator|::
name|Format_ARGB32
argument_list|)
decl_stmt|;
name|QPainter
name|painter
argument_list|(
operator|&
name|refImage
argument_list|)
decl_stmt|;
name|painter
operator|.
name|fillRect
argument_list|(
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|,
name|Qt
operator|::
name|blue
argument_list|)
expr_stmt|;
name|QImage
name|testImage
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
name|QImage
operator|::
name|Format_ARGB32
argument_list|)
decl_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|testImage
argument_list|)
decl_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|,
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|p
operator|.
name|save
argument_list|()
expr_stmt|;
name|p
operator|.
name|setCompositionMode
argument_list|(
name|QPainter
operator|::
name|CompositionMode_SourceOut
argument_list|)
expr_stmt|;
name|p
operator|.
name|restore
argument_list|()
expr_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|,
name|Qt
operator|::
name|blue
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|refImage
operator|.
name|pixel
argument_list|(
literal|20
argument_list|,
literal|20
argument_list|)
argument_list|,
name|testImage
operator|.
name|pixel
argument_list|(
literal|20
argument_list|,
literal|20
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|inverseGradient
specifier|static
name|QLinearGradient
name|inverseGradient
parameter_list|(
name|QLinearGradient
name|g
parameter_list|)
block|{
name|QLinearGradient
name|g2
init|=
name|g
decl_stmt|;
name|QGradientStops
name|stops
init|=
name|g
operator|.
name|stops
argument_list|()
decl_stmt|;
name|QGradientStops
name|inverse
decl_stmt|;
foreach|foreach
control|(
name|QGradientStop
name|stop
decl|,
name|stops
control|)
name|inverse
operator|<<
name|QGradientStop
argument_list|(
literal|1
operator|-
name|stop
operator|.
name|first
argument_list|,
name|stop
operator|.
name|second
argument_list|)
expr_stmt|;
name|g2
operator|.
name|setStops
argument_list|(
name|inverse
argument_list|)
expr_stmt|;
return|return
name|g2
return|;
block|}
end_function
begin_function
DECL|function|linearGradientSymmetry_data
name|void
name|tst_QPainter
operator|::
name|linearGradientSymmetry_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QGradientStops
argument_list|>
argument_list|(
literal|"stops"
argument_list|)
expr_stmt|;
if|if
condition|(
sizeof|sizeof
argument_list|(
name|qreal
argument_list|)
operator|!=
sizeof|sizeof
argument_list|(
name|float
argument_list|)
condition|)
block|{
name|QGradientStops
name|stops
decl_stmt|;
name|stops
operator|<<
name|qMakePair
argument_list|(
name|qreal
argument_list|(
literal|0.0
argument_list|)
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|blue
argument_list|)
argument_list|)
expr_stmt|;
name|stops
operator|<<
name|qMakePair
argument_list|(
name|qreal
argument_list|(
literal|0.2
argument_list|)
argument_list|,
name|QColor
argument_list|(
literal|220
argument_list|,
literal|220
argument_list|,
literal|220
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|stops
operator|<<
name|qMakePair
argument_list|(
name|qreal
argument_list|(
literal|0.6
argument_list|)
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
argument_list|)
expr_stmt|;
name|stops
operator|<<
name|qMakePair
argument_list|(
name|qreal
argument_list|(
literal|0.9
argument_list|)
argument_list|,
name|QColor
argument_list|(
literal|220
argument_list|,
literal|220
argument_list|,
literal|220
argument_list|,
literal|255
argument_list|)
argument_list|)
expr_stmt|;
name|stops
operator|<<
name|qMakePair
argument_list|(
name|qreal
argument_list|(
literal|1.0
argument_list|)
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"multiple stops"
argument_list|)
operator|<<
name|stops
expr_stmt|;
block|}
block|{
name|QGradientStops
name|stops
decl_stmt|;
name|stops
operator|<<
name|qMakePair
argument_list|(
name|qreal
argument_list|(
literal|0.0
argument_list|)
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|blue
argument_list|)
argument_list|)
expr_stmt|;
name|stops
operator|<<
name|qMakePair
argument_list|(
name|qreal
argument_list|(
literal|1.0
argument_list|)
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"two stops"
argument_list|)
operator|<<
name|stops
expr_stmt|;
block|}
if|if
condition|(
sizeof|sizeof
argument_list|(
name|qreal
argument_list|)
operator|!=
sizeof|sizeof
argument_list|(
name|float
argument_list|)
condition|)
block|{
name|QGradientStops
name|stops
decl_stmt|;
name|stops
operator|<<
name|qMakePair
argument_list|(
name|qreal
argument_list|(
literal|0.3
argument_list|)
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|blue
argument_list|)
argument_list|)
expr_stmt|;
name|stops
operator|<<
name|qMakePair
argument_list|(
name|qreal
argument_list|(
literal|0.6
argument_list|)
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"two stops 2"
argument_list|)
operator|<<
name|stops
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|linearGradientSymmetry
name|void
name|tst_QPainter
operator|::
name|linearGradientSymmetry
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QGradientStops
argument_list|,
name|stops
argument_list|)
expr_stmt|;
name|QImage
name|a
argument_list|(
literal|64
argument_list|,
literal|8
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|QImage
name|b
argument_list|(
literal|64
argument_list|,
literal|8
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|a
operator|.
name|fill
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|b
operator|.
name|fill
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QLinearGradient
name|gradient
argument_list|(
name|QRectF
argument_list|(
name|b
operator|.
name|rect
argument_list|()
argument_list|)
operator|.
name|topLeft
argument_list|()
argument_list|,
name|QRectF
argument_list|(
name|b
operator|.
name|rect
argument_list|()
argument_list|)
operator|.
name|topRight
argument_list|()
argument_list|)
decl_stmt|;
name|gradient
operator|.
name|setStops
argument_list|(
name|stops
argument_list|)
expr_stmt|;
name|QPainter
name|pa
argument_list|(
operator|&
name|a
argument_list|)
decl_stmt|;
name|pa
operator|.
name|fillRect
argument_list|(
name|a
operator|.
name|rect
argument_list|()
argument_list|,
name|gradient
argument_list|)
expr_stmt|;
name|pa
operator|.
name|end
argument_list|()
expr_stmt|;
name|QPainter
name|pb
argument_list|(
operator|&
name|b
argument_list|)
decl_stmt|;
name|pb
operator|.
name|fillRect
argument_list|(
name|b
operator|.
name|rect
argument_list|()
argument_list|,
name|inverseGradient
argument_list|(
name|gradient
argument_list|)
argument_list|)
expr_stmt|;
name|pb
operator|.
name|end
argument_list|()
expr_stmt|;
name|b
operator|=
name|b
operator|.
name|mirrored
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a
argument_list|,
name|b
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|gradientInterpolation
name|void
name|tst_QPainter
operator|::
name|gradientInterpolation
parameter_list|()
block|{
name|QImage
name|image
argument_list|(
literal|256
argument_list|,
literal|8
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|QPainter
name|painter
decl_stmt|;
name|QLinearGradient
name|gradient
argument_list|(
name|QRectF
argument_list|(
name|image
operator|.
name|rect
argument_list|()
argument_list|)
operator|.
name|topLeft
argument_list|()
argument_list|,
name|QRectF
argument_list|(
name|image
operator|.
name|rect
argument_list|()
argument_list|)
operator|.
name|topRight
argument_list|()
argument_list|)
decl_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0.0
argument_list|,
name|QColor
argument_list|(
literal|255
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|1.0
argument_list|,
name|Qt
operator|::
name|blue
argument_list|)
expr_stmt|;
name|image
operator|.
name|fill
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|painter
operator|.
name|begin
argument_list|(
operator|&
name|image
argument_list|)
expr_stmt|;
name|painter
operator|.
name|fillRect
argument_list|(
name|image
operator|.
name|rect
argument_list|()
argument_list|,
name|gradient
argument_list|)
expr_stmt|;
name|painter
operator|.
name|end
argument_list|()
expr_stmt|;
specifier|const
name|QRgb
modifier|*
name|line
init|=
cast|reinterpret_cast
argument_list|<
name|QRgb
operator|*
argument_list|>
argument_list|(
name|image
operator|.
name|scanLine
argument_list|(
literal|3
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|256
condition|;
operator|++
name|i
control|)
block|{
name|QCOMPARE
argument_list|(
name|qAlpha
argument_list|(
name|line
index|[
name|i
index|]
argument_list|)
argument_list|,
name|qBlue
argument_list|(
name|line
index|[
name|i
index|]
argument_list|)
argument_list|)
expr_stmt|;
comment|// bright blue
name|QVERIFY
argument_list|(
name|qAbs
argument_list|(
name|qAlpha
argument_list|(
name|line
index|[
name|i
index|]
argument_list|)
operator|-
name|i
argument_list|)
operator|<
literal|3
argument_list|)
expr_stmt|;
comment|// linear alpha
name|QCOMPARE
argument_list|(
name|qRed
argument_list|(
name|line
index|[
name|i
index|]
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// no red component
name|QCOMPARE
argument_list|(
name|qGreen
argument_list|(
name|line
index|[
name|i
index|]
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// no green component
block|}
name|gradient
operator|.
name|setInterpolationMode
argument_list|(
name|QGradient
operator|::
name|ComponentInterpolation
argument_list|)
expr_stmt|;
name|image
operator|.
name|fill
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|painter
operator|.
name|begin
argument_list|(
operator|&
name|image
argument_list|)
expr_stmt|;
name|painter
operator|.
name|fillRect
argument_list|(
name|image
operator|.
name|rect
argument_list|()
argument_list|,
name|gradient
argument_list|)
expr_stmt|;
name|painter
operator|.
name|end
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
literal|256
condition|;
operator|++
name|i
control|)
block|{
if|if
condition|(
name|i
operator|<
literal|128
condition|)
block|{
name|QVERIFY
argument_list|(
name|qRed
argument_list|(
name|line
index|[
name|i
index|]
argument_list|)
operator|>=
name|qBlue
argument_list|(
name|line
index|[
name|i
index|]
argument_list|)
argument_list|)
expr_stmt|;
comment|// red is dominant
block|}
else|else
block|{
name|QVERIFY
argument_list|(
name|qRed
argument_list|(
name|line
index|[
name|i
index|]
argument_list|)
operator|<=
name|qBlue
argument_list|(
name|line
index|[
name|i
index|]
argument_list|)
argument_list|)
expr_stmt|;
comment|// blue is dominant
block|}
name|QVERIFY
argument_list|(
operator|(
name|qRed
argument_list|(
name|line
index|[
name|i
index|]
argument_list|)
operator|-
literal|0.5
operator|)
operator|*
operator|(
name|qAlpha
argument_list|(
name|line
index|[
name|i
operator|-
literal|1
index|]
argument_list|)
operator|-
literal|0.5
operator|)
operator|<=
operator|(
name|qRed
argument_list|(
name|line
index|[
name|i
operator|-
literal|1
index|]
argument_list|)
operator|+
literal|0.5
operator|)
operator|*
operator|(
name|qAlpha
argument_list|(
name|line
index|[
name|i
index|]
argument_list|)
operator|+
literal|0.5
operator|)
argument_list|)
expr_stmt|;
comment|// decreasing red
name|QVERIFY
argument_list|(
operator|(
name|qBlue
argument_list|(
name|line
index|[
name|i
index|]
argument_list|)
operator|+
literal|0.5
operator|)
operator|*
operator|(
name|qAlpha
argument_list|(
name|line
index|[
name|i
operator|-
literal|1
index|]
argument_list|)
operator|+
literal|0.5
operator|)
operator|>=
operator|(
name|qBlue
argument_list|(
name|line
index|[
name|i
operator|-
literal|1
index|]
argument_list|)
operator|-
literal|0.5
operator|)
operator|*
operator|(
name|qAlpha
argument_list|(
name|line
index|[
name|i
index|]
argument_list|)
operator|-
literal|0.5
operator|)
argument_list|)
expr_stmt|;
comment|// increasing blue
name|QVERIFY
argument_list|(
name|qAbs
argument_list|(
name|qAlpha
argument_list|(
name|line
index|[
name|i
index|]
argument_list|)
operator|-
name|i
argument_list|)
operator|<
literal|3
argument_list|)
expr_stmt|;
comment|// linear alpha
name|QCOMPARE
argument_list|(
name|qGreen
argument_list|(
name|line
index|[
name|i
index|]
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// no green component
block|}
block|}
end_function
begin_function
DECL|function|drawPolygon
name|void
name|tst_QPainter
operator|::
name|drawPolygon
parameter_list|()
block|{
name|QImage
name|img
argument_list|(
literal|128
argument_list|,
literal|128
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|QPainterPathStroker
name|stroker
decl_stmt|;
name|stroker
operator|.
name|setWidth
argument_list|(
literal|1.5
argument_list|)
expr_stmt|;
name|QPainterPath
name|path
decl_stmt|;
name|path
operator|.
name|moveTo
argument_list|(
literal|2
argument_list|,
literal|34
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
literal|34
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QPolygonF
name|poly
init|=
name|stroker
operator|.
name|createStroke
argument_list|(
name|path
argument_list|)
operator|.
name|toFillPolygon
argument_list|()
decl_stmt|;
name|img
operator|.
name|fill
argument_list|(
literal|0xffffffff
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|img
argument_list|)
decl_stmt|;
name|p
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|)
expr_stmt|;
name|p
operator|.
name|setBrush
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawPolygon
argument_list|(
name|poly
argument_list|)
expr_stmt|;
name|p
operator|.
name|translate
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawPolygon
argument_list|(
name|poly
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|QImage
name|a
init|=
name|img
operator|.
name|copy
argument_list|()
decl_stmt|;
name|img
operator|.
name|fill
argument_list|(
literal|0xffffffff
argument_list|)
expr_stmt|;
name|p
operator|.
name|begin
argument_list|(
operator|&
name|img
argument_list|)
expr_stmt|;
name|p
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|)
expr_stmt|;
name|p
operator|.
name|setBrush
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|p
operator|.
name|translate
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawPolygon
argument_list|(
name|poly
argument_list|)
expr_stmt|;
name|p
operator|.
name|resetTransform
argument_list|()
expr_stmt|;
name|p
operator|.
name|drawPolygon
argument_list|(
name|poly
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a
argument_list|,
name|img
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|inactivePainter
name|void
name|tst_QPainter
operator|::
name|inactivePainter
parameter_list|()
block|{
comment|// This test succeeds if it doesn't segfault.
name|QPainter
name|p
decl_stmt|;
name|QPainterPath
name|path
decl_stmt|;
name|QRegion
name|region
argument_list|(
name|QRect
argument_list|(
literal|20
argument_list|,
literal|20
argument_list|,
literal|60
argument_list|,
literal|40
argument_list|)
argument_list|)
decl_stmt|;
name|QPolygonF
name|polygon
argument_list|(
name|QVector
argument_list|<
name|QPointF
argument_list|>
argument_list|()
operator|<<
name|QPointF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QPointF
argument_list|(
literal|12
argument_list|,
literal|0
argument_list|)
operator|<<
name|QPointF
argument_list|(
literal|8
argument_list|,
literal|6
argument_list|)
argument_list|)
decl_stmt|;
name|path
operator|.
name|addPolygon
argument_list|(
name|polygon
argument_list|)
expr_stmt|;
name|p
operator|.
name|save
argument_list|()
expr_stmt|;
name|p
operator|.
name|restore
argument_list|()
expr_stmt|;
name|p
operator|.
name|background
argument_list|()
expr_stmt|;
name|p
operator|.
name|setBackground
argument_list|(
name|QBrush
argument_list|(
name|Qt
operator|::
name|blue
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|brush
argument_list|()
expr_stmt|;
name|p
operator|.
name|setBrush
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|p
operator|.
name|setBrush
argument_list|(
name|Qt
operator|::
name|NoBrush
argument_list|)
expr_stmt|;
name|p
operator|.
name|setBrush
argument_list|(
name|QBrush
argument_list|(
name|Qt
operator|::
name|white
argument_list|,
name|Qt
operator|::
name|DiagCrossPattern
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|backgroundMode
argument_list|()
expr_stmt|;
name|p
operator|.
name|setBackgroundMode
argument_list|(
name|Qt
operator|::
name|OpaqueMode
argument_list|)
expr_stmt|;
name|p
operator|.
name|boundingRect
argument_list|(
name|QRectF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|20
argument_list|)
argument_list|,
name|Qt
operator|::
name|AlignCenter
argument_list|,
name|QLatin1String
argument_list|(
literal|"Hello, World!"
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|boundingRect
argument_list|(
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|20
argument_list|)
argument_list|,
name|Qt
operator|::
name|AlignCenter
argument_list|,
name|QLatin1String
argument_list|(
literal|"Hello, World!"
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|brushOrigin
argument_list|()
expr_stmt|;
name|p
operator|.
name|setBrushOrigin
argument_list|(
name|QPointF
argument_list|(
literal|12
argument_list|,
literal|34
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|setBrushOrigin
argument_list|(
name|QPoint
argument_list|(
literal|12
argument_list|,
literal|34
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|clipPath
argument_list|()
expr_stmt|;
name|p
operator|.
name|clipRegion
argument_list|()
expr_stmt|;
name|p
operator|.
name|hasClipping
argument_list|()
expr_stmt|;
name|p
operator|.
name|setClipPath
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|p
operator|.
name|setClipRect
argument_list|(
name|QRectF
argument_list|(
literal|42
argument_list|,
literal|42
argument_list|,
literal|42
argument_list|,
literal|42
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|setClipRect
argument_list|(
name|QRect
argument_list|(
literal|42
argument_list|,
literal|42
argument_list|,
literal|42
argument_list|,
literal|42
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|setClipRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
name|p
operator|.
name|setClipping
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|p
operator|.
name|combinedMatrix
argument_list|()
expr_stmt|;
name|p
operator|.
name|combinedTransform
argument_list|()
expr_stmt|;
name|p
operator|.
name|compositionMode
argument_list|()
expr_stmt|;
name|p
operator|.
name|setCompositionMode
argument_list|(
name|QPainter
operator|::
name|CompositionMode_Plus
argument_list|)
expr_stmt|;
name|p
operator|.
name|device
argument_list|()
expr_stmt|;
name|p
operator|.
name|deviceMatrix
argument_list|()
expr_stmt|;
name|p
operator|.
name|deviceTransform
argument_list|()
expr_stmt|;
name|p
operator|.
name|font
argument_list|()
expr_stmt|;
name|p
operator|.
name|setFont
argument_list|(
name|QFont
argument_list|(
name|QLatin1String
argument_list|(
literal|"Times"
argument_list|)
argument_list|,
literal|24
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|fontInfo
argument_list|()
expr_stmt|;
name|p
operator|.
name|fontMetrics
argument_list|()
expr_stmt|;
name|p
operator|.
name|layoutDirection
argument_list|()
expr_stmt|;
name|p
operator|.
name|setLayoutDirection
argument_list|(
name|Qt
operator|::
name|RightToLeft
argument_list|)
expr_stmt|;
name|p
operator|.
name|opacity
argument_list|()
expr_stmt|;
name|p
operator|.
name|setOpacity
argument_list|(
literal|0.75
argument_list|)
expr_stmt|;
name|p
operator|.
name|pen
argument_list|()
expr_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|QPen
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|Qt
operator|::
name|green
argument_list|)
expr_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|p
operator|.
name|renderHints
argument_list|()
expr_stmt|;
name|p
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|p
operator|.
name|setRenderHints
argument_list|(
name|QPainter
operator|::
name|Antialiasing
operator||
name|QPainter
operator|::
name|SmoothPixmapTransform
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|p
operator|.
name|resetMatrix
argument_list|()
expr_stmt|;
name|p
operator|.
name|resetTransform
argument_list|()
expr_stmt|;
name|p
operator|.
name|rotate
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|p
operator|.
name|scale
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|p
operator|.
name|shear
argument_list|(
operator|-
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|p
operator|.
name|translate
argument_list|(
literal|3
argument_list|,
literal|14
argument_list|)
expr_stmt|;
name|p
operator|.
name|viewTransformEnabled
argument_list|()
expr_stmt|;
name|p
operator|.
name|setViewTransformEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|p
operator|.
name|viewport
argument_list|()
expr_stmt|;
name|p
operator|.
name|setViewport
argument_list|(
name|QRect
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|620
argument_list|,
literal|460
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|window
argument_list|()
expr_stmt|;
name|p
operator|.
name|setWindow
argument_list|(
name|QRect
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|620
argument_list|,
literal|460
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|worldMatrix
argument_list|()
expr_stmt|;
name|p
operator|.
name|setWorldMatrix
argument_list|(
name|QMatrix
argument_list|()
operator|.
name|translate
argument_list|(
literal|43
argument_list|,
literal|21
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|p
operator|.
name|setWorldMatrixEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|p
operator|.
name|transform
argument_list|()
expr_stmt|;
name|p
operator|.
name|setTransform
argument_list|(
name|QTransform
argument_list|()
operator|.
name|translate
argument_list|(
literal|12
argument_list|,
literal|34
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|p
operator|.
name|worldTransform
argument_list|()
expr_stmt|;
name|p
operator|.
name|setWorldTransform
argument_list|(
name|QTransform
argument_list|()
operator|.
name|scale
argument_list|(
literal|0.5
argument_list|,
literal|0.5
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testCompositionMode
name|bool
name|testCompositionMode
parameter_list|(
name|int
name|src
parameter_list|,
name|int
name|dst
parameter_list|,
name|int
name|expected
parameter_list|,
name|QPainter
operator|::
name|CompositionMode
name|op
parameter_list|,
name|qreal
name|opacity
init|=
literal|1.0
parameter_list|)
block|{
comment|// The test image needs to be large enough to test SIMD code
specifier|const
name|QSize
name|imageSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
decl_stmt|;
name|QImage
name|actual
argument_list|(
name|imageSize
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|actual
operator|.
name|fill
argument_list|(
name|QColor
argument_list|(
name|dst
argument_list|,
name|dst
argument_list|,
name|dst
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|actual
argument_list|)
decl_stmt|;
name|p
operator|.
name|setCompositionMode
argument_list|(
name|op
argument_list|)
expr_stmt|;
name|p
operator|.
name|setOpacity
argument_list|(
name|opacity
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
name|QRect
argument_list|(
name|QPoint
argument_list|()
argument_list|,
name|imageSize
argument_list|)
argument_list|,
name|QColor
argument_list|(
name|src
argument_list|,
name|src
argument_list|,
name|src
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
if|if
condition|(
name|qRed
argument_list|(
name|actual
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|!=
name|expected
condition|)
block|{
name|qDebug
argument_list|(
literal|"Fail: mode %d, src[%d] dst [%d] actual [%d] expected [%d]"
argument_list|,
name|op
argument_list|,
name|src
argument_list|,
name|dst
argument_list|,
name|qRed
argument_list|(
name|actual
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|,
name|expected
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
else|else
block|{
name|QImage
name|refImage
argument_list|(
name|imageSize
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|refImage
operator|.
name|fill
argument_list|(
name|QColor
argument_list|(
name|expected
argument_list|,
name|expected
argument_list|,
name|expected
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|actual
operator|==
name|refImage
return|;
block|}
block|}
end_function
begin_function
DECL|function|extendedBlendModes
name|void
name|tst_QPainter
operator|::
name|extendedBlendModes
parameter_list|()
block|{
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Plus
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Plus
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|127
argument_list|,
literal|128
argument_list|,
literal|255
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Plus
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|127
argument_list|,
literal|0
argument_list|,
literal|127
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Plus
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|0
argument_list|,
literal|127
argument_list|,
literal|127
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Plus
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|255
argument_list|,
literal|0
argument_list|,
literal|255
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Plus
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|0
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Plus
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|128
argument_list|,
literal|128
argument_list|,
literal|255
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Plus
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Plus
argument_list|,
literal|0.3
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Plus
argument_list|,
literal|0.3
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|127
argument_list|,
literal|128
argument_list|,
literal|165
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Plus
argument_list|,
literal|0.3
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|127
argument_list|,
literal|0
argument_list|,
literal|37
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Plus
argument_list|,
literal|0.3
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|0
argument_list|,
literal|127
argument_list|,
literal|127
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Plus
argument_list|,
literal|0.3
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|255
argument_list|,
literal|0
argument_list|,
literal|75
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Plus
argument_list|,
literal|0.3
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|0
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Plus
argument_list|,
literal|0.3
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|128
argument_list|,
literal|128
argument_list|,
literal|166
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Plus
argument_list|,
literal|0.3
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|186
argument_list|,
literal|200
argument_list|,
literal|255
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Plus
argument_list|,
literal|0.3
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Multiply
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Multiply
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|127
argument_list|,
literal|255
argument_list|,
literal|127
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Multiply
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|255
argument_list|,
literal|127
argument_list|,
literal|127
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Multiply
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|63
argument_list|,
literal|255
argument_list|,
literal|63
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Multiply
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|255
argument_list|,
literal|63
argument_list|,
literal|63
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Multiply
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|127
argument_list|,
literal|127
argument_list|,
literal|63
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Multiply
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Screen
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Screen
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|63
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Screen
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|255
argument_list|,
literal|63
argument_list|,
literal|255
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Screen
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|63
argument_list|,
literal|0
argument_list|,
literal|63
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Screen
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|0
argument_list|,
literal|63
argument_list|,
literal|63
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Screen
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|127
argument_list|,
literal|127
argument_list|,
literal|191
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Screen
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Overlay
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Overlay
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|63
argument_list|,
literal|63
argument_list|,
literal|31
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Overlay
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|63
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Overlay
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Darken
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Darken
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|63
argument_list|,
literal|63
argument_list|,
literal|63
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Darken
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|63
argument_list|,
literal|255
argument_list|,
literal|63
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Darken
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|255
argument_list|,
literal|63
argument_list|,
literal|63
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Darken
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|63
argument_list|,
literal|127
argument_list|,
literal|63
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Darken
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|127
argument_list|,
literal|63
argument_list|,
literal|63
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Darken
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Lighten
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Lighten
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|63
argument_list|,
literal|63
argument_list|,
literal|63
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Lighten
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|63
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Lighten
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|255
argument_list|,
literal|63
argument_list|,
literal|255
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Lighten
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|63
argument_list|,
literal|127
argument_list|,
literal|127
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Lighten
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|127
argument_list|,
literal|63
argument_list|,
literal|127
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Lighten
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|,
name|QPainter
operator|::
name|CompositionMode_ColorDodge
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|QPainter
operator|::
name|CompositionMode_ColorDodge
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|63
argument_list|,
literal|127
argument_list|,
literal|169
argument_list|,
name|QPainter
operator|::
name|CompositionMode_ColorDodge
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|191
argument_list|,
literal|127
argument_list|,
literal|255
argument_list|,
name|QPainter
operator|::
name|CompositionMode_ColorDodge
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|127
argument_list|,
literal|191
argument_list|,
literal|255
argument_list|,
name|QPainter
operator|::
name|CompositionMode_ColorDodge
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|,
name|QPainter
operator|::
name|CompositionMode_ColorBurn
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|QPainter
operator|::
name|CompositionMode_ColorBurn
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|127
argument_list|,
literal|127
argument_list|,
literal|0
argument_list|,
name|QPainter
operator|::
name|CompositionMode_ColorBurn
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|128
argument_list|,
literal|128
argument_list|,
literal|2
argument_list|,
name|QPainter
operator|::
name|CompositionMode_ColorBurn
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|191
argument_list|,
literal|127
argument_list|,
literal|84
argument_list|,
name|QPainter
operator|::
name|CompositionMode_ColorBurn
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|,
name|QPainter
operator|::
name|CompositionMode_HardLight
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|QPainter
operator|::
name|CompositionMode_HardLight
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|127
argument_list|,
literal|127
argument_list|,
literal|127
argument_list|,
name|QPainter
operator|::
name|CompositionMode_HardLight
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|63
argument_list|,
literal|63
argument_list|,
literal|31
argument_list|,
name|QPainter
operator|::
name|CompositionMode_HardLight
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|127
argument_list|,
literal|63
argument_list|,
literal|63
argument_list|,
name|QPainter
operator|::
name|CompositionMode_HardLight
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|,
name|QPainter
operator|::
name|CompositionMode_SoftLight
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|QPainter
operator|::
name|CompositionMode_SoftLight
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|127
argument_list|,
literal|127
argument_list|,
literal|126
argument_list|,
name|QPainter
operator|::
name|CompositionMode_SoftLight
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|63
argument_list|,
literal|63
argument_list|,
literal|39
argument_list|,
name|QPainter
operator|::
name|CompositionMode_SoftLight
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|127
argument_list|,
literal|63
argument_list|,
literal|62
argument_list|,
name|QPainter
operator|::
name|CompositionMode_SoftLight
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|0
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Difference
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Difference
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|255
argument_list|,
literal|0
argument_list|,
literal|255
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Difference
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|127
argument_list|,
literal|127
argument_list|,
literal|0
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Difference
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|127
argument_list|,
literal|128
argument_list|,
literal|1
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Difference
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|127
argument_list|,
literal|63
argument_list|,
literal|64
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Difference
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|0
argument_list|,
literal|127
argument_list|,
literal|127
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Difference
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|0
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Exclusion
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Exclusion
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|255
argument_list|,
literal|0
argument_list|,
literal|255
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Exclusion
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|127
argument_list|,
literal|127
argument_list|,
literal|127
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Exclusion
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|63
argument_list|,
literal|127
argument_list|,
literal|127
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Exclusion
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|63
argument_list|,
literal|63
argument_list|,
literal|95
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Exclusion
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testCompositionMode
argument_list|(
literal|191
argument_list|,
literal|191
argument_list|,
literal|96
argument_list|,
name|QPainter
operator|::
name|CompositionMode_Exclusion
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|zeroOpacity
name|void
name|tst_QPainter
operator|::
name|zeroOpacity
parameter_list|()
block|{
name|QImage
name|source
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|source
operator|.
name|fill
argument_list|(
literal|0xffffffff
argument_list|)
expr_stmt|;
name|QImage
name|target
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
name|QImage
operator|::
name|Format_RGB32
argument_list|)
decl_stmt|;
name|target
operator|.
name|fill
argument_list|(
literal|0xff000000
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|target
argument_list|)
decl_stmt|;
name|p
operator|.
name|setOpacity
argument_list|(
literal|0.0
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawImage
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|source
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|target
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
literal|0xff000000
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|clippingBug
name|void
name|tst_QPainter
operator|::
name|clippingBug
parameter_list|()
block|{
name|QImage
name|img
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|img
operator|.
name|fill
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QImage
name|expected
init|=
name|img
decl_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|expected
argument_list|)
decl_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|30
argument_list|,
literal|30
argument_list|,
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|QPainterPath
name|path
decl_stmt|;
name|path
operator|.
name|addRect
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|30
argument_list|,
literal|30
argument_list|)
expr_stmt|;
name|path
operator|.
name|addRect
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|30
argument_list|,
literal|30
argument_list|)
expr_stmt|;
name|path
operator|.
name|addRect
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|30
argument_list|,
literal|30
argument_list|)
expr_stmt|;
name|p
operator|.
name|begin
argument_list|(
operator|&
name|img
argument_list|)
expr_stmt|;
name|p
operator|.
name|setClipPath
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|32
argument_list|,
literal|32
argument_list|,
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|img
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|emptyClip
name|void
name|tst_QPainter
operator|::
name|emptyClip
parameter_list|()
block|{
name|QImage
name|img
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|img
argument_list|)
decl_stmt|;
name|p
operator|.
name|setRenderHints
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|)
expr_stmt|;
name|p
operator|.
name|setClipRect
argument_list|(
literal|0
argument_list|,
literal|32
argument_list|,
literal|64
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|64
argument_list|,
literal|64
argument_list|,
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|QPainterPath
name|path
decl_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
literal|64
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
literal|40
argument_list|,
literal|64
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
literal|40
argument_list|,
literal|80
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
literal|0
argument_list|,
literal|80
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillPath
argument_list|(
name|path
argument_list|,
name|Qt
operator|::
name|green
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|drawImage_1x1
name|void
name|tst_QPainter
operator|::
name|drawImage_1x1
parameter_list|()
block|{
name|QImage
name|source
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|source
operator|.
name|fill
argument_list|(
literal|0xffffffff
argument_list|)
expr_stmt|;
name|QImage
name|img
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|img
operator|.
name|fill
argument_list|(
literal|0xff000000
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|img
argument_list|)
decl_stmt|;
name|p
operator|.
name|drawImage
argument_list|(
name|QRectF
argument_list|(
literal|0.9
argument_list|,
literal|0.9
argument_list|,
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|,
name|source
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|QImage
name|expected
init|=
name|img
decl_stmt|;
name|expected
operator|.
name|fill
argument_list|(
literal|0xff000000
argument_list|)
expr_stmt|;
name|p
operator|.
name|begin
argument_list|(
operator|&
name|expected
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|31
argument_list|,
literal|31
argument_list|,
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|img
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|taskQT4444_dontOverflowDashOffset
name|void
name|tst_QPainter
operator|::
name|taskQT4444_dontOverflowDashOffset
parameter_list|()
block|{
name|QPainter
name|p
decl_stmt|;
name|QPen
name|pen
decl_stmt|;
name|pen
operator|.
name|setWidth
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|pen
operator|.
name|setStyle
argument_list|(
name|Qt
operator|::
name|DashDotLine
argument_list|)
expr_stmt|;
name|QPointF
name|point
index|[
literal|4
index|]
decl_stmt|;
name|point
index|[
literal|0
index|]
operator|=
name|QPointF
argument_list|(
literal|182.50868749707968
argument_list|,
literal|347.78457234212630
argument_list|)
expr_stmt|;
name|point
index|[
literal|1
index|]
operator|=
name|QPointF
argument_list|(
literal|182.50868749707968
argument_list|,
literal|107.22501998401277
argument_list|)
expr_stmt|;
name|point
index|[
literal|2
index|]
operator|=
name|QPointF
argument_list|(
literal|182.50868749707968
argument_list|,
literal|107.22501998401277
argument_list|)
expr_stmt|;
name|point
index|[
literal|3
index|]
operator|=
name|QPointF
argument_list|(
literal|520.46600762283651
argument_list|,
literal|107.22501998401277
argument_list|)
expr_stmt|;
name|QImage
name|crashImage
argument_list|(
name|QSize
argument_list|(
literal|1000
argument_list|,
literal|120
argument_list|)
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|p
operator|.
name|begin
argument_list|(
operator|&
name|crashImage
argument_list|)
expr_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|pen
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawLines
argument_list|(
name|point
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|// Don't crash
block|}
end_function
begin_function
DECL|function|painterBegin
name|void
name|tst_QPainter
operator|::
name|painterBegin
parameter_list|()
block|{
name|QImage
name|nullImage
decl_stmt|;
name|QImage
name|indexed8Image
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|,
name|QImage
operator|::
name|Format_Indexed8
argument_list|)
decl_stmt|;
name|QImage
name|rgb32Image
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|,
name|QImage
operator|::
name|Format_RGB32
argument_list|)
decl_stmt|;
name|QImage
name|argb32Image
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|QPainter
name|p
decl_stmt|;
comment|// Painting on null image should fail.
name|QVERIFY
argument_list|(
operator|!
name|p
operator|.
name|begin
argument_list|(
operator|&
name|nullImage
argument_list|)
argument_list|)
expr_stmt|;
comment|// Check that the painter is not messed up by using it on another image.
name|QVERIFY
argument_list|(
name|p
operator|.
name|begin
argument_list|(
operator|&
name|rgb32Image
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|p
operator|.
name|end
argument_list|()
argument_list|)
expr_stmt|;
comment|// If painting on indexed8 image fails, the painter state should still be OK.
if|if
condition|(
name|p
operator|.
name|begin
argument_list|(
operator|&
name|indexed8Image
argument_list|)
condition|)
name|QVERIFY
argument_list|(
name|p
operator|.
name|end
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|p
operator|.
name|begin
argument_list|(
operator|&
name|rgb32Image
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|p
operator|.
name|end
argument_list|()
argument_list|)
expr_stmt|;
comment|// Try opening a painter on the two different images.
name|QVERIFY
argument_list|(
name|p
operator|.
name|begin
argument_list|(
operator|&
name|rgb32Image
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|p
operator|.
name|begin
argument_list|(
operator|&
name|argb32Image
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|p
operator|.
name|end
argument_list|()
argument_list|)
expr_stmt|;
comment|// Try opening two painters on the same image.
name|QVERIFY
argument_list|(
name|p
operator|.
name|begin
argument_list|(
operator|&
name|rgb32Image
argument_list|)
argument_list|)
expr_stmt|;
name|QPainter
name|q
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|q
operator|.
name|begin
argument_list|(
operator|&
name|rgb32Image
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|q
operator|.
name|end
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|p
operator|.
name|end
argument_list|()
argument_list|)
expr_stmt|;
comment|// Try ending an inactive painter.
name|QVERIFY
argument_list|(
operator|!
name|p
operator|.
name|end
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setPenColor
name|void
name|tst_QPainter
operator|::
name|setPenColor
parameter_list|(
name|QPainter
modifier|&
name|p
parameter_list|)
block|{
name|p
operator|.
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
comment|// Setting color, then style
comment|// Should work even though the pen is "NoPen with color", temporarily.
name|QPen
name|newPen
argument_list|(
name|p
operator|.
name|pen
argument_list|()
argument_list|)
decl_stmt|;
name|newPen
operator|.
name|setColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|p
operator|.
name|pen
argument_list|()
operator|.
name|style
argument_list|()
argument_list|,
name|newPen
operator|.
name|style
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|p
operator|.
name|pen
argument_list|()
operator|.
name|style
argument_list|()
argument_list|,
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|newPen
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|p
operator|.
name|pen
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|name
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"#ff0000"
argument_list|)
argument_list|)
expr_stmt|;
name|QPen
name|newPen2
argument_list|(
name|p
operator|.
name|pen
argument_list|()
argument_list|)
decl_stmt|;
name|newPen2
operator|.
name|setStyle
argument_list|(
name|Qt
operator|::
name|SolidLine
argument_list|)
expr_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|newPen2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|p
operator|.
name|pen
argument_list|()
operator|.
name|color
argument_list|()
operator|.
name|name
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"#ff0000"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setPenColorOnImage
name|void
name|tst_QPainter
operator|::
name|setPenColorOnImage
parameter_list|()
block|{
name|QImage
name|img
argument_list|(
name|QSize
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|img
argument_list|)
decl_stmt|;
name|setPenColor
argument_list|(
name|p
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setPenColorOnPixmap
name|void
name|tst_QPainter
operator|::
name|setPenColorOnPixmap
parameter_list|()
block|{
name|QPixmap
name|pix
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|pix
argument_list|)
decl_stmt|;
name|setPenColor
argument_list|(
name|p
argument_list|)
expr_stmt|;
block|}
end_function
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_WIDGETS
end_ifndef
begin_class
DECL|class|TestProxy
class|class
name|TestProxy
super|:
specifier|public
name|QGraphicsProxyWidget
block|{
public|public:
DECL|function|TestProxy
name|TestProxy
parameter_list|()
member_init_list|:
name|QGraphicsProxyWidget
argument_list|()
block|{}
DECL|function|paint
name|void
name|paint
parameter_list|(
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QStyleOptionGraphicsItem
modifier|*
name|option
parameter_list|,
name|QWidget
modifier|*
name|widget
parameter_list|)
block|{
name|QGraphicsProxyWidget
operator|::
name|paint
argument_list|(
name|painter
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|deviceTransform
operator|=
name|painter
operator|->
name|deviceTransform
argument_list|()
expr_stmt|;
block|}
DECL|member|deviceTransform
name|QTransform
name|deviceTransform
decl_stmt|;
block|}
class|;
end_class
begin_class
DECL|class|TestWidget
class|class
name|TestWidget
super|:
specifier|public
name|QWidget
block|{
name|Q_OBJECT
public|public:
DECL|function|TestWidget
name|TestWidget
parameter_list|()
member_init_list|:
name|QWidget
argument_list|()
member_init_list|,
name|painted
argument_list|(
literal|false
argument_list|)
block|{}
DECL|function|paintEvent
name|void
name|paintEvent
parameter_list|(
name|QPaintEvent
modifier|*
parameter_list|)
block|{
name|QPainter
name|p
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|deviceTransform
operator|=
name|p
operator|.
name|deviceTransform
argument_list|()
expr_stmt|;
name|worldTransform
operator|=
name|p
operator|.
name|worldTransform
argument_list|()
expr_stmt|;
name|painted
operator|=
literal|true
expr_stmt|;
block|}
DECL|member|deviceTransform
name|QTransform
name|deviceTransform
decl_stmt|;
DECL|member|worldTransform
name|QTransform
name|worldTransform
decl_stmt|;
DECL|member|painted
name|bool
name|painted
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|QTBUG5939_attachPainterPrivate
name|void
name|tst_QPainter
operator|::
name|QTBUG5939_attachPainterPrivate
parameter_list|()
block|{
name|QWidget
modifier|*
name|w
init|=
operator|new
name|QWidget
argument_list|()
decl_stmt|;
name|QGraphicsScene
modifier|*
name|scene
init|=
operator|new
name|QGraphicsScene
argument_list|()
decl_stmt|;
name|QGraphicsView
modifier|*
name|view
init|=
operator|new
name|QGraphicsView
argument_list|(
name|scene
argument_list|,
name|w
argument_list|)
decl_stmt|;
name|view
operator|->
name|move
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|TestProxy
modifier|*
name|proxy
init|=
operator|new
name|TestProxy
argument_list|()
decl_stmt|;
name|TestWidget
modifier|*
name|widget
init|=
operator|new
name|TestWidget
argument_list|()
decl_stmt|;
name|proxy
operator|->
name|setWidget
argument_list|(
name|widget
argument_list|)
expr_stmt|;
name|scene
operator|->
name|addItem
argument_list|(
name|proxy
argument_list|)
expr_stmt|;
name|proxy
operator|->
name|rotate
argument_list|(
literal|45
argument_list|)
expr_stmt|;
name|w
operator|->
name|resize
argument_list|(
name|scene
operator|->
name|sceneRect
argument_list|()
operator|.
name|size
argument_list|()
operator|.
name|toSize
argument_list|()
argument_list|)
expr_stmt|;
name|w
operator|->
name|show
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|widget
operator|->
name|painted
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|widget
operator|->
name|worldTransform
operator|.
name|isIdentity
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|->
name|deviceTransform
argument_list|,
name|proxy
operator|->
name|deviceTransform
argument_list|)
expr_stmt|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_function
DECL|function|clipBoundingRect
name|void
name|tst_QPainter
operator|::
name|clipBoundingRect
parameter_list|()
block|{
name|QPixmap
name|pix
argument_list|(
literal|500
argument_list|,
literal|500
argument_list|)
decl_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|pix
argument_list|)
decl_stmt|;
comment|// Test a basic rectangle
name|p
operator|.
name|setClipRect
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|200
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|p
operator|.
name|clipBoundingRect
argument_list|()
operator|.
name|contains
argument_list|(
name|QRectF
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|200
argument_list|,
literal|100
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|p
operator|.
name|clipBoundingRect
argument_list|()
operator|.
name|contains
argument_list|(
name|QRectF
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|300
argument_list|,
literal|200
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|setClipRect
argument_list|(
literal|120
argument_list|,
literal|120
argument_list|,
literal|20
argument_list|,
literal|20
argument_list|,
name|Qt
operator|::
name|IntersectClip
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|p
operator|.
name|clipBoundingRect
argument_list|()
operator|.
name|contains
argument_list|(
name|QRect
argument_list|(
literal|120
argument_list|,
literal|120
argument_list|,
literal|20
argument_list|,
literal|20
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|p
operator|.
name|clipBoundingRect
argument_list|()
operator|.
name|contains
argument_list|(
name|QRectF
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|200
argument_list|,
literal|100
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// Test a basic float rectangle
name|p
operator|.
name|setClipRect
argument_list|(
name|QRectF
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|200
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|p
operator|.
name|clipBoundingRect
argument_list|()
operator|.
name|contains
argument_list|(
name|QRectF
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|200
argument_list|,
literal|100
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|p
operator|.
name|clipBoundingRect
argument_list|()
operator|.
name|contains
argument_list|(
name|QRectF
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|300
argument_list|,
literal|200
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|setClipRect
argument_list|(
name|QRectF
argument_list|(
literal|120
argument_list|,
literal|120
argument_list|,
literal|20
argument_list|,
literal|20
argument_list|)
argument_list|,
name|Qt
operator|::
name|IntersectClip
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|p
operator|.
name|clipBoundingRect
argument_list|()
operator|.
name|contains
argument_list|(
name|QRect
argument_list|(
literal|120
argument_list|,
literal|120
argument_list|,
literal|20
argument_list|,
literal|20
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|p
operator|.
name|clipBoundingRect
argument_list|()
operator|.
name|contains
argument_list|(
name|QRectF
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|200
argument_list|,
literal|100
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// Test a basic path + region
name|QPainterPath
name|path
decl_stmt|;
name|path
operator|.
name|addRect
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|200
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|p
operator|.
name|setClipPath
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|p
operator|.
name|clipBoundingRect
argument_list|()
operator|.
name|contains
argument_list|(
name|QRectF
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|200
argument_list|,
literal|100
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|p
operator|.
name|clipBoundingRect
argument_list|()
operator|.
name|contains
argument_list|(
name|QRectF
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|300
argument_list|,
literal|200
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|setClipRegion
argument_list|(
name|QRegion
argument_list|(
literal|120
argument_list|,
literal|120
argument_list|,
literal|20
argument_list|,
literal|20
argument_list|)
argument_list|,
name|Qt
operator|::
name|IntersectClip
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|p
operator|.
name|clipBoundingRect
argument_list|()
operator|.
name|contains
argument_list|(
name|QRect
argument_list|(
literal|120
argument_list|,
literal|120
argument_list|,
literal|20
argument_list|,
literal|20
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|p
operator|.
name|clipBoundingRect
argument_list|()
operator|.
name|contains
argument_list|(
name|QRectF
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|200
argument_list|,
literal|100
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|setClipRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|500
argument_list|,
literal|500
argument_list|)
expr_stmt|;
name|p
operator|.
name|translate
argument_list|(
literal|250
argument_list|,
literal|250
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|360
condition|;
operator|++
name|i
control|)
block|{
name|p
operator|.
name|rotate
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|p
operator|.
name|setClipRect
argument_list|(
operator|-
literal|100
argument_list|,
operator|-
literal|100
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|,
name|Qt
operator|::
name|IntersectClip
argument_list|)
expr_stmt|;
block|}
name|QVERIFY
argument_list|(
name|p
operator|.
name|clipBoundingRect
argument_list|()
operator|.
name|contains
argument_list|(
name|QRectF
argument_list|(
operator|-
literal|100
argument_list|,
operator|-
literal|100
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|p
operator|.
name|clipBoundingRect
argument_list|()
operator|.
name|contains
argument_list|(
name|QRectF
argument_list|(
operator|-
literal|250
argument_list|,
operator|-
literal|250
argument_list|,
literal|500
argument_list|,
literal|500
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_if
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_MAC
argument_list|)
end_if
begin_comment
comment|// Only Mac supports sub pixel positions in raster engine currently
end_comment
begin_function
DECL|function|drawText_subPixelPositionsInRaster_qtbug5053
name|void
name|tst_QPainter
operator|::
name|drawText_subPixelPositionsInRaster_qtbug5053
parameter_list|()
block|{
name|QFontMetricsF
name|fm
argument_list|(
name|qApp
operator|->
name|font
argument_list|()
argument_list|)
decl_stmt|;
name|QImage
name|baseLine
argument_list|(
name|fm
operator|.
name|width
argument_list|(
name|QChar
operator|::
name|fromLatin1
argument_list|(
literal|'e'
argument_list|)
argument_list|)
argument_list|,
name|fm
operator|.
name|height
argument_list|()
argument_list|,
name|QImage
operator|::
name|Format_RGB32
argument_list|)
decl_stmt|;
name|baseLine
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
block|{
name|QPainter
name|p
argument_list|(
operator|&
name|baseLine
argument_list|)
decl_stmt|;
name|p
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Qt4CompatiblePainting
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawText
argument_list|(
literal|0
argument_list|,
name|fm
operator|.
name|ascent
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"e"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|bool
name|foundDifferentRasterization
init|=
literal|false
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
literal|12
condition|;
operator|++
name|i
control|)
block|{
name|QImage
name|comparison
argument_list|(
name|baseLine
operator|.
name|size
argument_list|()
argument_list|,
name|QImage
operator|::
name|Format_RGB32
argument_list|)
decl_stmt|;
name|comparison
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
block|{
name|QPainter
name|p
argument_list|(
operator|&
name|comparison
argument_list|)
decl_stmt|;
name|p
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Qt4CompatiblePainting
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawText
argument_list|(
name|QPointF
argument_list|(
name|i
operator|/
literal|12.0
argument_list|,
name|fm
operator|.
name|ascent
argument_list|()
argument_list|)
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"e"
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|comparison
operator|!=
name|baseLine
condition|)
block|{
name|foundDifferentRasterization
operator|=
literal|true
expr_stmt|;
break|break;
block|}
block|}
name|QVERIFY
argument_list|(
name|foundDifferentRasterization
argument_list|)
expr_stmt|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_function
DECL|function|drawPointScaled
name|void
name|tst_QPainter
operator|::
name|drawPointScaled
parameter_list|()
block|{
name|QImage
name|image
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|,
name|QImage
operator|::
name|Format_RGB32
argument_list|)
decl_stmt|;
name|image
operator|.
name|fill
argument_list|(
literal|0xffffffff
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|image
argument_list|)
decl_stmt|;
name|p
operator|.
name|scale
argument_list|(
literal|0.1
argument_list|,
literal|0.1
argument_list|)
expr_stmt|;
name|QPen
name|pen
decl_stmt|;
name|pen
operator|.
name|setWidth
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|pen
operator|.
name|setColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|pen
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|image
operator|.
name|pixel
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|,
literal|0xffff0000
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|GradientProducer
class|class
name|GradientProducer
super|:
specifier|public
name|QThread
block|{
protected|protected:
name|void
name|run
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_function
DECL|function|run
name|void
name|GradientProducer
operator|::
name|run
parameter_list|()
block|{
name|QImage
name|image
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
name|QImage
operator|::
name|Format_RGB32
argument_list|)
decl_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|image
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|1000
condition|;
operator|++
name|i
control|)
block|{
name|QLinearGradient
name|g
decl_stmt|;
name|g
operator|.
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|QColor
argument_list|(
name|i
operator|%
literal|256
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|g
operator|.
name|setColorAt
argument_list|(
literal|1
argument_list|,
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
name|image
operator|.
name|rect
argument_list|()
argument_list|,
name|g
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|QTBUG14614_gradientCacheRaceCondition
name|void
name|tst_QPainter
operator|::
name|QTBUG14614_gradientCacheRaceCondition
parameter_list|()
block|{
specifier|const
name|int
name|threadCount
init|=
literal|16
decl_stmt|;
name|GradientProducer
name|producers
index|[
name|threadCount
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|threadCount
condition|;
operator|++
name|i
control|)
name|producers
index|[
name|i
index|]
operator|.
name|start
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|threadCount
condition|;
operator|++
name|i
control|)
name|producers
index|[
name|i
index|]
operator|.
name|wait
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|drawTextOpacity
name|void
name|tst_QPainter
operator|::
name|drawTextOpacity
parameter_list|()
block|{
name|QImage
name|image
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|,
name|QImage
operator|::
name|Format_RGB32
argument_list|)
decl_stmt|;
name|image
operator|.
name|fill
argument_list|(
literal|0xffffffff
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|image
argument_list|)
decl_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|QColor
argument_list|(
literal|"#6F6F6F"
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|setOpacity
argument_list|(
literal|0.5
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawText
argument_list|(
literal|5
argument_list|,
literal|30
argument_list|,
name|QLatin1String
argument_list|(
literal|"Qt"
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|QImage
name|copy
init|=
name|image
decl_stmt|;
name|image
operator|.
name|fill
argument_list|(
literal|0xffffffff
argument_list|)
expr_stmt|;
name|p
operator|.
name|begin
argument_list|(
operator|&
name|image
argument_list|)
expr_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|QColor
argument_list|(
literal|"#6F6F6F"
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawLine
argument_list|(
operator|-
literal|10
argument_list|,
operator|-
literal|10
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|p
operator|.
name|setOpacity
argument_list|(
literal|0.5
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawText
argument_list|(
literal|5
argument_list|,
literal|30
argument_list|,
name|QLatin1String
argument_list|(
literal|"Qt"
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|image
argument_list|,
name|copy
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|QTBUG17053_zeroDashPattern
name|void
name|tst_QPainter
operator|::
name|QTBUG17053_zeroDashPattern
parameter_list|()
block|{
name|QImage
name|image
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|,
name|QImage
operator|::
name|Format_RGB32
argument_list|)
decl_stmt|;
name|image
operator|.
name|fill
argument_list|(
literal|0xffffffff
argument_list|)
expr_stmt|;
name|QImage
name|original
init|=
name|image
decl_stmt|;
name|QVector
argument_list|<
name|qreal
argument_list|>
name|pattern
decl_stmt|;
name|pattern
operator|<<
name|qreal
argument_list|(
literal|0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|image
argument_list|)
decl_stmt|;
name|QPen
name|pen
argument_list|(
name|Qt
operator|::
name|black
argument_list|,
literal|2.0
argument_list|)
decl_stmt|;
name|pen
operator|.
name|setDashPattern
argument_list|(
name|pattern
argument_list|)
expr_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|pen
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawLine
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|image
operator|.
name|width
argument_list|()
argument_list|,
name|image
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|image
argument_list|,
name|original
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|TextDrawerThread
class|class
name|TextDrawerThread
super|:
specifier|public
name|QThread
block|{
public|public:
name|void
name|run
parameter_list|()
function_decl|;
DECL|member|rendering
name|QImage
name|rendering
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|run
name|void
name|TextDrawerThread
operator|::
name|run
parameter_list|()
block|{
name|rendering
operator|=
name|QImage
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
expr_stmt|;
name|rendering
operator|.
name|fill
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|rendering
argument_list|)
decl_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
name|Qt
operator|::
name|blue
argument_list|)
expr_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|Qt
operator|::
name|green
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawText
argument_list|(
literal|20
argument_list|,
literal|20
argument_list|,
literal|"some text"
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|drawTextOutsideGuiThread
name|void
name|tst_QPainter
operator|::
name|drawTextOutsideGuiThread
parameter_list|()
block|{
name|QImage
name|referenceRendering
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|referenceRendering
operator|.
name|fill
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|referenceRendering
argument_list|)
decl_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
name|Qt
operator|::
name|blue
argument_list|)
expr_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|Qt
operator|::
name|green
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawText
argument_list|(
literal|20
argument_list|,
literal|20
argument_list|,
literal|"some text"
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|TextDrawerThread
name|t
decl_stmt|;
name|t
operator|.
name|start
argument_list|()
expr_stmt|;
name|t
operator|.
name|wait
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|referenceRendering
argument_list|,
name|t
operator|.
name|rendering
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|drawTextWithComplexBrush
name|void
name|tst_QPainter
operator|::
name|drawTextWithComplexBrush
parameter_list|()
block|{
name|QImage
name|texture
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|texture
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|QImage
name|image
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|image
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|image
argument_list|)
decl_stmt|;
name|QFont
name|f
init|=
name|p
operator|.
name|font
argument_list|()
decl_stmt|;
name|f
operator|.
name|setPixelSize
argument_list|(
literal|70
argument_list|)
expr_stmt|;
name|p
operator|.
name|setFont
argument_list|(
name|f
argument_list|)
expr_stmt|;
name|QBrush
name|brush
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
decl_stmt|;
name|brush
operator|.
name|setTextureImage
argument_list|(
name|texture
argument_list|)
expr_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|QPen
argument_list|(
name|brush
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawText
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|"Hello World"
argument_list|)
expr_stmt|;
name|int
name|paintedPixels
init|=
name|getPaintedPixels
argument_list|(
name|image
argument_list|,
name|Qt
operator|::
name|white
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|paintedPixels
operator|>
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|QTBUG26013_squareCapStroke
name|void
name|tst_QPainter
operator|::
name|QTBUG26013_squareCapStroke
parameter_list|()
block|{
name|QImage
name|image
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|,
name|QImage
operator|::
name|Format_RGB32
argument_list|)
decl_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|image
argument_list|)
decl_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|QPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|,
literal|0
argument_list|,
name|Qt
operator|::
name|SolidLine
argument_list|,
name|Qt
operator|::
name|SquareCap
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|3
condition|;
operator|++
name|i
control|)
block|{
name|qreal
name|d
init|=
name|i
operator|/
literal|3.0
decl_stmt|;
name|image
operator|.
name|fill
argument_list|(
literal|0xffffffff
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawLine
argument_list|(
name|QLineF
argument_list|(
literal|0
argument_list|,
name|d
argument_list|,
literal|0
argument_list|,
name|d
operator|+
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawLine
argument_list|(
name|QLineF
argument_list|(
literal|1
argument_list|,
name|d
argument_list|,
literal|3
argument_list|,
name|d
argument_list|)
argument_list|)
expr_stmt|;
comment|// ensure that a horizontal line and a vertical line with square cap round up (downwards) at the same time
name|QCOMPARE
argument_list|(
name|image
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|image
operator|.
name|pixel
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|image
operator|.
name|fill
argument_list|(
literal|0xffffffff
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawLine
argument_list|(
name|QLineF
argument_list|(
name|d
argument_list|,
literal|0
argument_list|,
name|d
operator|+
literal|2
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawLine
argument_list|(
name|QLineF
argument_list|(
name|d
argument_list|,
literal|1
argument_list|,
name|d
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
comment|// ensure that a vertical line and a horizontal line with square cap round up (to the right) at the same time
name|QCOMPARE
argument_list|(
name|image
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|image
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|QTBUG25153_drawLine
name|void
name|tst_QPainter
operator|::
name|QTBUG25153_drawLine
parameter_list|()
block|{
name|QImage
name|image
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
name|QImage
operator|::
name|Format_RGB32
argument_list|)
decl_stmt|;
name|QVector
argument_list|<
name|Qt
operator|::
name|PenCapStyle
argument_list|>
name|styles
decl_stmt|;
name|styles
operator|<<
name|Qt
operator|::
name|FlatCap
operator|<<
name|Qt
operator|::
name|SquareCap
operator|<<
name|Qt
operator|::
name|RoundCap
expr_stmt|;
foreach|foreach
control|(
name|Qt
operator|::
name|PenCapStyle
name|style
decl|,
name|styles
control|)
block|{
name|image
operator|.
name|fill
argument_list|(
literal|0xffffffff
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|image
argument_list|)
decl_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|QPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|,
literal|0
argument_list|,
name|Qt
operator|::
name|SolidLine
argument_list|,
name|style
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawLine
argument_list|(
name|QLineF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|image
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
literal|0xff000000
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|image
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
literal|0xffffffff
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|image
operator|.
name|pixel
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|,
literal|0xffffffff
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|blendARGBonRGB_data
name|void
name|tst_QPainter
operator|::
name|blendARGBonRGB_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QImage
operator|::
name|Format
argument_list|>
argument_list|(
literal|"dst_format"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QImage
operator|::
name|Format
argument_list|>
argument_list|(
literal|"src_format"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QPainter
operator|::
name|CompositionMode
argument_list|>
argument_list|(
literal|"compositionMode"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QRgb
argument_list|>
argument_list|(
literal|"color"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expected_red"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ARGB over ARGB32"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_ARGB32
operator|<<
name|QImage
operator|::
name|Format_ARGB32
operator|<<
name|QPainter
operator|::
name|CompositionMode_SourceOver
operator|<<
name|qRgba
argument_list|(
literal|255
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|127
argument_list|)
operator|<<
literal|127
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ARGB_PM over ARGB32"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_ARGB32
operator|<<
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
operator|<<
name|QPainter
operator|::
name|CompositionMode_SourceOver
operator|<<
name|qRgba
argument_list|(
literal|127
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|127
argument_list|)
operator|<<
literal|127
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ARGB source ARGB32"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_ARGB32
operator|<<
name|QImage
operator|::
name|Format_ARGB32
operator|<<
name|QPainter
operator|::
name|CompositionMode_Source
operator|<<
name|qRgba
argument_list|(
literal|255
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|127
argument_list|)
operator|<<
literal|255
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ARGB_PM source ARGB32"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_ARGB32
operator|<<
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
operator|<<
name|QPainter
operator|::
name|CompositionMode_Source
operator|<<
name|qRgba
argument_list|(
literal|127
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|127
argument_list|)
operator|<<
literal|255
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ARGB source-in ARGB32"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_ARGB32
operator|<<
name|QImage
operator|::
name|Format_ARGB32
operator|<<
name|QPainter
operator|::
name|CompositionMode_SourceIn
operator|<<
name|qRgba
argument_list|(
literal|255
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|127
argument_list|)
operator|<<
literal|255
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ARGB_PM source-in ARGB32"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_ARGB32
operator|<<
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
operator|<<
name|QPainter
operator|::
name|CompositionMode_SourceIn
operator|<<
name|qRgba
argument_list|(
literal|127
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|127
argument_list|)
operator|<<
literal|255
expr_stmt|;
comment|// Only ARGB does inverse premultiply, on the rest over and source gives similar results:
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ARGB over RGB32"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB32
operator|<<
name|QImage
operator|::
name|Format_ARGB32
operator|<<
name|QPainter
operator|::
name|CompositionMode_SourceOver
operator|<<
name|qRgba
argument_list|(
literal|255
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|127
argument_list|)
operator|<<
literal|127
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ARGB_PM over RGB32"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB32
operator|<<
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
operator|<<
name|QPainter
operator|::
name|CompositionMode_SourceOver
operator|<<
name|qRgba
argument_list|(
literal|127
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|127
argument_list|)
operator|<<
literal|127
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ARGB source RGB32"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB32
operator|<<
name|QImage
operator|::
name|Format_ARGB32
operator|<<
name|QPainter
operator|::
name|CompositionMode_Source
operator|<<
name|qRgba
argument_list|(
literal|255
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|127
argument_list|)
operator|<<
literal|127
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ARGB_PM source RGB32"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB32
operator|<<
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
operator|<<
name|QPainter
operator|::
name|CompositionMode_Source
operator|<<
name|qRgba
argument_list|(
literal|127
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|127
argument_list|)
operator|<<
literal|127
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ARGB source-in RGB32"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB32
operator|<<
name|QImage
operator|::
name|Format_ARGB32
operator|<<
name|QPainter
operator|::
name|CompositionMode_SourceIn
operator|<<
name|qRgba
argument_list|(
literal|255
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|127
argument_list|)
operator|<<
literal|127
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ARGB_PM source-in RGB32"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB32
operator|<<
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
operator|<<
name|QPainter
operator|::
name|CompositionMode_SourceIn
operator|<<
name|qRgba
argument_list|(
literal|127
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|127
argument_list|)
operator|<<
literal|127
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ARGB over RGB888"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB888
operator|<<
name|QImage
operator|::
name|Format_ARGB32
operator|<<
name|QPainter
operator|::
name|CompositionMode_SourceOver
operator|<<
name|qRgba
argument_list|(
literal|255
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|127
argument_list|)
operator|<<
literal|127
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ARGB_PM over RGB888"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB888
operator|<<
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
operator|<<
name|QPainter
operator|::
name|CompositionMode_SourceOver
operator|<<
name|qRgba
argument_list|(
literal|127
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|127
argument_list|)
operator|<<
literal|127
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ARGB source RGB888"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB888
operator|<<
name|QImage
operator|::
name|Format_ARGB32
operator|<<
name|QPainter
operator|::
name|CompositionMode_Source
operator|<<
name|qRgba
argument_list|(
literal|255
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|127
argument_list|)
operator|<<
literal|127
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ARGB_PM source RGB888"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB888
operator|<<
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
operator|<<
name|QPainter
operator|::
name|CompositionMode_Source
operator|<<
name|qRgba
argument_list|(
literal|127
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|127
argument_list|)
operator|<<
literal|127
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ARGB source-in RGB888"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB888
operator|<<
name|QImage
operator|::
name|Format_ARGB32
operator|<<
name|QPainter
operator|::
name|CompositionMode_SourceIn
operator|<<
name|qRgba
argument_list|(
literal|255
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|127
argument_list|)
operator|<<
literal|127
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ARGB_PM source-in RGB888"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB888
operator|<<
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
operator|<<
name|QPainter
operator|::
name|CompositionMode_SourceIn
operator|<<
name|qRgba
argument_list|(
literal|127
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|127
argument_list|)
operator|<<
literal|127
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ARGB over RGBx8888"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGBX8888
operator|<<
name|QImage
operator|::
name|Format_ARGB32
operator|<<
name|QPainter
operator|::
name|CompositionMode_SourceOver
operator|<<
name|qRgba
argument_list|(
literal|255
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|127
argument_list|)
operator|<<
literal|127
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ARGB_PM over RGBx8888"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGBX8888
operator|<<
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
operator|<<
name|QPainter
operator|::
name|CompositionMode_SourceOver
operator|<<
name|qRgba
argument_list|(
literal|127
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|127
argument_list|)
operator|<<
literal|127
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ARGB source RGBx8888"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGBX8888
operator|<<
name|QImage
operator|::
name|Format_ARGB32
operator|<<
name|QPainter
operator|::
name|CompositionMode_Source
operator|<<
name|qRgba
argument_list|(
literal|255
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|127
argument_list|)
operator|<<
literal|127
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ARGB_PM source RGBx8888"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGBX8888
operator|<<
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
operator|<<
name|QPainter
operator|::
name|CompositionMode_Source
operator|<<
name|qRgba
argument_list|(
literal|127
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|127
argument_list|)
operator|<<
literal|127
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ARGB source-in RGBx8888"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGBX8888
operator|<<
name|QImage
operator|::
name|Format_ARGB32
operator|<<
name|QPainter
operator|::
name|CompositionMode_SourceIn
operator|<<
name|qRgba
argument_list|(
literal|255
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|127
argument_list|)
operator|<<
literal|127
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ARGB_PM source-in RGBx8888"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGBX8888
operator|<<
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
operator|<<
name|QPainter
operator|::
name|CompositionMode_SourceIn
operator|<<
name|qRgba
argument_list|(
literal|127
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|127
argument_list|)
operator|<<
literal|127
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ARGB over RGB16"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB16
operator|<<
name|QImage
operator|::
name|Format_ARGB32
operator|<<
name|QPainter
operator|::
name|CompositionMode_SourceOver
operator|<<
name|qRgba
argument_list|(
literal|255
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|127
argument_list|)
operator|<<
literal|123
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ARGB_PM over RGB16"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB16
operator|<<
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
operator|<<
name|QPainter
operator|::
name|CompositionMode_SourceOver
operator|<<
name|qRgba
argument_list|(
literal|127
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|127
argument_list|)
operator|<<
literal|123
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ARGB source RGB16"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB16
operator|<<
name|QImage
operator|::
name|Format_ARGB32
operator|<<
name|QPainter
operator|::
name|CompositionMode_Source
operator|<<
name|qRgba
argument_list|(
literal|255
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|127
argument_list|)
operator|<<
literal|123
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ARGB_PM source RGB16"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB16
operator|<<
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
operator|<<
name|QPainter
operator|::
name|CompositionMode_Source
operator|<<
name|qRgba
argument_list|(
literal|127
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|127
argument_list|)
operator|<<
literal|123
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ARGB source-in RGB16"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB16
operator|<<
name|QImage
operator|::
name|Format_ARGB32
operator|<<
name|QPainter
operator|::
name|CompositionMode_SourceIn
operator|<<
name|qRgba
argument_list|(
literal|255
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|127
argument_list|)
operator|<<
literal|123
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ARGB_PM source-in RGB16"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB16
operator|<<
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
operator|<<
name|QPainter
operator|::
name|CompositionMode_SourceIn
operator|<<
name|qRgba
argument_list|(
literal|127
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|127
argument_list|)
operator|<<
literal|123
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ARGB over RGB666"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB666
operator|<<
name|QImage
operator|::
name|Format_ARGB32
operator|<<
name|QPainter
operator|::
name|CompositionMode_SourceOver
operator|<<
name|qRgba
argument_list|(
literal|255
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|127
argument_list|)
operator|<<
literal|125
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ARGB_PM over RGB666"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB666
operator|<<
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
operator|<<
name|QPainter
operator|::
name|CompositionMode_SourceOver
operator|<<
name|qRgba
argument_list|(
literal|127
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|127
argument_list|)
operator|<<
literal|125
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ARGB source RGB666"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB666
operator|<<
name|QImage
operator|::
name|Format_ARGB32
operator|<<
name|QPainter
operator|::
name|CompositionMode_Source
operator|<<
name|qRgba
argument_list|(
literal|255
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|127
argument_list|)
operator|<<
literal|125
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ARGB_PM source RGB666"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB666
operator|<<
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
operator|<<
name|QPainter
operator|::
name|CompositionMode_Source
operator|<<
name|qRgba
argument_list|(
literal|127
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|127
argument_list|)
operator|<<
literal|125
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ARGB source-in RGB666"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB666
operator|<<
name|QImage
operator|::
name|Format_ARGB32
operator|<<
name|QPainter
operator|::
name|CompositionMode_SourceIn
operator|<<
name|qRgba
argument_list|(
literal|255
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|127
argument_list|)
operator|<<
literal|125
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ARGB_PM source-in RGB666"
argument_list|)
operator|<<
name|QImage
operator|::
name|Format_RGB666
operator|<<
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
operator|<<
name|QPainter
operator|::
name|CompositionMode_SourceIn
operator|<<
name|qRgba
argument_list|(
literal|127
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|127
argument_list|)
operator|<<
literal|125
expr_stmt|;
block|}
end_function
begin_function
DECL|function|blendARGBonRGB
name|void
name|tst_QPainter
operator|::
name|blendARGBonRGB
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QImage
operator|::
name|Format
argument_list|,
name|dst_format
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QImage
operator|::
name|Format
argument_list|,
name|src_format
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QPainter
operator|::
name|CompositionMode
argument_list|,
name|compositionMode
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QRgb
argument_list|,
name|color
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expected_red
argument_list|)
expr_stmt|;
name|QImage
name|imageRgb
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|,
name|dst_format
argument_list|)
decl_stmt|;
name|QImage
name|imageArgb
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|,
name|src_format
argument_list|)
decl_stmt|;
name|QPainter
name|painter
decl_stmt|;
name|imageArgb
operator|.
name|fill
argument_list|(
name|color
argument_list|)
expr_stmt|;
name|imageRgb
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|painter
operator|.
name|begin
argument_list|(
operator|&
name|imageRgb
argument_list|)
expr_stmt|;
name|painter
operator|.
name|setCompositionMode
argument_list|(
name|compositionMode
argument_list|)
expr_stmt|;
name|painter
operator|.
name|drawImage
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|imageArgb
argument_list|)
expr_stmt|;
name|painter
operator|.
name|end
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qRed
argument_list|(
name|imageRgb
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|,
name|expected_red
argument_list|)
expr_stmt|;
block|}
end_function
begin_enum
DECL|enum|CosmeticStrokerPaint
enum|enum
name|CosmeticStrokerPaint
block|{
DECL|enumerator|Antialiasing
name|Antialiasing
block|,
DECL|enumerator|Dashing
name|Dashing
block|}
enum|;
end_enum
begin_function
DECL|function|paint_func
specifier|static
name|void
name|paint_func
parameter_list|(
name|QPainter
modifier|*
name|p
parameter_list|,
name|CosmeticStrokerPaint
name|type
parameter_list|)
block|{
name|p
operator|->
name|save
argument_list|()
expr_stmt|;
switch|switch
condition|(
name|type
condition|)
block|{
case|case
name|Antialiasing
case|:
name|p
operator|->
name|setPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|p
operator|->
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
literal|4
argument_list|,
literal|8
argument_list|,
literal|42
argument_list|,
literal|42
argument_list|)
expr_stmt|;
break|break;
case|case
name|Dashing
case|:
name|p
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|,
literal|1
argument_list|,
name|Qt
operator|::
name|DashLine
argument_list|,
name|Qt
operator|::
name|RoundCap
argument_list|,
name|Qt
operator|::
name|MiterJoin
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
literal|8
argument_list|,
literal|8
argument_list|,
literal|42
argument_list|,
literal|8
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
literal|42
argument_list|,
literal|8
argument_list|,
literal|42
argument_list|,
literal|42
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
literal|42
argument_list|,
literal|42
argument_list|,
literal|8
argument_list|,
literal|42
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
literal|8
argument_list|,
literal|42
argument_list|,
literal|8
argument_list|,
literal|8
argument_list|)
expr_stmt|;
break|break;
default|default:
name|Q_ASSERT
argument_list|(
literal|false
argument_list|)
expr_stmt|;
break|break;
block|}
name|p
operator|->
name|restore
argument_list|()
expr_stmt|;
block|}
end_function
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|CosmeticStrokerPaint
argument_list|)
end_macro
begin_function
DECL|function|cosmeticStrokerClipping_data
name|void
name|tst_QPainter
operator|::
name|cosmeticStrokerClipping_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|CosmeticStrokerPaint
argument_list|>
argument_list|(
literal|"paint"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"antialiasing_paint"
argument_list|)
operator|<<
name|Antialiasing
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"dashing_paint"
argument_list|)
operator|<<
name|Dashing
expr_stmt|;
block|}
end_function
begin_function
DECL|function|cosmeticStrokerClipping
name|void
name|tst_QPainter
operator|::
name|cosmeticStrokerClipping
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|CosmeticStrokerPaint
argument_list|,
name|paint
argument_list|)
expr_stmt|;
name|QImage
name|image
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
name|QImage
operator|::
name|Format_RGB32
argument_list|)
decl_stmt|;
name|image
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|image
argument_list|)
decl_stmt|;
name|paint_func
argument_list|(
operator|&
name|p
argument_list|,
name|paint
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|QImage
name|old
init|=
name|image
operator|.
name|copy
argument_list|()
decl_stmt|;
name|image
operator|.
name|paintEngine
argument_list|()
operator|->
name|setSystemClip
argument_list|(
name|QRect
argument_list|(
literal|10
argument_list|,
literal|0
argument_list|,
name|image
operator|.
name|width
argument_list|()
operator|-
literal|10
argument_list|,
name|image
operator|.
name|height
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|begin
argument_list|(
operator|&
name|image
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
name|image
operator|.
name|rect
argument_list|()
argument_list|,
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|paint_func
argument_list|(
operator|&
name|p
argument_list|,
name|paint
argument_list|)
expr_stmt|;
comment|// doing same paint operation again with different system clip should not change the image
name|QCOMPARE
argument_list|(
name|old
argument_list|,
name|image
argument_list|)
expr_stmt|;
name|old
operator|=
name|image
expr_stmt|;
name|p
operator|.
name|setClipRect
argument_list|(
name|QRect
argument_list|(
literal|20
argument_list|,
literal|20
argument_list|,
literal|30
argument_list|,
literal|30
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
name|image
operator|.
name|rect
argument_list|()
argument_list|,
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|paint_func
argument_list|(
operator|&
name|p
argument_list|,
name|paint
argument_list|)
expr_stmt|;
comment|// ditto for regular clips
name|QCOMPARE
argument_list|(
name|old
argument_list|,
name|image
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QPainter
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qpainter.moc"
end_include
end_unit
