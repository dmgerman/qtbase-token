begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<limits.h>
end_include
begin_include
include|#
directive|include
file|<qcolor.h>
end_include
begin_include
include|#
directive|include
file|<qdebug.h>
end_include
begin_class
DECL|class|tst_QColor
class|class
name|tst_QColor
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
name|tst_QColor
parameter_list|()
constructor_decl|;
private|private
name|slots
private|:
name|void
name|getSetCheck
parameter_list|()
function_decl|;
name|void
name|isValid_data
parameter_list|()
function_decl|;
name|void
name|isValid
parameter_list|()
function_decl|;
name|void
name|name_data
parameter_list|()
function_decl|;
name|void
name|name
parameter_list|()
function_decl|;
name|void
name|setNamedColor
parameter_list|()
function_decl|;
name|void
name|constructNamedColorWithSpace
parameter_list|()
function_decl|;
name|void
name|colorNames
parameter_list|()
function_decl|;
name|void
name|spec
parameter_list|()
function_decl|;
name|void
name|globalColors_data
parameter_list|()
function_decl|;
name|void
name|globalColors
parameter_list|()
function_decl|;
name|void
name|setRed
parameter_list|()
function_decl|;
name|void
name|setGreen
parameter_list|()
function_decl|;
name|void
name|setBlue
parameter_list|()
function_decl|;
name|void
name|setRgb
parameter_list|()
function_decl|;
name|void
name|setRgba
parameter_list|()
function_decl|;
name|void
name|setHsv
parameter_list|()
function_decl|;
name|void
name|setCmyk
parameter_list|()
function_decl|;
name|void
name|setHsl
parameter_list|()
function_decl|;
name|void
name|toRgb_data
parameter_list|()
function_decl|;
name|void
name|toRgb
parameter_list|()
function_decl|;
name|void
name|toRgbNonDestructive
parameter_list|()
function_decl|;
name|void
name|toHsv_data
parameter_list|()
function_decl|;
name|void
name|toHsv
parameter_list|()
function_decl|;
name|void
name|toHsvNonDestructive
parameter_list|()
function_decl|;
name|void
name|toCmyk_data
parameter_list|()
function_decl|;
name|void
name|toCmyk
parameter_list|()
function_decl|;
name|void
name|toCmykNonDestructive
parameter_list|()
function_decl|;
name|void
name|toHsl_data
parameter_list|()
function_decl|;
name|void
name|toHsl
parameter_list|()
function_decl|;
empty_stmt|;
name|void
name|toHslNonDestructive
parameter_list|()
function_decl|;
name|void
name|convertTo
parameter_list|()
function_decl|;
name|void
name|light
parameter_list|()
function_decl|;
name|void
name|dark
parameter_list|()
function_decl|;
name|void
name|specConstructor_data
parameter_list|()
function_decl|;
name|void
name|specConstructor
parameter_list|()
function_decl|;
name|void
name|achromaticHslHue
parameter_list|()
function_decl|;
ifdef|#
directive|ifdef
name|Q_WS_X11
name|void
name|setallowX11ColorNames
parameter_list|()
function_decl|;
endif|#
directive|endif
block|}
class|;
end_class
begin_comment
comment|// Testing get/set functions
end_comment
begin_function
DECL|function|getSetCheck
name|void
name|tst_QColor
operator|::
name|getSetCheck
parameter_list|()
block|{
name|QColor
name|obj1
decl_stmt|;
comment|// int QColor::alpha()
comment|// void QColor::setAlpha(int)
name|obj1
operator|.
name|setAlpha
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|alpha
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setAlpha
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|alpha
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// range<0, 255>
name|obj1
operator|.
name|setAlpha
argument_list|(
name|INT_MIN
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|alpha
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// range<0, 255>
name|obj1
operator|.
name|setAlpha
argument_list|(
literal|255
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|alpha
argument_list|()
argument_list|,
literal|255
argument_list|)
expr_stmt|;
comment|// range<0, 255>
name|obj1
operator|.
name|setAlpha
argument_list|(
name|INT_MAX
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|alpha
argument_list|()
argument_list|,
literal|255
argument_list|)
expr_stmt|;
comment|// range<0, 255>
comment|// qreal QColor::alphaF()
comment|// void QColor::setAlphaF(qreal)
name|obj1
operator|.
name|setAlphaF
argument_list|(
literal|0.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|alphaF
argument_list|()
argument_list|,
name|qreal
argument_list|(
literal|0.0
argument_list|)
argument_list|)
expr_stmt|;
comment|// range<0.0, 1.0>
name|obj1
operator|.
name|setAlphaF
argument_list|(
operator|-
literal|0.2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|alphaF
argument_list|()
argument_list|,
name|qreal
argument_list|(
literal|0.0
argument_list|)
argument_list|)
expr_stmt|;
comment|// range<0.0, 1.0>
name|obj1
operator|.
name|setAlphaF
argument_list|(
literal|1.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|alphaF
argument_list|()
argument_list|,
name|qreal
argument_list|(
literal|1.0
argument_list|)
argument_list|)
expr_stmt|;
comment|// range<0.0, 1.0>
name|obj1
operator|.
name|setAlphaF
argument_list|(
literal|1.1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|alphaF
argument_list|()
argument_list|,
name|qreal
argument_list|(
literal|1.0
argument_list|)
argument_list|)
expr_stmt|;
comment|// range<0.0, 1.0>
comment|// int QColor::red()
comment|// void QColor::setRed(int)
name|obj1
operator|.
name|setRed
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|red
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setRed
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|red
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// range<0, 255>
name|obj1
operator|.
name|setRed
argument_list|(
name|INT_MIN
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|red
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// range<0, 255>
name|obj1
operator|.
name|setRed
argument_list|(
literal|255
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|red
argument_list|()
argument_list|,
literal|255
argument_list|)
expr_stmt|;
comment|// range<0, 255>
name|obj1
operator|.
name|setRed
argument_list|(
name|INT_MAX
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|red
argument_list|()
argument_list|,
literal|255
argument_list|)
expr_stmt|;
comment|// range<0, 255>
comment|// int QColor::green()
comment|// void QColor::setGreen(int)
name|obj1
operator|.
name|setGreen
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|green
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setGreen
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|green
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// range<0, 255>
name|obj1
operator|.
name|setGreen
argument_list|(
name|INT_MIN
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|green
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// range<0, 255>
name|obj1
operator|.
name|setGreen
argument_list|(
literal|255
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|green
argument_list|()
argument_list|,
literal|255
argument_list|)
expr_stmt|;
comment|// range<0, 255>
name|obj1
operator|.
name|setGreen
argument_list|(
name|INT_MAX
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|green
argument_list|()
argument_list|,
literal|255
argument_list|)
expr_stmt|;
comment|// range<0, 255>
comment|// int QColor::blue()
comment|// void QColor::setBlue(int)
name|obj1
operator|.
name|setBlue
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|blue
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setBlue
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|blue
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// range<0, 255>
name|obj1
operator|.
name|setBlue
argument_list|(
name|INT_MIN
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|blue
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// range<0, 255>
name|obj1
operator|.
name|setBlue
argument_list|(
literal|255
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|blue
argument_list|()
argument_list|,
literal|255
argument_list|)
expr_stmt|;
comment|// range<0, 255>
name|obj1
operator|.
name|setBlue
argument_list|(
name|INT_MAX
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|blue
argument_list|()
argument_list|,
literal|255
argument_list|)
expr_stmt|;
comment|// range<0, 255>
comment|// qreal QColor::redF()
comment|// void QColor::setRedF(qreal)
name|obj1
operator|.
name|setRedF
argument_list|(
literal|0.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|redF
argument_list|()
argument_list|,
name|qreal
argument_list|(
literal|0.0
argument_list|)
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setRedF
argument_list|(
operator|-
literal|0.2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|redF
argument_list|()
argument_list|,
name|qreal
argument_list|(
literal|0.0
argument_list|)
argument_list|)
expr_stmt|;
comment|// range<0.0, 1.0
name|obj1
operator|.
name|setRedF
argument_list|(
literal|1.1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|redF
argument_list|()
argument_list|,
name|qreal
argument_list|(
literal|1.0
argument_list|)
argument_list|)
expr_stmt|;
comment|// range<0.0, 1.0
comment|// qreal QColor::greenF()
comment|// void QColor::setGreenF(qreal)
name|obj1
operator|.
name|setGreenF
argument_list|(
literal|0.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|greenF
argument_list|()
argument_list|,
name|qreal
argument_list|(
literal|0.0
argument_list|)
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setGreenF
argument_list|(
operator|-
literal|0.2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|greenF
argument_list|()
argument_list|,
name|qreal
argument_list|(
literal|0.0
argument_list|)
argument_list|)
expr_stmt|;
comment|// range<0.0, 1.0
name|obj1
operator|.
name|setGreenF
argument_list|(
literal|1.1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|greenF
argument_list|()
argument_list|,
name|qreal
argument_list|(
literal|1.0
argument_list|)
argument_list|)
expr_stmt|;
comment|// range<0.0, 1.0
comment|// qreal QColor::blueF()
comment|// void QColor::setBlueF(qreal)
name|obj1
operator|.
name|setBlueF
argument_list|(
literal|0.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|blueF
argument_list|()
argument_list|,
name|qreal
argument_list|(
literal|0.0
argument_list|)
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setBlueF
argument_list|(
operator|-
literal|0.2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|blueF
argument_list|()
argument_list|,
name|qreal
argument_list|(
literal|0.0
argument_list|)
argument_list|)
expr_stmt|;
comment|// range<0.0, 1.0
name|obj1
operator|.
name|setBlueF
argument_list|(
literal|1.1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|blueF
argument_list|()
argument_list|,
name|qreal
argument_list|(
literal|1.0
argument_list|)
argument_list|)
expr_stmt|;
comment|// range<0.0, 1.0
comment|// QRgb QColor::rgba()
comment|// void QColor::setRgba(QRgb)
name|QRgb
name|var9
argument_list|(
name|qRgba
argument_list|(
literal|10
argument_list|,
literal|20
argument_list|,
literal|30
argument_list|,
literal|40
argument_list|)
argument_list|)
decl_stmt|;
name|obj1
operator|.
name|setRgba
argument_list|(
name|var9
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|rgba
argument_list|()
argument_list|,
name|var9
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setRgba
argument_list|(
name|QRgb
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|rgba
argument_list|()
argument_list|,
name|QRgb
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|// QRgb QColor::rgb()
comment|// void QColor::setRgb(QRgb)
name|QRgb
name|var10
argument_list|(
name|qRgb
argument_list|(
literal|10
argument_list|,
literal|20
argument_list|,
literal|30
argument_list|)
argument_list|)
decl_stmt|;
name|obj1
operator|.
name|setRgb
argument_list|(
name|var10
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|rgb
argument_list|()
argument_list|,
name|var10
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setRgb
argument_list|(
name|QRgb
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|rgb
argument_list|()
argument_list|,
name|qRgb
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QColor
argument_list|)
end_macro
begin_constructor
DECL|function|tst_QColor
name|tst_QColor
operator|::
name|tst_QColor
parameter_list|()
block|{ }
end_constructor
begin_function
DECL|function|isValid_data
name|void
name|tst_QColor
operator|::
name|isValid_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QColor
argument_list|>
argument_list|(
literal|"color"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"isValid"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"defaultConstructor"
argument_list|)
operator|<<
name|QColor
argument_list|()
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rgbConstructor-valid"
argument_list|)
operator|<<
name|QColor
argument_list|(
literal|2
argument_list|,
literal|5
argument_list|,
literal|7
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rgbConstructor-invalid"
argument_list|)
operator|<<
name|QColor
argument_list|(
literal|2
argument_list|,
literal|5
argument_list|,
literal|999
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"nameQStringConstructor-valid"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|QString
argument_list|(
literal|"#ffffff"
argument_list|)
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"nameQStringConstructor-invalid"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|QString
argument_list|(
literal|"#ffffgg"
argument_list|)
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"nameQStringConstructor-empty"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|QString
argument_list|(
literal|""
argument_list|)
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"nameQStringConstructor-named"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|QString
argument_list|(
literal|"red"
argument_list|)
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"nameCharConstructor-valid"
argument_list|)
operator|<<
name|QColor
argument_list|(
literal|"#ffffff"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"nameCharConstructor-invalid"
argument_list|)
operator|<<
name|QColor
argument_list|(
literal|"#ffffgg"
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"nameCharConstructor-invalid-2"
argument_list|)
operator|<<
name|QColor
argument_list|(
literal|"#fffffg"
argument_list|)
operator|<<
literal|false
expr_stmt|;
block|}
end_function
begin_function
DECL|function|isValid
name|void
name|tst_QColor
operator|::
name|isValid
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QColor
argument_list|,
name|color
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|isValid
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|color
operator|.
name|isValid
argument_list|()
operator|==
name|isValid
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|name_data
name|void
name|tst_QColor
operator|::
name|name_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QColor
argument_list|>
argument_list|(
literal|"color"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"name"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid"
argument_list|)
operator|<<
name|QColor
argument_list|()
operator|<<
literal|"#000000"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"global color black"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
operator|<<
literal|"#000000"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"global color white"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
operator|<<
literal|"#ffffff"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"global color darkGray"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|darkGray
argument_list|)
operator|<<
literal|"#808080"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"global color gray"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|gray
argument_list|)
operator|<<
literal|"#a0a0a4"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"global color lightGray"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|lightGray
argument_list|)
operator|<<
literal|"#c0c0c0"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"global color red"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
operator|<<
literal|"#ff0000"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"global color green"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|green
argument_list|)
operator|<<
literal|"#00ff00"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"global color blue"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|blue
argument_list|)
operator|<<
literal|"#0000ff"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"global color cyan"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|cyan
argument_list|)
operator|<<
literal|"#00ffff"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"global color magenta"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|magenta
argument_list|)
operator|<<
literal|"#ff00ff"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"global color yellow"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|yellow
argument_list|)
operator|<<
literal|"#ffff00"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"global color darkRed"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|darkRed
argument_list|)
operator|<<
literal|"#800000"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"global color darkGreen"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|darkGreen
argument_list|)
operator|<<
literal|"#008000"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"global color darkBlue"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|darkBlue
argument_list|)
operator|<<
literal|"#000080"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"global color darkCyan"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|darkCyan
argument_list|)
operator|<<
literal|"#008080"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"global color darkMagenta"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|darkMagenta
argument_list|)
operator|<<
literal|"#800080"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"global color darkYellow"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|darkYellow
argument_list|)
operator|<<
literal|"#808000"
expr_stmt|;
block|}
end_function
begin_function
DECL|function|name
name|void
name|tst_QColor
operator|::
name|name
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QColor
argument_list|,
name|color
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|name
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|color
operator|.
name|name
argument_list|()
argument_list|,
name|name
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|globalColors_data
name|void
name|tst_QColor
operator|::
name|globalColors_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QColor
argument_list|>
argument_list|(
literal|"color"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|uint
argument_list|>
argument_list|(
literal|"argb"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid"
argument_list|)
operator|<<
name|QColor
argument_list|()
operator|<<
literal|0xff000000
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"global color black"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
operator|<<
literal|0xff000000
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"global color white"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
operator|<<
literal|0xffffffff
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"global color darkGray"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|darkGray
argument_list|)
operator|<<
literal|0xff808080
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"global color gray"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|gray
argument_list|)
operator|<<
literal|0xffa0a0a4
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"global color lightGray"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|lightGray
argument_list|)
operator|<<
literal|0xffc0c0c0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"global color red"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
operator|<<
literal|0xffff0000
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"global color green"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|green
argument_list|)
operator|<<
literal|0xff00ff00
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"global color blue"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|blue
argument_list|)
operator|<<
literal|0xff0000ff
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"global color cyan"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|cyan
argument_list|)
operator|<<
literal|0xff00ffff
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"global color magenta"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|magenta
argument_list|)
operator|<<
literal|0xffff00ff
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"global color yellow"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|yellow
argument_list|)
operator|<<
literal|0xffffff00
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"global color darkRed"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|darkRed
argument_list|)
operator|<<
literal|0xff800000
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"global color darkGreen"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|darkGreen
argument_list|)
operator|<<
literal|0xff008000
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"global color darkBlue"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|darkBlue
argument_list|)
operator|<<
literal|0xff000080
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"global color darkCyan"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|darkCyan
argument_list|)
operator|<<
literal|0xff008080
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"global color darkMagenta"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|darkMagenta
argument_list|)
operator|<<
literal|0xff800080
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"global color darkYellow"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|darkYellow
argument_list|)
operator|<<
literal|0xff808000
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"global color transparent"
argument_list|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|transparent
argument_list|)
operator|<<
literal|0x00000000u
expr_stmt|;
block|}
end_function
begin_function
DECL|function|globalColors
name|void
name|tst_QColor
operator|::
name|globalColors
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QColor
argument_list|,
name|color
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|uint
argument_list|,
name|argb
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|color
operator|.
name|rgba
argument_list|()
argument_list|,
name|argb
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|/*   CSS color names = SVG 1.0 color names + transparent (rgba(0,0,0,0)) */
end_comment
begin_ifdef
ifdef|#
directive|ifdef
name|rgb
end_ifdef
begin_undef
DECL|macro|rgb
undef|#
directive|undef
name|rgb
end_undef
begin_endif
endif|#
directive|endif
end_endif
begin_define
DECL|macro|rgb
define|#
directive|define
name|rgb
parameter_list|(
name|r
parameter_list|,
name|g
parameter_list|,
name|b
parameter_list|)
value|(0xff000000 | r<< 16 |  g<< 8 | b)
end_define
begin_struct
DECL|struct|RGBData
specifier|static
specifier|const
struct|struct
name|RGBData
block|{
DECL|member|name
specifier|const
name|char
modifier|*
name|name
decl_stmt|;
DECL|member|value
name|uint
name|value
decl_stmt|;
block|}
DECL|variable|rgbTbl
name|rgbTbl
index|[]
init|=
block|{
block|{
literal|"aliceblue"
block|,
name|rgb
argument_list|(
literal|240
argument_list|,
literal|248
argument_list|,
literal|255
argument_list|)
block|}
block|,
block|{
literal|"antiquewhite"
block|,
name|rgb
argument_list|(
literal|250
argument_list|,
literal|235
argument_list|,
literal|215
argument_list|)
block|}
block|,
block|{
literal|"aqua"
block|,
name|rgb
argument_list|(
literal|0
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|)
block|}
block|,
block|{
literal|"aquamarine"
block|,
name|rgb
argument_list|(
literal|127
argument_list|,
literal|255
argument_list|,
literal|212
argument_list|)
block|}
block|,
block|{
literal|"azure"
block|,
name|rgb
argument_list|(
literal|240
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|)
block|}
block|,
block|{
literal|"beige"
block|,
name|rgb
argument_list|(
literal|245
argument_list|,
literal|245
argument_list|,
literal|220
argument_list|)
block|}
block|,
block|{
literal|"bisque"
block|,
name|rgb
argument_list|(
literal|255
argument_list|,
literal|228
argument_list|,
literal|196
argument_list|)
block|}
block|,
block|{
literal|"black"
block|,
name|rgb
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
block|}
block|,
block|{
literal|"blanchedalmond"
block|,
name|rgb
argument_list|(
literal|255
argument_list|,
literal|235
argument_list|,
literal|205
argument_list|)
block|}
block|,
block|{
literal|"blue"
block|,
name|rgb
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|255
argument_list|)
block|}
block|,
block|{
literal|"blueviolet"
block|,
name|rgb
argument_list|(
literal|138
argument_list|,
literal|43
argument_list|,
literal|226
argument_list|)
block|}
block|,
block|{
literal|"brown"
block|,
name|rgb
argument_list|(
literal|165
argument_list|,
literal|42
argument_list|,
literal|42
argument_list|)
block|}
block|,
block|{
literal|"burlywood"
block|,
name|rgb
argument_list|(
literal|222
argument_list|,
literal|184
argument_list|,
literal|135
argument_list|)
block|}
block|,
block|{
literal|"cadetblue"
block|,
name|rgb
argument_list|(
literal|95
argument_list|,
literal|158
argument_list|,
literal|160
argument_list|)
block|}
block|,
block|{
literal|"chartreuse"
block|,
name|rgb
argument_list|(
literal|127
argument_list|,
literal|255
argument_list|,
literal|0
argument_list|)
block|}
block|,
block|{
literal|"chocolate"
block|,
name|rgb
argument_list|(
literal|210
argument_list|,
literal|105
argument_list|,
literal|30
argument_list|)
block|}
block|,
block|{
literal|"coral"
block|,
name|rgb
argument_list|(
literal|255
argument_list|,
literal|127
argument_list|,
literal|80
argument_list|)
block|}
block|,
block|{
literal|"cornflowerblue"
block|,
name|rgb
argument_list|(
literal|100
argument_list|,
literal|149
argument_list|,
literal|237
argument_list|)
block|}
block|,
block|{
literal|"cornsilk"
block|,
name|rgb
argument_list|(
literal|255
argument_list|,
literal|248
argument_list|,
literal|220
argument_list|)
block|}
block|,
block|{
literal|"crimson"
block|,
name|rgb
argument_list|(
literal|220
argument_list|,
literal|20
argument_list|,
literal|60
argument_list|)
block|}
block|,
block|{
literal|"cyan"
block|,
name|rgb
argument_list|(
literal|0
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|)
block|}
block|,
block|{
literal|"darkblue"
block|,
name|rgb
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|139
argument_list|)
block|}
block|,
block|{
literal|"darkcyan"
block|,
name|rgb
argument_list|(
literal|0
argument_list|,
literal|139
argument_list|,
literal|139
argument_list|)
block|}
block|,
block|{
literal|"darkgoldenrod"
block|,
name|rgb
argument_list|(
literal|184
argument_list|,
literal|134
argument_list|,
literal|11
argument_list|)
block|}
block|,
block|{
literal|"darkgray"
block|,
name|rgb
argument_list|(
literal|169
argument_list|,
literal|169
argument_list|,
literal|169
argument_list|)
block|}
block|,
block|{
literal|"darkgreen"
block|,
name|rgb
argument_list|(
literal|0
argument_list|,
literal|100
argument_list|,
literal|0
argument_list|)
block|}
block|,
block|{
literal|"darkgrey"
block|,
name|rgb
argument_list|(
literal|169
argument_list|,
literal|169
argument_list|,
literal|169
argument_list|)
block|}
block|,
block|{
literal|"darkkhaki"
block|,
name|rgb
argument_list|(
literal|189
argument_list|,
literal|183
argument_list|,
literal|107
argument_list|)
block|}
block|,
block|{
literal|"darkmagenta"
block|,
name|rgb
argument_list|(
literal|139
argument_list|,
literal|0
argument_list|,
literal|139
argument_list|)
block|}
block|,
block|{
literal|"darkolivegreen"
block|,
name|rgb
argument_list|(
literal|85
argument_list|,
literal|107
argument_list|,
literal|47
argument_list|)
block|}
block|,
block|{
literal|"darkorange"
block|,
name|rgb
argument_list|(
literal|255
argument_list|,
literal|140
argument_list|,
literal|0
argument_list|)
block|}
block|,
block|{
literal|"darkorchid"
block|,
name|rgb
argument_list|(
literal|153
argument_list|,
literal|50
argument_list|,
literal|204
argument_list|)
block|}
block|,
block|{
literal|"darkred"
block|,
name|rgb
argument_list|(
literal|139
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
block|}
block|,
block|{
literal|"darksalmon"
block|,
name|rgb
argument_list|(
literal|233
argument_list|,
literal|150
argument_list|,
literal|122
argument_list|)
block|}
block|,
block|{
literal|"darkseagreen"
block|,
name|rgb
argument_list|(
literal|143
argument_list|,
literal|188
argument_list|,
literal|143
argument_list|)
block|}
block|,
block|{
literal|"darkslateblue"
block|,
name|rgb
argument_list|(
literal|72
argument_list|,
literal|61
argument_list|,
literal|139
argument_list|)
block|}
block|,
block|{
literal|"darkslategray"
block|,
name|rgb
argument_list|(
literal|47
argument_list|,
literal|79
argument_list|,
literal|79
argument_list|)
block|}
block|,
block|{
literal|"darkslategrey"
block|,
name|rgb
argument_list|(
literal|47
argument_list|,
literal|79
argument_list|,
literal|79
argument_list|)
block|}
block|,
block|{
literal|"darkturquoise"
block|,
name|rgb
argument_list|(
literal|0
argument_list|,
literal|206
argument_list|,
literal|209
argument_list|)
block|}
block|,
block|{
literal|"darkviolet"
block|,
name|rgb
argument_list|(
literal|148
argument_list|,
literal|0
argument_list|,
literal|211
argument_list|)
block|}
block|,
block|{
literal|"deeppink"
block|,
name|rgb
argument_list|(
literal|255
argument_list|,
literal|20
argument_list|,
literal|147
argument_list|)
block|}
block|,
block|{
literal|"deepskyblue"
block|,
name|rgb
argument_list|(
literal|0
argument_list|,
literal|191
argument_list|,
literal|255
argument_list|)
block|}
block|,
block|{
literal|"dimgray"
block|,
name|rgb
argument_list|(
literal|105
argument_list|,
literal|105
argument_list|,
literal|105
argument_list|)
block|}
block|,
block|{
literal|"dimgrey"
block|,
name|rgb
argument_list|(
literal|105
argument_list|,
literal|105
argument_list|,
literal|105
argument_list|)
block|}
block|,
block|{
literal|"dodgerblue"
block|,
name|rgb
argument_list|(
literal|30
argument_list|,
literal|144
argument_list|,
literal|255
argument_list|)
block|}
block|,
block|{
literal|"firebrick"
block|,
name|rgb
argument_list|(
literal|178
argument_list|,
literal|34
argument_list|,
literal|34
argument_list|)
block|}
block|,
block|{
literal|"floralwhite"
block|,
name|rgb
argument_list|(
literal|255
argument_list|,
literal|250
argument_list|,
literal|240
argument_list|)
block|}
block|,
block|{
literal|"forestgreen"
block|,
name|rgb
argument_list|(
literal|34
argument_list|,
literal|139
argument_list|,
literal|34
argument_list|)
block|}
block|,
block|{
literal|"fuchsia"
block|,
name|rgb
argument_list|(
literal|255
argument_list|,
literal|0
argument_list|,
literal|255
argument_list|)
block|}
block|,
block|{
literal|"gainsboro"
block|,
name|rgb
argument_list|(
literal|220
argument_list|,
literal|220
argument_list|,
literal|220
argument_list|)
block|}
block|,
block|{
literal|"ghostwhite"
block|,
name|rgb
argument_list|(
literal|248
argument_list|,
literal|248
argument_list|,
literal|255
argument_list|)
block|}
block|,
block|{
literal|"gold"
block|,
name|rgb
argument_list|(
literal|255
argument_list|,
literal|215
argument_list|,
literal|0
argument_list|)
block|}
block|,
block|{
literal|"goldenrod"
block|,
name|rgb
argument_list|(
literal|218
argument_list|,
literal|165
argument_list|,
literal|32
argument_list|)
block|}
block|,
block|{
literal|"gray"
block|,
name|rgb
argument_list|(
literal|128
argument_list|,
literal|128
argument_list|,
literal|128
argument_list|)
block|}
block|,
block|{
literal|"green"
block|,
name|rgb
argument_list|(
literal|0
argument_list|,
literal|128
argument_list|,
literal|0
argument_list|)
block|}
block|,
block|{
literal|"greenyellow"
block|,
name|rgb
argument_list|(
literal|173
argument_list|,
literal|255
argument_list|,
literal|47
argument_list|)
block|}
block|,
block|{
literal|"grey"
block|,
name|rgb
argument_list|(
literal|128
argument_list|,
literal|128
argument_list|,
literal|128
argument_list|)
block|}
block|,
block|{
literal|"honeydew"
block|,
name|rgb
argument_list|(
literal|240
argument_list|,
literal|255
argument_list|,
literal|240
argument_list|)
block|}
block|,
block|{
literal|"hotpink"
block|,
name|rgb
argument_list|(
literal|255
argument_list|,
literal|105
argument_list|,
literal|180
argument_list|)
block|}
block|,
block|{
literal|"indianred"
block|,
name|rgb
argument_list|(
literal|205
argument_list|,
literal|92
argument_list|,
literal|92
argument_list|)
block|}
block|,
block|{
literal|"indigo"
block|,
name|rgb
argument_list|(
literal|75
argument_list|,
literal|0
argument_list|,
literal|130
argument_list|)
block|}
block|,
block|{
literal|"ivory"
block|,
name|rgb
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|240
argument_list|)
block|}
block|,
block|{
literal|"khaki"
block|,
name|rgb
argument_list|(
literal|240
argument_list|,
literal|230
argument_list|,
literal|140
argument_list|)
block|}
block|,
block|{
literal|"lavender"
block|,
name|rgb
argument_list|(
literal|230
argument_list|,
literal|230
argument_list|,
literal|250
argument_list|)
block|}
block|,
block|{
literal|"lavenderblush"
block|,
name|rgb
argument_list|(
literal|255
argument_list|,
literal|240
argument_list|,
literal|245
argument_list|)
block|}
block|,
block|{
literal|"lawngreen"
block|,
name|rgb
argument_list|(
literal|124
argument_list|,
literal|252
argument_list|,
literal|0
argument_list|)
block|}
block|,
block|{
literal|"lemonchiffon"
block|,
name|rgb
argument_list|(
literal|255
argument_list|,
literal|250
argument_list|,
literal|205
argument_list|)
block|}
block|,
block|{
literal|"lightblue"
block|,
name|rgb
argument_list|(
literal|173
argument_list|,
literal|216
argument_list|,
literal|230
argument_list|)
block|}
block|,
block|{
literal|"lightcoral"
block|,
name|rgb
argument_list|(
literal|240
argument_list|,
literal|128
argument_list|,
literal|128
argument_list|)
block|}
block|,
block|{
literal|"lightcyan"
block|,
name|rgb
argument_list|(
literal|224
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|)
block|}
block|,
block|{
literal|"lightgoldenrodyellow"
block|,
name|rgb
argument_list|(
literal|250
argument_list|,
literal|250
argument_list|,
literal|210
argument_list|)
block|}
block|,
block|{
literal|"lightgray"
block|,
name|rgb
argument_list|(
literal|211
argument_list|,
literal|211
argument_list|,
literal|211
argument_list|)
block|}
block|,
block|{
literal|"lightgreen"
block|,
name|rgb
argument_list|(
literal|144
argument_list|,
literal|238
argument_list|,
literal|144
argument_list|)
block|}
block|,
block|{
literal|"lightgrey"
block|,
name|rgb
argument_list|(
literal|211
argument_list|,
literal|211
argument_list|,
literal|211
argument_list|)
block|}
block|,
block|{
literal|"lightpink"
block|,
name|rgb
argument_list|(
literal|255
argument_list|,
literal|182
argument_list|,
literal|193
argument_list|)
block|}
block|,
block|{
literal|"lightsalmon"
block|,
name|rgb
argument_list|(
literal|255
argument_list|,
literal|160
argument_list|,
literal|122
argument_list|)
block|}
block|,
block|{
literal|"lightseagreen"
block|,
name|rgb
argument_list|(
literal|32
argument_list|,
literal|178
argument_list|,
literal|170
argument_list|)
block|}
block|,
block|{
literal|"lightskyblue"
block|,
name|rgb
argument_list|(
literal|135
argument_list|,
literal|206
argument_list|,
literal|250
argument_list|)
block|}
block|,
block|{
literal|"lightslategray"
block|,
name|rgb
argument_list|(
literal|119
argument_list|,
literal|136
argument_list|,
literal|153
argument_list|)
block|}
block|,
block|{
literal|"lightslategrey"
block|,
name|rgb
argument_list|(
literal|119
argument_list|,
literal|136
argument_list|,
literal|153
argument_list|)
block|}
block|,
block|{
literal|"lightsteelblue"
block|,
name|rgb
argument_list|(
literal|176
argument_list|,
literal|196
argument_list|,
literal|222
argument_list|)
block|}
block|,
block|{
literal|"lightyellow"
block|,
name|rgb
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|224
argument_list|)
block|}
block|,
block|{
literal|"lime"
block|,
name|rgb
argument_list|(
literal|0
argument_list|,
literal|255
argument_list|,
literal|0
argument_list|)
block|}
block|,
block|{
literal|"limegreen"
block|,
name|rgb
argument_list|(
literal|50
argument_list|,
literal|205
argument_list|,
literal|50
argument_list|)
block|}
block|,
block|{
literal|"linen"
block|,
name|rgb
argument_list|(
literal|250
argument_list|,
literal|240
argument_list|,
literal|230
argument_list|)
block|}
block|,
block|{
literal|"magenta"
block|,
name|rgb
argument_list|(
literal|255
argument_list|,
literal|0
argument_list|,
literal|255
argument_list|)
block|}
block|,
block|{
literal|"maroon"
block|,
name|rgb
argument_list|(
literal|128
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
block|}
block|,
block|{
literal|"mediumaquamarine"
block|,
name|rgb
argument_list|(
literal|102
argument_list|,
literal|205
argument_list|,
literal|170
argument_list|)
block|}
block|,
block|{
literal|"mediumblue"
block|,
name|rgb
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|205
argument_list|)
block|}
block|,
block|{
literal|"mediumorchid"
block|,
name|rgb
argument_list|(
literal|186
argument_list|,
literal|85
argument_list|,
literal|211
argument_list|)
block|}
block|,
block|{
literal|"mediumpurple"
block|,
name|rgb
argument_list|(
literal|147
argument_list|,
literal|112
argument_list|,
literal|219
argument_list|)
block|}
block|,
block|{
literal|"mediumseagreen"
block|,
name|rgb
argument_list|(
literal|60
argument_list|,
literal|179
argument_list|,
literal|113
argument_list|)
block|}
block|,
block|{
literal|"mediumslateblue"
block|,
name|rgb
argument_list|(
literal|123
argument_list|,
literal|104
argument_list|,
literal|238
argument_list|)
block|}
block|,
block|{
literal|"mediumspringgreen"
block|,
name|rgb
argument_list|(
literal|0
argument_list|,
literal|250
argument_list|,
literal|154
argument_list|)
block|}
block|,
block|{
literal|"mediumturquoise"
block|,
name|rgb
argument_list|(
literal|72
argument_list|,
literal|209
argument_list|,
literal|204
argument_list|)
block|}
block|,
block|{
literal|"mediumvioletred"
block|,
name|rgb
argument_list|(
literal|199
argument_list|,
literal|21
argument_list|,
literal|133
argument_list|)
block|}
block|,
block|{
literal|"midnightblue"
block|,
name|rgb
argument_list|(
literal|25
argument_list|,
literal|25
argument_list|,
literal|112
argument_list|)
block|}
block|,
block|{
literal|"mintcream"
block|,
name|rgb
argument_list|(
literal|245
argument_list|,
literal|255
argument_list|,
literal|250
argument_list|)
block|}
block|,
block|{
literal|"mistyrose"
block|,
name|rgb
argument_list|(
literal|255
argument_list|,
literal|228
argument_list|,
literal|225
argument_list|)
block|}
block|,
block|{
literal|"moccasin"
block|,
name|rgb
argument_list|(
literal|255
argument_list|,
literal|228
argument_list|,
literal|181
argument_list|)
block|}
block|,
block|{
literal|"navajowhite"
block|,
name|rgb
argument_list|(
literal|255
argument_list|,
literal|222
argument_list|,
literal|173
argument_list|)
block|}
block|,
block|{
literal|"navy"
block|,
name|rgb
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|128
argument_list|)
block|}
block|,
block|{
literal|"oldlace"
block|,
name|rgb
argument_list|(
literal|253
argument_list|,
literal|245
argument_list|,
literal|230
argument_list|)
block|}
block|,
block|{
literal|"olive"
block|,
name|rgb
argument_list|(
literal|128
argument_list|,
literal|128
argument_list|,
literal|0
argument_list|)
block|}
block|,
block|{
literal|"olivedrab"
block|,
name|rgb
argument_list|(
literal|107
argument_list|,
literal|142
argument_list|,
literal|35
argument_list|)
block|}
block|,
block|{
literal|"orange"
block|,
name|rgb
argument_list|(
literal|255
argument_list|,
literal|165
argument_list|,
literal|0
argument_list|)
block|}
block|,
block|{
literal|"orangered"
block|,
name|rgb
argument_list|(
literal|255
argument_list|,
literal|69
argument_list|,
literal|0
argument_list|)
block|}
block|,
block|{
literal|"orchid"
block|,
name|rgb
argument_list|(
literal|218
argument_list|,
literal|112
argument_list|,
literal|214
argument_list|)
block|}
block|,
block|{
literal|"palegoldenrod"
block|,
name|rgb
argument_list|(
literal|238
argument_list|,
literal|232
argument_list|,
literal|170
argument_list|)
block|}
block|,
block|{
literal|"palegreen"
block|,
name|rgb
argument_list|(
literal|152
argument_list|,
literal|251
argument_list|,
literal|152
argument_list|)
block|}
block|,
block|{
literal|"paleturquoise"
block|,
name|rgb
argument_list|(
literal|175
argument_list|,
literal|238
argument_list|,
literal|238
argument_list|)
block|}
block|,
block|{
literal|"palevioletred"
block|,
name|rgb
argument_list|(
literal|219
argument_list|,
literal|112
argument_list|,
literal|147
argument_list|)
block|}
block|,
block|{
literal|"papayawhip"
block|,
name|rgb
argument_list|(
literal|255
argument_list|,
literal|239
argument_list|,
literal|213
argument_list|)
block|}
block|,
block|{
literal|"peachpuff"
block|,
name|rgb
argument_list|(
literal|255
argument_list|,
literal|218
argument_list|,
literal|185
argument_list|)
block|}
block|,
block|{
literal|"peru"
block|,
name|rgb
argument_list|(
literal|205
argument_list|,
literal|133
argument_list|,
literal|63
argument_list|)
block|}
block|,
block|{
literal|"pink"
block|,
name|rgb
argument_list|(
literal|255
argument_list|,
literal|192
argument_list|,
literal|203
argument_list|)
block|}
block|,
block|{
literal|"plum"
block|,
name|rgb
argument_list|(
literal|221
argument_list|,
literal|160
argument_list|,
literal|221
argument_list|)
block|}
block|,
block|{
literal|"powderblue"
block|,
name|rgb
argument_list|(
literal|176
argument_list|,
literal|224
argument_list|,
literal|230
argument_list|)
block|}
block|,
block|{
literal|"purple"
block|,
name|rgb
argument_list|(
literal|128
argument_list|,
literal|0
argument_list|,
literal|128
argument_list|)
block|}
block|,
block|{
literal|"red"
block|,
name|rgb
argument_list|(
literal|255
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
block|}
block|,
block|{
literal|"rosybrown"
block|,
name|rgb
argument_list|(
literal|188
argument_list|,
literal|143
argument_list|,
literal|143
argument_list|)
block|}
block|,
block|{
literal|"royalblue"
block|,
name|rgb
argument_list|(
literal|65
argument_list|,
literal|105
argument_list|,
literal|225
argument_list|)
block|}
block|,
block|{
literal|"saddlebrown"
block|,
name|rgb
argument_list|(
literal|139
argument_list|,
literal|69
argument_list|,
literal|19
argument_list|)
block|}
block|,
block|{
literal|"salmon"
block|,
name|rgb
argument_list|(
literal|250
argument_list|,
literal|128
argument_list|,
literal|114
argument_list|)
block|}
block|,
block|{
literal|"sandybrown"
block|,
name|rgb
argument_list|(
literal|244
argument_list|,
literal|164
argument_list|,
literal|96
argument_list|)
block|}
block|,
block|{
literal|"seagreen"
block|,
name|rgb
argument_list|(
literal|46
argument_list|,
literal|139
argument_list|,
literal|87
argument_list|)
block|}
block|,
block|{
literal|"seashell"
block|,
name|rgb
argument_list|(
literal|255
argument_list|,
literal|245
argument_list|,
literal|238
argument_list|)
block|}
block|,
block|{
literal|"sienna"
block|,
name|rgb
argument_list|(
literal|160
argument_list|,
literal|82
argument_list|,
literal|45
argument_list|)
block|}
block|,
block|{
literal|"silver"
block|,
name|rgb
argument_list|(
literal|192
argument_list|,
literal|192
argument_list|,
literal|192
argument_list|)
block|}
block|,
block|{
literal|"skyblue"
block|,
name|rgb
argument_list|(
literal|135
argument_list|,
literal|206
argument_list|,
literal|235
argument_list|)
block|}
block|,
block|{
literal|"slateblue"
block|,
name|rgb
argument_list|(
literal|106
argument_list|,
literal|90
argument_list|,
literal|205
argument_list|)
block|}
block|,
block|{
literal|"slategray"
block|,
name|rgb
argument_list|(
literal|112
argument_list|,
literal|128
argument_list|,
literal|144
argument_list|)
block|}
block|,
block|{
literal|"slategrey"
block|,
name|rgb
argument_list|(
literal|112
argument_list|,
literal|128
argument_list|,
literal|144
argument_list|)
block|}
block|,
block|{
literal|"snow"
block|,
name|rgb
argument_list|(
literal|255
argument_list|,
literal|250
argument_list|,
literal|250
argument_list|)
block|}
block|,
block|{
literal|"springgreen"
block|,
name|rgb
argument_list|(
literal|0
argument_list|,
literal|255
argument_list|,
literal|127
argument_list|)
block|}
block|,
block|{
literal|"steelblue"
block|,
name|rgb
argument_list|(
literal|70
argument_list|,
literal|130
argument_list|,
literal|180
argument_list|)
block|}
block|,
block|{
literal|"tan"
block|,
name|rgb
argument_list|(
literal|210
argument_list|,
literal|180
argument_list|,
literal|140
argument_list|)
block|}
block|,
block|{
literal|"teal"
block|,
name|rgb
argument_list|(
literal|0
argument_list|,
literal|128
argument_list|,
literal|128
argument_list|)
block|}
block|,
block|{
literal|"thistle"
block|,
name|rgb
argument_list|(
literal|216
argument_list|,
literal|191
argument_list|,
literal|216
argument_list|)
block|}
block|,
block|{
literal|"tomato"
block|,
name|rgb
argument_list|(
literal|255
argument_list|,
literal|99
argument_list|,
literal|71
argument_list|)
block|}
block|,
block|{
literal|"transparent"
block|,
literal|0
block|}
block|,
block|{
literal|"turquoise"
block|,
name|rgb
argument_list|(
literal|64
argument_list|,
literal|224
argument_list|,
literal|208
argument_list|)
block|}
block|,
block|{
literal|"violet"
block|,
name|rgb
argument_list|(
literal|238
argument_list|,
literal|130
argument_list|,
literal|238
argument_list|)
block|}
block|,
block|{
literal|"wheat"
block|,
name|rgb
argument_list|(
literal|245
argument_list|,
literal|222
argument_list|,
literal|179
argument_list|)
block|}
block|,
block|{
literal|"white"
block|,
name|rgb
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|)
block|}
block|,
block|{
literal|"whitesmoke"
block|,
name|rgb
argument_list|(
literal|245
argument_list|,
literal|245
argument_list|,
literal|245
argument_list|)
block|}
block|,
block|{
literal|"yellow"
block|,
name|rgb
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|0
argument_list|)
block|}
block|,
block|{
literal|"yellowgreen"
block|,
name|rgb
argument_list|(
literal|154
argument_list|,
literal|205
argument_list|,
literal|50
argument_list|)
block|}
block|}
struct|;
end_struct
begin_decl_stmt
DECL|variable|rgbTblSize
specifier|static
specifier|const
name|int
name|rgbTblSize
init|=
sizeof|sizeof
argument_list|(
name|rgbTbl
argument_list|)
operator|/
sizeof|sizeof
argument_list|(
name|RGBData
argument_list|)
decl_stmt|;
end_decl_stmt
begin_undef
DECL|macro|rgb
undef|#
directive|undef
name|rgb
end_undef
begin_function
DECL|function|setNamedColor
name|void
name|tst_QColor
operator|::
name|setNamedColor
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|rgbTblSize
condition|;
operator|++
name|i
control|)
block|{
name|QColor
name|color
decl_stmt|;
name|color
operator|.
name|setNamedColor
argument_list|(
name|QLatin1String
argument_list|(
name|rgbTbl
index|[
name|i
index|]
operator|.
name|name
argument_list|)
argument_list|)
expr_stmt|;
name|QColor
name|expected
decl_stmt|;
name|expected
operator|.
name|setRgba
argument_list|(
name|rgbTbl
index|[
name|i
index|]
operator|.
name|value
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|color
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|constructNamedColorWithSpace
name|void
name|tst_QColor
operator|::
name|constructNamedColorWithSpace
parameter_list|()
block|{
name|QColor
name|whiteSmoke
argument_list|(
literal|"white smoke"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|whiteSmoke
argument_list|,
name|QColor
argument_list|(
literal|245
argument_list|,
literal|245
argument_list|,
literal|245
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|colorNames
name|void
name|tst_QColor
operator|::
name|colorNames
parameter_list|()
block|{
name|QStringList
name|all
init|=
name|QColor
operator|::
name|colorNames
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|all
operator|.
name|size
argument_list|()
argument_list|,
name|rgbTblSize
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|all
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
name|QCOMPARE
argument_list|(
name|all
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
name|rgbTbl
index|[
name|i
index|]
operator|.
name|name
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|spec
name|void
name|tst_QColor
operator|::
name|spec
parameter_list|()
block|{
name|QColor
name|invalid
decl_stmt|;
name|QCOMPARE
argument_list|(
name|invalid
operator|.
name|spec
argument_list|()
argument_list|,
name|QColor
operator|::
name|Invalid
argument_list|)
expr_stmt|;
name|QColor
name|rgb
init|=
name|QColor
operator|::
name|fromRgb
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|rgb
operator|.
name|spec
argument_list|()
argument_list|,
name|QColor
operator|::
name|Rgb
argument_list|)
expr_stmt|;
name|QColor
name|hsv
init|=
name|QColor
operator|::
name|fromHsv
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|hsv
operator|.
name|spec
argument_list|()
argument_list|,
name|QColor
operator|::
name|Hsv
argument_list|)
expr_stmt|;
name|QColor
name|cmyk
init|=
name|QColor
operator|::
name|fromCmyk
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|cmyk
operator|.
name|spec
argument_list|()
argument_list|,
name|QColor
operator|::
name|Cmyk
argument_list|)
expr_stmt|;
name|QColor
name|hsl
init|=
name|QColor
operator|::
name|fromHsl
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|hsl
operator|.
name|spec
argument_list|()
argument_list|,
name|QColor
operator|::
name|Hsl
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|veryFuzzyCompare
name|bool
name|veryFuzzyCompare
parameter_list|(
name|double
name|a
parameter_list|,
name|double
name|b
parameter_list|)
block|{
return|return
name|qAbs
argument_list|(
name|a
operator|-
name|b
argument_list|)
operator|<
literal|0.01
return|;
block|}
end_function
begin_function
DECL|function|setRed
name|void
name|tst_QColor
operator|::
name|setRed
parameter_list|()
block|{
name|QColor
name|c
init|=
name|QColor
argument_list|(
name|Qt
operator|::
name|blue
argument_list|)
operator|.
name|toHsv
argument_list|()
decl_stmt|;
name|c
operator|.
name|setRed
argument_list|(
literal|127
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|c
operator|.
name|red
argument_list|()
argument_list|,
literal|127
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|c
operator|.
name|green
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|c
operator|.
name|blue
argument_list|()
argument_list|,
literal|255
argument_list|)
expr_stmt|;
name|c
operator|=
name|QColor
argument_list|(
name|Qt
operator|::
name|blue
argument_list|)
operator|.
name|toHsv
argument_list|()
expr_stmt|;
name|c
operator|.
name|setRedF
argument_list|(
literal|0.5
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|veryFuzzyCompare
argument_list|(
name|c
operator|.
name|redF
argument_list|()
argument_list|,
literal|0.5
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|c
operator|.
name|greenF
argument_list|()
argument_list|,
name|qreal
argument_list|(
literal|0.0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|c
operator|.
name|blueF
argument_list|()
argument_list|,
name|qreal
argument_list|(
literal|1.0
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setGreen
name|void
name|tst_QColor
operator|::
name|setGreen
parameter_list|()
block|{
name|QColor
name|c
init|=
name|QColor
argument_list|(
name|Qt
operator|::
name|blue
argument_list|)
operator|.
name|toHsv
argument_list|()
decl_stmt|;
name|c
operator|.
name|setGreen
argument_list|(
literal|127
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|c
operator|.
name|red
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|c
operator|.
name|green
argument_list|()
argument_list|,
literal|127
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|c
operator|.
name|blue
argument_list|()
argument_list|,
literal|255
argument_list|)
expr_stmt|;
name|c
operator|=
name|QColor
argument_list|(
name|Qt
operator|::
name|blue
argument_list|)
operator|.
name|toHsv
argument_list|()
expr_stmt|;
name|c
operator|.
name|setGreenF
argument_list|(
literal|0.5
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|c
operator|.
name|redF
argument_list|()
argument_list|,
name|qreal
argument_list|(
literal|0.0
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|veryFuzzyCompare
argument_list|(
name|c
operator|.
name|greenF
argument_list|()
argument_list|,
literal|0.5
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|c
operator|.
name|blueF
argument_list|()
argument_list|,
name|qreal
argument_list|(
literal|1.0
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setBlue
name|void
name|tst_QColor
operator|::
name|setBlue
parameter_list|()
block|{
name|QColor
name|c
init|=
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
operator|.
name|toHsv
argument_list|()
decl_stmt|;
name|c
operator|.
name|setBlue
argument_list|(
literal|127
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|c
operator|.
name|red
argument_list|()
argument_list|,
literal|255
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|c
operator|.
name|green
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|c
operator|.
name|blue
argument_list|()
argument_list|,
literal|127
argument_list|)
expr_stmt|;
name|c
operator|=
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
operator|.
name|toHsv
argument_list|()
expr_stmt|;
name|c
operator|.
name|setBlueF
argument_list|(
literal|0.5
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|c
operator|.
name|redF
argument_list|()
argument_list|,
name|qreal
argument_list|(
literal|1.0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|c
operator|.
name|greenF
argument_list|()
argument_list|,
name|qreal
argument_list|(
literal|0.0
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|veryFuzzyCompare
argument_list|(
name|c
operator|.
name|blueF
argument_list|()
argument_list|,
literal|0.5
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setRgb
name|void
name|tst_QColor
operator|::
name|setRgb
parameter_list|()
block|{
name|QColor
name|color
decl_stmt|;
for|for
control|(
name|int
name|A
init|=
literal|0
init|;
name|A
operator|<=
name|USHRT_MAX
condition|;
operator|++
name|A
control|)
block|{
block|{
comment|// 0-255
name|int
name|a
init|=
name|A
operator|>>
literal|8
decl_stmt|;
name|QRgb
name|rgb
init|=
name|qRgba
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|a
argument_list|)
decl_stmt|;
name|color
operator|.
name|setRgb
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|a
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|color
operator|.
name|alpha
argument_list|()
argument_list|,
name|a
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|color
operator|.
name|rgb
argument_list|()
argument_list|,
name|qRgb
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|color
operator|.
name|setRgb
argument_list|(
name|rgb
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|color
operator|.
name|alpha
argument_list|()
argument_list|,
literal|255
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|color
operator|.
name|rgb
argument_list|()
argument_list|,
name|qRgb
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|r
decl_stmt|,
name|g
decl_stmt|,
name|b
decl_stmt|,
name|a2
decl_stmt|;
name|color
operator|.
name|setRgb
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|a
argument_list|)
expr_stmt|;
name|color
operator|.
name|getRgb
argument_list|(
operator|&
name|r
argument_list|,
operator|&
name|g
argument_list|,
operator|&
name|b
argument_list|,
operator|&
name|a2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a2
argument_list|,
name|a
argument_list|)
expr_stmt|;
name|QColor
name|c
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|c
operator|.
name|setAlpha
argument_list|(
name|a
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|c
operator|.
name|alpha
argument_list|()
argument_list|,
name|a
argument_list|)
expr_stmt|;
block|}
block|{
comment|// 0.0-1.0
name|qreal
name|a
init|=
name|A
operator|/
name|qreal
argument_list|(
name|USHRT_MAX
argument_list|)
decl_stmt|;
name|color
operator|.
name|setRgbF
argument_list|(
literal|0.0
argument_list|,
literal|0.0
argument_list|,
literal|0.0
argument_list|,
name|a
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|color
operator|.
name|alphaF
argument_list|()
argument_list|,
name|a
argument_list|)
expr_stmt|;
name|qreal
name|r
decl_stmt|,
name|g
decl_stmt|,
name|b
decl_stmt|,
name|a2
decl_stmt|;
name|color
operator|.
name|getRgbF
argument_list|(
operator|&
name|r
argument_list|,
operator|&
name|g
argument_list|,
operator|&
name|b
argument_list|,
operator|&
name|a2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a2
argument_list|,
name|a
argument_list|)
expr_stmt|;
name|QColor
name|c
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|c
operator|.
name|setAlphaF
argument_list|(
name|a
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|c
operator|.
name|alphaF
argument_list|()
argument_list|,
name|a
argument_list|)
expr_stmt|;
block|}
block|}
for|for
control|(
name|int
name|R
init|=
literal|0
init|;
name|R
operator|<=
name|USHRT_MAX
condition|;
operator|++
name|R
control|)
block|{
block|{
comment|// 0-255
name|int
name|r
init|=
name|R
operator|>>
literal|8
decl_stmt|;
name|QRgb
name|rgb
init|=
name|qRgb
argument_list|(
name|r
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|color
operator|.
name|setRgb
argument_list|(
name|r
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|color
operator|.
name|red
argument_list|()
argument_list|,
name|r
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|color
operator|.
name|rgb
argument_list|()
argument_list|,
name|rgb
argument_list|)
expr_stmt|;
name|color
operator|.
name|setRgb
argument_list|(
name|rgb
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|color
operator|.
name|red
argument_list|()
argument_list|,
name|r
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|color
operator|.
name|rgb
argument_list|()
argument_list|,
name|rgb
argument_list|)
expr_stmt|;
name|int
name|r2
decl_stmt|,
name|g
decl_stmt|,
name|b
decl_stmt|,
name|a
decl_stmt|;
name|color
operator|.
name|getRgb
argument_list|(
operator|&
name|r2
argument_list|,
operator|&
name|g
argument_list|,
operator|&
name|b
argument_list|,
operator|&
name|a
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r2
argument_list|,
name|r
argument_list|)
expr_stmt|;
block|}
block|{
comment|// 0.0-1.0
name|qreal
name|r
init|=
name|R
operator|/
name|qreal
argument_list|(
name|USHRT_MAX
argument_list|)
decl_stmt|;
name|color
operator|.
name|setRgbF
argument_list|(
name|r
argument_list|,
literal|0.0
argument_list|,
literal|0.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|color
operator|.
name|redF
argument_list|()
argument_list|,
name|r
argument_list|)
expr_stmt|;
name|qreal
name|r2
decl_stmt|,
name|g
decl_stmt|,
name|b
decl_stmt|,
name|a
decl_stmt|;
name|color
operator|.
name|getRgbF
argument_list|(
operator|&
name|r2
argument_list|,
operator|&
name|g
argument_list|,
operator|&
name|b
argument_list|,
operator|&
name|a
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r2
argument_list|,
name|r
argument_list|)
expr_stmt|;
block|}
block|}
for|for
control|(
name|int
name|G
init|=
literal|0
init|;
name|G
operator|<=
name|USHRT_MAX
condition|;
operator|++
name|G
control|)
block|{
block|{
comment|// 0-255
name|int
name|g
init|=
name|G
operator|>>
literal|8
decl_stmt|;
name|QRgb
name|rgb
init|=
name|qRgb
argument_list|(
literal|0
argument_list|,
name|g
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|color
operator|.
name|setRgb
argument_list|(
literal|0
argument_list|,
name|g
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|color
operator|.
name|green
argument_list|()
argument_list|,
name|g
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|color
operator|.
name|rgb
argument_list|()
argument_list|,
name|rgb
argument_list|)
expr_stmt|;
name|color
operator|.
name|setRgb
argument_list|(
name|rgb
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|color
operator|.
name|green
argument_list|()
argument_list|,
name|g
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|color
operator|.
name|rgb
argument_list|()
argument_list|,
name|rgb
argument_list|)
expr_stmt|;
name|int
name|r
decl_stmt|,
name|g2
decl_stmt|,
name|b
decl_stmt|,
name|a
decl_stmt|;
name|color
operator|.
name|getRgb
argument_list|(
operator|&
name|r
argument_list|,
operator|&
name|g2
argument_list|,
operator|&
name|b
argument_list|,
operator|&
name|a
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|g2
argument_list|,
name|g
argument_list|)
expr_stmt|;
block|}
block|{
comment|// 0.0-1.0
name|qreal
name|g
init|=
name|G
operator|/
name|qreal
argument_list|(
name|USHRT_MAX
argument_list|)
decl_stmt|;
name|color
operator|.
name|setRgbF
argument_list|(
literal|0.0
argument_list|,
name|g
argument_list|,
literal|0.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|color
operator|.
name|greenF
argument_list|()
argument_list|,
name|g
argument_list|)
expr_stmt|;
name|qreal
name|r
decl_stmt|,
name|g2
decl_stmt|,
name|b
decl_stmt|,
name|a
decl_stmt|;
name|color
operator|.
name|getRgbF
argument_list|(
operator|&
name|r
argument_list|,
operator|&
name|g2
argument_list|,
operator|&
name|b
argument_list|,
operator|&
name|a
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|g2
argument_list|,
name|g
argument_list|)
expr_stmt|;
block|}
block|}
for|for
control|(
name|int
name|B
init|=
literal|0
init|;
name|B
operator|<=
name|USHRT_MAX
condition|;
operator|++
name|B
control|)
block|{
block|{
comment|// 0-255
name|int
name|b
init|=
name|B
operator|>>
literal|8
decl_stmt|;
name|QRgb
name|rgb
init|=
name|qRgb
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|b
argument_list|)
decl_stmt|;
name|color
operator|.
name|setRgb
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|b
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|color
operator|.
name|blue
argument_list|()
argument_list|,
name|b
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|color
operator|.
name|rgb
argument_list|()
argument_list|,
name|rgb
argument_list|)
expr_stmt|;
name|color
operator|.
name|setRgb
argument_list|(
name|rgb
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|color
operator|.
name|blue
argument_list|()
argument_list|,
name|b
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|color
operator|.
name|rgb
argument_list|()
argument_list|,
name|rgb
argument_list|)
expr_stmt|;
name|int
name|r
decl_stmt|,
name|g
decl_stmt|,
name|b2
decl_stmt|,
name|a
decl_stmt|;
name|color
operator|.
name|getRgb
argument_list|(
operator|&
name|r
argument_list|,
operator|&
name|g
argument_list|,
operator|&
name|b2
argument_list|,
operator|&
name|a
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|b2
argument_list|,
name|b
argument_list|)
expr_stmt|;
block|}
block|{
comment|// 0.0-1.0
name|qreal
name|b
init|=
name|B
operator|/
name|qreal
argument_list|(
name|USHRT_MAX
argument_list|)
decl_stmt|;
name|color
operator|.
name|setRgbF
argument_list|(
literal|0.0
argument_list|,
literal|0.0
argument_list|,
name|b
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|color
operator|.
name|blueF
argument_list|()
argument_list|,
name|b
argument_list|)
expr_stmt|;
name|qreal
name|r
decl_stmt|,
name|g
decl_stmt|,
name|b2
decl_stmt|,
name|a
decl_stmt|;
name|color
operator|.
name|getRgbF
argument_list|(
operator|&
name|r
argument_list|,
operator|&
name|g
argument_list|,
operator|&
name|b2
argument_list|,
operator|&
name|a
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|b2
argument_list|,
name|b
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_function
begin_function
DECL|function|setRgba
name|void
name|tst_QColor
operator|::
name|setRgba
parameter_list|()
block|{
for|for
control|(
name|int
name|a
init|=
literal|0
init|;
name|a
operator|<
literal|255
condition|;
operator|++
name|a
control|)
block|{
specifier|const
name|QRgb
name|rgba1
init|=
name|qRgba
argument_list|(
name|a
argument_list|,
name|a
argument_list|,
name|a
argument_list|,
name|a
argument_list|)
decl_stmt|;
name|QColor
name|color
decl_stmt|;
name|color
operator|.
name|setRgba
argument_list|(
name|rgba1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|color
operator|.
name|alpha
argument_list|()
argument_list|,
name|a
argument_list|)
expr_stmt|;
specifier|const
name|QRgb
name|rgba2
init|=
name|color
operator|.
name|rgba
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|rgba2
argument_list|,
name|rgba1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qAlpha
argument_list|(
name|rgba2
argument_list|)
argument_list|,
name|a
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|setHsv
name|void
name|tst_QColor
operator|::
name|setHsv
parameter_list|()
block|{
name|QColor
name|color
decl_stmt|;
for|for
control|(
name|int
name|A
init|=
literal|0
init|;
name|A
operator|<=
name|USHRT_MAX
condition|;
operator|++
name|A
control|)
block|{
block|{
comment|// 0-255
name|int
name|a
init|=
name|A
operator|>>
literal|8
decl_stmt|;
name|color
operator|.
name|setHsv
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|a
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|color
operator|.
name|alpha
argument_list|()
argument_list|,
name|a
argument_list|)
expr_stmt|;
name|int
name|h
decl_stmt|,
name|s
decl_stmt|,
name|v
decl_stmt|,
name|a2
decl_stmt|;
name|color
operator|.
name|getHsv
argument_list|(
operator|&
name|h
argument_list|,
operator|&
name|s
argument_list|,
operator|&
name|v
argument_list|,
operator|&
name|a2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a2
argument_list|,
name|a
argument_list|)
expr_stmt|;
block|}
block|{
comment|// 0.0-1.0
name|qreal
name|a
init|=
name|A
operator|/
name|qreal
argument_list|(
name|USHRT_MAX
argument_list|)
decl_stmt|;
name|color
operator|.
name|setHsvF
argument_list|(
literal|0.0
argument_list|,
literal|0.0
argument_list|,
literal|0.0
argument_list|,
name|a
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|color
operator|.
name|alphaF
argument_list|()
argument_list|,
name|a
argument_list|)
expr_stmt|;
name|qreal
name|h
decl_stmt|,
name|s
decl_stmt|,
name|v
decl_stmt|,
name|a2
decl_stmt|;
name|color
operator|.
name|getHsvF
argument_list|(
operator|&
name|h
argument_list|,
operator|&
name|s
argument_list|,
operator|&
name|v
argument_list|,
operator|&
name|a2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a2
argument_list|,
name|a
argument_list|)
expr_stmt|;
block|}
block|}
for|for
control|(
name|int
name|H
init|=
literal|0
init|;
name|H
operator|<
literal|36000
condition|;
operator|++
name|H
control|)
block|{
block|{
comment|// 0-255
name|int
name|h
init|=
name|H
operator|/
literal|100
decl_stmt|;
name|color
operator|.
name|setHsv
argument_list|(
name|h
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|color
operator|.
name|hue
argument_list|()
argument_list|,
name|h
argument_list|)
expr_stmt|;
name|int
name|h2
decl_stmt|,
name|s
decl_stmt|,
name|v
decl_stmt|,
name|a
decl_stmt|;
name|color
operator|.
name|getHsv
argument_list|(
operator|&
name|h2
argument_list|,
operator|&
name|s
argument_list|,
operator|&
name|v
argument_list|,
operator|&
name|a
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|h2
argument_list|,
name|h
argument_list|)
expr_stmt|;
block|}
block|{
comment|// 0.0-1.0
name|qreal
name|h
init|=
name|H
operator|/
literal|36000.0
decl_stmt|;
name|color
operator|.
name|setHsvF
argument_list|(
name|h
argument_list|,
literal|0.0
argument_list|,
literal|0.0
argument_list|,
literal|0.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|color
operator|.
name|hueF
argument_list|()
argument_list|,
name|h
argument_list|)
expr_stmt|;
name|qreal
name|h2
decl_stmt|,
name|s
decl_stmt|,
name|v
decl_stmt|,
name|a
decl_stmt|;
name|color
operator|.
name|getHsvF
argument_list|(
operator|&
name|h2
argument_list|,
operator|&
name|s
argument_list|,
operator|&
name|v
argument_list|,
operator|&
name|a
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|h2
argument_list|,
name|h
argument_list|)
expr_stmt|;
block|}
block|}
for|for
control|(
name|int
name|S
init|=
literal|0
init|;
name|S
operator|<=
name|USHRT_MAX
condition|;
operator|++
name|S
control|)
block|{
block|{
comment|// 0-255
name|int
name|s
init|=
name|S
operator|>>
literal|8
decl_stmt|;
name|color
operator|.
name|setHsv
argument_list|(
literal|0
argument_list|,
name|s
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|color
operator|.
name|saturation
argument_list|()
argument_list|,
name|s
argument_list|)
expr_stmt|;
name|int
name|h
decl_stmt|,
name|s2
decl_stmt|,
name|v
decl_stmt|,
name|a
decl_stmt|;
name|color
operator|.
name|getHsv
argument_list|(
operator|&
name|h
argument_list|,
operator|&
name|s2
argument_list|,
operator|&
name|v
argument_list|,
operator|&
name|a
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s2
argument_list|,
name|s
argument_list|)
expr_stmt|;
block|}
block|{
comment|// 0.0-1.0
name|qreal
name|s
init|=
name|S
operator|/
name|qreal
argument_list|(
name|USHRT_MAX
argument_list|)
decl_stmt|;
name|color
operator|.
name|setHsvF
argument_list|(
literal|0.0
argument_list|,
name|s
argument_list|,
literal|0.0
argument_list|,
literal|0.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|color
operator|.
name|saturationF
argument_list|()
argument_list|,
name|s
argument_list|)
expr_stmt|;
name|qreal
name|h
decl_stmt|,
name|s2
decl_stmt|,
name|v
decl_stmt|,
name|a
decl_stmt|;
name|color
operator|.
name|getHsvF
argument_list|(
operator|&
name|h
argument_list|,
operator|&
name|s2
argument_list|,
operator|&
name|v
argument_list|,
operator|&
name|a
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s2
argument_list|,
name|s
argument_list|)
expr_stmt|;
block|}
block|}
for|for
control|(
name|int
name|V
init|=
literal|0
init|;
name|V
operator|<=
name|USHRT_MAX
condition|;
operator|++
name|V
control|)
block|{
block|{
comment|// 0-255
name|int
name|v
init|=
name|V
operator|>>
literal|8
decl_stmt|;
name|color
operator|.
name|setHsv
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|v
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|color
operator|.
name|value
argument_list|()
argument_list|,
name|v
argument_list|)
expr_stmt|;
name|int
name|h
decl_stmt|,
name|s
decl_stmt|,
name|v2
decl_stmt|,
name|a
decl_stmt|;
name|color
operator|.
name|getHsv
argument_list|(
operator|&
name|h
argument_list|,
operator|&
name|s
argument_list|,
operator|&
name|v2
argument_list|,
operator|&
name|a
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|v2
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
block|{
comment|// 0.0-1.0
name|qreal
name|v
init|=
name|V
operator|/
name|qreal
argument_list|(
name|USHRT_MAX
argument_list|)
decl_stmt|;
name|color
operator|.
name|setHsvF
argument_list|(
literal|0.0
argument_list|,
literal|0.0
argument_list|,
name|v
argument_list|,
literal|0.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|color
operator|.
name|valueF
argument_list|()
argument_list|,
name|v
argument_list|)
expr_stmt|;
name|qreal
name|h
decl_stmt|,
name|s
decl_stmt|,
name|v2
decl_stmt|,
name|a
decl_stmt|;
name|color
operator|.
name|getHsvF
argument_list|(
operator|&
name|h
argument_list|,
operator|&
name|s
argument_list|,
operator|&
name|v2
argument_list|,
operator|&
name|a
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|v2
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_function
begin_function
DECL|function|setCmyk
name|void
name|tst_QColor
operator|::
name|setCmyk
parameter_list|()
block|{
name|QColor
name|color
decl_stmt|;
for|for
control|(
name|int
name|A
init|=
literal|0
init|;
name|A
operator|<=
name|USHRT_MAX
condition|;
operator|++
name|A
control|)
block|{
block|{
comment|// 0-255
name|int
name|a
init|=
name|A
operator|>>
literal|8
decl_stmt|;
name|color
operator|.
name|setCmyk
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|a
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|color
operator|.
name|alpha
argument_list|()
argument_list|,
name|a
argument_list|)
expr_stmt|;
name|int
name|c
decl_stmt|,
name|m
decl_stmt|,
name|y
decl_stmt|,
name|k
decl_stmt|,
name|a2
decl_stmt|;
name|color
operator|.
name|getCmyk
argument_list|(
operator|&
name|c
argument_list|,
operator|&
name|m
argument_list|,
operator|&
name|y
argument_list|,
operator|&
name|k
argument_list|,
operator|&
name|a2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a2
argument_list|,
name|a
argument_list|)
expr_stmt|;
block|}
block|{
comment|// 0.0-1.0
name|qreal
name|a
init|=
name|A
operator|/
name|qreal
argument_list|(
name|USHRT_MAX
argument_list|)
decl_stmt|;
name|color
operator|.
name|setCmykF
argument_list|(
literal|0.0
argument_list|,
literal|0.0
argument_list|,
literal|0.0
argument_list|,
literal|0.0
argument_list|,
name|a
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|color
operator|.
name|alphaF
argument_list|()
argument_list|,
name|a
argument_list|)
expr_stmt|;
name|qreal
name|c
decl_stmt|,
name|m
decl_stmt|,
name|y
decl_stmt|,
name|k
decl_stmt|,
name|a2
decl_stmt|;
name|color
operator|.
name|getCmykF
argument_list|(
operator|&
name|c
argument_list|,
operator|&
name|m
argument_list|,
operator|&
name|y
argument_list|,
operator|&
name|k
argument_list|,
operator|&
name|a2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a2
argument_list|,
name|a
argument_list|)
expr_stmt|;
block|}
block|}
for|for
control|(
name|int
name|C
init|=
literal|0
init|;
name|C
operator|<=
name|USHRT_MAX
condition|;
operator|++
name|C
control|)
block|{
block|{
comment|// 0-255
name|int
name|c
init|=
name|C
operator|>>
literal|8
decl_stmt|;
name|color
operator|.
name|setCmyk
argument_list|(
name|c
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|color
operator|.
name|cyan
argument_list|()
argument_list|,
name|c
argument_list|)
expr_stmt|;
name|int
name|c2
decl_stmt|,
name|m
decl_stmt|,
name|y
decl_stmt|,
name|k
decl_stmt|,
name|a
decl_stmt|;
name|color
operator|.
name|getCmyk
argument_list|(
operator|&
name|c2
argument_list|,
operator|&
name|m
argument_list|,
operator|&
name|y
argument_list|,
operator|&
name|k
argument_list|,
operator|&
name|a
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|c2
argument_list|,
name|c
argument_list|)
expr_stmt|;
block|}
block|{
comment|// 0.0-1.0
name|qreal
name|c
init|=
name|C
operator|/
name|qreal
argument_list|(
name|USHRT_MAX
argument_list|)
decl_stmt|;
name|color
operator|.
name|setCmykF
argument_list|(
name|c
argument_list|,
literal|0.0
argument_list|,
literal|0.0
argument_list|,
literal|0.0
argument_list|,
literal|0.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|color
operator|.
name|cyanF
argument_list|()
argument_list|,
name|c
argument_list|)
expr_stmt|;
name|qreal
name|c2
decl_stmt|,
name|m
decl_stmt|,
name|y
decl_stmt|,
name|k
decl_stmt|,
name|a
decl_stmt|;
name|color
operator|.
name|getCmykF
argument_list|(
operator|&
name|c2
argument_list|,
operator|&
name|m
argument_list|,
operator|&
name|y
argument_list|,
operator|&
name|k
argument_list|,
operator|&
name|a
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|c2
argument_list|,
name|c
argument_list|)
expr_stmt|;
block|}
block|}
for|for
control|(
name|int
name|M
init|=
literal|0
init|;
name|M
operator|<=
name|USHRT_MAX
condition|;
operator|++
name|M
control|)
block|{
block|{
comment|// 0-255
name|int
name|m
init|=
name|M
operator|>>
literal|8
decl_stmt|;
name|color
operator|.
name|setCmyk
argument_list|(
literal|0
argument_list|,
name|m
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|color
operator|.
name|magenta
argument_list|()
argument_list|,
name|m
argument_list|)
expr_stmt|;
name|int
name|c
decl_stmt|,
name|m2
decl_stmt|,
name|y
decl_stmt|,
name|k
decl_stmt|,
name|a
decl_stmt|;
name|color
operator|.
name|getCmyk
argument_list|(
operator|&
name|c
argument_list|,
operator|&
name|m2
argument_list|,
operator|&
name|y
argument_list|,
operator|&
name|k
argument_list|,
operator|&
name|a
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|m2
argument_list|,
name|m
argument_list|)
expr_stmt|;
block|}
block|{
comment|// 0.0-1.0
name|qreal
name|m
init|=
name|M
operator|/
name|qreal
argument_list|(
name|USHRT_MAX
argument_list|)
decl_stmt|;
name|color
operator|.
name|setCmykF
argument_list|(
literal|0.0
argument_list|,
name|m
argument_list|,
literal|0.0
argument_list|,
literal|0.0
argument_list|,
literal|0.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|color
operator|.
name|magentaF
argument_list|()
argument_list|,
name|m
argument_list|)
expr_stmt|;
name|qreal
name|c
decl_stmt|,
name|m2
decl_stmt|,
name|y
decl_stmt|,
name|k
decl_stmt|,
name|a
decl_stmt|;
name|color
operator|.
name|getCmykF
argument_list|(
operator|&
name|c
argument_list|,
operator|&
name|m2
argument_list|,
operator|&
name|y
argument_list|,
operator|&
name|k
argument_list|,
operator|&
name|a
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|m2
argument_list|,
name|m
argument_list|)
expr_stmt|;
block|}
block|}
for|for
control|(
name|int
name|Y
init|=
literal|0
init|;
name|Y
operator|<=
name|USHRT_MAX
condition|;
operator|++
name|Y
control|)
block|{
block|{
comment|// 0-255
name|int
name|y
init|=
name|Y
operator|>>
literal|8
decl_stmt|;
name|color
operator|.
name|setCmyk
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|y
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|color
operator|.
name|yellow
argument_list|()
argument_list|,
name|y
argument_list|)
expr_stmt|;
name|int
name|c
decl_stmt|,
name|m
decl_stmt|,
name|y2
decl_stmt|,
name|k
decl_stmt|,
name|a
decl_stmt|;
name|color
operator|.
name|getCmyk
argument_list|(
operator|&
name|c
argument_list|,
operator|&
name|m
argument_list|,
operator|&
name|y2
argument_list|,
operator|&
name|k
argument_list|,
operator|&
name|a
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|y2
argument_list|,
name|y
argument_list|)
expr_stmt|;
block|}
block|{
comment|// 0.0-1.0
name|qreal
name|y
init|=
name|Y
operator|/
name|qreal
argument_list|(
name|USHRT_MAX
argument_list|)
decl_stmt|;
name|color
operator|.
name|setCmykF
argument_list|(
literal|0.0
argument_list|,
literal|0.0
argument_list|,
name|y
argument_list|,
literal|0.0
argument_list|,
literal|0.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|color
operator|.
name|yellowF
argument_list|()
argument_list|,
name|y
argument_list|)
expr_stmt|;
name|qreal
name|c
decl_stmt|,
name|m
decl_stmt|,
name|y2
decl_stmt|,
name|k
decl_stmt|,
name|a
decl_stmt|;
name|color
operator|.
name|getCmykF
argument_list|(
operator|&
name|c
argument_list|,
operator|&
name|m
argument_list|,
operator|&
name|y2
argument_list|,
operator|&
name|k
argument_list|,
operator|&
name|a
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|y2
argument_list|,
name|y
argument_list|)
expr_stmt|;
block|}
block|}
for|for
control|(
name|int
name|K
init|=
literal|0
init|;
name|K
operator|<=
name|USHRT_MAX
condition|;
operator|++
name|K
control|)
block|{
block|{
comment|// 0-255
name|int
name|k
init|=
name|K
operator|>>
literal|8
decl_stmt|;
name|color
operator|.
name|setCmyk
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|k
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|color
operator|.
name|black
argument_list|()
argument_list|,
name|k
argument_list|)
expr_stmt|;
name|int
name|c
decl_stmt|,
name|m
decl_stmt|,
name|y
decl_stmt|,
name|k2
decl_stmt|,
name|a
decl_stmt|;
name|color
operator|.
name|getCmyk
argument_list|(
operator|&
name|c
argument_list|,
operator|&
name|m
argument_list|,
operator|&
name|y
argument_list|,
operator|&
name|k2
argument_list|,
operator|&
name|a
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|k2
argument_list|,
name|k
argument_list|)
expr_stmt|;
block|}
block|{
comment|// 0.0-1.0
name|qreal
name|k
init|=
name|K
operator|/
name|qreal
argument_list|(
name|USHRT_MAX
argument_list|)
decl_stmt|;
name|color
operator|.
name|setCmykF
argument_list|(
literal|0.0
argument_list|,
literal|0.0
argument_list|,
literal|0.0
argument_list|,
name|k
argument_list|,
literal|0.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|color
operator|.
name|blackF
argument_list|()
argument_list|,
name|k
argument_list|)
expr_stmt|;
name|qreal
name|c
decl_stmt|,
name|m
decl_stmt|,
name|y
decl_stmt|,
name|k2
decl_stmt|,
name|a
decl_stmt|;
name|color
operator|.
name|getCmykF
argument_list|(
operator|&
name|c
argument_list|,
operator|&
name|m
argument_list|,
operator|&
name|y
argument_list|,
operator|&
name|k2
argument_list|,
operator|&
name|a
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|k2
argument_list|,
name|k
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_function
begin_function
DECL|function|setHsl
name|void
name|tst_QColor
operator|::
name|setHsl
parameter_list|()
block|{
name|QColor
name|color
decl_stmt|;
for|for
control|(
name|int
name|A
init|=
literal|0
init|;
name|A
operator|<=
name|USHRT_MAX
condition|;
operator|++
name|A
control|)
block|{
block|{
comment|// 0-255
name|int
name|a
init|=
name|A
operator|>>
literal|8
decl_stmt|;
name|color
operator|.
name|setHsl
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|a
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|color
operator|.
name|alpha
argument_list|()
argument_list|,
name|a
argument_list|)
expr_stmt|;
name|int
name|h
decl_stmt|,
name|s
decl_stmt|,
name|l
decl_stmt|,
name|a2
decl_stmt|;
name|color
operator|.
name|getHsv
argument_list|(
operator|&
name|h
argument_list|,
operator|&
name|s
argument_list|,
operator|&
name|l
argument_list|,
operator|&
name|a2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a2
argument_list|,
name|a
argument_list|)
expr_stmt|;
block|}
block|{
comment|// 0.0-1.0
name|qreal
name|a
init|=
name|A
operator|/
name|qreal
argument_list|(
name|USHRT_MAX
argument_list|)
decl_stmt|;
name|color
operator|.
name|setHslF
argument_list|(
literal|0.0
argument_list|,
literal|0.0
argument_list|,
literal|0.0
argument_list|,
name|a
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|color
operator|.
name|alphaF
argument_list|()
argument_list|,
name|a
argument_list|)
expr_stmt|;
name|qreal
name|h
decl_stmt|,
name|s
decl_stmt|,
name|l
decl_stmt|,
name|a2
decl_stmt|;
name|color
operator|.
name|getHslF
argument_list|(
operator|&
name|h
argument_list|,
operator|&
name|s
argument_list|,
operator|&
name|l
argument_list|,
operator|&
name|a2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a2
argument_list|,
name|a
argument_list|)
expr_stmt|;
block|}
block|}
for|for
control|(
name|int
name|H
init|=
literal|0
init|;
name|H
operator|<
literal|36000
condition|;
operator|++
name|H
control|)
block|{
block|{
comment|// 0-255
name|int
name|h
init|=
name|H
operator|/
literal|100
decl_stmt|;
name|color
operator|.
name|setHsl
argument_list|(
name|h
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|color
operator|.
name|hslHue
argument_list|()
argument_list|,
name|h
argument_list|)
expr_stmt|;
name|int
name|h2
decl_stmt|,
name|s
decl_stmt|,
name|l
decl_stmt|,
name|a
decl_stmt|;
name|color
operator|.
name|getHsl
argument_list|(
operator|&
name|h2
argument_list|,
operator|&
name|s
argument_list|,
operator|&
name|l
argument_list|,
operator|&
name|a
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|h2
argument_list|,
name|h
argument_list|)
expr_stmt|;
block|}
block|{
comment|// 0.0-1.0
name|qreal
name|h
init|=
name|H
operator|/
literal|36000.0
decl_stmt|;
name|color
operator|.
name|setHslF
argument_list|(
name|h
argument_list|,
literal|0.0
argument_list|,
literal|0.0
argument_list|,
literal|0.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|color
operator|.
name|hslHueF
argument_list|()
argument_list|,
name|h
argument_list|)
expr_stmt|;
name|qreal
name|h2
decl_stmt|,
name|s
decl_stmt|,
name|l
decl_stmt|,
name|a
decl_stmt|;
name|color
operator|.
name|getHslF
argument_list|(
operator|&
name|h2
argument_list|,
operator|&
name|s
argument_list|,
operator|&
name|l
argument_list|,
operator|&
name|a
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|h2
argument_list|,
name|h
argument_list|)
expr_stmt|;
block|}
block|}
for|for
control|(
name|int
name|S
init|=
literal|0
init|;
name|S
operator|<=
name|USHRT_MAX
condition|;
operator|++
name|S
control|)
block|{
block|{
comment|// 0-255
name|int
name|s
init|=
name|S
operator|>>
literal|8
decl_stmt|;
name|color
operator|.
name|setHsl
argument_list|(
literal|0
argument_list|,
name|s
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|color
operator|.
name|hslSaturation
argument_list|()
argument_list|,
name|s
argument_list|)
expr_stmt|;
name|int
name|h
decl_stmt|,
name|s2
decl_stmt|,
name|l
decl_stmt|,
name|a
decl_stmt|;
name|color
operator|.
name|getHsl
argument_list|(
operator|&
name|h
argument_list|,
operator|&
name|s2
argument_list|,
operator|&
name|l
argument_list|,
operator|&
name|a
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s2
argument_list|,
name|s
argument_list|)
expr_stmt|;
block|}
block|{
comment|// 0.0-1.0
name|qreal
name|s
init|=
name|S
operator|/
name|qreal
argument_list|(
name|USHRT_MAX
argument_list|)
decl_stmt|;
name|color
operator|.
name|setHslF
argument_list|(
literal|0.0
argument_list|,
name|s
argument_list|,
literal|0.0
argument_list|,
literal|0.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|color
operator|.
name|hslSaturationF
argument_list|()
argument_list|,
name|s
argument_list|)
expr_stmt|;
name|qreal
name|h
decl_stmt|,
name|s2
decl_stmt|,
name|l
decl_stmt|,
name|a
decl_stmt|;
name|color
operator|.
name|getHslF
argument_list|(
operator|&
name|h
argument_list|,
operator|&
name|s2
argument_list|,
operator|&
name|l
argument_list|,
operator|&
name|a
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s2
argument_list|,
name|s
argument_list|)
expr_stmt|;
block|}
block|}
for|for
control|(
name|int
name|L
init|=
literal|0
init|;
name|L
operator|<=
name|USHRT_MAX
condition|;
operator|++
name|L
control|)
block|{
block|{
comment|// 0-255
name|int
name|l
init|=
name|L
operator|>>
literal|8
decl_stmt|;
name|color
operator|.
name|setHsl
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|l
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|color
operator|.
name|lightness
argument_list|()
argument_list|,
name|l
argument_list|)
expr_stmt|;
name|int
name|h
decl_stmt|,
name|s
decl_stmt|,
name|l2
decl_stmt|,
name|a
decl_stmt|;
name|color
operator|.
name|getHsl
argument_list|(
operator|&
name|h
argument_list|,
operator|&
name|s
argument_list|,
operator|&
name|l2
argument_list|,
operator|&
name|a
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|l2
argument_list|,
name|l
argument_list|)
expr_stmt|;
block|}
block|{
comment|// 0.0-1.0
name|qreal
name|l
init|=
name|L
operator|/
name|qreal
argument_list|(
name|USHRT_MAX
argument_list|)
decl_stmt|;
name|color
operator|.
name|setHslF
argument_list|(
literal|0.0
argument_list|,
literal|0.0
argument_list|,
name|l
argument_list|,
literal|0.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|color
operator|.
name|lightnessF
argument_list|()
argument_list|,
name|l
argument_list|)
expr_stmt|;
name|qreal
name|h
decl_stmt|,
name|s
decl_stmt|,
name|l2
decl_stmt|,
name|a
decl_stmt|;
name|color
operator|.
name|getHslF
argument_list|(
operator|&
name|h
argument_list|,
operator|&
name|s
argument_list|,
operator|&
name|l2
argument_list|,
operator|&
name|a
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|l2
argument_list|,
name|l
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_function
begin_function
DECL|function|toRgb_data
name|void
name|tst_QColor
operator|::
name|toRgb_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QColor
argument_list|>
argument_list|(
literal|"expectedColor"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QColor
argument_list|>
argument_list|(
literal|"hsvColor"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QColor
argument_list|>
argument_list|(
literal|"cmykColor"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QColor
argument_list|>
argument_list|(
literal|"hslColor"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"black"
argument_list|)
operator|<<
name|QColor
operator|::
name|fromRgbF
argument_list|(
literal|0.0
argument_list|,
literal|0.0
argument_list|,
literal|0.0
argument_list|)
operator|<<
name|QColor
operator|::
name|fromHsvF
argument_list|(
operator|-
literal|1.0
argument_list|,
literal|0.0
argument_list|,
literal|0.0
argument_list|)
operator|<<
name|QColor
operator|::
name|fromCmykF
argument_list|(
literal|0.0
argument_list|,
literal|0.0
argument_list|,
literal|0.0
argument_list|,
literal|1.0
argument_list|)
operator|<<
name|QColor
operator|::
name|fromHslF
argument_list|(
operator|-
literal|1.0
argument_list|,
literal|0.0
argument_list|,
literal|0.0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"white"
argument_list|)
operator|<<
name|QColor
operator|::
name|fromRgbF
argument_list|(
literal|1.0
argument_list|,
literal|1.0
argument_list|,
literal|1.0
argument_list|)
operator|<<
name|QColor
operator|::
name|fromHsvF
argument_list|(
operator|-
literal|1.0
argument_list|,
literal|0.0
argument_list|,
literal|1.0
argument_list|)
operator|<<
name|QColor
operator|::
name|fromCmykF
argument_list|(
literal|0.0
argument_list|,
literal|0.0
argument_list|,
literal|0.0
argument_list|,
literal|0.0
argument_list|)
operator|<<
name|QColor
operator|::
name|fromHslF
argument_list|(
operator|-
literal|1.0
argument_list|,
literal|0.0
argument_list|,
literal|1.0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"red"
argument_list|)
operator|<<
name|QColor
operator|::
name|fromRgbF
argument_list|(
literal|1.0
argument_list|,
literal|0.0
argument_list|,
literal|0.0
argument_list|)
operator|<<
name|QColor
operator|::
name|fromHsvF
argument_list|(
literal|0.0
argument_list|,
literal|1.0
argument_list|,
literal|1.0
argument_list|)
operator|<<
name|QColor
operator|::
name|fromCmykF
argument_list|(
literal|0.0
argument_list|,
literal|1.0
argument_list|,
literal|1.0
argument_list|,
literal|0.0
argument_list|)
operator|<<
name|QColor
operator|::
name|fromHslF
argument_list|(
literal|0.0
argument_list|,
literal|1.0
argument_list|,
literal|0.5
argument_list|,
literal|1.0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"green"
argument_list|)
operator|<<
name|QColor
operator|::
name|fromRgbF
argument_list|(
literal|0.0
argument_list|,
literal|1.0
argument_list|,
literal|0.0
argument_list|)
operator|<<
name|QColor
operator|::
name|fromHsvF
argument_list|(
literal|0.33333
argument_list|,
literal|1.0
argument_list|,
literal|1.0
argument_list|)
operator|<<
name|QColor
operator|::
name|fromCmykF
argument_list|(
literal|1.0
argument_list|,
literal|0.0
argument_list|,
literal|1.0
argument_list|,
literal|0.0
argument_list|)
operator|<<
name|QColor
operator|::
name|fromHslF
argument_list|(
literal|0.33333
argument_list|,
literal|1.0
argument_list|,
literal|0.5
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"blue"
argument_list|)
operator|<<
name|QColor
operator|::
name|fromRgbF
argument_list|(
literal|0.0
argument_list|,
literal|0.0
argument_list|,
literal|1.0
argument_list|)
operator|<<
name|QColor
operator|::
name|fromHsvF
argument_list|(
literal|0.66667
argument_list|,
literal|1.0
argument_list|,
literal|1.0
argument_list|)
operator|<<
name|QColor
operator|::
name|fromCmykF
argument_list|(
literal|1.0
argument_list|,
literal|1.0
argument_list|,
literal|0.0
argument_list|,
literal|0.0
argument_list|)
operator|<<
name|QColor
operator|::
name|fromHslF
argument_list|(
literal|0.66667
argument_list|,
literal|1.0
argument_list|,
literal|0.5
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"cyan"
argument_list|)
operator|<<
name|QColor
operator|::
name|fromRgbF
argument_list|(
literal|0.0
argument_list|,
literal|1.0
argument_list|,
literal|1.0
argument_list|)
operator|<<
name|QColor
operator|::
name|fromHsvF
argument_list|(
literal|0.5
argument_list|,
literal|1.0
argument_list|,
literal|1.0
argument_list|)
operator|<<
name|QColor
operator|::
name|fromCmykF
argument_list|(
literal|1.0
argument_list|,
literal|0.0
argument_list|,
literal|0.0
argument_list|,
literal|0.0
argument_list|)
operator|<<
name|QColor
operator|::
name|fromHslF
argument_list|(
literal|0.5
argument_list|,
literal|1.0
argument_list|,
literal|0.5
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"magenta"
argument_list|)
operator|<<
name|QColor
operator|::
name|fromRgbF
argument_list|(
literal|1.0
argument_list|,
literal|0.0
argument_list|,
literal|1.0
argument_list|)
operator|<<
name|QColor
operator|::
name|fromHsvF
argument_list|(
literal|0.83333
argument_list|,
literal|1.0
argument_list|,
literal|1.0
argument_list|)
operator|<<
name|QColor
operator|::
name|fromCmykF
argument_list|(
literal|0.0
argument_list|,
literal|1.0
argument_list|,
literal|0.0
argument_list|,
literal|0.0
argument_list|)
operator|<<
name|QColor
operator|::
name|fromHslF
argument_list|(
literal|0.83333
argument_list|,
literal|1.0
argument_list|,
literal|0.5
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"yellow"
argument_list|)
operator|<<
name|QColor
operator|::
name|fromRgbF
argument_list|(
literal|1.0
argument_list|,
literal|1.0
argument_list|,
literal|0.0
argument_list|)
operator|<<
name|QColor
operator|::
name|fromHsvF
argument_list|(
literal|0.16667
argument_list|,
literal|1.0
argument_list|,
literal|1.0
argument_list|)
operator|<<
name|QColor
operator|::
name|fromCmykF
argument_list|(
literal|0.0
argument_list|,
literal|0.0
argument_list|,
literal|1.0
argument_list|,
literal|0.0
argument_list|)
operator|<<
name|QColor
operator|::
name|fromHslF
argument_list|(
literal|0.16667
argument_list|,
literal|1.0
argument_list|,
literal|0.5
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"gray"
argument_list|)
operator|<<
name|QColor
operator|::
name|fromRgbF
argument_list|(
literal|0.6431375
argument_list|,
literal|0.6431375
argument_list|,
literal|0.6431375
argument_list|)
operator|<<
name|QColor
operator|::
name|fromHsvF
argument_list|(
operator|-
literal|1.0
argument_list|,
literal|0.0
argument_list|,
literal|0.6431375
argument_list|)
operator|<<
name|QColor
operator|::
name|fromCmykF
argument_list|(
literal|0.0
argument_list|,
literal|0.0
argument_list|,
literal|0.0
argument_list|,
literal|0.356863
argument_list|)
operator|<<
name|QColor
operator|::
name|fromHslF
argument_list|(
operator|-
literal|1.0
argument_list|,
literal|0.0
argument_list|,
literal|0.6431375
argument_list|)
expr_stmt|;
comment|// ### add colors using the 0-255 functions
block|}
end_function
begin_function
DECL|function|toRgb
name|void
name|tst_QColor
operator|::
name|toRgb
parameter_list|()
block|{
comment|// invalid should remain invalid
name|QVERIFY
argument_list|(
operator|!
name|QColor
argument_list|()
operator|.
name|toRgb
argument_list|()
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QColor
argument_list|,
name|expectedColor
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QColor
argument_list|,
name|hsvColor
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QColor
argument_list|,
name|cmykColor
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QColor
argument_list|,
name|hslColor
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|hsvColor
operator|.
name|toRgb
argument_list|()
argument_list|,
name|expectedColor
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|cmykColor
operator|.
name|toRgb
argument_list|()
argument_list|,
name|expectedColor
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|hslColor
operator|.
name|toRgb
argument_list|()
argument_list|,
name|expectedColor
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toHsv_data
name|void
name|tst_QColor
operator|::
name|toHsv_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QColor
argument_list|>
argument_list|(
literal|"expectedColor"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QColor
argument_list|>
argument_list|(
literal|"rgbColor"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QColor
argument_list|>
argument_list|(
literal|"cmykColor"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QColor
argument_list|>
argument_list|(
literal|"hslColor"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data0"
argument_list|)
operator|<<
name|QColor
operator|::
name|fromHsv
argument_list|(
literal|300
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|)
operator|<<
name|QColor
argument_list|(
literal|255
argument_list|,
literal|0
argument_list|,
literal|255
argument_list|)
operator|<<
name|QColor
operator|::
name|fromCmyk
argument_list|(
literal|0
argument_list|,
literal|255
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QColor
operator|::
name|fromHslF
argument_list|(
literal|300.
operator|/
literal|360.
argument_list|,
literal|1.
argument_list|,
literal|0.5
argument_list|,
literal|1.0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data1"
argument_list|)
operator|<<
name|QColor
operator|::
name|fromHsvF
argument_list|(
literal|1.
argument_list|,
literal|1.
argument_list|,
literal|1.
argument_list|,
literal|1.
argument_list|)
operator|<<
name|QColor
argument_list|(
literal|255
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|255
argument_list|)
operator|<<
name|QColor
operator|::
name|fromCmykF
argument_list|(
literal|0.
argument_list|,
literal|1.
argument_list|,
literal|1.
argument_list|,
literal|0.
argument_list|)
operator|<<
name|QColor
operator|::
name|fromHsvF
argument_list|(
literal|1.
argument_list|,
literal|1.
argument_list|,
literal|1.
argument_list|,
literal|1.
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toRgbNonDestructive
name|void
name|tst_QColor
operator|::
name|toRgbNonDestructive
parameter_list|()
block|{
name|QColor
name|aColor
init|=
name|QColor
operator|::
name|fromRgbF
argument_list|(
literal|0.11
argument_list|,
literal|0.22
argument_list|,
literal|0.33
argument_list|,
literal|0.44
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|aColor
argument_list|,
name|aColor
operator|.
name|toRgb
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toHsv
name|void
name|tst_QColor
operator|::
name|toHsv
parameter_list|()
block|{
comment|// invalid should remain invalid
name|QVERIFY
argument_list|(
operator|!
name|QColor
argument_list|()
operator|.
name|toHsv
argument_list|()
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QColor
argument_list|,
name|expectedColor
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QColor
argument_list|,
name|rgbColor
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QColor
argument_list|,
name|cmykColor
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QColor
argument_list|,
name|hslColor
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rgbColor
operator|.
name|toHsv
argument_list|()
argument_list|,
name|expectedColor
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|cmykColor
operator|.
name|toHsv
argument_list|()
argument_list|,
name|expectedColor
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|hslColor
operator|.
name|toHsv
argument_list|()
argument_list|,
name|expectedColor
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toHsvNonDestructive
name|void
name|tst_QColor
operator|::
name|toHsvNonDestructive
parameter_list|()
block|{
name|QColor
name|aColor
init|=
name|QColor
operator|::
name|fromHsvF
argument_list|(
literal|0.11
argument_list|,
literal|0.22
argument_list|,
literal|0.33
argument_list|,
literal|0.44
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|aColor
argument_list|,
name|aColor
operator|.
name|toHsv
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toCmyk_data
name|void
name|tst_QColor
operator|::
name|toCmyk_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QColor
argument_list|>
argument_list|(
literal|"expectedColor"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QColor
argument_list|>
argument_list|(
literal|"rgbColor"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QColor
argument_list|>
argument_list|(
literal|"hsvColor"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QColor
argument_list|>
argument_list|(
literal|"hslColor"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data0"
argument_list|)
operator|<<
name|QColor
operator|::
name|fromCmykF
argument_list|(
literal|1.0
argument_list|,
literal|0.0
argument_list|,
literal|0.0
argument_list|,
literal|0.0
argument_list|)
operator|<<
name|QColor
argument_list|(
literal|0
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|)
operator|<<
name|QColor
operator|::
name|fromHsv
argument_list|(
literal|180
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|)
operator|<<
name|QColor
operator|::
name|fromHslF
argument_list|(
literal|180.
operator|/
literal|360.
argument_list|,
literal|1.
argument_list|,
literal|0.5
argument_list|,
literal|1.0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data1"
argument_list|)
operator|<<
name|QColor
operator|::
name|fromCmyk
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|)
operator|<<
name|QColor
operator|::
name|fromRgb
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QColor
operator|::
name|fromRgb
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|toHsv
argument_list|()
operator|<<
name|QColor
operator|::
name|fromRgb
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|toHsl
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toCmyk
name|void
name|tst_QColor
operator|::
name|toCmyk
parameter_list|()
block|{
comment|// invalid should remain invalid
name|QVERIFY
argument_list|(
operator|!
name|QColor
argument_list|()
operator|.
name|toCmyk
argument_list|()
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QColor
argument_list|,
name|expectedColor
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QColor
argument_list|,
name|rgbColor
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QColor
argument_list|,
name|hsvColor
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QColor
argument_list|,
name|hslColor
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rgbColor
operator|.
name|toHsv
argument_list|()
operator|.
name|toCmyk
argument_list|()
argument_list|,
name|expectedColor
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|hsvColor
operator|.
name|toCmyk
argument_list|()
argument_list|,
name|expectedColor
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|hslColor
operator|.
name|toCmyk
argument_list|()
argument_list|,
name|expectedColor
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toCmykNonDestructive
name|void
name|tst_QColor
operator|::
name|toCmykNonDestructive
parameter_list|()
block|{
name|QColor
name|aColor
init|=
name|QColor
operator|::
name|fromCmykF
argument_list|(
literal|0.11
argument_list|,
literal|0.22
argument_list|,
literal|0.33
argument_list|,
literal|0.44
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|aColor
argument_list|,
name|aColor
operator|.
name|toCmyk
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toHsl_data
name|void
name|tst_QColor
operator|::
name|toHsl_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QColor
argument_list|>
argument_list|(
literal|"expectedColor"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QColor
argument_list|>
argument_list|(
literal|"hsvColor"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QColor
argument_list|>
argument_list|(
literal|"rgbColor"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QColor
argument_list|>
argument_list|(
literal|"cmykColor"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data0"
argument_list|)
operator|<<
name|QColor
operator|::
name|fromHslF
argument_list|(
literal|300.
operator|/
literal|360.
argument_list|,
literal|1.
argument_list|,
literal|0.5
argument_list|,
literal|1.0
argument_list|)
operator|<<
name|QColor
operator|::
name|fromHsv
argument_list|(
literal|300
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|)
operator|<<
name|QColor
argument_list|(
literal|255
argument_list|,
literal|0
argument_list|,
literal|255
argument_list|)
operator|<<
name|QColor
operator|::
name|fromCmyk
argument_list|(
literal|0
argument_list|,
literal|255
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data1"
argument_list|)
operator|<<
name|QColor
operator|::
name|fromHslF
argument_list|(
literal|1.
argument_list|,
literal|1.
argument_list|,
literal|0.5
argument_list|,
literal|1.0
argument_list|)
operator|<<
name|QColor
operator|::
name|fromHsvF
argument_list|(
literal|1.
argument_list|,
literal|1.
argument_list|,
literal|1.
argument_list|,
literal|1.
argument_list|)
operator|<<
name|QColor
argument_list|(
literal|255
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|255
argument_list|)
operator|<<
name|QColor
operator|::
name|fromCmykF
argument_list|(
literal|0.
argument_list|,
literal|1.
argument_list|,
literal|1.
argument_list|,
literal|0.
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toHsl
name|void
name|tst_QColor
operator|::
name|toHsl
parameter_list|()
block|{
comment|// invalid should remain invalid
name|QVERIFY
argument_list|(
operator|!
name|QColor
argument_list|()
operator|.
name|toHsl
argument_list|()
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QColor
argument_list|,
name|expectedColor
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QColor
argument_list|,
name|rgbColor
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QColor
argument_list|,
name|cmykColor
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QColor
argument_list|,
name|hsvColor
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rgbColor
operator|.
name|toHsl
argument_list|()
argument_list|,
name|expectedColor
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|cmykColor
operator|.
name|toHsl
argument_list|()
argument_list|,
name|expectedColor
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|hsvColor
operator|.
name|toHsl
argument_list|()
argument_list|,
name|expectedColor
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toHslNonDestructive
name|void
name|tst_QColor
operator|::
name|toHslNonDestructive
parameter_list|()
block|{
name|QColor
name|aColor
init|=
name|QColor
operator|::
name|fromHslF
argument_list|(
literal|0.11
argument_list|,
literal|0.22
argument_list|,
literal|0.33
argument_list|,
literal|0.44
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|aColor
argument_list|,
name|aColor
operator|.
name|toHsl
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|convertTo
name|void
name|tst_QColor
operator|::
name|convertTo
parameter_list|()
block|{
name|QColor
name|color
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
decl_stmt|;
name|QColor
name|rgb
init|=
name|color
operator|.
name|convertTo
argument_list|(
name|QColor
operator|::
name|Rgb
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|rgb
operator|.
name|spec
argument_list|()
operator|==
name|QColor
operator|::
name|Rgb
argument_list|)
expr_stmt|;
name|QColor
name|hsv
init|=
name|color
operator|.
name|convertTo
argument_list|(
name|QColor
operator|::
name|Hsv
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|hsv
operator|.
name|spec
argument_list|()
operator|==
name|QColor
operator|::
name|Hsv
argument_list|)
expr_stmt|;
name|QColor
name|cmyk
init|=
name|color
operator|.
name|convertTo
argument_list|(
name|QColor
operator|::
name|Cmyk
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|cmyk
operator|.
name|spec
argument_list|()
operator|==
name|QColor
operator|::
name|Cmyk
argument_list|)
expr_stmt|;
name|QColor
name|hsl
init|=
name|color
operator|.
name|convertTo
argument_list|(
name|QColor
operator|::
name|Hsl
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|hsl
operator|.
name|spec
argument_list|()
operator|==
name|QColor
operator|::
name|Hsl
argument_list|)
expr_stmt|;
name|QColor
name|invalid
init|=
name|color
operator|.
name|convertTo
argument_list|(
name|QColor
operator|::
name|Invalid
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|invalid
operator|.
name|spec
argument_list|()
operator|==
name|QColor
operator|::
name|Invalid
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|light
name|void
name|tst_QColor
operator|::
name|light
parameter_list|()
block|{
name|QColor
name|gray
argument_list|(
name|Qt
operator|::
name|gray
argument_list|)
decl_stmt|;
name|QColor
name|lighter
init|=
name|gray
operator|.
name|light
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|lighter
operator|.
name|value
argument_list|()
operator|>
name|gray
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|dark
name|void
name|tst_QColor
operator|::
name|dark
parameter_list|()
block|{
name|QColor
name|gray
argument_list|(
name|Qt
operator|::
name|gray
argument_list|)
decl_stmt|;
name|QColor
name|darker
init|=
name|gray
operator|.
name|dark
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|darker
operator|.
name|value
argument_list|()
operator|<
name|gray
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_expr_stmt
DECL|variable|Spec
name|Q_DECLARE_METATYPE
argument_list|(
name|QColor
operator|::
name|Spec
argument_list|)
expr_stmt|;
end_expr_stmt
begin_function
DECL|function|specConstructor_data
name|void
name|tst_QColor
operator|::
name|specConstructor_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QColor
operator|::
name|Spec
argument_list|>
argument_list|(
literal|"spec"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Invalid"
argument_list|)
operator|<<
name|QColor
operator|::
name|Invalid
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Rgb"
argument_list|)
operator|<<
name|QColor
operator|::
name|Rgb
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Hsv"
argument_list|)
operator|<<
name|QColor
operator|::
name|Hsv
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Cmyk"
argument_list|)
operator|<<
name|QColor
operator|::
name|Cmyk
expr_stmt|;
block|}
end_function
begin_function
DECL|function|specConstructor
name|void
name|tst_QColor
operator|::
name|specConstructor
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QColor
operator|::
name|Spec
argument_list|,
name|spec
argument_list|)
expr_stmt|;
name|QColor
name|color
init|=
name|spec
decl_stmt|;
name|QCOMPARE
argument_list|(
name|color
operator|.
name|spec
argument_list|()
argument_list|,
name|spec
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|achromaticHslHue
name|void
name|tst_QColor
operator|::
name|achromaticHslHue
parameter_list|()
block|{
name|QColor
name|color
init|=
name|Qt
operator|::
name|black
decl_stmt|;
name|QColor
name|hsl
init|=
name|color
operator|.
name|toHsl
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|hsl
operator|.
name|hslHue
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_ifdef
ifdef|#
directive|ifdef
name|Q_WS_X11
end_ifdef
begin_function
DECL|function|setallowX11ColorNames
name|void
name|tst_QColor
operator|::
name|setallowX11ColorNames
parameter_list|()
block|{
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_IRIX
argument_list|)
name|QSKIP
argument_list|(
literal|"This fails due to the gamma settings in the SGI X server"
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|RGBData
name|x11RgbTbl
index|[]
init|=
block|{
comment|// a few standard X11 color names
block|{
literal|"DodgerBlue1"
block|,
name|qRgb
argument_list|(
literal|30
argument_list|,
literal|144
argument_list|,
literal|255
argument_list|)
block|}
block|,
block|{
literal|"DodgerBlue2"
block|,
name|qRgb
argument_list|(
literal|28
argument_list|,
literal|134
argument_list|,
literal|238
argument_list|)
block|}
block|,
block|{
literal|"DodgerBlue3"
block|,
name|qRgb
argument_list|(
literal|24
argument_list|,
literal|116
argument_list|,
literal|205
argument_list|)
block|}
block|,
block|{
literal|"DodgerBlue4"
block|,
name|qRgb
argument_list|(
literal|16
argument_list|,
literal|78
argument_list|,
literal|139
argument_list|)
block|}
block|,
block|{
literal|"SteelBlue1"
block|,
name|qRgb
argument_list|(
literal|99
argument_list|,
literal|184
argument_list|,
literal|255
argument_list|)
block|}
block|,
block|{
literal|"SteelBlue2"
block|,
name|qRgb
argument_list|(
literal|92
argument_list|,
literal|172
argument_list|,
literal|238
argument_list|)
block|}
block|,
block|{
literal|"SteelBlue3"
block|,
name|qRgb
argument_list|(
literal|79
argument_list|,
literal|148
argument_list|,
literal|205
argument_list|)
block|}
block|,
block|{
literal|"SteelBlue4"
block|,
name|qRgb
argument_list|(
literal|54
argument_list|,
literal|100
argument_list|,
literal|139
argument_list|)
block|}
block|,
block|{
literal|"DeepSkyBlue1"
block|,
name|qRgb
argument_list|(
literal|0
argument_list|,
literal|191
argument_list|,
literal|255
argument_list|)
block|}
block|,
block|{
literal|"DeepSkyBlue2"
block|,
name|qRgb
argument_list|(
literal|0
argument_list|,
literal|178
argument_list|,
literal|238
argument_list|)
block|}
block|,
block|{
literal|"DeepSkyBlue3"
block|,
name|qRgb
argument_list|(
literal|0
argument_list|,
literal|154
argument_list|,
literal|205
argument_list|)
block|}
block|,
block|{
literal|"DeepSkyBlue4"
block|,
name|qRgb
argument_list|(
literal|0
argument_list|,
literal|104
argument_list|,
literal|139
argument_list|)
block|}
block|,
block|{
literal|"SkyBlue1"
block|,
name|qRgb
argument_list|(
literal|135
argument_list|,
literal|206
argument_list|,
literal|255
argument_list|)
block|}
block|,
block|{
literal|"SkyBlue2"
block|,
name|qRgb
argument_list|(
literal|126
argument_list|,
literal|192
argument_list|,
literal|238
argument_list|)
block|}
block|,
block|{
literal|"SkyBlue3"
block|,
name|qRgb
argument_list|(
literal|108
argument_list|,
literal|166
argument_list|,
literal|205
argument_list|)
block|}
block|,
block|{
literal|"SkyBlue4"
block|,
name|qRgb
argument_list|(
literal|74
argument_list|,
literal|112
argument_list|,
literal|139
argument_list|)
block|}
block|}
decl_stmt|;
specifier|static
specifier|const
name|int
name|x11RgbTblSize
init|=
sizeof|sizeof
argument_list|(
name|x11RgbTbl
argument_list|)
operator|/
sizeof|sizeof
argument_list|(
name|RGBData
argument_list|)
decl_stmt|;
comment|// X11 color names should not work by default
name|QVERIFY
argument_list|(
operator|!
name|QColor
operator|::
name|allowX11ColorNames
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|x11RgbTblSize
condition|;
operator|++
name|i
control|)
block|{
name|QString
name|colorName
init|=
name|QLatin1String
argument_list|(
name|x11RgbTbl
index|[
name|i
index|]
operator|.
name|name
argument_list|)
decl_stmt|;
name|QColor
name|color
decl_stmt|;
name|color
operator|.
name|setNamedColor
argument_list|(
name|colorName
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|color
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// enable X11 color names
name|QColor
operator|::
name|setAllowX11ColorNames
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QColor
operator|::
name|allowX11ColorNames
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|x11RgbTblSize
condition|;
operator|++
name|i
control|)
block|{
name|QString
name|colorName
init|=
name|QLatin1String
argument_list|(
name|x11RgbTbl
index|[
name|i
index|]
operator|.
name|name
argument_list|)
decl_stmt|;
name|QColor
name|color
decl_stmt|;
name|color
operator|.
name|setNamedColor
argument_list|(
name|colorName
argument_list|)
expr_stmt|;
name|QColor
name|expected
argument_list|(
name|x11RgbTbl
index|[
name|i
index|]
operator|.
name|value
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|color
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
comment|// should be able to turn off X11 color names
name|QColor
operator|::
name|setAllowX11ColorNames
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QColor
operator|::
name|allowX11ColorNames
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|x11RgbTblSize
condition|;
operator|++
name|i
control|)
block|{
name|QString
name|colorName
init|=
name|QLatin1String
argument_list|(
name|x11RgbTbl
index|[
name|i
index|]
operator|.
name|name
argument_list|)
decl_stmt|;
name|QColor
name|color
decl_stmt|;
name|color
operator|.
name|setNamedColor
argument_list|(
name|colorName
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|color
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QColor
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qcolor.moc"
end_include
end_unit
