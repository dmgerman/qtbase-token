begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:GPL-EXCEPT$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3 as published by the Free Software ** Foundation with exceptions as appearing in the file LICENSE.GPL3-EXCEPT ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|PATHS_H
end_ifndef
begin_define
DECL|macro|PATHS_H
define|#
directive|define
name|PATHS_H
end_define
begin_include
include|#
directive|include
file|<QPainterPath>
end_include
begin_decl_stmt
name|namespace
name|Paths
block|{
name|QPainterPath
name|rect
parameter_list|()
function_decl|;
name|QPainterPath
name|heart
parameter_list|()
function_decl|;
name|QPainterPath
name|body
parameter_list|()
function_decl|;
name|QPainterPath
name|mailbox
parameter_list|()
function_decl|;
name|QPainterPath
name|deer
parameter_list|()
function_decl|;
name|QPainterPath
name|fire
parameter_list|()
function_decl|;
name|QPainterPath
name|lips
parameter_list|()
function_decl|;
name|QPainterPath
name|bezier1
parameter_list|()
function_decl|;
name|QPainterPath
name|bezier2
parameter_list|()
function_decl|;
name|QPainterPath
name|bezier3
parameter_list|()
function_decl|;
name|QPainterPath
name|bezier4
parameter_list|()
function_decl|;
name|QPainterPath
name|random1
parameter_list|()
function_decl|;
name|QPainterPath
name|random2
parameter_list|()
function_decl|;
name|QPainterPath
name|heart2
parameter_list|()
function_decl|;
name|QPainterPath
name|rect2
parameter_list|()
function_decl|;
name|QPainterPath
name|rect3
parameter_list|()
function_decl|;
name|QPainterPath
name|rect4
parameter_list|()
function_decl|;
name|QPainterPath
name|rect5
parameter_list|()
function_decl|;
name|QPainterPath
name|rect6
parameter_list|()
function_decl|;
name|QPainterPath
name|simpleCurve
parameter_list|()
function_decl|;
name|QPainterPath
name|simpleCurve2
parameter_list|()
function_decl|;
name|QPainterPath
name|simpleCurve3
parameter_list|()
function_decl|;
name|QPainterPath
name|frame1
parameter_list|()
function_decl|;
name|QPainterPath
name|frame2
parameter_list|()
function_decl|;
name|QPainterPath
name|frame3
parameter_list|()
function_decl|;
name|QPainterPath
name|frame4
parameter_list|()
function_decl|;
name|QPainterPath
name|triangle1
parameter_list|()
function_decl|;
name|QPainterPath
name|triangle2
parameter_list|()
function_decl|;
name|QPainterPath
name|node
parameter_list|()
function_decl|;
name|QPainterPath
name|interRect
parameter_list|()
function_decl|;
name|QPainterPath
name|bezierFlower
parameter_list|()
function_decl|;
name|QPainterPath
name|clover
parameter_list|()
function_decl|;
name|QPainterPath
name|ellipses
parameter_list|()
function_decl|;
name|QPainterPath
name|windingFill
parameter_list|()
function_decl|;
name|QPainterPath
name|oddEvenFill
parameter_list|()
function_decl|;
name|QPainterPath
name|squareWithHole
parameter_list|()
function_decl|;
name|QPainterPath
name|circleWithHole
parameter_list|()
function_decl|;
name|QPainterPath
name|bezierQuadrant
parameter_list|()
function_decl|;
block|}
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
end_unit
