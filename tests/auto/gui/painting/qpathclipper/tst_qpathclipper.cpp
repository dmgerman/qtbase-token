begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:GPL-EXCEPT$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3 as published by the Free Software ** Foundation with exceptions as appearing in the file LICENSE.GPL3-EXCEPT ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"private/qpathclipper_p.h"
end_include
begin_include
include|#
directive|include
file|"paths.h"
end_include
begin_include
include|#
directive|include
file|"pathcompare.h"
end_include
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<qpainterpath.h>
end_include
begin_include
include|#
directive|include
file|<qpolygon.h>
end_include
begin_include
include|#
directive|include
file|<qdebug.h>
end_include
begin_include
include|#
directive|include
file|<qpainter.h>
end_include
begin_include
include|#
directive|include
file|<math.h>
end_include
begin_class
DECL|class|tst_QPathClipper
class|class
name|tst_QPathClipper
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
name|tst_QPathClipper
parameter_list|()
constructor_decl|;
specifier|virtual
name|~
name|tst_QPathClipper
parameter_list|()
destructor_decl|;
private|private:
name|void
name|clipTest
parameter_list|(
name|int
name|subjectIndex
parameter_list|,
name|int
name|clipIndex
parameter_list|,
name|QPathClipper
operator|::
name|Operation
name|op
parameter_list|)
function_decl|;
DECL|member|paths
name|QList
argument_list|<
name|QPainterPath
argument_list|>
name|paths
decl_stmt|;
public|public
name|slots
public|:
name|void
name|initTestCase
parameter_list|()
function_decl|;
private|private
name|slots
private|:
name|void
name|testWingedEdge
parameter_list|()
function_decl|;
name|void
name|testComparePaths
parameter_list|()
function_decl|;
name|void
name|clip_data
parameter_list|()
function_decl|;
name|void
name|clip
parameter_list|()
function_decl|;
name|void
name|clip2
parameter_list|()
function_decl|;
name|void
name|clip3
parameter_list|()
function_decl|;
name|void
name|testIntersections
parameter_list|()
function_decl|;
name|void
name|testIntersections2
parameter_list|()
function_decl|;
name|void
name|testIntersections3
parameter_list|()
function_decl|;
name|void
name|testIntersections4
parameter_list|()
function_decl|;
name|void
name|testIntersections5
parameter_list|()
function_decl|;
name|void
name|testIntersections6
parameter_list|()
function_decl|;
name|void
name|testIntersections7
parameter_list|()
function_decl|;
name|void
name|testIntersections8
parameter_list|()
function_decl|;
name|void
name|testIntersections9
parameter_list|()
function_decl|;
name|void
name|zeroDerivativeCurves
parameter_list|()
function_decl|;
name|void
name|task204301_data
parameter_list|()
function_decl|;
name|void
name|task204301
parameter_list|()
function_decl|;
name|void
name|task209056
parameter_list|()
function_decl|;
name|void
name|task251909
parameter_list|()
function_decl|;
name|void
name|qtbug3778
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QPainterPath
argument_list|)
end_macro
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QPathClipper::Operation
argument_list|)
end_macro
begin_constructor
DECL|function|tst_QPathClipper
name|tst_QPathClipper
operator|::
name|tst_QPathClipper
parameter_list|()
block|{ }
end_constructor
begin_destructor
DECL|function|~tst_QPathClipper
name|tst_QPathClipper
operator|::
name|~
name|tst_QPathClipper
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|initTestCase
name|void
name|tst_QPathClipper
operator|::
name|initTestCase
parameter_list|()
block|{
name|paths
operator|<<
name|Paths
operator|::
name|rect
argument_list|()
expr_stmt|;
name|paths
operator|<<
name|Paths
operator|::
name|heart
argument_list|()
expr_stmt|;
name|paths
operator|<<
name|Paths
operator|::
name|body
argument_list|()
expr_stmt|;
name|paths
operator|<<
name|Paths
operator|::
name|mailbox
argument_list|()
expr_stmt|;
name|paths
operator|<<
name|Paths
operator|::
name|deer
argument_list|()
expr_stmt|;
name|paths
operator|<<
name|Paths
operator|::
name|fire
argument_list|()
expr_stmt|;
name|paths
operator|<<
name|Paths
operator|::
name|random1
argument_list|()
expr_stmt|;
name|paths
operator|<<
name|Paths
operator|::
name|random2
argument_list|()
expr_stmt|;
name|paths
operator|<<
name|Paths
operator|::
name|heart2
argument_list|()
expr_stmt|;
name|paths
operator|<<
name|Paths
operator|::
name|rect2
argument_list|()
expr_stmt|;
name|paths
operator|<<
name|Paths
operator|::
name|rect3
argument_list|()
expr_stmt|;
name|paths
operator|<<
name|Paths
operator|::
name|rect4
argument_list|()
expr_stmt|;
name|paths
operator|<<
name|Paths
operator|::
name|rect5
argument_list|()
expr_stmt|;
name|paths
operator|<<
name|Paths
operator|::
name|rect6
argument_list|()
expr_stmt|;
name|paths
operator|<<
name|Paths
operator|::
name|frame1
argument_list|()
expr_stmt|;
name|paths
operator|<<
name|Paths
operator|::
name|frame2
argument_list|()
expr_stmt|;
name|paths
operator|<<
name|Paths
operator|::
name|frame3
argument_list|()
expr_stmt|;
name|paths
operator|<<
name|Paths
operator|::
name|frame4
argument_list|()
expr_stmt|;
name|paths
operator|<<
name|Paths
operator|::
name|triangle1
argument_list|()
expr_stmt|;
name|paths
operator|<<
name|Paths
operator|::
name|triangle2
argument_list|()
expr_stmt|;
name|paths
operator|<<
name|Paths
operator|::
name|node
argument_list|()
expr_stmt|;
name|paths
operator|<<
name|Paths
operator|::
name|interRect
argument_list|()
expr_stmt|;
name|paths
operator|<<
name|Paths
operator|::
name|simpleCurve
argument_list|()
expr_stmt|;
name|paths
operator|<<
name|Paths
operator|::
name|simpleCurve2
argument_list|()
expr_stmt|;
name|paths
operator|<<
name|Paths
operator|::
name|simpleCurve3
argument_list|()
expr_stmt|;
name|paths
operator|<<
name|Paths
operator|::
name|bezier1
argument_list|()
expr_stmt|;
name|paths
operator|<<
name|Paths
operator|::
name|bezier2
argument_list|()
expr_stmt|;
name|paths
operator|<<
name|Paths
operator|::
name|bezier3
argument_list|()
expr_stmt|;
name|paths
operator|<<
name|Paths
operator|::
name|bezier4
argument_list|()
expr_stmt|;
name|paths
operator|<<
name|Paths
operator|::
name|bezierFlower
argument_list|()
expr_stmt|;
name|paths
operator|<<
name|Paths
operator|::
name|lips
argument_list|()
expr_stmt|;
name|paths
operator|<<
name|Paths
operator|::
name|clover
argument_list|()
expr_stmt|;
name|paths
operator|<<
name|Paths
operator|::
name|ellipses
argument_list|()
expr_stmt|;
name|paths
operator|<<
name|Paths
operator|::
name|windingFill
argument_list|()
expr_stmt|;
name|paths
operator|<<
name|Paths
operator|::
name|oddEvenFill
argument_list|()
expr_stmt|;
name|paths
operator|<<
name|Paths
operator|::
name|squareWithHole
argument_list|()
expr_stmt|;
name|paths
operator|<<
name|Paths
operator|::
name|circleWithHole
argument_list|()
expr_stmt|;
name|paths
operator|<<
name|Paths
operator|::
name|bezierQuadrant
argument_list|()
expr_stmt|;
comment|// make sure all the bounding rects are centered at the origin
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|paths
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|QRectF
name|bounds
init|=
name|paths
index|[
name|i
index|]
operator|.
name|boundingRect
argument_list|()
decl_stmt|;
name|QMatrix
name|m
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
operator|-
name|bounds
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
operator|-
name|bounds
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
argument_list|)
decl_stmt|;
name|paths
index|[
name|i
index|]
operator|=
name|m
operator|.
name|map
argument_list|(
name|paths
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|samplePath1
specifier|static
name|QPainterPath
name|samplePath1
parameter_list|()
block|{
name|QPainterPath
name|path
decl_stmt|;
name|path
operator|.
name|moveTo
argument_list|(
name|QPointF
argument_list|(
literal|200
argument_list|,
literal|246.64789
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|200
argument_list|,
literal|206.64789
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|231.42858
argument_list|,
literal|206.64789
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|231.42858
argument_list|,
literal|246.64789
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|200
argument_list|,
literal|246.64789
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|path
return|;
block|}
end_function
begin_function
DECL|function|samplePath2
specifier|static
name|QPainterPath
name|samplePath2
parameter_list|()
block|{
name|QPainterPath
name|path
decl_stmt|;
name|path
operator|.
name|moveTo
argument_list|(
name|QPointF
argument_list|(
literal|200
argument_list|,
literal|146.64789
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|200
argument_list|,
literal|106.64789
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|231.42858
argument_list|,
literal|106.64789
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|231.42858
argument_list|,
literal|146.64789
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|200
argument_list|,
literal|146.64789
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|path
return|;
block|}
end_function
begin_function
DECL|function|samplePath3
specifier|static
name|QPainterPath
name|samplePath3
parameter_list|()
block|{
name|QPainterPath
name|path
decl_stmt|;
name|path
operator|.
name|moveTo
argument_list|(
name|QPointF
argument_list|(
literal|231.42858
argument_list|,
literal|80.933609
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|200
argument_list|,
literal|80.933609
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|200
argument_list|,
literal|96.64788999999999
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|231.42858
argument_list|,
literal|96.64788999999999
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|231.42858
argument_list|,
literal|80.933609
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|path
return|;
block|}
end_function
begin_function
DECL|function|samplePath4
specifier|static
name|QPainterPath
name|samplePath4
parameter_list|()
block|{
name|QPainterPath
name|path
decl_stmt|;
name|path
operator|.
name|moveTo
argument_list|(
name|QPointF
argument_list|(
literal|288.571434
argument_list|,
literal|80.933609
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|431.42858
argument_list|,
literal|80.933609
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|431.42858
argument_list|,
literal|96.64788999999999
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|288.571434
argument_list|,
literal|96.64788999999999
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|288.571434
argument_list|,
literal|80.933609
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|path
return|;
block|}
end_function
begin_function
DECL|function|samplePath5
specifier|static
name|QPainterPath
name|samplePath5
parameter_list|()
block|{
name|QPainterPath
name|path
decl_stmt|;
name|path
operator|.
name|moveTo
argument_list|(
name|QPointF
argument_list|(
literal|588.571434
argument_list|,
literal|80.933609
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|682.85715
argument_list|,
literal|80.933609
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|682.85715
argument_list|,
literal|96.64788999999999
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|588.571434
argument_list|,
literal|96.64788999999999
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|588.571434
argument_list|,
literal|80.933609
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|path
return|;
block|}
end_function
begin_function
DECL|function|samplePath6
specifier|static
name|QPainterPath
name|samplePath6
parameter_list|()
block|{
name|QPainterPath
name|path
decl_stmt|;
name|path
operator|.
name|moveTo
argument_list|(
name|QPointF
argument_list|(
literal|588.571434
argument_list|,
literal|80.933609
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|200
argument_list|,
literal|80.933609
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|200
argument_list|,
literal|446.6479
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|682.85715
argument_list|,
literal|446.6479
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|682.85715
argument_list|,
literal|96.64788999999999
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|731.42858
argument_list|,
literal|96.64788999999999
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|731.42858
argument_list|,
literal|56.64788999999999
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|588.571434
argument_list|,
literal|56.64788999999999
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|588.571434
argument_list|,
literal|80.933609
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|path
return|;
block|}
end_function
begin_function
DECL|function|samplePath7
specifier|static
name|QPainterPath
name|samplePath7
parameter_list|()
block|{
name|QPainterPath
name|path
decl_stmt|;
name|path
operator|.
name|moveTo
argument_list|(
name|QPointF
argument_list|(
literal|682.85715
argument_list|,
literal|206.64789
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|682.85715
argument_list|,
literal|246.64789
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|588.571434
argument_list|,
literal|246.64789
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|588.571434
argument_list|,
literal|206.64789
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|682.85715
argument_list|,
literal|206.64789
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|path
return|;
block|}
end_function
begin_function
DECL|function|samplePath8
specifier|static
name|QPainterPath
name|samplePath8
parameter_list|()
block|{
name|QPainterPath
name|path
decl_stmt|;
name|path
operator|.
name|moveTo
argument_list|(
name|QPointF
argument_list|(
literal|682.85715
argument_list|,
literal|406.64789
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|682.85715
argument_list|,
literal|446.64789
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|588.571434
argument_list|,
literal|446.64789
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|588.571434
argument_list|,
literal|406.64789
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|682.85715
argument_list|,
literal|406.64789
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|path
return|;
block|}
end_function
begin_function
DECL|function|samplePath9
specifier|static
name|QPainterPath
name|samplePath9
parameter_list|()
block|{
name|QPainterPath
name|path
decl_stmt|;
name|path
operator|.
name|moveTo
argument_list|(
name|QPointF
argument_list|(
literal|682.85715
argument_list|,
literal|426.64789
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|682.85715
argument_list|,
literal|446.6479
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|568.571434
argument_list|,
literal|446.6479
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|568.571434
argument_list|,
literal|426.64789
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|682.85715
argument_list|,
literal|426.64789
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|path
return|;
block|}
end_function
begin_function
DECL|function|samplePath10
specifier|static
name|QPainterPath
name|samplePath10
parameter_list|()
block|{
name|QPainterPath
name|path
decl_stmt|;
name|path
operator|.
name|moveTo
argument_list|(
name|QPointF
argument_list|(
literal|511.42858
argument_list|,
literal|446.6479
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|368.571434
argument_list|,
literal|446.6479
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|368.571434
argument_list|,
literal|426.64789
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|511.42858
argument_list|,
literal|426.64789
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|511.42858
argument_list|,
literal|446.6479
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|path
return|;
block|}
end_function
begin_function
DECL|function|samplePath13
specifier|static
name|QPainterPath
name|samplePath13
parameter_list|()
block|{
name|QPainterPath
name|path
decl_stmt|;
name|path
operator|.
name|moveTo
argument_list|(
name|QPointF
argument_list|(
literal|160
argument_list|,
literal|200
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|100
argument_list|,
literal|200
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|100
argument_list|,
literal|130
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|160
argument_list|,
literal|130
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|160
argument_list|,
literal|200
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|path
return|;
block|}
end_function
begin_function
DECL|function|samplePath14
specifier|static
name|QPainterPath
name|samplePath14
parameter_list|()
block|{
name|QPainterPath
name|path
decl_stmt|;
name|path
operator|.
name|moveTo
argument_list|(
literal|160
argument_list|,
literal|80
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
literal|160
argument_list|,
literal|180
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
literal|100
argument_list|,
literal|180
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
literal|100
argument_list|,
literal|80
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
literal|160
argument_list|,
literal|80
argument_list|)
expr_stmt|;
name|path
operator|.
name|moveTo
argument_list|(
literal|160
argument_list|,
literal|80
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
literal|160
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
literal|120
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
literal|120
argument_list|,
literal|80
argument_list|)
expr_stmt|;
return|return
name|path
return|;
block|}
end_function
begin_function
DECL|function|clip_data
name|void
name|tst_QPathClipper
operator|::
name|clip_data
parameter_list|()
block|{
comment|//create the testtable instance and define the elements
name|QTest
operator|::
name|addColumn
argument_list|<
name|QPainterPath
argument_list|>
argument_list|(
literal|"subject"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QPainterPath
argument_list|>
argument_list|(
literal|"clip"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QPathClipper
operator|::
name|Operation
argument_list|>
argument_list|(
literal|"op"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QPainterPath
argument_list|>
argument_list|(
literal|"result"
argument_list|)
expr_stmt|;
comment|//next we fill it with data
name|QTest
operator|::
name|newRow
argument_list|(
literal|"simple1"
argument_list|)
operator|<<
name|Paths
operator|::
name|frame3
argument_list|()
operator|<<
name|Paths
operator|::
name|frame4
argument_list|()
operator|<<
name|QPathClipper
operator|::
name|BoolAnd
operator|<<
name|samplePath1
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"simple2"
argument_list|)
operator|<<
name|Paths
operator|::
name|frame3
argument_list|()
operator|<<
name|Paths
operator|::
name|frame4
argument_list|()
operator|*
name|QTransform
argument_list|()
operator|.
name|translate
argument_list|(
literal|0
argument_list|,
operator|-
literal|100
argument_list|)
operator|<<
name|QPathClipper
operator|::
name|BoolAnd
operator|<<
name|samplePath2
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"simple3"
argument_list|)
operator|<<
name|Paths
operator|::
name|frame3
argument_list|()
operator|<<
name|Paths
operator|::
name|frame4
argument_list|()
operator|*
name|QTransform
argument_list|()
operator|.
name|translate
argument_list|(
literal|0
argument_list|,
operator|-
literal|150
argument_list|)
operator|<<
name|QPathClipper
operator|::
name|BoolAnd
operator|<<
name|samplePath3
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"simple4"
argument_list|)
operator|<<
name|Paths
operator|::
name|frame3
argument_list|()
operator|<<
name|Paths
operator|::
name|frame4
argument_list|()
operator|*
name|QTransform
argument_list|()
operator|.
name|translate
argument_list|(
literal|200
argument_list|,
operator|-
literal|150
argument_list|)
operator|<<
name|QPathClipper
operator|::
name|BoolAnd
operator|<<
name|samplePath4
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"simple5"
argument_list|)
operator|<<
name|Paths
operator|::
name|frame3
argument_list|()
operator|<<
name|Paths
operator|::
name|frame4
argument_list|()
operator|*
name|QTransform
argument_list|()
operator|.
name|translate
argument_list|(
literal|500
argument_list|,
operator|-
literal|150
argument_list|)
operator|<<
name|QPathClipper
operator|::
name|BoolAnd
operator|<<
name|samplePath5
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"simple6"
argument_list|)
operator|<<
name|Paths
operator|::
name|frame3
argument_list|()
operator|<<
name|Paths
operator|::
name|frame4
argument_list|()
operator|*
name|QTransform
argument_list|()
operator|.
name|translate
argument_list|(
literal|500
argument_list|,
operator|-
literal|150
argument_list|)
operator|<<
name|QPathClipper
operator|::
name|BoolOr
operator|<<
name|samplePath6
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"simple7"
argument_list|)
operator|<<
name|Paths
operator|::
name|frame3
argument_list|()
operator|<<
name|Paths
operator|::
name|frame4
argument_list|()
operator|*
name|QTransform
argument_list|()
operator|.
name|translate
argument_list|(
literal|500
argument_list|,
literal|0
argument_list|)
operator|<<
name|QPathClipper
operator|::
name|BoolAnd
operator|<<
name|samplePath7
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"simple8"
argument_list|)
operator|<<
name|Paths
operator|::
name|frame3
argument_list|()
operator|<<
name|Paths
operator|::
name|frame4
argument_list|()
operator|*
name|QTransform
argument_list|()
operator|.
name|translate
argument_list|(
literal|500
argument_list|,
literal|200
argument_list|)
operator|<<
name|QPathClipper
operator|::
name|BoolAnd
operator|<<
name|samplePath8
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"simple9"
argument_list|)
operator|<<
name|Paths
operator|::
name|frame3
argument_list|()
operator|<<
name|Paths
operator|::
name|frame4
argument_list|()
operator|*
name|QTransform
argument_list|()
operator|.
name|translate
argument_list|(
literal|480
argument_list|,
literal|220
argument_list|)
operator|<<
name|QPathClipper
operator|::
name|BoolAnd
operator|<<
name|samplePath9
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"simple10"
argument_list|)
operator|<<
name|Paths
operator|::
name|frame3
argument_list|()
operator|<<
name|Paths
operator|::
name|frame4
argument_list|()
operator|*
name|QTransform
argument_list|()
operator|.
name|translate
argument_list|(
literal|280
argument_list|,
literal|220
argument_list|)
operator|<<
name|QPathClipper
operator|::
name|BoolAnd
operator|<<
name|samplePath10
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"simple_move_to1"
argument_list|)
operator|<<
name|Paths
operator|::
name|rect4
argument_list|()
operator|<<
name|Paths
operator|::
name|rect2
argument_list|()
operator|*
name|QTransform
argument_list|()
operator|.
name|translate
argument_list|(
operator|-
literal|20
argument_list|,
literal|50
argument_list|)
operator|<<
name|QPathClipper
operator|::
name|BoolAnd
operator|<<
name|samplePath13
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"simple_move_to2"
argument_list|)
operator|<<
name|Paths
operator|::
name|rect4
argument_list|()
operator|<<
name|Paths
operator|::
name|rect2
argument_list|()
operator|*
name|QTransform
argument_list|()
operator|.
name|translate
argument_list|(
operator|-
literal|20
argument_list|,
literal|0
argument_list|)
operator|<<
name|QPathClipper
operator|::
name|BoolAnd
operator|<<
name|samplePath14
argument_list|()
expr_stmt|;
block|}
end_function
begin_comment
comment|// sanity check to make sure comparePaths declared above works
end_comment
begin_function
DECL|function|testComparePaths
name|void
name|tst_QPathClipper
operator|::
name|testComparePaths
parameter_list|()
block|{
name|QPainterPath
name|a
decl_stmt|;
name|QPainterPath
name|b
decl_stmt|;
name|a
operator|.
name|addRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|b
operator|.
name|addRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10.00001
argument_list|,
literal|10.00001
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QPathCompare
operator|::
name|comparePaths
argument_list|(
name|a
argument_list|,
name|b
argument_list|)
argument_list|)
expr_stmt|;
name|b
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|b
operator|.
name|addRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10.00000000001
argument_list|,
literal|10.00000000001
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QPathCompare
operator|::
name|comparePaths
argument_list|(
name|a
argument_list|,
name|b
argument_list|)
argument_list|)
expr_stmt|;
name|b
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|b
operator|.
name|moveTo
argument_list|(
literal|10
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|b
operator|.
name|lineTo
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|b
operator|.
name|lineTo
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|b
operator|.
name|lineTo
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QPathCompare
operator|::
name|comparePaths
argument_list|(
name|a
argument_list|,
name|b
argument_list|)
argument_list|)
expr_stmt|;
name|b
operator|.
name|lineTo
argument_list|(
literal|10
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QPathCompare
operator|::
name|comparePaths
argument_list|(
name|a
argument_list|,
name|b
argument_list|)
argument_list|)
expr_stmt|;
name|b
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|b
operator|.
name|moveTo
argument_list|(
literal|10
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|b
operator|.
name|lineTo
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|b
operator|.
name|lineTo
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|b
operator|.
name|lineTo
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QPathCompare
operator|::
name|comparePaths
argument_list|(
name|a
argument_list|,
name|b
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|clip
name|void
name|tst_QPathClipper
operator|::
name|clip
parameter_list|()
block|{
if|if
condition|(
sizeof|sizeof
argument_list|(
name|double
argument_list|)
operator|!=
sizeof|sizeof
argument_list|(
name|qreal
argument_list|)
condition|)
block|{
name|QSKIP
argument_list|(
literal|"This test only works for qreal=double, otherwise ends in rounding errors"
argument_list|)
expr_stmt|;
block|}
name|QFETCH
argument_list|(
name|QPainterPath
argument_list|,
name|subject
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QPainterPath
argument_list|,
name|clip
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QPathClipper
operator|::
name|Operation
argument_list|,
name|op
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QPainterPath
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|QPathClipper
name|clipper
argument_list|(
name|subject
argument_list|,
name|clip
argument_list|)
decl_stmt|;
name|QPainterPath
name|x
init|=
name|clipper
operator|.
name|clip
argument_list|(
name|op
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|QPathCompare
operator|::
name|comparePaths
argument_list|(
name|x
argument_list|,
name|result
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|randomPointInRect
specifier|static
specifier|inline
name|QPointF
name|randomPointInRect
parameter_list|(
specifier|const
name|QRectF
modifier|&
name|rect
parameter_list|)
block|{
name|qreal
name|rx
init|=
name|qrand
argument_list|()
operator|/
operator|(
name|RAND_MAX
operator|+
literal|1.
operator|)
decl_stmt|;
name|qreal
name|ry
init|=
name|qrand
argument_list|()
operator|/
operator|(
name|RAND_MAX
operator|+
literal|1.
operator|)
decl_stmt|;
return|return
name|QPointF
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
name|rx
operator|*
name|rect
operator|.
name|width
argument_list|()
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
name|ry
operator|*
name|rect
operator|.
name|height
argument_list|()
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|clipTest
name|void
name|tst_QPathClipper
operator|::
name|clipTest
parameter_list|(
name|int
name|subjectIndex
parameter_list|,
name|int
name|clipIndex
parameter_list|,
name|QPathClipper
operator|::
name|Operation
name|op
parameter_list|)
block|{
specifier|const
name|QPainterPath
modifier|&
name|subject
init|=
name|paths
index|[
name|subjectIndex
index|]
decl_stmt|;
specifier|const
name|QPainterPath
modifier|&
name|clip
init|=
name|paths
index|[
name|clipIndex
index|]
decl_stmt|;
specifier|const
name|int
name|count
init|=
literal|40
decl_stmt|;
name|QRectF
name|bounds
init|=
name|subject
operator|.
name|boundingRect
argument_list|()
operator|.
name|united
argument_list|(
name|clip
operator|.
name|boundingRect
argument_list|()
argument_list|)
decl_stmt|;
specifier|const
name|qreal
name|adjustX
init|=
name|bounds
operator|.
name|width
argument_list|()
operator|*
literal|0.01
decl_stmt|;
specifier|const
name|qreal
name|adjustY
init|=
name|bounds
operator|.
name|height
argument_list|()
operator|*
literal|0.01
decl_stmt|;
comment|// make sure we test some points that are outside both paths as well
name|bounds
operator|=
name|bounds
operator|.
name|adjusted
argument_list|(
operator|-
name|adjustX
argument_list|,
operator|-
name|adjustY
argument_list|,
name|adjustX
argument_list|,
name|adjustY
argument_list|)
expr_stmt|;
specifier|const
name|int
name|dim
init|=
literal|256
decl_stmt|;
specifier|const
name|qreal
name|scale
init|=
name|qMin
argument_list|(
name|dim
operator|/
name|bounds
operator|.
name|width
argument_list|()
argument_list|,
name|dim
operator|/
name|bounds
operator|.
name|height
argument_list|()
argument_list|)
decl_stmt|;
name|QPathClipper
name|clipper
argument_list|(
name|subject
argument_list|,
name|clip
argument_list|)
decl_stmt|;
name|QPainterPath
name|result
init|=
name|clipper
operator|.
name|clip
argument_list|(
name|op
argument_list|)
decl_stmt|;
comment|// using the image here is a bit of a hacky way to make sure we don't test points that
comment|// are too close to the path edges to avoid test fails that are due to numerical errors
name|QImage
name|img
argument_list|(
name|dim
argument_list|,
name|dim
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|img
operator|.
name|fill
argument_list|(
literal|0x0
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|img
argument_list|)
decl_stmt|;
name|p
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|)
expr_stmt|;
name|p
operator|.
name|scale
argument_list|(
name|scale
argument_list|,
name|scale
argument_list|)
expr_stmt|;
name|p
operator|.
name|translate
argument_list|(
operator|-
name|bounds
operator|.
name|topLeft
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|QPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawPath
argument_list|(
name|subject
argument_list|)
expr_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|QPen
argument_list|(
name|Qt
operator|::
name|red
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawPath
argument_list|(
name|clip
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|count
condition|;
operator|++
name|i
control|)
block|{
name|QPointF
name|point
decl_stmt|;
name|QRgb
name|pixel
decl_stmt|;
do|do
block|{
name|point
operator|=
name|randomPointInRect
argument_list|(
name|bounds
argument_list|)
expr_stmt|;
specifier|const
name|QPointF
name|imagePoint
init|=
operator|(
name|point
operator|-
name|bounds
operator|.
name|topLeft
argument_list|()
operator|)
operator|*
name|scale
decl_stmt|;
name|pixel
operator|=
name|img
operator|.
name|pixel
argument_list|(
name|int
argument_list|(
name|imagePoint
operator|.
name|x
argument_list|()
argument_list|)
argument_list|,
name|int
argument_list|(
name|imagePoint
operator|.
name|y
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
do|while
condition|(
name|qAlpha
argument_list|(
name|pixel
argument_list|)
operator|>
literal|0
condition|)
do|;
specifier|const
name|bool
name|inSubject
init|=
name|subject
operator|.
name|contains
argument_list|(
name|point
argument_list|)
decl_stmt|;
specifier|const
name|bool
name|inClip
init|=
name|clip
operator|.
name|contains
argument_list|(
name|point
argument_list|)
decl_stmt|;
specifier|const
name|bool
name|inResult
init|=
name|result
operator|.
name|contains
argument_list|(
name|point
argument_list|)
decl_stmt|;
name|bool
name|expected
init|=
literal|false
decl_stmt|;
switch|switch
condition|(
name|op
condition|)
block|{
case|case
name|QPathClipper
operator|::
name|BoolAnd
case|:
name|expected
operator|=
name|inSubject
operator|&&
name|inClip
expr_stmt|;
break|break;
case|case
name|QPathClipper
operator|::
name|BoolOr
case|:
name|expected
operator|=
name|inSubject
operator|||
name|inClip
expr_stmt|;
break|break;
case|case
name|QPathClipper
operator|::
name|BoolSub
case|:
name|expected
operator|=
name|inSubject
operator|&&
operator|!
name|inClip
expr_stmt|;
break|break;
default|default:
break|break;
block|}
if|if
condition|(
name|expected
operator|!=
name|inResult
condition|)
block|{
name|char
name|str
index|[
literal|256
index|]
decl_stmt|;
specifier|const
name|char
modifier|*
name|opStr
init|=
name|op
operator|==
name|QPathClipper
operator|::
name|BoolAnd
condition|?
literal|"and"
else|:
name|op
operator|==
name|QPathClipper
operator|::
name|BoolOr
condition|?
literal|"or"
else|:
literal|"sub"
decl_stmt|;
name|sprintf
argument_list|(
name|str
argument_list|,
literal|"Expected: %d, actual: %d, subject: %d, clip: %d, op: %s\n"
argument_list|,
name|int
argument_list|(
name|expected
argument_list|)
argument_list|,
name|int
argument_list|(
name|inResult
argument_list|)
argument_list|,
name|subjectIndex
argument_list|,
name|clipIndex
argument_list|,
name|opStr
argument_list|)
expr_stmt|;
name|QFAIL
argument_list|(
name|str
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_function
begin_function
DECL|function|clip2
name|void
name|tst_QPathClipper
operator|::
name|clip2
parameter_list|()
block|{
if|if
condition|(
sizeof|sizeof
argument_list|(
name|double
argument_list|)
operator|!=
sizeof|sizeof
argument_list|(
name|qreal
argument_list|)
condition|)
name|QSKIP
argument_list|(
literal|"This test only works for qreal=double, otherwise ends in rounding errors"
argument_list|)
expr_stmt|;
name|int
name|operation
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|paths
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<=
name|i
condition|;
operator|++
name|j
control|)
block|{
name|QPathClipper
operator|::
name|Operation
name|op
init|=
name|QPathClipper
operator|::
name|Operation
argument_list|(
operator|(
name|operation
operator|++
operator|)
operator|%
literal|3
argument_list|)
decl_stmt|;
name|clipTest
argument_list|(
name|i
argument_list|,
name|j
argument_list|,
name|op
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_function
begin_function
DECL|function|clip3
name|void
name|tst_QPathClipper
operator|::
name|clip3
parameter_list|()
block|{
name|int
name|operation
init|=
literal|0
decl_stmt|;
comment|// this subset should work correctly for qreal = float
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|20
condition|;
operator|++
name|i
control|)
block|{
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<=
name|i
condition|;
operator|++
name|j
control|)
block|{
name|QPathClipper
operator|::
name|Operation
name|op
init|=
name|QPathClipper
operator|::
name|Operation
argument_list|(
operator|(
name|operation
operator|++
operator|)
operator|%
literal|3
argument_list|)
decl_stmt|;
name|clipTest
argument_list|(
name|i
argument_list|,
name|j
argument_list|,
name|op
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_function
begin_function
DECL|function|testIntersections
name|void
name|tst_QPathClipper
operator|::
name|testIntersections
parameter_list|()
block|{
name|QPainterPath
name|path1
decl_stmt|;
name|QPainterPath
name|path2
decl_stmt|;
name|path1
operator|.
name|addRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|path2
operator|.
name|addRect
argument_list|(
literal|20
argument_list|,
literal|20
argument_list|,
literal|20
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path1
operator|.
name|intersects
argument_list|(
name|path2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path2
operator|.
name|intersects
argument_list|(
name|path1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path1
operator|.
name|contains
argument_list|(
name|path2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|path2
operator|.
name|contains
argument_list|(
name|path1
argument_list|)
argument_list|)
expr_stmt|;
name|path1
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|path2
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|path1
operator|.
name|addEllipse
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|path2
operator|.
name|addEllipse
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|path1
operator|.
name|intersects
argument_list|(
name|path2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|path2
operator|.
name|intersects
argument_list|(
name|path1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|path1
operator|.
name|contains
argument_list|(
name|path2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|path2
operator|.
name|contains
argument_list|(
name|path1
argument_list|)
argument_list|)
expr_stmt|;
name|path1
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|path2
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|path1
operator|.
name|addEllipse
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|path2
operator|.
name|addEllipse
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path1
operator|.
name|intersects
argument_list|(
name|path2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path2
operator|.
name|intersects
argument_list|(
name|path1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|path1
operator|.
name|contains
argument_list|(
name|path2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|path2
operator|.
name|contains
argument_list|(
name|path1
argument_list|)
argument_list|)
expr_stmt|;
name|path1
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|path2
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|path1
operator|.
name|addRect
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|path2
operator|.
name|addRect
argument_list|(
literal|50
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path1
operator|.
name|intersects
argument_list|(
name|path2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path2
operator|.
name|intersects
argument_list|(
name|path1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|path1
operator|.
name|contains
argument_list|(
name|path2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|path2
operator|.
name|contains
argument_list|(
name|path1
argument_list|)
argument_list|)
expr_stmt|;
name|path1
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|path2
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|path1
operator|.
name|addRect
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|path2
operator|.
name|addRect
argument_list|(
literal|110
argument_list|,
literal|201
argument_list|,
literal|100
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|path1
operator|.
name|intersects
argument_list|(
name|path2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|path2
operator|.
name|intersects
argument_list|(
name|path1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|path1
operator|.
name|contains
argument_list|(
name|path2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|path2
operator|.
name|contains
argument_list|(
name|path1
argument_list|)
argument_list|)
expr_stmt|;
name|path1
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|path2
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|path1
operator|.
name|addRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|path2
operator|.
name|addRect
argument_list|(
literal|20
argument_list|,
literal|20
argument_list|,
literal|20
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|path2
operator|.
name|addRect
argument_list|(
literal|25
argument_list|,
literal|25
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path1
operator|.
name|intersects
argument_list|(
name|path2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path2
operator|.
name|intersects
argument_list|(
name|path1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path1
operator|.
name|contains
argument_list|(
name|path2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|path2
operator|.
name|contains
argument_list|(
name|path1
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testIntersections2
name|void
name|tst_QPathClipper
operator|::
name|testIntersections2
parameter_list|()
block|{
name|QPainterPath
name|path1
decl_stmt|;
name|QPainterPath
name|path2
decl_stmt|;
name|path1
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|path2
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|path1
operator|.
name|moveTo
argument_list|(
operator|-
literal|8
argument_list|,
operator|-
literal|8
argument_list|)
expr_stmt|;
name|path1
operator|.
name|lineTo
argument_list|(
literal|107
argument_list|,
operator|-
literal|8
argument_list|)
expr_stmt|;
name|path1
operator|.
name|lineTo
argument_list|(
literal|107
argument_list|,
literal|107
argument_list|)
expr_stmt|;
name|path1
operator|.
name|lineTo
argument_list|(
operator|-
literal|8
argument_list|,
literal|107
argument_list|)
expr_stmt|;
name|path2
operator|.
name|moveTo
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|path2
operator|.
name|lineTo
argument_list|(
literal|100
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|path2
operator|.
name|lineTo
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|path2
operator|.
name|lineTo
argument_list|(
literal|0
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|path2
operator|.
name|lineTo
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path1
operator|.
name|intersects
argument_list|(
name|path2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path2
operator|.
name|intersects
argument_list|(
name|path1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path1
operator|.
name|contains
argument_list|(
name|path2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|path2
operator|.
name|contains
argument_list|(
name|path1
argument_list|)
argument_list|)
expr_stmt|;
name|path1
operator|.
name|closeSubpath
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|path1
operator|.
name|intersects
argument_list|(
name|path2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path2
operator|.
name|intersects
argument_list|(
name|path1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path1
operator|.
name|contains
argument_list|(
name|path2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|path2
operator|.
name|contains
argument_list|(
name|path1
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testIntersections3
name|void
name|tst_QPathClipper
operator|::
name|testIntersections3
parameter_list|()
block|{
name|QPainterPath
name|path1
init|=
name|Paths
operator|::
name|node
argument_list|()
decl_stmt|;
name|QPainterPath
name|path2
init|=
name|Paths
operator|::
name|interRect
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|path1
operator|.
name|intersects
argument_list|(
name|path2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path2
operator|.
name|intersects
argument_list|(
name|path1
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testIntersections4
name|void
name|tst_QPathClipper
operator|::
name|testIntersections4
parameter_list|()
block|{
name|QPainterPath
name|path1
decl_stmt|;
name|QPainterPath
name|path2
decl_stmt|;
name|path1
operator|.
name|moveTo
argument_list|(
operator|-
literal|5
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|path1
operator|.
name|lineTo
argument_list|(
literal|5
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|path2
operator|.
name|moveTo
argument_list|(
literal|0
argument_list|,
operator|-
literal|5
argument_list|)
expr_stmt|;
name|path2
operator|.
name|lineTo
argument_list|(
literal|0
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path1
operator|.
name|intersects
argument_list|(
name|path2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path2
operator|.
name|intersects
argument_list|(
name|path1
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testIntersections5
name|void
name|tst_QPathClipper
operator|::
name|testIntersections5
parameter_list|()
block|{
name|QPainterPath
name|path1
decl_stmt|;
name|QPainterPath
name|path2
decl_stmt|;
name|path1
operator|.
name|addRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|path1
operator|.
name|addRect
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|path2
operator|.
name|addRect
argument_list|(
literal|0.5
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path1
operator|.
name|intersects
argument_list|(
name|path2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path2
operator|.
name|intersects
argument_list|(
name|path1
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testIntersections6
name|void
name|tst_QPathClipper
operator|::
name|testIntersections6
parameter_list|()
block|{
name|QPainterPath
name|path1
decl_stmt|;
name|QPainterPath
name|path2
decl_stmt|;
name|path1
operator|.
name|moveTo
argument_list|(
name|QPointF
argument_list|(
operator|-
literal|115.567
argument_list|,
operator|-
literal|98.3254
argument_list|)
argument_list|)
expr_stmt|;
name|path1
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
operator|-
literal|45.9007
argument_list|,
operator|-
literal|98.3254
argument_list|)
argument_list|)
expr_stmt|;
name|path1
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
operator|-
literal|45.9007
argument_list|,
operator|-
literal|28.6588
argument_list|)
argument_list|)
expr_stmt|;
name|path1
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
operator|-
literal|115.567
argument_list|,
operator|-
literal|28.6588
argument_list|)
argument_list|)
expr_stmt|;
name|path2
operator|.
name|moveTo
argument_list|(
name|QPointF
argument_list|(
operator|-
literal|110
argument_list|,
operator|-
literal|110
argument_list|)
argument_list|)
expr_stmt|;
name|path2
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|110
argument_list|,
operator|-
literal|110
argument_list|)
argument_list|)
expr_stmt|;
name|path2
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|110
argument_list|,
literal|110
argument_list|)
argument_list|)
expr_stmt|;
name|path2
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
operator|-
literal|110
argument_list|,
literal|110
argument_list|)
argument_list|)
expr_stmt|;
name|path2
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
operator|-
literal|110
argument_list|,
operator|-
literal|110
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path1
operator|.
name|intersects
argument_list|(
name|path2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path2
operator|.
name|intersects
argument_list|(
name|path1
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testIntersections7
name|void
name|tst_QPathClipper
operator|::
name|testIntersections7
parameter_list|()
block|{
name|QPainterPath
name|path1
decl_stmt|;
name|QPainterPath
name|path2
decl_stmt|;
name|path1
operator|.
name|addRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|path2
operator|.
name|addRect
argument_list|(
literal|5
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path1
operator|.
name|intersects
argument_list|(
name|path2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path2
operator|.
name|intersects
argument_list|(
name|path1
argument_list|)
argument_list|)
expr_stmt|;
name|path1
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|path2
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|path1
operator|.
name|addRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|path2
operator|.
name|addRect
argument_list|(
literal|0
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path1
operator|.
name|intersects
argument_list|(
name|path2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path2
operator|.
name|intersects
argument_list|(
name|path1
argument_list|)
argument_list|)
expr_stmt|;
name|path1
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|path2
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|path1
operator|.
name|addRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|path2
operator|.
name|addRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path1
operator|.
name|intersects
argument_list|(
name|path2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path2
operator|.
name|intersects
argument_list|(
name|path1
argument_list|)
argument_list|)
expr_stmt|;
comment|///
name|path1
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|path2
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|path1
operator|.
name|addRect
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|path2
operator|.
name|addRect
argument_list|(
literal|5
argument_list|,
literal|1
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path1
operator|.
name|intersects
argument_list|(
name|path2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path2
operator|.
name|intersects
argument_list|(
name|path1
argument_list|)
argument_list|)
expr_stmt|;
name|path1
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|path2
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|path1
operator|.
name|addRect
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|path2
operator|.
name|addRect
argument_list|(
literal|1
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path1
operator|.
name|intersects
argument_list|(
name|path2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path2
operator|.
name|intersects
argument_list|(
name|path1
argument_list|)
argument_list|)
expr_stmt|;
name|path1
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|path2
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|path1
operator|.
name|addRect
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|path2
operator|.
name|addRect
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path1
operator|.
name|intersects
argument_list|(
name|path2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path2
operator|.
name|intersects
argument_list|(
name|path1
argument_list|)
argument_list|)
expr_stmt|;
name|path1
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|path2
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|path1
operator|.
name|addRect
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|path2
operator|.
name|addRect
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path1
operator|.
name|intersects
argument_list|(
name|path2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path2
operator|.
name|intersects
argument_list|(
name|path1
argument_list|)
argument_list|)
expr_stmt|;
name|path1
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|path2
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|path1
operator|.
name|addRect
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|path2
operator|.
name|addRect
argument_list|(
literal|9
argument_list|,
literal|9
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path1
operator|.
name|intersects
argument_list|(
name|path2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path2
operator|.
name|intersects
argument_list|(
name|path1
argument_list|)
argument_list|)
expr_stmt|;
name|path1
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|path2
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|path1
operator|.
name|addRect
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|path2
operator|.
name|addRect
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path1
operator|.
name|intersects
argument_list|(
name|path2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path2
operator|.
name|intersects
argument_list|(
name|path1
argument_list|)
argument_list|)
expr_stmt|;
name|path1
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|path2
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|path1
operator|.
name|addRect
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|9
argument_list|,
literal|9
argument_list|)
expr_stmt|;
name|path2
operator|.
name|addRect
argument_list|(
literal|11
argument_list|,
literal|11
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|path1
operator|.
name|intersects
argument_list|(
name|path2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|path2
operator|.
name|intersects
argument_list|(
name|path1
argument_list|)
argument_list|)
expr_stmt|;
name|path1
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|path2
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|path1
operator|.
name|addRect
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|path2
operator|.
name|addRect
argument_list|(
literal|12
argument_list|,
literal|12
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|path1
operator|.
name|intersects
argument_list|(
name|path2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|path2
operator|.
name|intersects
argument_list|(
name|path1
argument_list|)
argument_list|)
expr_stmt|;
name|path1
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|path2
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|path1
operator|.
name|addRect
argument_list|(
literal|11
argument_list|,
literal|11
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|path2
operator|.
name|addRect
argument_list|(
literal|12
argument_list|,
literal|12
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path1
operator|.
name|intersects
argument_list|(
name|path2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path2
operator|.
name|intersects
argument_list|(
name|path1
argument_list|)
argument_list|)
expr_stmt|;
name|path1
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|path2
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|path1
operator|.
name|addRect
argument_list|(
literal|11
argument_list|,
literal|11
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|path2
operator|.
name|addRect
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path1
operator|.
name|intersects
argument_list|(
name|path2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path2
operator|.
name|intersects
argument_list|(
name|path1
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testIntersections8
name|void
name|tst_QPathClipper
operator|::
name|testIntersections8
parameter_list|()
block|{
name|QPainterPath
name|path1
init|=
name|Paths
operator|::
name|node
argument_list|()
operator|*
name|QTransform
argument_list|()
operator|.
name|translate
argument_list|(
literal|100
argument_list|,
literal|50
argument_list|)
decl_stmt|;
name|QPainterPath
name|path2
init|=
name|Paths
operator|::
name|node
argument_list|()
operator|*
name|QTransform
argument_list|()
operator|.
name|translate
argument_list|(
literal|150
argument_list|,
literal|50
argument_list|)
decl_stmt|;
empty_stmt|;
name|QVERIFY
argument_list|(
name|path1
operator|.
name|intersects
argument_list|(
name|path2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path2
operator|.
name|intersects
argument_list|(
name|path1
argument_list|)
argument_list|)
expr_stmt|;
name|path1
operator|=
name|Paths
operator|::
name|node
argument_list|()
expr_stmt|;
name|path2
operator|=
name|Paths
operator|::
name|node
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|path1
operator|.
name|intersects
argument_list|(
name|path2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path2
operator|.
name|intersects
argument_list|(
name|path1
argument_list|)
argument_list|)
expr_stmt|;
name|path1
operator|=
name|Paths
operator|::
name|node
argument_list|()
expr_stmt|;
name|path2
operator|=
name|Paths
operator|::
name|node
argument_list|()
operator|*
name|QTransform
argument_list|()
operator|.
name|translate
argument_list|(
literal|0
argument_list|,
literal|30
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path1
operator|.
name|intersects
argument_list|(
name|path2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path2
operator|.
name|intersects
argument_list|(
name|path1
argument_list|)
argument_list|)
expr_stmt|;
name|path1
operator|=
name|Paths
operator|::
name|node
argument_list|()
expr_stmt|;
name|path2
operator|=
name|Paths
operator|::
name|node
argument_list|()
operator|*
name|QTransform
argument_list|()
operator|.
name|translate
argument_list|(
literal|30
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path1
operator|.
name|intersects
argument_list|(
name|path2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path2
operator|.
name|intersects
argument_list|(
name|path1
argument_list|)
argument_list|)
expr_stmt|;
name|path1
operator|=
name|Paths
operator|::
name|node
argument_list|()
expr_stmt|;
name|path2
operator|=
name|Paths
operator|::
name|node
argument_list|()
operator|*
name|QTransform
argument_list|()
operator|.
name|translate
argument_list|(
literal|30
argument_list|,
literal|30
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path1
operator|.
name|intersects
argument_list|(
name|path2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path2
operator|.
name|intersects
argument_list|(
name|path1
argument_list|)
argument_list|)
expr_stmt|;
name|path1
operator|=
name|Paths
operator|::
name|node
argument_list|()
expr_stmt|;
name|path2
operator|=
name|Paths
operator|::
name|node
argument_list|()
operator|*
name|QTransform
argument_list|()
operator|.
name|translate
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path1
operator|.
name|intersects
argument_list|(
name|path2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path2
operator|.
name|intersects
argument_list|(
name|path1
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testIntersections9
name|void
name|tst_QPathClipper
operator|::
name|testIntersections9
parameter_list|()
block|{
name|QPainterPath
name|path1
decl_stmt|;
name|QPainterPath
name|path2
decl_stmt|;
name|path1
operator|.
name|addRect
argument_list|(
name|QRectF
argument_list|(
operator|-
literal|1
argument_list|,
literal|143
argument_list|,
literal|146
argument_list|,
literal|106
argument_list|)
argument_list|)
expr_stmt|;
name|path2
operator|.
name|addRect
argument_list|(
name|QRectF
argument_list|(
operator|-
literal|9
argument_list|,
literal|145
argument_list|,
literal|150
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path1
operator|.
name|intersects
argument_list|(
name|path2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path2
operator|.
name|intersects
argument_list|(
name|path1
argument_list|)
argument_list|)
expr_stmt|;
name|path1
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
empty_stmt|;
name|path2
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|path1
operator|.
name|addRect
argument_list|(
name|QRectF
argument_list|(
operator|-
literal|1
argument_list|,
literal|191
argument_list|,
literal|136
argument_list|,
literal|106
argument_list|)
argument_list|)
expr_stmt|;
name|path2
operator|.
name|addRect
argument_list|(
name|QRectF
argument_list|(
operator|-
literal|19
argument_list|,
literal|194
argument_list|,
literal|150
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path1
operator|.
name|intersects
argument_list|(
name|path2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path2
operator|.
name|intersects
argument_list|(
name|path1
argument_list|)
argument_list|)
expr_stmt|;
name|path1
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
empty_stmt|;
name|path2
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|path1
operator|.
name|moveTo
argument_list|(
operator|-
literal|1
argument_list|,
literal|143
argument_list|)
expr_stmt|;
name|path1
operator|.
name|lineTo
argument_list|(
literal|148
argument_list|,
literal|143
argument_list|)
expr_stmt|;
name|path1
operator|.
name|lineTo
argument_list|(
literal|148
argument_list|,
literal|250
argument_list|)
expr_stmt|;
name|path1
operator|.
name|lineTo
argument_list|(
operator|-
literal|1
argument_list|,
literal|250
argument_list|)
expr_stmt|;
name|path2
operator|.
name|moveTo
argument_list|(
operator|-
literal|5
argument_list|,
literal|146
argument_list|)
expr_stmt|;
name|path2
operator|.
name|lineTo
argument_list|(
literal|145
argument_list|,
literal|146
argument_list|)
expr_stmt|;
name|path2
operator|.
name|lineTo
argument_list|(
literal|145
argument_list|,
literal|246
argument_list|)
expr_stmt|;
name|path2
operator|.
name|lineTo
argument_list|(
operator|-
literal|5
argument_list|,
literal|246
argument_list|)
expr_stmt|;
name|path2
operator|.
name|lineTo
argument_list|(
operator|-
literal|5
argument_list|,
literal|146
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path1
operator|.
name|intersects
argument_list|(
name|path2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path2
operator|.
name|intersects
argument_list|(
name|path1
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|pathFromRect
name|QPainterPath
name|pathFromRect
parameter_list|(
name|qreal
name|x
parameter_list|,
name|qreal
name|y
parameter_list|,
name|qreal
name|w
parameter_list|,
name|qreal
name|h
parameter_list|)
block|{
name|QPainterPath
name|path
decl_stmt|;
name|path
operator|.
name|addRect
argument_list|(
name|QRectF
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|w
argument_list|,
name|h
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|path
return|;
block|}
end_function
begin_function
DECL|function|pathFromLine
name|QPainterPath
name|pathFromLine
parameter_list|(
name|qreal
name|x1
parameter_list|,
name|qreal
name|y1
parameter_list|,
name|qreal
name|x2
parameter_list|,
name|qreal
name|y2
parameter_list|)
block|{
name|QPainterPath
name|path
decl_stmt|;
name|path
operator|.
name|moveTo
argument_list|(
name|x1
argument_list|,
name|y1
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|x2
argument_list|,
name|y2
argument_list|)
expr_stmt|;
return|return
name|path
return|;
block|}
end_function
begin_function
DECL|function|loopLength
specifier|static
name|int
name|loopLength
parameter_list|(
specifier|const
name|QWingedEdge
modifier|&
name|list
parameter_list|,
name|QWingedEdge
operator|::
name|TraversalStatus
name|status
parameter_list|)
block|{
name|int
name|start
init|=
name|status
operator|.
name|edge
decl_stmt|;
name|int
name|length
init|=
literal|0
decl_stmt|;
do|do
block|{
operator|++
name|length
expr_stmt|;
name|status
operator|=
name|list
operator|.
name|next
argument_list|(
name|status
argument_list|)
expr_stmt|;
block|}
do|while
condition|(
name|status
operator|.
name|edge
operator|!=
name|start
condition|)
do|;
return|return
name|length
return|;
block|}
end_function
begin_function
DECL|function|testWingedEdge
name|void
name|tst_QPathClipper
operator|::
name|testWingedEdge
parameter_list|()
block|{
block|{
name|QWingedEdge
name|list
decl_stmt|;
name|int
name|e1
init|=
name|list
operator|.
name|addEdge
argument_list|(
name|QPointF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|QPointF
argument_list|(
literal|10
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|int
name|e2
init|=
name|list
operator|.
name|addEdge
argument_list|(
name|QPointF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|QPointF
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|)
argument_list|)
decl_stmt|;
name|int
name|e3
init|=
name|list
operator|.
name|addEdge
argument_list|(
name|QPointF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|QPointF
argument_list|(
operator|-
literal|10
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|int
name|e4
init|=
name|list
operator|.
name|addEdge
argument_list|(
name|QPointF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|QPointF
argument_list|(
literal|0
argument_list|,
operator|-
literal|10
argument_list|)
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|list
operator|.
name|edgeCount
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|list
operator|.
name|vertexCount
argument_list|()
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QWingedEdge
operator|::
name|TraversalStatus
name|status
init|=
block|{
name|e1
block|,
name|QPathEdge
operator|::
name|RightTraversal
block|,
name|QPathEdge
operator|::
name|Forward
block|}
decl_stmt|;
name|status
operator|=
name|list
operator|.
name|next
argument_list|(
name|status
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|direction
argument_list|,
name|QPathEdge
operator|::
name|Backward
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|traversal
argument_list|,
name|QPathEdge
operator|::
name|LeftTraversal
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|edge
argument_list|,
name|e1
argument_list|)
expr_stmt|;
name|status
operator|=
name|list
operator|.
name|next
argument_list|(
name|status
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|direction
argument_list|,
name|QPathEdge
operator|::
name|Forward
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|traversal
argument_list|,
name|QPathEdge
operator|::
name|RightTraversal
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|edge
argument_list|,
name|e4
argument_list|)
expr_stmt|;
name|status
operator|=
name|list
operator|.
name|next
argument_list|(
name|status
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|direction
argument_list|,
name|QPathEdge
operator|::
name|Backward
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|traversal
argument_list|,
name|QPathEdge
operator|::
name|LeftTraversal
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|edge
argument_list|,
name|e4
argument_list|)
expr_stmt|;
name|status
operator|=
name|list
operator|.
name|next
argument_list|(
name|status
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|direction
argument_list|,
name|QPathEdge
operator|::
name|Forward
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|traversal
argument_list|,
name|QPathEdge
operator|::
name|RightTraversal
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|edge
argument_list|,
name|e3
argument_list|)
expr_stmt|;
name|status
operator|=
name|list
operator|.
name|next
argument_list|(
name|status
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|direction
argument_list|,
name|QPathEdge
operator|::
name|Backward
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|traversal
argument_list|,
name|QPathEdge
operator|::
name|LeftTraversal
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|edge
argument_list|,
name|e3
argument_list|)
expr_stmt|;
name|status
operator|=
name|list
operator|.
name|next
argument_list|(
name|status
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|direction
argument_list|,
name|QPathEdge
operator|::
name|Forward
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|traversal
argument_list|,
name|QPathEdge
operator|::
name|RightTraversal
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|edge
argument_list|,
name|e2
argument_list|)
expr_stmt|;
name|status
operator|=
name|list
operator|.
name|next
argument_list|(
name|status
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|direction
argument_list|,
name|QPathEdge
operator|::
name|Backward
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|traversal
argument_list|,
name|QPathEdge
operator|::
name|LeftTraversal
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|edge
argument_list|,
name|e2
argument_list|)
expr_stmt|;
name|status
operator|=
name|list
operator|.
name|next
argument_list|(
name|status
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|direction
argument_list|,
name|QPathEdge
operator|::
name|Forward
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|traversal
argument_list|,
name|QPathEdge
operator|::
name|RightTraversal
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|edge
argument_list|,
name|e1
argument_list|)
expr_stmt|;
block|}
block|{
name|QWingedEdge
name|list
decl_stmt|;
name|int
name|e1
init|=
name|list
operator|.
name|addEdge
argument_list|(
name|QPointF
argument_list|(
literal|5
argument_list|,
literal|0
argument_list|)
argument_list|,
name|QPointF
argument_list|(
literal|5
argument_list|,
literal|10
argument_list|)
argument_list|)
decl_stmt|;
name|int
name|e2
init|=
name|list
operator|.
name|addEdge
argument_list|(
name|QPointF
argument_list|(
literal|5
argument_list|,
literal|0
argument_list|)
argument_list|,
name|QPointF
argument_list|(
literal|10
argument_list|,
literal|5
argument_list|)
argument_list|)
decl_stmt|;
name|int
name|e3
init|=
name|list
operator|.
name|addEdge
argument_list|(
name|QPointF
argument_list|(
literal|10
argument_list|,
literal|5
argument_list|)
argument_list|,
name|QPointF
argument_list|(
literal|5
argument_list|,
literal|10
argument_list|)
argument_list|)
decl_stmt|;
name|int
name|e4
init|=
name|list
operator|.
name|addEdge
argument_list|(
name|QPointF
argument_list|(
literal|5
argument_list|,
literal|0
argument_list|)
argument_list|,
name|QPointF
argument_list|(
literal|0
argument_list|,
literal|5
argument_list|)
argument_list|)
decl_stmt|;
name|int
name|e5
init|=
name|list
operator|.
name|addEdge
argument_list|(
name|QPointF
argument_list|(
literal|0
argument_list|,
literal|5
argument_list|)
argument_list|,
name|QPointF
argument_list|(
literal|5
argument_list|,
literal|10
argument_list|)
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|list
operator|.
name|edgeCount
argument_list|()
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|list
operator|.
name|vertexCount
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QWingedEdge
operator|::
name|TraversalStatus
name|status
init|=
block|{
name|e1
block|,
name|QPathEdge
operator|::
name|RightTraversal
block|,
name|QPathEdge
operator|::
name|Forward
block|}
decl_stmt|;
name|status
operator|=
name|list
operator|.
name|next
argument_list|(
name|status
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|direction
argument_list|,
name|QPathEdge
operator|::
name|Backward
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|traversal
argument_list|,
name|QPathEdge
operator|::
name|LeftTraversal
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|edge
argument_list|,
name|e5
argument_list|)
expr_stmt|;
name|status
operator|=
name|list
operator|.
name|next
argument_list|(
name|status
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|direction
argument_list|,
name|QPathEdge
operator|::
name|Backward
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|traversal
argument_list|,
name|QPathEdge
operator|::
name|LeftTraversal
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|edge
argument_list|,
name|e4
argument_list|)
expr_stmt|;
name|status
operator|=
name|list
operator|.
name|next
argument_list|(
name|status
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|direction
argument_list|,
name|QPathEdge
operator|::
name|Forward
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|traversal
argument_list|,
name|QPathEdge
operator|::
name|RightTraversal
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|edge
argument_list|,
name|e1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|loopLength
argument_list|(
name|list
argument_list|,
name|status
argument_list|)
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|status
operator|.
name|flip
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|direction
argument_list|,
name|QPathEdge
operator|::
name|Backward
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|traversal
argument_list|,
name|QPathEdge
operator|::
name|LeftTraversal
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|loopLength
argument_list|(
name|list
argument_list|,
name|status
argument_list|)
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|status
operator|=
name|list
operator|.
name|next
argument_list|(
name|status
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|direction
argument_list|,
name|QPathEdge
operator|::
name|Forward
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|traversal
argument_list|,
name|QPathEdge
operator|::
name|RightTraversal
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|edge
argument_list|,
name|e2
argument_list|)
expr_stmt|;
name|status
operator|=
name|list
operator|.
name|next
argument_list|(
name|status
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|direction
argument_list|,
name|QPathEdge
operator|::
name|Forward
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|traversal
argument_list|,
name|QPathEdge
operator|::
name|RightTraversal
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|edge
argument_list|,
name|e3
argument_list|)
expr_stmt|;
name|status
operator|=
name|list
operator|.
name|next
argument_list|(
name|status
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|direction
argument_list|,
name|QPathEdge
operator|::
name|Backward
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|traversal
argument_list|,
name|QPathEdge
operator|::
name|LeftTraversal
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|edge
argument_list|,
name|e1
argument_list|)
expr_stmt|;
name|status
operator|=
name|list
operator|.
name|next
argument_list|(
name|status
argument_list|)
expr_stmt|;
name|status
operator|.
name|flip
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|direction
argument_list|,
name|QPathEdge
operator|::
name|Backward
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|traversal
argument_list|,
name|QPathEdge
operator|::
name|LeftTraversal
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|edge
argument_list|,
name|e2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|loopLength
argument_list|(
name|list
argument_list|,
name|status
argument_list|)
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|status
operator|=
name|list
operator|.
name|next
argument_list|(
name|status
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|direction
argument_list|,
name|QPathEdge
operator|::
name|Forward
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|traversal
argument_list|,
name|QPathEdge
operator|::
name|RightTraversal
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|edge
argument_list|,
name|e4
argument_list|)
expr_stmt|;
name|status
operator|=
name|list
operator|.
name|next
argument_list|(
name|status
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|direction
argument_list|,
name|QPathEdge
operator|::
name|Forward
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|traversal
argument_list|,
name|QPathEdge
operator|::
name|RightTraversal
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|edge
argument_list|,
name|e5
argument_list|)
expr_stmt|;
name|status
operator|=
name|list
operator|.
name|next
argument_list|(
name|status
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|direction
argument_list|,
name|QPathEdge
operator|::
name|Backward
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|traversal
argument_list|,
name|QPathEdge
operator|::
name|LeftTraversal
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|edge
argument_list|,
name|e3
argument_list|)
expr_stmt|;
name|status
operator|=
name|list
operator|.
name|next
argument_list|(
name|status
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|direction
argument_list|,
name|QPathEdge
operator|::
name|Backward
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|traversal
argument_list|,
name|QPathEdge
operator|::
name|LeftTraversal
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|edge
argument_list|,
name|e2
argument_list|)
expr_stmt|;
block|}
block|{
name|QPainterPath
name|path
init|=
name|pathFromRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|20
argument_list|,
literal|20
argument_list|)
decl_stmt|;
name|QWingedEdge
name|list
argument_list|(
name|path
argument_list|,
name|QPainterPath
argument_list|()
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|list
operator|.
name|edgeCount
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|list
operator|.
name|vertexCount
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QWingedEdge
operator|::
name|TraversalStatus
name|status
init|=
block|{
literal|0
block|,
name|QPathEdge
operator|::
name|RightTraversal
block|,
name|QPathEdge
operator|::
name|Forward
block|}
decl_stmt|;
name|QPathEdge
modifier|*
name|edge
init|=
name|list
operator|.
name|edge
argument_list|(
name|status
operator|.
name|edge
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|QPointF
argument_list|(
operator|*
name|list
operator|.
name|vertex
argument_list|(
name|edge
operator|->
name|first
argument_list|)
argument_list|)
argument_list|,
name|QPointF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QPointF
argument_list|(
operator|*
name|list
operator|.
name|vertex
argument_list|(
name|edge
operator|->
name|second
argument_list|)
argument_list|)
argument_list|,
name|QPointF
argument_list|(
literal|20
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|status
operator|=
name|list
operator|.
name|next
argument_list|(
name|status
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|edge
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|status
operator|=
name|list
operator|.
name|next
argument_list|(
name|status
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|edge
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|status
operator|=
name|list
operator|.
name|next
argument_list|(
name|status
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|edge
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|status
operator|=
name|list
operator|.
name|next
argument_list|(
name|status
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|edge
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|status
operator|.
name|flipDirection
argument_list|()
expr_stmt|;
name|status
operator|=
name|list
operator|.
name|next
argument_list|(
name|status
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|edge
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|status
operator|=
name|list
operator|.
name|next
argument_list|(
name|status
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|edge
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|status
operator|=
name|list
operator|.
name|next
argument_list|(
name|status
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|edge
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|status
operator|=
name|list
operator|.
name|next
argument_list|(
name|status
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|status
operator|.
name|edge
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QWingedEdge
name|list2
argument_list|(
name|path
argument_list|,
name|pathFromRect
argument_list|(
literal|10
argument_list|,
literal|5
argument_list|,
literal|20
argument_list|,
literal|10
argument_list|)
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|list2
operator|.
name|edgeCount
argument_list|()
argument_list|,
literal|12
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|list2
operator|.
name|vertexCount
argument_list|()
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|status
operator|.
name|flipDirection
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|loopLength
argument_list|(
name|list2
argument_list|,
name|status
argument_list|)
argument_list|,
literal|8
argument_list|)
expr_stmt|;
name|status
operator|=
name|list2
operator|.
name|next
argument_list|(
name|status
argument_list|)
expr_stmt|;
name|edge
operator|=
name|list2
operator|.
name|edge
argument_list|(
name|status
operator|.
name|edge
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QPointF
argument_list|(
operator|*
name|list2
operator|.
name|vertex
argument_list|(
name|edge
operator|->
name|first
argument_list|)
argument_list|)
argument_list|,
name|QPointF
argument_list|(
literal|20
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QPointF
argument_list|(
operator|*
name|list2
operator|.
name|vertex
argument_list|(
name|edge
operator|->
name|second
argument_list|)
argument_list|)
argument_list|,
name|QPointF
argument_list|(
literal|20
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|status
operator|=
name|list2
operator|.
name|next
argument_list|(
name|status
argument_list|)
expr_stmt|;
name|status
operator|.
name|flipTraversal
argument_list|()
expr_stmt|;
name|edge
operator|=
name|list2
operator|.
name|edge
argument_list|(
name|status
operator|.
name|edge
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QPointF
argument_list|(
operator|*
name|list2
operator|.
name|vertex
argument_list|(
name|edge
operator|->
name|first
argument_list|)
argument_list|)
argument_list|,
name|QPointF
argument_list|(
literal|10
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QPointF
argument_list|(
operator|*
name|list2
operator|.
name|vertex
argument_list|(
name|edge
operator|->
name|second
argument_list|)
argument_list|)
argument_list|,
name|QPointF
argument_list|(
literal|20
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|loopLength
argument_list|(
name|list2
argument_list|,
name|status
argument_list|)
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|status
operator|.
name|flipDirection
argument_list|()
expr_stmt|;
name|status
operator|=
name|list2
operator|.
name|next
argument_list|(
name|status
argument_list|)
expr_stmt|;
name|status
operator|.
name|flipTraversal
argument_list|()
expr_stmt|;
name|edge
operator|=
name|list2
operator|.
name|edge
argument_list|(
name|status
operator|.
name|edge
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QPointF
argument_list|(
operator|*
name|list2
operator|.
name|vertex
argument_list|(
name|edge
operator|->
name|first
argument_list|)
argument_list|)
argument_list|,
name|QPointF
argument_list|(
literal|20
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QPointF
argument_list|(
operator|*
name|list2
operator|.
name|vertex
argument_list|(
name|edge
operator|->
name|second
argument_list|)
argument_list|)
argument_list|,
name|QPointF
argument_list|(
literal|20
argument_list|,
literal|15
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|loopLength
argument_list|(
name|list2
argument_list|,
name|status
argument_list|)
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|status
operator|=
name|list2
operator|.
name|next
argument_list|(
name|status
argument_list|)
expr_stmt|;
name|status
operator|=
name|list2
operator|.
name|next
argument_list|(
name|status
argument_list|)
expr_stmt|;
name|edge
operator|=
name|list2
operator|.
name|edge
argument_list|(
name|status
operator|.
name|edge
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QPointF
argument_list|(
operator|*
name|list2
operator|.
name|vertex
argument_list|(
name|edge
operator|->
name|first
argument_list|)
argument_list|)
argument_list|,
name|QPointF
argument_list|(
literal|30
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QPointF
argument_list|(
operator|*
name|list2
operator|.
name|vertex
argument_list|(
name|edge
operator|->
name|second
argument_list|)
argument_list|)
argument_list|,
name|QPointF
argument_list|(
literal|30
argument_list|,
literal|15
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|zeroDerivativeCurves
name|void
name|tst_QPathClipper
operator|::
name|zeroDerivativeCurves
parameter_list|()
block|{
comment|// zero derivative at end
block|{
name|QPainterPath
name|a
decl_stmt|;
name|a
operator|.
name|cubicTo
argument_list|(
literal|100
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|a
operator|.
name|lineTo
argument_list|(
literal|100
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|a
operator|.
name|lineTo
argument_list|(
literal|0
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|QPainterPath
name|b
decl_stmt|;
name|b
operator|.
name|moveTo
argument_list|(
literal|50
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|b
operator|.
name|lineTo
argument_list|(
literal|150
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|b
operator|.
name|lineTo
argument_list|(
literal|150
argument_list|,
literal|150
argument_list|)
expr_stmt|;
name|b
operator|.
name|lineTo
argument_list|(
literal|50
argument_list|,
literal|150
argument_list|)
expr_stmt|;
name|QPainterPath
name|c
init|=
name|a
operator|.
name|united
argument_list|(
name|b
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|c
operator|.
name|contains
argument_list|(
name|QPointF
argument_list|(
literal|25
argument_list|,
literal|125
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|c
operator|.
name|contains
argument_list|(
name|QPointF
argument_list|(
literal|75
argument_list|,
literal|125
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|c
operator|.
name|contains
argument_list|(
name|QPointF
argument_list|(
literal|125
argument_list|,
literal|125
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// zero derivative at start
block|{
name|QPainterPath
name|a
decl_stmt|;
name|a
operator|.
name|cubicTo
argument_list|(
literal|100
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|a
operator|.
name|lineTo
argument_list|(
literal|100
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|a
operator|.
name|lineTo
argument_list|(
literal|0
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|QPainterPath
name|b
decl_stmt|;
name|b
operator|.
name|moveTo
argument_list|(
literal|50
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|b
operator|.
name|lineTo
argument_list|(
literal|150
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|b
operator|.
name|lineTo
argument_list|(
literal|150
argument_list|,
literal|150
argument_list|)
expr_stmt|;
name|b
operator|.
name|lineTo
argument_list|(
literal|50
argument_list|,
literal|150
argument_list|)
expr_stmt|;
name|QPainterPath
name|c
init|=
name|a
operator|.
name|united
argument_list|(
name|b
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|c
operator|.
name|contains
argument_list|(
name|QPointF
argument_list|(
literal|25
argument_list|,
literal|125
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|c
operator|.
name|contains
argument_list|(
name|QPointF
argument_list|(
literal|75
argument_list|,
literal|125
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|c
operator|.
name|contains
argument_list|(
name|QPointF
argument_list|(
literal|125
argument_list|,
literal|125
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|strictContains
specifier|static
name|bool
name|strictContains
parameter_list|(
specifier|const
name|QPainterPath
modifier|&
name|a
parameter_list|,
specifier|const
name|QPainterPath
modifier|&
name|b
parameter_list|)
block|{
return|return
name|b
operator|.
name|subtracted
argument_list|(
name|a
argument_list|)
operator|==
name|QPainterPath
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|task204301_data
name|void
name|tst_QPathClipper
operator|::
name|task204301_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QPolygonF
argument_list|>
argument_list|(
literal|"points"
argument_list|)
expr_stmt|;
block|{
name|QPointF
name|a
argument_list|(
literal|51.09013255685567855835
argument_list|,
literal|31.30814891308546066284
argument_list|)
decl_stmt|;
name|QPointF
name|b
argument_list|(
literal|98.39898971840739250183
argument_list|,
literal|11.02079074829816818237
argument_list|)
decl_stmt|;
name|QPointF
name|c
argument_list|(
literal|91.23911846894770860672
argument_list|,
literal|45.86981737054884433746
argument_list|)
decl_stmt|;
name|QPointF
name|d
argument_list|(
literal|66.58616356085985898972
argument_list|,
literal|63.10526528395712375641
argument_list|)
decl_stmt|;
name|QPointF
name|e
argument_list|(
literal|82.08219456479714892794
argument_list|,
literal|94.90238165489137145414
argument_list|)
decl_stmt|;
name|QPointF
name|f
argument_list|(
literal|16.09013040543221251255
argument_list|,
literal|105.66263409332729850121
argument_list|)
decl_stmt|;
name|QPointF
name|g
argument_list|(
literal|10.62811442650854587555
argument_list|,
literal|65.09154842235147953033
argument_list|)
decl_stmt|;
name|QPointF
name|h
argument_list|(
literal|5.16609844751656055450
argument_list|,
literal|24.52046275138854980469
argument_list|)
decl_stmt|;
name|QPolygonF
name|v
decl_stmt|;
name|v
operator|<<
name|a
operator|<<
name|b
operator|<<
name|c
operator|<<
name|d
operator|<<
name|e
operator|<<
name|f
operator|<<
name|g
operator|<<
name|h
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"failed_on_linux"
argument_list|)
operator|<<
name|v
expr_stmt|;
block|}
block|{
name|QPointF
name|a
argument_list|(
literal|50.014648437500000
argument_list|,
literal|24.392089843750000
argument_list|)
decl_stmt|;
name|QPointF
name|b
argument_list|(
literal|92.836303710937500
argument_list|,
literal|5.548706054687500
argument_list|)
decl_stmt|;
name|QPointF
name|c
argument_list|(
literal|92.145690917968750
argument_list|,
literal|54.390258789062500
argument_list|)
decl_stmt|;
name|QPointF
name|d
argument_list|(
literal|65.402221679687500
argument_list|,
literal|74.345092773437500
argument_list|)
decl_stmt|;
name|QPointF
name|e
argument_list|(
literal|80.789794921787347
argument_list|,
literal|124.298095703129690
argument_list|)
decl_stmt|;
name|QPointF
name|f
argument_list|(
literal|34.961242675812954
argument_list|,
literal|87.621459960852135
argument_list|)
decl_stmt|;
name|QPointF
name|g
argument_list|(
literal|18.305969238281250
argument_list|,
literal|57.426757812500000
argument_list|)
decl_stmt|;
name|QPointF
name|h
argument_list|(
literal|1.650695800781250
argument_list|,
literal|27.232055664062500
argument_list|)
decl_stmt|;
name|QPolygonF
name|v
decl_stmt|;
name|v
operator|<<
name|a
operator|<<
name|b
operator|<<
name|c
operator|<<
name|d
operator|<<
name|e
operator|<<
name|f
operator|<<
name|g
operator|<<
name|h
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"failed_on_windows"
argument_list|)
operator|<<
name|v
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|task204301
name|void
name|tst_QPathClipper
operator|::
name|task204301
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QPolygonF
argument_list|,
name|points
argument_list|)
expr_stmt|;
name|QPointF
name|a
init|=
name|points
index|[
literal|0
index|]
decl_stmt|;
name|QPointF
name|b
init|=
name|points
index|[
literal|1
index|]
decl_stmt|;
name|QPointF
name|c
init|=
name|points
index|[
literal|2
index|]
decl_stmt|;
name|QPointF
name|d
init|=
name|points
index|[
literal|3
index|]
decl_stmt|;
name|QPointF
name|e
init|=
name|points
index|[
literal|4
index|]
decl_stmt|;
name|QPointF
name|f
init|=
name|points
index|[
literal|5
index|]
decl_stmt|;
name|QPointF
name|g
init|=
name|points
index|[
literal|6
index|]
decl_stmt|;
name|QPointF
name|h
init|=
name|points
index|[
literal|7
index|]
decl_stmt|;
name|QPainterPath
name|subA
decl_stmt|;
name|subA
operator|.
name|addPolygon
argument_list|(
name|QPolygonF
argument_list|()
operator|<<
name|a
operator|<<
name|b
operator|<<
name|c
operator|<<
name|d
argument_list|)
expr_stmt|;
name|subA
operator|.
name|closeSubpath
argument_list|()
expr_stmt|;
name|QPainterPath
name|subB
decl_stmt|;
name|subB
operator|.
name|addPolygon
argument_list|(
name|QPolygonF
argument_list|()
operator|<<
name|f
operator|<<
name|e
operator|<<
name|d
operator|<<
name|g
argument_list|)
expr_stmt|;
name|subB
operator|.
name|closeSubpath
argument_list|()
expr_stmt|;
name|QPainterPath
name|subC
decl_stmt|;
name|subC
operator|.
name|addPolygon
argument_list|(
name|QPolygonF
argument_list|()
operator|<<
name|h
operator|<<
name|a
operator|<<
name|d
operator|<<
name|g
argument_list|)
expr_stmt|;
name|subC
operator|.
name|closeSubpath
argument_list|()
expr_stmt|;
name|QPainterPath
name|path
decl_stmt|;
name|path
operator|.
name|addPath
argument_list|(
name|subA
argument_list|)
expr_stmt|;
name|path
operator|.
name|addPath
argument_list|(
name|subB
argument_list|)
expr_stmt|;
name|path
operator|.
name|addPath
argument_list|(
name|subC
argument_list|)
expr_stmt|;
name|QPainterPath
name|simplified
init|=
name|path
operator|.
name|simplified
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|strictContains
argument_list|(
name|simplified
argument_list|,
name|subA
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|strictContains
argument_list|(
name|simplified
argument_list|,
name|subB
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|strictContains
argument_list|(
name|simplified
argument_list|,
name|subC
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|task209056
name|void
name|tst_QPathClipper
operator|::
name|task209056
parameter_list|()
block|{
name|QPainterPath
name|p1
decl_stmt|;
name|p1
operator|.
name|moveTo
argument_list|(
name|QPointF
argument_list|(
literal|188.506
argument_list|,
literal|287.793
argument_list|)
argument_list|)
expr_stmt|;
name|p1
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|288.506
argument_list|,
literal|287.793
argument_list|)
argument_list|)
expr_stmt|;
name|p1
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|288.506
argument_list|,
literal|387.793
argument_list|)
argument_list|)
expr_stmt|;
name|p1
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|188.506
argument_list|,
literal|387.793
argument_list|)
argument_list|)
expr_stmt|;
name|p1
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|188.506
argument_list|,
literal|287.793
argument_list|)
argument_list|)
expr_stmt|;
name|QPainterPath
name|p2
decl_stmt|;
name|p2
operator|.
name|moveTo
argument_list|(
name|QPointF
argument_list|(
literal|419.447
argument_list|,
literal|164.383
argument_list|)
argument_list|)
expr_stmt|;
name|p2
operator|.
name|cubicTo
argument_list|(
name|QPointF
argument_list|(
literal|419.447
argument_list|,
literal|69.5486
argument_list|)
argument_list|,
name|QPointF
argument_list|(
literal|419.447
argument_list|,
literal|259.218
argument_list|)
argument_list|,
name|QPointF
argument_list|(
literal|419.447
argument_list|,
literal|164.383
argument_list|)
argument_list|)
expr_stmt|;
name|p2
operator|.
name|cubicTo
argument_list|(
name|QPointF
argument_list|(
literal|48.9378
argument_list|,
literal|259.218
argument_list|)
argument_list|,
name|QPointF
argument_list|(
literal|131.879
argument_list|,
literal|336.097
argument_list|)
argument_list|,
name|QPointF
argument_list|(
literal|234.192
argument_list|,
literal|336.097
argument_list|)
argument_list|)
expr_stmt|;
name|p2
operator|.
name|cubicTo
argument_list|(
name|QPointF
argument_list|(
literal|336.506
argument_list|,
literal|336.097
argument_list|)
argument_list|,
name|QPointF
argument_list|(
literal|419.447
argument_list|,
literal|259.218
argument_list|)
argument_list|,
name|QPointF
argument_list|(
literal|419.447
argument_list|,
literal|164.383
argument_list|)
argument_list|)
expr_stmt|;
name|QPainterPath
name|p3
init|=
name|p1
operator|.
name|intersected
argument_list|(
name|p2
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|p3
operator|!=
name|QPainterPath
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|task251909
name|void
name|tst_QPathClipper
operator|::
name|task251909
parameter_list|()
block|{
name|QPainterPath
name|p1
decl_stmt|;
name|p1
operator|.
name|moveTo
argument_list|(
literal|0
argument_list|,
operator|-
literal|10
argument_list|)
expr_stmt|;
name|p1
operator|.
name|lineTo
argument_list|(
literal|10
argument_list|,
operator|-
literal|10
argument_list|)
expr_stmt|;
name|p1
operator|.
name|lineTo
argument_list|(
literal|10
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|p1
operator|.
name|lineTo
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QPainterPath
name|p2
decl_stmt|;
name|p2
operator|.
name|moveTo
argument_list|(
literal|0
argument_list|,
literal|8e-14
argument_list|)
expr_stmt|;
name|p2
operator|.
name|lineTo
argument_list|(
literal|10
argument_list|,
operator|-
literal|8e-14
argument_list|)
expr_stmt|;
name|p2
operator|.
name|lineTo
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|p2
operator|.
name|lineTo
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QPainterPath
name|result
init|=
name|p1
operator|.
name|united
argument_list|(
name|p2
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|result
operator|.
name|elementCount
argument_list|()
operator|<=
literal|5
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|qtbug3778
name|void
name|tst_QPathClipper
operator|::
name|qtbug3778
parameter_list|()
block|{
if|if
condition|(
sizeof|sizeof
argument_list|(
name|double
argument_list|)
operator|!=
sizeof|sizeof
argument_list|(
name|qreal
argument_list|)
condition|)
block|{
name|QSKIP
argument_list|(
literal|"This test only works for qreal=double, otherwise ends in rounding errors"
argument_list|)
expr_stmt|;
block|}
name|QPainterPath
name|path1
decl_stmt|;
name|path1
operator|.
name|moveTo
argument_list|(
literal|200
argument_list|,
literal|3.22409e-5
argument_list|)
expr_stmt|;
comment|// e-5 and higher leads to a bug
comment|// Using 3.22409e-4 starts to work correctly
name|path1
operator|.
name|lineTo
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|path1
operator|.
name|lineTo
argument_list|(
literal|1.07025e-13
argument_list|,
literal|1450
argument_list|)
expr_stmt|;
name|path1
operator|.
name|lineTo
argument_list|(
literal|750
argument_list|,
literal|950
argument_list|)
expr_stmt|;
name|path1
operator|.
name|lineTo
argument_list|(
literal|950
argument_list|,
literal|750
argument_list|)
expr_stmt|;
name|path1
operator|.
name|lineTo
argument_list|(
literal|200
argument_list|,
literal|3.22409e-13
argument_list|)
expr_stmt|;
name|QPainterPath
name|path2
decl_stmt|;
name|path2
operator|.
name|moveTo
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|path2
operator|.
name|lineTo
argument_list|(
literal|200
argument_list|,
literal|800
argument_list|)
expr_stmt|;
name|path2
operator|.
name|lineTo
argument_list|(
literal|600
argument_list|,
literal|1500
argument_list|)
expr_stmt|;
name|path2
operator|.
name|lineTo
argument_list|(
literal|1500
argument_list|,
literal|1400
argument_list|)
expr_stmt|;
name|path2
operator|.
name|lineTo
argument_list|(
literal|1900
argument_list|,
literal|1200
argument_list|)
expr_stmt|;
name|path2
operator|.
name|lineTo
argument_list|(
literal|2000
argument_list|,
literal|1000
argument_list|)
expr_stmt|;
name|path2
operator|.
name|lineTo
argument_list|(
literal|1400
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|path2
operator|.
name|lineTo
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QPainterPath
name|p12
init|=
name|path1
operator|.
name|intersected
argument_list|(
name|path2
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|p12
operator|.
name|contains
argument_list|(
name|QPointF
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QPathClipper
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qpathclipper.moc"
end_include
end_unit
