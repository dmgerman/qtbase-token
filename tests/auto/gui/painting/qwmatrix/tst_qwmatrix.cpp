begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<qmatrix.h>
end_include
begin_include
include|#
directive|include
file|<qmath.h>
end_include
begin_include
include|#
directive|include
file|<qpolygon.h>
end_include
begin_class
DECL|class|tst_QWMatrix
class|class
name|tst_QWMatrix
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
private|private
name|slots
private|:
name|void
name|mapRect_data
parameter_list|()
function_decl|;
name|void
name|mapToPolygon_data
parameter_list|()
function_decl|;
name|void
name|mapRect
parameter_list|()
function_decl|;
name|void
name|operator_star_qwmatrix
parameter_list|()
function_decl|;
name|void
name|assignments
parameter_list|()
function_decl|;
name|void
name|mapToPolygon
parameter_list|()
function_decl|;
name|void
name|translate
parameter_list|()
function_decl|;
name|void
name|scale
parameter_list|()
function_decl|;
name|void
name|mapPolygon
parameter_list|()
function_decl|;
private|private:
name|void
name|mapping_data
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_function
DECL|function|mapRect_data
name|void
name|tst_QWMatrix
operator|::
name|mapRect_data
parameter_list|()
block|{
name|mapping_data
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|mapToPolygon_data
name|void
name|tst_QWMatrix
operator|::
name|mapToPolygon_data
parameter_list|()
block|{
name|mapping_data
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|mapping_data
name|void
name|tst_QWMatrix
operator|::
name|mapping_data
parameter_list|()
block|{
comment|//create the testtable instance and define the elements
name|QTest
operator|::
name|addColumn
argument_list|<
name|QMatrix
argument_list|>
argument_list|(
literal|"matrix"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QRect
argument_list|>
argument_list|(
literal|"src"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QPolygon
argument_list|>
argument_list|(
literal|"res"
argument_list|)
expr_stmt|;
comment|//next we fill it with data
comment|// identity
name|QTest
operator|::
name|newRow
argument_list|(
literal|"identity"
argument_list|)
operator|<<
name|QMatrix
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|10
argument_list|,
literal|20
argument_list|,
literal|30
argument_list|,
literal|40
argument_list|)
operator|<<
name|QPolygon
argument_list|(
name|QRect
argument_list|(
literal|10
argument_list|,
literal|20
argument_list|,
literal|30
argument_list|,
literal|40
argument_list|)
argument_list|)
expr_stmt|;
comment|// scaling
name|QTest
operator|::
name|newRow
argument_list|(
literal|"scale 0"
argument_list|)
operator|<<
name|QMatrix
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|10
argument_list|,
literal|20
argument_list|,
literal|30
argument_list|,
literal|40
argument_list|)
operator|<<
name|QPolygon
argument_list|(
name|QRect
argument_list|(
literal|20
argument_list|,
literal|40
argument_list|,
literal|60
argument_list|,
literal|80
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"scale 1"
argument_list|)
operator|<<
name|QMatrix
argument_list|(
literal|10
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|10
argument_list|,
literal|20
argument_list|,
literal|30
argument_list|,
literal|40
argument_list|)
operator|<<
name|QPolygon
argument_list|(
name|QRect
argument_list|(
literal|100
argument_list|,
literal|200
argument_list|,
literal|300
argument_list|,
literal|400
argument_list|)
argument_list|)
expr_stmt|;
comment|// mirroring
name|QTest
operator|::
name|newRow
argument_list|(
literal|"mirror 0"
argument_list|)
operator|<<
name|QMatrix
argument_list|(
operator|-
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|10
argument_list|,
literal|20
argument_list|,
literal|30
argument_list|,
literal|40
argument_list|)
operator|<<
name|QPolygon
argument_list|(
name|QRect
argument_list|(
operator|-
literal|40
argument_list|,
literal|20
argument_list|,
literal|30
argument_list|,
literal|40
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"mirror 1"
argument_list|)
operator|<<
name|QMatrix
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|10
argument_list|,
literal|20
argument_list|,
literal|30
argument_list|,
literal|40
argument_list|)
operator|<<
name|QPolygon
argument_list|(
name|QRect
argument_list|(
literal|10
argument_list|,
operator|-
literal|60
argument_list|,
literal|30
argument_list|,
literal|40
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"mirror 2"
argument_list|)
operator|<<
name|QMatrix
argument_list|(
operator|-
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|10
argument_list|,
literal|20
argument_list|,
literal|30
argument_list|,
literal|40
argument_list|)
operator|<<
name|QPolygon
argument_list|(
name|QRect
argument_list|(
operator|-
literal|40
argument_list|,
operator|-
literal|60
argument_list|,
literal|30
argument_list|,
literal|40
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"mirror 3"
argument_list|)
operator|<<
name|QMatrix
argument_list|(
operator|-
literal|2
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|2
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|10
argument_list|,
literal|20
argument_list|,
literal|30
argument_list|,
literal|40
argument_list|)
operator|<<
name|QPolygon
argument_list|(
name|QRect
argument_list|(
operator|-
literal|80
argument_list|,
operator|-
literal|120
argument_list|,
literal|60
argument_list|,
literal|80
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"mirror 4"
argument_list|)
operator|<<
name|QMatrix
argument_list|(
operator|-
literal|10
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|10
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|10
argument_list|,
literal|20
argument_list|,
literal|30
argument_list|,
literal|40
argument_list|)
operator|<<
name|QPolygon
argument_list|(
name|QRect
argument_list|(
operator|-
literal|400
argument_list|,
operator|-
literal|600
argument_list|,
literal|300
argument_list|,
literal|400
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"mirror 5"
argument_list|)
operator|<<
name|QMatrix
argument_list|(
operator|-
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|30
argument_list|,
literal|40
argument_list|)
operator|<<
name|QPolygon
argument_list|(
name|QRect
argument_list|(
operator|-
literal|30
argument_list|,
literal|0
argument_list|,
literal|30
argument_list|,
literal|40
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"mirror 6"
argument_list|)
operator|<<
name|QMatrix
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|30
argument_list|,
literal|40
argument_list|)
operator|<<
name|QPolygon
argument_list|(
name|QRect
argument_list|(
literal|0
argument_list|,
operator|-
literal|40
argument_list|,
literal|30
argument_list|,
literal|40
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"mirror 7"
argument_list|)
operator|<<
name|QMatrix
argument_list|(
operator|-
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|30
argument_list|,
literal|40
argument_list|)
operator|<<
name|QPolygon
argument_list|(
name|QRect
argument_list|(
operator|-
literal|30
argument_list|,
operator|-
literal|40
argument_list|,
literal|30
argument_list|,
literal|40
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"mirror 8"
argument_list|)
operator|<<
name|QMatrix
argument_list|(
operator|-
literal|2
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|2
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|30
argument_list|,
literal|40
argument_list|)
operator|<<
name|QPolygon
argument_list|(
name|QRect
argument_list|(
operator|-
literal|60
argument_list|,
operator|-
literal|80
argument_list|,
literal|60
argument_list|,
literal|80
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"mirror 9"
argument_list|)
operator|<<
name|QMatrix
argument_list|(
operator|-
literal|10
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|10
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|30
argument_list|,
literal|40
argument_list|)
operator|<<
name|QPolygon
argument_list|(
name|QRect
argument_list|(
operator|-
literal|300
argument_list|,
operator|-
literal|400
argument_list|,
literal|300
argument_list|,
literal|400
argument_list|)
argument_list|)
expr_stmt|;
if|#
directive|if
operator|(
name|defined
argument_list|(
name|Q_OS_WIN
argument_list|)
operator|||
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
operator|)
operator|&&
operator|!
name|defined
argument_list|(
name|M_PI
argument_list|)
DECL|macro|M_PI
define|#
directive|define
name|M_PI
value|3.14159265897932384626433832795f
endif|#
directive|endif
comment|// rotations
name|float
name|deg
init|=
literal|0.
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rot 0 a"
argument_list|)
operator|<<
name|QMatrix
argument_list|(
name|std
operator|::
name|cos
argument_list|(
name|M_PI
operator|*
name|deg
operator|/
literal|180.
argument_list|)
argument_list|,
operator|-
name|std
operator|::
name|sin
argument_list|(
name|M_PI
operator|*
name|deg
operator|/
literal|180.
argument_list|)
argument_list|,
name|std
operator|::
name|sin
argument_list|(
name|M_PI
operator|*
name|deg
operator|/
literal|180.
argument_list|)
argument_list|,
name|std
operator|::
name|cos
argument_list|(
name|M_PI
operator|*
name|deg
operator|/
literal|180.
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|30
argument_list|,
literal|40
argument_list|)
operator|<<
name|QPolygon
argument_list|(
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|30
argument_list|,
literal|40
argument_list|)
argument_list|)
expr_stmt|;
name|deg
operator|=
literal|0.00001f
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rot 0 b"
argument_list|)
operator|<<
name|QMatrix
argument_list|(
name|std
operator|::
name|cos
argument_list|(
name|M_PI
operator|*
name|deg
operator|/
literal|180.
argument_list|)
argument_list|,
operator|-
name|std
operator|::
name|sin
argument_list|(
name|M_PI
operator|*
name|deg
operator|/
literal|180.
argument_list|)
argument_list|,
name|std
operator|::
name|sin
argument_list|(
name|M_PI
operator|*
name|deg
operator|/
literal|180.
argument_list|)
argument_list|,
name|std
operator|::
name|cos
argument_list|(
name|M_PI
operator|*
name|deg
operator|/
literal|180.
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|30
argument_list|,
literal|40
argument_list|)
operator|<<
name|QPolygon
argument_list|(
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|30
argument_list|,
literal|40
argument_list|)
argument_list|)
expr_stmt|;
name|deg
operator|=
literal|0.
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rot 0 c"
argument_list|)
operator|<<
name|QMatrix
argument_list|(
name|std
operator|::
name|cos
argument_list|(
name|M_PI
operator|*
name|deg
operator|/
literal|180.
argument_list|)
argument_list|,
operator|-
name|std
operator|::
name|sin
argument_list|(
name|M_PI
operator|*
name|deg
operator|/
literal|180.
argument_list|)
argument_list|,
name|std
operator|::
name|sin
argument_list|(
name|M_PI
operator|*
name|deg
operator|/
literal|180.
argument_list|)
argument_list|,
name|std
operator|::
name|cos
argument_list|(
name|M_PI
operator|*
name|deg
operator|/
literal|180.
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|10
argument_list|,
literal|20
argument_list|,
literal|30
argument_list|,
literal|40
argument_list|)
operator|<<
name|QPolygon
argument_list|(
name|QRect
argument_list|(
literal|10
argument_list|,
literal|20
argument_list|,
literal|30
argument_list|,
literal|40
argument_list|)
argument_list|)
expr_stmt|;
name|deg
operator|=
literal|0.00001f
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rot 0 d"
argument_list|)
operator|<<
name|QMatrix
argument_list|(
name|std
operator|::
name|cos
argument_list|(
name|M_PI
operator|*
name|deg
operator|/
literal|180.
argument_list|)
argument_list|,
operator|-
name|std
operator|::
name|sin
argument_list|(
name|M_PI
operator|*
name|deg
operator|/
literal|180.
argument_list|)
argument_list|,
name|std
operator|::
name|sin
argument_list|(
name|M_PI
operator|*
name|deg
operator|/
literal|180.
argument_list|)
argument_list|,
name|std
operator|::
name|cos
argument_list|(
name|M_PI
operator|*
name|deg
operator|/
literal|180.
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|10
argument_list|,
literal|20
argument_list|,
literal|30
argument_list|,
literal|40
argument_list|)
operator|<<
name|QPolygon
argument_list|(
name|QRect
argument_list|(
literal|10
argument_list|,
literal|20
argument_list|,
literal|30
argument_list|,
literal|40
argument_list|)
argument_list|)
expr_stmt|;
if|#
directive|if
literal|0
comment|// rotations
block|deg = 90.;     QTest::newRow( "rotscale 90 a" )<< QMatrix( 10*std::cos( M_PI*deg/180. ), -10*std::sin( M_PI*deg/180. ),                                                   10*std::sin( M_PI*deg/180. ),  10*std::cos( M_PI*deg/180. ), 0, 0 )<< QRect( 0, 0, 30, 40 )<< QPolygon( QRect( 0, -299, 400, 300 ) );     deg = 90.00001;     QTest::newRow( "rotscale 90 b" )<< QMatrix( 10*std::cos( M_PI*deg/180. ), -10*std::sin( M_PI*deg/180. ),                                                   10*std::sin( M_PI*deg/180. ),  10*std::cos( M_PI*deg/180. ), 0, 0 )<< QRect( 0, 0, 30, 40 )<< QPolygon( QRect( 0, -299, 400, 300 ) );     deg = 90.;     QTest::newRow( "rotscale 90 c" )<< QMatrix( 10*std::cos( M_PI*deg/180. ), -10*std::sin( M_PI*deg/180. ),                                                   10*std::sin( M_PI*deg/180. ),  10*std::cos( M_PI*deg/180. ), 0, 0 )<< QRect( 10, 20, 30, 40 )<< QPolygon( QRect( 200, -399, 400, 300 ) );     deg = 90.00001;     QTest::newRow( "rotscale 90 d" )<< QMatrix( 10*std::cos( M_PI*deg/180. ), -10*std::sin( M_PI*deg/180. ),                                                   10*std::sin( M_PI*deg/180. ),  10*std::cos( M_PI*deg/180. ), 0, 0 )<< QRect( 10, 20, 30, 40 )<< QPolygon( QRect( 200, -399, 400, 300 ) );      deg = 180.;     QTest::newRow( "rotscale 180 a" )<< QMatrix( 10*std::cos( M_PI*deg/180. ), -10*std::sin( M_PI*deg/180. ),                                                    10*std::sin( M_PI*deg/180. ),  10*std::cos( M_PI*deg/180. ), 0, 0 )<< QRect( 0, 0, 30, 40 )<< QPolygon( QRect( -299, -399, 300, 400 ) );     deg = 180.000001;     QTest::newRow( "rotscale 180 b" )<< QMatrix( 10*std::cos( M_PI*deg/180. ), -10*std::sin( M_PI*deg/180. ),                                                    10*std::sin( M_PI*deg/180. ),  10*std::cos( M_PI*deg/180. ), 0, 0 )<< QRect( 0, 0, 30, 40 )<< QPolygon( QRect( -299, -399, 300, 400 ) );     deg = 180.;     QTest::newRow( "rotscale 180 c" )<< QMatrix( 10*std::cos( M_PI*deg/180. ), -10*std::sin( M_PI*deg/180. ),                                                    10*std::sin( M_PI*deg/180. ),  10*std::cos( M_PI*deg/180. ), 0, 0 )<< QRect( 10, 20, 30, 40 )<< QPolygon( QRect( -399, -599, 300, 400 ) );     deg = 180.000001;     QTest::newRow( "rotscale 180 d" )<< QMatrix( 10*std::cos( M_PI*deg/180. ), -10*std::sin( M_PI*deg/180. ),                                                    10*std::sin( M_PI*deg/180. ),  10*std::cos( M_PI*deg/180. ), 0, 0 )<< QRect( 10, 20, 30, 40 )<< QPolygon( QRect( -399, -599, 300, 400 ) );      deg = 270.;     QTest::newRow( "rotscale 270 a" )<< QMatrix( 10*std::cos( M_PI*deg/180. ), -10*std::sin( M_PI*deg/180. ),                                                    10*std::sin( M_PI*deg/180. ),  10*std::cos( M_PI*deg/180. ), 0, 0 )<< QRect( 0, 0, 30, 40 )<< QPolygon( QRect( -399, 00, 400, 300 ) );     deg = 270.0000001;     QTest::newRow( "rotscale 270 b" )<< QMatrix( 10*std::cos( M_PI*deg/180. ), -10*std::sin( M_PI*deg/180. ),                                                    10*std::sin( M_PI*deg/180. ),  10*std::cos( M_PI*deg/180. ), 0, 0 )<< QRect( 0, 0, 30, 40 )<< QPolygon( QRect( -399, 00, 400, 300 ) );     deg = 270.;     QTest::newRow( "rotscale 270 c" )<< QMatrix( 10*std::cos( M_PI*deg/180. ), -10*std::sin( M_PI*deg/180. ),                                                    10*std::sin( M_PI*deg/180. ),  10*std::cos( M_PI*deg/180. ), 0, 0 )<< QRect( 10, 20, 30, 40 )<< QPolygon( QRect( -599, 100, 400, 300 ) );     deg = 270.000001;     QTest::newRow( "rotscale 270 d" )<< QMatrix( 10*std::cos( M_PI*deg/180. ), -10*std::sin( M_PI*deg/180. ),                                                    10*std::sin( M_PI*deg/180. ),  10*std::cos( M_PI*deg/180. ), 0,   0 )<< QRect( 10, 20, 30, 40 )<< QPolygon( QRect( -599, 100, 400, 300 ) );
comment|// rotations that are not multiples of 90 degrees. mapRect returns the bounding rect here.
block|deg = 45;     QTest::newRow( "rot 45 a" )<< QMatrix( std::cos( M_PI*deg/180. ), -std::sin( M_PI*deg/180. ),                                              std::sin( M_PI*deg/180. ),  std::cos( M_PI*deg/180. ), 0, 0 )<< QRect( 0, 0, 10, 10 )<< QPolygon( QRect( 0, -7, 14, 14 ) );     QTest::newRow( "rot 45 b" )<< QMatrix( std::cos( M_PI*deg/180. ), -std::sin( M_PI*deg/180. ),                                              std::sin( M_PI*deg/180. ),  std::cos( M_PI*deg/180. ), 0, 0 )<< QRect( 10, 20, 30, 40 )<< QPolygon( QRect( 21, -14, 49, 49 ) );     QTest::newRow( "rot 45 c" )<< QMatrix( 10*std::cos( M_PI*deg/180. ), -10*std::sin( M_PI*deg/180. ),                                              10*std::sin( M_PI*deg/180. ),  10*std::cos( M_PI*deg/180. ), 0, 0 )<< QRect( 0, 0, 10, 10 )<< QPolygon( QRect( 0, -70, 141, 141 ) );     QTest::newRow( "rot 45 d" )<< QMatrix( 10*std::cos( M_PI*deg/180. ), -10*std::sin( M_PI*deg/180. ),                                              10*std::sin( M_PI*deg/180. ),  10*std::cos( M_PI*deg/180. ), 0, 0 )<< QRect( 10, 20, 30, 40 )<< QPolygon( QRect( 212, -141, 495, 495 ) );      deg = -45;     QTest::newRow( "rot -45 a" )<< QMatrix( std::cos( M_PI*deg/180. ), -std::sin( M_PI*deg/180. ),                                               std::sin( M_PI*deg/180. ),  std::cos( M_PI*deg/180. ), 0, 0 )<< QRect( 0, 0, 10, 10 )<< QPolygon( QRect( -7, 0, 14, 14 ) );     QTest::newRow( "rot -45 b" )<< QMatrix( std::cos( M_PI*deg/180. ), -std::sin( M_PI*deg/180. ),                                               std::sin( M_PI*deg/180. ),  std::cos( M_PI*deg/180. ), 0, 0 )<< QRect( 10, 20, 30, 40 )<< QPolygon( QRect( -35, 21, 49, 49 ) );     QTest::newRow( "rot -45 c" )<< QMatrix( 10*std::cos( M_PI*deg/180. ), -10*std::sin( M_PI*deg/180. ),                                               10*std::sin( M_PI*deg/180. ),  10*std::cos( M_PI*deg/180. ), 0, 0 )<< QRect( 0, 0, 10, 10 )<< QPolygon( QRect( -70, 0, 141, 141 ) );     QTest::newRow( "rot -45 d" )<< QMatrix( 10*std::cos( M_PI*deg/180. ), -10*std::sin( M_PI*deg/180. ),                                               10*std::sin( M_PI*deg/180. ),  10*std::cos( M_PI*deg/180. ), 0, 0 )<< QRect( 10, 20, 30, 40 )<< QPolygon( QRect( -353, 212, 495, 495 ) );
endif|#
directive|endif
block|}
end_function
begin_function
DECL|function|mapRect
name|void
name|tst_QWMatrix
operator|::
name|mapRect
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QMatrix
argument_list|,
name|matrix
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QRect
argument_list|,
name|src
argument_list|)
expr_stmt|;
comment|//     qDebug( "got src: %d/%d (%d/%d), matrix=[ %f %f %f %f %f %f ]",
comment|//         src.x(), src.y(), src.width(), src.height(),
comment|//         matrix.m11(), matrix.m12(), matrix.m21(), matrix.m22(), matrix.dx(), matrix.dy() );
name|QTEST
argument_list|(
name|QPolygon
argument_list|(
name|matrix
operator|.
name|mapRect
argument_list|(
name|src
argument_list|)
argument_list|)
argument_list|,
literal|"res"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|operator_star_qwmatrix
name|void
name|tst_QWMatrix
operator|::
name|operator_star_qwmatrix
parameter_list|()
block|{
name|QMatrix
name|m1
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|)
decl_stmt|;
name|QMatrix
name|m2
argument_list|(
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|,
literal|8
argument_list|)
decl_stmt|;
name|QMatrix
name|result1x2
argument_list|(
literal|21
argument_list|,
literal|26
argument_list|,
literal|37
argument_list|,
literal|46
argument_list|,
literal|60
argument_list|,
literal|74
argument_list|)
decl_stmt|;
name|QMatrix
name|result2x1
argument_list|(
literal|22
argument_list|,
literal|29
argument_list|,
literal|34
argument_list|,
literal|45
argument_list|,
literal|52
argument_list|,
literal|68
argument_list|)
decl_stmt|;
name|QMatrix
name|product12
init|=
name|m1
operator|*
name|m2
decl_stmt|;
name|QMatrix
name|product21
init|=
name|m2
operator|*
name|m1
decl_stmt|;
name|QVERIFY
argument_list|(
name|product12
operator|==
name|result1x2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|product21
operator|==
name|result2x1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|assignments
name|void
name|tst_QWMatrix
operator|::
name|assignments
parameter_list|()
block|{
name|QMatrix
name|m
decl_stmt|;
name|m
operator|.
name|scale
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|m
operator|.
name|rotate
argument_list|(
literal|45
argument_list|)
expr_stmt|;
name|m
operator|.
name|shear
argument_list|(
literal|4
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QMatrix
name|c1
argument_list|(
name|m
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|m
operator|.
name|m11
argument_list|()
argument_list|,
name|c1
operator|.
name|m11
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|m
operator|.
name|m12
argument_list|()
argument_list|,
name|c1
operator|.
name|m12
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|m
operator|.
name|m21
argument_list|()
argument_list|,
name|c1
operator|.
name|m21
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|m
operator|.
name|m22
argument_list|()
argument_list|,
name|c1
operator|.
name|m22
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|m
operator|.
name|dx
argument_list|()
argument_list|,
name|c1
operator|.
name|dx
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|m
operator|.
name|dy
argument_list|()
argument_list|,
name|c1
operator|.
name|dy
argument_list|()
argument_list|)
expr_stmt|;
name|QMatrix
name|c2
init|=
name|m
decl_stmt|;
name|QCOMPARE
argument_list|(
name|m
operator|.
name|m11
argument_list|()
argument_list|,
name|c2
operator|.
name|m11
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|m
operator|.
name|m12
argument_list|()
argument_list|,
name|c2
operator|.
name|m12
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|m
operator|.
name|m21
argument_list|()
argument_list|,
name|c2
operator|.
name|m21
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|m
operator|.
name|m22
argument_list|()
argument_list|,
name|c2
operator|.
name|m22
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|m
operator|.
name|dx
argument_list|()
argument_list|,
name|c2
operator|.
name|dx
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|m
operator|.
name|dy
argument_list|()
argument_list|,
name|c2
operator|.
name|dy
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|mapToPolygon
name|void
name|tst_QWMatrix
operator|::
name|mapToPolygon
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QMatrix
argument_list|,
name|matrix
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QRect
argument_list|,
name|src
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QPolygon
argument_list|,
name|res
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|matrix
operator|.
name|mapToPolygon
argument_list|(
name|src
argument_list|)
argument_list|,
name|res
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|translate
name|void
name|tst_QWMatrix
operator|::
name|translate
parameter_list|()
block|{
name|QMatrix
name|m
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|)
decl_stmt|;
name|QMatrix
name|res2
argument_list|(
name|m
argument_list|)
decl_stmt|;
name|QMatrix
name|res
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|75
argument_list|,
literal|106
argument_list|)
decl_stmt|;
name|m
operator|.
name|translate
argument_list|(
literal|10
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|m
operator|==
name|res
argument_list|)
expr_stmt|;
name|m
operator|.
name|translate
argument_list|(
operator|-
literal|10
argument_list|,
operator|-
literal|20
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|m
operator|==
name|res2
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|scale
name|void
name|tst_QWMatrix
operator|::
name|scale
parameter_list|()
block|{
name|QMatrix
name|m
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|)
decl_stmt|;
name|QMatrix
name|res2
argument_list|(
name|m
argument_list|)
decl_stmt|;
name|QMatrix
name|res
argument_list|(
literal|10
argument_list|,
literal|20
argument_list|,
literal|60
argument_list|,
literal|80
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|)
decl_stmt|;
name|m
operator|.
name|scale
argument_list|(
literal|10
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|m
operator|==
name|res
argument_list|)
expr_stmt|;
name|m
operator|.
name|scale
argument_list|(
literal|1.
operator|/
literal|10.
argument_list|,
literal|1.
operator|/
literal|20.
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|m
operator|==
name|res2
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|mapPolygon
name|void
name|tst_QWMatrix
operator|::
name|mapPolygon
parameter_list|()
block|{
name|QPolygon
name|poly
decl_stmt|;
name|poly
operator|<<
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|<<
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|1
argument_list|)
operator|<<
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|100
argument_list|)
operator|<<
name|QPoint
argument_list|(
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
operator|<<
name|QPoint
argument_list|(
operator|-
literal|1000
argument_list|,
literal|1000
argument_list|)
expr_stmt|;
block|{
name|QMatrix
name|m
decl_stmt|;
name|m
operator|.
name|rotate
argument_list|(
literal|90
argument_list|)
expr_stmt|;
comment|// rotating 90 degrees four times should result in original poly
name|QPolygon
name|mapped
init|=
name|m
operator|.
name|map
argument_list|(
name|m
operator|.
name|map
argument_list|(
name|m
operator|.
name|map
argument_list|(
name|m
operator|.
name|map
argument_list|(
name|poly
argument_list|)
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|mapped
argument_list|,
name|poly
argument_list|)
expr_stmt|;
name|QMatrix
name|m2
decl_stmt|;
name|m2
operator|.
name|scale
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QMatrix
name|m3
decl_stmt|;
name|m3
operator|.
name|scale
argument_list|(
literal|0.1
argument_list|,
literal|0.1
argument_list|)
expr_stmt|;
name|mapped
operator|=
name|m3
operator|.
name|map
argument_list|(
name|m2
operator|.
name|map
argument_list|(
name|poly
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|mapped
argument_list|,
name|poly
argument_list|)
expr_stmt|;
block|}
block|{
name|QMatrix
name|m
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|)
decl_stmt|;
name|QPolygon
name|mapped
init|=
name|m
operator|.
name|map
argument_list|(
name|poly
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|mapped
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
name|QCOMPARE
argument_list|(
name|mapped
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|,
name|m
operator|.
name|map
argument_list|(
name|poly
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_macro
name|QTEST_APPLESS_MAIN
argument_list|(
argument|tst_QWMatrix
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qwmatrix.moc"
end_include
end_unit
