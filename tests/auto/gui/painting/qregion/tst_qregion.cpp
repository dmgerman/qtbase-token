begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<qregion.h>
end_include
begin_include
include|#
directive|include
file|<qbitmap.h>
end_include
begin_include
include|#
directive|include
file|<qpainter.h>
end_include
begin_include
include|#
directive|include
file|<qpolygon.h>
end_include
begin_ifdef
ifdef|#
directive|ifdef
name|Q_WS_X11
end_ifdef
begin_include
include|#
directive|include
file|<private/qt_x11_p.h>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_class
DECL|class|tst_QRegion
class|class
name|tst_QRegion
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
name|tst_QRegion
parameter_list|()
constructor_decl|;
private|private
name|slots
private|:
name|void
name|boundingRect
parameter_list|()
function_decl|;
name|void
name|rects
parameter_list|()
function_decl|;
name|void
name|swap
parameter_list|()
function_decl|;
name|void
name|setRects
parameter_list|()
function_decl|;
name|void
name|ellipseRegion
parameter_list|()
function_decl|;
name|void
name|polygonRegion
parameter_list|()
function_decl|;
name|void
name|bitmapRegion
parameter_list|()
function_decl|;
name|void
name|intersected_data
parameter_list|()
function_decl|;
name|void
name|intersected
parameter_list|()
function_decl|;
name|void
name|emptyPolygonRegion_data
parameter_list|()
function_decl|;
name|void
name|emptyPolygonRegion
parameter_list|()
function_decl|;
name|void
name|intersects_region_data
parameter_list|()
function_decl|;
name|void
name|intersects_region
parameter_list|()
function_decl|;
name|void
name|intersects_rect_data
parameter_list|()
function_decl|;
name|void
name|intersects_rect
parameter_list|()
function_decl|;
name|void
name|contains_point
parameter_list|()
function_decl|;
name|void
name|operator_plus_data
parameter_list|()
function_decl|;
name|void
name|operator_plus
parameter_list|()
function_decl|;
name|void
name|operator_minus_data
parameter_list|()
function_decl|;
name|void
name|operator_minus
parameter_list|()
function_decl|;
name|void
name|operator_intersect_data
parameter_list|()
function_decl|;
name|void
name|operator_intersect
parameter_list|()
function_decl|;
name|void
name|operator_xor_data
parameter_list|()
function_decl|;
name|void
name|operator_xor
parameter_list|()
function_decl|;
name|void
name|rectCount_data
parameter_list|()
function_decl|;
name|void
name|rectCount
parameter_list|()
function_decl|;
name|void
name|isEmpty_data
parameter_list|()
function_decl|;
name|void
name|isEmpty
parameter_list|()
function_decl|;
if|#
directive|if
name|defined
argument_list|(
name|Q_WS_X11
argument_list|)
operator|&&
name|defined
argument_list|(
name|QT_BUILD_INTERNAL
argument_list|)
name|void
name|clipRectangles
parameter_list|()
function_decl|;
endif|#
directive|endif
name|void
name|regionFromPath
parameter_list|()
function_decl|;
ifdef|#
directive|ifdef
name|QT_BUILD_INTERNAL
name|void
name|regionToPath_data
parameter_list|()
function_decl|;
name|void
name|regionToPath
parameter_list|()
function_decl|;
endif|#
directive|endif
block|}
class|;
end_class
begin_constructor
DECL|function|tst_QRegion
name|tst_QRegion
operator|::
name|tst_QRegion
parameter_list|()
block|{ }
end_constructor
begin_function
DECL|function|boundingRect
name|void
name|tst_QRegion
operator|::
name|boundingRect
parameter_list|()
block|{
block|{
name|QRect
name|rect
decl_stmt|;
name|QRegion
name|region
argument_list|(
name|rect
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|region
operator|.
name|boundingRect
argument_list|()
argument_list|,
name|rect
argument_list|)
expr_stmt|;
block|}
block|{
name|QRect
name|rect
argument_list|(
literal|10
argument_list|,
operator|-
literal|20
argument_list|,
literal|30
argument_list|,
literal|40
argument_list|)
decl_stmt|;
name|QRegion
name|region
argument_list|(
name|rect
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|region
operator|.
name|boundingRect
argument_list|()
argument_list|,
name|rect
argument_list|)
expr_stmt|;
block|}
block|{
name|QRect
name|rect
argument_list|(
literal|15
argument_list|,
literal|25
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|QRegion
name|region
argument_list|(
name|rect
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|region
operator|.
name|boundingRect
argument_list|()
argument_list|,
name|rect
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|rects
name|void
name|tst_QRegion
operator|::
name|rects
parameter_list|()
block|{
block|{
name|QRect
name|rect
decl_stmt|;
name|QRegion
name|region
argument_list|(
name|rect
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|region
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|region
operator|.
name|rects
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|QRect
name|rect
argument_list|(
literal|10
argument_list|,
operator|-
literal|20
argument_list|,
literal|30
argument_list|,
literal|40
argument_list|)
decl_stmt|;
name|QRegion
name|region
argument_list|(
name|rect
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|region
operator|.
name|rects
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|region
operator|.
name|rects
argument_list|()
index|[
literal|0
index|]
argument_list|,
name|rect
argument_list|)
expr_stmt|;
block|}
block|{
name|QRect
name|r
argument_list|(
name|QPoint
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|40
argument_list|,
literal|40
argument_list|)
argument_list|)
decl_stmt|;
name|QRegion
name|region
argument_list|(
name|r
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|region
operator|.
name|contains
argument_list|(
name|QPoint
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|region
operator|.
name|contains
argument_list|(
name|QPoint
argument_list|(
literal|20
argument_list|,
literal|40
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|region
operator|.
name|contains
argument_list|(
name|QPoint
argument_list|(
literal|40
argument_list|,
literal|20
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|region
operator|.
name|contains
argument_list|(
name|QPoint
argument_list|(
literal|20
argument_list|,
literal|41
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|region
operator|.
name|contains
argument_list|(
name|QPoint
argument_list|(
literal|41
argument_list|,
literal|20
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QRect
name|r
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|30
argument_list|,
literal|30
argument_list|)
decl_stmt|;
name|QRegion
name|region
argument_list|(
name|r
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|region
operator|.
name|contains
argument_list|(
name|QPoint
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|region
operator|.
name|contains
argument_list|(
name|QPoint
argument_list|(
literal|20
argument_list|,
literal|39
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|region
operator|.
name|contains
argument_list|(
name|QPoint
argument_list|(
literal|39
argument_list|,
literal|20
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|region
operator|.
name|contains
argument_list|(
name|QPoint
argument_list|(
literal|20
argument_list|,
literal|40
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|region
operator|.
name|contains
argument_list|(
name|QPoint
argument_list|(
literal|40
argument_list|,
literal|20
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|swap
name|void
name|tst_QRegion
operator|::
name|swap
parameter_list|()
block|{
name|QRegion
name|r1
argument_list|(
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
decl_stmt|;
name|QRegion
name|r2
argument_list|(
name|QRect
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
decl_stmt|;
name|r1
operator|.
name|swap
argument_list|(
name|r2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|.
name|rects
argument_list|()
operator|.
name|front
argument_list|()
argument_list|,
name|QRect
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r2
operator|.
name|rects
argument_list|()
operator|.
name|front
argument_list|()
argument_list|,
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setRects
name|void
name|tst_QRegion
operator|::
name|setRects
parameter_list|()
block|{
block|{
name|QRegion
name|region
decl_stmt|;
name|region
operator|.
name|setRects
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|region
operator|.
name|rects
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|QRegion
name|region
decl_stmt|;
name|QRect
name|rect
decl_stmt|;
name|region
operator|.
name|setRects
argument_list|(
operator|&
name|rect
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|region
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|region
operator|==
name|QRegion
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|region
operator|.
name|boundingRect
argument_list|()
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|region
operator|.
name|rects
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|QRegion
name|region
decl_stmt|;
name|QRect
name|rect
decl_stmt|;
name|region
operator|.
name|setRects
argument_list|(
operator|&
name|rect
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|region
operator|.
name|boundingRect
argument_list|()
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|region
operator|.
name|rects
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|QRegion
name|region
decl_stmt|;
name|QRect
name|rect
argument_list|(
literal|10
argument_list|,
operator|-
literal|20
argument_list|,
literal|30
argument_list|,
literal|40
argument_list|)
decl_stmt|;
name|region
operator|.
name|setRects
argument_list|(
operator|&
name|rect
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|region
operator|.
name|rects
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|region
operator|.
name|rects
argument_list|()
index|[
literal|0
index|]
argument_list|,
name|rect
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|ellipseRegion
name|void
name|tst_QRegion
operator|::
name|ellipseRegion
parameter_list|()
block|{
name|QRegion
name|region
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
name|QRegion
operator|::
name|Ellipse
argument_list|)
decl_stmt|;
comment|// These should not be inside the circe
name|QVERIFY
argument_list|(
operator|!
name|region
operator|.
name|contains
argument_list|(
name|QPoint
argument_list|(
literal|13
argument_list|,
literal|13
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|region
operator|.
name|contains
argument_list|(
name|QPoint
argument_list|(
literal|13
argument_list|,
literal|86
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|region
operator|.
name|contains
argument_list|(
name|QPoint
argument_list|(
literal|86
argument_list|,
literal|13
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|region
operator|.
name|contains
argument_list|(
name|QPoint
argument_list|(
literal|86
argument_list|,
literal|86
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// These should be inside
name|QVERIFY
argument_list|(
name|region
operator|.
name|contains
argument_list|(
name|QPoint
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|region
operator|.
name|contains
argument_list|(
name|QPoint
argument_list|(
literal|16
argument_list|,
literal|83
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|region
operator|.
name|contains
argument_list|(
name|QPoint
argument_list|(
literal|83
argument_list|,
literal|16
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|region
operator|.
name|contains
argument_list|(
name|QPoint
argument_list|(
literal|83
argument_list|,
literal|83
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|//     ..a..
comment|//   ..     ..
comment|//  .         .
comment|// .           .
comment|// b           c
comment|// .           .
comment|//  .         .
comment|//   ..     ..
comment|//     ..d..
name|QVERIFY
argument_list|(
name|region
operator|.
name|contains
argument_list|(
name|QPoint
argument_list|(
literal|50
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// Mid-top    (a)
name|QVERIFY
argument_list|(
name|region
operator|.
name|contains
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|50
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// Mid-left   (b)
name|QVERIFY
argument_list|(
name|region
operator|.
name|contains
argument_list|(
name|QPoint
argument_list|(
literal|99
argument_list|,
literal|50
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// Mid-right  (c)
name|QVERIFY
argument_list|(
name|region
operator|.
name|contains
argument_list|(
name|QPoint
argument_list|(
literal|50
argument_list|,
literal|99
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// Mid-bottom (d)
name|QRect
name|bounds
init|=
name|region
operator|.
name|boundingRect
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|bounds
operator|.
name|x
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|bounds
operator|.
name|y
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|bounds
operator|.
name|width
argument_list|()
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|bounds
operator|.
name|height
argument_list|()
argument_list|,
literal|100
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|polygonRegion
name|void
name|tst_QRegion
operator|::
name|polygonRegion
parameter_list|()
block|{
name|QPolygon
name|pa
decl_stmt|;
block|{
name|QRegion
name|region
argument_list|(
name|pa
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|region
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|pa
operator|.
name|setPoints
argument_list|(
literal|8
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
comment|//  a____________b
literal|40
argument_list|,
literal|10
argument_list|,
comment|//  |            |
literal|40
argument_list|,
literal|20
argument_list|,
comment|//  |___      ___|
literal|30
argument_list|,
literal|20
argument_list|,
comment|//      |    |
literal|30
argument_list|,
literal|40
argument_list|,
comment|//      |    |
literal|20
argument_list|,
literal|40
argument_list|,
comment|//      |    |
literal|20
argument_list|,
literal|20
argument_list|,
comment|//      |____c
literal|10
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|QRegion
name|region
argument_list|(
name|pa
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|region
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
comment|// These should not be inside the circle
name|QVERIFY
argument_list|(
operator|!
name|region
operator|.
name|contains
argument_list|(
name|QPoint
argument_list|(
literal|9
argument_list|,
literal|9
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|region
operator|.
name|contains
argument_list|(
name|QPoint
argument_list|(
literal|30
argument_list|,
literal|41
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|region
operator|.
name|contains
argument_list|(
name|QPoint
argument_list|(
literal|41
argument_list|,
literal|10
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|region
operator|.
name|contains
argument_list|(
name|QPoint
argument_list|(
literal|31
argument_list|,
literal|21
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// These should be inside
name|QVERIFY
argument_list|(
name|region
operator|.
name|contains
argument_list|(
name|QPoint
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// Upper-left  (a)
block|}
block|}
end_function
begin_function
DECL|function|emptyPolygonRegion_data
name|void
name|tst_QRegion
operator|::
name|emptyPolygonRegion_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QPolygon
argument_list|>
argument_list|(
literal|"pa"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"isEmpty"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"numRects"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QVector
argument_list|<
name|QRect
argument_list|>
argument_list|>
argument_list|(
literal|"rects"
argument_list|)
expr_stmt|;
name|QPolygon
name|pa
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"no points"
argument_list|)
operator|<<
name|pa
operator|<<
literal|true
operator|<<
literal|0
operator|<<
name|QVector
argument_list|<
name|QRect
argument_list|>
argument_list|()
expr_stmt|;
name|pa
operator|=
name|QPolygon
argument_list|()
operator|<<
name|QPoint
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"one point"
argument_list|)
operator|<<
name|pa
operator|<<
literal|true
operator|<<
literal|0
operator|<<
name|QVector
argument_list|<
name|QRect
argument_list|>
argument_list|()
expr_stmt|;
name|pa
operator|=
name|QPolygon
argument_list|()
operator|<<
name|QPoint
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
name|QPoint
argument_list|(
literal|10
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"two points, horizontal"
argument_list|)
operator|<<
name|pa
operator|<<
literal|true
operator|<<
literal|0
operator|<<
name|QVector
argument_list|<
name|QRect
argument_list|>
argument_list|()
expr_stmt|;
name|pa
operator|=
name|QPolygon
argument_list|()
operator|<<
name|QPoint
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
name|QPoint
argument_list|(
literal|20
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"two points, vertical"
argument_list|)
operator|<<
name|pa
operator|<<
literal|true
operator|<<
literal|0
operator|<<
name|QVector
argument_list|<
name|QRect
argument_list|>
argument_list|()
expr_stmt|;
name|pa
operator|=
name|QPolygon
argument_list|()
operator|<<
name|QPoint
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
name|QPoint
argument_list|(
literal|20
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"two points, diagonal"
argument_list|)
operator|<<
name|pa
operator|<<
literal|true
operator|<<
literal|0
operator|<<
name|QVector
argument_list|<
name|QRect
argument_list|>
argument_list|()
expr_stmt|;
name|pa
operator|=
name|QPolygon
argument_list|()
operator|<<
name|QPoint
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
name|QPoint
argument_list|(
literal|15
argument_list|,
literal|15
argument_list|)
operator|<<
name|QPoint
argument_list|(
literal|10
argument_list|,
literal|15
argument_list|)
operator|<<
name|QPoint
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QVector
argument_list|<
name|QRect
argument_list|>
name|v
decl_stmt|;
name|v
operator|<<
name|QRect
argument_list|(
literal|10
argument_list|,
literal|11
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|10
argument_list|,
literal|12
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|10
argument_list|,
literal|13
argument_list|,
literal|3
argument_list|,
literal|1
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|10
argument_list|,
literal|14
argument_list|,
literal|4
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"triangle"
argument_list|)
operator|<<
name|pa
operator|<<
literal|false
operator|<<
literal|4
operator|<<
name|v
expr_stmt|;
name|v
operator|.
name|clear
argument_list|()
expr_stmt|;
name|v
operator|<<
name|QRect
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rectangle"
argument_list|)
operator|<<
name|QPolygon
argument_list|(
name|QRect
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
operator|<<
literal|false
operator|<<
literal|1
operator|<<
name|v
expr_stmt|;
block|}
end_function
begin_function
DECL|function|emptyPolygonRegion
name|void
name|tst_QRegion
operator|::
name|emptyPolygonRegion
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QPolygon
argument_list|,
name|pa
argument_list|)
expr_stmt|;
name|QRegion
name|r
argument_list|(
name|pa
argument_list|)
decl_stmt|;
name|QTEST
argument_list|(
name|r
operator|.
name|isEmpty
argument_list|()
argument_list|,
literal|"isEmpty"
argument_list|)
expr_stmt|;
name|QTEST
argument_list|(
name|r
operator|.
name|rects
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|"numRects"
argument_list|)
expr_stmt|;
name|QTEST
argument_list|(
name|r
operator|.
name|rects
argument_list|()
argument_list|,
literal|"rects"
argument_list|)
expr_stmt|;
block|}
end_function
begin_decl_stmt
DECL|variable|circle_xpm
specifier|static
specifier|const
name|char
modifier|*
name|circle_xpm
index|[]
init|=
block|{
literal|"20 20 2 1"
block|,
literal|"	c #FFFFFF"
block|,
literal|".	c #000000"
block|,
literal|"       ......       "
block|,
literal|"     ..........     "
block|,
literal|"   ..............   "
block|,
literal|"  ................  "
block|,
literal|"  ................  "
block|,
literal|" .................. "
block|,
literal|" .................. "
block|,
literal|"...................."
block|,
literal|"...................."
block|,
literal|"...................."
block|,
literal|"...................."
block|,
literal|"...................."
block|,
literal|"...................."
block|,
literal|" .................. "
block|,
literal|" .................. "
block|,
literal|"  ................  "
block|,
literal|"  ................  "
block|,
literal|"   ..............   "
block|,
literal|"     ..........     "
block|,
literal|"       ......       "
block|}
decl_stmt|;
end_decl_stmt
begin_function
DECL|function|bitmapRegion
name|void
name|tst_QRegion
operator|::
name|bitmapRegion
parameter_list|()
block|{
name|QBitmap
name|circle
decl_stmt|;
block|{
name|QRegion
name|region
argument_list|(
name|circle
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|region
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|circle
operator|=
name|QPixmap
argument_list|(
name|circle_xpm
argument_list|)
expr_stmt|;
name|QRegion
name|region
argument_list|(
name|circle
argument_list|)
decl_stmt|;
comment|//// These should not be inside the circe
name|QVERIFY
argument_list|(
operator|!
name|region
operator|.
name|contains
argument_list|(
name|QPoint
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|region
operator|.
name|contains
argument_list|(
name|QPoint
argument_list|(
literal|2
argument_list|,
literal|17
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|region
operator|.
name|contains
argument_list|(
name|QPoint
argument_list|(
literal|17
argument_list|,
literal|2
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|region
operator|.
name|contains
argument_list|(
name|QPoint
argument_list|(
literal|17
argument_list|,
literal|17
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|//// These should be inside
name|QVERIFY
argument_list|(
name|region
operator|.
name|contains
argument_list|(
name|QPoint
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|region
operator|.
name|contains
argument_list|(
name|QPoint
argument_list|(
literal|3
argument_list|,
literal|16
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|region
operator|.
name|contains
argument_list|(
name|QPoint
argument_list|(
literal|16
argument_list|,
literal|3
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|region
operator|.
name|contains
argument_list|(
name|QPoint
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|region
operator|.
name|contains
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// Mid-left
name|QVERIFY
argument_list|(
name|region
operator|.
name|contains
argument_list|(
name|QPoint
argument_list|(
literal|10
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// Mid-top
name|QVERIFY
argument_list|(
name|region
operator|.
name|contains
argument_list|(
name|QPoint
argument_list|(
literal|19
argument_list|,
literal|10
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// Mid-right
name|QVERIFY
argument_list|(
name|region
operator|.
name|contains
argument_list|(
name|QPoint
argument_list|(
literal|10
argument_list|,
literal|19
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// Mid-bottom
block|}
block|}
end_function
begin_function
DECL|function|intersected_data
name|void
name|tst_QRegion
operator|::
name|intersected_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QRegion
argument_list|>
argument_list|(
literal|"r1"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QRegion
argument_list|>
argument_list|(
literal|"r2"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"intersects"
argument_list|)
expr_stmt|;
comment|// QTest::addColumn<QRegion>("intersected");
name|QPolygon
name|ps1
argument_list|(
literal|8
argument_list|)
decl_stmt|;
name|QPolygon
name|ps2
argument_list|(
literal|8
argument_list|)
decl_stmt|;
name|ps1
operator|.
name|putPoints
argument_list|(
literal|0
argument_list|,
literal|8
argument_list|,
literal|20
argument_list|,
literal|20
argument_list|,
literal|50
argument_list|,
literal|20
argument_list|,
literal|50
argument_list|,
literal|100
argument_list|,
literal|70
argument_list|,
literal|100
argument_list|,
literal|70
argument_list|,
literal|20
argument_list|,
literal|120
argument_list|,
literal|20
argument_list|,
literal|120
argument_list|,
literal|200
argument_list|,
literal|20
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|ps2
operator|.
name|putPoints
argument_list|(
literal|0
argument_list|,
literal|8
argument_list|,
literal|100
argument_list|,
literal|150
argument_list|,
literal|140
argument_list|,
literal|150
argument_list|,
literal|140
argument_list|,
literal|160
argument_list|,
literal|160
argument_list|,
literal|160
argument_list|,
literal|160
argument_list|,
literal|150
argument_list|,
literal|200
argument_list|,
literal|150
argument_list|,
literal|200
argument_list|,
literal|180
argument_list|,
literal|100
argument_list|,
literal|180
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"task30716"
argument_list|)
operator|<<
name|QRegion
argument_list|(
name|ps1
argument_list|)
operator|<<
name|QRegion
argument_list|(
name|ps2
argument_list|)
operator|<<
literal|true
expr_stmt|;
block|}
end_function
begin_function
DECL|function|intersected
name|void
name|tst_QRegion
operator|::
name|intersected
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QRegion
argument_list|,
name|r1
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QRegion
argument_list|,
name|r2
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|intersects
argument_list|)
expr_stmt|;
name|QRegion
name|interReg
init|=
name|r1
operator|.
name|intersected
argument_list|(
name|r2
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|interReg
operator|.
name|isEmpty
argument_list|()
operator|!=
name|intersects
argument_list|)
expr_stmt|;
comment|// Need a way to test the intersected QRegion is right
block|}
end_function
begin_function
DECL|function|intersects_region_data
name|void
name|tst_QRegion
operator|::
name|intersects_region_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QRegion
argument_list|>
argument_list|(
literal|"r1"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QRegion
argument_list|>
argument_list|(
literal|"r2"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"intersects"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rect overlap rect"
argument_list|)
operator|<<
name|QRegion
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|)
operator|<<
name|QRegion
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rect not overlap rect"
argument_list|)
operator|<<
name|QRegion
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|)
operator|<<
name|QRegion
argument_list|(
literal|400
argument_list|,
literal|400
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ellipse overlap ellipse"
argument_list|)
operator|<<
name|QRegion
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|,
name|QRegion
operator|::
name|Ellipse
argument_list|)
operator|<<
name|QRegion
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|,
name|QRegion
operator|::
name|Ellipse
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ellipse not overlap ellipse"
argument_list|)
operator|<<
name|QRegion
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|,
name|QRegion
operator|::
name|Ellipse
argument_list|)
operator|<<
name|QRegion
argument_list|(
literal|400
argument_list|,
literal|400
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|,
name|QRegion
operator|::
name|Ellipse
argument_list|)
operator|<<
literal|false
expr_stmt|;
block|}
end_function
begin_function
DECL|function|intersects_region
name|void
name|tst_QRegion
operator|::
name|intersects_region
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QRegion
argument_list|,
name|r1
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QRegion
argument_list|,
name|r2
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|intersects
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|.
name|intersects
argument_list|(
name|r2
argument_list|)
argument_list|,
name|intersects
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|intersects_rect_data
name|void
name|tst_QRegion
operator|::
name|intersects_rect_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QRegion
argument_list|>
argument_list|(
literal|"region"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QRect
argument_list|>
argument_list|(
literal|"rect"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"intersects"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rect overlap rect"
argument_list|)
operator|<<
name|QRegion
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rect not overlap rect"
argument_list|)
operator|<<
name|QRegion
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|400
argument_list|,
literal|400
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ellipse overlap rect"
argument_list|)
operator|<<
name|QRegion
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|,
name|QRegion
operator|::
name|Ellipse
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ellipse not overlap rect"
argument_list|)
operator|<<
name|QRegion
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|,
name|QRegion
operator|::
name|Ellipse
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|400
argument_list|,
literal|400
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|)
operator|<<
literal|false
expr_stmt|;
block|}
end_function
begin_function
DECL|function|intersects_rect
name|void
name|tst_QRegion
operator|::
name|intersects_rect
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QRegion
argument_list|,
name|region
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QRect
argument_list|,
name|rect
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|intersects
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|region
operator|.
name|intersects
argument_list|(
name|rect
argument_list|)
argument_list|,
name|intersects
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|contains_point
name|void
name|tst_QRegion
operator|::
name|contains_point
parameter_list|()
block|{
name|QCOMPARE
argument_list|(
name|QRegion
argument_list|()
operator|.
name|contains
argument_list|(
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QRegion
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
operator|.
name|contains
argument_list|(
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|operator_plus_data
name|void
name|tst_QRegion
operator|::
name|operator_plus_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QRegion
argument_list|>
argument_list|(
literal|"r1"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QRegion
argument_list|>
argument_list|(
literal|"r2"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QRegion
argument_list|>
argument_list|(
literal|"expected"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"empty 0"
argument_list|)
operator|<<
name|QRegion
argument_list|()
operator|<<
name|QRegion
argument_list|()
operator|<<
name|QRegion
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"empty 1"
argument_list|)
operator|<<
name|QRegion
argument_list|()
operator|<<
name|QRegion
argument_list|(
name|QRect
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
operator|<<
name|QRegion
argument_list|(
name|QRect
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"empty 2"
argument_list|)
operator|<<
name|QRegion
argument_list|(
name|QRect
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
operator|<<
name|QRegion
argument_list|()
operator|<<
name|QRegion
argument_list|(
name|QRect
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QRegion
name|expected
decl_stmt|;
name|QVector
argument_list|<
name|QRect
argument_list|>
name|rects
decl_stmt|;
name|rects
operator|<<
name|QRect
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|22
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|expected
operator|.
name|setRects
argument_list|(
name|rects
operator|.
name|constData
argument_list|()
argument_list|,
name|rects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"non overlapping"
argument_list|)
operator|<<
name|QRegion
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
name|QRegion
argument_list|(
literal|22
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
name|expected
expr_stmt|;
name|rects
operator|.
name|clear
argument_list|()
expr_stmt|;
name|rects
operator|<<
name|QRect
argument_list|(
literal|50
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|expected
operator|.
name|setRects
argument_list|(
name|rects
operator|.
name|constData
argument_list|()
argument_list|,
name|rects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"adjacent y-rects"
argument_list|)
operator|<<
name|QRegion
argument_list|(
literal|50
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|1
argument_list|)
operator|<<
name|QRegion
argument_list|(
literal|50
argument_list|,
literal|1
argument_list|,
literal|50
argument_list|,
literal|1
argument_list|)
operator|<<
name|expected
expr_stmt|;
name|rects
operator|.
name|clear
argument_list|()
expr_stmt|;
name|rects
operator|<<
name|QRect
argument_list|(
literal|50
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|expected
operator|.
name|setRects
argument_list|(
name|rects
operator|.
name|constData
argument_list|()
argument_list|,
name|rects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"adjacent x-rects"
argument_list|)
operator|<<
name|QRegion
argument_list|(
literal|50
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
operator|<<
name|QRegion
argument_list|(
literal|51
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
operator|<<
name|expected
expr_stmt|;
name|rects
operator|.
name|clear
argument_list|()
expr_stmt|;
name|rects
operator|<<
name|QRect
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|10
argument_list|,
literal|20
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QRegion
name|r1
decl_stmt|;
name|r1
operator|.
name|setRects
argument_list|(
name|rects
operator|.
name|constData
argument_list|()
argument_list|,
name|rects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"double merge"
argument_list|)
operator|<<
name|r1
operator|<<
name|QRegion
argument_list|(
literal|15
argument_list|,
literal|20
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|)
operator|<<
name|QRegion
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|rects
operator|.
name|clear
argument_list|()
expr_stmt|;
name|rects
operator|<<
name|QRect
argument_list|(
literal|15
argument_list|,
literal|10
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|10
argument_list|,
literal|20
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|r1
operator|.
name|setRects
argument_list|(
name|rects
operator|.
name|constData
argument_list|()
argument_list|,
name|rects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"double merge 2"
argument_list|)
operator|<<
name|r1
operator|<<
name|QRegion
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|)
operator|<<
name|QRegion
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"overlapping x"
argument_list|)
operator|<<
name|QRegion
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
name|QRegion
argument_list|(
literal|15
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
name|QRegion
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|15
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"overlapping y"
argument_list|)
operator|<<
name|QRegion
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
name|QRegion
argument_list|(
literal|10
argument_list|,
literal|15
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
name|QRegion
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|15
argument_list|)
expr_stmt|;
name|rects
operator|.
name|clear
argument_list|()
expr_stmt|;
name|rects
operator|<<
name|QRect
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|10
argument_list|,
literal|20
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|r1
operator|.
name|setRects
argument_list|(
name|rects
operator|.
name|constData
argument_list|()
argument_list|,
name|rects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|rects
operator|.
name|clear
argument_list|()
expr_stmt|;
name|rects
operator|<<
name|QRect
argument_list|(
literal|15
argument_list|,
literal|20
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|10
argument_list|,
literal|30
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QRegion
name|r2
decl_stmt|;
name|r2
operator|.
name|setRects
argument_list|(
name|rects
operator|.
name|constData
argument_list|()
argument_list|,
name|rects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"triple merge"
argument_list|)
operator|<<
name|r1
operator|<<
name|r2
operator|<<
name|QRegion
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|30
argument_list|)
expr_stmt|;
name|rects
operator|.
name|clear
argument_list|()
expr_stmt|;
name|rects
operator|<<
name|QRect
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|4
argument_list|,
literal|10
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|15
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|r1
operator|.
name|setRects
argument_list|(
name|rects
operator|.
name|constData
argument_list|()
argument_list|,
name|rects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|rects
operator|.
name|clear
argument_list|()
expr_stmt|;
name|rects
operator|<<
name|QRect
argument_list|(
literal|15
argument_list|,
literal|20
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|r2
operator|.
name|setRects
argument_list|(
name|rects
operator|.
name|constData
argument_list|()
argument_list|,
name|rects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|rects
operator|.
name|clear
argument_list|()
expr_stmt|;
name|rects
operator|<<
name|QRect
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|4
argument_list|,
literal|10
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|15
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|15
argument_list|,
literal|20
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|expected
operator|.
name|setRects
argument_list|(
name|rects
operator|.
name|constData
argument_list|()
argument_list|,
name|rects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"don't merge y"
argument_list|)
operator|<<
name|r1
operator|<<
name|r2
operator|<<
name|expected
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"equal 1"
argument_list|)
operator|<<
name|QRegion
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
name|QRegion
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
name|QRegion
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"equal 2"
argument_list|)
operator|<<
name|expected
operator|<<
name|expected
operator|<<
name|expected
expr_stmt|;
block|}
end_function
begin_function
DECL|function|operator_plus
name|void
name|tst_QRegion
operator|::
name|operator_plus
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QRegion
argument_list|,
name|r1
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QRegion
argument_list|,
name|r2
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QRegion
argument_list|,
name|expected
argument_list|)
expr_stmt|;
if|if
condition|(
name|r1
operator|+
name|r2
operator|!=
name|expected
condition|)
block|{
name|qDebug
argument_list|()
operator|<<
literal|"r1 + r2"
operator|<<
operator|(
name|r1
operator|+
name|r2
operator|)
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
literal|"expected"
operator|<<
name|expected
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|r1
operator|+
name|r2
argument_list|,
name|expected
argument_list|)
expr_stmt|;
if|if
condition|(
name|r2
operator|.
name|rectCount
argument_list|()
operator|==
literal|1
condition|)
block|{
if|if
condition|(
name|r1
operator|+
name|r2
operator|.
name|boundingRect
argument_list|()
operator|!=
name|expected
condition|)
block|{
name|qDebug
argument_list|()
operator|<<
literal|"r1 + QRect(r2)"
operator|<<
operator|(
name|r1
operator|+
name|r2
operator|.
name|boundingRect
argument_list|()
operator|)
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
literal|"expected"
operator|<<
name|expected
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|r1
operator|+
name|r2
operator|.
name|boundingRect
argument_list|()
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|r2
operator|+
name|r1
operator|!=
name|expected
condition|)
block|{
name|qDebug
argument_list|()
operator|<<
literal|"r2 + r1"
operator|<<
operator|(
name|r2
operator|+
name|r1
operator|)
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
literal|"expected"
operator|<<
name|expected
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|r2
operator|+
name|r1
argument_list|,
name|expected
argument_list|)
expr_stmt|;
if|if
condition|(
name|r1
operator|.
name|rectCount
argument_list|()
operator|==
literal|1
condition|)
block|{
if|if
condition|(
name|r1
operator|+
name|r2
operator|.
name|boundingRect
argument_list|()
operator|!=
name|expected
condition|)
block|{
name|qDebug
argument_list|()
operator|<<
literal|"r2 + QRect(r1)"
operator|<<
operator|(
name|r2
operator|+
name|r1
operator|.
name|boundingRect
argument_list|()
operator|)
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
literal|"expected"
operator|<<
name|expected
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|r2
operator|+
name|r1
operator|.
name|boundingRect
argument_list|()
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
name|QRegion
name|result1
init|=
name|r1
decl_stmt|;
name|result1
operator|+=
name|r2
expr_stmt|;
if|if
condition|(
name|result1
operator|!=
name|expected
condition|)
block|{
name|qDebug
argument_list|()
operator|<<
literal|"r1 += r2"
operator|<<
name|result1
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
literal|"expected"
operator|<<
name|expected
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|result1
argument_list|,
name|expected
argument_list|)
expr_stmt|;
if|if
condition|(
name|r2
operator|.
name|rectCount
argument_list|()
operator|==
literal|1
condition|)
block|{
name|result1
operator|=
name|r1
expr_stmt|;
name|result1
operator|+=
name|r2
operator|.
name|boundingRect
argument_list|()
expr_stmt|;
if|if
condition|(
name|result1
operator|!=
name|expected
condition|)
block|{
name|qDebug
argument_list|()
operator|<<
literal|"r1 += QRect(r2)"
operator|<<
name|result1
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
literal|"expected"
operator|<<
name|expected
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|result1
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
name|QRegion
name|result2
init|=
name|r2
decl_stmt|;
name|result2
operator|+=
name|r1
expr_stmt|;
if|if
condition|(
name|result2
operator|!=
name|expected
condition|)
block|{
name|qDebug
argument_list|()
operator|<<
literal|"r2 += r1"
operator|<<
name|result2
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
literal|"expected"
operator|<<
name|expected
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|result2
argument_list|,
name|expected
argument_list|)
expr_stmt|;
if|if
condition|(
name|r1
operator|.
name|rectCount
argument_list|()
operator|==
literal|1
condition|)
block|{
name|result2
operator|=
name|r2
expr_stmt|;
name|result2
operator|+=
name|r1
operator|.
name|boundingRect
argument_list|()
expr_stmt|;
if|if
condition|(
name|result2
operator|!=
name|expected
condition|)
block|{
name|qDebug
argument_list|()
operator|<<
literal|"r2 += QRect(r1)"
operator|<<
name|result2
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
literal|"expected"
operator|<<
name|expected
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|result2
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|operator_minus_data
name|void
name|tst_QRegion
operator|::
name|operator_minus_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QRegion
argument_list|>
argument_list|(
literal|"dest"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QRegion
argument_list|>
argument_list|(
literal|"subtract"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QRegion
argument_list|>
argument_list|(
literal|"expected"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"empty 0"
argument_list|)
operator|<<
name|QRegion
argument_list|()
operator|<<
name|QRegion
argument_list|()
operator|<<
name|QRegion
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"empty 1"
argument_list|)
operator|<<
name|QRegion
argument_list|()
operator|<<
name|QRegion
argument_list|(
name|QRect
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
operator|<<
name|QRegion
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"empty 2"
argument_list|)
operator|<<
name|QRegion
argument_list|(
name|QRect
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
operator|<<
name|QRegion
argument_list|()
operator|<<
name|QRegion
argument_list|(
name|QRect
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QRegion
name|dest
decl_stmt|;
name|QVector
argument_list|<
name|QRect
argument_list|>
name|rects
decl_stmt|;
name|rects
operator|<<
name|QRect
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|22
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|dest
operator|.
name|setRects
argument_list|(
name|rects
operator|.
name|constData
argument_list|()
argument_list|,
name|rects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"simple 1"
argument_list|)
operator|<<
name|dest
operator|<<
name|QRegion
argument_list|(
literal|22
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
name|QRegion
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"simple 2"
argument_list|)
operator|<<
name|dest
operator|<<
name|QRegion
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
name|QRegion
argument_list|(
literal|22
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|rects
operator|.
name|clear
argument_list|()
expr_stmt|;
name|rects
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|15
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|dest
operator|.
name|setRects
argument_list|(
name|rects
operator|.
name|constData
argument_list|()
argument_list|,
name|rects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QRegion
name|minus
decl_stmt|;
name|rects
operator|.
name|clear
argument_list|()
expr_stmt|;
name|rects
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|12
argument_list|,
literal|12
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|15
argument_list|,
literal|0
argument_list|,
literal|12
argument_list|,
literal|12
argument_list|)
expr_stmt|;
name|minus
operator|.
name|setRects
argument_list|(
name|rects
operator|.
name|constData
argument_list|()
argument_list|,
name|rects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"empty 3"
argument_list|)
operator|<<
name|dest
operator|<<
name|minus
operator|<<
name|QRegion
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|operator_minus
name|void
name|tst_QRegion
operator|::
name|operator_minus
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QRegion
argument_list|,
name|dest
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QRegion
argument_list|,
name|subtract
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QRegion
argument_list|,
name|expected
argument_list|)
expr_stmt|;
if|if
condition|(
name|dest
operator|-
name|subtract
operator|!=
name|expected
condition|)
block|{
name|qDebug
argument_list|()
operator|<<
literal|"dest - subtract"
operator|<<
operator|(
name|dest
operator|-
name|subtract
operator|)
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
literal|"expected"
operator|<<
name|expected
expr_stmt|;
block|}
empty_stmt|;
name|QCOMPARE
argument_list|(
name|dest
operator|-
name|subtract
argument_list|,
name|expected
argument_list|)
expr_stmt|;
name|dest
operator|-=
name|subtract
expr_stmt|;
if|if
condition|(
name|dest
operator|!=
name|expected
condition|)
block|{
name|qDebug
argument_list|()
operator|<<
literal|"dest"
operator|<<
name|dest
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
literal|"expected"
operator|<<
name|expected
expr_stmt|;
block|}
empty_stmt|;
name|QCOMPARE
argument_list|(
name|dest
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|operator_intersect_data
name|void
name|tst_QRegion
operator|::
name|operator_intersect_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QRegion
argument_list|>
argument_list|(
literal|"r1"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QRegion
argument_list|>
argument_list|(
literal|"r2"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QRegion
argument_list|>
argument_list|(
literal|"expected"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"empty 0"
argument_list|)
operator|<<
name|QRegion
argument_list|()
operator|<<
name|QRegion
argument_list|()
operator|<<
name|QRegion
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"empty 1"
argument_list|)
operator|<<
name|QRegion
argument_list|()
operator|<<
name|QRegion
argument_list|(
name|QRect
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
operator|<<
name|QRegion
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"empty 2"
argument_list|)
operator|<<
name|QRegion
argument_list|(
name|QRect
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
operator|<<
name|QRegion
argument_list|()
operator|<<
name|QRegion
argument_list|()
expr_stmt|;
name|QRegion
name|dest
decl_stmt|;
name|QVector
argument_list|<
name|QRect
argument_list|>
name|rects
decl_stmt|;
name|rects
operator|<<
name|QRect
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|22
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|dest
operator|.
name|setRects
argument_list|(
name|rects
operator|.
name|constData
argument_list|()
argument_list|,
name|rects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"simple 1"
argument_list|)
operator|<<
name|dest
operator|<<
name|QRegion
argument_list|(
literal|22
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
name|QRegion
argument_list|(
literal|22
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"simple 2"
argument_list|)
operator|<<
name|dest
operator|<<
name|QRegion
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
name|QRegion
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|rects
operator|.
name|clear
argument_list|()
expr_stmt|;
name|rects
operator|<<
name|QRect
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|10
argument_list|,
literal|20
argument_list|,
literal|15
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|dest
operator|.
name|setRects
argument_list|(
name|rects
operator|.
name|constData
argument_list|()
argument_list|,
name|rects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"merge 1"
argument_list|)
operator|<<
name|dest
operator|<<
name|QRegion
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|20
argument_list|)
operator|<<
name|QRegion
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|rects
operator|.
name|clear
argument_list|()
expr_stmt|;
name|rects
operator|<<
name|QRect
argument_list|(
literal|11
argument_list|,
literal|11
argument_list|,
literal|218
argument_list|,
literal|117
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|11
argument_list|,
literal|128
argument_list|,
literal|218
argument_list|,
literal|27
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|264
argument_list|,
literal|128
argument_list|,
literal|122
argument_list|,
literal|27
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|11
argument_list|,
literal|155
argument_list|,
literal|218
argument_list|,
literal|43
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|11
argument_list|,
literal|198
argument_list|,
literal|218
argument_list|,
literal|27
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|264
argument_list|,
literal|198
argument_list|,
literal|122
argument_list|,
literal|27
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|11
argument_list|,
literal|225
argument_list|,
literal|218
argument_list|,
literal|221
argument_list|)
expr_stmt|;
name|dest
operator|.
name|setRects
argument_list|(
name|rects
operator|.
name|constData
argument_list|()
argument_list|,
name|rects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"merge 2"
argument_list|)
operator|<<
name|dest
operator|<<
name|QRegion
argument_list|(
literal|11
argument_list|,
literal|11
argument_list|,
literal|218
argument_list|,
literal|458
argument_list|)
operator|<<
name|QRegion
argument_list|(
literal|11
argument_list|,
literal|11
argument_list|,
literal|218
argument_list|,
literal|435
argument_list|)
expr_stmt|;
name|rects
operator|.
name|clear
argument_list|()
expr_stmt|;
name|rects
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|20
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|dest
operator|.
name|setRects
argument_list|(
name|rects
operator|.
name|constData
argument_list|()
argument_list|,
name|rects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"empty 3"
argument_list|)
operator|<<
name|dest
operator|<<
name|QRegion
argument_list|(
literal|11
argument_list|,
literal|0
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|)
operator|<<
name|QRegion
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"extents check"
argument_list|)
operator|<<
name|dest
operator|<<
name|QRegion
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|15
argument_list|,
literal|15
argument_list|)
operator|<<
name|QRegion
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|rects
operator|.
name|clear
argument_list|()
expr_stmt|;
name|rects
operator|<<
name|QRect
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|10
argument_list|,
literal|20
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|30
argument_list|,
literal|20
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|10
argument_list|,
literal|30
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|dest
operator|.
name|setRects
argument_list|(
name|rects
operator|.
name|constData
argument_list|()
argument_list|,
name|rects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|rects
operator|.
name|clear
argument_list|()
expr_stmt|;
name|rects
operator|<<
name|QRect
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|10
argument_list|,
literal|20
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|30
argument_list|,
literal|20
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QRegion
name|expected
decl_stmt|;
name|expected
operator|.
name|setRects
argument_list|(
name|rects
operator|.
name|constData
argument_list|()
argument_list|,
name|rects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"dont merge"
argument_list|)
operator|<<
name|dest
operator|<<
name|QRegion
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|30
argument_list|)
operator|<<
name|expected
expr_stmt|;
block|}
end_function
begin_function
DECL|function|operator_intersect
name|void
name|tst_QRegion
operator|::
name|operator_intersect
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QRegion
argument_list|,
name|r1
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QRegion
argument_list|,
name|r2
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QRegion
argument_list|,
name|expected
argument_list|)
expr_stmt|;
if|if
condition|(
operator|(
name|r1
operator|&
name|r2
operator|)
operator|!=
name|expected
condition|)
block|{
name|qDebug
argument_list|()
operator|<<
literal|"r1& r2"
operator|<<
operator|(
name|r1
operator|&
name|r2
operator|)
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
literal|"expected"
operator|<<
name|expected
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|r1
operator|&
name|r2
argument_list|,
name|expected
argument_list|)
expr_stmt|;
if|if
condition|(
operator|(
name|r2
operator|&
name|r1
operator|)
operator|!=
name|expected
condition|)
block|{
name|qDebug
argument_list|()
operator|<<
literal|"r2& r1"
operator|<<
operator|(
name|r2
operator|&
name|r1
operator|)
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
literal|"expected"
operator|<<
name|expected
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|r2
operator|&
name|r1
argument_list|,
name|expected
argument_list|)
expr_stmt|;
name|r1
operator|&=
name|r2
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|operator_xor_data
name|void
name|tst_QRegion
operator|::
name|operator_xor_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QRegion
argument_list|>
argument_list|(
literal|"dest"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QRegion
argument_list|>
argument_list|(
literal|"arg"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QRegion
argument_list|>
argument_list|(
literal|"expected"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"empty 0"
argument_list|)
operator|<<
name|QRegion
argument_list|()
operator|<<
name|QRegion
argument_list|()
operator|<<
name|QRegion
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"empty 1"
argument_list|)
operator|<<
name|QRegion
argument_list|()
operator|<<
name|QRegion
argument_list|(
name|QRect
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
operator|<<
name|QRegion
argument_list|(
name|QRect
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"empty 2"
argument_list|)
operator|<<
name|QRegion
argument_list|(
name|QRect
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
operator|<<
name|QRegion
argument_list|()
operator|<<
name|QRegion
argument_list|(
name|QRect
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QRegion
name|dest
decl_stmt|;
name|QVector
argument_list|<
name|QRect
argument_list|>
name|rects
decl_stmt|;
name|rects
operator|<<
name|QRect
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|22
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|dest
operator|.
name|setRects
argument_list|(
name|rects
operator|.
name|constData
argument_list|()
argument_list|,
name|rects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"simple 1"
argument_list|)
operator|<<
name|dest
operator|<<
name|QRegion
argument_list|(
literal|22
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
name|QRegion
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"simple 2"
argument_list|)
operator|<<
name|dest
operator|<<
name|QRegion
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
name|QRegion
argument_list|(
literal|22
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"simple 3"
argument_list|)
operator|<<
name|dest
operator|<<
name|dest
operator|<<
name|QRegion
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"simple 4"
argument_list|)
operator|<<
name|QRegion
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
name|QRegion
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|)
operator|<<
name|QRegion
argument_list|(
literal|15
argument_list|,
literal|10
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"simple 5"
argument_list|)
operator|<<
name|QRegion
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
name|QRegion
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|5
argument_list|)
operator|<<
name|QRegion
argument_list|(
literal|10
argument_list|,
literal|15
argument_list|,
literal|10
argument_list|,
literal|5
argument_list|)
expr_stmt|;
specifier|const
name|QRegion
name|rgnA
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
decl_stmt|;
specifier|const
name|QRegion
name|rgnB
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"simple 6"
argument_list|)
operator|<<
name|rgnA
operator|<<
name|rgnA
operator|-
name|rgnB
operator|<<
name|rgnB
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"simple 7"
argument_list|)
operator|<<
name|rgnB
operator|<<
name|rgnA
operator|<<
name|rgnA
operator|-
name|rgnB
expr_stmt|;
block|}
end_function
begin_function
DECL|function|operator_xor
name|void
name|tst_QRegion
operator|::
name|operator_xor
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QRegion
argument_list|,
name|dest
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QRegion
argument_list|,
name|arg
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QRegion
argument_list|,
name|expected
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dest
operator|^
name|arg
argument_list|,
name|expected
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dest
operator|.
name|xored
argument_list|(
name|arg
argument_list|)
argument_list|,
name|expected
argument_list|)
expr_stmt|;
name|dest
operator|^=
name|arg
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dest
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|rectCount_data
name|void
name|tst_QRegion
operator|::
name|rectCount_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QRegion
argument_list|>
argument_list|(
literal|"region"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expected"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"empty"
argument_list|)
operator|<<
name|QRegion
argument_list|()
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rect"
argument_list|)
operator|<<
name|QRegion
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
literal|1
expr_stmt|;
name|QRegion
name|dest
decl_stmt|;
name|QVector
argument_list|<
name|QRect
argument_list|>
name|rects
decl_stmt|;
name|rects
operator|<<
name|QRect
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|22
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|dest
operator|.
name|setRects
argument_list|(
name|rects
operator|.
name|constData
argument_list|()
argument_list|,
name|rects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"2 rects"
argument_list|)
operator|<<
name|dest
operator|<<
name|rects
operator|.
name|size
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|rectCount
name|void
name|tst_QRegion
operator|::
name|rectCount
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QRegion
argument_list|,
name|region
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expected
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|region
operator|.
name|rectCount
argument_list|()
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|isEmpty_data
name|void
name|tst_QRegion
operator|::
name|isEmpty_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QRegion
argument_list|>
argument_list|(
literal|"region"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"QRegion"
argument_list|)
operator|<<
name|QRegion
argument_list|()
expr_stmt|;
name|QVector
argument_list|<
name|QRect
argument_list|>
name|rects
decl_stmt|;
name|rects
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|15
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QRegion
name|r1
decl_stmt|;
name|r1
operator|.
name|setRects
argument_list|(
name|rects
operator|.
name|constData
argument_list|()
argument_list|,
name|rects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QRegion
name|r2
decl_stmt|;
name|rects
operator|.
name|clear
argument_list|()
expr_stmt|;
name|rects
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|12
argument_list|,
literal|12
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|15
argument_list|,
literal|0
argument_list|,
literal|12
argument_list|,
literal|12
argument_list|)
expr_stmt|;
name|r2
operator|.
name|setRects
argument_list|(
name|rects
operator|.
name|constData
argument_list|()
argument_list|,
name|rects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"minus"
argument_list|)
operator|<<
operator|(
name|r1
operator|-
name|r2
operator|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|isEmpty
name|void
name|tst_QRegion
operator|::
name|isEmpty
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QRegion
argument_list|,
name|region
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|region
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|region
argument_list|,
name|QRegion
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|region
operator|.
name|rectCount
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|region
operator|.
name|boundingRect
argument_list|()
argument_list|,
name|QRect
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|region
operator|.
name|rects
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_if
if|#
directive|if
name|defined
argument_list|(
name|Q_WS_X11
argument_list|)
operator|&&
name|defined
argument_list|(
name|QT_BUILD_INTERNAL
argument_list|)
end_if
begin_function
DECL|function|clipRectangles
name|void
name|tst_QRegion
operator|::
name|clipRectangles
parameter_list|()
block|{
name|QRegion
name|region
argument_list|(
literal|30
argument_list|,
literal|30
argument_list|,
literal|30
argument_list|,
literal|30
argument_list|)
decl_stmt|;
name|int
name|num
init|=
literal|0
decl_stmt|;
name|qt_getClipRects
argument_list|(
name|region
argument_list|,
name|num
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|num
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|region
operator|+=
name|QRegion
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|XRectangle
modifier|*
name|rects2
init|=
cast|static_cast
argument_list|<
name|XRectangle
operator|*
argument_list|>
argument_list|(
name|qt_getClipRects
argument_list|(
name|region
argument_list|,
name|num
argument_list|)
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|num
argument_list|,
literal|2
argument_list|)
expr_stmt|;
comment|// Here's the important part (Y-sorted):
name|QCOMPARE
argument_list|(
name|int
argument_list|(
name|rects2
index|[
literal|0
index|]
operator|.
name|y
argument_list|)
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|int
argument_list|(
name|rects2
index|[
literal|1
index|]
operator|.
name|y
argument_list|)
argument_list|,
literal|30
argument_list|)
expr_stmt|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_function
DECL|function|regionFromPath
name|void
name|tst_QRegion
operator|::
name|regionFromPath
parameter_list|()
block|{
block|{
name|QPainterPath
name|path
decl_stmt|;
name|path
operator|.
name|addRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|path
operator|.
name|addRect
argument_list|(
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
literal|1000
argument_list|)
expr_stmt|;
name|QRegion
name|rgn
argument_list|(
name|path
operator|.
name|toFillPolygon
argument_list|()
operator|.
name|toPolygon
argument_list|()
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|rgn
operator|.
name|rects
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rgn
operator|.
name|rects
argument_list|()
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rgn
operator|.
name|rects
argument_list|()
operator|.
name|at
argument_list|(
literal|1
argument_list|)
argument_list|,
name|QRect
argument_list|(
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
literal|1000
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rgn
operator|.
name|boundingRect
argument_list|()
argument_list|,
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|1100
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QPainterPath
name|path
decl_stmt|;
name|path
operator|.
name|addRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|path
operator|.
name|addRect
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|80
argument_list|,
literal|80
argument_list|)
expr_stmt|;
name|QRegion
name|rgn
argument_list|(
name|path
operator|.
name|toFillPolygon
argument_list|()
operator|.
name|toPolygon
argument_list|()
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|rgn
operator|.
name|rects
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rgn
operator|.
name|rects
argument_list|()
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rgn
operator|.
name|rects
argument_list|()
operator|.
name|at
argument_list|(
literal|1
argument_list|)
argument_list|,
name|QRect
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|80
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rgn
operator|.
name|rects
argument_list|()
operator|.
name|at
argument_list|(
literal|2
argument_list|)
argument_list|,
name|QRect
argument_list|(
literal|90
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|80
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rgn
operator|.
name|rects
argument_list|()
operator|.
name|at
argument_list|(
literal|3
argument_list|)
argument_list|,
name|QRect
argument_list|(
literal|0
argument_list|,
literal|90
argument_list|,
literal|100
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rgn
operator|.
name|boundingRect
argument_list|()
argument_list|,
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QPainterPath
argument_list|)
end_macro
begin_ifdef
ifdef|#
directive|ifdef
name|QT_BUILD_INTERNAL
end_ifdef
begin_function
DECL|function|regionToPath_data
name|void
name|tst_QRegion
operator|::
name|regionToPath_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QPainterPath
argument_list|>
argument_list|(
literal|"path"
argument_list|)
expr_stmt|;
block|{
name|QPainterPath
name|path
decl_stmt|;
name|path
operator|.
name|addRect
argument_list|(
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Rectangle"
argument_list|)
operator|<<
name|path
expr_stmt|;
block|}
block|{
name|QPainterPath
name|path
decl_stmt|;
name|path
operator|.
name|addRect
argument_list|(
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|addRect
argument_list|(
name|QRect
argument_list|(
literal|20
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Two rects"
argument_list|)
operator|<<
name|path
expr_stmt|;
block|}
block|{
name|QPainterPath
name|path
decl_stmt|;
name|path
operator|.
name|addEllipse
argument_list|(
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Ellipse"
argument_list|)
operator|<<
name|path
expr_stmt|;
block|}
block|{
name|QPainterPath
name|path
decl_stmt|;
name|path
operator|.
name|addRect
argument_list|(
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|3
argument_list|,
literal|8
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|addRect
argument_list|(
name|QRect
argument_list|(
literal|6
argument_list|,
literal|0
argument_list|,
literal|3
argument_list|,
literal|8
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|addRect
argument_list|(
name|QRect
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|,
literal|3
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|addRect
argument_list|(
name|QRect
argument_list|(
literal|12
argument_list|,
literal|3
argument_list|,
literal|3
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"H-dot"
argument_list|)
operator|<<
name|path
expr_stmt|;
block|}
block|{
name|QPainterPath
name|path
decl_stmt|;
for|for
control|(
name|int
name|y
init|=
literal|0
init|;
name|y
operator|<=
literal|10
condition|;
operator|++
name|y
control|)
block|{
for|for
control|(
name|int
name|x
init|=
literal|0
init|;
name|x
operator|<=
literal|10
condition|;
operator|++
name|x
control|)
block|{
if|if
condition|(
operator|!
operator|(
name|y
operator|&
literal|1
operator|)
operator|||
operator|(
operator|(
name|x
operator|^
name|y
operator|)
operator|&
literal|1
operator|)
condition|)
name|path
operator|.
name|addRect
argument_list|(
name|QRect
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Grid"
argument_list|)
operator|<<
name|path
expr_stmt|;
block|}
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_ifdef
ifdef|#
directive|ifdef
name|QT_BUILD_INTERNAL
end_ifdef
begin_function_decl
name|QT_BEGIN_NAMESPACE
specifier|extern
name|QPainterPath
name|qt_regionToPath
parameter_list|(
specifier|const
name|QRegion
modifier|&
name|region
parameter_list|)
function_decl|;
end_function_decl
begin_function
name|QT_END_NAMESPACE
endif|#
directive|endif
ifdef|#
directive|ifdef
name|QT_BUILD_INTERNAL
DECL|function|regionToPath
name|void
name|tst_QRegion
operator|::
name|regionToPath
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QPainterPath
argument_list|,
name|path
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|360
condition|;
name|i
operator|+=
literal|10
control|)
block|{
name|QTransform
name|transform
decl_stmt|;
name|transform
operator|.
name|scale
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|transform
operator|.
name|rotate
argument_list|(
name|i
argument_list|)
expr_stmt|;
name|QPainterPath
name|mapped
init|=
name|transform
operator|.
name|map
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|QRegion
name|region
argument_list|(
name|mapped
operator|.
name|toFillPolygon
argument_list|()
operator|.
name|toPolygon
argument_list|()
argument_list|)
decl_stmt|;
name|QPainterPath
name|a
decl_stmt|;
name|a
operator|.
name|addRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
name|QPainterPath
name|b
init|=
name|qt_regionToPath
argument_list|(
name|region
argument_list|)
decl_stmt|;
name|QRect
name|r
init|=
name|a
operator|.
name|boundingRect
argument_list|()
operator|.
name|toAlignedRect
argument_list|()
decl_stmt|;
name|QImage
name|ia
argument_list|(
name|r
operator|.
name|size
argument_list|()
argument_list|,
name|QImage
operator|::
name|Format_RGB32
argument_list|)
decl_stmt|;
name|ia
operator|.
name|fill
argument_list|(
literal|0xffffffff
argument_list|)
expr_stmt|;
name|QImage
name|ib
init|=
name|ia
decl_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|ia
argument_list|)
decl_stmt|;
name|p
operator|.
name|translate
argument_list|(
operator|-
name|r
operator|.
name|x
argument_list|()
argument_list|,
operator|-
name|r
operator|.
name|y
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillPath
argument_list|(
name|a
argument_list|,
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|p
operator|.
name|begin
argument_list|(
operator|&
name|ib
argument_list|)
expr_stmt|;
name|p
operator|.
name|translate
argument_list|(
operator|-
name|r
operator|.
name|x
argument_list|()
argument_list|,
operator|-
name|r
operator|.
name|y
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillPath
argument_list|(
name|b
argument_list|,
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ia
argument_list|,
name|ib
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a
operator|.
name|boundingRect
argument_list|()
argument_list|,
name|b
operator|.
name|boundingRect
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QRegion
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qregion.moc"
end_include
end_unit
