begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<qfile.h>
end_include
begin_include
include|#
directive|include
file|<qpainterpath.h>
end_include
begin_include
include|#
directive|include
file|<qpen.h>
end_include
begin_include
include|#
directive|include
file|<qmath.h>
end_include
begin_class
DECL|class|tst_QPainterPath
class|class
name|tst_QPainterPath
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
public|public
name|slots
public|:
name|void
name|cleanupTestCase
parameter_list|()
function_decl|;
private|private
name|slots
private|:
name|void
name|getSetCheck
parameter_list|()
function_decl|;
name|void
name|swap
parameter_list|()
function_decl|;
name|void
name|contains_QPointF_data
parameter_list|()
function_decl|;
name|void
name|contains_QPointF
parameter_list|()
function_decl|;
name|void
name|contains_QRectF_data
parameter_list|()
function_decl|;
name|void
name|contains_QRectF
parameter_list|()
function_decl|;
name|void
name|intersects_QRectF_data
parameter_list|()
function_decl|;
name|void
name|intersects_QRectF
parameter_list|()
function_decl|;
name|void
name|testContainsAndIntersects_data
parameter_list|()
function_decl|;
name|void
name|testContainsAndIntersects
parameter_list|()
function_decl|;
name|void
name|testSimplified_data
parameter_list|()
function_decl|;
name|void
name|testSimplified
parameter_list|()
function_decl|;
name|void
name|testStroker_data
parameter_list|()
function_decl|;
name|void
name|testStroker
parameter_list|()
function_decl|;
name|void
name|currentPosition
parameter_list|()
function_decl|;
name|void
name|testOperatorEquals
parameter_list|()
function_decl|;
name|void
name|testOperatorEquals_fuzzy
parameter_list|()
function_decl|;
name|void
name|testOperatorDatastream
parameter_list|()
function_decl|;
name|void
name|testArcMoveTo_data
parameter_list|()
function_decl|;
name|void
name|testArcMoveTo
parameter_list|()
function_decl|;
name|void
name|setElementPositionAt
parameter_list|()
function_decl|;
name|void
name|testOnPath_data
parameter_list|()
function_decl|;
name|void
name|testOnPath
parameter_list|()
function_decl|;
name|void
name|pointAtPercent_data
parameter_list|()
function_decl|;
name|void
name|pointAtPercent
parameter_list|()
function_decl|;
name|void
name|angleAtPercent
parameter_list|()
function_decl|;
name|void
name|arcWinding_data
parameter_list|()
function_decl|;
name|void
name|arcWinding
parameter_list|()
function_decl|;
name|void
name|testToFillPolygons
parameter_list|()
function_decl|;
name|void
name|testNaNandInfinites
parameter_list|()
function_decl|;
name|void
name|closing
parameter_list|()
function_decl|;
name|void
name|operators_data
parameter_list|()
function_decl|;
name|void
name|operators
parameter_list|()
function_decl|;
name|void
name|connectPathDuplicatePoint
parameter_list|()
function_decl|;
name|void
name|connectPathMoveTo
parameter_list|()
function_decl|;
name|void
name|translate
parameter_list|()
function_decl|;
name|void
name|lineWithinBounds
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_function
DECL|function|cleanupTestCase
name|void
name|tst_QPainterPath
operator|::
name|cleanupTestCase
parameter_list|()
block|{
name|QFile
operator|::
name|remove
argument_list|(
name|QLatin1String
argument_list|(
literal|"data"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|// Testing get/set functions
end_comment
begin_function
DECL|function|getSetCheck
name|void
name|tst_QPainterPath
operator|::
name|getSetCheck
parameter_list|()
block|{
name|QPainterPathStroker
name|obj1
decl_stmt|;
comment|// qreal QPainterPathStroker::width()
comment|// void QPainterPathStroker::setWidth(qreal)
name|obj1
operator|.
name|setWidth
argument_list|(
literal|0.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qreal
argument_list|(
literal|1.0
argument_list|)
argument_list|,
name|obj1
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
comment|// Pathstroker sets with to 1 if<= 0
name|obj1
operator|.
name|setWidth
argument_list|(
literal|0.5
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qreal
argument_list|(
literal|0.5
argument_list|)
argument_list|,
name|obj1
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setWidth
argument_list|(
literal|1.1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qreal
argument_list|(
literal|1.1
argument_list|)
argument_list|,
name|obj1
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
comment|// qreal QPainterPathStroker::miterLimit()
comment|// void QPainterPathStroker::setMiterLimit(qreal)
name|obj1
operator|.
name|setMiterLimit
argument_list|(
literal|0.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qreal
argument_list|(
literal|0.0
argument_list|)
argument_list|,
name|obj1
operator|.
name|miterLimit
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setMiterLimit
argument_list|(
literal|1.1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qreal
argument_list|(
literal|1.1
argument_list|)
argument_list|,
name|obj1
operator|.
name|miterLimit
argument_list|()
argument_list|)
expr_stmt|;
comment|// qreal QPainterPathStroker::curveThreshold()
comment|// void QPainterPathStroker::setCurveThreshold(qreal)
name|obj1
operator|.
name|setCurveThreshold
argument_list|(
literal|0.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qreal
argument_list|(
literal|0.0
argument_list|)
argument_list|,
name|obj1
operator|.
name|curveThreshold
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setCurveThreshold
argument_list|(
literal|1.1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qreal
argument_list|(
literal|1.1
argument_list|)
argument_list|,
name|obj1
operator|.
name|curveThreshold
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|swap
name|void
name|tst_QPainterPath
operator|::
name|swap
parameter_list|()
block|{
name|QPainterPath
name|p1
decl_stmt|;
name|p1
operator|.
name|addRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QPainterPath
name|p2
decl_stmt|;
name|p2
operator|.
name|addRect
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|p1
operator|.
name|swap
argument_list|(
name|p2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|p1
operator|.
name|boundingRect
argument_list|()
operator|.
name|toRect
argument_list|()
argument_list|,
name|QRect
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|p2
operator|.
name|boundingRect
argument_list|()
operator|.
name|toRect
argument_list|()
argument_list|,
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QPainterPath
argument_list|)
end_macro
begin_function
DECL|function|currentPosition
name|void
name|tst_QPainterPath
operator|::
name|currentPosition
parameter_list|()
block|{
name|QPainterPath
name|p
decl_stmt|;
name|QCOMPARE
argument_list|(
name|p
operator|.
name|currentPosition
argument_list|()
argument_list|,
name|QPointF
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|.
name|moveTo
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|p
operator|.
name|currentPosition
argument_list|()
argument_list|,
name|QPointF
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|lineTo
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|p
operator|.
name|currentPosition
argument_list|()
argument_list|,
name|QPointF
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|cubicTo
argument_list|(
literal|300
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|,
literal|300
argument_list|,
literal|500
argument_list|,
literal|500
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|p
operator|.
name|currentPosition
argument_list|()
argument_list|,
name|QPointF
argument_list|(
literal|500
argument_list|,
literal|500
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|contains_QPointF_data
name|void
name|tst_QPainterPath
operator|::
name|contains_QPointF_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QPainterPath
argument_list|>
argument_list|(
literal|"path"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QPointF
argument_list|>
argument_list|(
literal|"pt"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"contained"
argument_list|)
expr_stmt|;
name|QPainterPath
name|path
decl_stmt|;
name|path
operator|.
name|addRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
comment|// #####
comment|// #   #
comment|// #   #
comment|// #   #
comment|// #####
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[0,0] in [0,0,100,100]"
argument_list|)
operator|<<
name|path
operator|<<
name|QPointF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[99,0] in [0,0,100,100]"
argument_list|)
operator|<<
name|path
operator|<<
name|QPointF
argument_list|(
literal|99
argument_list|,
literal|0
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[0,99] in [0,0,100,100]"
argument_list|)
operator|<<
name|path
operator|<<
name|QPointF
argument_list|(
literal|0
argument_list|,
literal|99
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[99,99] in [0,0,100,100]"
argument_list|)
operator|<<
name|path
operator|<<
name|QPointF
argument_list|(
literal|99
argument_list|,
literal|99
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[99.99,0] in [0,0,100,100]"
argument_list|)
operator|<<
name|path
operator|<<
name|QPointF
argument_list|(
literal|99.99
argument_list|,
literal|0
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[0,99.99] in [0,0,100,100]"
argument_list|)
operator|<<
name|path
operator|<<
name|QPointF
argument_list|(
literal|0
argument_list|,
literal|99.99
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[99.99,99.99] in [0,0,100,100]"
argument_list|)
operator|<<
name|path
operator|<<
name|QPointF
argument_list|(
literal|99.99
argument_list|,
literal|99.99
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[0.01,0.01] in [0,0,100,100]"
argument_list|)
operator|<<
name|path
operator|<<
name|QPointF
argument_list|(
literal|0.01
argument_list|,
literal|0.01
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[0,0.01] in [0,0,100,100]"
argument_list|)
operator|<<
name|path
operator|<<
name|QPointF
argument_list|(
literal|0
argument_list|,
literal|0.01
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[0.01,0] in [0,0,100,100]"
argument_list|)
operator|<<
name|path
operator|<<
name|QPointF
argument_list|(
literal|0.01
argument_list|,
literal|0
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[-0.01,-0.01] in [0,0,100,100]"
argument_list|)
operator|<<
name|path
operator|<<
name|QPointF
argument_list|(
operator|-
literal|0.01
argument_list|,
operator|-
literal|0.01
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[-0,-0.01] in [0,0,100,100]"
argument_list|)
operator|<<
name|path
operator|<<
name|QPointF
argument_list|(
literal|0
argument_list|,
operator|-
literal|0.01
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[-0.01,0] in [0,0,100,100]"
argument_list|)
operator|<<
name|path
operator|<<
name|QPointF
argument_list|(
operator|-
literal|0.01
argument_list|,
literal|0
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[-10,0] in [0,0,100,100]"
argument_list|)
operator|<<
name|path
operator|<<
name|QPointF
argument_list|(
operator|-
literal|10
argument_list|,
literal|0
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[100,0] in [0,0,100,100]"
argument_list|)
operator|<<
name|path
operator|<<
name|QPointF
argument_list|(
literal|100
argument_list|,
literal|0
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[0,-10] in [0,0,100,100]"
argument_list|)
operator|<<
name|path
operator|<<
name|QPointF
argument_list|(
literal|0
argument_list|,
operator|-
literal|10
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[0,100] in [0,0,100,100]"
argument_list|)
operator|<<
name|path
operator|<<
name|QPointF
argument_list|(
literal|0
argument_list|,
literal|100
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[100.1,0] in [0,0,100,100]"
argument_list|)
operator|<<
name|path
operator|<<
name|QPointF
argument_list|(
literal|100.1
argument_list|,
literal|0
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[0,100.1] in [0,0,100,100]"
argument_list|)
operator|<<
name|path
operator|<<
name|QPointF
argument_list|(
literal|0
argument_list|,
literal|100.1
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|path
operator|.
name|addRect
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
comment|// #####
comment|// #   #
comment|// # #####
comment|// # # # #
comment|// ##### #
comment|//   #   #
comment|//   #####
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[49,49] in 2 rects"
argument_list|)
operator|<<
name|path
operator|<<
name|QPointF
argument_list|(
literal|49
argument_list|,
literal|49
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[50,50] in 2 rects"
argument_list|)
operator|<<
name|path
operator|<<
name|QPointF
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[100,100] in 2 rects"
argument_list|)
operator|<<
name|path
operator|<<
name|QPointF
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|path
operator|.
name|setFillRule
argument_list|(
name|Qt
operator|::
name|WindingFill
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[50,50] in 2 rects (winding)"
argument_list|)
operator|<<
name|path
operator|<<
name|QPointF
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|path
operator|.
name|addEllipse
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|150
argument_list|,
literal|150
argument_list|)
expr_stmt|;
comment|// #####
comment|// ##  ##
comment|// # #####
comment|// # # # #
comment|// ##### #
comment|//  ##  ##
comment|//   #####
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[50,50] in complex (winding)"
argument_list|)
operator|<<
name|path
operator|<<
name|QPointF
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|path
operator|.
name|setFillRule
argument_list|(
name|Qt
operator|::
name|OddEvenFill
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[50,50] in complex (windinf)"
argument_list|)
operator|<<
name|path
operator|<<
name|QPointF
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[49,49] in complex"
argument_list|)
operator|<<
name|path
operator|<<
name|QPointF
argument_list|(
literal|49
argument_list|,
literal|49
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[100,100] in complex"
argument_list|)
operator|<<
name|path
operator|<<
name|QPointF
argument_list|(
literal|49
argument_list|,
literal|49
argument_list|)
operator|<<
literal|false
expr_stmt|;
comment|// unclosed triangle
name|path
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|path
operator|.
name|moveTo
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
literal|130
argument_list|,
literal|70
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
literal|150
argument_list|,
literal|110
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[100,100] in triangle"
argument_list|)
operator|<<
name|path
operator|<<
name|QPointF
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[140,100] in triangle"
argument_list|)
operator|<<
name|path
operator|<<
name|QPointF
argument_list|(
literal|140
argument_list|,
literal|100
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[130,80] in triangle"
argument_list|)
operator|<<
name|path
operator|<<
name|QPointF
argument_list|(
literal|130
argument_list|,
literal|80
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[110,80] in triangle"
argument_list|)
operator|<<
name|path
operator|<<
name|QPointF
argument_list|(
literal|110
argument_list|,
literal|80
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[150,100] in triangle"
argument_list|)
operator|<<
name|path
operator|<<
name|QPointF
argument_list|(
literal|150
argument_list|,
literal|100
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[120,110] in triangle"
argument_list|)
operator|<<
name|path
operator|<<
name|QPointF
argument_list|(
literal|120
argument_list|,
literal|110
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QRectF
name|base_rect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|20
argument_list|,
literal|20
argument_list|)
decl_stmt|;
name|path
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|path
operator|.
name|addEllipse
argument_list|(
name|base_rect
argument_list|)
expr_stmt|;
comment|// not strictly precise, but good enougth to verify fair precision.
name|QPainterPath
name|inside
decl_stmt|;
name|inside
operator|.
name|addEllipse
argument_list|(
name|base_rect
operator|.
name|adjusted
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|,
operator|-
literal|5
argument_list|,
operator|-
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|QPolygonF
name|inside_poly
init|=
name|inside
operator|.
name|toFillPolygon
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|inside_poly
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
name|QTest
operator|::
name|newRow
argument_list|(
name|qPrintable
argument_list|(
name|QString
argument_list|(
literal|"inside_ellipse %1"
argument_list|)
operator|.
name|arg
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
operator|<<
name|path
operator|<<
name|inside_poly
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QPainterPath
name|outside
decl_stmt|;
name|outside
operator|.
name|addEllipse
argument_list|(
name|base_rect
operator|.
name|adjusted
argument_list|(
operator|-
literal|5
argument_list|,
operator|-
literal|5
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|QPolygonF
name|outside_poly
init|=
name|outside
operator|.
name|toFillPolygon
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|outside_poly
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
name|QTest
operator|::
name|newRow
argument_list|(
name|qPrintable
argument_list|(
name|QString
argument_list|(
literal|"outside_ellipse %1"
argument_list|)
operator|.
name|arg
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
operator|<<
name|path
operator|<<
name|outside_poly
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|path
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|base_rect
operator|=
name|QRectF
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|path
operator|.
name|addEllipse
argument_list|(
name|base_rect
argument_list|)
expr_stmt|;
name|path
operator|.
name|setFillRule
argument_list|(
name|Qt
operator|::
name|WindingFill
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"topleft outside ellipse"
argument_list|)
operator|<<
name|path
operator|<<
name|base_rect
operator|.
name|topLeft
argument_list|()
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"topright outside ellipse"
argument_list|)
operator|<<
name|path
operator|<<
name|base_rect
operator|.
name|topRight
argument_list|()
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"bottomright outside ellipse"
argument_list|)
operator|<<
name|path
operator|<<
name|base_rect
operator|.
name|bottomRight
argument_list|()
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"bottomleft outside ellipse"
argument_list|)
operator|<<
name|path
operator|<<
name|base_rect
operator|.
name|bottomLeft
argument_list|()
operator|<<
literal|false
expr_stmt|;
comment|// Test horizontal curve segment
name|path
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|path
operator|.
name|moveTo
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|path
operator|.
name|cubicTo
argument_list|(
literal|120
argument_list|,
literal|100
argument_list|,
literal|180
argument_list|,
literal|100
argument_list|,
literal|200
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
literal|150
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|path
operator|.
name|closeSubpath
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"horizontal cubic, out left"
argument_list|)
operator|<<
name|path
operator|<<
name|QPointF
argument_list|(
literal|0
argument_list|,
literal|100
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"horizontal cubic, out right"
argument_list|)
operator|<<
name|path
operator|<<
name|QPointF
argument_list|(
literal|300
argument_list|,
literal|100
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"horizontal cubic, in mid"
argument_list|)
operator|<<
name|path
operator|<<
name|QPointF
argument_list|(
literal|150
argument_list|,
literal|100
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|path
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|path
operator|.
name|addEllipse
argument_list|(
name|QRectF
argument_list|(
operator|-
literal|5000.0
argument_list|,
operator|-
literal|5000.0
argument_list|,
literal|1500000.0
argument_list|,
literal|1500000.0
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"huge ellipse, qreal=float crash"
argument_list|)
operator|<<
name|path
operator|<<
name|QPointF
argument_list|(
literal|1100000.35
argument_list|,
literal|1098000.2
argument_list|)
operator|<<
literal|true
expr_stmt|;
block|}
end_function
begin_function
DECL|function|contains_QPointF
name|void
name|tst_QPainterPath
operator|::
name|contains_QPointF
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QPainterPath
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QPointF
argument_list|,
name|pt
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|contained
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|path
operator|.
name|contains
argument_list|(
name|pt
argument_list|)
argument_list|,
name|contained
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|contains_QRectF_data
name|void
name|tst_QPainterPath
operator|::
name|contains_QRectF_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QPainterPath
argument_list|>
argument_list|(
literal|"path"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QRectF
argument_list|>
argument_list|(
literal|"rect"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"contained"
argument_list|)
expr_stmt|;
name|QPainterPath
name|path
decl_stmt|;
name|path
operator|.
name|addRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"same rect"
argument_list|)
operator|<<
name|path
operator|<<
name|QRectF
argument_list|(
literal|0.1
argument_list|,
literal|0.1
argument_list|,
literal|99
argument_list|,
literal|99
argument_list|)
operator|<<
literal|true
expr_stmt|;
comment|// ###
name|QTest
operator|::
name|newRow
argument_list|(
literal|"outside"
argument_list|)
operator|<<
name|path
operator|<<
name|QRectF
argument_list|(
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"covers"
argument_list|)
operator|<<
name|path
operator|<<
name|QRectF
argument_list|(
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|102
argument_list|,
literal|102
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"left"
argument_list|)
operator|<<
name|path
operator|<<
name|QRectF
argument_list|(
operator|-
literal|10
argument_list|,
literal|50
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"top"
argument_list|)
operator|<<
name|path
operator|<<
name|QRectF
argument_list|(
literal|50
argument_list|,
operator|-
literal|10
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"right"
argument_list|)
operator|<<
name|path
operator|<<
name|QRectF
argument_list|(
literal|110
argument_list|,
literal|50
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"bottom"
argument_list|)
operator|<<
name|path
operator|<<
name|QRectF
argument_list|(
literal|50
argument_list|,
literal|110
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|path
operator|.
name|addRect
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"r1 top"
argument_list|)
operator|<<
name|path
operator|<<
name|QRectF
argument_list|(
literal|0.1
argument_list|,
literal|0.1
argument_list|,
literal|99
argument_list|,
literal|49
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"r1 left"
argument_list|)
operator|<<
name|path
operator|<<
name|QRectF
argument_list|(
literal|0.1
argument_list|,
literal|0.1
argument_list|,
literal|49
argument_list|,
literal|99
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"r2 right"
argument_list|)
operator|<<
name|path
operator|<<
name|QRectF
argument_list|(
literal|100.01
argument_list|,
literal|50.1
argument_list|,
literal|49
argument_list|,
literal|99
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"r2 bottom"
argument_list|)
operator|<<
name|path
operator|<<
name|QRectF
argument_list|(
literal|50.1
argument_list|,
literal|100.1
argument_list|,
literal|99
argument_list|,
literal|49
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"inside 2 rects"
argument_list|)
operator|<<
name|path
operator|<<
name|QRectF
argument_list|(
literal|51
argument_list|,
literal|51
argument_list|,
literal|48
argument_list|,
literal|48
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"topRight 2 rects"
argument_list|)
operator|<<
name|path
operator|<<
name|QRectF
argument_list|(
literal|100
argument_list|,
literal|0
argument_list|,
literal|49
argument_list|,
literal|49
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"bottomLeft 2 rects"
argument_list|)
operator|<<
name|path
operator|<<
name|QRectF
argument_list|(
literal|0
argument_list|,
literal|100
argument_list|,
literal|49
argument_list|,
literal|49
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|path
operator|.
name|setFillRule
argument_list|(
name|Qt
operator|::
name|WindingFill
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"inside 2 rects (winding)"
argument_list|)
operator|<<
name|path
operator|<<
name|QRectF
argument_list|(
literal|51
argument_list|,
literal|51
argument_list|,
literal|48
argument_list|,
literal|48
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|path
operator|.
name|addEllipse
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|150
argument_list|,
literal|150
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"topRight 2 rects"
argument_list|)
operator|<<
name|path
operator|<<
name|QRectF
argument_list|(
literal|100
argument_list|,
literal|25
argument_list|,
literal|24
argument_list|,
literal|24
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"bottomLeft 2 rects"
argument_list|)
operator|<<
name|path
operator|<<
name|QRectF
argument_list|(
literal|25
argument_list|,
literal|100
argument_list|,
literal|24
argument_list|,
literal|24
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|path
operator|.
name|setFillRule
argument_list|(
name|Qt
operator|::
name|OddEvenFill
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"inside 2 rects"
argument_list|)
operator|<<
name|path
operator|<<
name|QRectF
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|49
argument_list|,
literal|49
argument_list|)
operator|<<
literal|false
expr_stmt|;
block|}
end_function
begin_function
DECL|function|contains_QRectF
name|void
name|tst_QPainterPath
operator|::
name|contains_QRectF
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QPainterPath
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QRectF
argument_list|,
name|rect
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|contained
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|path
operator|.
name|contains
argument_list|(
name|rect
argument_list|)
argument_list|,
name|contained
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|rectPath
specifier|static
specifier|inline
name|QPainterPath
name|rectPath
parameter_list|(
name|qreal
name|x
parameter_list|,
name|qreal
name|y
parameter_list|,
name|qreal
name|w
parameter_list|,
name|qreal
name|h
parameter_list|)
block|{
name|QPainterPath
name|path
decl_stmt|;
name|path
operator|.
name|addRect
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|w
argument_list|,
name|h
argument_list|)
expr_stmt|;
name|path
operator|.
name|closeSubpath
argument_list|()
expr_stmt|;
return|return
name|path
return|;
block|}
end_function
begin_function
DECL|function|ellipsePath
specifier|static
specifier|inline
name|QPainterPath
name|ellipsePath
parameter_list|(
name|qreal
name|x
parameter_list|,
name|qreal
name|y
parameter_list|,
name|qreal
name|w
parameter_list|,
name|qreal
name|h
parameter_list|)
block|{
name|QPainterPath
name|path
decl_stmt|;
name|path
operator|.
name|addEllipse
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|w
argument_list|,
name|h
argument_list|)
expr_stmt|;
name|path
operator|.
name|closeSubpath
argument_list|()
expr_stmt|;
return|return
name|path
return|;
block|}
end_function
begin_function
DECL|function|linePath
specifier|static
specifier|inline
name|QPainterPath
name|linePath
parameter_list|(
name|qreal
name|x1
parameter_list|,
name|qreal
name|y1
parameter_list|,
name|qreal
name|x2
parameter_list|,
name|qreal
name|y2
parameter_list|)
block|{
name|QPainterPath
name|path
decl_stmt|;
name|path
operator|.
name|moveTo
argument_list|(
name|x1
argument_list|,
name|y1
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|x2
argument_list|,
name|y2
argument_list|)
expr_stmt|;
return|return
name|path
return|;
block|}
end_function
begin_function
DECL|function|intersects_QRectF_data
name|void
name|tst_QPainterPath
operator|::
name|intersects_QRectF_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QPainterPath
argument_list|>
argument_list|(
literal|"path"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QRectF
argument_list|>
argument_list|(
literal|"rect"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"intersects"
argument_list|)
expr_stmt|;
name|QPainterPath
name|path
decl_stmt|;
name|path
operator|.
name|addRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"same rect"
argument_list|)
operator|<<
name|path
operator|<<
name|QRectF
argument_list|(
literal|0.1
argument_list|,
literal|0.1
argument_list|,
literal|99
argument_list|,
literal|99
argument_list|)
operator|<<
literal|true
expr_stmt|;
comment|// ###
name|QTest
operator|::
name|newRow
argument_list|(
literal|"outside"
argument_list|)
operator|<<
name|path
operator|<<
name|QRectF
argument_list|(
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"covers"
argument_list|)
operator|<<
name|path
operator|<<
name|QRectF
argument_list|(
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|102
argument_list|,
literal|102
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"left"
argument_list|)
operator|<<
name|path
operator|<<
name|QRectF
argument_list|(
operator|-
literal|10
argument_list|,
literal|50
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"top"
argument_list|)
operator|<<
name|path
operator|<<
name|QRectF
argument_list|(
literal|50
argument_list|,
operator|-
literal|10
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"right"
argument_list|)
operator|<<
name|path
operator|<<
name|QRectF
argument_list|(
literal|110
argument_list|,
literal|50
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"bottom"
argument_list|)
operator|<<
name|path
operator|<<
name|QRectF
argument_list|(
literal|50
argument_list|,
literal|110
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|path
operator|.
name|addRect
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"r1 top"
argument_list|)
operator|<<
name|path
operator|<<
name|QRectF
argument_list|(
literal|0.1
argument_list|,
literal|0.1
argument_list|,
literal|99
argument_list|,
literal|49
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"r1 left"
argument_list|)
operator|<<
name|path
operator|<<
name|QRectF
argument_list|(
literal|0.1
argument_list|,
literal|0.1
argument_list|,
literal|49
argument_list|,
literal|99
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"r2 right"
argument_list|)
operator|<<
name|path
operator|<<
name|QRectF
argument_list|(
literal|100.01
argument_list|,
literal|50.1
argument_list|,
literal|49
argument_list|,
literal|99
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"r2 bottom"
argument_list|)
operator|<<
name|path
operator|<<
name|QRectF
argument_list|(
literal|50.1
argument_list|,
literal|100.1
argument_list|,
literal|99
argument_list|,
literal|49
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"inside 2 rects"
argument_list|)
operator|<<
name|path
operator|<<
name|QRectF
argument_list|(
literal|51
argument_list|,
literal|51
argument_list|,
literal|48
argument_list|,
literal|48
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|path
operator|.
name|setFillRule
argument_list|(
name|Qt
operator|::
name|WindingFill
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"inside 2 rects (winding)"
argument_list|)
operator|<<
name|path
operator|<<
name|QRectF
argument_list|(
literal|51
argument_list|,
literal|51
argument_list|,
literal|48
argument_list|,
literal|48
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|path
operator|.
name|addEllipse
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|150
argument_list|,
literal|150
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"topRight 2 rects"
argument_list|)
operator|<<
name|path
operator|<<
name|QRectF
argument_list|(
literal|100
argument_list|,
literal|25
argument_list|,
literal|24
argument_list|,
literal|24
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"bottomLeft 2 rects"
argument_list|)
operator|<<
name|path
operator|<<
name|QRectF
argument_list|(
literal|25
argument_list|,
literal|100
argument_list|,
literal|24
argument_list|,
literal|24
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"horizontal line"
argument_list|)
operator|<<
name|linePath
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|0
argument_list|)
operator|<<
name|QRectF
argument_list|(
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"vertical line"
argument_list|)
operator|<<
name|linePath
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
operator|<<
name|QRectF
argument_list|(
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|path
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|path
operator|.
name|addEllipse
argument_list|(
name|QRectF
argument_list|(
operator|-
literal|5000.0
argument_list|,
operator|-
literal|5000.0
argument_list|,
literal|1500000.0
argument_list|,
literal|1500000.0
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"huge ellipse, qreal=float crash"
argument_list|)
operator|<<
name|path
operator|<<
name|QRectF
argument_list|(
literal|1100000.35
argument_list|,
literal|1098000.2
argument_list|,
literal|1500000.0
argument_list|,
literal|1500000.0
argument_list|)
operator|<<
literal|true
expr_stmt|;
block|}
end_function
begin_function
DECL|function|intersects_QRectF
name|void
name|tst_QPainterPath
operator|::
name|intersects_QRectF
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QPainterPath
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QRectF
argument_list|,
name|rect
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|intersects
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|path
operator|.
name|intersects
argument_list|(
name|rect
argument_list|)
argument_list|,
name|intersects
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testContainsAndIntersects_data
name|void
name|tst_QPainterPath
operator|::
name|testContainsAndIntersects_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QPainterPath
argument_list|>
argument_list|(
literal|"path"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QPainterPath
argument_list|>
argument_list|(
literal|"candidate"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"contained"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"intersects"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rect vs small ellipse (upper left)"
argument_list|)
operator|<<
name|rectPath
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|ellipsePath
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rect vs small ellipse (upper right)"
argument_list|)
operator|<<
name|rectPath
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|ellipsePath
argument_list|(
literal|50
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rect vs small ellipse (lower right)"
argument_list|)
operator|<<
name|rectPath
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|ellipsePath
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rect vs small ellipse (lower left)"
argument_list|)
operator|<<
name|rectPath
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|ellipsePath
argument_list|(
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rect vs small ellipse (centered)"
argument_list|)
operator|<<
name|rectPath
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|ellipsePath
argument_list|(
literal|25
argument_list|,
literal|25
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rect vs equal ellipse"
argument_list|)
operator|<<
name|rectPath
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|ellipsePath
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rect vs big ellipse"
argument_list|)
operator|<<
name|rectPath
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|ellipsePath
argument_list|(
operator|-
literal|10
argument_list|,
operator|-
literal|10
argument_list|,
literal|120
argument_list|,
literal|120
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QPainterPath
name|twoEllipses
init|=
name|ellipsePath
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
operator|.
name|united
argument_list|(
name|ellipsePath
argument_list|(
literal|200
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rect vs two small ellipses"
argument_list|)
operator|<<
name|rectPath
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|ellipsePath
argument_list|(
literal|25
argument_list|,
literal|25
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
operator|.
name|united
argument_list|(
name|ellipsePath
argument_list|(
literal|225
argument_list|,
literal|25
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rect vs two equal ellipses"
argument_list|)
operator|<<
name|rectPath
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|twoEllipses
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rect vs self"
argument_list|)
operator|<<
name|rectPath
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|rectPath
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ellipse vs self"
argument_list|)
operator|<<
name|ellipsePath
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|ellipsePath
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QPainterPath
name|twoRects
init|=
name|rectPath
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
operator|.
name|united
argument_list|(
name|rectPath
argument_list|(
literal|200
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"two rects vs small ellipse (upper left)"
argument_list|)
operator|<<
name|twoRects
operator|<<
name|ellipsePath
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"two rects vs small ellipse (upper right)"
argument_list|)
operator|<<
name|twoRects
operator|<<
name|ellipsePath
argument_list|(
literal|50
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"two rects vs small ellipse (lower right)"
argument_list|)
operator|<<
name|twoRects
operator|<<
name|ellipsePath
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"two rects vs small ellipse (lower left)"
argument_list|)
operator|<<
name|twoRects
operator|<<
name|ellipsePath
argument_list|(
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"two rects vs small ellipse (centered)"
argument_list|)
operator|<<
name|twoRects
operator|<<
name|ellipsePath
argument_list|(
literal|25
argument_list|,
literal|25
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"two rects vs equal ellipse"
argument_list|)
operator|<<
name|twoRects
operator|<<
name|ellipsePath
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"two rects vs big ellipse"
argument_list|)
operator|<<
name|twoRects
operator|<<
name|ellipsePath
argument_list|(
operator|-
literal|10
argument_list|,
operator|-
literal|10
argument_list|,
literal|120
argument_list|,
literal|120
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"two rects vs two small ellipses"
argument_list|)
operator|<<
name|twoRects
operator|<<
name|ellipsePath
argument_list|(
literal|25
argument_list|,
literal|25
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
operator|.
name|united
argument_list|(
name|ellipsePath
argument_list|(
literal|225
argument_list|,
literal|25
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"two rects vs two equal ellipses"
argument_list|)
operator|<<
name|twoRects
operator|<<
name|ellipsePath
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
operator|.
name|united
argument_list|(
name|ellipsePath
argument_list|(
literal|200
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"two rects vs self"
argument_list|)
operator|<<
name|twoRects
operator|<<
name|twoRects
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"two ellipses vs self"
argument_list|)
operator|<<
name|twoEllipses
operator|<<
name|twoEllipses
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QPainterPath
name|windingRect
init|=
name|rectPath
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
decl_stmt|;
name|windingRect
operator|.
name|addRect
argument_list|(
literal|25
argument_list|,
literal|25
argument_list|,
literal|100
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|windingRect
operator|.
name|setFillRule
argument_list|(
name|Qt
operator|::
name|WindingFill
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rect with winding rule vs tall rect"
argument_list|)
operator|<<
name|windingRect
operator|<<
name|rectPath
argument_list|(
literal|40
argument_list|,
literal|20
argument_list|,
literal|20
argument_list|,
literal|60
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rect with winding rule vs self"
argument_list|)
operator|<<
name|windingRect
operator|<<
name|windingRect
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QPainterPath
name|thickFrame
init|=
name|rectPath
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
operator|.
name|subtracted
argument_list|(
name|rectPath
argument_list|(
literal|25
argument_list|,
literal|25
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|)
decl_stmt|;
name|QPainterPath
name|thinFrame
init|=
name|rectPath
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|80
argument_list|,
literal|80
argument_list|)
operator|.
name|subtracted
argument_list|(
name|rectPath
argument_list|(
literal|15
argument_list|,
literal|15
argument_list|,
literal|70
argument_list|,
literal|70
argument_list|)
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"thin frame in thick frame"
argument_list|)
operator|<<
name|thickFrame
operator|<<
name|thinFrame
operator|<<
literal|true
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rect in thick frame"
argument_list|)
operator|<<
name|thickFrame
operator|<<
name|rectPath
argument_list|(
literal|40
argument_list|,
literal|40
argument_list|,
literal|20
argument_list|,
literal|20
argument_list|)
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rect in thin frame"
argument_list|)
operator|<<
name|thinFrame
operator|<<
name|rectPath
argument_list|(
literal|40
argument_list|,
literal|40
argument_list|,
literal|20
argument_list|,
literal|20
argument_list|)
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
name|QPainterPath
name|ellipses
decl_stmt|;
name|ellipses
operator|.
name|addEllipse
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|ellipses
operator|.
name|addEllipse
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|ellipses
operator|.
name|setFillRule
argument_list|(
name|Qt
operator|::
name|WindingFill
argument_list|)
expr_stmt|;
comment|// the definition of QPainterPath::intersects() and contains() is fill-area based,
name|QTest
operator|::
name|newRow
argument_list|(
literal|"line in rect"
argument_list|)
operator|<<
name|rectPath
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|linePath
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|90
argument_list|,
literal|90
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"horizontal line in rect"
argument_list|)
operator|<<
name|rectPath
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|linePath
argument_list|(
literal|10
argument_list|,
literal|50
argument_list|,
literal|90
argument_list|,
literal|50
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"vertical line in rect"
argument_list|)
operator|<<
name|rectPath
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|linePath
argument_list|(
literal|50
argument_list|,
literal|10
argument_list|,
literal|50
argument_list|,
literal|90
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"line through rect"
argument_list|)
operator|<<
name|rectPath
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|linePath
argument_list|(
operator|-
literal|10
argument_list|,
operator|-
literal|10
argument_list|,
literal|110
argument_list|,
literal|110
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"line through rect 2"
argument_list|)
operator|<<
name|rectPath
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|linePath
argument_list|(
operator|-
literal|10
argument_list|,
literal|0
argument_list|,
literal|110
argument_list|,
literal|100
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"line through rect 3"
argument_list|)
operator|<<
name|rectPath
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|linePath
argument_list|(
literal|5
argument_list|,
literal|10
argument_list|,
literal|110
argument_list|,
literal|100
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"line through rect 4"
argument_list|)
operator|<<
name|rectPath
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|linePath
argument_list|(
operator|-
literal|10
argument_list|,
literal|0
argument_list|,
literal|90
argument_list|,
literal|90
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"horizontal line through rect"
argument_list|)
operator|<<
name|rectPath
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|linePath
argument_list|(
operator|-
literal|10
argument_list|,
literal|50
argument_list|,
literal|110
argument_list|,
literal|50
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"vertical line through rect"
argument_list|)
operator|<<
name|rectPath
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|linePath
argument_list|(
literal|50
argument_list|,
operator|-
literal|10
argument_list|,
literal|50
argument_list|,
literal|110
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"line vs line"
argument_list|)
operator|<<
name|linePath
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
name|linePath
argument_list|(
literal|10
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"line in rect with hole"
argument_list|)
operator|<<
name|rectPath
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
operator|.
name|subtracted
argument_list|(
name|rectPath
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
literal|6
argument_list|,
literal|6
argument_list|)
argument_list|)
operator|<<
name|linePath
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|,
literal|6
argument_list|,
literal|6
argument_list|)
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"line in ellipse"
argument_list|)
operator|<<
name|ellipses
operator|<<
name|linePath
argument_list|(
literal|3
argument_list|,
literal|5
argument_list|,
literal|7
argument_list|,
literal|5
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"line in ellipse 2"
argument_list|)
operator|<<
name|ellipses
operator|<<
name|linePath
argument_list|(
literal|4.5
argument_list|,
literal|5
argument_list|,
literal|5.5
argument_list|,
literal|5
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"winding ellipse"
argument_list|)
operator|<<
name|ellipses
operator|<<
name|ellipsePath
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"winding ellipse 2"
argument_list|)
operator|<<
name|ellipses
operator|<<
name|ellipsePath
argument_list|(
literal|4.5
argument_list|,
literal|4.5
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
expr_stmt|;
name|ellipses
operator|.
name|setFillRule
argument_list|(
name|Qt
operator|::
name|OddEvenFill
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"odd even ellipse"
argument_list|)
operator|<<
name|ellipses
operator|<<
name|ellipsePath
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"odd even ellipse 2"
argument_list|)
operator|<<
name|ellipses
operator|<<
name|ellipsePath
argument_list|(
literal|4.5
argument_list|,
literal|4.5
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testContainsAndIntersects
name|void
name|tst_QPainterPath
operator|::
name|testContainsAndIntersects
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QPainterPath
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QPainterPath
argument_list|,
name|candidate
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|contained
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|intersects
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|path
operator|.
name|intersects
argument_list|(
name|candidate
argument_list|)
argument_list|,
name|intersects
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|path
operator|.
name|contains
argument_list|(
name|candidate
argument_list|)
argument_list|,
name|contained
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testSimplified_data
name|void
name|tst_QPainterPath
operator|::
name|testSimplified_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QPainterPath
argument_list|>
argument_list|(
literal|"path"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"elements"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rect"
argument_list|)
operator|<<
name|rectPath
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
literal|5
expr_stmt|;
name|QPainterPath
name|twoRects
init|=
name|rectPath
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|twoRects
operator|.
name|addPath
argument_list|(
name|rectPath
argument_list|(
literal|5
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"two rects (odd)"
argument_list|)
operator|<<
name|twoRects
operator|<<
literal|10
expr_stmt|;
name|twoRects
operator|.
name|setFillRule
argument_list|(
name|Qt
operator|::
name|WindingFill
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"two rects (winding)"
argument_list|)
operator|<<
name|twoRects
operator|<<
literal|5
expr_stmt|;
name|QPainterPath
name|threeSteps
init|=
name|rectPath
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|threeSteps
operator|.
name|addPath
argument_list|(
name|rectPath
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|,
literal|20
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|threeSteps
operator|.
name|addPath
argument_list|(
name|rectPath
argument_list|(
literal|0
argument_list|,
literal|20
argument_list|,
literal|30
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"three rects (steps)"
argument_list|)
operator|<<
name|threeSteps
operator|<<
literal|9
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testSimplified
name|void
name|tst_QPainterPath
operator|::
name|testSimplified
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QPainterPath
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|elements
argument_list|)
expr_stmt|;
name|QPainterPath
name|simplified
init|=
name|path
operator|.
name|simplified
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|simplified
operator|.
name|elementCount
argument_list|()
argument_list|,
name|elements
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|simplified
operator|.
name|subtracted
argument_list|(
name|path
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path
operator|.
name|subtracted
argument_list|(
name|simplified
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testStroker_data
name|void
name|tst_QPainterPath
operator|::
name|testStroker_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QPainterPath
argument_list|>
argument_list|(
literal|"path"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QPen
argument_list|>
argument_list|(
literal|"pen"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QPainterPath
argument_list|>
argument_list|(
literal|"stroke"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"line 1"
argument_list|)
operator|<<
name|linePath
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
literal|10
argument_list|,
literal|2
argument_list|)
operator|<<
name|QPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|,
literal|2
argument_list|,
name|Qt
operator|::
name|SolidLine
argument_list|,
name|Qt
operator|::
name|FlatCap
argument_list|)
operator|<<
name|rectPath
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|,
literal|8
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"line 2"
argument_list|)
operator|<<
name|linePath
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
literal|10
argument_list|,
literal|2
argument_list|)
operator|<<
name|QPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|,
literal|2
argument_list|,
name|Qt
operator|::
name|SolidLine
argument_list|,
name|Qt
operator|::
name|SquareCap
argument_list|)
operator|<<
name|rectPath
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|10
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rect"
argument_list|)
operator|<<
name|rectPath
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|8
argument_list|,
literal|8
argument_list|)
operator|<<
name|QPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|,
literal|2
argument_list|,
name|Qt
operator|::
name|SolidLine
argument_list|,
name|Qt
operator|::
name|SquareCap
argument_list|,
name|Qt
operator|::
name|MiterJoin
argument_list|)
operator|<<
name|rectPath
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
operator|.
name|subtracted
argument_list|(
name|rectPath
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
literal|6
argument_list|,
literal|6
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"dotted line"
argument_list|)
operator|<<
name|linePath
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|0
argument_list|)
operator|<<
name|QPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|,
literal|2
argument_list|,
name|Qt
operator|::
name|DotLine
argument_list|)
operator|<<
name|rectPath
argument_list|(
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|4
argument_list|,
literal|2
argument_list|)
operator|.
name|united
argument_list|(
name|rectPath
argument_list|(
literal|5
argument_list|,
operator|-
literal|1
argument_list|,
literal|4
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testStroker
name|void
name|tst_QPainterPath
operator|::
name|testStroker
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QPainterPath
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QPen
argument_list|,
name|pen
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QPainterPath
argument_list|,
name|stroke
argument_list|)
expr_stmt|;
name|QPainterPathStroker
name|stroker
decl_stmt|;
name|stroker
operator|.
name|setWidth
argument_list|(
name|pen
operator|.
name|widthF
argument_list|()
argument_list|)
expr_stmt|;
name|stroker
operator|.
name|setCapStyle
argument_list|(
name|pen
operator|.
name|capStyle
argument_list|()
argument_list|)
expr_stmt|;
name|stroker
operator|.
name|setJoinStyle
argument_list|(
name|pen
operator|.
name|joinStyle
argument_list|()
argument_list|)
expr_stmt|;
name|stroker
operator|.
name|setMiterLimit
argument_list|(
name|pen
operator|.
name|miterLimit
argument_list|()
argument_list|)
expr_stmt|;
name|stroker
operator|.
name|setDashPattern
argument_list|(
name|pen
operator|.
name|style
argument_list|()
argument_list|)
expr_stmt|;
name|stroker
operator|.
name|setDashOffset
argument_list|(
name|pen
operator|.
name|dashOffset
argument_list|()
argument_list|)
expr_stmt|;
name|QPainterPath
name|result
init|=
name|stroker
operator|.
name|createStroke
argument_list|(
name|path
argument_list|)
decl_stmt|;
comment|// check if stroke == result
name|QVERIFY
argument_list|(
name|result
operator|.
name|subtracted
argument_list|(
name|stroke
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|stroke
operator|.
name|subtracted
argument_list|(
name|result
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testOperatorEquals
name|void
name|tst_QPainterPath
operator|::
name|testOperatorEquals
parameter_list|()
block|{
name|QPainterPath
name|empty1
decl_stmt|;
name|QPainterPath
name|empty2
decl_stmt|;
name|QVERIFY
argument_list|(
name|empty1
operator|==
name|empty2
argument_list|)
expr_stmt|;
name|QPainterPath
name|rect1
decl_stmt|;
name|rect1
operator|.
name|addRect
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|rect1
operator|==
name|rect1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|rect1
operator|!=
name|empty1
argument_list|)
expr_stmt|;
name|QPainterPath
name|rect2
decl_stmt|;
name|rect2
operator|.
name|addRect
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|rect1
operator|==
name|rect2
argument_list|)
expr_stmt|;
name|rect2
operator|.
name|setFillRule
argument_list|(
name|Qt
operator|::
name|WindingFill
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|rect1
operator|!=
name|rect2
argument_list|)
expr_stmt|;
name|QPainterPath
name|ellipse1
decl_stmt|;
name|ellipse1
operator|.
name|addEllipse
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|rect1
operator|!=
name|ellipse1
argument_list|)
expr_stmt|;
name|QPainterPath
name|ellipse2
decl_stmt|;
name|ellipse2
operator|.
name|addEllipse
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|ellipse1
operator|==
name|ellipse2
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testOperatorEquals_fuzzy
name|void
name|tst_QPainterPath
operator|::
name|testOperatorEquals_fuzzy
parameter_list|()
block|{
comment|// if operator== returns true for two paths it should
comment|// also return true when the same transform is applied to both paths
block|{
name|QRectF
name|a
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
literal|50
argument_list|)
decl_stmt|;
name|QRectF
name|b
init|=
name|a
operator|.
name|translated
argument_list|(
literal|1e-14
argument_list|,
literal|1e-14
argument_list|)
decl_stmt|;
name|QPainterPath
name|pa
decl_stmt|;
name|pa
operator|.
name|addRect
argument_list|(
name|a
argument_list|)
expr_stmt|;
name|QPainterPath
name|pb
decl_stmt|;
name|pb
operator|.
name|addRect
argument_list|(
name|b
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|pa
operator|==
name|pb
argument_list|)
expr_stmt|;
name|QTransform
name|transform
decl_stmt|;
name|transform
operator|.
name|translate
argument_list|(
operator|-
literal|100
argument_list|,
operator|-
literal|100
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|transform
operator|.
name|map
argument_list|(
name|pa
argument_list|)
operator|==
name|transform
operator|.
name|map
argument_list|(
name|pb
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// higher tolerance for error when path's bounding rect is big
block|{
name|QRectF
name|a
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|1e6
argument_list|,
literal|0.5e6
argument_list|)
decl_stmt|;
name|QRectF
name|b
init|=
name|a
operator|.
name|translated
argument_list|(
literal|1e-7
argument_list|,
literal|1e-7
argument_list|)
decl_stmt|;
name|QPainterPath
name|pa
decl_stmt|;
name|pa
operator|.
name|addRect
argument_list|(
name|a
argument_list|)
expr_stmt|;
name|QPainterPath
name|pb
decl_stmt|;
name|pb
operator|.
name|addRect
argument_list|(
name|b
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|pa
operator|==
name|pb
argument_list|)
expr_stmt|;
name|QTransform
name|transform
decl_stmt|;
name|transform
operator|.
name|translate
argument_list|(
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|transform
operator|.
name|map
argument_list|(
name|pa
argument_list|)
operator|==
name|transform
operator|.
name|map
argument_list|(
name|pb
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// operator== should return true for a path that has
comment|// been transformed and then inverse transformed
block|{
name|QPainterPath
name|a
decl_stmt|;
name|a
operator|.
name|addRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QTransform
name|transform
decl_stmt|;
name|transform
operator|.
name|translate
argument_list|(
literal|100
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|transform
operator|.
name|scale
argument_list|(
literal|1.5
argument_list|,
literal|1.5
argument_list|)
expr_stmt|;
name|QPainterPath
name|b
init|=
name|transform
operator|.
name|inverted
argument_list|()
operator|.
name|map
argument_list|(
name|transform
operator|.
name|map
argument_list|(
name|a
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|a
operator|==
name|b
argument_list|)
expr_stmt|;
block|}
block|{
name|QPainterPath
name|a
decl_stmt|;
name|a
operator|.
name|lineTo
argument_list|(
literal|10
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|a
operator|.
name|lineTo
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|a
operator|.
name|lineTo
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QPainterPath
name|b
decl_stmt|;
name|b
operator|.
name|lineTo
argument_list|(
literal|10
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|b
operator|.
name|moveTo
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|b
operator|.
name|lineTo
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|a
operator|!=
name|b
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|testOperatorDatastream
name|void
name|tst_QPainterPath
operator|::
name|testOperatorDatastream
parameter_list|()
block|{
name|QPainterPath
name|path
decl_stmt|;
name|path
operator|.
name|addEllipse
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|path
operator|.
name|addRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|path
operator|.
name|setFillRule
argument_list|(
name|Qt
operator|::
name|WindingFill
argument_list|)
expr_stmt|;
comment|// Write out
block|{
name|QFile
name|data
argument_list|(
literal|"data"
argument_list|)
decl_stmt|;
name|bool
name|ok
init|=
name|data
operator|.
name|open
argument_list|(
name|QFile
operator|::
name|WriteOnly
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|ok
argument_list|)
expr_stmt|;
name|QDataStream
name|stream
argument_list|(
operator|&
name|data
argument_list|)
decl_stmt|;
name|stream
operator|<<
name|path
expr_stmt|;
block|}
name|QPainterPath
name|other
decl_stmt|;
comment|// Read in
block|{
name|QFile
name|data
argument_list|(
literal|"data"
argument_list|)
decl_stmt|;
name|bool
name|ok
init|=
name|data
operator|.
name|open
argument_list|(
name|QFile
operator|::
name|ReadOnly
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|ok
argument_list|)
expr_stmt|;
name|QDataStream
name|stream
argument_list|(
operator|&
name|data
argument_list|)
decl_stmt|;
name|stream
operator|>>
name|other
expr_stmt|;
block|}
name|QVERIFY
argument_list|(
name|other
operator|==
name|path
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|closing
name|void
name|tst_QPainterPath
operator|::
name|closing
parameter_list|()
block|{
comment|// lineto's
block|{
name|QPainterPath
name|triangle
argument_list|(
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
decl_stmt|;
name|triangle
operator|.
name|lineTo
argument_list|(
literal|200
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|triangle
operator|.
name|lineTo
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|triangle
operator|.
name|elementCount
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
comment|//add this line to make sure closeSubpath() also calls detach() and detached properly
name|QPainterPath
name|copied
init|=
name|triangle
decl_stmt|;
name|triangle
operator|.
name|closeSubpath
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|copied
operator|.
name|elementCount
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|triangle
operator|.
name|elementCount
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|triangle
operator|.
name|elementAt
argument_list|(
literal|3
argument_list|)
operator|.
name|type
argument_list|,
name|QPainterPath
operator|::
name|LineToElement
argument_list|)
expr_stmt|;
name|triangle
operator|.
name|moveTo
argument_list|(
literal|300
argument_list|,
literal|300
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|triangle
operator|.
name|elementCount
argument_list|()
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|triangle
operator|.
name|elementAt
argument_list|(
literal|4
argument_list|)
operator|.
name|type
argument_list|,
name|QPainterPath
operator|::
name|MoveToElement
argument_list|)
expr_stmt|;
name|triangle
operator|.
name|lineTo
argument_list|(
literal|400
argument_list|,
literal|300
argument_list|)
expr_stmt|;
name|triangle
operator|.
name|lineTo
argument_list|(
literal|400
argument_list|,
literal|400
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|triangle
operator|.
name|elementCount
argument_list|()
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|triangle
operator|.
name|closeSubpath
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|triangle
operator|.
name|elementCount
argument_list|()
argument_list|,
literal|8
argument_list|)
expr_stmt|;
comment|// this will should trigger implicit moveto...
name|triangle
operator|.
name|lineTo
argument_list|(
literal|600
argument_list|,
literal|300
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|triangle
operator|.
name|elementCount
argument_list|()
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|triangle
operator|.
name|elementAt
argument_list|(
literal|8
argument_list|)
operator|.
name|type
argument_list|,
name|QPainterPath
operator|::
name|MoveToElement
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|triangle
operator|.
name|elementAt
argument_list|(
literal|9
argument_list|)
operator|.
name|type
argument_list|,
name|QPainterPath
operator|::
name|LineToElement
argument_list|)
expr_stmt|;
name|triangle
operator|.
name|lineTo
argument_list|(
literal|600
argument_list|,
literal|700
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|triangle
operator|.
name|elementCount
argument_list|()
argument_list|,
literal|11
argument_list|)
expr_stmt|;
block|}
comment|// curveto's
block|{
name|QPainterPath
name|curves
argument_list|(
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
decl_stmt|;
name|curves
operator|.
name|cubicTo
argument_list|(
literal|200
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|curves
operator|.
name|elementCount
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|curves
operator|.
name|closeSubpath
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|curves
operator|.
name|elementCount
argument_list|()
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|curves
operator|.
name|elementAt
argument_list|(
literal|4
argument_list|)
operator|.
name|type
argument_list|,
name|QPainterPath
operator|::
name|LineToElement
argument_list|)
expr_stmt|;
name|curves
operator|.
name|moveTo
argument_list|(
literal|300
argument_list|,
literal|300
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|curves
operator|.
name|elementCount
argument_list|()
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|curves
operator|.
name|elementAt
argument_list|(
literal|5
argument_list|)
operator|.
name|type
argument_list|,
name|QPainterPath
operator|::
name|MoveToElement
argument_list|)
expr_stmt|;
name|curves
operator|.
name|cubicTo
argument_list|(
literal|400
argument_list|,
literal|300
argument_list|,
literal|300
argument_list|,
literal|400
argument_list|,
literal|400
argument_list|,
literal|400
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|curves
operator|.
name|elementCount
argument_list|()
argument_list|,
literal|9
argument_list|)
expr_stmt|;
name|curves
operator|.
name|closeSubpath
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|curves
operator|.
name|elementCount
argument_list|()
argument_list|,
literal|10
argument_list|)
expr_stmt|;
comment|// should trigger implicit moveto..
name|curves
operator|.
name|cubicTo
argument_list|(
literal|100
argument_list|,
literal|800
argument_list|,
literal|800
argument_list|,
literal|100
argument_list|,
literal|800
argument_list|,
literal|800
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|curves
operator|.
name|elementCount
argument_list|()
argument_list|,
literal|14
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|curves
operator|.
name|elementAt
argument_list|(
literal|10
argument_list|)
operator|.
name|type
argument_list|,
name|QPainterPath
operator|::
name|MoveToElement
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|curves
operator|.
name|elementAt
argument_list|(
literal|11
argument_list|)
operator|.
name|type
argument_list|,
name|QPainterPath
operator|::
name|CurveToElement
argument_list|)
expr_stmt|;
block|}
block|{
name|QPainterPath
name|rects
decl_stmt|;
name|rects
operator|.
name|addRect
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rects
operator|.
name|elementCount
argument_list|()
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rects
operator|.
name|elementAt
argument_list|(
literal|0
argument_list|)
operator|.
name|type
argument_list|,
name|QPainterPath
operator|::
name|MoveToElement
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rects
operator|.
name|elementAt
argument_list|(
literal|4
argument_list|)
operator|.
name|type
argument_list|,
name|QPainterPath
operator|::
name|LineToElement
argument_list|)
expr_stmt|;
name|rects
operator|.
name|addRect
argument_list|(
literal|300
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rects
operator|.
name|elementCount
argument_list|()
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rects
operator|.
name|elementAt
argument_list|(
literal|5
argument_list|)
operator|.
name|type
argument_list|,
name|QPainterPath
operator|::
name|MoveToElement
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rects
operator|.
name|elementAt
argument_list|(
literal|9
argument_list|)
operator|.
name|type
argument_list|,
name|QPainterPath
operator|::
name|LineToElement
argument_list|)
expr_stmt|;
name|rects
operator|.
name|lineTo
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rects
operator|.
name|elementCount
argument_list|()
argument_list|,
literal|12
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rects
operator|.
name|elementAt
argument_list|(
literal|10
argument_list|)
operator|.
name|type
argument_list|,
name|QPainterPath
operator|::
name|MoveToElement
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rects
operator|.
name|elementAt
argument_list|(
literal|11
argument_list|)
operator|.
name|type
argument_list|,
name|QPainterPath
operator|::
name|LineToElement
argument_list|)
expr_stmt|;
block|}
block|{
name|QPainterPath
name|ellipses
decl_stmt|;
name|ellipses
operator|.
name|addEllipse
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ellipses
operator|.
name|elementCount
argument_list|()
argument_list|,
literal|13
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ellipses
operator|.
name|elementAt
argument_list|(
literal|0
argument_list|)
operator|.
name|type
argument_list|,
name|QPainterPath
operator|::
name|MoveToElement
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ellipses
operator|.
name|elementAt
argument_list|(
literal|10
argument_list|)
operator|.
name|type
argument_list|,
name|QPainterPath
operator|::
name|CurveToElement
argument_list|)
expr_stmt|;
name|ellipses
operator|.
name|addEllipse
argument_list|(
literal|300
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ellipses
operator|.
name|elementCount
argument_list|()
argument_list|,
literal|26
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ellipses
operator|.
name|elementAt
argument_list|(
literal|13
argument_list|)
operator|.
name|type
argument_list|,
name|QPainterPath
operator|::
name|MoveToElement
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ellipses
operator|.
name|elementAt
argument_list|(
literal|23
argument_list|)
operator|.
name|type
argument_list|,
name|QPainterPath
operator|::
name|CurveToElement
argument_list|)
expr_stmt|;
name|ellipses
operator|.
name|lineTo
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ellipses
operator|.
name|elementCount
argument_list|()
argument_list|,
literal|28
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ellipses
operator|.
name|elementAt
argument_list|(
literal|26
argument_list|)
operator|.
name|type
argument_list|,
name|QPainterPath
operator|::
name|MoveToElement
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ellipses
operator|.
name|elementAt
argument_list|(
literal|27
argument_list|)
operator|.
name|type
argument_list|,
name|QPainterPath
operator|::
name|LineToElement
argument_list|)
expr_stmt|;
block|}
block|{
name|QPainterPath
name|path
decl_stmt|;
name|path
operator|.
name|moveTo
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
literal|40
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
literal|25
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
literal|10
operator|+
literal|1e-13
argument_list|,
literal|10
operator|+
literal|1e-13
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|path
operator|.
name|elementCount
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|path
operator|.
name|closeSubpath
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|path
operator|.
name|elementCount
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|testArcMoveTo_data
name|void
name|tst_QPainterPath
operator|::
name|testArcMoveTo_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QRectF
argument_list|>
argument_list|(
literal|"rect"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|qreal
argument_list|>
argument_list|(
literal|"angle"
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|QRectF
argument_list|>
name|rects
decl_stmt|;
name|rects
operator|<<
name|QRectF
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|QRectF
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
operator|-
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|QRectF
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
operator|-
literal|100
argument_list|)
operator|<<
name|QRectF
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
operator|-
literal|100
argument_list|,
operator|-
literal|100
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|domain
init|=
literal|0
init|;
name|domain
operator|<
name|rects
operator|.
name|size
argument_list|()
condition|;
operator|++
name|domain
control|)
block|{
for|for
control|(
name|int
name|i
init|=
operator|-
literal|360
init|;
name|i
operator|<=
literal|360
condition|;
operator|++
name|i
control|)
block|{
name|QTest
operator|::
name|newRow
argument_list|(
name|qPrintable
argument_list|(
name|QString
argument_list|(
literal|"test %1 %2"
argument_list|)
operator|.
name|arg
argument_list|(
name|domain
argument_list|)
operator|.
name|arg
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
operator|<<
name|rects
operator|.
name|at
argument_list|(
name|domain
argument_list|)
operator|<<
operator|(
name|qreal
operator|)
name|i
expr_stmt|;
block|}
comment|// test low angles
name|QTest
operator|::
name|newRow
argument_list|(
literal|"low angles 1"
argument_list|)
operator|<<
name|rects
operator|.
name|at
argument_list|(
name|domain
argument_list|)
operator|<<
operator|(
name|qreal
operator|)
literal|1e-10
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"low angles 2"
argument_list|)
operator|<<
name|rects
operator|.
name|at
argument_list|(
name|domain
argument_list|)
operator|<<
operator|(
name|qreal
operator|)
operator|-
literal|1e-10
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|operators_data
name|void
name|tst_QPainterPath
operator|::
name|operators_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QPainterPath
argument_list|>
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QPainterPath
argument_list|>
argument_list|(
literal|"expected"
argument_list|)
expr_stmt|;
name|QPainterPath
name|a
decl_stmt|;
name|QPainterPath
name|b
decl_stmt|;
name|a
operator|.
name|addRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|b
operator|.
name|addRect
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"a& b"
argument_list|)
operator|<<
operator|(
name|a
operator|&
name|b
operator|)
operator|<<
name|a
operator|.
name|intersected
argument_list|(
name|b
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"a | b"
argument_list|)
operator|<<
operator|(
name|a
operator||
name|b
operator|)
operator|<<
name|a
operator|.
name|united
argument_list|(
name|b
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"a + b"
argument_list|)
operator|<<
operator|(
name|a
operator|+
name|b
operator|)
operator|<<
name|a
operator|.
name|united
argument_list|(
name|b
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"a - b"
argument_list|)
operator|<<
operator|(
name|a
operator|-
name|b
operator|)
operator|<<
name|a
operator|.
name|subtracted
argument_list|(
name|b
argument_list|)
expr_stmt|;
name|QPainterPath
name|c
init|=
name|a
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"a&= b"
argument_list|)
operator|<<
operator|(
name|a
operator|&=
name|b
operator|)
operator|<<
name|a
operator|.
name|intersected
argument_list|(
name|b
argument_list|)
expr_stmt|;
name|c
operator|=
name|a
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"a |= b"
argument_list|)
operator|<<
operator|(
name|a
operator||=
name|b
operator|)
operator|<<
name|a
operator|.
name|united
argument_list|(
name|b
argument_list|)
expr_stmt|;
name|c
operator|=
name|a
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"a += b"
argument_list|)
operator|<<
operator|(
name|a
operator|+=
name|b
operator|)
operator|<<
name|a
operator|.
name|united
argument_list|(
name|b
argument_list|)
expr_stmt|;
name|c
operator|=
name|a
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"a -= b"
argument_list|)
operator|<<
operator|(
name|a
operator|-=
name|b
operator|)
operator|<<
name|a
operator|.
name|subtracted
argument_list|(
name|b
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|operators
name|void
name|tst_QPainterPath
operator|::
name|operators
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QPainterPath
argument_list|,
name|test
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QPainterPath
argument_list|,
name|expected
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|test
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
end_function
begin_ifndef
ifndef|#
directive|ifndef
name|M_PI
end_ifndef
begin_define
DECL|macro|M_PI
define|#
directive|define
name|M_PI
value|3.14159265358979323846
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_define
DECL|macro|ANGLE
define|#
directive|define
name|ANGLE
parameter_list|(
name|t
parameter_list|)
value|((t) * 2 * M_PI / 360.0)
end_define
begin_function
DECL|function|pathFuzzyCompare
specifier|static
specifier|inline
name|bool
name|pathFuzzyCompare
parameter_list|(
name|double
name|p1
parameter_list|,
name|double
name|p2
parameter_list|)
block|{
return|return
name|qAbs
argument_list|(
name|p1
operator|-
name|p2
argument_list|)
operator|<
literal|0.001
return|;
block|}
end_function
begin_function
DECL|function|pathFuzzyCompare
specifier|static
specifier|inline
name|bool
name|pathFuzzyCompare
parameter_list|(
name|float
name|p1
parameter_list|,
name|float
name|p2
parameter_list|)
block|{
return|return
name|qAbs
argument_list|(
name|p1
operator|-
name|p2
argument_list|)
operator|<
literal|0.001
return|;
block|}
end_function
begin_function
DECL|function|testArcMoveTo
name|void
name|tst_QPainterPath
operator|::
name|testArcMoveTo
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QRectF
argument_list|,
name|rect
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|qreal
argument_list|,
name|angle
argument_list|)
expr_stmt|;
name|QPainterPath
name|path
decl_stmt|;
name|path
operator|.
name|arcMoveTo
argument_list|(
name|rect
argument_list|,
name|angle
argument_list|)
expr_stmt|;
name|path
operator|.
name|arcTo
argument_list|(
name|rect
argument_list|,
name|angle
argument_list|,
literal|30
argument_list|)
expr_stmt|;
name|path
operator|.
name|arcTo
argument_list|(
name|rect
argument_list|,
name|angle
operator|+
literal|30
argument_list|,
literal|30
argument_list|)
expr_stmt|;
name|QPointF
name|pos
init|=
name|path
operator|.
name|elementAt
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|(
name|path
operator|.
name|elementCount
argument_list|()
operator|-
literal|1
operator|)
operator|%
literal|3
operator|==
literal|0
argument_list|)
expr_stmt|;
name|qreal
name|x_radius
init|=
name|rect
operator|.
name|width
argument_list|()
operator|/
literal|2.0
decl_stmt|;
name|qreal
name|y_radius
init|=
name|rect
operator|.
name|height
argument_list|()
operator|/
literal|2.0
decl_stmt|;
name|QPointF
name|shouldBe
init|=
name|rect
operator|.
name|center
argument_list|()
operator|+
name|QPointF
argument_list|(
name|x_radius
operator|*
name|cos
argument_list|(
name|ANGLE
argument_list|(
name|angle
argument_list|)
argument_list|)
argument_list|,
operator|-
name|y_radius
operator|*
name|sin
argument_list|(
name|ANGLE
argument_list|(
name|angle
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|qreal
name|iw
init|=
literal|1
operator|/
name|rect
operator|.
name|width
argument_list|()
decl_stmt|;
name|qreal
name|ih
init|=
literal|1
operator|/
name|rect
operator|.
name|height
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|pathFuzzyCompare
argument_list|(
name|pos
operator|.
name|x
argument_list|()
operator|*
name|iw
argument_list|,
name|shouldBe
operator|.
name|x
argument_list|()
operator|*
name|iw
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|pathFuzzyCompare
argument_list|(
name|pos
operator|.
name|y
argument_list|()
operator|*
name|ih
argument_list|,
name|shouldBe
operator|.
name|y
argument_list|()
operator|*
name|ih
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testOnPath_data
name|void
name|tst_QPainterPath
operator|::
name|testOnPath_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QPainterPath
argument_list|>
argument_list|(
literal|"path"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|qreal
argument_list|>
argument_list|(
literal|"start"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|qreal
argument_list|>
argument_list|(
literal|"middle"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|qreal
argument_list|>
argument_list|(
literal|"end"
argument_list|)
expr_stmt|;
name|QPainterPath
name|path
init|=
name|QPainterPath
argument_list|(
name|QPointF
argument_list|(
literal|153
argument_list|,
literal|199
argument_list|)
argument_list|)
decl_stmt|;
name|path
operator|.
name|cubicTo
argument_list|(
name|QPointF
argument_list|(
literal|147
argument_list|,
literal|61
argument_list|)
argument_list|,
name|QPointF
argument_list|(
literal|414
argument_list|,
literal|18
argument_list|)
argument_list|,
name|QPointF
argument_list|(
literal|355
argument_list|,
literal|201
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"First case"
argument_list|)
operator|<<
name|path
operator|<<
name|qreal
argument_list|(
literal|93.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|4.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|252.13
argument_list|)
expr_stmt|;
name|path
operator|=
name|QPainterPath
argument_list|(
name|QPointF
argument_list|(
literal|328
argument_list|,
literal|197
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|cubicTo
argument_list|(
name|QPointF
argument_list|(
literal|150
argument_list|,
literal|50
argument_list|)
argument_list|,
name|QPointF
argument_list|(
literal|401
argument_list|,
literal|50
argument_list|)
argument_list|,
name|QPointF
argument_list|(
literal|225
argument_list|,
literal|197
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Second case"
argument_list|)
operator|<<
name|path
operator|<<
name|qreal
argument_list|(
literal|140.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|0.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|220.0
argument_list|)
expr_stmt|;
name|path
operator|=
name|QPainterPath
argument_list|(
name|QPointF
argument_list|(
literal|328
argument_list|,
literal|197
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|cubicTo
argument_list|(
name|QPointF
argument_list|(
literal|101
argument_list|,
literal|153
argument_list|)
argument_list|,
name|QPointF
argument_list|(
literal|596
argument_list|,
literal|151
argument_list|)
argument_list|,
name|QPointF
argument_list|(
literal|353
argument_list|,
literal|197
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Third case"
argument_list|)
operator|<<
name|path
operator|<<
name|qreal
argument_list|(
literal|169.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|0.22
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|191.0
argument_list|)
expr_stmt|;
name|path
operator|=
name|QPainterPath
argument_list|(
name|QPointF
argument_list|(
literal|153
argument_list|,
literal|199
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|cubicTo
argument_list|(
name|QPointF
argument_list|(
literal|59
argument_list|,
literal|53
argument_list|)
argument_list|,
name|QPointF
argument_list|(
literal|597
argument_list|,
literal|218
argument_list|)
argument_list|,
name|QPointF
argument_list|(
literal|355
argument_list|,
literal|201
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Fourth case"
argument_list|)
operator|<<
name|path
operator|<<
name|qreal
argument_list|(
literal|122.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|348.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|175.0
argument_list|)
expr_stmt|;
block|}
end_function
begin_define
DECL|macro|SIGN
define|#
directive|define
name|SIGN
parameter_list|(
name|x
parameter_list|)
value|((x< 0)?-1:1)
end_define
begin_function
DECL|function|testOnPath
name|void
name|tst_QPainterPath
operator|::
name|testOnPath
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QPainterPath
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|qreal
argument_list|,
name|start
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|qreal
argument_list|,
name|middle
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|qreal
argument_list|,
name|end
argument_list|)
expr_stmt|;
name|int
name|signStart
init|=
name|SIGN
argument_list|(
name|start
argument_list|)
decl_stmt|;
name|int
name|signMid
init|=
name|SIGN
argument_list|(
name|middle
argument_list|)
decl_stmt|;
name|int
name|signEnd
init|=
name|SIGN
argument_list|(
name|end
argument_list|)
decl_stmt|;
specifier|static
specifier|const
name|qreal
name|diff
init|=
literal|3
decl_stmt|;
name|qreal
name|angle
init|=
name|path
operator|.
name|angleAtPercent
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|SIGN
argument_list|(
name|angle
argument_list|)
argument_list|,
name|signStart
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|qAbs
argument_list|(
name|angle
operator|-
name|start
argument_list|)
operator|<
name|diff
argument_list|)
expr_stmt|;
name|angle
operator|=
name|path
operator|.
name|angleAtPercent
argument_list|(
literal|0.5
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|SIGN
argument_list|(
name|angle
argument_list|)
argument_list|,
name|signMid
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|qAbs
argument_list|(
name|angle
operator|-
name|middle
argument_list|)
operator|<
name|diff
argument_list|)
expr_stmt|;
name|angle
operator|=
name|path
operator|.
name|angleAtPercent
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|SIGN
argument_list|(
name|angle
argument_list|)
argument_list|,
name|signEnd
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|qAbs
argument_list|(
name|angle
operator|-
name|end
argument_list|)
operator|<
name|diff
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|pointAtPercent_data
name|void
name|tst_QPainterPath
operator|::
name|pointAtPercent_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QPainterPath
argument_list|>
argument_list|(
literal|"path"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|qreal
argument_list|>
argument_list|(
literal|"percent"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QPointF
argument_list|>
argument_list|(
literal|"point"
argument_list|)
expr_stmt|;
name|QPainterPath
name|path
decl_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
literal|100
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Case 1"
argument_list|)
operator|<<
name|path
operator|<<
name|qreal
argument_list|(
literal|0.2
argument_list|)
operator|<<
name|QPointF
argument_list|(
literal|20
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Case 2"
argument_list|)
operator|<<
name|path
operator|<<
name|qreal
argument_list|(
literal|0.5
argument_list|)
operator|<<
name|QPointF
argument_list|(
literal|50
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Case 3"
argument_list|)
operator|<<
name|path
operator|<<
name|qreal
argument_list|(
literal|0.0
argument_list|)
operator|<<
name|QPointF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Case 4"
argument_list|)
operator|<<
name|path
operator|<<
name|qreal
argument_list|(
literal|1.0
argument_list|)
operator|<<
name|QPointF
argument_list|(
literal|100
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|path
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
literal|0
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Case 5"
argument_list|)
operator|<<
name|path
operator|<<
name|qreal
argument_list|(
literal|0.2
argument_list|)
operator|<<
name|QPointF
argument_list|(
literal|0
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Case 6"
argument_list|)
operator|<<
name|path
operator|<<
name|qreal
argument_list|(
literal|0.5
argument_list|)
operator|<<
name|QPointF
argument_list|(
literal|0
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Case 7"
argument_list|)
operator|<<
name|path
operator|<<
name|qreal
argument_list|(
literal|0.0
argument_list|)
operator|<<
name|QPointF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Case 8"
argument_list|)
operator|<<
name|path
operator|<<
name|qreal
argument_list|(
literal|1.0
argument_list|)
operator|<<
name|QPointF
argument_list|(
literal|0
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
literal|300
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Case 9"
argument_list|)
operator|<<
name|path
operator|<<
name|qreal
argument_list|(
literal|0.25
argument_list|)
operator|<<
name|QPointF
argument_list|(
literal|0
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Case 10"
argument_list|)
operator|<<
name|path
operator|<<
name|qreal
argument_list|(
literal|0.5
argument_list|)
operator|<<
name|QPointF
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Case 11"
argument_list|)
operator|<<
name|path
operator|<<
name|qreal
argument_list|(
literal|0.75
argument_list|)
operator|<<
name|QPointF
argument_list|(
literal|200
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|path
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|path
operator|.
name|addEllipse
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Case 12"
argument_list|)
operator|<<
name|path
operator|<<
name|qreal
argument_list|(
literal|0.0
argument_list|)
operator|<<
name|QPointF
argument_list|(
literal|100
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Case 13"
argument_list|)
operator|<<
name|path
operator|<<
name|qreal
argument_list|(
literal|0.25
argument_list|)
operator|<<
name|QPointF
argument_list|(
literal|50
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Case 14"
argument_list|)
operator|<<
name|path
operator|<<
name|qreal
argument_list|(
literal|0.5
argument_list|)
operator|<<
name|QPointF
argument_list|(
literal|0
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Case 15"
argument_list|)
operator|<<
name|path
operator|<<
name|qreal
argument_list|(
literal|0.75
argument_list|)
operator|<<
name|QPointF
argument_list|(
literal|50
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Case 16"
argument_list|)
operator|<<
name|path
operator|<<
name|qreal
argument_list|(
literal|1.0
argument_list|)
operator|<<
name|QPointF
argument_list|(
literal|100
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|path
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|QRectF
name|rect
argument_list|(
literal|241
argument_list|,
literal|273
argument_list|,
literal|185
argument_list|,
literal|228
argument_list|)
decl_stmt|;
name|path
operator|.
name|addEllipse
argument_list|(
name|rect
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Case 17"
argument_list|)
operator|<<
name|path
operator|<<
name|qreal
argument_list|(
literal|1.0
argument_list|)
operator|<<
name|QPointF
argument_list|(
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|qreal
argument_list|(
literal|0.5
argument_list|)
operator|*
operator|(
name|rect
operator|.
name|top
argument_list|()
operator|+
name|rect
operator|.
name|bottom
argument_list|()
operator|)
argument_list|)
expr_stmt|;
name|path
operator|=
name|QPainterPath
argument_list|()
expr_stmt|;
name|path
operator|.
name|moveTo
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Case 18"
argument_list|)
operator|<<
name|path
operator|<<
name|qreal
argument_list|(
literal|0.0
argument_list|)
operator|<<
name|QPointF
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Case 19"
argument_list|)
operator|<<
name|path
operator|<<
name|qreal
argument_list|(
literal|1.0
argument_list|)
operator|<<
name|QPointF
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|pointAtPercent
name|void
name|tst_QPainterPath
operator|::
name|pointAtPercent
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QPainterPath
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|qreal
argument_list|,
name|percent
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QPointF
argument_list|,
name|point
argument_list|)
expr_stmt|;
name|QPointF
name|result
init|=
name|path
operator|.
name|pointAtPercent
argument_list|(
name|percent
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|pathFuzzyCompare
argument_list|(
name|point
operator|.
name|x
argument_list|()
argument_list|,
name|result
operator|.
name|x
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|pathFuzzyCompare
argument_list|(
name|point
operator|.
name|y
argument_list|()
argument_list|,
name|result
operator|.
name|y
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setElementPositionAt
name|void
name|tst_QPainterPath
operator|::
name|setElementPositionAt
parameter_list|()
block|{
name|QPainterPath
name|path
argument_list|(
name|QPointF
argument_list|(
literal|42.
argument_list|,
literal|42.
argument_list|)
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|path
operator|.
name|elementCount
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path
operator|.
name|elementAt
argument_list|(
literal|0
argument_list|)
operator|.
name|type
operator|==
name|QPainterPath
operator|::
name|MoveToElement
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|path
operator|.
name|elementAt
argument_list|(
literal|0
argument_list|)
operator|.
name|x
argument_list|,
name|qreal
argument_list|(
literal|42.
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|path
operator|.
name|elementAt
argument_list|(
literal|0
argument_list|)
operator|.
name|y
argument_list|,
name|qreal
argument_list|(
literal|42.
argument_list|)
argument_list|)
expr_stmt|;
name|QPainterPath
name|copy
init|=
name|path
decl_stmt|;
name|copy
operator|.
name|setElementPositionAt
argument_list|(
literal|0
argument_list|,
name|qreal
argument_list|(
literal|0
argument_list|)
argument_list|,
name|qreal
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|copy
operator|.
name|elementCount
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|copy
operator|.
name|elementAt
argument_list|(
literal|0
argument_list|)
operator|.
name|type
operator|==
name|QPainterPath
operator|::
name|MoveToElement
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|copy
operator|.
name|elementAt
argument_list|(
literal|0
argument_list|)
operator|.
name|x
argument_list|,
name|qreal
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|copy
operator|.
name|elementAt
argument_list|(
literal|0
argument_list|)
operator|.
name|y
argument_list|,
name|qreal
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|path
operator|.
name|elementCount
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path
operator|.
name|elementAt
argument_list|(
literal|0
argument_list|)
operator|.
name|type
operator|==
name|QPainterPath
operator|::
name|MoveToElement
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|path
operator|.
name|elementAt
argument_list|(
literal|0
argument_list|)
operator|.
name|x
argument_list|,
name|qreal
argument_list|(
literal|42.
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|path
operator|.
name|elementAt
argument_list|(
literal|0
argument_list|)
operator|.
name|y
argument_list|,
name|qreal
argument_list|(
literal|42.
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|angleAtPercent
name|void
name|tst_QPainterPath
operator|::
name|angleAtPercent
parameter_list|()
block|{
for|for
control|(
name|int
name|angle
init|=
literal|0
init|;
name|angle
operator|<
literal|360
condition|;
operator|++
name|angle
control|)
block|{
name|QLineF
name|line
init|=
name|QLineF
operator|::
name|fromPolar
argument_list|(
literal|100
argument_list|,
name|angle
argument_list|)
decl_stmt|;
name|QPainterPath
name|path
decl_stmt|;
name|path
operator|.
name|moveTo
argument_list|(
name|line
operator|.
name|p1
argument_list|()
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|line
operator|.
name|p2
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|path
operator|.
name|angleAtPercent
argument_list|(
literal|0.5
argument_list|)
argument_list|,
name|line
operator|.
name|angle
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|arcWinding_data
name|void
name|tst_QPainterPath
operator|::
name|arcWinding_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QPainterPath
argument_list|>
argument_list|(
literal|"path"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QPointF
argument_list|>
argument_list|(
literal|"point"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"inside"
argument_list|)
expr_stmt|;
name|QPainterPath
name|a
decl_stmt|;
name|a
operator|.
name|addEllipse
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|a
operator|.
name|addRect
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Case A (oddeven)"
argument_list|)
operator|<<
name|a
operator|<<
name|QPointF
argument_list|(
literal|55
argument_list|,
literal|55
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|a
operator|.
name|setFillRule
argument_list|(
name|Qt
operator|::
name|WindingFill
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Case A (winding)"
argument_list|)
operator|<<
name|a
operator|<<
name|QPointF
argument_list|(
literal|55
argument_list|,
literal|55
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QPainterPath
name|b
decl_stmt|;
name|b
operator|.
name|arcMoveTo
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|b
operator|.
name|arcTo
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
literal|10
argument_list|,
literal|360
argument_list|)
expr_stmt|;
name|b
operator|.
name|addRect
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Case B (oddeven)"
argument_list|)
operator|<<
name|b
operator|<<
name|QPointF
argument_list|(
literal|55
argument_list|,
literal|55
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|b
operator|.
name|setFillRule
argument_list|(
name|Qt
operator|::
name|WindingFill
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Case B (winding)"
argument_list|)
operator|<<
name|b
operator|<<
name|QPointF
argument_list|(
literal|55
argument_list|,
literal|55
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QPainterPath
name|c
decl_stmt|;
name|c
operator|.
name|arcMoveTo
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|c
operator|.
name|arcTo
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
literal|0
argument_list|,
literal|360
argument_list|)
expr_stmt|;
name|c
operator|.
name|addRect
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Case C (oddeven)"
argument_list|)
operator|<<
name|c
operator|<<
name|QPointF
argument_list|(
literal|55
argument_list|,
literal|55
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|c
operator|.
name|setFillRule
argument_list|(
name|Qt
operator|::
name|WindingFill
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Case C (winding)"
argument_list|)
operator|<<
name|c
operator|<<
name|QPointF
argument_list|(
literal|55
argument_list|,
literal|55
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QPainterPath
name|d
decl_stmt|;
name|d
operator|.
name|arcMoveTo
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|d
operator|.
name|arcTo
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
literal|10
argument_list|,
operator|-
literal|360
argument_list|)
expr_stmt|;
name|d
operator|.
name|addRect
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Case D (oddeven)"
argument_list|)
operator|<<
name|d
operator|<<
name|QPointF
argument_list|(
literal|55
argument_list|,
literal|55
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|d
operator|.
name|setFillRule
argument_list|(
name|Qt
operator|::
name|WindingFill
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Case D (winding)"
argument_list|)
operator|<<
name|d
operator|<<
name|QPointF
argument_list|(
literal|55
argument_list|,
literal|55
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QPainterPath
name|e
decl_stmt|;
name|e
operator|.
name|arcMoveTo
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|e
operator|.
name|arcTo
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
literal|0
argument_list|,
operator|-
literal|360
argument_list|)
expr_stmt|;
name|e
operator|.
name|addRect
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Case E (oddeven)"
argument_list|)
operator|<<
name|e
operator|<<
name|QPointF
argument_list|(
literal|55
argument_list|,
literal|55
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|e
operator|.
name|setFillRule
argument_list|(
name|Qt
operator|::
name|WindingFill
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Case E (winding)"
argument_list|)
operator|<<
name|e
operator|<<
name|QPointF
argument_list|(
literal|55
argument_list|,
literal|55
argument_list|)
operator|<<
literal|true
expr_stmt|;
block|}
end_function
begin_function
DECL|function|arcWinding
name|void
name|tst_QPainterPath
operator|::
name|arcWinding
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QPainterPath
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QPointF
argument_list|,
name|point
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|inside
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|path
operator|.
name|contains
argument_list|(
name|point
argument_list|)
argument_list|,
name|inside
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testToFillPolygons
name|void
name|tst_QPainterPath
operator|::
name|testToFillPolygons
parameter_list|()
block|{
name|QPainterPath
name|path
decl_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|0
argument_list|,
literal|50
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|moveTo
argument_list|(
name|QPointF
argument_list|(
literal|70
argument_list|,
literal|50
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|70
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|40
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
specifier|const
name|QList
argument_list|<
name|QPolygonF
argument_list|>
name|polygons
init|=
name|path
operator|.
name|toFillPolygons
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|polygons
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|polygons
operator|.
name|first
argument_list|()
operator|.
name|count
argument_list|(
name|QPointF
argument_list|(
literal|70
argument_list|,
literal|50
argument_list|)
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testNaNandInfinites
name|void
name|tst_QPainterPath
operator|::
name|testNaNandInfinites
parameter_list|()
block|{
name|QPainterPath
name|path1
decl_stmt|;
name|QPainterPath
name|path2
init|=
name|path1
decl_stmt|;
name|QPointF
name|p1
init|=
name|QPointF
argument_list|(
name|qSNaN
argument_list|()
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|QPointF
name|p2
init|=
name|QPointF
argument_list|(
name|qQNaN
argument_list|()
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|QPointF
name|p3
init|=
name|QPointF
argument_list|(
name|qQNaN
argument_list|()
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|QPointF
name|pInf
init|=
name|QPointF
argument_list|(
name|qInf
argument_list|()
argument_list|,
literal|1
argument_list|)
decl_stmt|;
comment|// all these operations with NaN/Inf should be ignored
comment|// can't test operator>> reliably, as we can't create a path with NaN to<< later
name|path1
operator|.
name|moveTo
argument_list|(
name|p1
argument_list|)
expr_stmt|;
name|path1
operator|.
name|moveTo
argument_list|(
name|qSNaN
argument_list|()
argument_list|,
name|qQNaN
argument_list|()
argument_list|)
expr_stmt|;
name|path1
operator|.
name|moveTo
argument_list|(
name|pInf
argument_list|)
expr_stmt|;
name|path1
operator|.
name|lineTo
argument_list|(
name|p1
argument_list|)
expr_stmt|;
name|path1
operator|.
name|lineTo
argument_list|(
name|qSNaN
argument_list|()
argument_list|,
name|qQNaN
argument_list|()
argument_list|)
expr_stmt|;
name|path1
operator|.
name|lineTo
argument_list|(
name|pInf
argument_list|)
expr_stmt|;
name|path1
operator|.
name|cubicTo
argument_list|(
name|p1
argument_list|,
name|p2
argument_list|,
name|p3
argument_list|)
expr_stmt|;
name|path1
operator|.
name|cubicTo
argument_list|(
name|p1
argument_list|,
name|QPointF
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QPointF
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|path1
operator|.
name|cubicTo
argument_list|(
name|pInf
argument_list|,
name|QPointF
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|,
name|QPointF
argument_list|(
literal|5
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|path1
operator|.
name|quadTo
argument_list|(
name|p1
argument_list|,
name|p2
argument_list|)
expr_stmt|;
name|path1
operator|.
name|quadTo
argument_list|(
name|QPointF
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|p3
argument_list|)
expr_stmt|;
name|path1
operator|.
name|quadTo
argument_list|(
name|QPointF
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|pInf
argument_list|)
expr_stmt|;
name|path1
operator|.
name|arcTo
argument_list|(
name|QRectF
argument_list|(
name|p1
argument_list|,
name|p2
argument_list|)
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|path1
operator|.
name|arcTo
argument_list|(
name|QRectF
argument_list|(
name|pInf
argument_list|,
name|QPointF
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|path1
operator|.
name|addRect
argument_list|(
name|QRectF
argument_list|(
name|p1
argument_list|,
name|p2
argument_list|)
argument_list|)
expr_stmt|;
name|path1
operator|.
name|addRect
argument_list|(
name|QRectF
argument_list|(
name|pInf
argument_list|,
name|QPointF
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|path1
operator|.
name|addEllipse
argument_list|(
name|QRectF
argument_list|(
name|p1
argument_list|,
name|p2
argument_list|)
argument_list|)
expr_stmt|;
name|path1
operator|.
name|addEllipse
argument_list|(
name|QRectF
argument_list|(
name|pInf
argument_list|,
name|QPointF
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|path1
argument_list|,
name|path2
argument_list|)
expr_stmt|;
name|path1
operator|.
name|lineTo
argument_list|(
name|QPointF
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path1
operator|!=
name|path2
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|connectPathDuplicatePoint
name|void
name|tst_QPainterPath
operator|::
name|connectPathDuplicatePoint
parameter_list|()
block|{
name|QPainterPath
name|a
decl_stmt|;
name|a
operator|.
name|moveTo
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|a
operator|.
name|lineTo
argument_list|(
literal|20
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|QPainterPath
name|b
decl_stmt|;
name|b
operator|.
name|moveTo
argument_list|(
literal|20
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|b
operator|.
name|lineTo
argument_list|(
literal|30
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|a
operator|.
name|connectPath
argument_list|(
name|b
argument_list|)
expr_stmt|;
name|QPainterPath
name|c
decl_stmt|;
name|c
operator|.
name|moveTo
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|c
operator|.
name|lineTo
argument_list|(
literal|20
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|c
operator|.
name|lineTo
argument_list|(
literal|30
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|c
argument_list|,
name|a
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|connectPathMoveTo
name|void
name|tst_QPainterPath
operator|::
name|connectPathMoveTo
parameter_list|()
block|{
name|QPainterPath
name|path1
decl_stmt|;
name|QPainterPath
name|path2
decl_stmt|;
name|QPainterPath
name|path3
decl_stmt|;
name|QPainterPath
name|path4
decl_stmt|;
name|path1
operator|.
name|moveTo
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|path2
operator|.
name|moveTo
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|path2
operator|.
name|lineTo
argument_list|(
literal|5
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|path2
operator|.
name|lineTo
argument_list|(
literal|6
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|path3
operator|.
name|connectPath
argument_list|(
name|path2
argument_list|)
expr_stmt|;
name|path4
operator|.
name|lineTo
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|path1
operator|.
name|connectPath
argument_list|(
name|path2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path1
operator|.
name|elementAt
argument_list|(
literal|0
argument_list|)
operator|.
name|type
operator|==
name|QPainterPath
operator|::
name|MoveToElement
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path2
operator|.
name|elementAt
argument_list|(
literal|0
argument_list|)
operator|.
name|type
operator|==
name|QPainterPath
operator|::
name|MoveToElement
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path3
operator|.
name|elementAt
argument_list|(
literal|0
argument_list|)
operator|.
name|type
operator|==
name|QPainterPath
operator|::
name|MoveToElement
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|path4
operator|.
name|elementAt
argument_list|(
literal|0
argument_list|)
operator|.
name|type
operator|==
name|QPainterPath
operator|::
name|MoveToElement
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|translate
name|void
name|tst_QPainterPath
operator|::
name|translate
parameter_list|()
block|{
name|QPainterPath
name|path
decl_stmt|;
comment|// Path with no elements.
name|QCOMPARE
argument_list|(
name|path
operator|.
name|currentPosition
argument_list|()
argument_list|,
name|QPointF
argument_list|()
argument_list|)
expr_stmt|;
name|path
operator|.
name|translate
argument_list|(
literal|50.5
argument_list|,
literal|50.5
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|path
operator|.
name|currentPosition
argument_list|()
argument_list|,
name|QPointF
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|path
operator|.
name|translated
argument_list|(
literal|50.5
argument_list|,
literal|50.5
argument_list|)
operator|.
name|currentPosition
argument_list|()
argument_list|,
name|QPointF
argument_list|()
argument_list|)
expr_stmt|;
comment|// path.isEmpty(), but we have one MoveTo element that should be translated.
name|path
operator|.
name|moveTo
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|path
operator|.
name|currentPosition
argument_list|()
argument_list|,
name|QPointF
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|translate
argument_list|(
literal|99.9
argument_list|,
literal|99.9
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|path
operator|.
name|currentPosition
argument_list|()
argument_list|,
name|QPointF
argument_list|(
literal|149.9
argument_list|,
literal|149.9
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|translate
argument_list|(
operator|-
literal|99.9
argument_list|,
operator|-
literal|99.9
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|path
operator|.
name|currentPosition
argument_list|()
argument_list|,
name|QPointF
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|path
operator|.
name|translated
argument_list|(
operator|-
literal|50
argument_list|,
operator|-
literal|50
argument_list|)
operator|.
name|currentPosition
argument_list|()
argument_list|,
name|QPointF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|// Complex path.
name|QRegion
name|shape
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|300
argument_list|,
literal|200
argument_list|,
name|QRegion
operator|::
name|Ellipse
argument_list|)
decl_stmt|;
name|shape
operator|-=
name|QRect
argument_list|(
literal|225
argument_list|,
literal|175
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|QPainterPath
name|complexPath
decl_stmt|;
name|complexPath
operator|.
name|addRegion
argument_list|(
name|shape
argument_list|)
expr_stmt|;
name|QVector
argument_list|<
name|QPointF
argument_list|>
name|untranslatedElements
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|complexPath
operator|.
name|elementCount
argument_list|()
condition|;
operator|++
name|i
control|)
name|untranslatedElements
operator|.
name|append
argument_list|(
name|QPointF
argument_list|(
name|complexPath
operator|.
name|elementAt
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
specifier|const
name|QPainterPath
name|untranslatedComplexPath
argument_list|(
name|complexPath
argument_list|)
decl_stmt|;
specifier|const
name|QPointF
name|offset
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
decl_stmt|;
name|complexPath
operator|.
name|translate
argument_list|(
name|offset
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|complexPath
operator|.
name|elementCount
argument_list|()
condition|;
operator|++
name|i
control|)
name|QCOMPARE
argument_list|(
name|QPointF
argument_list|(
name|complexPath
operator|.
name|elementAt
argument_list|(
name|i
argument_list|)
argument_list|)
operator|-
name|offset
argument_list|,
name|untranslatedElements
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|complexPath
operator|.
name|translated
argument_list|(
operator|-
name|offset
argument_list|)
argument_list|,
name|untranslatedComplexPath
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|lineWithinBounds
name|void
name|tst_QPainterPath
operator|::
name|lineWithinBounds
parameter_list|()
block|{
specifier|const
name|int
name|iteration_count
init|=
literal|3
decl_stmt|;
specifier|volatile
specifier|const
name|qreal
name|yVal
init|=
literal|0.5
decl_stmt|;
name|QPointF
name|a
argument_list|(
literal|0.0
argument_list|,
name|yVal
argument_list|)
decl_stmt|;
name|QPointF
name|b
argument_list|(
literal|1000.0
argument_list|,
name|yVal
argument_list|)
decl_stmt|;
name|QPointF
name|c
argument_list|(
literal|2000.0
argument_list|,
name|yVal
argument_list|)
decl_stmt|;
name|QPointF
name|d
argument_list|(
literal|3000.0
argument_list|,
name|yVal
argument_list|)
decl_stmt|;
name|QPainterPath
name|path
decl_stmt|;
name|path
operator|.
name|moveTo
argument_list|(
name|QPointF
argument_list|(
literal|0
argument_list|,
name|yVal
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|cubicTo
argument_list|(
name|QPointF
argument_list|(
literal|1000.0
argument_list|,
name|yVal
argument_list|)
argument_list|,
name|QPointF
argument_list|(
literal|2000.0
argument_list|,
name|yVal
argument_list|)
argument_list|,
name|QPointF
argument_list|(
literal|3000.0
argument_list|,
name|yVal
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<=
name|iteration_count
condition|;
name|i
operator|++
control|)
block|{
name|qreal
name|actual
init|=
name|path
operator|.
name|pointAtPercent
argument_list|(
name|qreal
argument_list|(
name|i
argument_list|)
operator|/
name|iteration_count
argument_list|)
operator|.
name|y
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|actual
operator|==
name|yVal
argument_list|)
expr_stmt|;
comment|// don't use QCOMPARE, don't want fuzzy comparison
block|}
block|}
end_function
begin_macro
name|QTEST_APPLESS_MAIN
argument_list|(
argument|tst_QPainterPath
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qpainterpath.moc"
end_include
end_unit
