begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<qstandarditemmodel.h>
end_include
begin_include
include|#
directive|include
file|<QTreeView>
end_include
begin_include
include|#
directive|include
file|<private/qtreeview_p.h>
end_include
begin_class
DECL|class|tst_QStandardItemModel
class|class
name|tst_QStandardItemModel
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
name|tst_QStandardItemModel
parameter_list|()
constructor_decl|;
specifier|virtual
name|~
name|tst_QStandardItemModel
parameter_list|()
destructor_decl|;
DECL|enum|ModelChanged
enum|enum
name|ModelChanged
block|{
DECL|enumerator|RowsAboutToBeInserted
name|RowsAboutToBeInserted
block|,
DECL|enumerator|RowsInserted
name|RowsInserted
block|,
DECL|enumerator|RowsAboutToBeRemoved
name|RowsAboutToBeRemoved
block|,
DECL|enumerator|RowsRemoved
name|RowsRemoved
block|,
DECL|enumerator|ColumnsAboutToBeInserted
name|ColumnsAboutToBeInserted
block|,
DECL|enumerator|ColumnsInserted
name|ColumnsInserted
block|,
DECL|enumerator|ColumnsAboutToBeRemoved
name|ColumnsAboutToBeRemoved
block|,
DECL|enumerator|ColumnsRemoved
name|ColumnsRemoved
block|}
enum|;
public|public
name|slots
public|:
name|void
name|init
parameter_list|()
function_decl|;
name|void
name|cleanup
parameter_list|()
function_decl|;
protected|protected
name|slots
protected|:
name|void
name|checkAboutToBeRemoved
parameter_list|()
function_decl|;
name|void
name|checkRemoved
parameter_list|()
function_decl|;
name|void
name|updateRowAboutToBeRemoved
parameter_list|()
function_decl|;
DECL|function|rowsAboutToBeInserted
name|void
name|rowsAboutToBeInserted
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|parent
parameter_list|,
name|int
name|first
parameter_list|,
name|int
name|last
parameter_list|)
block|{
name|modelChanged
argument_list|(
name|RowsAboutToBeInserted
argument_list|,
name|parent
argument_list|,
name|first
argument_list|,
name|last
argument_list|)
expr_stmt|;
block|}
DECL|function|rowsInserted
name|void
name|rowsInserted
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|parent
parameter_list|,
name|int
name|first
parameter_list|,
name|int
name|last
parameter_list|)
block|{
name|modelChanged
argument_list|(
name|RowsInserted
argument_list|,
name|parent
argument_list|,
name|first
argument_list|,
name|last
argument_list|)
expr_stmt|;
block|}
DECL|function|rowsAboutToBeRemoved
name|void
name|rowsAboutToBeRemoved
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|parent
parameter_list|,
name|int
name|first
parameter_list|,
name|int
name|last
parameter_list|)
block|{
name|modelChanged
argument_list|(
name|RowsAboutToBeRemoved
argument_list|,
name|parent
argument_list|,
name|first
argument_list|,
name|last
argument_list|)
expr_stmt|;
block|}
DECL|function|rowsRemoved
name|void
name|rowsRemoved
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|parent
parameter_list|,
name|int
name|first
parameter_list|,
name|int
name|last
parameter_list|)
block|{
name|modelChanged
argument_list|(
name|RowsRemoved
argument_list|,
name|parent
argument_list|,
name|first
argument_list|,
name|last
argument_list|)
expr_stmt|;
block|}
DECL|function|columnsAboutToBeInserted
name|void
name|columnsAboutToBeInserted
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|parent
parameter_list|,
name|int
name|first
parameter_list|,
name|int
name|last
parameter_list|)
block|{
name|modelChanged
argument_list|(
name|ColumnsAboutToBeInserted
argument_list|,
name|parent
argument_list|,
name|first
argument_list|,
name|last
argument_list|)
expr_stmt|;
block|}
DECL|function|columnsInserted
name|void
name|columnsInserted
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|parent
parameter_list|,
name|int
name|first
parameter_list|,
name|int
name|last
parameter_list|)
block|{
name|modelChanged
argument_list|(
name|ColumnsInserted
argument_list|,
name|parent
argument_list|,
name|first
argument_list|,
name|last
argument_list|)
expr_stmt|;
block|}
DECL|function|columnsAboutToBeRemoved
name|void
name|columnsAboutToBeRemoved
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|parent
parameter_list|,
name|int
name|first
parameter_list|,
name|int
name|last
parameter_list|)
block|{
name|modelChanged
argument_list|(
name|ColumnsAboutToBeRemoved
argument_list|,
name|parent
argument_list|,
name|first
argument_list|,
name|last
argument_list|)
expr_stmt|;
block|}
DECL|function|columnsRemoved
name|void
name|columnsRemoved
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|parent
parameter_list|,
name|int
name|first
parameter_list|,
name|int
name|last
parameter_list|)
block|{
name|modelChanged
argument_list|(
name|ColumnsRemoved
argument_list|,
name|parent
argument_list|,
name|first
argument_list|,
name|last
argument_list|)
expr_stmt|;
block|}
name|void
name|modelChanged
parameter_list|(
name|ModelChanged
name|change
parameter_list|,
specifier|const
name|QModelIndex
modifier|&
name|parent
parameter_list|,
name|int
name|first
parameter_list|,
name|int
name|last
parameter_list|)
function_decl|;
private|private
name|slots
private|:
name|void
name|insertRow_data
parameter_list|()
function_decl|;
name|void
name|insertRow
parameter_list|()
function_decl|;
name|void
name|insertRows
parameter_list|()
function_decl|;
name|void
name|insertRowsItems
parameter_list|()
function_decl|;
name|void
name|insertRowInHierarcy
parameter_list|()
function_decl|;
name|void
name|insertColumn_data
parameter_list|()
function_decl|;
name|void
name|insertColumn
parameter_list|()
function_decl|;
name|void
name|insertColumns
parameter_list|()
function_decl|;
name|void
name|removeRows
parameter_list|()
function_decl|;
name|void
name|removeColumns
parameter_list|()
function_decl|;
name|void
name|setHeaderData
parameter_list|()
function_decl|;
name|void
name|persistentIndexes
parameter_list|()
function_decl|;
name|void
name|removingPersistentIndexes
parameter_list|()
function_decl|;
name|void
name|updatingPersistentIndexes
parameter_list|()
function_decl|;
name|void
name|checkChildren
parameter_list|()
function_decl|;
name|void
name|data
parameter_list|()
function_decl|;
name|void
name|clear
parameter_list|()
function_decl|;
name|void
name|sort_data
parameter_list|()
function_decl|;
name|void
name|sort
parameter_list|()
function_decl|;
name|void
name|sortRole_data
parameter_list|()
function_decl|;
name|void
name|sortRole
parameter_list|()
function_decl|;
name|void
name|findItems
parameter_list|()
function_decl|;
name|void
name|getSetHeaderItem
parameter_list|()
function_decl|;
name|void
name|indexFromItem
parameter_list|()
function_decl|;
name|void
name|itemFromIndex
parameter_list|()
function_decl|;
name|void
name|getSetItemPrototype
parameter_list|()
function_decl|;
name|void
name|getSetItemData
parameter_list|()
function_decl|;
name|void
name|setHeaderLabels_data
parameter_list|()
function_decl|;
name|void
name|setHeaderLabels
parameter_list|()
function_decl|;
name|void
name|itemDataChanged
parameter_list|()
function_decl|;
name|void
name|takeHeaderItem
parameter_list|()
function_decl|;
name|void
name|useCase1
parameter_list|()
function_decl|;
name|void
name|useCase2
parameter_list|()
function_decl|;
name|void
name|useCase3
parameter_list|()
function_decl|;
name|void
name|rootItemFlags
parameter_list|()
function_decl|;
ifdef|#
directive|ifdef
name|QT_BUILD_INTERNAL
name|void
name|treeDragAndDrop
parameter_list|()
function_decl|;
endif|#
directive|endif
name|void
name|removeRowsAndColumns
parameter_list|()
function_decl|;
name|void
name|itemRoleNames
parameter_list|()
function_decl|;
name|void
name|getMimeDataWithInvalidModelIndex
parameter_list|()
function_decl|;
private|private:
DECL|member|m_model
name|QAbstractItemModel
modifier|*
name|m_model
decl_stmt|;
DECL|member|persistent
name|QPersistentModelIndex
name|persistent
decl_stmt|;
DECL|member|rcParent
name|QVector
argument_list|<
name|QModelIndex
argument_list|>
name|rcParent
decl_stmt|;
DECL|member|rcFirst
name|QVector
argument_list|<
name|int
argument_list|>
name|rcFirst
decl_stmt|;
DECL|member|rcLast
name|QVector
argument_list|<
name|int
argument_list|>
name|rcLast
decl_stmt|;
comment|//return true if models have the same structure, and all child have the same text
name|bool
name|compareModels
parameter_list|(
name|QStandardItemModel
modifier|*
name|model1
parameter_list|,
name|QStandardItemModel
modifier|*
name|model2
parameter_list|)
function_decl|;
comment|//return true if models have the same structure, and all child have the same text
name|bool
name|compareItems
parameter_list|(
name|QStandardItem
modifier|*
name|item1
parameter_list|,
name|QStandardItem
modifier|*
name|item2
parameter_list|)
function_decl|;
block|}
class|;
end_class
begin_decl_stmt
DECL|variable|defaultSize
specifier|static
specifier|const
name|int
name|defaultSize
init|=
literal|3
decl_stmt|;
end_decl_stmt
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QStandardItem*
argument_list|)
end_macro
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|Qt::Orientation
argument_list|)
end_macro
begin_constructor
DECL|function|tst_QStandardItemModel
name|tst_QStandardItemModel
operator|::
name|tst_QStandardItemModel
parameter_list|()
member_init_list|:
name|m_model
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|rcParent
argument_list|(
literal|8
argument_list|)
member_init_list|,
name|rcFirst
argument_list|(
literal|8
argument_list|,
literal|0
argument_list|)
member_init_list|,
name|rcLast
argument_list|(
literal|8
argument_list|,
literal|0
argument_list|)
block|{ }
end_constructor
begin_destructor
DECL|function|~tst_QStandardItemModel
name|tst_QStandardItemModel
operator|::
name|~
name|tst_QStandardItemModel
parameter_list|()
block|{ }
end_destructor
begin_comment
comment|/*   This test usually uses a model with a 3x3 table   ---------------------------   |  0,0  |  0,1    |  0,2  |   ---------------------------   |  1,0  |  1,1    |  1,2  |   ---------------------------   |  2,0  |  2,1    |  2,2  |   --------------------------- */
end_comment
begin_function
DECL|function|init
name|void
name|tst_QStandardItemModel
operator|::
name|init
parameter_list|()
block|{
name|qRegisterMetaType
argument_list|<
name|QStandardItem
operator|*
argument_list|>
argument_list|(
literal|"QStandardItem*"
argument_list|)
expr_stmt|;
name|qRegisterMetaType
argument_list|<
name|Qt
operator|::
name|Orientation
argument_list|>
argument_list|(
literal|"Qt::Orientation"
argument_list|)
expr_stmt|;
name|m_model
operator|=
operator|new
name|QStandardItemModel
argument_list|(
name|defaultSize
argument_list|,
name|defaultSize
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_model
argument_list|,
name|SIGNAL
argument_list|(
name|rowsAboutToBeInserted
argument_list|(
name|QModelIndex
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|rowsAboutToBeInserted
argument_list|(
name|QModelIndex
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_model
argument_list|,
name|SIGNAL
argument_list|(
name|rowsInserted
argument_list|(
name|QModelIndex
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|rowsInserted
argument_list|(
name|QModelIndex
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_model
argument_list|,
name|SIGNAL
argument_list|(
name|rowsAboutToBeRemoved
argument_list|(
name|QModelIndex
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|rowsAboutToBeRemoved
argument_list|(
name|QModelIndex
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_model
argument_list|,
name|SIGNAL
argument_list|(
name|rowsRemoved
argument_list|(
name|QModelIndex
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|rowsRemoved
argument_list|(
name|QModelIndex
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_model
argument_list|,
name|SIGNAL
argument_list|(
name|columnsAboutToBeInserted
argument_list|(
name|QModelIndex
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|columnsAboutToBeInserted
argument_list|(
name|QModelIndex
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_model
argument_list|,
name|SIGNAL
argument_list|(
name|columnsInserted
argument_list|(
name|QModelIndex
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|columnsInserted
argument_list|(
name|QModelIndex
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_model
argument_list|,
name|SIGNAL
argument_list|(
name|columnsAboutToBeRemoved
argument_list|(
name|QModelIndex
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|columnsAboutToBeRemoved
argument_list|(
name|QModelIndex
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_model
argument_list|,
name|SIGNAL
argument_list|(
name|columnsRemoved
argument_list|(
name|QModelIndex
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|columnsRemoved
argument_list|(
name|QModelIndex
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|rcFirst
operator|.
name|fill
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
name|rcLast
operator|.
name|fill
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|cleanup
name|void
name|tst_QStandardItemModel
operator|::
name|cleanup
parameter_list|()
block|{
name|disconnect
argument_list|(
name|m_model
argument_list|,
name|SIGNAL
argument_list|(
name|rowsAboutToBeInserted
argument_list|(
name|QModelIndex
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|rowsAboutToBeInserted
argument_list|(
name|QModelIndex
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|disconnect
argument_list|(
name|m_model
argument_list|,
name|SIGNAL
argument_list|(
name|rowsInserted
argument_list|(
name|QModelIndex
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|rowsInserted
argument_list|(
name|QModelIndex
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|disconnect
argument_list|(
name|m_model
argument_list|,
name|SIGNAL
argument_list|(
name|rowsAboutToBeRemoved
argument_list|(
name|QModelIndex
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|rowsAboutToBeRemoved
argument_list|(
name|QModelIndex
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|disconnect
argument_list|(
name|m_model
argument_list|,
name|SIGNAL
argument_list|(
name|rowsRemoved
argument_list|(
name|QModelIndex
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|rowsRemoved
argument_list|(
name|QModelIndex
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|disconnect
argument_list|(
name|m_model
argument_list|,
name|SIGNAL
argument_list|(
name|columnsAboutToBeInserted
argument_list|(
name|QModelIndex
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|columnsAboutToBeInserted
argument_list|(
name|QModelIndex
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|disconnect
argument_list|(
name|m_model
argument_list|,
name|SIGNAL
argument_list|(
name|columnsInserted
argument_list|(
name|QModelIndex
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|columnsInserted
argument_list|(
name|QModelIndex
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|disconnect
argument_list|(
name|m_model
argument_list|,
name|SIGNAL
argument_list|(
name|columnsAboutToBeRemoved
argument_list|(
name|QModelIndex
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|columnsAboutToBeRemoved
argument_list|(
name|QModelIndex
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|disconnect
argument_list|(
name|m_model
argument_list|,
name|SIGNAL
argument_list|(
name|columnsRemoved
argument_list|(
name|QModelIndex
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|columnsRemoved
argument_list|(
name|QModelIndex
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
operator|delete
name|m_model
expr_stmt|;
name|m_model
operator|=
literal|0
expr_stmt|;
block|}
end_function
begin_function
DECL|function|insertRow_data
name|void
name|tst_QStandardItemModel
operator|::
name|insertRow_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"insertRow"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expectedRow"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Insert less then 0"
argument_list|)
operator|<<
operator|-
literal|1
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Insert at 0"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Insert beyond count"
argument_list|)
operator|<<
name|defaultSize
operator|+
literal|1
operator|<<
name|defaultSize
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Insert at count"
argument_list|)
operator|<<
name|defaultSize
operator|<<
name|defaultSize
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Insert in the middle"
argument_list|)
operator|<<
literal|1
operator|<<
literal|1
expr_stmt|;
block|}
end_function
begin_function
DECL|function|insertRow
name|void
name|tst_QStandardItemModel
operator|::
name|insertRow
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|insertRow
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expectedRow
argument_list|)
expr_stmt|;
name|QIcon
name|icon
decl_stmt|;
comment|// default all initial items to DisplayRole: "initalitem"
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|m_model
operator|->
name|rowCount
argument_list|()
condition|;
operator|++
name|r
control|)
block|{
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
name|m_model
operator|->
name|columnCount
argument_list|()
condition|;
operator|++
name|c
control|)
block|{
name|m_model
operator|->
name|setData
argument_list|(
name|m_model
operator|->
name|index
argument_list|(
name|r
argument_list|,
name|c
argument_list|)
argument_list|,
literal|"initialitem"
argument_list|,
name|Qt
operator|::
name|DisplayRole
argument_list|)
expr_stmt|;
block|}
block|}
comment|// check that inserts changes rowCount
name|QCOMPARE
argument_list|(
name|m_model
operator|->
name|rowCount
argument_list|()
argument_list|,
name|defaultSize
argument_list|)
expr_stmt|;
name|m_model
operator|->
name|insertRow
argument_list|(
name|insertRow
argument_list|)
expr_stmt|;
if|if
condition|(
name|insertRow
operator|>=
literal|0
operator|&&
name|insertRow
operator|<=
name|defaultSize
condition|)
block|{
name|QCOMPARE
argument_list|(
name|m_model
operator|->
name|rowCount
argument_list|()
argument_list|,
name|defaultSize
operator|+
literal|1
argument_list|)
expr_stmt|;
comment|// check that signals were emitted with correct info
name|QCOMPARE
argument_list|(
name|rcFirst
index|[
name|RowsAboutToBeInserted
index|]
argument_list|,
name|expectedRow
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rcLast
index|[
name|RowsAboutToBeInserted
index|]
argument_list|,
name|expectedRow
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rcFirst
index|[
name|RowsInserted
index|]
argument_list|,
name|expectedRow
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rcLast
index|[
name|RowsInserted
index|]
argument_list|,
name|expectedRow
argument_list|)
expr_stmt|;
comment|//check that the inserted item has different DisplayRole than initial items
name|QVERIFY
argument_list|(
name|m_model
operator|->
name|data
argument_list|(
name|m_model
operator|->
name|index
argument_list|(
name|expectedRow
argument_list|,
literal|0
argument_list|)
argument_list|,
name|Qt
operator|::
name|DisplayRole
argument_list|)
operator|.
name|toString
argument_list|()
operator|!=
literal|"initialitem"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// We inserted something outside the bounds, do nothing
name|QCOMPARE
argument_list|(
name|m_model
operator|->
name|rowCount
argument_list|()
argument_list|,
name|defaultSize
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rcFirst
index|[
name|RowsAboutToBeInserted
index|]
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rcLast
index|[
name|RowsAboutToBeInserted
index|]
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rcFirst
index|[
name|RowsInserted
index|]
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rcLast
index|[
name|RowsInserted
index|]
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|insertRows
name|void
name|tst_QStandardItemModel
operator|::
name|insertRows
parameter_list|()
block|{
name|int
name|rowCount
init|=
name|m_model
operator|->
name|rowCount
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|rowCount
argument_list|,
name|defaultSize
argument_list|)
expr_stmt|;
comment|// insert custom header label
name|QString
name|headerLabel
init|=
literal|"custom"
decl_stmt|;
name|m_model
operator|->
name|setHeaderData
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|Vertical
argument_list|,
name|headerLabel
argument_list|)
expr_stmt|;
comment|// insert one row
name|m_model
operator|->
name|insertRows
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|m_model
operator|->
name|rowCount
argument_list|()
argument_list|,
name|rowCount
operator|+
literal|1
argument_list|)
expr_stmt|;
name|rowCount
operator|=
name|m_model
operator|->
name|rowCount
argument_list|()
expr_stmt|;
comment|// check header data has moved
name|QCOMPARE
argument_list|(
name|m_model
operator|->
name|headerData
argument_list|(
literal|1
argument_list|,
name|Qt
operator|::
name|Vertical
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|headerLabel
argument_list|)
expr_stmt|;
comment|// insert two rows
name|m_model
operator|->
name|insertRows
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|m_model
operator|->
name|rowCount
argument_list|()
argument_list|,
name|rowCount
operator|+
literal|2
argument_list|)
expr_stmt|;
comment|// check header data has moved
name|QCOMPARE
argument_list|(
name|m_model
operator|->
name|headerData
argument_list|(
literal|3
argument_list|,
name|Qt
operator|::
name|Vertical
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|headerLabel
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|insertRowsItems
name|void
name|tst_QStandardItemModel
operator|::
name|insertRowsItems
parameter_list|()
block|{
name|int
name|rowCount
init|=
name|m_model
operator|->
name|rowCount
argument_list|()
decl_stmt|;
name|QList
argument_list|<
name|QStandardItem
modifier|*
argument_list|>
name|items
decl_stmt|;
name|QStandardItemModel
modifier|*
name|m
init|=
name|qobject_cast
argument_list|<
name|QStandardItemModel
operator|*
argument_list|>
argument_list|(
name|m_model
argument_list|)
decl_stmt|;
name|QStandardItem
modifier|*
name|hiddenRoot
init|=
name|m
operator|->
name|invisibleRootItem
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|3
condition|;
operator|++
name|i
control|)
name|items
operator|.
name|append
argument_list|(
operator|new
name|QStandardItem
argument_list|(
name|QString
argument_list|(
literal|"%1"
argument_list|)
operator|.
name|arg
argument_list|(
name|i
operator|+
literal|10
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|hiddenRoot
operator|->
name|appendRows
argument_list|(
name|items
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|m_model
operator|->
name|rowCount
argument_list|()
argument_list|,
name|rowCount
operator|+
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|m_model
operator|->
name|index
argument_list|(
name|rowCount
operator|+
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|data
argument_list|()
operator|.
name|toInt
argument_list|()
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|m_model
operator|->
name|index
argument_list|(
name|rowCount
operator|+
literal|1
argument_list|,
literal|0
argument_list|)
operator|.
name|data
argument_list|()
operator|.
name|toInt
argument_list|()
argument_list|,
literal|11
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|m_model
operator|->
name|index
argument_list|(
name|rowCount
operator|+
literal|2
argument_list|,
literal|0
argument_list|)
operator|.
name|data
argument_list|()
operator|.
name|toInt
argument_list|()
argument_list|,
literal|12
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
name|rowCount
init|;
name|i
operator|<
name|rowCount
operator|+
literal|3
condition|;
operator|++
name|i
control|)
block|{
name|QVERIFY
argument_list|(
name|m
operator|->
name|item
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
cast|static_cast
argument_list|<
name|QAbstractItemModel
operator|*
argument_list|>
argument_list|(
name|m
operator|->
name|item
argument_list|(
name|i
argument_list|)
operator|->
name|model
argument_list|()
argument_list|)
argument_list|,
name|m_model
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|insertRowInHierarcy
name|void
name|tst_QStandardItemModel
operator|::
name|insertRowInHierarcy
parameter_list|()
block|{
name|QVERIFY
argument_list|(
name|m_model
operator|->
name|insertRows
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|m_model
operator|->
name|insertColumns
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|m_model
operator|->
name|hasIndex
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QModelIndex
name|parent
init|=
name|m_model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|parent
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|m_model
operator|->
name|insertRows
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
name|parent
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|m_model
operator|->
name|insertColumns
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
name|parent
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|m_model
operator|->
name|hasIndex
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|parent
argument_list|)
argument_list|)
expr_stmt|;
name|QModelIndex
name|child
init|=
name|m_model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|parent
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|child
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|insertColumn_data
name|void
name|tst_QStandardItemModel
operator|::
name|insertColumn_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"insertColumn"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expectedColumn"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Insert less then 0"
argument_list|)
operator|<<
operator|-
literal|1
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Insert at 0"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Insert beyond count"
argument_list|)
operator|<<
name|defaultSize
operator|+
literal|1
operator|<<
name|defaultSize
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Insert at count"
argument_list|)
operator|<<
name|defaultSize
operator|<<
name|defaultSize
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Insert in the middle"
argument_list|)
operator|<<
literal|1
operator|<<
literal|1
expr_stmt|;
block|}
end_function
begin_function
DECL|function|insertColumn
name|void
name|tst_QStandardItemModel
operator|::
name|insertColumn
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|insertColumn
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expectedColumn
argument_list|)
expr_stmt|;
comment|// default all initial items to DisplayRole: "initalitem"
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|m_model
operator|->
name|rowCount
argument_list|()
condition|;
operator|++
name|r
control|)
block|{
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
name|m_model
operator|->
name|columnCount
argument_list|()
condition|;
operator|++
name|c
control|)
block|{
name|m_model
operator|->
name|setData
argument_list|(
name|m_model
operator|->
name|index
argument_list|(
name|r
argument_list|,
name|c
argument_list|)
argument_list|,
literal|"initialitem"
argument_list|,
name|Qt
operator|::
name|DisplayRole
argument_list|)
expr_stmt|;
block|}
block|}
comment|// check that inserts changes columnCount
name|QCOMPARE
argument_list|(
name|m_model
operator|->
name|columnCount
argument_list|()
argument_list|,
name|defaultSize
argument_list|)
expr_stmt|;
name|m_model
operator|->
name|insertColumn
argument_list|(
name|insertColumn
argument_list|)
expr_stmt|;
if|if
condition|(
name|insertColumn
operator|>=
literal|0
operator|&&
name|insertColumn
operator|<=
name|defaultSize
condition|)
block|{
name|QCOMPARE
argument_list|(
name|m_model
operator|->
name|columnCount
argument_list|()
argument_list|,
name|defaultSize
operator|+
literal|1
argument_list|)
expr_stmt|;
comment|// check that signals were emitted with correct info
name|QCOMPARE
argument_list|(
name|rcFirst
index|[
name|ColumnsAboutToBeInserted
index|]
argument_list|,
name|expectedColumn
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rcLast
index|[
name|ColumnsAboutToBeInserted
index|]
argument_list|,
name|expectedColumn
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rcFirst
index|[
name|ColumnsInserted
index|]
argument_list|,
name|expectedColumn
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rcLast
index|[
name|ColumnsInserted
index|]
argument_list|,
name|expectedColumn
argument_list|)
expr_stmt|;
comment|//check that the inserted item has different DisplayRole than initial items
name|QVERIFY
argument_list|(
name|m_model
operator|->
name|data
argument_list|(
name|m_model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
name|expectedColumn
argument_list|)
argument_list|,
name|Qt
operator|::
name|DisplayRole
argument_list|)
operator|.
name|toString
argument_list|()
operator|!=
literal|"initialitem"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// We inserted something outside the bounds, do nothing
name|QCOMPARE
argument_list|(
name|m_model
operator|->
name|columnCount
argument_list|()
argument_list|,
name|defaultSize
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rcFirst
index|[
name|ColumnsAboutToBeInserted
index|]
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rcLast
index|[
name|ColumnsAboutToBeInserted
index|]
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rcFirst
index|[
name|ColumnsInserted
index|]
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rcLast
index|[
name|ColumnsInserted
index|]
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|insertColumns
name|void
name|tst_QStandardItemModel
operator|::
name|insertColumns
parameter_list|()
block|{
name|int
name|columnCount
init|=
name|m_model
operator|->
name|columnCount
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|columnCount
argument_list|,
name|defaultSize
argument_list|)
expr_stmt|;
comment|// insert custom header label
name|QString
name|headerLabel
init|=
literal|"custom"
decl_stmt|;
name|m_model
operator|->
name|setHeaderData
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|Horizontal
argument_list|,
name|headerLabel
argument_list|)
expr_stmt|;
comment|// insert one column
name|m_model
operator|->
name|insertColumns
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|m_model
operator|->
name|columnCount
argument_list|()
argument_list|,
name|columnCount
operator|+
literal|1
argument_list|)
expr_stmt|;
name|columnCount
operator|=
name|m_model
operator|->
name|columnCount
argument_list|()
expr_stmt|;
comment|// check header data has moved
name|QCOMPARE
argument_list|(
name|m_model
operator|->
name|headerData
argument_list|(
literal|1
argument_list|,
name|Qt
operator|::
name|Horizontal
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|headerLabel
argument_list|)
expr_stmt|;
comment|// insert two columns
name|m_model
operator|->
name|insertColumns
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|m_model
operator|->
name|columnCount
argument_list|()
argument_list|,
name|columnCount
operator|+
literal|2
argument_list|)
expr_stmt|;
comment|// check header data has moved
name|QCOMPARE
argument_list|(
name|m_model
operator|->
name|headerData
argument_list|(
literal|3
argument_list|,
name|Qt
operator|::
name|Horizontal
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|headerLabel
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|removeRows
name|void
name|tst_QStandardItemModel
operator|::
name|removeRows
parameter_list|()
block|{
name|int
name|rowCount
init|=
name|m_model
operator|->
name|rowCount
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|rowCount
argument_list|,
name|defaultSize
argument_list|)
expr_stmt|;
comment|// insert custom header label
name|QString
name|headerLabel
init|=
literal|"custom"
decl_stmt|;
name|m_model
operator|->
name|setHeaderData
argument_list|(
name|rowCount
operator|-
literal|1
argument_list|,
name|Qt
operator|::
name|Vertical
argument_list|,
name|headerLabel
argument_list|)
expr_stmt|;
comment|// remove one row
name|m_model
operator|->
name|removeRows
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|m_model
operator|->
name|rowCount
argument_list|()
argument_list|,
name|rowCount
operator|-
literal|1
argument_list|)
expr_stmt|;
name|rowCount
operator|=
name|m_model
operator|->
name|rowCount
argument_list|()
expr_stmt|;
comment|// check header data has moved
name|QCOMPARE
argument_list|(
name|m_model
operator|->
name|headerData
argument_list|(
name|rowCount
operator|-
literal|1
argument_list|,
name|Qt
operator|::
name|Vertical
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|headerLabel
argument_list|)
expr_stmt|;
comment|// remove two rows
name|m_model
operator|->
name|removeRows
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|m_model
operator|->
name|rowCount
argument_list|()
argument_list|,
name|rowCount
operator|-
literal|2
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|removeColumns
name|void
name|tst_QStandardItemModel
operator|::
name|removeColumns
parameter_list|()
block|{
name|int
name|columnCount
init|=
name|m_model
operator|->
name|columnCount
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|columnCount
argument_list|,
name|defaultSize
argument_list|)
expr_stmt|;
comment|// insert custom header label
name|QString
name|headerLabel
init|=
literal|"custom"
decl_stmt|;
name|m_model
operator|->
name|setHeaderData
argument_list|(
name|columnCount
operator|-
literal|1
argument_list|,
name|Qt
operator|::
name|Horizontal
argument_list|,
name|headerLabel
argument_list|)
expr_stmt|;
comment|// remove one column
name|m_model
operator|->
name|removeColumns
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|m_model
operator|->
name|columnCount
argument_list|()
argument_list|,
name|columnCount
operator|-
literal|1
argument_list|)
expr_stmt|;
name|columnCount
operator|=
name|m_model
operator|->
name|columnCount
argument_list|()
expr_stmt|;
comment|// check header data has moved
name|QCOMPARE
argument_list|(
name|m_model
operator|->
name|headerData
argument_list|(
name|columnCount
operator|-
literal|1
argument_list|,
name|Qt
operator|::
name|Horizontal
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|headerLabel
argument_list|)
expr_stmt|;
comment|// remove two columns
name|m_model
operator|->
name|removeColumns
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|m_model
operator|->
name|columnCount
argument_list|()
argument_list|,
name|columnCount
operator|-
literal|2
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setHeaderData
name|void
name|tst_QStandardItemModel
operator|::
name|setHeaderData
parameter_list|()
block|{
for|for
control|(
name|int
name|x
init|=
literal|0
init|;
name|x
operator|<
literal|2
condition|;
operator|++
name|x
control|)
block|{
name|bool
name|vertical
init|=
operator|(
name|x
operator|==
literal|0
operator|)
decl_stmt|;
name|int
name|count
init|=
name|vertical
condition|?
name|m_model
operator|->
name|rowCount
argument_list|()
else|:
name|m_model
operator|->
name|columnCount
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|count
argument_list|,
name|defaultSize
argument_list|)
expr_stmt|;
name|Qt
operator|::
name|Orientation
name|orient
init|=
name|vertical
condition|?
name|Qt
operator|::
name|Vertical
else|:
name|Qt
operator|::
name|Horizontal
decl_stmt|;
comment|// check default values are ok
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|count
condition|;
operator|++
name|i
control|)
name|QCOMPARE
argument_list|(
name|m_model
operator|->
name|headerData
argument_list|(
name|i
argument_list|,
name|orient
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
operator|::
name|number
argument_list|(
name|i
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QSignalSpy
name|headerDataChangedSpy
argument_list|(
name|m_model
argument_list|,
name|SIGNAL
argument_list|(
name|headerDataChanged
argument_list|(
name|Qt
operator|::
name|Orientation
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|dataChangedSpy
argument_list|(
name|m_model
argument_list|,
name|SIGNAL
argument_list|(
name|dataChanged
argument_list|(
name|QModelIndex
argument_list|,
name|QModelIndex
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
comment|// insert custom values and check
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|count
condition|;
operator|++
name|i
control|)
block|{
name|QString
name|customString
init|=
name|QString
argument_list|(
literal|"custom"
argument_list|)
operator|+
name|QString
operator|::
name|number
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|m_model
operator|->
name|setHeaderData
argument_list|(
name|i
argument_list|,
name|orient
argument_list|,
name|customString
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|headerDataChangedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dataChangedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QVariantList
name|args
init|=
name|headerDataChangedSpy
operator|.
name|takeFirst
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|qvariant_cast
argument_list|<
name|Qt
operator|::
name|Orientation
argument_list|>
argument_list|(
name|args
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|,
name|orient
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|args
operator|.
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
name|i
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|args
operator|.
name|at
argument_list|(
literal|2
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
name|i
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|m_model
operator|->
name|headerData
argument_list|(
name|i
argument_list|,
name|orient
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|customString
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|m_model
operator|->
name|setHeaderData
argument_list|(
name|i
argument_list|,
name|orient
argument_list|,
name|customString
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|headerDataChangedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dataChangedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
comment|//check read from invalid sections
name|QVERIFY
argument_list|(
operator|!
name|m_model
operator|->
name|headerData
argument_list|(
name|count
argument_list|,
name|orient
argument_list|)
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|m_model
operator|->
name|headerData
argument_list|(
operator|-
literal|1
argument_list|,
name|orient
argument_list|)
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
comment|//check write to invalid section
name|QCOMPARE
argument_list|(
name|m_model
operator|->
name|setHeaderData
argument_list|(
name|count
argument_list|,
name|orient
argument_list|,
literal|"foo"
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|m_model
operator|->
name|setHeaderData
argument_list|(
operator|-
literal|1
argument_list|,
name|orient
argument_list|,
literal|"foo"
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|m_model
operator|->
name|headerData
argument_list|(
name|count
argument_list|,
name|orient
argument_list|)
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|m_model
operator|->
name|headerData
argument_list|(
operator|-
literal|1
argument_list|,
name|orient
argument_list|)
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|persistentIndexes
name|void
name|tst_QStandardItemModel
operator|::
name|persistentIndexes
parameter_list|()
block|{
name|QCOMPARE
argument_list|(
name|m_model
operator|->
name|rowCount
argument_list|()
argument_list|,
name|defaultSize
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|m_model
operator|->
name|columnCount
argument_list|()
argument_list|,
name|defaultSize
argument_list|)
expr_stmt|;
comment|// create a persisten index at 0,0
name|QPersistentModelIndex
name|persistentIndex
argument_list|(
name|m_model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
comment|// verify it is ok and at the correct spot
name|QVERIFY
argument_list|(
name|persistentIndex
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|persistentIndex
operator|.
name|row
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|persistentIndex
operator|.
name|column
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// insert row and check that the persisten index has moved
name|QVERIFY
argument_list|(
name|m_model
operator|->
name|insertRow
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|persistentIndex
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|persistentIndex
operator|.
name|row
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|persistentIndex
operator|.
name|column
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// insert row after the persisten index and see that it stays the same
name|QVERIFY
argument_list|(
name|m_model
operator|->
name|insertRow
argument_list|(
name|m_model
operator|->
name|rowCount
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|persistentIndex
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|persistentIndex
operator|.
name|row
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|persistentIndex
operator|.
name|column
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// insert column and check that the persisten index has moved
name|QVERIFY
argument_list|(
name|m_model
operator|->
name|insertColumn
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|persistentIndex
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|persistentIndex
operator|.
name|row
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|persistentIndex
operator|.
name|column
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// insert column after the persisten index and see that it stays the same
name|QVERIFY
argument_list|(
name|m_model
operator|->
name|insertColumn
argument_list|(
name|m_model
operator|->
name|columnCount
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|persistentIndex
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|persistentIndex
operator|.
name|row
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|persistentIndex
operator|.
name|column
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// removes a row beyond the persistent index and see it stays the same
name|QVERIFY
argument_list|(
name|m_model
operator|->
name|removeRow
argument_list|(
name|m_model
operator|->
name|rowCount
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|persistentIndex
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|persistentIndex
operator|.
name|row
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|persistentIndex
operator|.
name|column
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// removes a column beyond the persistent index and see it stays the same
name|QVERIFY
argument_list|(
name|m_model
operator|->
name|removeColumn
argument_list|(
name|m_model
operator|->
name|columnCount
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|persistentIndex
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|persistentIndex
operator|.
name|row
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|persistentIndex
operator|.
name|column
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// removes a row before the persistent index and see it moves the same
name|QVERIFY
argument_list|(
name|m_model
operator|->
name|removeRow
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|persistentIndex
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|persistentIndex
operator|.
name|row
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|persistentIndex
operator|.
name|column
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// removes a column before the persistent index and see it moves the same
name|QVERIFY
argument_list|(
name|m_model
operator|->
name|removeColumn
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|persistentIndex
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|persistentIndex
operator|.
name|row
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|persistentIndex
operator|.
name|column
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// remove the row where the persistent index is, and see that it becomes invalid
name|QVERIFY
argument_list|(
name|m_model
operator|->
name|removeRow
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|persistentIndex
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
comment|// remove the row where the persistent index is, and see that it becomes invalid
name|persistentIndex
operator|=
name|m_model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|persistentIndex
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|m_model
operator|->
name|removeColumn
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|persistentIndex
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|checkAboutToBeRemoved
name|void
name|tst_QStandardItemModel
operator|::
name|checkAboutToBeRemoved
parameter_list|()
block|{
name|QVERIFY
argument_list|(
name|persistent
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|checkRemoved
name|void
name|tst_QStandardItemModel
operator|::
name|checkRemoved
parameter_list|()
block|{
name|QVERIFY
argument_list|(
operator|!
name|persistent
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|removingPersistentIndexes
name|void
name|tst_QStandardItemModel
operator|::
name|removingPersistentIndexes
parameter_list|()
block|{
comment|// add 10 rows and columns to model to make it big enough
name|QVERIFY
argument_list|(
name|m_model
operator|->
name|insertRows
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|m_model
operator|->
name|insertColumns
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|m_model
argument_list|,
name|SIGNAL
argument_list|(
name|rowsAboutToBeRemoved
argument_list|(
name|QModelIndex
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|checkAboutToBeRemoved
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|m_model
argument_list|,
name|SIGNAL
argument_list|(
name|rowsRemoved
argument_list|(
name|QModelIndex
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|checkRemoved
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|m_model
argument_list|,
name|SIGNAL
argument_list|(
name|columnsAboutToBeRemoved
argument_list|(
name|QModelIndex
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|checkAboutToBeRemoved
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|m_model
argument_list|,
name|SIGNAL
argument_list|(
name|columnsRemoved
argument_list|(
name|QModelIndex
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|checkRemoved
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// test removeRow
comment|// add child table 3x3 to parent index(0, 0)
name|QVERIFY
argument_list|(
name|m_model
operator|->
name|insertRows
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|,
name|m_model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|m_model
operator|->
name|insertColumns
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|,
name|m_model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// set child to persistent and delete parent row
name|persistent
operator|=
name|m_model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|m_model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|persistent
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|m_model
operator|->
name|removeRow
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|// set persistent to index(0, 0) and remove that row
name|persistent
operator|=
name|m_model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|persistent
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|m_model
operator|->
name|removeRow
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|// test removeColumn
comment|// add child table 3x3 to parent index (0, 0)
name|QVERIFY
argument_list|(
name|m_model
operator|->
name|insertRows
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|,
name|m_model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|m_model
operator|->
name|insertColumns
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|,
name|m_model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// set child to persistent and delete parent column
name|persistent
operator|=
name|m_model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|m_model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|persistent
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|m_model
operator|->
name|removeColumn
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|// set persistent to index(0, 0) and remove that column
name|persistent
operator|=
name|m_model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|persistent
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|m_model
operator|->
name|removeColumn
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|disconnect
argument_list|(
name|m_model
argument_list|,
name|SIGNAL
argument_list|(
name|rowsAboutToBeRemoved
argument_list|(
name|QModelIndex
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|checkAboutToBeRemoved
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|disconnect
argument_list|(
name|m_model
argument_list|,
name|SIGNAL
argument_list|(
name|rowsRemoved
argument_list|(
name|QModelIndex
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|checkRemoved
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|disconnect
argument_list|(
name|m_model
argument_list|,
name|SIGNAL
argument_list|(
name|columnsAboutToBeRemoved
argument_list|(
name|QModelIndex
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|checkAboutToBeRemoved
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|disconnect
argument_list|(
name|m_model
argument_list|,
name|SIGNAL
argument_list|(
name|columnsRemoved
argument_list|(
name|QModelIndex
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|checkRemoved
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|updateRowAboutToBeRemoved
name|void
name|tst_QStandardItemModel
operator|::
name|updateRowAboutToBeRemoved
parameter_list|()
block|{
name|QModelIndex
name|idx
init|=
name|m_model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|idx
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|persistent
operator|=
name|idx
expr_stmt|;
block|}
end_function
begin_function
DECL|function|updatingPersistentIndexes
name|void
name|tst_QStandardItemModel
operator|::
name|updatingPersistentIndexes
parameter_list|()
block|{
name|QObject
operator|::
name|connect
argument_list|(
name|m_model
argument_list|,
name|SIGNAL
argument_list|(
name|rowsAboutToBeRemoved
argument_list|(
name|QModelIndex
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|updateRowAboutToBeRemoved
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|persistent
operator|=
name|m_model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|persistent
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|m_model
operator|->
name|removeRow
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|persistent
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QPersistentModelIndex
name|tmp
init|=
name|m_model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|persistent
argument_list|,
name|tmp
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|disconnect
argument_list|(
name|m_model
argument_list|,
name|SIGNAL
argument_list|(
name|rowsAboutToBeRemoved
argument_list|(
name|QModelIndex
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|updateRowAboutToBeRemoved
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|modelChanged
name|void
name|tst_QStandardItemModel
operator|::
name|modelChanged
parameter_list|(
name|ModelChanged
name|change
parameter_list|,
specifier|const
name|QModelIndex
modifier|&
name|parent
parameter_list|,
name|int
name|first
parameter_list|,
name|int
name|last
parameter_list|)
block|{
name|rcParent
index|[
name|change
index|]
operator|=
name|parent
expr_stmt|;
name|rcFirst
index|[
name|change
index|]
operator|=
name|first
expr_stmt|;
name|rcLast
index|[
name|change
index|]
operator|=
name|last
expr_stmt|;
block|}
end_function
begin_function
DECL|function|checkChildren
name|void
name|tst_QStandardItemModel
operator|::
name|checkChildren
parameter_list|()
block|{
name|QStandardItemModel
name|model
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|columnCount
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|model
operator|.
name|hasChildren
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|insertRows
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|model
operator|.
name|hasChildren
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|columnCount
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|insertColumns
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|hasChildren
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|columnCount
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QModelIndex
name|idx
init|=
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|model
operator|.
name|hasChildren
argument_list|(
name|idx
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|(
name|idx
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|columnCount
argument_list|(
name|idx
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|insertRows
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
name|idx
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|model
operator|.
name|hasChildren
argument_list|(
name|idx
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|(
name|idx
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|columnCount
argument_list|(
name|idx
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|insertColumns
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
name|idx
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|hasChildren
argument_list|(
name|idx
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|(
name|idx
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|columnCount
argument_list|(
name|idx
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QModelIndex
name|idx2
init|=
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|idx
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|model
operator|.
name|hasChildren
argument_list|(
name|idx2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|(
name|idx2
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|columnCount
argument_list|(
name|idx2
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|removeRows
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
name|idx
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|hasChildren
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|columnCount
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|model
operator|.
name|hasChildren
argument_list|(
name|idx
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|(
name|idx
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|columnCount
argument_list|(
name|idx
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|removeRows
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|model
operator|.
name|hasChildren
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|columnCount
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|sibling
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|data
name|void
name|tst_QStandardItemModel
operator|::
name|data
parameter_list|()
block|{
comment|// bad args
name|m_model
operator|->
name|setData
argument_list|(
name|QModelIndex
argument_list|()
argument_list|,
literal|"bla"
argument_list|,
name|Qt
operator|::
name|DisplayRole
argument_list|)
expr_stmt|;
name|QIcon
name|icon
decl_stmt|;
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|m_model
operator|->
name|rowCount
argument_list|()
condition|;
operator|++
name|r
control|)
block|{
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
name|m_model
operator|->
name|columnCount
argument_list|()
condition|;
operator|++
name|c
control|)
block|{
name|m_model
operator|->
name|setData
argument_list|(
name|m_model
operator|->
name|index
argument_list|(
name|r
argument_list|,
name|c
argument_list|)
argument_list|,
literal|"initialitem"
argument_list|,
name|Qt
operator|::
name|DisplayRole
argument_list|)
expr_stmt|;
name|m_model
operator|->
name|setData
argument_list|(
name|m_model
operator|->
name|index
argument_list|(
name|r
argument_list|,
name|c
argument_list|)
argument_list|,
literal|"tooltip"
argument_list|,
name|Qt
operator|::
name|ToolTipRole
argument_list|)
expr_stmt|;
name|m_model
operator|->
name|setData
argument_list|(
name|m_model
operator|->
name|index
argument_list|(
name|r
argument_list|,
name|c
argument_list|)
argument_list|,
name|icon
argument_list|,
name|Qt
operator|::
name|DecorationRole
argument_list|)
expr_stmt|;
block|}
block|}
name|QVERIFY
argument_list|(
name|m_model
operator|->
name|data
argument_list|(
name|m_model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|Qt
operator|::
name|DisplayRole
argument_list|)
operator|.
name|toString
argument_list|()
operator|==
literal|"initialitem"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|m_model
operator|->
name|data
argument_list|(
name|m_model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|Qt
operator|::
name|ToolTipRole
argument_list|)
operator|.
name|toString
argument_list|()
operator|==
literal|"tooltip"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|clear
name|void
name|tst_QStandardItemModel
operator|::
name|clear
parameter_list|()
block|{
name|QStandardItemModel
name|model
decl_stmt|;
name|model
operator|.
name|insertColumns
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|model
operator|.
name|insertRows
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|columnCount
argument_list|()
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QSignalSpy
name|modelResetSpy
argument_list|(
operator|&
name|model
argument_list|,
name|SIGNAL
argument_list|(
name|modelReset
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|layoutChangedSpy
argument_list|(
operator|&
name|model
argument_list|,
name|SIGNAL
argument_list|(
name|layoutChanged
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|rowsRemovedSpy
argument_list|(
operator|&
name|model
argument_list|,
name|SIGNAL
argument_list|(
name|rowsRemoved
argument_list|(
name|QModelIndex
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|model
operator|.
name|clear
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|modelResetSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|layoutChangedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rowsRemovedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|columnCount
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|hasChildren
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|sort_data
name|void
name|tst_QStandardItemModel
operator|::
name|sort_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"sortOrder"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QStringList
argument_list|>
argument_list|(
literal|"initial"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QStringList
argument_list|>
argument_list|(
literal|"expected"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"flat descending"
argument_list|)
operator|<<
cast|static_cast
argument_list|<
name|int
argument_list|>
argument_list|(
name|Qt
operator|::
name|DescendingOrder
argument_list|)
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"delta"
operator|<<
literal|"yankee"
operator|<<
literal|"bravo"
operator|<<
literal|"lima"
operator|<<
literal|"charlie"
operator|<<
literal|"juliet"
operator|<<
literal|"tango"
operator|<<
literal|"hotel"
operator|<<
literal|"uniform"
operator|<<
literal|"alpha"
operator|<<
literal|"echo"
operator|<<
literal|"golf"
operator|<<
literal|"quebec"
operator|<<
literal|"foxtrot"
operator|<<
literal|"india"
operator|<<
literal|"romeo"
operator|<<
literal|"november"
operator|<<
literal|"oskar"
operator|<<
literal|"zulu"
operator|<<
literal|"kilo"
operator|<<
literal|"whiskey"
operator|<<
literal|"mike"
operator|<<
literal|"papa"
operator|<<
literal|"sierra"
operator|<<
literal|"xray"
operator|<<
literal|"viktor"
operator|)
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"zulu"
operator|<<
literal|"yankee"
operator|<<
literal|"xray"
operator|<<
literal|"whiskey"
operator|<<
literal|"viktor"
operator|<<
literal|"uniform"
operator|<<
literal|"tango"
operator|<<
literal|"sierra"
operator|<<
literal|"romeo"
operator|<<
literal|"quebec"
operator|<<
literal|"papa"
operator|<<
literal|"oskar"
operator|<<
literal|"november"
operator|<<
literal|"mike"
operator|<<
literal|"lima"
operator|<<
literal|"kilo"
operator|<<
literal|"juliet"
operator|<<
literal|"india"
operator|<<
literal|"hotel"
operator|<<
literal|"golf"
operator|<<
literal|"foxtrot"
operator|<<
literal|"echo"
operator|<<
literal|"delta"
operator|<<
literal|"charlie"
operator|<<
literal|"bravo"
operator|<<
literal|"alpha"
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"flat ascending"
argument_list|)
operator|<<
cast|static_cast
argument_list|<
name|int
argument_list|>
argument_list|(
name|Qt
operator|::
name|AscendingOrder
argument_list|)
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"delta"
operator|<<
literal|"yankee"
operator|<<
literal|"bravo"
operator|<<
literal|"lima"
operator|<<
literal|"charlie"
operator|<<
literal|"juliet"
operator|<<
literal|"tango"
operator|<<
literal|"hotel"
operator|<<
literal|"uniform"
operator|<<
literal|"alpha"
operator|<<
literal|"echo"
operator|<<
literal|"golf"
operator|<<
literal|"quebec"
operator|<<
literal|"foxtrot"
operator|<<
literal|"india"
operator|<<
literal|"romeo"
operator|<<
literal|"november"
operator|<<
literal|"oskar"
operator|<<
literal|"zulu"
operator|<<
literal|"kilo"
operator|<<
literal|"whiskey"
operator|<<
literal|"mike"
operator|<<
literal|"papa"
operator|<<
literal|"sierra"
operator|<<
literal|"xray"
operator|<<
literal|"viktor"
operator|)
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"alpha"
operator|<<
literal|"bravo"
operator|<<
literal|"charlie"
operator|<<
literal|"delta"
operator|<<
literal|"echo"
operator|<<
literal|"foxtrot"
operator|<<
literal|"golf"
operator|<<
literal|"hotel"
operator|<<
literal|"india"
operator|<<
literal|"juliet"
operator|<<
literal|"kilo"
operator|<<
literal|"lima"
operator|<<
literal|"mike"
operator|<<
literal|"november"
operator|<<
literal|"oskar"
operator|<<
literal|"papa"
operator|<<
literal|"quebec"
operator|<<
literal|"romeo"
operator|<<
literal|"sierra"
operator|<<
literal|"tango"
operator|<<
literal|"uniform"
operator|<<
literal|"viktor"
operator|<<
literal|"whiskey"
operator|<<
literal|"xray"
operator|<<
literal|"yankee"
operator|<<
literal|"zulu"
operator|)
expr_stmt|;
name|QStringList
name|list
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1000
init|;
name|i
operator|<
literal|2000
condition|;
operator|++
name|i
control|)
name|list
operator|.
name|append
argument_list|(
name|QString
argument_list|(
literal|"Number: %1"
argument_list|)
operator|.
name|arg
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"large set ascending"
argument_list|)
operator|<<
cast|static_cast
argument_list|<
name|int
argument_list|>
argument_list|(
name|Qt
operator|::
name|AscendingOrder
argument_list|)
operator|<<
name|list
operator|<<
name|list
expr_stmt|;
block|}
end_function
begin_function
DECL|function|sort
name|void
name|tst_QStandardItemModel
operator|::
name|sort
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|sortOrder
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QStringList
argument_list|,
name|initial
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QStringList
argument_list|,
name|expected
argument_list|)
expr_stmt|;
comment|// prepare model
name|QStandardItemModel
name|model
decl_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|insertRows
argument_list|(
literal|0
argument_list|,
name|initial
operator|.
name|count
argument_list|()
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|(
name|QModelIndex
argument_list|()
argument_list|)
argument_list|,
name|initial
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
name|model
operator|.
name|insertColumns
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|columnCount
argument_list|(
name|QModelIndex
argument_list|()
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|row
init|=
literal|0
init|;
name|row
operator|<
name|model
operator|.
name|rowCount
argument_list|(
name|QModelIndex
argument_list|()
argument_list|)
condition|;
operator|++
name|row
control|)
block|{
name|QModelIndex
name|index
init|=
name|model
operator|.
name|index
argument_list|(
name|row
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
decl_stmt|;
name|model
operator|.
name|setData
argument_list|(
name|index
argument_list|,
name|initial
operator|.
name|at
argument_list|(
name|row
argument_list|)
argument_list|,
name|Qt
operator|::
name|DisplayRole
argument_list|)
expr_stmt|;
block|}
name|QSignalSpy
name|layoutAboutToBeChangedSpy
argument_list|(
operator|&
name|model
argument_list|,
name|SIGNAL
argument_list|(
name|layoutAboutToBeChanged
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|layoutChangedSpy
argument_list|(
operator|&
name|model
argument_list|,
name|SIGNAL
argument_list|(
name|layoutChanged
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
comment|// sort
name|model
operator|.
name|sort
argument_list|(
literal|0
argument_list|,
cast|static_cast
argument_list|<
name|Qt
operator|::
name|SortOrder
argument_list|>
argument_list|(
name|sortOrder
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|layoutAboutToBeChangedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|layoutChangedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// make sure the model is sorted
for|for
control|(
name|int
name|row
init|=
literal|0
init|;
name|row
operator|<
name|model
operator|.
name|rowCount
argument_list|(
name|QModelIndex
argument_list|()
argument_list|)
condition|;
operator|++
name|row
control|)
block|{
name|QModelIndex
name|index
init|=
name|model
operator|.
name|index
argument_list|(
name|row
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|index
argument_list|,
name|Qt
operator|::
name|DisplayRole
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|expected
operator|.
name|at
argument_list|(
name|row
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|sortRole_data
name|void
name|tst_QStandardItemModel
operator|::
name|sortRole_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QStringList
argument_list|>
argument_list|(
literal|"initialText"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QVariantList
argument_list|>
argument_list|(
literal|"initialData"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"sortRole"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"sortOrder"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QStringList
argument_list|>
argument_list|(
literal|"expectedText"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QVariantList
argument_list|>
argument_list|(
literal|"expectedData"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"sort ascending with Qt::DisplayRole"
argument_list|)
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"b"
operator|<<
literal|"a"
operator|<<
literal|"c"
operator|)
operator|<<
operator|(
name|QVariantList
argument_list|()
operator|<<
literal|2
operator|<<
literal|3
operator|<<
literal|1
operator|)
operator|<<
cast|static_cast
argument_list|<
name|int
argument_list|>
argument_list|(
name|Qt
operator|::
name|DisplayRole
argument_list|)
operator|<<
cast|static_cast
argument_list|<
name|int
argument_list|>
argument_list|(
name|Qt
operator|::
name|AscendingOrder
argument_list|)
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"a"
operator|<<
literal|"b"
operator|<<
literal|"c"
operator|)
operator|<<
operator|(
name|QVariantList
argument_list|()
operator|<<
literal|3
operator|<<
literal|2
operator|<<
literal|1
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"sort ascending with Qt::UserRole"
argument_list|)
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"a"
operator|<<
literal|"b"
operator|<<
literal|"c"
operator|)
operator|<<
operator|(
name|QVariantList
argument_list|()
operator|<<
literal|3
operator|<<
literal|2
operator|<<
literal|1
operator|)
operator|<<
cast|static_cast
argument_list|<
name|int
argument_list|>
argument_list|(
name|Qt
operator|::
name|UserRole
argument_list|)
operator|<<
cast|static_cast
argument_list|<
name|int
argument_list|>
argument_list|(
name|Qt
operator|::
name|AscendingOrder
argument_list|)
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"c"
operator|<<
literal|"b"
operator|<<
literal|"a"
operator|)
operator|<<
operator|(
name|QVariantList
argument_list|()
operator|<<
literal|1
operator|<<
literal|2
operator|<<
literal|3
operator|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|sortRole
name|void
name|tst_QStandardItemModel
operator|::
name|sortRole
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QStringList
argument_list|,
name|initialText
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QVariantList
argument_list|,
name|initialData
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|sortRole
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|sortOrder
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QStringList
argument_list|,
name|expectedText
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QVariantList
argument_list|,
name|expectedData
argument_list|)
expr_stmt|;
name|QStandardItemModel
name|model
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|initialText
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|QStandardItem
modifier|*
name|item
init|=
operator|new
name|QStandardItem
decl_stmt|;
name|item
operator|->
name|setText
argument_list|(
name|initialText
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|item
operator|->
name|setData
argument_list|(
name|initialData
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|,
name|Qt
operator|::
name|UserRole
argument_list|)
expr_stmt|;
name|model
operator|.
name|appendRow
argument_list|(
name|item
argument_list|)
expr_stmt|;
block|}
name|model
operator|.
name|setSortRole
argument_list|(
name|sortRole
argument_list|)
expr_stmt|;
name|model
operator|.
name|sort
argument_list|(
literal|0
argument_list|,
cast|static_cast
argument_list|<
name|Qt
operator|::
name|SortOrder
argument_list|>
argument_list|(
name|sortOrder
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|expectedText
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|QStandardItem
modifier|*
name|item
init|=
name|model
operator|.
name|item
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|item
operator|->
name|text
argument_list|()
argument_list|,
name|expectedText
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item
operator|->
name|data
argument_list|(
name|Qt
operator|::
name|UserRole
argument_list|)
argument_list|,
name|expectedData
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|findItems
name|void
name|tst_QStandardItemModel
operator|::
name|findItems
parameter_list|()
block|{
name|QStandardItemModel
name|model
decl_stmt|;
name|model
operator|.
name|appendRow
argument_list|(
operator|new
name|QStandardItem
argument_list|(
name|QLatin1String
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|appendRow
argument_list|(
operator|new
name|QStandardItem
argument_list|(
name|QLatin1String
argument_list|(
literal|"bar"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|item
argument_list|(
literal|1
argument_list|)
operator|->
name|appendRow
argument_list|(
operator|new
name|QStandardItem
argument_list|(
name|QLatin1String
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|QStandardItem
modifier|*
argument_list|>
name|matches
decl_stmt|;
name|matches
operator|=
name|model
operator|.
name|findItems
argument_list|(
name|QLatin1String
argument_list|(
literal|"foo"
argument_list|)
argument_list|,
name|Qt
operator|::
name|MatchExactly
operator||
name|Qt
operator|::
name|MatchRecursive
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|matches
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|matches
operator|=
name|model
operator|.
name|findItems
argument_list|(
name|QLatin1String
argument_list|(
literal|"foo"
argument_list|)
argument_list|,
name|Qt
operator|::
name|MatchExactly
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|matches
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|matches
operator|=
name|model
operator|.
name|findItems
argument_list|(
name|QLatin1String
argument_list|(
literal|"food"
argument_list|)
argument_list|,
name|Qt
operator|::
name|MatchExactly
operator||
name|Qt
operator|::
name|MatchRecursive
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|matches
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|matches
operator|=
name|model
operator|.
name|findItems
argument_list|(
name|QLatin1String
argument_list|(
literal|"foo"
argument_list|)
argument_list|,
name|Qt
operator|::
name|MatchExactly
operator||
name|Qt
operator|::
name|MatchRecursive
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|matches
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|matches
operator|=
name|model
operator|.
name|findItems
argument_list|(
name|QLatin1String
argument_list|(
literal|"foo"
argument_list|)
argument_list|,
name|Qt
operator|::
name|MatchExactly
operator||
name|Qt
operator|::
name|MatchRecursive
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|matches
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|getSetHeaderItem
name|void
name|tst_QStandardItemModel
operator|::
name|getSetHeaderItem
parameter_list|()
block|{
name|QStandardItemModel
name|model
decl_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|horizontalHeaderItem
argument_list|(
literal|0
argument_list|)
argument_list|,
cast|static_cast
argument_list|<
name|QStandardItem
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QStandardItem
modifier|*
name|hheader
init|=
operator|new
name|QStandardItem
argument_list|()
decl_stmt|;
name|model
operator|.
name|setHorizontalHeaderItem
argument_list|(
literal|0
argument_list|,
name|hheader
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|columnCount
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|horizontalHeaderItem
argument_list|(
literal|0
argument_list|)
argument_list|,
name|hheader
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|hheader
operator|->
name|model
argument_list|()
argument_list|,
operator|&
name|model
argument_list|)
expr_stmt|;
name|model
operator|.
name|setHorizontalHeaderItem
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|horizontalHeaderItem
argument_list|(
literal|0
argument_list|)
argument_list|,
cast|static_cast
argument_list|<
name|QStandardItem
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|verticalHeaderItem
argument_list|(
literal|0
argument_list|)
argument_list|,
cast|static_cast
argument_list|<
name|QStandardItem
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QStandardItem
modifier|*
name|vheader
init|=
operator|new
name|QStandardItem
argument_list|()
decl_stmt|;
name|model
operator|.
name|setVerticalHeaderItem
argument_list|(
literal|0
argument_list|,
name|vheader
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|verticalHeaderItem
argument_list|(
literal|0
argument_list|)
argument_list|,
name|vheader
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|vheader
operator|->
name|model
argument_list|()
argument_list|,
operator|&
name|model
argument_list|)
expr_stmt|;
name|model
operator|.
name|setVerticalHeaderItem
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|verticalHeaderItem
argument_list|(
literal|0
argument_list|)
argument_list|,
cast|static_cast
argument_list|<
name|QStandardItem
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|indexFromItem
name|void
name|tst_QStandardItemModel
operator|::
name|indexFromItem
parameter_list|()
block|{
name|QStandardItemModel
name|model
decl_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|indexFromItem
argument_list|(
name|model
operator|.
name|invisibleRootItem
argument_list|()
argument_list|)
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|QStandardItem
modifier|*
name|item
init|=
operator|new
name|QStandardItem
decl_stmt|;
name|model
operator|.
name|setItem
argument_list|(
literal|10
argument_list|,
literal|20
argument_list|,
name|item
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item
operator|->
name|model
argument_list|()
argument_list|,
operator|&
name|model
argument_list|)
expr_stmt|;
name|QModelIndex
name|itemIndex
init|=
name|model
operator|.
name|indexFromItem
argument_list|(
name|item
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|itemIndex
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|itemIndex
operator|.
name|row
argument_list|()
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|itemIndex
operator|.
name|column
argument_list|()
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|itemIndex
operator|.
name|parent
argument_list|()
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|itemIndex
operator|.
name|model
argument_list|()
argument_list|,
operator|(
specifier|const
name|QAbstractItemModel
operator|*
operator|)
operator|(
operator|&
name|model
operator|)
argument_list|)
expr_stmt|;
name|QStandardItem
modifier|*
name|child
init|=
operator|new
name|QStandardItem
decl_stmt|;
name|item
operator|->
name|setChild
argument_list|(
literal|4
argument_list|,
literal|2
argument_list|,
name|child
argument_list|)
expr_stmt|;
name|QModelIndex
name|childIndex
init|=
name|model
operator|.
name|indexFromItem
argument_list|(
name|child
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|childIndex
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|childIndex
operator|.
name|row
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|childIndex
operator|.
name|column
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|childIndex
operator|.
name|parent
argument_list|()
argument_list|,
name|itemIndex
argument_list|)
expr_stmt|;
name|QStandardItem
modifier|*
name|dummy
init|=
operator|new
name|QStandardItem
decl_stmt|;
name|QModelIndex
name|noSuchIndex
init|=
name|model
operator|.
name|indexFromItem
argument_list|(
name|dummy
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|noSuchIndex
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
operator|delete
name|dummy
expr_stmt|;
name|noSuchIndex
operator|=
name|model
operator|.
name|indexFromItem
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|noSuchIndex
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|itemFromIndex
name|void
name|tst_QStandardItemModel
operator|::
name|itemFromIndex
parameter_list|()
block|{
name|QStandardItemModel
name|model
decl_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|itemFromIndex
argument_list|(
name|QModelIndex
argument_list|()
argument_list|)
argument_list|,
operator|(
name|QStandardItem
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|QStandardItem
modifier|*
name|item
init|=
operator|new
name|QStandardItem
decl_stmt|;
name|model
operator|.
name|setItem
argument_list|(
literal|10
argument_list|,
literal|20
argument_list|,
name|item
argument_list|)
expr_stmt|;
name|QModelIndex
name|itemIndex
init|=
name|model
operator|.
name|index
argument_list|(
literal|10
argument_list|,
literal|20
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|itemIndex
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|itemFromIndex
argument_list|(
name|itemIndex
argument_list|)
argument_list|,
name|item
argument_list|)
expr_stmt|;
name|QStandardItem
modifier|*
name|child
init|=
operator|new
name|QStandardItem
decl_stmt|;
name|item
operator|->
name|setChild
argument_list|(
literal|4
argument_list|,
literal|2
argument_list|,
name|child
argument_list|)
expr_stmt|;
name|QModelIndex
name|childIndex
init|=
name|model
operator|.
name|index
argument_list|(
literal|4
argument_list|,
literal|2
argument_list|,
name|itemIndex
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|childIndex
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|itemFromIndex
argument_list|(
name|childIndex
argument_list|)
argument_list|,
name|child
argument_list|)
expr_stmt|;
name|QModelIndex
name|noSuchIndex
init|=
name|model
operator|.
name|index
argument_list|(
literal|99
argument_list|,
literal|99
argument_list|,
name|itemIndex
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|noSuchIndex
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|CustomItem
class|class
name|CustomItem
super|:
specifier|public
name|QStandardItem
block|{
public|public:
DECL|function|CustomItem
name|CustomItem
parameter_list|()
member_init_list|:
name|QStandardItem
argument_list|()
block|{ }
DECL|function|~CustomItem
name|~
name|CustomItem
parameter_list|()
block|{ }
DECL|function|type
name|int
name|type
parameter_list|()
specifier|const
block|{
return|return
name|UserType
return|;
block|}
DECL|function|clone
name|QStandardItem
modifier|*
name|clone
parameter_list|()
specifier|const
block|{
return|return
operator|new
name|CustomItem
return|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|getSetItemPrototype
name|void
name|tst_QStandardItemModel
operator|::
name|getSetItemPrototype
parameter_list|()
block|{
name|QStandardItemModel
name|model
decl_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|itemPrototype
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
specifier|const
name|QStandardItem
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
specifier|const
name|CustomItem
modifier|*
name|proto
init|=
operator|new
name|CustomItem
decl_stmt|;
name|model
operator|.
name|setItemPrototype
argument_list|(
name|proto
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|itemPrototype
argument_list|()
argument_list|,
operator|(
specifier|const
name|QStandardItem
operator|*
operator|)
name|proto
argument_list|)
expr_stmt|;
name|model
operator|.
name|setRowCount
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|model
operator|.
name|setColumnCount
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|QModelIndex
name|index
init|=
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
decl_stmt|;
name|model
operator|.
name|setData
argument_list|(
name|index
argument_list|,
literal|"foo"
argument_list|)
expr_stmt|;
name|QStandardItem
modifier|*
name|item
init|=
name|model
operator|.
name|itemFromIndex
argument_list|(
name|index
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|item
operator|!=
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item
operator|->
name|type
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|int
argument_list|>
argument_list|(
name|QStandardItem
operator|::
name|UserType
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|setItemPrototype
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|itemPrototype
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
specifier|const
name|QStandardItem
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|getSetItemData
name|void
name|tst_QStandardItemModel
operator|::
name|getSetItemData
parameter_list|()
block|{
name|QMap
argument_list|<
name|int
argument_list|,
name|QVariant
argument_list|>
name|roles
decl_stmt|;
name|QLatin1String
name|text
argument_list|(
literal|"text"
argument_list|)
decl_stmt|;
name|roles
operator|.
name|insert
argument_list|(
name|Qt
operator|::
name|DisplayRole
argument_list|,
name|text
argument_list|)
expr_stmt|;
name|QLatin1String
name|statusTip
argument_list|(
literal|"statusTip"
argument_list|)
decl_stmt|;
name|roles
operator|.
name|insert
argument_list|(
name|Qt
operator|::
name|StatusTipRole
argument_list|,
name|statusTip
argument_list|)
expr_stmt|;
name|QLatin1String
name|toolTip
argument_list|(
literal|"toolTip"
argument_list|)
decl_stmt|;
name|roles
operator|.
name|insert
argument_list|(
name|Qt
operator|::
name|ToolTipRole
argument_list|,
name|toolTip
argument_list|)
expr_stmt|;
name|QLatin1String
name|whatsThis
argument_list|(
literal|"whatsThis"
argument_list|)
decl_stmt|;
name|roles
operator|.
name|insert
argument_list|(
name|Qt
operator|::
name|WhatsThisRole
argument_list|,
name|whatsThis
argument_list|)
expr_stmt|;
name|QSize
name|sizeHint
argument_list|(
literal|64
argument_list|,
literal|48
argument_list|)
decl_stmt|;
name|roles
operator|.
name|insert
argument_list|(
name|Qt
operator|::
name|SizeHintRole
argument_list|,
name|sizeHint
argument_list|)
expr_stmt|;
name|QFont
name|font
decl_stmt|;
name|roles
operator|.
name|insert
argument_list|(
name|Qt
operator|::
name|FontRole
argument_list|,
name|font
argument_list|)
expr_stmt|;
name|Qt
operator|::
name|Alignment
name|textAlignment
argument_list|(
name|Qt
operator|::
name|AlignLeft
operator||
name|Qt
operator|::
name|AlignVCenter
argument_list|)
decl_stmt|;
name|roles
operator|.
name|insert
argument_list|(
name|Qt
operator|::
name|TextAlignmentRole
argument_list|,
name|int
argument_list|(
name|textAlignment
argument_list|)
argument_list|)
expr_stmt|;
name|QColor
name|backgroundColor
argument_list|(
name|Qt
operator|::
name|blue
argument_list|)
decl_stmt|;
name|roles
operator|.
name|insert
argument_list|(
name|Qt
operator|::
name|BackgroundRole
argument_list|,
name|backgroundColor
argument_list|)
expr_stmt|;
name|QColor
name|textColor
argument_list|(
name|Qt
operator|::
name|green
argument_list|)
decl_stmt|;
name|roles
operator|.
name|insert
argument_list|(
name|Qt
operator|::
name|TextColorRole
argument_list|,
name|textColor
argument_list|)
expr_stmt|;
name|Qt
operator|::
name|CheckState
name|checkState
argument_list|(
name|Qt
operator|::
name|PartiallyChecked
argument_list|)
decl_stmt|;
name|roles
operator|.
name|insert
argument_list|(
name|Qt
operator|::
name|CheckStateRole
argument_list|,
name|int
argument_list|(
name|checkState
argument_list|)
argument_list|)
expr_stmt|;
name|QLatin1String
name|accessibleText
argument_list|(
literal|"accessibleText"
argument_list|)
decl_stmt|;
name|roles
operator|.
name|insert
argument_list|(
name|Qt
operator|::
name|AccessibleTextRole
argument_list|,
name|accessibleText
argument_list|)
expr_stmt|;
name|QLatin1String
name|accessibleDescription
argument_list|(
literal|"accessibleDescription"
argument_list|)
decl_stmt|;
name|roles
operator|.
name|insert
argument_list|(
name|Qt
operator|::
name|AccessibleDescriptionRole
argument_list|,
name|accessibleDescription
argument_list|)
expr_stmt|;
name|QStandardItemModel
name|model
decl_stmt|;
name|model
operator|.
name|insertRows
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|model
operator|.
name|insertColumns
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QModelIndex
name|idx
init|=
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
decl_stmt|;
name|QSignalSpy
name|modelDataChangedSpy
argument_list|(
operator|&
name|model
argument_list|,
name|SIGNAL
argument_list|(
name|dataChanged
argument_list|(
name|QModelIndex
argument_list|,
name|QModelIndex
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|setItemData
argument_list|(
name|idx
argument_list|,
name|roles
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|modelDataChangedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|setItemData
argument_list|(
name|idx
argument_list|,
name|roles
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|modelDataChangedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|//it was already changed once
name|QCOMPARE
argument_list|(
name|model
operator|.
name|itemData
argument_list|(
name|idx
argument_list|)
argument_list|,
name|roles
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setHeaderLabels_data
name|void
name|tst_QStandardItemModel
operator|::
name|setHeaderLabels_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rows"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"columns"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"orientation"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QStringList
argument_list|>
argument_list|(
literal|"labels"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QStringList
argument_list|>
argument_list|(
literal|"expectedLabels"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"horizontal labels"
argument_list|)
operator|<<
literal|1
operator|<<
literal|4
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Horizontal
argument_list|)
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"a"
operator|<<
literal|"b"
operator|<<
literal|"c"
operator|<<
literal|"d"
operator|)
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"a"
operator|<<
literal|"b"
operator|<<
literal|"c"
operator|<<
literal|"d"
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"vertical labels"
argument_list|)
operator|<<
literal|4
operator|<<
literal|1
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Vertical
argument_list|)
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"a"
operator|<<
literal|"b"
operator|<<
literal|"c"
operator|<<
literal|"d"
operator|)
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"a"
operator|<<
literal|"b"
operator|<<
literal|"c"
operator|<<
literal|"d"
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"too few (horizontal)"
argument_list|)
operator|<<
literal|1
operator|<<
literal|4
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Horizontal
argument_list|)
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"a"
operator|<<
literal|"b"
operator|)
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"a"
operator|<<
literal|"b"
operator|<<
literal|"3"
operator|<<
literal|"4"
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"too few (vertical)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|1
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Vertical
argument_list|)
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"a"
operator|<<
literal|"b"
operator|)
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"a"
operator|<<
literal|"b"
operator|<<
literal|"3"
operator|<<
literal|"4"
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"too many (horizontal)"
argument_list|)
operator|<<
literal|1
operator|<<
literal|2
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Horizontal
argument_list|)
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"a"
operator|<<
literal|"b"
operator|<<
literal|"c"
operator|<<
literal|"d"
operator|)
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"a"
operator|<<
literal|"b"
operator|<<
literal|"c"
operator|<<
literal|"d"
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"too many (vertical)"
argument_list|)
operator|<<
literal|2
operator|<<
literal|1
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Vertical
argument_list|)
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"a"
operator|<<
literal|"b"
operator|<<
literal|"c"
operator|<<
literal|"d"
operator|)
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"a"
operator|<<
literal|"b"
operator|<<
literal|"c"
operator|<<
literal|"d"
operator|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setHeaderLabels
name|void
name|tst_QStandardItemModel
operator|::
name|setHeaderLabels
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|rows
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|columns
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|orientation
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QStringList
argument_list|,
name|labels
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QStringList
argument_list|,
name|expectedLabels
argument_list|)
expr_stmt|;
name|QStandardItemModel
name|model
argument_list|(
name|rows
argument_list|,
name|columns
argument_list|)
decl_stmt|;
name|QSignalSpy
name|columnsInsertedSpy
argument_list|(
operator|&
name|model
argument_list|,
name|SIGNAL
argument_list|(
name|columnsInserted
argument_list|(
name|QModelIndex
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|rowsInsertedSpy
argument_list|(
operator|&
name|model
argument_list|,
name|SIGNAL
argument_list|(
name|rowsInserted
argument_list|(
name|QModelIndex
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
name|model
operator|.
name|setHorizontalHeaderLabels
argument_list|(
name|labels
argument_list|)
expr_stmt|;
else|else
name|model
operator|.
name|setVerticalHeaderLabels
argument_list|(
name|labels
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|expectedLabels
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
name|QCOMPARE
argument_list|(
name|model
operator|.
name|headerData
argument_list|(
name|i
argument_list|,
name|Qt
operator|::
name|Orientation
argument_list|(
name|orientation
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|expectedLabels
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|columnsInsertedSpy
operator|.
name|count
argument_list|()
argument_list|,
operator|(
name|orientation
operator|==
name|Qt
operator|::
name|Vertical
operator|)
condition|?
literal|0
else|:
name|labels
operator|.
name|count
argument_list|()
operator|>
name|columns
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rowsInsertedSpy
operator|.
name|count
argument_list|()
argument_list|,
operator|(
name|orientation
operator|==
name|Qt
operator|::
name|Horizontal
operator|)
condition|?
literal|0
else|:
name|labels
operator|.
name|count
argument_list|()
operator|>
name|rows
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|itemDataChanged
name|void
name|tst_QStandardItemModel
operator|::
name|itemDataChanged
parameter_list|()
block|{
name|QStandardItemModel
name|model
argument_list|(
literal|6
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|QStandardItem
name|item
decl_stmt|;
name|QSignalSpy
name|dataChangedSpy
argument_list|(
operator|&
name|model
argument_list|,
name|SIGNAL
argument_list|(
name|dataChanged
argument_list|(
name|QModelIndex
argument_list|,
name|QModelIndex
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|itemChangedSpy
argument_list|(
operator|&
name|model
argument_list|,
name|SIGNAL
argument_list|(
name|itemChanged
argument_list|(
name|QStandardItem
operator|*
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|model
operator|.
name|setItem
argument_list|(
literal|0
argument_list|,
operator|&
name|item
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dataChangedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|itemChangedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QModelIndex
name|index
init|=
name|model
operator|.
name|indexFromItem
argument_list|(
operator|&
name|item
argument_list|)
decl_stmt|;
name|QList
argument_list|<
name|QVariant
argument_list|>
name|args
decl_stmt|;
name|args
operator|=
name|dataChangedSpy
operator|.
name|takeFirst
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qvariant_cast
argument_list|<
name|QModelIndex
argument_list|>
argument_list|(
name|args
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|,
name|index
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qvariant_cast
argument_list|<
name|QModelIndex
argument_list|>
argument_list|(
name|args
operator|.
name|at
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|,
name|index
argument_list|)
expr_stmt|;
name|args
operator|=
name|itemChangedSpy
operator|.
name|takeFirst
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qvariant_cast
argument_list|<
name|QStandardItem
operator|*
argument_list|>
argument_list|(
name|args
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|,
operator|&
name|item
argument_list|)
expr_stmt|;
name|item
operator|.
name|setData
argument_list|(
name|QLatin1String
argument_list|(
literal|"foo"
argument_list|)
argument_list|,
name|Qt
operator|::
name|DisplayRole
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dataChangedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|itemChangedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|args
operator|=
name|dataChangedSpy
operator|.
name|takeFirst
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qvariant_cast
argument_list|<
name|QModelIndex
argument_list|>
argument_list|(
name|args
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|,
name|index
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qvariant_cast
argument_list|<
name|QModelIndex
argument_list|>
argument_list|(
name|args
operator|.
name|at
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|,
name|index
argument_list|)
expr_stmt|;
name|args
operator|=
name|itemChangedSpy
operator|.
name|takeFirst
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qvariant_cast
argument_list|<
name|QStandardItem
operator|*
argument_list|>
argument_list|(
name|args
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|,
operator|&
name|item
argument_list|)
expr_stmt|;
name|item
operator|.
name|setData
argument_list|(
name|item
operator|.
name|data
argument_list|(
name|Qt
operator|::
name|DisplayRole
argument_list|)
argument_list|,
name|Qt
operator|::
name|DisplayRole
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dataChangedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|itemChangedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|item
operator|.
name|setFlags
argument_list|(
name|Qt
operator|::
name|ItemIsEnabled
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dataChangedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|itemChangedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|args
operator|=
name|dataChangedSpy
operator|.
name|takeFirst
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qvariant_cast
argument_list|<
name|QModelIndex
argument_list|>
argument_list|(
name|args
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|,
name|index
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qvariant_cast
argument_list|<
name|QModelIndex
argument_list|>
argument_list|(
name|args
operator|.
name|at
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|,
name|index
argument_list|)
expr_stmt|;
name|args
operator|=
name|itemChangedSpy
operator|.
name|takeFirst
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qvariant_cast
argument_list|<
name|QStandardItem
operator|*
argument_list|>
argument_list|(
name|args
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|,
operator|&
name|item
argument_list|)
expr_stmt|;
name|item
operator|.
name|setFlags
argument_list|(
name|item
operator|.
name|flags
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dataChangedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|itemChangedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|takeHeaderItem
name|void
name|tst_QStandardItemModel
operator|::
name|takeHeaderItem
parameter_list|()
block|{
name|QStandardItemModel
name|model
decl_stmt|;
comment|// set header items
name|QStandardItem
modifier|*
name|hheader
init|=
operator|new
name|QStandardItem
argument_list|()
decl_stmt|;
name|model
operator|.
name|setHorizontalHeaderItem
argument_list|(
literal|0
argument_list|,
name|hheader
argument_list|)
expr_stmt|;
name|QStandardItem
modifier|*
name|vheader
init|=
operator|new
name|QStandardItem
argument_list|()
decl_stmt|;
name|model
operator|.
name|setVerticalHeaderItem
argument_list|(
literal|0
argument_list|,
name|vheader
argument_list|)
expr_stmt|;
comment|// take header items
name|QCOMPARE
argument_list|(
name|model
operator|.
name|takeHorizontalHeaderItem
argument_list|(
literal|0
argument_list|)
argument_list|,
name|hheader
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|takeVerticalHeaderItem
argument_list|(
literal|0
argument_list|)
argument_list|,
name|vheader
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|hheader
operator|->
name|model
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QStandardItemModel
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|vheader
operator|->
name|model
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QStandardItemModel
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|takeHorizontalHeaderItem
argument_list|(
literal|0
argument_list|)
argument_list|,
cast|static_cast
argument_list|<
name|QStandardItem
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|takeVerticalHeaderItem
argument_list|(
literal|0
argument_list|)
argument_list|,
cast|static_cast
argument_list|<
name|QStandardItem
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
operator|delete
name|hheader
expr_stmt|;
operator|delete
name|vheader
expr_stmt|;
block|}
end_function
begin_function
DECL|function|useCase1
name|void
name|tst_QStandardItemModel
operator|::
name|useCase1
parameter_list|()
block|{
specifier|const
name|int
name|rows
init|=
literal|5
decl_stmt|;
specifier|const
name|int
name|columns
init|=
literal|8
decl_stmt|;
name|QStandardItemModel
name|model
argument_list|(
name|rows
argument_list|,
name|columns
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|model
operator|.
name|rowCount
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|model
operator|.
name|columnCount
argument_list|()
condition|;
operator|++
name|j
control|)
block|{
name|QCOMPARE
argument_list|(
name|model
operator|.
name|item
argument_list|(
name|i
argument_list|,
name|j
argument_list|)
argument_list|,
cast|static_cast
argument_list|<
name|QStandardItem
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QStandardItem
modifier|*
name|item
init|=
operator|new
name|QStandardItem
argument_list|()
decl_stmt|;
name|model
operator|.
name|setItem
argument_list|(
name|i
argument_list|,
name|j
argument_list|,
name|item
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item
operator|->
name|row
argument_list|()
argument_list|,
name|i
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item
operator|->
name|column
argument_list|()
argument_list|,
name|j
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item
operator|->
name|model
argument_list|()
argument_list|,
operator|&
name|model
argument_list|)
expr_stmt|;
name|QModelIndex
name|index
init|=
name|model
operator|.
name|indexFromItem
argument_list|(
name|item
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|index
argument_list|,
name|model
operator|.
name|index
argument_list|(
name|i
argument_list|,
name|j
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QStandardItem
modifier|*
name|sameItem
init|=
name|model
operator|.
name|itemFromIndex
argument_list|(
name|index
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|sameItem
argument_list|,
name|item
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_function
begin_function
DECL|function|createChildren
specifier|static
name|void
name|createChildren
parameter_list|(
name|QStandardItemModel
modifier|*
name|model
parameter_list|,
name|QStandardItem
modifier|*
name|parent
parameter_list|,
name|int
name|level
parameter_list|)
block|{
if|if
condition|(
name|level
operator|>
literal|4
condition|)
return|return;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|4
condition|;
operator|++
name|i
control|)
block|{
name|QCOMPARE
argument_list|(
name|parent
operator|->
name|rowCount
argument_list|()
argument_list|,
name|i
argument_list|)
expr_stmt|;
name|parent
operator|->
name|appendRow
argument_list|(
name|QList
argument_list|<
name|QStandardItem
operator|*
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|parent
operator|->
name|columnCount
argument_list|()
condition|;
operator|++
name|j
control|)
block|{
name|QStandardItem
modifier|*
name|item
init|=
operator|new
name|QStandardItem
argument_list|()
decl_stmt|;
name|parent
operator|->
name|setChild
argument_list|(
name|i
argument_list|,
name|j
argument_list|,
name|item
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item
operator|->
name|row
argument_list|()
argument_list|,
name|i
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item
operator|->
name|column
argument_list|()
argument_list|,
name|j
argument_list|)
expr_stmt|;
name|QModelIndex
name|parentIndex
init|=
name|model
operator|->
name|indexFromItem
argument_list|(
name|parent
argument_list|)
decl_stmt|;
name|QModelIndex
name|index
init|=
name|model
operator|->
name|indexFromItem
argument_list|(
name|item
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|index
argument_list|,
name|model
operator|->
name|index
argument_list|(
name|i
argument_list|,
name|j
argument_list|,
name|parentIndex
argument_list|)
argument_list|)
expr_stmt|;
name|QStandardItem
modifier|*
name|theItem
init|=
name|model
operator|->
name|itemFromIndex
argument_list|(
name|index
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|theItem
argument_list|,
name|item
argument_list|)
expr_stmt|;
name|QStandardItem
modifier|*
name|theParent
init|=
name|model
operator|->
name|itemFromIndex
argument_list|(
name|parentIndex
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|theParent
argument_list|,
operator|(
name|level
operator|==
literal|0
operator|)
condition|?
operator|(
name|QStandardItem
operator|*
operator|)
literal|0
else|:
name|parent
argument_list|)
expr_stmt|;
block|}
block|{
name|QStandardItem
modifier|*
name|item
init|=
name|parent
operator|->
name|child
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|item
operator|->
name|setColumnCount
argument_list|(
name|parent
operator|->
name|columnCount
argument_list|()
argument_list|)
expr_stmt|;
name|createChildren
argument_list|(
name|model
argument_list|,
name|item
argument_list|,
name|level
operator|+
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_function
begin_function
DECL|function|useCase2
name|void
name|tst_QStandardItemModel
operator|::
name|useCase2
parameter_list|()
block|{
name|QStandardItemModel
name|model
decl_stmt|;
name|model
operator|.
name|setColumnCount
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|createChildren
argument_list|(
operator|&
name|model
argument_list|,
name|model
operator|.
name|invisibleRootItem
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|useCase3
name|void
name|tst_QStandardItemModel
operator|::
name|useCase3
parameter_list|()
block|{
comment|// create the tree structure first
name|QStandardItem
modifier|*
name|childItem
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|100
condition|;
operator|++
name|i
control|)
block|{
name|QStandardItem
modifier|*
name|item
init|=
operator|new
name|QStandardItem
argument_list|(
name|QString
argument_list|(
literal|"item %0"
argument_list|)
operator|.
name|arg
argument_list|(
name|i
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|childItem
condition|)
name|item
operator|->
name|appendRow
argument_list|(
name|childItem
argument_list|)
expr_stmt|;
name|childItem
operator|=
name|item
expr_stmt|;
block|}
comment|// add to model as last step
name|QStandardItemModel
name|model
decl_stmt|;
name|model
operator|.
name|appendRow
argument_list|(
name|childItem
argument_list|)
expr_stmt|;
comment|// make sure each item has the correct model and parent
name|QStandardItem
modifier|*
name|parentItem
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|childItem
condition|)
block|{
name|QCOMPARE
argument_list|(
name|childItem
operator|->
name|model
argument_list|()
argument_list|,
operator|&
name|model
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|childItem
operator|->
name|parent
argument_list|()
argument_list|,
name|parentItem
argument_list|)
expr_stmt|;
name|parentItem
operator|=
name|childItem
expr_stmt|;
name|childItem
operator|=
name|childItem
operator|->
name|child
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
comment|// take the item, make sure model is set to 0, but that parents are the same
name|childItem
operator|=
name|model
operator|.
name|takeItem
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|{
name|parentItem
operator|=
literal|0
expr_stmt|;
name|QStandardItem
modifier|*
name|item
init|=
name|childItem
decl_stmt|;
while|while
condition|(
name|item
condition|)
block|{
name|QCOMPARE
argument_list|(
name|item
operator|->
name|model
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QStandardItemModel
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item
operator|->
name|parent
argument_list|()
argument_list|,
name|parentItem
argument_list|)
expr_stmt|;
name|parentItem
operator|=
name|item
expr_stmt|;
name|item
operator|=
name|item
operator|->
name|child
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
operator|delete
name|childItem
expr_stmt|;
block|}
end_function
begin_function
DECL|function|rootItemFlags
name|void
name|tst_QStandardItemModel
operator|::
name|rootItemFlags
parameter_list|()
block|{
name|QStandardItemModel
name|model
argument_list|(
literal|6
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|invisibleRootItem
argument_list|()
operator|->
name|flags
argument_list|()
argument_list|,
name|model
operator|.
name|flags
argument_list|(
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|invisibleRootItem
argument_list|()
operator|->
name|flags
argument_list|()
argument_list|,
name|Qt
operator|::
name|ItemIsDropEnabled
argument_list|)
expr_stmt|;
name|Qt
operator|::
name|ItemFlags
name|f
init|=
name|Qt
operator|::
name|ItemIsDropEnabled
operator||
name|Qt
operator|::
name|ItemIsEnabled
decl_stmt|;
name|model
operator|.
name|invisibleRootItem
argument_list|()
operator|->
name|setFlags
argument_list|(
name|f
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|invisibleRootItem
argument_list|()
operator|->
name|flags
argument_list|()
argument_list|,
name|f
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|invisibleRootItem
argument_list|()
operator|->
name|flags
argument_list|()
argument_list|,
name|model
operator|.
name|flags
argument_list|(
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
ifndef|#
directive|ifndef
name|QT_NO_DRAGANDDROP
name|model
operator|.
name|invisibleRootItem
argument_list|()
operator|->
name|setDropEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QCOMPARE
argument_list|(
name|model
operator|.
name|invisibleRootItem
argument_list|()
operator|->
name|flags
argument_list|()
argument_list|,
name|Qt
operator|::
name|ItemIsEnabled
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|invisibleRootItem
argument_list|()
operator|->
name|flags
argument_list|()
argument_list|,
name|model
operator|.
name|flags
argument_list|(
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|compareModels
name|bool
name|tst_QStandardItemModel
operator|::
name|compareModels
parameter_list|(
name|QStandardItemModel
modifier|*
name|model1
parameter_list|,
name|QStandardItemModel
modifier|*
name|model2
parameter_list|)
block|{
return|return
name|compareItems
argument_list|(
name|model1
operator|->
name|invisibleRootItem
argument_list|()
argument_list|,
name|model2
operator|->
name|invisibleRootItem
argument_list|()
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|compareItems
name|bool
name|tst_QStandardItemModel
operator|::
name|compareItems
parameter_list|(
name|QStandardItem
modifier|*
name|item1
parameter_list|,
name|QStandardItem
modifier|*
name|item2
parameter_list|)
block|{
if|if
condition|(
operator|!
name|item1
operator|&&
operator|!
name|item2
condition|)
return|return
literal|true
return|;
if|if
condition|(
operator|!
name|item1
operator|||
operator|!
name|item2
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|item1
operator|->
name|text
argument_list|()
operator|!=
name|item2
operator|->
name|text
argument_list|()
condition|)
block|{
name|qDebug
argument_list|()
operator|<<
name|item1
operator|->
name|text
argument_list|()
operator|<<
name|item2
operator|->
name|text
argument_list|()
expr_stmt|;
return|return
literal|false
return|;
block|}
if|if
condition|(
name|item1
operator|->
name|rowCount
argument_list|()
operator|!=
name|item2
operator|->
name|rowCount
argument_list|()
condition|)
block|{
comment|//      qDebug()<< "RowCount"<< item1->text()<< item1->rowCount()<< item2->rowCount();
return|return
literal|false
return|;
block|}
if|if
condition|(
name|item1
operator|->
name|columnCount
argument_list|()
operator|!=
name|item2
operator|->
name|columnCount
argument_list|()
condition|)
block|{
comment|//     qDebug()<< "ColumnCount"<< item1->text()<< item1->columnCount()<< item2->columnCount();
return|return
literal|false
return|;
block|}
for|for
control|(
name|int
name|row
init|=
literal|0
init|;
name|row
operator|<
name|item1
operator|->
name|columnCount
argument_list|()
condition|;
name|row
operator|++
control|)
for|for
control|(
name|int
name|col
init|=
literal|0
init|;
name|col
operator|<
name|item1
operator|->
name|columnCount
argument_list|()
condition|;
name|col
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|compareItems
argument_list|(
name|item1
operator|->
name|child
argument_list|(
name|row
argument_list|,
name|col
argument_list|)
argument_list|,
name|item2
operator|->
name|child
argument_list|(
name|row
argument_list|,
name|col
argument_list|)
argument_list|)
condition|)
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
end_function
begin_function
DECL|function|itemFromText
specifier|static
name|QStandardItem
modifier|*
name|itemFromText
parameter_list|(
name|QStandardItem
modifier|*
name|parent
parameter_list|,
specifier|const
name|QString
modifier|&
name|text
parameter_list|)
block|{
name|QStandardItem
modifier|*
name|item
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|parent
operator|->
name|columnCount
argument_list|()
condition|;
name|i
operator|++
control|)
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|parent
operator|->
name|rowCount
argument_list|()
condition|;
name|j
operator|++
control|)
block|{
name|QStandardItem
modifier|*
name|child
init|=
name|parent
operator|->
name|child
argument_list|(
name|j
argument_list|,
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|child
condition|)
continue|continue;
if|if
condition|(
name|child
operator|->
name|text
argument_list|()
operator|==
name|text
condition|)
block|{
if|if
condition|(
name|item
condition|)
block|{
return|return
literal|0
return|;
block|}
name|item
operator|=
name|child
expr_stmt|;
block|}
name|QStandardItem
modifier|*
name|candidate
init|=
name|itemFromText
argument_list|(
name|child
argument_list|,
name|text
argument_list|)
decl_stmt|;
if|if
condition|(
name|candidate
condition|)
block|{
if|if
condition|(
name|item
condition|)
block|{
return|return
literal|0
return|;
block|}
name|item
operator|=
name|candidate
expr_stmt|;
block|}
block|}
return|return
name|item
return|;
block|}
end_function
begin_ifdef
ifdef|#
directive|ifdef
name|QT_BUILD_INTERNAL
end_ifdef
begin_function
DECL|function|indexFromText
specifier|static
name|QModelIndex
name|indexFromText
parameter_list|(
name|QStandardItemModel
modifier|*
name|model
parameter_list|,
specifier|const
name|QString
modifier|&
name|text
parameter_list|)
block|{
name|QStandardItem
modifier|*
name|item
init|=
name|itemFromText
argument_list|(
name|model
operator|->
name|invisibleRootItem
argument_list|()
argument_list|,
name|text
argument_list|)
decl_stmt|;
comment|/*QVERIFY(item);*/
return|return
name|model
operator|->
name|indexFromItem
argument_list|(
name|item
argument_list|)
return|;
block|}
end_function
begin_struct
DECL|struct|FriendlyTreeView
struct|struct
name|FriendlyTreeView
super|:
specifier|public
name|QTreeView
block|{
friend|friend
class_decl|class
name|tst_QStandardItemModel
class_decl|;
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QTreeView
argument_list|)
block|}
struct|;
end_struct
begin_endif
endif|#
directive|endif
end_endif
begin_ifdef
ifdef|#
directive|ifdef
name|QT_BUILD_INTERNAL
end_ifdef
begin_function
DECL|function|treeDragAndDrop
name|void
name|tst_QStandardItemModel
operator|::
name|treeDragAndDrop
parameter_list|()
block|{
specifier|const
name|int
name|nRow
init|=
literal|5
decl_stmt|;
specifier|const
name|int
name|nCol
init|=
literal|3
decl_stmt|;
name|QStandardItemModel
name|model
decl_stmt|;
name|QStandardItemModel
name|checkModel
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|nRow
condition|;
operator|++
name|i
control|)
block|{
name|QList
argument_list|<
name|QStandardItem
modifier|*
argument_list|>
name|colItems1
decl_stmt|;
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
name|nCol
condition|;
name|c
operator|++
control|)
name|colItems1
operator|<<
operator|new
name|QStandardItem
argument_list|(
name|QString
argument_list|(
literal|"item %1 - %0"
argument_list|)
operator|.
name|arg
argument_list|(
name|c
argument_list|)
operator|.
name|arg
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|appendRow
argument_list|(
name|colItems1
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|nRow
condition|;
operator|++
name|j
control|)
block|{
name|QList
argument_list|<
name|QStandardItem
modifier|*
argument_list|>
name|colItems2
decl_stmt|;
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
name|nCol
condition|;
name|c
operator|++
control|)
name|colItems2
operator|<<
operator|new
name|QStandardItem
argument_list|(
name|QString
argument_list|(
literal|"item %1/%2 - %0"
argument_list|)
operator|.
name|arg
argument_list|(
name|c
argument_list|)
operator|.
name|arg
argument_list|(
name|i
argument_list|)
operator|.
name|arg
argument_list|(
name|j
argument_list|)
argument_list|)
expr_stmt|;
name|colItems1
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|->
name|appendRow
argument_list|(
name|colItems2
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|k
init|=
literal|0
init|;
name|k
operator|<
name|nRow
condition|;
operator|++
name|k
control|)
block|{
name|QList
argument_list|<
name|QStandardItem
modifier|*
argument_list|>
name|colItems3
decl_stmt|;
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
name|nCol
condition|;
name|c
operator|++
control|)
name|colItems3
operator|<<
operator|new
name|QStandardItem
argument_list|(
name|QString
argument_list|(
literal|"item %1/%2/%3 - %0"
argument_list|)
operator|.
name|arg
argument_list|(
name|c
argument_list|)
operator|.
name|arg
argument_list|(
name|i
argument_list|)
operator|.
name|arg
argument_list|(
name|j
argument_list|)
operator|.
name|arg
argument_list|(
name|k
argument_list|)
argument_list|)
expr_stmt|;
name|colItems2
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|->
name|appendRow
argument_list|(
name|colItems3
argument_list|)
expr_stmt|;
block|}
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|nRow
condition|;
operator|++
name|i
control|)
block|{
name|QList
argument_list|<
name|QStandardItem
modifier|*
argument_list|>
name|colItems1
decl_stmt|;
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
name|nCol
condition|;
name|c
operator|++
control|)
name|colItems1
operator|<<
operator|new
name|QStandardItem
argument_list|(
name|QString
argument_list|(
literal|"item %1 - %0"
argument_list|)
operator|.
name|arg
argument_list|(
name|c
argument_list|)
operator|.
name|arg
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|checkModel
operator|.
name|appendRow
argument_list|(
name|colItems1
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|nRow
condition|;
operator|++
name|j
control|)
block|{
name|QList
argument_list|<
name|QStandardItem
modifier|*
argument_list|>
name|colItems2
decl_stmt|;
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
name|nCol
condition|;
name|c
operator|++
control|)
name|colItems2
operator|<<
operator|new
name|QStandardItem
argument_list|(
name|QString
argument_list|(
literal|"item %1/%2 - %0"
argument_list|)
operator|.
name|arg
argument_list|(
name|c
argument_list|)
operator|.
name|arg
argument_list|(
name|i
argument_list|)
operator|.
name|arg
argument_list|(
name|j
argument_list|)
argument_list|)
expr_stmt|;
name|colItems1
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|->
name|appendRow
argument_list|(
name|colItems2
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|k
init|=
literal|0
init|;
name|k
operator|<
name|nRow
condition|;
operator|++
name|k
control|)
block|{
name|QList
argument_list|<
name|QStandardItem
modifier|*
argument_list|>
name|colItems3
decl_stmt|;
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
name|nCol
condition|;
name|c
operator|++
control|)
name|colItems3
operator|<<
operator|new
name|QStandardItem
argument_list|(
name|QString
argument_list|(
literal|"item %1/%2/%3 - %0"
argument_list|)
operator|.
name|arg
argument_list|(
name|c
argument_list|)
operator|.
name|arg
argument_list|(
name|i
argument_list|)
operator|.
name|arg
argument_list|(
name|j
argument_list|)
operator|.
name|arg
argument_list|(
name|k
argument_list|)
argument_list|)
expr_stmt|;
name|colItems2
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|->
name|appendRow
argument_list|(
name|colItems3
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|QVERIFY
argument_list|(
name|compareModels
argument_list|(
operator|&
name|model
argument_list|,
operator|&
name|checkModel
argument_list|)
argument_list|)
expr_stmt|;
name|FriendlyTreeView
name|view
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|expandAll
argument_list|()
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
ifndef|#
directive|ifndef
name|QT_NO_DRAGANDDROP
name|view
operator|.
name|setDragDropMode
argument_list|(
name|QAbstractItemView
operator|::
name|InternalMove
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|view
operator|.
name|setSelectionMode
argument_list|(
name|QAbstractItemView
operator|::
name|ExtendedSelection
argument_list|)
expr_stmt|;
name|QItemSelectionModel
modifier|*
name|selection
init|=
name|view
operator|.
name|selectionModel
argument_list|()
decl_stmt|;
comment|//
comment|// step1  drag  "item 1" and "item 2"   into "item 4"
comment|//
block|{
name|selection
operator|->
name|clear
argument_list|()
expr_stmt|;
name|selection
operator|->
name|select
argument_list|(
name|QItemSelection
argument_list|(
name|indexFromText
argument_list|(
operator|&
name|model
argument_list|,
name|QString
argument_list|(
literal|"item 1 - 0"
argument_list|)
argument_list|)
argument_list|,
name|indexFromText
argument_list|(
operator|&
name|model
argument_list|,
name|QString
argument_list|(
literal|"item 1 - %0"
argument_list|)
operator|.
name|arg
argument_list|(
name|nCol
operator|-
literal|1
argument_list|)
argument_list|)
argument_list|)
argument_list|,
name|QItemSelectionModel
operator|::
name|Select
argument_list|)
expr_stmt|;
name|selection
operator|->
name|select
argument_list|(
name|QItemSelection
argument_list|(
name|indexFromText
argument_list|(
operator|&
name|model
argument_list|,
name|QString
argument_list|(
literal|"item 2 - 0"
argument_list|)
argument_list|)
argument_list|,
name|indexFromText
argument_list|(
operator|&
name|model
argument_list|,
name|QString
argument_list|(
literal|"item 2 - %0"
argument_list|)
operator|.
name|arg
argument_list|(
name|nCol
operator|-
literal|1
argument_list|)
argument_list|)
argument_list|)
argument_list|,
name|QItemSelectionModel
operator|::
name|Select
argument_list|)
expr_stmt|;
comment|//code based from QAbstractItemView::startDrag and QAbstractItemView::dropEvent
name|QModelIndexList
name|indexes
init|=
name|view
operator|.
name|selectedIndexes
argument_list|()
decl_stmt|;
name|QMimeData
modifier|*
name|data
init|=
name|model
operator|.
name|mimeData
argument_list|(
name|indexes
argument_list|)
decl_stmt|;
if|if
condition|(
name|model
operator|.
name|dropMimeData
argument_list|(
name|data
argument_list|,
name|Qt
operator|::
name|MoveAction
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|indexFromText
argument_list|(
operator|&
name|model
argument_list|,
literal|"item 4 - 0"
argument_list|)
argument_list|)
condition|)
name|view
operator|.
name|d_func
argument_list|()
operator|->
name|clearOrRemove
argument_list|()
expr_stmt|;
operator|delete
name|data
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|compareModels
argument_list|(
operator|&
name|model
argument_list|,
operator|&
name|checkModel
argument_list|)
argument_list|)
expr_stmt|;
comment|//the model must be different at this point
name|QStandardItem
modifier|*
name|item4
init|=
name|itemFromText
argument_list|(
name|checkModel
operator|.
name|invisibleRootItem
argument_list|()
argument_list|,
literal|"item 4 - 0"
argument_list|)
decl_stmt|;
name|item4
operator|->
name|insertRow
argument_list|(
literal|0
argument_list|,
name|checkModel
operator|.
name|takeRow
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|item4
operator|->
name|insertRow
argument_list|(
literal|1
argument_list|,
name|checkModel
operator|.
name|takeRow
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|compareModels
argument_list|(
operator|&
name|model
argument_list|,
operator|&
name|checkModel
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|//
comment|// step2  drag  "item 3" and "item 3/0"   into "item 4"
comment|//
block|{
name|selection
operator|->
name|clear
argument_list|()
expr_stmt|;
name|selection
operator|->
name|select
argument_list|(
name|QItemSelection
argument_list|(
name|indexFromText
argument_list|(
operator|&
name|model
argument_list|,
name|QString
argument_list|(
literal|"item 3 - 0"
argument_list|)
argument_list|)
argument_list|,
name|indexFromText
argument_list|(
operator|&
name|model
argument_list|,
name|QString
argument_list|(
literal|"item 3 - %0"
argument_list|)
operator|.
name|arg
argument_list|(
name|nCol
operator|-
literal|1
argument_list|)
argument_list|)
argument_list|)
argument_list|,
name|QItemSelectionModel
operator|::
name|Select
argument_list|)
expr_stmt|;
name|selection
operator|->
name|select
argument_list|(
name|QItemSelection
argument_list|(
name|indexFromText
argument_list|(
operator|&
name|model
argument_list|,
name|QString
argument_list|(
literal|"item 3/0 - 0"
argument_list|)
argument_list|)
argument_list|,
name|indexFromText
argument_list|(
operator|&
name|model
argument_list|,
name|QString
argument_list|(
literal|"item 3/0 - %0"
argument_list|)
operator|.
name|arg
argument_list|(
name|nCol
operator|-
literal|1
argument_list|)
argument_list|)
argument_list|)
argument_list|,
name|QItemSelectionModel
operator|::
name|Select
argument_list|)
expr_stmt|;
comment|//code based from QAbstractItemView::startDrag and QAbstractItemView::dropEvent
name|QModelIndexList
name|indexes
init|=
name|view
operator|.
name|selectedIndexes
argument_list|()
decl_stmt|;
name|QMimeData
modifier|*
name|data
init|=
name|model
operator|.
name|mimeData
argument_list|(
name|indexes
argument_list|)
decl_stmt|;
if|if
condition|(
name|model
operator|.
name|dropMimeData
argument_list|(
name|data
argument_list|,
name|Qt
operator|::
name|MoveAction
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|indexFromText
argument_list|(
operator|&
name|model
argument_list|,
literal|"item 4 - 0"
argument_list|)
argument_list|)
condition|)
name|view
operator|.
name|d_func
argument_list|()
operator|->
name|clearOrRemove
argument_list|()
expr_stmt|;
operator|delete
name|data
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|compareModels
argument_list|(
operator|&
name|model
argument_list|,
operator|&
name|checkModel
argument_list|)
argument_list|)
expr_stmt|;
comment|//the model must be different at this point
name|QStandardItem
modifier|*
name|item4
init|=
name|itemFromText
argument_list|(
name|checkModel
operator|.
name|invisibleRootItem
argument_list|()
argument_list|,
literal|"item 4 - 0"
argument_list|)
decl_stmt|;
name|item4
operator|->
name|insertRow
argument_list|(
literal|0
argument_list|,
name|checkModel
operator|.
name|takeRow
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|compareModels
argument_list|(
operator|&
name|model
argument_list|,
operator|&
name|checkModel
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|//
comment|// step2  drag  "item 3" and "item 3/0/2"   into "item 0/2"
comment|// ( remember "item 3" is now the first child of "item 4")
comment|//
block|{
name|selection
operator|->
name|clear
argument_list|()
expr_stmt|;
name|selection
operator|->
name|select
argument_list|(
name|QItemSelection
argument_list|(
name|indexFromText
argument_list|(
operator|&
name|model
argument_list|,
name|QString
argument_list|(
literal|"item 3 - 0"
argument_list|)
argument_list|)
argument_list|,
name|indexFromText
argument_list|(
operator|&
name|model
argument_list|,
name|QString
argument_list|(
literal|"item 3 - %0"
argument_list|)
operator|.
name|arg
argument_list|(
name|nCol
operator|-
literal|1
argument_list|)
argument_list|)
argument_list|)
argument_list|,
name|QItemSelectionModel
operator|::
name|Select
argument_list|)
expr_stmt|;
name|selection
operator|->
name|select
argument_list|(
name|QItemSelection
argument_list|(
name|indexFromText
argument_list|(
operator|&
name|model
argument_list|,
name|QString
argument_list|(
literal|"item 3/0/2 - 0"
argument_list|)
argument_list|)
argument_list|,
name|indexFromText
argument_list|(
operator|&
name|model
argument_list|,
name|QString
argument_list|(
literal|"item 3/0/2 - %0"
argument_list|)
operator|.
name|arg
argument_list|(
name|nCol
operator|-
literal|1
argument_list|)
argument_list|)
argument_list|)
argument_list|,
name|QItemSelectionModel
operator|::
name|Select
argument_list|)
expr_stmt|;
comment|//code based from QAbstractItemView::startDrag and QAbstractItemView::dropEvent
name|QModelIndexList
name|indexes
init|=
name|view
operator|.
name|selectedIndexes
argument_list|()
decl_stmt|;
name|QMimeData
modifier|*
name|data
init|=
name|model
operator|.
name|mimeData
argument_list|(
name|indexes
argument_list|)
decl_stmt|;
if|if
condition|(
name|model
operator|.
name|dropMimeData
argument_list|(
name|data
argument_list|,
name|Qt
operator|::
name|MoveAction
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|indexFromText
argument_list|(
operator|&
name|model
argument_list|,
literal|"item 0/2 - 0"
argument_list|)
argument_list|)
condition|)
name|view
operator|.
name|d_func
argument_list|()
operator|->
name|clearOrRemove
argument_list|()
expr_stmt|;
operator|delete
name|data
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|compareModels
argument_list|(
operator|&
name|model
argument_list|,
operator|&
name|checkModel
argument_list|)
argument_list|)
expr_stmt|;
comment|//the model must be different at this point
name|QStandardItem
modifier|*
name|item02
init|=
name|itemFromText
argument_list|(
name|checkModel
operator|.
name|invisibleRootItem
argument_list|()
argument_list|,
literal|"item 0/2 - 0"
argument_list|)
decl_stmt|;
name|QStandardItem
modifier|*
name|item4
init|=
name|itemFromText
argument_list|(
name|checkModel
operator|.
name|invisibleRootItem
argument_list|()
argument_list|,
literal|"item 4 - 0"
argument_list|)
decl_stmt|;
name|item02
operator|->
name|insertRow
argument_list|(
literal|0
argument_list|,
name|item4
operator|->
name|takeRow
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|compareModels
argument_list|(
operator|&
name|model
argument_list|,
operator|&
name|checkModel
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_function
DECL|function|removeRowsAndColumns
name|void
name|tst_QStandardItemModel
operator|::
name|removeRowsAndColumns
parameter_list|()
block|{
DECL|macro|VERIFY_MODEL
define|#
directive|define
name|VERIFY_MODEL
define|\
value|for (int c = 0; c< col_list.count(); c++) \         for (int r = 0; r< row_list.count(); r++) \             QCOMPARE(model.item(r,c)->text() , row_list[r] + QLatin1Char('x') + col_list[c]);
name|QVector
argument_list|<
name|QString
argument_list|>
name|row_list
init|=
name|QString
argument_list|(
literal|"1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20"
argument_list|)
operator|.
name|split
argument_list|(
literal|','
argument_list|)
operator|.
name|toVector
argument_list|()
decl_stmt|;
name|QVector
argument_list|<
name|QString
argument_list|>
name|col_list
init|=
name|row_list
decl_stmt|;
name|QStandardItemModel
name|model
decl_stmt|;
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
name|col_list
operator|.
name|count
argument_list|()
condition|;
name|c
operator|++
control|)
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|row_list
operator|.
name|count
argument_list|()
condition|;
name|r
operator|++
control|)
name|model
operator|.
name|setItem
argument_list|(
name|r
argument_list|,
name|c
argument_list|,
operator|new
name|QStandardItem
argument_list|(
name|row_list
index|[
name|r
index|]
operator|+
name|QLatin1Char
argument_list|(
literal|'x'
argument_list|)
operator|+
name|col_list
index|[
name|c
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|VERIFY_MODEL
name|row_list
operator|.
name|remove
argument_list|(
literal|3
argument_list|)
decl_stmt|;
name|model
operator|.
name|removeRow
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|VERIFY_MODEL
name|col_list
operator|.
name|remove
argument_list|(
literal|5
argument_list|)
decl_stmt|;
name|model
operator|.
name|removeColumn
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|VERIFY_MODEL
name|row_list
operator|.
name|remove
argument_list|(
literal|2
argument_list|,
literal|5
argument_list|)
decl_stmt|;
name|model
operator|.
name|removeRows
argument_list|(
literal|2
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|VERIFY_MODEL
name|col_list
operator|.
name|remove
argument_list|(
literal|1
argument_list|,
literal|6
argument_list|)
decl_stmt|;
name|model
operator|.
name|removeColumns
argument_list|(
literal|1
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|VERIFY_MODEL
name|QList
argument_list|<
name|QStandardItem
modifier|*
argument_list|>
name|row_taken
init|=
name|model
operator|.
name|takeRow
argument_list|(
literal|6
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|row_taken
operator|.
name|count
argument_list|()
argument_list|,
name|col_list
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
name|col_list
operator|.
name|count
argument_list|()
condition|;
name|c
operator|++
control|)
name|QCOMPARE
argument_list|(
name|row_taken
index|[
name|c
index|]
operator|->
name|text
argument_list|()
argument_list|,
name|row_list
index|[
literal|6
index|]
operator|+
name|QLatin1Char
argument_list|(
literal|'x'
argument_list|)
operator|+
name|col_list
index|[
name|c
index|]
argument_list|)
expr_stmt|;
name|row_list
operator|.
name|remove
argument_list|(
literal|6
argument_list|)
expr_stmt|;
name|VERIFY_MODEL
name|QList
argument_list|<
name|QStandardItem
modifier|*
argument_list|>
name|col_taken
init|=
name|model
operator|.
name|takeColumn
argument_list|(
literal|10
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|col_taken
operator|.
name|count
argument_list|()
argument_list|,
name|row_list
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|row_list
operator|.
name|count
argument_list|()
condition|;
name|r
operator|++
control|)
name|QCOMPARE
argument_list|(
name|col_taken
index|[
name|r
index|]
operator|->
name|text
argument_list|()
argument_list|,
name|row_list
index|[
name|r
index|]
operator|+
name|QLatin1Char
argument_list|(
literal|'x'
argument_list|)
operator|+
name|col_list
index|[
literal|10
index|]
argument_list|)
expr_stmt|;
name|col_list
operator|.
name|remove
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|VERIFY_MODEL
block|}
end_function
begin_function
DECL|function|itemRoleNames
name|void
name|tst_QStandardItemModel
operator|::
name|itemRoleNames
parameter_list|()
block|{
name|QVector
argument_list|<
name|QString
argument_list|>
name|row_list
init|=
name|QString
argument_list|(
literal|"1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20"
argument_list|)
operator|.
name|split
argument_list|(
literal|','
argument_list|)
operator|.
name|toVector
argument_list|()
decl_stmt|;
name|QVector
argument_list|<
name|QString
argument_list|>
name|col_list
init|=
name|row_list
decl_stmt|;
name|QStandardItemModel
name|model
decl_stmt|;
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
name|col_list
operator|.
name|count
argument_list|()
condition|;
name|c
operator|++
control|)
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|row_list
operator|.
name|count
argument_list|()
condition|;
name|r
operator|++
control|)
name|model
operator|.
name|setItem
argument_list|(
name|r
argument_list|,
name|c
argument_list|,
operator|new
name|QStandardItem
argument_list|(
name|row_list
index|[
name|r
index|]
operator|+
name|QLatin1Char
argument_list|(
literal|'x'
argument_list|)
operator|+
name|col_list
index|[
name|c
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|VERIFY_MODEL
name|QHash
argument_list|<
name|int
argument_list|,
name|QByteArray
argument_list|>
name|newRoleNames
decl_stmt|;
name|newRoleNames
operator|.
name|insert
argument_list|(
name|Qt
operator|::
name|DisplayRole
argument_list|,
literal|"Name"
argument_list|)
expr_stmt|;
name|newRoleNames
operator|.
name|insert
argument_list|(
name|Qt
operator|::
name|DecorationRole
argument_list|,
literal|"Avatar"
argument_list|)
expr_stmt|;
name|model
operator|.
name|setItemRoleNames
argument_list|(
name|newRoleNames
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|roleNames
argument_list|()
argument_list|,
name|newRoleNames
argument_list|)
expr_stmt|;
name|VERIFY_MODEL
block|}
end_function
begin_function
DECL|function|getMimeDataWithInvalidModelIndex
name|void
name|tst_QStandardItemModel
operator|::
name|getMimeDataWithInvalidModelIndex
parameter_list|()
block|{
name|QStandardItemModel
name|model
decl_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QStandardItemModel::mimeData: No item associated with invalid index"
argument_list|)
expr_stmt|;
name|QMimeData
modifier|*
name|data
init|=
name|model
operator|.
name|mimeData
argument_list|(
name|QModelIndexList
argument_list|()
operator|<<
name|QModelIndex
argument_list|()
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|data
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QStandardItemModel
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qstandarditemmodel.moc"
end_include
end_unit
