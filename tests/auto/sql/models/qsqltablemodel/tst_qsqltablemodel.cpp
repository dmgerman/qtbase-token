begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|"../../kernel/qsqldatabase/tst_databases.h"
end_include
begin_include
include|#
directive|include
file|<QtSql>
end_include
begin_decl_stmt
specifier|const
name|QString
name|test
argument_list|(
name|qTableName
argument_list|(
literal|"test"
argument_list|,
name|__FILE__
argument_list|)
argument_list|)
decl_stmt|,
name|test2
argument_list|(
name|qTableName
argument_list|(
literal|"test2"
argument_list|,
name|__FILE__
argument_list|)
argument_list|)
decl_stmt|,
name|test3
argument_list|(
name|qTableName
argument_list|(
literal|"test3"
argument_list|,
name|__FILE__
argument_list|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QModelIndex
argument_list|)
end_macro
begin_class
DECL|class|tst_QSqlTableModel
class|class
name|tst_QSqlTableModel
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
name|tst_QSqlTableModel
parameter_list|()
constructor_decl|;
specifier|virtual
name|~
name|tst_QSqlTableModel
parameter_list|()
destructor_decl|;
name|void
name|dropTestTables
parameter_list|()
function_decl|;
name|void
name|createTestTables
parameter_list|()
function_decl|;
name|void
name|recreateTestTables
parameter_list|()
function_decl|;
name|void
name|repopulateTestTables
parameter_list|()
function_decl|;
DECL|member|dbs
name|tst_Databases
name|dbs
decl_stmt|;
public|public
name|slots
public|:
name|void
name|initTestCase
parameter_list|()
function_decl|;
name|void
name|cleanupTestCase
parameter_list|()
function_decl|;
name|void
name|init
parameter_list|()
function_decl|;
name|void
name|cleanup
parameter_list|()
function_decl|;
private|private
name|slots
private|:
DECL|function|select_data
name|void
name|select_data
parameter_list|()
block|{
name|generic_data
argument_list|()
expr_stmt|;
block|}
name|void
name|select
parameter_list|()
function_decl|;
DECL|function|selectRow_data
name|void
name|selectRow_data
parameter_list|()
block|{
name|generic_data
argument_list|()
expr_stmt|;
block|}
name|void
name|selectRow
parameter_list|()
function_decl|;
DECL|function|selectRowOverride_data
name|void
name|selectRowOverride_data
parameter_list|()
block|{
name|generic_data
argument_list|()
expr_stmt|;
block|}
name|void
name|selectRowOverride
parameter_list|()
function_decl|;
DECL|function|insertColumns_data
name|void
name|insertColumns_data
parameter_list|()
block|{
name|generic_data_with_strategies
argument_list|()
expr_stmt|;
block|}
name|void
name|insertColumns
parameter_list|()
function_decl|;
DECL|function|submitAll_data
name|void
name|submitAll_data
parameter_list|()
block|{
name|generic_data
argument_list|()
expr_stmt|;
block|}
name|void
name|submitAll
parameter_list|()
function_decl|;
DECL|function|setRecord_data
name|void
name|setRecord_data
parameter_list|()
block|{
name|generic_data
argument_list|()
expr_stmt|;
block|}
name|void
name|setRecord
parameter_list|()
function_decl|;
DECL|function|insertRow_data
name|void
name|insertRow_data
parameter_list|()
block|{
name|generic_data_with_strategies
argument_list|()
expr_stmt|;
block|}
name|void
name|insertRow
parameter_list|()
function_decl|;
DECL|function|insertRowFailure_data
name|void
name|insertRowFailure_data
parameter_list|()
block|{
name|generic_data_with_strategies
argument_list|()
expr_stmt|;
block|}
name|void
name|insertRowFailure
parameter_list|()
function_decl|;
DECL|function|insertRecord_data
name|void
name|insertRecord_data
parameter_list|()
block|{
name|generic_data
argument_list|()
expr_stmt|;
block|}
name|void
name|insertRecord
parameter_list|()
function_decl|;
DECL|function|insertMultiRecords_data
name|void
name|insertMultiRecords_data
parameter_list|()
block|{
name|generic_data
argument_list|()
expr_stmt|;
block|}
name|void
name|insertMultiRecords
parameter_list|()
function_decl|;
DECL|function|removeRow_data
name|void
name|removeRow_data
parameter_list|()
block|{
name|generic_data
argument_list|()
expr_stmt|;
block|}
name|void
name|removeRow
parameter_list|()
function_decl|;
DECL|function|removeRows_data
name|void
name|removeRows_data
parameter_list|()
block|{
name|generic_data
argument_list|()
expr_stmt|;
block|}
name|void
name|removeRows
parameter_list|()
function_decl|;
DECL|function|removeInsertedRow_data
name|void
name|removeInsertedRow_data
parameter_list|()
block|{
name|generic_data_with_strategies
argument_list|()
expr_stmt|;
block|}
name|void
name|removeInsertedRow
parameter_list|()
function_decl|;
DECL|function|removeInsertedRows_data
name|void
name|removeInsertedRows_data
parameter_list|()
block|{
name|generic_data
argument_list|()
expr_stmt|;
block|}
name|void
name|removeInsertedRows
parameter_list|()
function_decl|;
DECL|function|isDirty_data
name|void
name|isDirty_data
parameter_list|()
block|{
name|generic_data_with_strategies
argument_list|()
expr_stmt|;
block|}
name|void
name|isDirty
parameter_list|()
function_decl|;
DECL|function|setFilter_data
name|void
name|setFilter_data
parameter_list|()
block|{
name|generic_data
argument_list|()
expr_stmt|;
block|}
name|void
name|setFilter
parameter_list|()
function_decl|;
DECL|function|setInvalidFilter_data
name|void
name|setInvalidFilter_data
parameter_list|()
block|{
name|generic_data
argument_list|()
expr_stmt|;
block|}
name|void
name|setInvalidFilter
parameter_list|()
function_decl|;
DECL|function|emptyTable_data
name|void
name|emptyTable_data
parameter_list|()
block|{
name|generic_data
argument_list|()
expr_stmt|;
block|}
name|void
name|emptyTable
parameter_list|()
function_decl|;
DECL|function|tablesAndSchemas_data
name|void
name|tablesAndSchemas_data
parameter_list|()
block|{
name|generic_data
argument_list|(
literal|"QPSQL"
argument_list|)
expr_stmt|;
block|}
name|void
name|tablesAndSchemas
parameter_list|()
function_decl|;
DECL|function|whitespaceInIdentifiers_data
name|void
name|whitespaceInIdentifiers_data
parameter_list|()
block|{
name|generic_data
argument_list|()
expr_stmt|;
block|}
name|void
name|whitespaceInIdentifiers
parameter_list|()
function_decl|;
DECL|function|primaryKeyOrder_data
name|void
name|primaryKeyOrder_data
parameter_list|()
block|{
name|generic_data
argument_list|(
literal|"QSQLITE"
argument_list|)
expr_stmt|;
block|}
name|void
name|primaryKeyOrder
parameter_list|()
function_decl|;
DECL|function|sqlite_bigTable_data
name|void
name|sqlite_bigTable_data
parameter_list|()
block|{
name|generic_data
argument_list|(
literal|"QSQLITE"
argument_list|)
expr_stmt|;
block|}
name|void
name|sqlite_bigTable
parameter_list|()
function_decl|;
comment|// bug specific tests
DECL|function|insertRecordBeforeSelect_data
name|void
name|insertRecordBeforeSelect_data
parameter_list|()
block|{
name|generic_data
argument_list|()
expr_stmt|;
block|}
name|void
name|insertRecordBeforeSelect
parameter_list|()
function_decl|;
DECL|function|submitAllOnInvalidTable_data
name|void
name|submitAllOnInvalidTable_data
parameter_list|()
block|{
name|generic_data
argument_list|()
expr_stmt|;
block|}
name|void
name|submitAllOnInvalidTable
parameter_list|()
function_decl|;
DECL|function|insertRecordsInLoop_data
name|void
name|insertRecordsInLoop_data
parameter_list|()
block|{
name|generic_data
argument_list|()
expr_stmt|;
block|}
name|void
name|insertRecordsInLoop
parameter_list|()
function_decl|;
DECL|function|sqlite_attachedDatabase_data
name|void
name|sqlite_attachedDatabase_data
parameter_list|()
block|{
name|generic_data
argument_list|(
literal|"QSQLITE"
argument_list|)
expr_stmt|;
block|}
name|void
name|sqlite_attachedDatabase
parameter_list|()
function_decl|;
comment|// For task 130799
DECL|function|tableModifyWithBlank_data
name|void
name|tableModifyWithBlank_data
parameter_list|()
block|{
name|generic_data
argument_list|()
expr_stmt|;
block|}
name|void
name|tableModifyWithBlank
parameter_list|()
function_decl|;
comment|// For mail task
DECL|function|removeColumnAndRow_data
name|void
name|removeColumnAndRow_data
parameter_list|()
block|{
name|generic_data
argument_list|()
expr_stmt|;
block|}
name|void
name|removeColumnAndRow
parameter_list|()
function_decl|;
comment|// task 256032
DECL|function|insertBeforeDelete_data
name|void
name|insertBeforeDelete_data
parameter_list|()
block|{
name|generic_data
argument_list|()
expr_stmt|;
block|}
name|void
name|insertBeforeDelete
parameter_list|()
function_decl|;
DECL|function|invalidFilterAndHeaderData_data
name|void
name|invalidFilterAndHeaderData_data
parameter_list|()
block|{
name|generic_data
argument_list|()
expr_stmt|;
block|}
name|void
name|invalidFilterAndHeaderData
parameter_list|()
function_decl|;
comment|//QTBUG-23879
private|private:
name|void
name|generic_data
parameter_list|(
specifier|const
name|QString
modifier|&
name|engine
init|=
name|QString
argument_list|()
parameter_list|)
function_decl|;
name|void
name|generic_data_with_strategies
parameter_list|(
specifier|const
name|QString
modifier|&
name|engine
init|=
name|QString
argument_list|()
parameter_list|)
function_decl|;
block|}
class|;
end_class
begin_constructor
DECL|function|tst_QSqlTableModel
name|tst_QSqlTableModel
operator|::
name|tst_QSqlTableModel
parameter_list|()
block|{
name|qRegisterMetaType
argument_list|<
name|QModelIndex
argument_list|>
argument_list|(
literal|"QModelIndex"
argument_list|)
expr_stmt|;
name|dbs
operator|.
name|open
argument_list|()
expr_stmt|;
block|}
end_constructor
begin_destructor
DECL|function|~tst_QSqlTableModel
name|tst_QSqlTableModel
operator|::
name|~
name|tst_QSqlTableModel
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|dropTestTables
name|void
name|tst_QSqlTableModel
operator|::
name|dropTestTables
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|dbs
operator|.
name|dbNames
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbs
operator|.
name|dbNames
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
decl_stmt|;
name|QSqlQuery
name|q
argument_list|(
name|db
argument_list|)
decl_stmt|;
if|if
condition|(
name|tst_Databases
operator|::
name|isPostgreSQL
argument_list|(
name|db
argument_list|)
condition|)
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"set client_min_messages='warning'"
argument_list|)
argument_list|)
expr_stmt|;
name|QStringList
name|tableNames
decl_stmt|;
name|tableNames
operator|<<
name|test
operator|<<
name|test2
operator|<<
name|test3
operator|<<
name|qTableName
argument_list|(
literal|"test4"
argument_list|,
name|__FILE__
argument_list|)
operator|<<
name|qTableName
argument_list|(
literal|"emptytable"
argument_list|,
name|__FILE__
argument_list|)
operator|<<
name|qTableName
argument_list|(
literal|"bigtable"
argument_list|,
name|__FILE__
argument_list|)
operator|<<
name|qTableName
argument_list|(
literal|"foo"
argument_list|,
name|__FILE__
argument_list|)
operator|<<
name|qTableName
argument_list|(
literal|"pktest"
argument_list|,
name|__FILE__
argument_list|)
expr_stmt|;
if|if
condition|(
name|testWhiteSpaceNames
argument_list|(
name|db
operator|.
name|driverName
argument_list|()
argument_list|)
condition|)
name|tableNames
operator|<<
name|qTableName
argument_list|(
literal|"qtestw hitespace"
argument_list|,
name|db
operator|.
name|driver
argument_list|()
argument_list|)
expr_stmt|;
name|tst_Databases
operator|::
name|safeDropTables
argument_list|(
name|db
argument_list|,
name|tableNames
argument_list|)
expr_stmt|;
if|if
condition|(
name|db
operator|.
name|driverName
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"QPSQL"
argument_list|)
condition|)
block|{
name|q
operator|.
name|exec
argument_list|(
literal|"DROP SCHEMA "
operator|+
name|qTableName
argument_list|(
literal|"testschema"
argument_list|,
name|__FILE__
argument_list|)
operator|+
literal|" CASCADE"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_function
begin_function
DECL|function|createTestTables
name|void
name|tst_QSqlTableModel
operator|::
name|createTestTables
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|dbs
operator|.
name|dbNames
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbs
operator|.
name|dbNames
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
decl_stmt|;
name|QSqlQuery
name|q
argument_list|(
name|db
argument_list|)
decl_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"create table "
operator|+
name|test
operator|+
literal|"(id int, name varchar(20), title int)"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"create table "
operator|+
name|test2
operator|+
literal|"(id int, title varchar(20))"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"create table "
operator|+
name|test3
operator|+
literal|"(id int, random varchar(20), randomtwo varchar(20))"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|tst_Databases
operator|::
name|isSqlServer
argument_list|(
name|db
argument_list|)
condition|)
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"create table "
operator|+
name|qTableName
argument_list|(
literal|"test4"
argument_list|,
name|__FILE__
argument_list|)
operator|+
literal|"(column1 varchar(50), column2 varchar(50), column3 varchar(50))"
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"create table "
operator|+
name|qTableName
argument_list|(
literal|"test4"
argument_list|,
name|__FILE__
argument_list|)
operator|+
literal|"(column1 varchar(50), column2 varchar(50) NULL, column3 varchar(50))"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"create table "
operator|+
name|qTableName
argument_list|(
literal|"emptytable"
argument_list|,
name|__FILE__
argument_list|)
operator|+
literal|"(id int)"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|testWhiteSpaceNames
argument_list|(
name|db
operator|.
name|driverName
argument_list|()
argument_list|)
condition|)
block|{
name|QString
name|qry
init|=
literal|"create table "
operator|+
name|qTableName
argument_list|(
literal|"qtestw hitespace"
argument_list|,
name|db
operator|.
name|driver
argument_list|()
argument_list|)
operator|+
literal|" ("
operator|+
name|db
operator|.
name|driver
argument_list|()
operator|->
name|escapeIdentifier
argument_list|(
literal|"a field"
argument_list|,
name|QSqlDriver
operator|::
name|FieldName
argument_list|)
operator|+
literal|" int)"
decl_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
name|qry
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"create table "
operator|+
name|qTableName
argument_list|(
literal|"pktest"
argument_list|,
name|__FILE__
argument_list|)
operator|+
literal|"(id int not null primary key, a varchar(20))"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|repopulateTestTables
name|void
name|tst_QSqlTableModel
operator|::
name|repopulateTestTables
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|dbs
operator|.
name|dbNames
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbs
operator|.
name|dbNames
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
decl_stmt|;
name|QSqlQuery
name|q
argument_list|(
name|db
argument_list|)
decl_stmt|;
name|q
operator|.
name|exec
argument_list|(
literal|"delete from "
operator|+
name|test
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"insert into "
operator|+
name|test
operator|+
literal|" values(1, 'harry', 1)"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"insert into "
operator|+
name|test
operator|+
literal|" values(2, 'trond', 2)"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"insert into "
operator|+
name|test
operator|+
literal|" values(3, 'vohi', 3)"
argument_list|)
argument_list|)
expr_stmt|;
name|q
operator|.
name|exec
argument_list|(
literal|"delete from "
operator|+
name|test2
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"insert into "
operator|+
name|test2
operator|+
literal|" values(1, 'herr')"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"insert into "
operator|+
name|test2
operator|+
literal|" values(2, 'mister')"
argument_list|)
argument_list|)
expr_stmt|;
name|q
operator|.
name|exec
argument_list|(
literal|"delete from "
operator|+
name|test3
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"insert into "
operator|+
name|test3
operator|+
literal|" values(1, 'foo', 'bar')"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"insert into "
operator|+
name|test3
operator|+
literal|" values(2, 'baz', 'joe')"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|recreateTestTables
name|void
name|tst_QSqlTableModel
operator|::
name|recreateTestTables
parameter_list|()
block|{
name|dropTestTables
argument_list|()
expr_stmt|;
name|createTestTables
argument_list|()
expr_stmt|;
name|repopulateTestTables
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|generic_data
name|void
name|tst_QSqlTableModel
operator|::
name|generic_data
parameter_list|(
specifier|const
name|QString
modifier|&
name|engine
parameter_list|)
block|{
if|if
condition|(
name|dbs
operator|.
name|fillTestTable
argument_list|(
name|engine
argument_list|)
operator|==
literal|0
condition|)
block|{
if|if
condition|(
name|engine
operator|.
name|isEmpty
argument_list|()
condition|)
name|QSKIP
argument_list|(
literal|"No database drivers are available in this Qt configuration"
argument_list|)
expr_stmt|;
else|else
name|QSKIP
argument_list|(
operator|(
name|QString
argument_list|(
literal|"No database drivers of type %1 are available in this Qt configuration"
argument_list|)
operator|.
name|arg
argument_list|(
name|engine
argument_list|)
operator|)
operator|.
name|toLocal8Bit
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|generic_data_with_strategies
name|void
name|tst_QSqlTableModel
operator|::
name|generic_data_with_strategies
parameter_list|(
specifier|const
name|QString
modifier|&
name|engine
parameter_list|)
block|{
if|if
condition|(
name|dbs
operator|.
name|fillTestTableWithStrategies
argument_list|(
name|engine
argument_list|)
operator|==
literal|0
condition|)
block|{
if|if
condition|(
name|engine
operator|.
name|isEmpty
argument_list|()
condition|)
name|QSKIP
argument_list|(
literal|"No database drivers are available in this Qt configuration"
argument_list|)
expr_stmt|;
else|else
name|QSKIP
argument_list|(
operator|(
name|QString
argument_list|(
literal|"No database drivers of type %1 are available in this Qt configuration"
argument_list|)
operator|.
name|arg
argument_list|(
name|engine
argument_list|)
operator|)
operator|.
name|toLocal8Bit
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|initTestCase
name|void
name|tst_QSqlTableModel
operator|::
name|initTestCase
parameter_list|()
block|{
name|recreateTestTables
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|cleanupTestCase
name|void
name|tst_QSqlTableModel
operator|::
name|cleanupTestCase
parameter_list|()
block|{
name|dropTestTables
argument_list|()
expr_stmt|;
name|dbs
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|init
name|void
name|tst_QSqlTableModel
operator|::
name|init
parameter_list|()
block|{ }
end_function
begin_function
DECL|function|cleanup
name|void
name|tst_QSqlTableModel
operator|::
name|cleanup
parameter_list|()
block|{
name|repopulateTestTables
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|select
name|void
name|tst_QSqlTableModel
operator|::
name|select
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|dbName
argument_list|)
expr_stmt|;
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbName
argument_list|)
decl_stmt|;
name|CHECK_DATABASE
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|QSqlTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|test
argument_list|)
expr_stmt|;
name|model
operator|.
name|setSort
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|AscendingOrder
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|columnCount
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
argument_list|)
argument_list|,
name|QVariant
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"trond"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
argument_list|)
argument_list|,
name|QVariant
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"vohi"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|)
argument_list|)
argument_list|,
name|QVariant
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|,
name|QVariant
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|,
name|QVariant
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
argument_list|)
argument_list|,
name|QVariant
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
argument_list|)
argument_list|,
name|QVariant
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|selectRow
name|void
name|tst_QSqlTableModel
operator|::
name|selectRow
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|dbName
argument_list|)
expr_stmt|;
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbName
argument_list|)
decl_stmt|;
name|CHECK_DATABASE
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|QString
name|tbl
init|=
name|qTableName
argument_list|(
literal|"pktest"
argument_list|,
name|__FILE__
argument_list|)
decl_stmt|;
name|QSqlQuery
name|q
argument_list|(
name|db
argument_list|)
decl_stmt|;
name|q
operator|.
name|exec
argument_list|(
literal|"DELETE FROM "
operator|+
name|tbl
argument_list|)
expr_stmt|;
name|q
operator|.
name|exec
argument_list|(
literal|"INSERT INTO "
operator|+
name|tbl
operator|+
literal|" (id, a) VALUES (0, 'a')"
argument_list|)
expr_stmt|;
name|q
operator|.
name|exec
argument_list|(
literal|"INSERT INTO "
operator|+
name|tbl
operator|+
literal|" (id, a) VALUES (1, 'b')"
argument_list|)
expr_stmt|;
name|q
operator|.
name|exec
argument_list|(
literal|"INSERT INTO "
operator|+
name|tbl
operator|+
literal|" (id, a) VALUES (2, 'c')"
argument_list|)
expr_stmt|;
name|QSqlTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setEditStrategy
argument_list|(
name|QSqlTableModel
operator|::
name|OnFieldChange
argument_list|)
expr_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|tbl
argument_list|)
expr_stmt|;
name|model
operator|.
name|setSort
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|AscendingOrder
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|columnCount
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QModelIndex
name|idx
init|=
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
decl_stmt|;
comment|// Check if selectRow() refreshes an unchanged row.
comment|// Row is not in cache yet.
name|q
operator|.
name|exec
argument_list|(
literal|"UPDATE "
operator|+
name|tbl
operator|+
literal|" SET a = 'Qt' WHERE id = 1"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|idx
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"b"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|selectRow
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|idx
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Qt"
argument_list|)
argument_list|)
expr_stmt|;
comment|// Check if selectRow() refreshes a changed row.
comment|// Row is already in the cache.
name|model
operator|.
name|setData
argument_list|(
name|idx
argument_list|,
name|QString
argument_list|(
literal|"b"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|idx
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"b"
argument_list|)
argument_list|)
expr_stmt|;
name|q
operator|.
name|exec
argument_list|(
literal|"UPDATE "
operator|+
name|tbl
operator|+
literal|" SET a = 'Qt' WHERE id = 1"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|idx
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"b"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|selectRow
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|idx
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Qt"
argument_list|)
argument_list|)
expr_stmt|;
name|q
operator|.
name|exec
argument_list|(
literal|"DELETE FROM "
operator|+
name|tbl
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|SelectRowOverrideTestModel
class|class
name|SelectRowOverrideTestModel
super|:
specifier|public
name|QSqlTableModel
block|{
name|Q_OBJECT
public|public:
DECL|function|SelectRowOverrideTestModel
name|SelectRowOverrideTestModel
parameter_list|(
name|QObject
modifier|*
name|parent
parameter_list|,
name|QSqlDatabase
name|db
parameter_list|)
member_init_list|:
name|QSqlTableModel
argument_list|(
name|parent
argument_list|,
name|db
argument_list|)
block|{ }
DECL|function|selectRow
name|bool
name|selectRow
parameter_list|(
name|int
name|row
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
argument|row
argument_list|)
return|return
name|select
argument_list|()
return|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|selectRowOverride
name|void
name|tst_QSqlTableModel
operator|::
name|selectRowOverride
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|dbName
argument_list|)
expr_stmt|;
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbName
argument_list|)
decl_stmt|;
name|CHECK_DATABASE
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|QString
name|tbl
init|=
name|qTableName
argument_list|(
literal|"pktest"
argument_list|,
name|__FILE__
argument_list|)
decl_stmt|;
name|QSqlQuery
name|q
argument_list|(
name|db
argument_list|)
decl_stmt|;
name|q
operator|.
name|exec
argument_list|(
literal|"DELETE FROM "
operator|+
name|tbl
argument_list|)
expr_stmt|;
name|q
operator|.
name|exec
argument_list|(
literal|"INSERT INTO "
operator|+
name|tbl
operator|+
literal|" (id, a) VALUES (0, 'a')"
argument_list|)
expr_stmt|;
name|q
operator|.
name|exec
argument_list|(
literal|"INSERT INTO "
operator|+
name|tbl
operator|+
literal|" (id, a) VALUES (1, 'b')"
argument_list|)
expr_stmt|;
name|q
operator|.
name|exec
argument_list|(
literal|"INSERT INTO "
operator|+
name|tbl
operator|+
literal|" (id, a) VALUES (2, 'c')"
argument_list|)
expr_stmt|;
name|SelectRowOverrideTestModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setEditStrategy
argument_list|(
name|QSqlTableModel
operator|::
name|OnFieldChange
argument_list|)
expr_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|tbl
argument_list|)
expr_stmt|;
name|model
operator|.
name|setSort
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|AscendingOrder
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|columnCount
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|q
operator|.
name|exec
argument_list|(
literal|"UPDATE "
operator|+
name|tbl
operator|+
literal|" SET a = 'Qt' WHERE id = 2"
argument_list|)
expr_stmt|;
name|QModelIndex
name|idx
init|=
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
decl_stmt|;
comment|// overridden selectRow() should select() whole table and not crash
name|model
operator|.
name|setData
argument_list|(
name|idx
argument_list|,
name|QString
argument_list|(
literal|"Qt"
argument_list|)
argument_list|)
expr_stmt|;
comment|// both rows should have changed
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|idx
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Qt"
argument_list|)
argument_list|)
expr_stmt|;
name|idx
operator|=
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|idx
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Qt"
argument_list|)
argument_list|)
expr_stmt|;
name|q
operator|.
name|exec
argument_list|(
literal|"DELETE FROM "
operator|+
name|tbl
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|insertColumns
name|void
name|tst_QSqlTableModel
operator|::
name|insertColumns
parameter_list|()
block|{
comment|// Just like the select test, with extra stuff
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|dbName
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|submitpolicy_i
argument_list|)
expr_stmt|;
name|QSqlTableModel
operator|::
name|EditStrategy
name|submitpolicy
init|=
operator|(
name|QSqlTableModel
operator|::
name|EditStrategy
operator|)
name|submitpolicy_i
decl_stmt|;
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbName
argument_list|)
decl_stmt|;
name|CHECK_DATABASE
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|QSqlTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|test
argument_list|)
expr_stmt|;
name|model
operator|.
name|setSort
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|AscendingOrder
argument_list|)
expr_stmt|;
name|model
operator|.
name|setEditStrategy
argument_list|(
name|submitpolicy
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|columnCount
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
argument_list|)
argument_list|,
name|QVariant
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"trond"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
argument_list|)
argument_list|,
name|QVariant
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"vohi"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|)
argument_list|)
argument_list|,
name|QVariant
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|,
name|QVariant
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|,
name|QVariant
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
argument_list|)
argument_list|,
name|QVariant
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
argument_list|)
argument_list|,
name|QVariant
argument_list|()
argument_list|)
expr_stmt|;
comment|// Now add a column at 0 and 2
name|model
operator|.
name|insertColumn
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|model
operator|.
name|insertColumn
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|columnCount
argument_list|()
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|,
name|QVariant
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
argument_list|,
name|QVariant
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|4
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|5
argument_list|)
argument_list|)
argument_list|,
name|QVariant
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|,
name|QVariant
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|)
argument_list|,
name|QVariant
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"trond"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|4
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|5
argument_list|)
argument_list|)
argument_list|,
name|QVariant
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|,
name|QVariant
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|)
argument_list|,
name|QVariant
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"vohi"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|4
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|5
argument_list|)
argument_list|)
argument_list|,
name|QVariant
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|,
name|QVariant
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|,
name|QVariant
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
argument_list|)
argument_list|,
name|QVariant
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
argument_list|)
argument_list|,
name|QVariant
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|4
argument_list|)
argument_list|)
argument_list|,
name|QVariant
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|5
argument_list|)
argument_list|)
argument_list|,
name|QVariant
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setRecord
name|void
name|tst_QSqlTableModel
operator|::
name|setRecord
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|dbName
argument_list|)
expr_stmt|;
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbName
argument_list|)
decl_stmt|;
name|CHECK_DATABASE
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|QSqlTableModel
operator|::
name|EditStrategy
argument_list|>
name|policies
init|=
name|QList
argument_list|<
name|QSqlTableModel
operator|::
name|EditStrategy
argument_list|>
argument_list|()
operator|<<
name|QSqlTableModel
operator|::
name|OnFieldChange
operator|<<
name|QSqlTableModel
operator|::
name|OnRowChange
operator|<<
name|QSqlTableModel
operator|::
name|OnManualSubmit
decl_stmt|;
name|QString
name|Xsuffix
decl_stmt|;
foreach|foreach
control|(
name|QSqlTableModel
operator|::
name|EditStrategy
name|submitpolicy
decl|,
name|policies
control|)
block|{
name|QSqlTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setEditStrategy
argument_list|(
operator|(
name|QSqlTableModel
operator|::
name|EditStrategy
operator|)
name|submitpolicy
argument_list|)
expr_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|test3
argument_list|)
expr_stmt|;
name|model
operator|.
name|setSort
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|AscendingOrder
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|model
operator|.
name|rowCount
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|QSignalSpy
name|spy
argument_list|(
operator|&
name|model
argument_list|,
name|SIGNAL
argument_list|(
name|dataChanged
argument_list|(
name|QModelIndex
argument_list|,
name|QModelIndex
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QSqlRecord
name|rec
init|=
name|model
operator|.
name|record
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|rec
operator|.
name|setValue
argument_list|(
literal|1
argument_list|,
name|rec
operator|.
name|value
argument_list|(
literal|1
argument_list|)
operator|.
name|toString
argument_list|()
operator|+
literal|'X'
argument_list|)
expr_stmt|;
name|rec
operator|.
name|setValue
argument_list|(
literal|2
argument_list|,
name|rec
operator|.
name|value
argument_list|(
literal|2
argument_list|)
operator|.
name|toString
argument_list|()
operator|+
literal|'X'
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|setRecord
argument_list|(
name|i
argument_list|,
name|rec
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|(
name|QSqlTableModel
operator|::
name|EditStrategy
operator|)
name|submitpolicy
operator|==
name|QSqlTableModel
operator|::
name|OnManualSubmit
condition|)
block|{
comment|// setRecord should emit dataChanged() itself for manualSubmit
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qvariant_cast
argument_list|<
name|QModelIndex
argument_list|>
argument_list|(
name|spy
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|,
name|model
operator|.
name|index
argument_list|(
name|i
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qvariant_cast
argument_list|<
name|QModelIndex
argument_list|>
argument_list|(
name|spy
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|at
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|,
name|model
operator|.
name|index
argument_list|(
name|i
argument_list|,
name|rec
operator|.
name|count
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|submitAll
argument_list|()
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
operator|(
name|QSqlTableModel
operator|::
name|EditStrategy
operator|)
name|submitpolicy
operator|==
name|QSqlTableModel
operator|::
name|OnRowChange
operator|&&
name|i
operator|==
name|model
operator|.
name|rowCount
argument_list|()
operator|-
literal|1
condition|)
name|model
operator|.
name|submit
argument_list|()
expr_stmt|;
else|else
block|{
comment|// dataChanged() emitted by selectRow() as well as setRecord()
if|if
condition|(
operator|(
name|QSqlTableModel
operator|::
name|EditStrategy
operator|)
name|submitpolicy
operator|!=
name|QSqlTableModel
operator|::
name|OnManualSubmit
condition|)
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
else|else
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qvariant_cast
argument_list|<
name|QModelIndex
argument_list|>
argument_list|(
name|spy
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|,
name|model
operator|.
name|index
argument_list|(
name|i
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qvariant_cast
argument_list|<
name|QModelIndex
argument_list|>
argument_list|(
name|spy
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|at
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|,
name|model
operator|.
name|index
argument_list|(
name|i
argument_list|,
name|rec
operator|.
name|count
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|Xsuffix
operator|.
name|append
argument_list|(
literal|'X'
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|append
argument_list|(
name|Xsuffix
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"bar"
argument_list|)
operator|.
name|append
argument_list|(
name|Xsuffix
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"baz"
argument_list|)
operator|.
name|append
argument_list|(
name|Xsuffix
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"joe"
argument_list|)
operator|.
name|append
argument_list|(
name|Xsuffix
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|insertRow
name|void
name|tst_QSqlTableModel
operator|::
name|insertRow
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|dbName
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|submitpolicy_i
argument_list|)
expr_stmt|;
name|QSqlTableModel
operator|::
name|EditStrategy
name|submitpolicy
init|=
operator|(
name|QSqlTableModel
operator|::
name|EditStrategy
operator|)
name|submitpolicy_i
decl_stmt|;
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbName
argument_list|)
decl_stmt|;
name|CHECK_DATABASE
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|QSqlTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setEditStrategy
argument_list|(
name|submitpolicy
argument_list|)
expr_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|test
argument_list|)
expr_stmt|;
name|model
operator|.
name|setSort
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|AscendingOrder
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"trond"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"vohi"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|insertRow
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"trond"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"vohi"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QSqlRecord
name|rec
init|=
name|model
operator|.
name|record
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|rec
operator|.
name|setValue
argument_list|(
literal|0
argument_list|,
literal|42
argument_list|)
expr_stmt|;
name|rec
operator|.
name|setValue
argument_list|(
literal|1
argument_list|,
name|QString
argument_list|(
literal|"francis"
argument_list|)
argument_list|)
expr_stmt|;
comment|// Setting record does not cause resort
name|QVERIFY
argument_list|(
name|model
operator|.
name|setRecord
argument_list|(
literal|2
argument_list|,
name|rec
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"trond"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|42
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"francis"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"vohi"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|submitAll
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|submitpolicy
operator|==
name|QSqlTableModel
operator|::
name|OnManualSubmit
condition|)
block|{
comment|// After the submit we should have the resorted view
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"trond"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"vohi"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|42
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"francis"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// Submit does not select, therefore not resorted
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"trond"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|42
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"francis"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"vohi"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
block|}
name|QVERIFY
argument_list|(
name|model
operator|.
name|select
argument_list|()
argument_list|)
expr_stmt|;
comment|// After the select we should have the resorted view in all strategies
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"trond"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"vohi"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|42
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"francis"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|insertRowFailure
name|void
name|tst_QSqlTableModel
operator|::
name|insertRowFailure
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|dbName
argument_list|)
expr_stmt|;
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbName
argument_list|)
decl_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|submitpolicy_i
argument_list|)
expr_stmt|;
name|QSqlTableModel
operator|::
name|EditStrategy
name|submitpolicy
init|=
operator|(
name|QSqlTableModel
operator|::
name|EditStrategy
operator|)
name|submitpolicy_i
decl_stmt|;
name|CHECK_DATABASE
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|QSqlTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|qTableName
argument_list|(
literal|"pktest"
argument_list|,
name|__FILE__
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|setEditStrategy
argument_list|(
name|submitpolicy
argument_list|)
expr_stmt|;
name|QSqlRecord
name|values
init|=
name|model
operator|.
name|record
argument_list|()
decl_stmt|;
name|values
operator|.
name|setValue
argument_list|(
literal|0
argument_list|,
literal|42
argument_list|)
expr_stmt|;
name|values
operator|.
name|setGenerated
argument_list|(
literal|0
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|values
operator|.
name|setValue
argument_list|(
literal|1
argument_list|,
name|QString
argument_list|(
literal|"blah"
argument_list|)
argument_list|)
expr_stmt|;
name|values
operator|.
name|setGenerated
argument_list|(
literal|1
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|// populate 1 row
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|insertRecord
argument_list|(
literal|0
argument_list|,
name|values
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|submitAll
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|42
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"blah"
argument_list|)
argument_list|)
expr_stmt|;
comment|// primary key conflict will succeed in model but fail in database
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|insertRow
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
literal|42
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
literal|"conflict"
argument_list|)
argument_list|)
expr_stmt|;
name|QFAIL_SQL
argument_list|(
name|model
argument_list|,
name|submitAll
argument_list|()
argument_list|)
expr_stmt|;
comment|// failed insert is still cached
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"conflict"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"blah"
argument_list|)
argument_list|)
expr_stmt|;
comment|// cached insert affects subsequent operations
name|values
operator|.
name|setValue
argument_list|(
literal|1
argument_list|,
name|QString
argument_list|(
literal|"spam"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|submitpolicy
operator|!=
name|QSqlTableModel
operator|::
name|OnManualSubmit
condition|)
block|{
name|QFAIL_SQL
argument_list|(
name|model
argument_list|,
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"eggs"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"blah"
argument_list|)
argument_list|)
expr_stmt|;
name|QFAIL_SQL
argument_list|(
name|model
argument_list|,
name|setRecord
argument_list|(
literal|1
argument_list|,
name|values
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"blah"
argument_list|)
argument_list|)
expr_stmt|;
name|QFAIL_SQL
argument_list|(
name|model
argument_list|,
name|insertRow
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QFAIL_SQL
argument_list|(
name|model
argument_list|,
name|removeRow
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"eggs"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"eggs"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|setRecord
argument_list|(
literal|1
argument_list|,
name|values
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"spam"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|insertRow
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|removeRow
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
block|}
comment|// restore empty table
name|model
operator|.
name|revertAll
argument_list|()
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|removeRow
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|submitAll
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|insertRecord
name|void
name|tst_QSqlTableModel
operator|::
name|insertRecord
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|dbName
argument_list|)
expr_stmt|;
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbName
argument_list|)
decl_stmt|;
name|CHECK_DATABASE
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|QSqlTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setEditStrategy
argument_list|(
name|QSqlTableModel
operator|::
name|OnManualSubmit
argument_list|)
expr_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|test
argument_list|)
expr_stmt|;
name|model
operator|.
name|setSort
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|AscendingOrder
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QSqlRecord
name|rec
init|=
name|model
operator|.
name|record
argument_list|()
decl_stmt|;
name|rec
operator|.
name|setValue
argument_list|(
literal|0
argument_list|,
literal|42
argument_list|)
expr_stmt|;
name|rec
operator|.
name|setValue
argument_list|(
literal|1
argument_list|,
name|QString
argument_list|(
literal|"vohi"
argument_list|)
argument_list|)
expr_stmt|;
name|rec
operator|.
name|setValue
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|insertRecord
argument_list|(
literal|1
argument_list|,
name|rec
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|42
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"vohi"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|model
operator|.
name|revertAll
argument_list|()
expr_stmt|;
name|model
operator|.
name|setEditStrategy
argument_list|(
name|QSqlTableModel
operator|::
name|OnRowChange
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|insertRecord
argument_list|(
operator|-
literal|1
argument_list|,
name|rec
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|42
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"vohi"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|insertMultiRecords
name|void
name|tst_QSqlTableModel
operator|::
name|insertMultiRecords
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|dbName
argument_list|)
expr_stmt|;
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbName
argument_list|)
decl_stmt|;
name|CHECK_DATABASE
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|QSqlTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setEditStrategy
argument_list|(
name|QSqlTableModel
operator|::
name|OnManualSubmit
argument_list|)
expr_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|test
argument_list|)
expr_stmt|;
name|model
operator|.
name|setSort
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|AscendingOrder
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|insertRow
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|,
name|QVariant
argument_list|(
name|model
operator|.
name|record
argument_list|()
operator|.
name|field
argument_list|(
literal|0
argument_list|)
operator|.
name|type
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|,
name|QVariant
argument_list|(
name|model
operator|.
name|record
argument_list|()
operator|.
name|field
argument_list|(
literal|1
argument_list|)
operator|.
name|type
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|)
argument_list|,
name|QVariant
argument_list|(
name|model
operator|.
name|record
argument_list|()
operator|.
name|field
argument_list|(
literal|2
argument_list|)
operator|.
name|type
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|insertRow
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|insertRow
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|5
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|5
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"vohi"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|5
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|QVariant
argument_list|(
literal|42
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
argument_list|,
name|QVariant
argument_list|(
literal|43
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|4
argument_list|,
literal|0
argument_list|)
argument_list|,
name|QVariant
argument_list|(
literal|44
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|4
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QVariant
argument_list|(
name|QLatin1String
argument_list|(
literal|"gunnar"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|4
argument_list|,
literal|2
argument_list|)
argument_list|,
name|QVariant
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|submitAll
argument_list|()
argument_list|)
expr_stmt|;
name|model
operator|.
name|clear
argument_list|()
expr_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|test
argument_list|)
expr_stmt|;
name|model
operator|.
name|setSort
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|AscendingOrder
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|42
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|4
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|43
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|5
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|44
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|5
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"gunnar"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|5
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|submitAll
name|void
name|tst_QSqlTableModel
operator|::
name|submitAll
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|dbName
argument_list|)
expr_stmt|;
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbName
argument_list|)
decl_stmt|;
name|CHECK_DATABASE
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|QSqlTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|test
argument_list|)
expr_stmt|;
name|model
operator|.
name|setSort
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|AscendingOrder
argument_list|)
expr_stmt|;
name|model
operator|.
name|setEditStrategy
argument_list|(
name|QSqlTableModel
operator|::
name|OnManualSubmit
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
literal|"harry2"
argument_list|,
name|Qt
operator|::
name|EditRole
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
literal|"trond2"
argument_list|,
name|Qt
operator|::
name|EditRole
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry2"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"trond2"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|submitAll
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry2"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"trond2"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
literal|"harry"
argument_list|,
name|Qt
operator|::
name|EditRole
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
literal|"trond"
argument_list|,
name|Qt
operator|::
name|EditRole
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"trond"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|submitAll
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"trond"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|removeRow
name|void
name|tst_QSqlTableModel
operator|::
name|removeRow
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|dbName
argument_list|)
expr_stmt|;
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbName
argument_list|)
decl_stmt|;
name|CHECK_DATABASE
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|QSqlTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|test
argument_list|)
expr_stmt|;
name|model
operator|.
name|setSort
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|AscendingOrder
argument_list|)
expr_stmt|;
name|model
operator|.
name|setEditStrategy
argument_list|(
name|QSqlTableModel
operator|::
name|OnManualSubmit
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
comment|// headerDataChanged must be emitted by the model since the row won't vanish until select
name|qRegisterMetaType
argument_list|<
name|Qt
operator|::
name|Orientation
argument_list|>
argument_list|(
literal|"Qt::Orientation"
argument_list|)
expr_stmt|;
name|QSignalSpy
name|headerDataChangedSpy
argument_list|(
operator|&
name|model
argument_list|,
name|SIGNAL
argument_list|(
name|headerDataChanged
argument_list|(
name|Qt
operator|::
name|Orientation
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|removeRow
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|headerDataChangedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
operator|*
cast|static_cast
argument_list|<
specifier|const
name|Qt
operator|::
name|Orientation
operator|*
argument_list|>
argument_list|(
name|headerDataChangedSpy
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|value
argument_list|(
literal|0
argument_list|)
operator|.
name|constData
argument_list|()
argument_list|)
argument_list|,
name|Qt
operator|::
name|Vertical
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|headerDataChangedSpy
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|headerDataChangedSpy
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|at
argument_list|(
literal|2
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|submitAll
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|model
operator|.
name|clear
argument_list|()
expr_stmt|;
name|recreateTestTables
argument_list|()
expr_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|test
argument_list|)
expr_stmt|;
name|model
operator|.
name|setEditStrategy
argument_list|(
name|QSqlTableModel
operator|::
name|OnRowChange
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|headerDataChangedSpy
operator|.
name|clear
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|removeRow
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|headerDataChangedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"vohi"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|removeRows
name|void
name|tst_QSqlTableModel
operator|::
name|removeRows
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|dbName
argument_list|)
expr_stmt|;
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbName
argument_list|)
decl_stmt|;
name|CHECK_DATABASE
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|QSqlTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|test
argument_list|)
expr_stmt|;
name|model
operator|.
name|setSort
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|AscendingOrder
argument_list|)
expr_stmt|;
name|model
operator|.
name|setEditStrategy
argument_list|(
name|QSqlTableModel
operator|::
name|OnFieldChange
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QSignalSpy
name|beforeDeleteSpy
argument_list|(
operator|&
name|model
argument_list|,
name|SIGNAL
argument_list|(
name|beforeDelete
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
comment|// Make sure wrong stuff is ok
name|QVERIFY
argument_list|(
operator|!
name|model
operator|.
name|removeRows
argument_list|(
operator|-
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// negative start
name|QVERIFY
argument_list|(
operator|!
name|model
operator|.
name|removeRows
argument_list|(
operator|-
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|// negative start, and zero count
name|QVERIFY
argument_list|(
operator|!
name|model
operator|.
name|removeRows
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|// zero count
name|QVERIFY
argument_list|(
operator|!
name|model
operator|.
name|removeRows
argument_list|(
literal|5
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// past end (DOESN'T causes a beforeDelete to be emitted)
name|QVERIFY
argument_list|(
operator|!
name|model
operator|.
name|removeRows
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// can't pass a valid modelindex
name|QFAIL_SQL
argument_list|(
name|model
argument_list|,
name|removeRows
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
comment|// more than 1 row on OnFieldChange
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|removeRows
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|removeRows
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|beforeDeleteSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|beforeDeleteSpy
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toInt
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|beforeDeleteSpy
operator|.
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toInt
argument_list|()
operator|==
literal|1
argument_list|)
expr_stmt|;
comment|// deleted rows shown as empty until select
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|select
argument_list|()
argument_list|)
expr_stmt|;
comment|// deleted rows are gone
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"vohi"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|clear
argument_list|()
expr_stmt|;
name|recreateTestTables
argument_list|()
expr_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|test
argument_list|)
expr_stmt|;
name|model
operator|.
name|setEditStrategy
argument_list|(
name|QSqlTableModel
operator|::
name|OnManualSubmit
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|beforeDeleteSpy
operator|.
name|clear
argument_list|()
expr_stmt|;
comment|// When the edit strategy is OnManualSubmit the beforeDelete() signal
comment|// isn't emitted until submitAll() is called.
name|QVERIFY
argument_list|(
operator|!
name|model
operator|.
name|removeRows
argument_list|(
operator|-
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// negative start
name|QVERIFY
argument_list|(
operator|!
name|model
operator|.
name|removeRows
argument_list|(
operator|-
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|// negative start, and zero count
name|QVERIFY
argument_list|(
operator|!
name|model
operator|.
name|removeRows
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|// zero count
name|QVERIFY
argument_list|(
operator|!
name|model
operator|.
name|removeRows
argument_list|(
literal|5
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// past end (DOESN'T cause a beforeDelete to be emitted)
name|QVERIFY
argument_list|(
operator|!
name|model
operator|.
name|removeRows
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// can't pass a valid modelindex
name|qRegisterMetaType
argument_list|<
name|Qt
operator|::
name|Orientation
argument_list|>
argument_list|(
literal|"Qt::Orientation"
argument_list|)
expr_stmt|;
name|QSignalSpy
name|headerDataChangedSpy
argument_list|(
operator|&
name|model
argument_list|,
name|SIGNAL
argument_list|(
name|headerDataChanged
argument_list|(
name|Qt
operator|::
name|Orientation
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|removeRows
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|headerDataChangedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|headerDataChangedSpy
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|headerDataChangedSpy
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|at
argument_list|(
literal|2
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|headerDataChangedSpy
operator|.
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|headerDataChangedSpy
operator|.
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|at
argument_list|(
literal|2
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|beforeDeleteSpy
operator|.
name|count
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|submitAll
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|beforeDeleteSpy
operator|.
name|count
argument_list|()
operator|==
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|beforeDeleteSpy
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toInt
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|beforeDeleteSpy
operator|.
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toInt
argument_list|()
operator|==
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"vohi"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|removeInsertedRow
name|void
name|tst_QSqlTableModel
operator|::
name|removeInsertedRow
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|dbName
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|submitpolicy_i
argument_list|)
expr_stmt|;
name|QSqlTableModel
operator|::
name|EditStrategy
name|submitpolicy
init|=
operator|(
name|QSqlTableModel
operator|::
name|EditStrategy
operator|)
name|submitpolicy_i
decl_stmt|;
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbName
argument_list|)
decl_stmt|;
name|CHECK_DATABASE
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|QSqlTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|test
argument_list|)
expr_stmt|;
name|model
operator|.
name|setSort
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|AscendingOrder
argument_list|)
expr_stmt|;
name|model
operator|.
name|setEditStrategy
argument_list|(
name|submitpolicy
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|insertRow
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|removeRow
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"trond"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"vohi"
argument_list|)
argument_list|)
expr_stmt|;
comment|// Now insert a row with a null, and check that removing it also works (QTBUG-15979 etc)
name|model
operator|.
name|insertRow
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|,
literal|55
argument_list|)
expr_stmt|;
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"null columns"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|,
name|QVariant
argument_list|()
argument_list|)
expr_stmt|;
name|model
operator|.
name|submitAll
argument_list|()
expr_stmt|;
if|if
condition|(
name|model
operator|.
name|editStrategy
argument_list|()
operator|!=
name|QSqlTableModel
operator|::
name|OnManualSubmit
condition|)
block|{
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|55
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"null columns"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|isNull
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|select
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|55
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"null columns"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|isNull
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|removeRow
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|submitAll
argument_list|()
expr_stmt|;
if|if
condition|(
name|model
operator|.
name|editStrategy
argument_list|()
operator|!=
name|QSqlTableModel
operator|::
name|OnManualSubmit
condition|)
block|{
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"trond"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"vohi"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|select
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"trond"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"vohi"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|removeInsertedRows
name|void
name|tst_QSqlTableModel
operator|::
name|removeInsertedRows
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|dbName
argument_list|)
expr_stmt|;
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbName
argument_list|)
decl_stmt|;
name|CHECK_DATABASE
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|QSqlTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|test
argument_list|)
expr_stmt|;
name|model
operator|.
name|setSort
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|AscendingOrder
argument_list|)
expr_stmt|;
name|model
operator|.
name|setEditStrategy
argument_list|(
name|QSqlTableModel
operator|::
name|OnManualSubmit
argument_list|)
expr_stmt|;
comment|// you can't insert more than one row otherwise
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
comment|// First put two empty rows, and remove them one by one
name|QVERIFY
argument_list|(
name|model
operator|.
name|insertRows
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"trond"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|4
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"vohi"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|removeRow
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"trond"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"vohi"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|removeRow
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"trond"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"vohi"
argument_list|)
argument_list|)
expr_stmt|;
comment|// Now put two empty rows, and remove them all at once
name|QVERIFY
argument_list|(
name|model
operator|.
name|insertRows
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"trond"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|4
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"vohi"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|removeRows
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"trond"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"vohi"
argument_list|)
argument_list|)
expr_stmt|;
comment|// Now put two empty rows, and remove one good and two empty
name|QVERIFY
argument_list|(
name|model
operator|.
name|insertRows
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"trond"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|4
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"vohi"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|removeRows
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|submitAll
argument_list|()
argument_list|)
expr_stmt|;
comment|// otherwise the remove of the real row doesn't work
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"trond"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"vohi"
argument_list|)
argument_list|)
expr_stmt|;
comment|// Reset back again
name|model
operator|.
name|clear
argument_list|()
expr_stmt|;
name|recreateTestTables
argument_list|()
expr_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|test
argument_list|)
expr_stmt|;
name|model
operator|.
name|setSort
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|AscendingOrder
argument_list|)
expr_stmt|;
name|model
operator|.
name|setEditStrategy
argument_list|(
name|QSqlTableModel
operator|::
name|OnManualSubmit
argument_list|)
expr_stmt|;
comment|// you can't insert more than one row otherwise
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
comment|// Now two empty and one good
name|QVERIFY
argument_list|(
name|model
operator|.
name|insertRows
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"trond"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|4
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"vohi"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|removeRows
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|submitAll
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"vohi"
argument_list|)
argument_list|)
expr_stmt|;
comment|// Reset back again
name|model
operator|.
name|clear
argument_list|()
expr_stmt|;
name|recreateTestTables
argument_list|()
expr_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|test
argument_list|)
expr_stmt|;
name|model
operator|.
name|setSort
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|AscendingOrder
argument_list|)
expr_stmt|;
name|model
operator|.
name|setEditStrategy
argument_list|(
name|QSqlTableModel
operator|::
name|OnManualSubmit
argument_list|)
expr_stmt|;
comment|// you can't insert more than one row otherwise
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
comment|// one empty, one good, one empty
name|QVERIFY
argument_list|(
name|model
operator|.
name|insertRows
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|insertRows
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"trond"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|4
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"vohi"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|removeRows
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|submitAll
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"vohi"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|isDirty
name|void
name|tst_QSqlTableModel
operator|::
name|isDirty
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|dbName
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|submitpolicy_i
argument_list|)
expr_stmt|;
name|QSqlTableModel
operator|::
name|EditStrategy
name|submitpolicy
init|=
operator|(
name|QSqlTableModel
operator|::
name|EditStrategy
operator|)
name|submitpolicy_i
decl_stmt|;
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbName
argument_list|)
decl_stmt|;
name|CHECK_DATABASE
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|QSqlTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setEditStrategy
argument_list|(
name|submitpolicy
argument_list|)
expr_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|test
argument_list|)
expr_stmt|;
name|QFAIL_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|()
argument_list|)
expr_stmt|;
name|model
operator|.
name|setSort
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|AscendingOrder
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QFAIL_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|submitpolicy
operator|!=
name|QSqlTableModel
operator|::
name|OnFieldChange
condition|)
block|{
comment|// setData() followed by revertAll()
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"sam i am"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"sam i am"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|revertAll
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QFAIL_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|()
argument_list|)
expr_stmt|;
name|QFAIL_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// setData() followed by select(), which clears changes
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"sam i am"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"sam i am"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QFAIL_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|()
argument_list|)
expr_stmt|;
name|QFAIL_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|submitpolicy
operator|==
name|QSqlTableModel
operator|::
name|OnRowChange
condition|)
block|{
comment|// dirty row must block change on other rows
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
operator|>
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"sam i am"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"sam i am"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|model
operator|.
name|flags
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|&
name|Qt
operator|::
name|ItemIsEditable
operator|)
argument_list|)
expr_stmt|;
name|QFAIL_SQL
argument_list|(
name|model
argument_list|,
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"sam i am"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QFAIL_SQL
argument_list|(
name|model
argument_list|,
name|setRecord
argument_list|(
literal|1
argument_list|,
name|model
operator|.
name|record
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QFAIL_SQL
argument_list|(
name|model
argument_list|,
name|insertRow
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QFAIL_SQL
argument_list|(
name|model
argument_list|,
name|removeRow
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QFAIL_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|revertAll
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QFAIL_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|()
argument_list|)
expr_stmt|;
name|QFAIL_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// setData() followed by submitAll()
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"sam i am"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"sam i am"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|submitpolicy
operator|!=
name|QSqlTableModel
operator|::
name|OnFieldChange
condition|)
block|{
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|submitAll
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"sam i am"
argument_list|)
argument_list|)
expr_stmt|;
name|QFAIL_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|()
argument_list|)
expr_stmt|;
name|QFAIL_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// check status after refreshing underlying query
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"sam i am"
argument_list|)
argument_list|)
expr_stmt|;
name|QFAIL_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|()
argument_list|)
expr_stmt|;
name|QFAIL_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|//restore original state
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|submitAll
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QFAIL_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|()
argument_list|)
expr_stmt|;
name|QFAIL_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QSqlRecord
name|newvals
init|=
name|model
operator|.
name|record
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|newvals
operator|.
name|setValue
argument_list|(
literal|1
argument_list|,
name|QString
argument_list|(
literal|"sam i am"
argument_list|)
argument_list|)
expr_stmt|;
name|newvals
operator|.
name|setGenerated
argument_list|(
literal|1
argument_list|,
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|submitpolicy
operator|==
name|QSqlTableModel
operator|::
name|OnManualSubmit
condition|)
block|{
comment|// setRecord() followed by revertAll()
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|setRecord
argument_list|(
literal|0
argument_list|,
name|newvals
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"sam i am"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|revertAll
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QFAIL_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|()
argument_list|)
expr_stmt|;
name|QFAIL_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// setRecord() followed by select(), which clears changes
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|setRecord
argument_list|(
literal|0
argument_list|,
name|newvals
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"sam i am"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QFAIL_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|()
argument_list|)
expr_stmt|;
name|QFAIL_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// setRecord() followed by submitAll()
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|setRecord
argument_list|(
literal|0
argument_list|,
name|newvals
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"sam i am"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|submitpolicy
operator|==
name|QSqlTableModel
operator|::
name|OnManualSubmit
condition|)
block|{
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|submitAll
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"sam i am"
argument_list|)
argument_list|)
expr_stmt|;
name|QFAIL_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|()
argument_list|)
expr_stmt|;
name|QFAIL_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// check status after refreshing underlying query
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"sam i am"
argument_list|)
argument_list|)
expr_stmt|;
name|QFAIL_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|()
argument_list|)
expr_stmt|;
name|QFAIL_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|//restore original state
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|submitAll
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QFAIL_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|()
argument_list|)
expr_stmt|;
name|QFAIL_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// insertRow()
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|insertRow
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|revertAll
argument_list|()
expr_stmt|;
name|QFAIL_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|()
argument_list|)
expr_stmt|;
name|QFAIL_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QFAIL_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|()
argument_list|)
expr_stmt|;
name|QFAIL_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// removeRow()
name|QSqlRecord
name|saved_rec
init|=
name|model
operator|.
name|record
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|removeRow
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|submitpolicy
operator|==
name|QSqlTableModel
operator|::
name|OnManualSubmit
condition|)
block|{
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|submitAll
argument_list|()
argument_list|)
expr_stmt|;
name|QFAIL_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|()
argument_list|)
expr_stmt|;
name|QFAIL_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QFAIL_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|()
argument_list|)
expr_stmt|;
name|QFAIL_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"trond"
argument_list|)
argument_list|)
expr_stmt|;
comment|// insertRecord(), put back the removed row
for|for
control|(
name|int
name|i
init|=
name|saved_rec
operator|.
name|count
argument_list|()
operator|-
literal|1
init|;
name|i
operator|>=
literal|0
condition|;
operator|--
name|i
control|)
name|saved_rec
operator|.
name|setGenerated
argument_list|(
name|i
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|insertRecord
argument_list|(
literal|0
argument_list|,
name|saved_rec
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|submitpolicy
operator|==
name|QSqlTableModel
operator|::
name|OnManualSubmit
condition|)
block|{
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|submitAll
argument_list|()
argument_list|)
expr_stmt|;
name|QFAIL_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|()
argument_list|)
expr_stmt|;
name|QFAIL_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QFAIL_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|()
argument_list|)
expr_stmt|;
name|QFAIL_SQL
argument_list|(
name|model
argument_list|,
name|isDirty
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|emptyTable
name|void
name|tst_QSqlTableModel
operator|::
name|emptyTable
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|dbName
argument_list|)
expr_stmt|;
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbName
argument_list|)
decl_stmt|;
name|CHECK_DATABASE
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|QSqlTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|columnCount
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|qTableName
argument_list|(
literal|"emptytable"
argument_list|,
name|__FILE__
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|columnCount
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|columnCount
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|tablesAndSchemas
name|void
name|tst_QSqlTableModel
operator|::
name|tablesAndSchemas
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|dbName
argument_list|)
expr_stmt|;
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbName
argument_list|)
decl_stmt|;
name|CHECK_DATABASE
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|QSqlQuery
name|q
argument_list|(
name|db
argument_list|)
decl_stmt|;
name|q
operator|.
name|exec
argument_list|(
literal|"DROP SCHEMA "
operator|+
name|qTableName
argument_list|(
literal|"testschema"
argument_list|,
name|__FILE__
argument_list|)
operator|+
literal|" CASCADE"
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"create schema "
operator|+
name|qTableName
argument_list|(
literal|"testschema"
argument_list|,
name|__FILE__
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QString
name|tableName
init|=
name|qTableName
argument_list|(
literal|"testschema"
argument_list|,
name|__FILE__
argument_list|)
operator|+
literal|'.'
operator|+
name|qTableName
argument_list|(
literal|"testtable"
argument_list|,
name|__FILE__
argument_list|)
decl_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"create table "
operator|+
name|tableName
operator|+
literal|"(id int)"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"insert into "
operator|+
name|tableName
operator|+
literal|" values(1)"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"insert into "
operator|+
name|tableName
operator|+
literal|" values(2)"
argument_list|)
argument_list|)
expr_stmt|;
name|QSqlTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|tableName
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|columnCount
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|whitespaceInIdentifiers
name|void
name|tst_QSqlTableModel
operator|::
name|whitespaceInIdentifiers
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|dbName
argument_list|)
expr_stmt|;
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbName
argument_list|)
decl_stmt|;
name|CHECK_DATABASE
argument_list|(
name|db
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|testWhiteSpaceNames
argument_list|(
name|db
operator|.
name|driverName
argument_list|()
argument_list|)
condition|)
name|QSKIP
argument_list|(
literal|"DBMS doesn't support whitespaces in identifiers"
argument_list|)
expr_stmt|;
name|QString
name|tableName
init|=
name|qTableName
argument_list|(
literal|"qtestw hitespace"
argument_list|,
name|db
operator|.
name|driver
argument_list|()
argument_list|)
decl_stmt|;
name|QSqlTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|tableName
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|primaryKeyOrder
name|void
name|tst_QSqlTableModel
operator|::
name|primaryKeyOrder
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|dbName
argument_list|)
expr_stmt|;
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbName
argument_list|)
decl_stmt|;
name|CHECK_DATABASE
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|QSqlQuery
name|q
argument_list|(
name|db
argument_list|)
decl_stmt|;
if|if
condition|(
name|tst_Databases
operator|::
name|isPostgreSQL
argument_list|(
name|db
argument_list|)
condition|)
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"set client_min_messages='warning'"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"create table "
operator|+
name|qTableName
argument_list|(
literal|"foo"
argument_list|,
name|__FILE__
argument_list|)
operator|+
literal|"(a varchar(20), id int not null primary key, b varchar(20))"
argument_list|)
argument_list|)
expr_stmt|;
name|QSqlTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|qTableName
argument_list|(
literal|"foo"
argument_list|,
name|__FILE__
argument_list|)
argument_list|)
expr_stmt|;
name|QSqlIndex
name|pk
init|=
name|model
operator|.
name|primaryKey
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|pk
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|pk
operator|.
name|fieldName
argument_list|(
literal|0
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"id"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|insertRow
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
literal|"hello"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
literal|42
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|"blah"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|submitAll
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
literal|43
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|submitAll
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|43
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setInvalidFilter
name|void
name|tst_QSqlTableModel
operator|::
name|setInvalidFilter
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|dbName
argument_list|)
expr_stmt|;
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbName
argument_list|)
decl_stmt|;
name|CHECK_DATABASE
argument_list|(
name|db
argument_list|)
expr_stmt|;
comment|// set an invalid filter, make sure it fails
name|QSqlTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|test
argument_list|)
expr_stmt|;
name|model
operator|.
name|setFilter
argument_list|(
literal|"blahfahsel"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|filter
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"blahfahsel"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|model
operator|.
name|select
argument_list|()
argument_list|)
expr_stmt|;
comment|// set a valid filter later, make sure if passes
name|model
operator|.
name|setFilter
argument_list|(
literal|"id = 1"
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setFilter
name|void
name|tst_QSqlTableModel
operator|::
name|setFilter
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|dbName
argument_list|)
expr_stmt|;
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbName
argument_list|)
decl_stmt|;
name|CHECK_DATABASE
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|QSqlTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|test
argument_list|)
expr_stmt|;
name|model
operator|.
name|setFilter
argument_list|(
literal|"id = 1"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|filter
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"id = 1"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QSignalSpy
name|modelAboutToBeResetSpy
argument_list|(
operator|&
name|model
argument_list|,
name|SIGNAL
argument_list|(
name|modelAboutToBeReset
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|modelResetSpy
argument_list|(
operator|&
name|model
argument_list|,
name|SIGNAL
argument_list|(
name|modelReset
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|model
operator|.
name|setFilter
argument_list|(
literal|"id = 2"
argument_list|)
expr_stmt|;
comment|// check the signals
name|QCOMPARE
argument_list|(
name|modelAboutToBeResetSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|modelResetSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|sqlite_bigTable
name|void
name|tst_QSqlTableModel
operator|::
name|sqlite_bigTable
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|dbName
argument_list|)
expr_stmt|;
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbName
argument_list|)
decl_stmt|;
name|CHECK_DATABASE
argument_list|(
name|db
argument_list|)
expr_stmt|;
specifier|const
name|QString
name|bigtable
argument_list|(
name|qTableName
argument_list|(
literal|"bigtable"
argument_list|,
name|__FILE__
argument_list|)
argument_list|)
decl_stmt|;
name|bool
name|hasTransactions
init|=
name|db
operator|.
name|driver
argument_list|()
operator|->
name|hasFeature
argument_list|(
name|QSqlDriver
operator|::
name|Transactions
argument_list|)
decl_stmt|;
if|if
condition|(
name|hasTransactions
condition|)
name|QVERIFY
argument_list|(
name|db
operator|.
name|transaction
argument_list|()
argument_list|)
expr_stmt|;
name|QSqlQuery
name|q
argument_list|(
name|db
argument_list|)
decl_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"create table "
operator|+
name|bigtable
operator|+
literal|"(id int primary key, name varchar)"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|prepare
argument_list|(
literal|"insert into "
operator|+
name|bigtable
operator|+
literal|"(id, name) values (?, ?)"
argument_list|)
argument_list|)
expr_stmt|;
name|QTime
name|startTime
decl_stmt|;
name|startTime
operator|.
name|start
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10000
condition|;
operator|++
name|i
control|)
block|{
name|q
operator|.
name|addBindValue
argument_list|(
name|i
argument_list|)
expr_stmt|;
name|q
operator|.
name|addBindValue
argument_list|(
name|QString
operator|::
name|number
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|%
literal|1000
operator|==
literal|0
operator|&&
name|startTime
operator|.
name|elapsed
argument_list|()
operator|>
literal|5000
condition|)
name|qDebug
argument_list|()
operator|<<
name|i
operator|<<
literal|"records written"
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|q
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|hasTransactions
condition|)
name|QVERIFY
argument_list|(
name|db
operator|.
name|commit
argument_list|()
argument_list|)
expr_stmt|;
name|QSqlTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|bigtable
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QSqlRecord
name|rec
init|=
name|model
operator|.
name|record
argument_list|()
decl_stmt|;
name|rec
operator|.
name|setValue
argument_list|(
literal|"id"
argument_list|,
literal|424242
argument_list|)
expr_stmt|;
name|rec
operator|.
name|setValue
argument_list|(
literal|"name"
argument_list|,
literal|"Guillaume"
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|insertRecord
argument_list|(
operator|-
literal|1
argument_list|,
name|rec
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
end_function
begin_comment
comment|// For task 118547: couldn't insert records unless select()
end_comment
begin_comment
comment|// had first been called.
end_comment
begin_function
DECL|function|insertRecordBeforeSelect
name|void
name|tst_QSqlTableModel
operator|::
name|insertRecordBeforeSelect
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|dbName
argument_list|)
expr_stmt|;
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbName
argument_list|)
decl_stmt|;
name|CHECK_DATABASE
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|QSqlTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|test
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|lastError
argument_list|()
operator|.
name|type
argument_list|()
argument_list|,
name|QSqlError
operator|::
name|NoError
argument_list|)
expr_stmt|;
name|QSqlRecord
name|buffer
init|=
name|model
operator|.
name|record
argument_list|()
decl_stmt|;
name|buffer
operator|.
name|setValue
argument_list|(
literal|"id"
argument_list|,
literal|13
argument_list|)
expr_stmt|;
name|buffer
operator|.
name|setValue
argument_list|(
literal|"name"
argument_list|,
name|QString
argument_list|(
literal|"The Lion King"
argument_list|)
argument_list|)
expr_stmt|;
name|buffer
operator|.
name|setValue
argument_list|(
literal|"title"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|insertRecord
argument_list|(
operator|-
literal|1
argument_list|,
name|buffer
argument_list|)
argument_list|)
expr_stmt|;
name|buffer
operator|.
name|setValue
argument_list|(
literal|"id"
argument_list|,
literal|26
argument_list|)
expr_stmt|;
name|buffer
operator|.
name|setValue
argument_list|(
literal|"name"
argument_list|,
name|QString
argument_list|(
literal|"T. Leary"
argument_list|)
argument_list|)
expr_stmt|;
name|buffer
operator|.
name|setValue
argument_list|(
literal|"title"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|insertRecord
argument_list|(
literal|1
argument_list|,
name|buffer
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|model
operator|.
name|editStrategy
argument_list|()
operator|!=
name|QSqlTableModel
operator|::
name|OnManualSubmit
condition|)
block|{
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|int
name|rowCount
init|=
name|model
operator|.
name|rowCount
argument_list|()
decl_stmt|;
name|model
operator|.
name|clear
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QSqlTableModel
name|model2
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model2
operator|.
name|setTable
argument_list|(
name|test
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model2
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model2
operator|.
name|rowCount
argument_list|()
argument_list|,
name|rowCount
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|// For task 118547: set errors if table doesn't exist and if records
end_comment
begin_comment
comment|// are inserted and submitted on a non-existing table.
end_comment
begin_function
DECL|function|submitAllOnInvalidTable
name|void
name|tst_QSqlTableModel
operator|::
name|submitAllOnInvalidTable
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|dbName
argument_list|)
expr_stmt|;
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbName
argument_list|)
decl_stmt|;
name|CHECK_DATABASE
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|QSqlTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setEditStrategy
argument_list|(
name|QSqlTableModel
operator|::
name|OnManualSubmit
argument_list|)
expr_stmt|;
comment|// setTable returns a void, so the error can only be caught by
comment|// manually checking lastError(). ### Qt5: This should be changed!
name|model
operator|.
name|setTable
argument_list|(
name|qTableName
argument_list|(
literal|"invalidTable"
argument_list|,
name|__FILE__
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|lastError
argument_list|()
operator|.
name|type
argument_list|()
argument_list|,
name|QSqlError
operator|::
name|StatementError
argument_list|)
expr_stmt|;
comment|// This will give us an empty record which is expected behavior
name|QSqlRecord
name|buffer
init|=
name|model
operator|.
name|record
argument_list|()
decl_stmt|;
name|buffer
operator|.
name|setValue
argument_list|(
literal|"bogus"
argument_list|,
literal|1000
argument_list|)
expr_stmt|;
name|buffer
operator|.
name|setValue
argument_list|(
literal|"bogus2"
argument_list|,
name|QString
argument_list|(
literal|"I will go nowhere!"
argument_list|)
argument_list|)
expr_stmt|;
comment|// Inserting the record into the *model* will work (OnManualSubmit)
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|insertRecord
argument_list|(
operator|-
literal|1
argument_list|,
name|buffer
argument_list|)
argument_list|)
expr_stmt|;
comment|// The submit and select shall fail because the table doesn't exist
name|QEXPECT_FAIL
argument_list|(
literal|""
argument_list|,
literal|"The table doesn't exist: submitAll() shall fail"
argument_list|,
name|Continue
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|submitAll
argument_list|()
argument_list|)
expr_stmt|;
name|QEXPECT_FAIL
argument_list|(
literal|""
argument_list|,
literal|"The table doesn't exist: select() shall fail"
argument_list|,
name|Continue
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|// For task 147575: the rowsRemoved signal emitted from the model was lying
end_comment
begin_function
DECL|function|insertRecordsInLoop
name|void
name|tst_QSqlTableModel
operator|::
name|insertRecordsInLoop
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|dbName
argument_list|)
expr_stmt|;
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbName
argument_list|)
decl_stmt|;
name|CHECK_DATABASE
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|QSqlTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|test
argument_list|)
expr_stmt|;
name|model
operator|.
name|setEditStrategy
argument_list|(
name|QSqlTableModel
operator|::
name|OnManualSubmit
argument_list|)
expr_stmt|;
name|model
operator|.
name|select
argument_list|()
expr_stmt|;
name|QSqlRecord
name|record
init|=
name|model
operator|.
name|record
argument_list|()
decl_stmt|;
name|record
operator|.
name|setValue
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|record
operator|.
name|setValue
argument_list|(
literal|1
argument_list|,
literal|"Testman"
argument_list|)
expr_stmt|;
name|record
operator|.
name|setValue
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QSignalSpy
name|modelAboutToBeResetSpy
argument_list|(
operator|&
name|model
argument_list|,
name|SIGNAL
argument_list|(
name|modelAboutToBeReset
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|modelResetSpy
argument_list|(
operator|&
name|model
argument_list|,
name|SIGNAL
argument_list|(
name|modelReset
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|spyRowsInserted
argument_list|(
operator|&
name|model
argument_list|,
name|SIGNAL
argument_list|(
name|rowsInserted
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
name|i
operator|++
control|)
block|{
name|QVERIFY
argument_list|(
name|model
operator|.
name|insertRecord
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
name|record
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spyRowsInserted
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|.
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
name|i
operator|+
literal|3
argument_list|)
expr_stmt|;
comment|// The table already contains three rows
name|QCOMPARE
argument_list|(
name|spyRowsInserted
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|.
name|at
argument_list|(
literal|2
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
name|i
operator|+
literal|3
argument_list|)
expr_stmt|;
block|}
name|model
operator|.
name|submitAll
argument_list|()
expr_stmt|;
comment|// submitAll() calls select() which clears and repopulates the table
comment|// model emits reset signals
name|QCOMPARE
argument_list|(
name|modelAboutToBeResetSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|modelResetSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|13
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|columnCount
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|sqlite_attachedDatabase
name|void
name|tst_QSqlTableModel
operator|::
name|sqlite_attachedDatabase
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|dbName
argument_list|)
expr_stmt|;
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbName
argument_list|)
decl_stmt|;
name|CHECK_DATABASE
argument_list|(
name|db
argument_list|)
expr_stmt|;
if|if
condition|(
name|db
operator|.
name|databaseName
argument_list|()
operator|==
literal|":memory:"
condition|)
name|QSKIP
argument_list|(
literal|":memory: database, skipping test"
argument_list|)
expr_stmt|;
name|QSqlDatabase
name|attachedDb
init|=
name|QSqlDatabase
operator|::
name|cloneDatabase
argument_list|(
name|db
argument_list|,
name|db
operator|.
name|driverName
argument_list|()
operator|+
name|QLatin1String
argument_list|(
literal|"attached"
argument_list|)
argument_list|)
decl_stmt|;
name|attachedDb
operator|.
name|setDatabaseName
argument_list|(
name|db
operator|.
name|databaseName
argument_list|()
operator|+
name|QLatin1String
argument_list|(
literal|"attached.dat"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|attachedDb
argument_list|,
name|open
argument_list|()
argument_list|)
expr_stmt|;
name|QSqlQuery
name|q
argument_list|(
name|attachedDb
argument_list|)
decl_stmt|;
name|tst_Databases
operator|::
name|safeDropTables
argument_list|(
name|attachedDb
argument_list|,
name|QStringList
argument_list|()
operator|<<
literal|"atest"
operator|<<
literal|"atest2"
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"CREATE TABLE atest(id int, text varchar(20))"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"CREATE TABLE atest2(id int, text varchar(20))"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"INSERT INTO atest VALUES(1, 'attached-atest')"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"INSERT INTO atest2 VALUES(2, 'attached-atest2')"
argument_list|)
argument_list|)
expr_stmt|;
name|QSqlQuery
name|q2
argument_list|(
name|db
argument_list|)
decl_stmt|;
name|tst_Databases
operator|::
name|safeDropTable
argument_list|(
name|db
argument_list|,
literal|"atest"
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q2
argument_list|,
name|exec
argument_list|(
literal|"CREATE TABLE atest(id int, text varchar(20))"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q2
argument_list|,
name|exec
argument_list|(
literal|"INSERT INTO atest VALUES(3, 'main')"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q2
argument_list|,
name|exec
argument_list|(
literal|"ATTACH DATABASE \""
operator|+
name|attachedDb
operator|.
name|databaseName
argument_list|()
operator|+
literal|"\" as adb"
argument_list|)
argument_list|)
expr_stmt|;
comment|// This should query the table in the attached database (schema supplied)
name|QSqlTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setTable
argument_list|(
literal|"adb.atest"
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|Qt
operator|::
name|DisplayRole
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|Qt
operator|::
name|DisplayRole
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"attached-atest"
argument_list|)
argument_list|)
expr_stmt|;
comment|// This should query the table in the attached database (unique tablename)
name|model
operator|.
name|setTable
argument_list|(
literal|"atest2"
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|Qt
operator|::
name|DisplayRole
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|Qt
operator|::
name|DisplayRole
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"attached-atest2"
argument_list|)
argument_list|)
expr_stmt|;
comment|// This should query the table in the main database (tables in main db has 1st priority)
name|model
operator|.
name|setTable
argument_list|(
literal|"atest"
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|Qt
operator|::
name|DisplayRole
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|Qt
operator|::
name|DisplayRole
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"main"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|tableModifyWithBlank
name|void
name|tst_QSqlTableModel
operator|::
name|tableModifyWithBlank
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|dbName
argument_list|)
expr_stmt|;
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbName
argument_list|)
decl_stmt|;
name|CHECK_DATABASE
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|QSqlTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|qTableName
argument_list|(
literal|"test4"
argument_list|,
name|__FILE__
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|select
argument_list|()
expr_stmt|;
comment|//generate a time stamp for the test. Add one second to the current time to make sure
comment|//it is different than the QSqlQuery test.
name|QString
name|timeString
init|=
name|QDateTime
operator|::
name|currentDateTime
argument_list|()
operator|.
name|addSecs
argument_list|(
literal|1
argument_list|)
operator|.
name|toString
argument_list|(
name|Qt
operator|::
name|ISODate
argument_list|)
decl_stmt|;
comment|//insert a new row, with column0 being the timestamp.
comment|//Should be equivalent to QSqlQuery INSERT INTO... command)
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|insertRow
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|timeString
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|submitAll
argument_list|()
argument_list|)
expr_stmt|;
comment|//set a filter on the table so the only record we get is the one we just made
comment|//I could just do another setData command, but I want to make sure the TableModel
comment|//matches exactly what is stored in the database
name|model
operator|.
name|setFilter
argument_list|(
literal|"column1='"
operator|+
name|timeString
operator|+
literal|"'"
argument_list|)
expr_stmt|;
comment|//filter to get just the newly entered row
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
comment|//Make sure we only get one record, and that it is the one we just made
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|//verify only one entry
name|QCOMPARE
argument_list|(
name|model
operator|.
name|record
argument_list|(
literal|0
argument_list|)
operator|.
name|value
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|timeString
argument_list|)
expr_stmt|;
comment|//verify correct record
comment|//At this point we know that the initial value (timestamp) was succsefully stored in the database
comment|//Attempt to modify the data in the new record
comment|//equivalent to query.exec("update test set column3="... command in direct test
comment|//set the data in the first column to "col1ModelData"
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
literal|"col1ModelData"
argument_list|)
argument_list|)
expr_stmt|;
comment|//do a quick check to make sure that the setData command properly set the value in the model
name|QCOMPARE
argument_list|(
name|model
operator|.
name|record
argument_list|(
literal|0
argument_list|)
operator|.
name|value
argument_list|(
literal|1
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"col1ModelData"
argument_list|)
argument_list|)
expr_stmt|;
comment|//submit the changed data to the database
comment|//This is where I have been getting errors.
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|submitAll
argument_list|()
argument_list|)
expr_stmt|;
comment|//make sure the model has the most current data for our record
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
comment|//verify that our new record was the only record returned
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|//And that the record returned is, in fact, our test record.
name|QCOMPARE
argument_list|(
name|model
operator|.
name|record
argument_list|(
literal|0
argument_list|)
operator|.
name|value
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|timeString
argument_list|)
expr_stmt|;
comment|//Make sure the value of the first column matches what we set it to previously.
name|QCOMPARE
argument_list|(
name|model
operator|.
name|record
argument_list|(
literal|0
argument_list|)
operator|.
name|value
argument_list|(
literal|1
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"col1ModelData"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|removeColumnAndRow
name|void
name|tst_QSqlTableModel
operator|::
name|removeColumnAndRow
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|dbName
argument_list|)
expr_stmt|;
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbName
argument_list|)
decl_stmt|;
name|CHECK_DATABASE
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|QSqlTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|test
argument_list|)
expr_stmt|;
name|model
operator|.
name|setEditStrategy
argument_list|(
name|QSqlTableModel
operator|::
name|OnManualSubmit
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|columnCount
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|removeColumn
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|removeRow
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|submitAll
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|columnCount
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
comment|// check with another table because the model has been modified
comment|// but not the sql table
name|QSqlTableModel
name|model2
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model2
operator|.
name|setTable
argument_list|(
name|test
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model2
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model2
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model2
operator|.
name|columnCount
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|insertBeforeDelete
name|void
name|tst_QSqlTableModel
operator|::
name|insertBeforeDelete
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|dbName
argument_list|)
expr_stmt|;
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbName
argument_list|)
decl_stmt|;
name|CHECK_DATABASE
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|QSqlQuery
name|q
argument_list|(
name|db
argument_list|)
decl_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"insert into "
operator|+
name|test
operator|+
literal|" values(9, 'andrew', 9)"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"insert into "
operator|+
name|test
operator|+
literal|" values(10, 'justin', 10)"
argument_list|)
argument_list|)
expr_stmt|;
name|QSqlTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|test
argument_list|)
expr_stmt|;
name|model
operator|.
name|setEditStrategy
argument_list|(
name|QSqlTableModel
operator|::
name|OnManualSubmit
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QSqlRecord
name|rec
init|=
name|model
operator|.
name|record
argument_list|()
decl_stmt|;
name|rec
operator|.
name|setValue
argument_list|(
literal|0
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|rec
operator|.
name|setValue
argument_list|(
literal|1
argument_list|,
name|QString
argument_list|(
literal|"bill"
argument_list|)
argument_list|)
expr_stmt|;
name|rec
operator|.
name|setValue
argument_list|(
literal|2
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|insertRecord
argument_list|(
literal|4
argument_list|,
name|rec
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|removeRow
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|submitAll
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|5
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|invalidFilterAndHeaderData
name|void
name|tst_QSqlTableModel
operator|::
name|invalidFilterAndHeaderData
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|dbName
argument_list|)
expr_stmt|;
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbName
argument_list|)
decl_stmt|;
name|CHECK_DATABASE
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|QSqlTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|test
argument_list|)
expr_stmt|;
name|model
operator|.
name|setEditStrategy
argument_list|(
name|QSqlTableModel
operator|::
name|OnManualSubmit
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|setHeaderData
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|Horizontal
argument_list|,
literal|"id"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|setHeaderData
argument_list|(
literal|1
argument_list|,
name|Qt
operator|::
name|Horizontal
argument_list|,
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|setHeaderData
argument_list|(
literal|2
argument_list|,
name|Qt
operator|::
name|Horizontal
argument_list|,
literal|"title"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|setFilter
argument_list|(
literal|"some nonsense"
argument_list|)
expr_stmt|;
name|QVariant
name|v
init|=
name|model
operator|.
name|headerData
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|Horizontal
argument_list|,
name|Qt
operator|::
name|SizeHintRole
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|v
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QSqlTableModel
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qsqltablemodel.moc"
end_include
end_unit
