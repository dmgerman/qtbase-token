begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<QtSql/QtSql>
end_include
begin_include
include|#
directive|include
file|"../../kernel/qsqldatabase/tst_databases.h"
end_include
begin_decl_stmt
specifier|const
name|QString
name|reltest1
argument_list|(
name|qTableName
argument_list|(
literal|"reltest1"
argument_list|,
name|__FILE__
argument_list|)
argument_list|)
decl_stmt|,
name|reltest2
argument_list|(
name|qTableName
argument_list|(
literal|"reltest2"
argument_list|,
name|__FILE__
argument_list|)
argument_list|)
decl_stmt|,
name|reltest3
argument_list|(
name|qTableName
argument_list|(
literal|"reltest3"
argument_list|,
name|__FILE__
argument_list|)
argument_list|)
decl_stmt|,
name|reltest4
argument_list|(
name|qTableName
argument_list|(
literal|"reltest4"
argument_list|,
name|__FILE__
argument_list|)
argument_list|)
decl_stmt|,
name|reltest5
argument_list|(
name|qTableName
argument_list|(
literal|"reltest5"
argument_list|,
name|__FILE__
argument_list|)
argument_list|)
decl_stmt|;
end_decl_stmt
begin_class
DECL|class|tst_QSqlRelationalTableModel
class|class
name|tst_QSqlRelationalTableModel
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
name|void
name|recreateTestTables
parameter_list|(
name|QSqlDatabase
parameter_list|)
function_decl|;
DECL|member|dbs
name|tst_Databases
name|dbs
decl_stmt|;
public|public
name|slots
public|:
name|void
name|initTestCase_data
parameter_list|()
function_decl|;
name|void
name|initTestCase
parameter_list|()
function_decl|;
name|void
name|cleanupTestCase
parameter_list|()
function_decl|;
name|void
name|init
parameter_list|()
function_decl|;
name|void
name|cleanup
parameter_list|()
function_decl|;
private|private
name|slots
private|:
name|void
name|data
parameter_list|()
function_decl|;
name|void
name|setData
parameter_list|()
function_decl|;
name|void
name|multipleRelation
parameter_list|()
function_decl|;
name|void
name|insertRecord
parameter_list|()
function_decl|;
name|void
name|setRecord
parameter_list|()
function_decl|;
name|void
name|insertWithStrategies
parameter_list|()
function_decl|;
name|void
name|removeColumn
parameter_list|()
function_decl|;
name|void
name|filter
parameter_list|()
function_decl|;
name|void
name|sort
parameter_list|()
function_decl|;
name|void
name|revert
parameter_list|()
function_decl|;
name|void
name|clearDisplayValuesCache
parameter_list|()
function_decl|;
name|void
name|insertRecordDuplicateFieldNames
parameter_list|()
function_decl|;
name|void
name|invalidData
parameter_list|()
function_decl|;
name|void
name|relationModel
parameter_list|()
function_decl|;
name|void
name|casing
parameter_list|()
function_decl|;
name|void
name|escapedRelations
parameter_list|()
function_decl|;
name|void
name|escapedTableName
parameter_list|()
function_decl|;
name|void
name|whiteSpaceInIdentifiers
parameter_list|()
function_decl|;
name|void
name|psqlSchemaTest
parameter_list|()
function_decl|;
name|void
name|selectAfterUpdate
parameter_list|()
function_decl|;
name|void
name|relationOnFirstColumn
parameter_list|()
function_decl|;
private|private:
name|void
name|dropTestTables
parameter_list|(
name|QSqlDatabase
name|db
parameter_list|)
function_decl|;
block|}
class|;
end_class
begin_function
DECL|function|initTestCase_data
name|void
name|tst_QSqlRelationalTableModel
operator|::
name|initTestCase_data
parameter_list|()
block|{
name|dbs
operator|.
name|open
argument_list|()
expr_stmt|;
if|if
condition|(
name|dbs
operator|.
name|fillTestTable
argument_list|()
operator|==
literal|0
condition|)
name|QSKIP
argument_list|(
literal|"No database drivers are available in this Qt configuration"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|recreateTestTables
name|void
name|tst_QSqlRelationalTableModel
operator|::
name|recreateTestTables
parameter_list|(
name|QSqlDatabase
name|db
parameter_list|)
block|{
name|dropTestTables
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|QSqlQuery
name|q
argument_list|(
name|db
argument_list|)
decl_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"create table "
operator|+
name|reltest1
operator|+
literal|" (id int not null primary key, name varchar(20), title_key int, another_title_key int)"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"insert into "
operator|+
name|reltest1
operator|+
literal|" values(1, 'harry', 1, 2)"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"insert into "
operator|+
name|reltest1
operator|+
literal|" values(2, 'trond', 2, 1)"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"insert into "
operator|+
name|reltest1
operator|+
literal|" values(3, 'vohi', 1, 2)"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"insert into "
operator|+
name|reltest1
operator|+
literal|" values(4, 'boris', 2, 2)"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"insert into "
operator|+
name|reltest1
operator|+
literal|" values(5, 'nat', NULL, NULL)"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"insert into "
operator|+
name|reltest1
operator|+
literal|" values(6, 'ale', NULL, 2)"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"create table "
operator|+
name|reltest2
operator|+
literal|" (tid int not null primary key, title varchar(20))"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"insert into "
operator|+
name|reltest2
operator|+
literal|" values(1, 'herr')"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"insert into "
operator|+
name|reltest2
operator|+
literal|" values(2, 'mister')"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"create table "
operator|+
name|reltest3
operator|+
literal|" (id int not null primary key, name varchar(20), city_key int)"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"insert into "
operator|+
name|reltest3
operator|+
literal|" values(1, 'Gustav', 1)"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"insert into "
operator|+
name|reltest3
operator|+
literal|" values(2, 'Heidi', 2)"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"create table "
operator|+
name|reltest4
operator|+
literal|" (id int not null primary key, name varchar(20))"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"insert into "
operator|+
name|reltest4
operator|+
literal|" values(1, 'Oslo')"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"insert into "
operator|+
name|reltest4
operator|+
literal|" values(2, 'Trondheim')"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"create table "
operator|+
name|reltest5
operator|+
literal|" (title varchar(20) not null primary key, abbrev varchar(20))"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"insert into "
operator|+
name|reltest5
operator|+
literal|" values('herr', 'Hr')"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"insert into "
operator|+
name|reltest5
operator|+
literal|" values('mister', 'Mr')"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|testWhiteSpaceNames
argument_list|(
name|db
operator|.
name|driverName
argument_list|()
argument_list|)
condition|)
block|{
name|QString
name|reltest6
init|=
name|db
operator|.
name|driver
argument_list|()
operator|->
name|escapeIdentifier
argument_list|(
name|qTableName
argument_list|(
literal|"rel"
argument_list|,
name|__FILE__
argument_list|)
operator|+
literal|" test6"
argument_list|,
name|QSqlDriver
operator|::
name|TableName
argument_list|)
decl_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"create table "
operator|+
name|reltest6
operator|+
literal|" (id int not null primary key, "
operator|+
name|db
operator|.
name|driver
argument_list|()
operator|->
name|escapeIdentifier
argument_list|(
literal|"city key"
argument_list|,
name|QSqlDriver
operator|::
name|FieldName
argument_list|)
operator|+
literal|" int, "
operator|+
name|db
operator|.
name|driver
argument_list|()
operator|->
name|escapeIdentifier
argument_list|(
literal|"extra field"
argument_list|,
name|QSqlDriver
operator|::
name|FieldName
argument_list|)
operator|+
literal|" int)"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"insert into "
operator|+
name|reltest6
operator|+
literal|" values(1, 1,9)"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"insert into "
operator|+
name|reltest6
operator|+
literal|" values(2, 2,8)"
argument_list|)
argument_list|)
expr_stmt|;
name|QString
name|reltest7
init|=
name|db
operator|.
name|driver
argument_list|()
operator|->
name|escapeIdentifier
argument_list|(
name|qTableName
argument_list|(
literal|"rel"
argument_list|,
name|__FILE__
argument_list|)
operator|+
literal|" test7"
argument_list|,
name|QSqlDriver
operator|::
name|TableName
argument_list|)
decl_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"create table "
operator|+
name|reltest7
operator|+
literal|" ("
operator|+
name|db
operator|.
name|driver
argument_list|()
operator|->
name|escapeIdentifier
argument_list|(
literal|"city id"
argument_list|,
name|QSqlDriver
operator|::
name|TableName
argument_list|)
operator|+
literal|" int not null primary key, "
operator|+
name|db
operator|.
name|driver
argument_list|()
operator|->
name|escapeIdentifier
argument_list|(
literal|"city name"
argument_list|,
name|QSqlDriver
operator|::
name|FieldName
argument_list|)
operator|+
literal|" varchar(20))"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"insert into "
operator|+
name|reltest7
operator|+
literal|" values(1, 'New York')"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"insert into "
operator|+
name|reltest7
operator|+
literal|" values(2, 'Washington')"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|initTestCase
name|void
name|tst_QSqlRelationalTableModel
operator|::
name|initTestCase
parameter_list|()
block|{
foreach|foreach
control|(
specifier|const
name|QString
modifier|&
name|dbname
decl|,
name|dbs
operator|.
name|dbNames
control|)
block|{
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbname
argument_list|)
decl_stmt|;
if|if
condition|(
name|db
operator|.
name|driverName
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"QIBASE"
argument_list|)
condition|)
name|db
operator|.
name|exec
argument_list|(
literal|"SET DIALECT 3"
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|tst_Databases
operator|::
name|isSqlServer
argument_list|(
name|db
argument_list|)
condition|)
block|{
name|db
operator|.
name|exec
argument_list|(
literal|"SET ANSI_DEFAULTS ON"
argument_list|)
expr_stmt|;
name|db
operator|.
name|exec
argument_list|(
literal|"SET IMPLICIT_TRANSACTIONS OFF"
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|tst_Databases
operator|::
name|isPostgreSQL
argument_list|(
name|db
argument_list|)
condition|)
name|db
operator|.
name|exec
argument_list|(
literal|"set client_min_messages='warning'"
argument_list|)
expr_stmt|;
name|recreateTestTables
argument_list|(
name|db
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|cleanupTestCase
name|void
name|tst_QSqlRelationalTableModel
operator|::
name|cleanupTestCase
parameter_list|()
block|{
foreach|foreach
control|(
specifier|const
name|QString
modifier|&
name|dbName
decl|,
name|dbs
operator|.
name|dbNames
control|)
block|{
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbName
argument_list|)
decl_stmt|;
name|CHECK_DATABASE
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|dropTestTables
argument_list|(
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbName
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|dbs
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|dropTestTables
name|void
name|tst_QSqlRelationalTableModel
operator|::
name|dropTestTables
parameter_list|(
name|QSqlDatabase
name|db
parameter_list|)
block|{
name|QStringList
name|tableNames
decl_stmt|;
name|tableNames
operator|<<
name|reltest1
operator|<<
name|reltest2
operator|<<
name|reltest3
operator|<<
name|reltest4
operator|<<
name|reltest5
operator|<<
operator|(
name|qTableName
argument_list|(
literal|"rel"
argument_list|,
name|__FILE__
argument_list|)
operator|+
literal|" test6"
operator|)
operator|<<
operator|(
name|qTableName
argument_list|(
literal|"rel"
argument_list|,
name|__FILE__
argument_list|)
operator|+
literal|" test7"
operator|)
operator|<<
name|qTableName
argument_list|(
literal|"CASETEST1"
argument_list|,
name|db
operator|.
name|driver
argument_list|()
argument_list|)
operator|<<
name|qTableName
argument_list|(
literal|"casetest1"
argument_list|,
name|db
operator|.
name|driver
argument_list|()
argument_list|)
expr_stmt|;
name|tst_Databases
operator|::
name|safeDropTables
argument_list|(
name|db
argument_list|,
name|tableNames
argument_list|)
expr_stmt|;
name|db
operator|.
name|exec
argument_list|(
literal|"DROP SCHEMA "
operator|+
name|qTableName
argument_list|(
literal|"QTBUG_5373"
argument_list|,
name|__FILE__
argument_list|)
operator|+
literal|" CASCADE"
argument_list|)
expr_stmt|;
name|db
operator|.
name|exec
argument_list|(
literal|"DROP SCHEMA "
operator|+
name|qTableName
argument_list|(
literal|"QTBUG_5373_s2"
argument_list|,
name|__FILE__
argument_list|)
operator|+
literal|" CASCADE"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|init
name|void
name|tst_QSqlRelationalTableModel
operator|::
name|init
parameter_list|()
block|{ }
end_function
begin_function
DECL|function|cleanup
name|void
name|tst_QSqlRelationalTableModel
operator|::
name|cleanup
parameter_list|()
block|{ }
end_function
begin_function
DECL|function|data
name|void
name|tst_QSqlRelationalTableModel
operator|::
name|data
parameter_list|()
block|{
name|QFETCH_GLOBAL
argument_list|(
name|QString
argument_list|,
name|dbName
argument_list|)
expr_stmt|;
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbName
argument_list|)
decl_stmt|;
name|CHECK_DATABASE
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|QSqlRelationalTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|reltest1
argument_list|)
expr_stmt|;
name|model
operator|.
name|setRelation
argument_list|(
literal|2
argument_list|,
name|QSqlRelation
argument_list|(
name|reltest2
argument_list|,
literal|"tid"
argument_list|,
literal|"title"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|columnCount
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
comment|//try a non-existent index
name|QVERIFY2
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|4
argument_list|)
argument_list|)
operator|.
name|isValid
argument_list|()
operator|==
literal|false
argument_list|,
literal|"Invalid index returned valid QVariant"
argument_list|)
expr_stmt|;
comment|// check row with null relation: they are reported only in LeftJoin mode
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|model
operator|.
name|setJoinMode
argument_list|(
name|QSqlRelationalTableModel
operator|::
name|LeftJoin
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|4
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|4
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"nat"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY2
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|4
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|isValid
argument_list|()
operator|==
literal|true
argument_list|,
literal|"NULL relation reported with invalid QVariant"
argument_list|)
expr_stmt|;
comment|//check data retrieval when relational key is a non-integer type
comment|//in this case a string
name|QSqlRelationalTableModel
name|model2
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model2
operator|.
name|setTable
argument_list|(
name|reltest2
argument_list|)
expr_stmt|;
name|model2
operator|.
name|setRelation
argument_list|(
literal|1
argument_list|,
name|QSqlRelation
argument_list|(
name|reltest5
argument_list|,
literal|"title"
argument_list|,
literal|"abbrev"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model2
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model2
operator|.
name|data
argument_list|(
name|model2
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Hr"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model2
operator|.
name|data
argument_list|(
name|model2
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Mr"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setData
name|void
name|tst_QSqlRelationalTableModel
operator|::
name|setData
parameter_list|()
block|{
name|QFETCH_GLOBAL
argument_list|(
name|QString
argument_list|,
name|dbName
argument_list|)
expr_stmt|;
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbName
argument_list|)
decl_stmt|;
name|CHECK_DATABASE
argument_list|(
name|db
argument_list|)
expr_stmt|;
comment|// set the values using OnRowChange Strategy
block|{
name|QSqlRelationalTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|reltest1
argument_list|)
expr_stmt|;
name|model
operator|.
name|setSort
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|AscendingOrder
argument_list|)
expr_stmt|;
name|model
operator|.
name|setRelation
argument_list|(
literal|2
argument_list|,
name|QSqlRelation
argument_list|(
name|reltest2
argument_list|,
literal|"tid"
argument_list|,
literal|"title"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"harry2"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry2"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"mister"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|submit
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"boris2"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"boris2"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|submit
argument_list|()
expr_stmt|;
block|}
block|{
comment|//verify values
name|QSqlRelationalTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|reltest1
argument_list|)
expr_stmt|;
name|model
operator|.
name|setSort
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|AscendingOrder
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry2"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"boris2"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|model
operator|.
name|setRelation
argument_list|(
literal|2
argument_list|,
name|QSqlRelation
argument_list|(
name|reltest2
argument_list|,
literal|"tid"
argument_list|,
literal|"title"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"mister"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|//set the values using OnFieldChange strategy
block|{
name|QSqlRelationalTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|reltest1
argument_list|)
expr_stmt|;
name|model
operator|.
name|setEditStrategy
argument_list|(
name|QSqlTableModel
operator|::
name|OnFieldChange
argument_list|)
expr_stmt|;
name|model
operator|.
name|setSort
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|AscendingOrder
argument_list|)
expr_stmt|;
name|model
operator|.
name|setRelation
argument_list|(
literal|2
argument_list|,
name|QSqlRelation
argument_list|(
name|reltest2
argument_list|,
literal|"tid"
argument_list|,
literal|"title"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"trond2"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"trond2"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"mister"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
comment|//verify values
name|QSqlRelationalTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|reltest1
argument_list|)
expr_stmt|;
name|model
operator|.
name|setSort
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|AscendingOrder
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"trond2"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|model
operator|.
name|setRelation
argument_list|(
literal|2
argument_list|,
name|QSqlRelation
argument_list|(
name|reltest2
argument_list|,
literal|"tid"
argument_list|,
literal|"title"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"mister"
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|//set values using OnManualSubmit strategy
block|{
name|QSqlRelationalTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|reltest1
argument_list|)
expr_stmt|;
name|model
operator|.
name|setRelation
argument_list|(
literal|2
argument_list|,
name|QSqlRelation
argument_list|(
name|reltest2
argument_list|,
literal|"tid"
argument_list|,
literal|"title"
argument_list|)
argument_list|)
expr_stmt|;
comment|//sybase doesn't allow tables with the same alias used twice as col names
comment|//so don't set up an identical relation when using the tds driver
if|if
condition|(
operator|!
name|db
operator|.
name|driverName
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"QTDS"
argument_list|)
condition|)
name|model
operator|.
name|setRelation
argument_list|(
literal|3
argument_list|,
name|QSqlRelation
argument_list|(
name|reltest2
argument_list|,
literal|"tid"
argument_list|,
literal|"title"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|setEditStrategy
argument_list|(
name|QSqlTableModel
operator|::
name|OnManualSubmit
argument_list|)
expr_stmt|;
name|model
operator|.
name|setSort
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|AscendingOrder
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"vohi2"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"vohi2"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|db
operator|.
name|driverName
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"QTDS"
argument_list|)
condition|)
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|submitAll
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
comment|//verify values
name|QSqlRelationalTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|reltest1
argument_list|)
expr_stmt|;
name|model
operator|.
name|setSort
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|AscendingOrder
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"vohi2"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|model
operator|.
name|setRelation
argument_list|(
literal|2
argument_list|,
name|QSqlRelation
argument_list|(
name|reltest2
argument_list|,
literal|"tid"
argument_list|,
literal|"title"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|db
operator|.
name|driverName
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"QTDS"
argument_list|)
condition|)
name|model
operator|.
name|setRelation
argument_list|(
literal|3
argument_list|,
name|QSqlRelation
argument_list|(
name|reltest2
argument_list|,
literal|"tid"
argument_list|,
literal|"title"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|db
operator|.
name|driverName
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"QTDS"
argument_list|)
condition|)
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
comment|//check setting of data when the relational key is a non-integer type
comment|//in this case a string.
block|{
name|QSqlRelationalTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|reltest2
argument_list|)
expr_stmt|;
name|model
operator|.
name|setRelation
argument_list|(
literal|1
argument_list|,
name|QSqlRelation
argument_list|(
name|reltest5
argument_list|,
literal|"title"
argument_list|,
literal|"abbrev"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|setEditStrategy
argument_list|(
name|QSqlTableModel
operator|::
name|OnManualSubmit
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Hr"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"mister"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Mr"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|submitAll
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Mr"
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// Redo same tests, with a LeftJoin
block|{
name|QSqlRelationalTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|reltest2
argument_list|)
expr_stmt|;
name|model
operator|.
name|setRelation
argument_list|(
literal|1
argument_list|,
name|QSqlRelation
argument_list|(
name|reltest5
argument_list|,
literal|"title"
argument_list|,
literal|"abbrev"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|setEditStrategy
argument_list|(
name|QSqlTableModel
operator|::
name|OnManualSubmit
argument_list|)
expr_stmt|;
name|model
operator|.
name|setJoinMode
argument_list|(
name|QSqlRelationalTableModel
operator|::
name|LeftJoin
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Mr"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Hr"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|submitAll
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Hr"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|multipleRelation
name|void
name|tst_QSqlRelationalTableModel
operator|::
name|multipleRelation
parameter_list|()
block|{
name|QFETCH_GLOBAL
argument_list|(
name|QString
argument_list|,
name|dbName
argument_list|)
expr_stmt|;
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbName
argument_list|)
decl_stmt|;
name|CHECK_DATABASE
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|recreateTestTables
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|QSqlRelationalTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|reltest1
argument_list|)
expr_stmt|;
name|model
operator|.
name|setRelation
argument_list|(
literal|2
argument_list|,
name|QSqlRelation
argument_list|(
name|reltest2
argument_list|,
literal|"tid"
argument_list|,
literal|"title"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|setRelation
argument_list|(
literal|3
argument_list|,
name|QSqlRelation
argument_list|(
name|reltest4
argument_list|,
literal|"id"
argument_list|,
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|setSort
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|AscendingOrder
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Trondheim"
argument_list|)
argument_list|)
expr_stmt|;
comment|// Redo same test in the LeftJoin mode
name|model
operator|.
name|setTable
argument_list|(
name|reltest1
argument_list|)
expr_stmt|;
name|model
operator|.
name|setRelation
argument_list|(
literal|2
argument_list|,
name|QSqlRelation
argument_list|(
name|reltest2
argument_list|,
literal|"tid"
argument_list|,
literal|"title"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|setRelation
argument_list|(
literal|3
argument_list|,
name|QSqlRelation
argument_list|(
name|reltest4
argument_list|,
literal|"id"
argument_list|,
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|setSort
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|AscendingOrder
argument_list|)
expr_stmt|;
name|model
operator|.
name|setJoinMode
argument_list|(
name|QSqlRelationalTableModel
operator|::
name|LeftJoin
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Trondheim"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|insertRecord
name|void
name|tst_QSqlRelationalTableModel
operator|::
name|insertRecord
parameter_list|()
block|{
name|QFETCH_GLOBAL
argument_list|(
name|QString
argument_list|,
name|dbName
argument_list|)
expr_stmt|;
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbName
argument_list|)
decl_stmt|;
name|CHECK_DATABASE
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|QSqlRelationalTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|reltest1
argument_list|)
expr_stmt|;
name|model
operator|.
name|setRelation
argument_list|(
literal|2
argument_list|,
name|QSqlRelation
argument_list|(
name|reltest2
argument_list|,
literal|"tid"
argument_list|,
literal|"title"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|setSort
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|AscendingOrder
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QSqlRecord
name|rec
decl_stmt|;
name|QSqlField
name|f1
argument_list|(
literal|"id"
argument_list|,
name|QVariant
operator|::
name|Int
argument_list|)
decl_stmt|;
name|QSqlField
name|f2
argument_list|(
literal|"name"
argument_list|,
name|QVariant
operator|::
name|String
argument_list|)
decl_stmt|;
name|QSqlField
name|f3
argument_list|(
literal|"title_key"
argument_list|,
name|QVariant
operator|::
name|Int
argument_list|)
decl_stmt|;
name|QSqlField
name|f4
argument_list|(
literal|"another_title_key"
argument_list|,
name|QVariant
operator|::
name|Int
argument_list|)
decl_stmt|;
name|f1
operator|.
name|setValue
argument_list|(
literal|7
argument_list|)
expr_stmt|;
name|f2
operator|.
name|setValue
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|f3
operator|.
name|setValue
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|f4
operator|.
name|setValue
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|f1
operator|.
name|setGenerated
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|f2
operator|.
name|setGenerated
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|f3
operator|.
name|setGenerated
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|f4
operator|.
name|setGenerated
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|rec
operator|.
name|append
argument_list|(
name|f1
argument_list|)
expr_stmt|;
name|rec
operator|.
name|append
argument_list|(
name|f2
argument_list|)
expr_stmt|;
name|rec
operator|.
name|append
argument_list|(
name|f3
argument_list|)
expr_stmt|;
name|rec
operator|.
name|append
argument_list|(
name|f4
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|insertRecord
argument_list|(
operator|-
literal|1
argument_list|,
name|rec
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|4
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|4
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|4
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
comment|// In LeftJoin mode, two additional rows are fetched
name|model
operator|.
name|setJoinMode
argument_list|(
name|QSqlRelationalTableModel
operator|::
name|LeftJoin
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|6
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|6
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|6
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setRecord
name|void
name|tst_QSqlRelationalTableModel
operator|::
name|setRecord
parameter_list|()
block|{
name|QFETCH_GLOBAL
argument_list|(
name|QString
argument_list|,
name|dbName
argument_list|)
expr_stmt|;
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbName
argument_list|)
decl_stmt|;
name|CHECK_DATABASE
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|recreateTestTables
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|QSqlRelationalTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|reltest1
argument_list|)
expr_stmt|;
name|model
operator|.
name|setRelation
argument_list|(
literal|2
argument_list|,
name|QSqlRelation
argument_list|(
name|reltest2
argument_list|,
literal|"tid"
argument_list|,
literal|"title"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|setSort
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|AscendingOrder
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QSqlRecord
name|rec
decl_stmt|;
name|QSqlField
name|f1
argument_list|(
literal|"id"
argument_list|,
name|QVariant
operator|::
name|Int
argument_list|)
decl_stmt|;
name|QSqlField
name|f2
argument_list|(
literal|"name"
argument_list|,
name|QVariant
operator|::
name|String
argument_list|)
decl_stmt|;
name|QSqlField
name|f3
argument_list|(
literal|"title_key"
argument_list|,
name|QVariant
operator|::
name|Int
argument_list|)
decl_stmt|;
name|QSqlField
name|f4
argument_list|(
literal|"another_title_key"
argument_list|,
name|QVariant
operator|::
name|Int
argument_list|)
decl_stmt|;
name|f1
operator|.
name|setValue
argument_list|(
literal|7
argument_list|)
expr_stmt|;
name|f2
operator|.
name|setValue
argument_list|(
literal|"tester"
argument_list|)
expr_stmt|;
name|f3
operator|.
name|setValue
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|f4
operator|.
name|setValue
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|f1
operator|.
name|setGenerated
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|f2
operator|.
name|setGenerated
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|f3
operator|.
name|setGenerated
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|f4
operator|.
name|setGenerated
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|rec
operator|.
name|append
argument_list|(
name|f1
argument_list|)
expr_stmt|;
name|rec
operator|.
name|append
argument_list|(
name|f2
argument_list|)
expr_stmt|;
name|rec
operator|.
name|append
argument_list|(
name|f3
argument_list|)
expr_stmt|;
name|rec
operator|.
name|append
argument_list|(
name|f4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"trond"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"mister"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|setRecord
argument_list|(
literal|1
argument_list|,
name|rec
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"tester"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|setSort
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|AscendingOrder
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|submit
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"tester"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|insertWithStrategies
name|void
name|tst_QSqlRelationalTableModel
operator|::
name|insertWithStrategies
parameter_list|()
block|{
name|QFETCH_GLOBAL
argument_list|(
name|QString
argument_list|,
name|dbName
argument_list|)
expr_stmt|;
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbName
argument_list|)
decl_stmt|;
name|CHECK_DATABASE
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|QSqlRelationalTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|reltest1
argument_list|)
expr_stmt|;
name|model
operator|.
name|setRelation
argument_list|(
literal|2
argument_list|,
name|QSqlRelation
argument_list|(
name|reltest2
argument_list|,
literal|"tid"
argument_list|,
literal|"title"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|setSort
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|AscendingOrder
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|db
operator|.
name|driverName
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"QTDS"
argument_list|)
condition|)
name|model
operator|.
name|setRelation
argument_list|(
literal|3
argument_list|,
name|QSqlRelation
argument_list|(
name|reltest2
argument_list|,
literal|"tid"
argument_list|,
literal|"title"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|db
operator|.
name|driverName
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"QTDS"
argument_list|)
condition|)
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"mister"
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|model
operator|.
name|insertRows
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
literal|1011
argument_list|)
expr_stmt|;
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
literal|"test"
argument_list|)
expr_stmt|;
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1011
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"mister"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|db
operator|.
name|driverName
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"QTDS"
argument_list|)
condition|)
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|db
operator|.
name|driverName
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"QTDS"
argument_list|)
condition|)
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"mister"
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|submitAll
argument_list|()
argument_list|)
expr_stmt|;
name|model
operator|.
name|setEditStrategy
argument_list|(
name|QSqlTableModel
operator|::
name|OnManualSubmit
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|db
operator|.
name|driverName
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"QTDS"
argument_list|)
condition|)
block|{
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"mister"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
name|model
operator|.
name|insertRows
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
literal|1012
argument_list|)
expr_stmt|;
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
literal|"george"
argument_list|)
expr_stmt|;
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|,
literal|1013
argument_list|)
expr_stmt|;
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
literal|"kramer"
argument_list|)
expr_stmt|;
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1012
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"george"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"mister"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|db
operator|.
name|driverName
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"QTDS"
argument_list|)
condition|)
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"mister"
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1013
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"kramer"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"mister"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|db
operator|.
name|driverName
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"QTDS"
argument_list|)
condition|)
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|db
operator|.
name|driverName
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"QTDS"
argument_list|)
condition|)
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|submitAll
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|removeColumn
name|void
name|tst_QSqlRelationalTableModel
operator|::
name|removeColumn
parameter_list|()
block|{
name|QFETCH_GLOBAL
argument_list|(
name|QString
argument_list|,
name|dbName
argument_list|)
expr_stmt|;
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbName
argument_list|)
decl_stmt|;
name|CHECK_DATABASE
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|recreateTestTables
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|QSqlRelationalTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|reltest1
argument_list|)
expr_stmt|;
name|model
operator|.
name|setRelation
argument_list|(
literal|2
argument_list|,
name|QSqlRelation
argument_list|(
name|reltest2
argument_list|,
literal|"tid"
argument_list|,
literal|"title"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|removeColumn
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|columnCount
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
argument_list|)
argument_list|,
name|QVariant
argument_list|()
argument_list|)
expr_stmt|;
comment|// try removing more than one column
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|removeColumns
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|columnCount
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|,
name|QVariant
argument_list|()
argument_list|)
expr_stmt|;
comment|// try in LeftJoin mode the same tests
name|CHECK_DATABASE
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|recreateTestTables
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|QSqlRelationalTableModel
name|lmodel
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|lmodel
operator|.
name|setTable
argument_list|(
name|reltest1
argument_list|)
expr_stmt|;
name|lmodel
operator|.
name|setRelation
argument_list|(
literal|2
argument_list|,
name|QSqlRelation
argument_list|(
name|reltest2
argument_list|,
literal|"tid"
argument_list|,
literal|"title"
argument_list|)
argument_list|)
expr_stmt|;
name|lmodel
operator|.
name|setJoinMode
argument_list|(
name|QSqlRelationalTableModel
operator|::
name|LeftJoin
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|lmodel
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|lmodel
argument_list|,
name|removeColumn
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|lmodel
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|lmodel
operator|.
name|columnCount
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|lmodel
operator|.
name|data
argument_list|(
name|lmodel
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|lmodel
operator|.
name|data
argument_list|(
name|lmodel
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|lmodel
operator|.
name|data
argument_list|(
name|lmodel
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|lmodel
operator|.
name|data
argument_list|(
name|lmodel
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
argument_list|)
argument_list|,
name|QVariant
argument_list|()
argument_list|)
expr_stmt|;
comment|// try removing more than one column
name|QVERIFY_SQL
argument_list|(
name|lmodel
argument_list|,
name|removeColumns
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|lmodel
operator|.
name|columnCount
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|lmodel
operator|.
name|data
argument_list|(
name|lmodel
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|lmodel
operator|.
name|data
argument_list|(
name|lmodel
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|,
name|QVariant
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|filter
name|void
name|tst_QSqlRelationalTableModel
operator|::
name|filter
parameter_list|()
block|{
name|QFETCH_GLOBAL
argument_list|(
name|QString
argument_list|,
name|dbName
argument_list|)
expr_stmt|;
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbName
argument_list|)
decl_stmt|;
name|CHECK_DATABASE
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|recreateTestTables
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|QSqlRelationalTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|reltest1
argument_list|)
expr_stmt|;
name|model
operator|.
name|setRelation
argument_list|(
literal|2
argument_list|,
name|QSqlRelation
argument_list|(
name|reltest2
argument_list|,
literal|"tid"
argument_list|,
literal|"title"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|setFilter
argument_list|(
literal|"title = 'herr'"
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
comment|// Redo same filter test in LeftJoin mode
name|model
operator|.
name|setJoinMode
argument_list|(
name|QSqlRelationalTableModel
operator|::
name|LeftJoin
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|sort
name|void
name|tst_QSqlRelationalTableModel
operator|::
name|sort
parameter_list|()
block|{
name|QFETCH_GLOBAL
argument_list|(
name|QString
argument_list|,
name|dbName
argument_list|)
expr_stmt|;
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbName
argument_list|)
decl_stmt|;
name|CHECK_DATABASE
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|QSqlRelationalTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|reltest1
argument_list|)
expr_stmt|;
name|model
operator|.
name|setRelation
argument_list|(
literal|2
argument_list|,
name|QSqlRelation
argument_list|(
name|reltest2
argument_list|,
literal|"tid"
argument_list|,
literal|"title"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|db
operator|.
name|driverName
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"QTDS"
argument_list|)
condition|)
name|model
operator|.
name|setRelation
argument_list|(
literal|3
argument_list|,
name|QSqlRelation
argument_list|(
name|reltest2
argument_list|,
literal|"tid"
argument_list|,
literal|"title"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|setSort
argument_list|(
literal|2
argument_list|,
name|Qt
operator|::
name|DescendingOrder
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"mister"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"mister"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|setSort
argument_list|(
literal|3
argument_list|,
name|Qt
operator|::
name|AscendingOrder
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|db
operator|.
name|driverName
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"QTDS"
argument_list|)
condition|)
block|{
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"mister"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"mister"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"mister"
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
comment|// redo same test in LeftJoin mode
name|model
operator|.
name|setJoinMode
argument_list|(
name|QSqlRelationalTableModel
operator|::
name|LeftJoin
argument_list|)
expr_stmt|;
name|model
operator|.
name|setSort
argument_list|(
literal|2
argument_list|,
name|Qt
operator|::
name|DescendingOrder
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"mister"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"mister"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|4
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|5
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|setSort
argument_list|(
literal|3
argument_list|,
name|Qt
operator|::
name|AscendingOrder
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|db
operator|.
name|driverName
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"QTDS"
argument_list|)
condition|)
block|{
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"mister"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"mister"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|4
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"mister"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|5
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"mister"
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|testRevert
specifier|static
name|void
name|testRevert
parameter_list|(
name|QSqlRelationalTableModel
modifier|&
name|model
parameter_list|)
block|{
comment|/* revert single row */
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|2
argument_list|,
name|Qt
operator|::
name|EditRole
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"mister"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|revertRow
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
comment|/* revert all */
name|QVERIFY
argument_list|(
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|2
argument_list|,
name|Qt
operator|::
name|EditRole
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"mister"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|revertAll
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
comment|// the following only works for OnManualSubmit
if|if
condition|(
name|model
operator|.
name|editStrategy
argument_list|()
operator|!=
name|QSqlTableModel
operator|::
name|OnManualSubmit
condition|)
return|return;
comment|/* revert inserted rows */
name|int
name|initialRowCount
init|=
name|model
operator|.
name|rowCount
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|insertRows
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
operator|==
operator|(
name|initialRowCount
operator|+
literal|4
operator|)
argument_list|)
expr_stmt|;
comment|/* make sure the new rows are initialized to nothing */
name|QVERIFY
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|4
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|5
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|6
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|7
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
comment|/* Set some values */
name|QVERIFY
argument_list|(
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|4
argument_list|,
literal|0
argument_list|)
argument_list|,
literal|42
argument_list|,
name|Qt
operator|::
name|EditRole
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|5
argument_list|,
literal|0
argument_list|)
argument_list|,
literal|43
argument_list|,
name|Qt
operator|::
name|EditRole
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|6
argument_list|,
literal|0
argument_list|)
argument_list|,
literal|44
argument_list|,
name|Qt
operator|::
name|EditRole
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|7
argument_list|,
literal|0
argument_list|)
argument_list|,
literal|45
argument_list|,
name|Qt
operator|::
name|EditRole
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|4
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|2
argument_list|,
name|Qt
operator|::
name|EditRole
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|5
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|2
argument_list|,
name|Qt
operator|::
name|EditRole
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|6
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|1
argument_list|,
name|Qt
operator|::
name|EditRole
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|7
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|2
argument_list|,
name|Qt
operator|::
name|EditRole
argument_list|)
argument_list|)
expr_stmt|;
comment|/* Now revert the newly inserted rows */
name|model
operator|.
name|revertAll
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
operator|==
name|initialRowCount
argument_list|)
expr_stmt|;
comment|/* Insert rows again */
name|QVERIFY
argument_list|(
name|model
operator|.
name|insertRows
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|)
argument_list|)
expr_stmt|;
comment|/* make sure the new rows are initialized to nothing */
name|QVERIFY
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|4
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|5
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|6
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|7
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|revert
name|void
name|tst_QSqlRelationalTableModel
operator|::
name|revert
parameter_list|()
block|{
name|QFETCH_GLOBAL
argument_list|(
name|QString
argument_list|,
name|dbName
argument_list|)
expr_stmt|;
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbName
argument_list|)
decl_stmt|;
name|CHECK_DATABASE
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|QSqlRelationalTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|reltest1
argument_list|)
expr_stmt|;
name|model
operator|.
name|setRelation
argument_list|(
literal|2
argument_list|,
name|QSqlRelation
argument_list|(
name|reltest2
argument_list|,
literal|"tid"
argument_list|,
literal|"title"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|setRelation
argument_list|(
literal|3
argument_list|,
name|QSqlRelation
argument_list|(
name|reltest4
argument_list|,
literal|"id"
argument_list|,
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|setSort
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|AscendingOrder
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|testRevert
argument_list|(
name|model
argument_list|)
expr_stmt|;
if|if
condition|(
name|QTest
operator|::
name|currentTestFailed
argument_list|()
condition|)
return|return;
name|model
operator|.
name|setJoinMode
argument_list|(
name|QSqlRelationalTableModel
operator|::
name|LeftJoin
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|testRevert
argument_list|(
name|model
argument_list|)
expr_stmt|;
comment|/* and again with OnManualSubmit */
name|model
operator|.
name|setJoinMode
argument_list|(
name|QSqlRelationalTableModel
operator|::
name|InnerJoin
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|model
operator|.
name|setEditStrategy
argument_list|(
name|QSqlTableModel
operator|::
name|OnManualSubmit
argument_list|)
expr_stmt|;
name|testRevert
argument_list|(
name|model
argument_list|)
expr_stmt|;
name|model
operator|.
name|setJoinMode
argument_list|(
name|QSqlRelationalTableModel
operator|::
name|LeftJoin
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|model
operator|.
name|setEditStrategy
argument_list|(
name|QSqlTableModel
operator|::
name|OnManualSubmit
argument_list|)
expr_stmt|;
name|testRevert
argument_list|(
name|model
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|clearDisplayValuesCache
name|void
name|tst_QSqlRelationalTableModel
operator|::
name|clearDisplayValuesCache
parameter_list|()
block|{
name|QFETCH_GLOBAL
argument_list|(
name|QString
argument_list|,
name|dbName
argument_list|)
expr_stmt|;
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbName
argument_list|)
decl_stmt|;
name|CHECK_DATABASE
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|QSqlRelationalTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|reltest1
argument_list|)
expr_stmt|;
name|model
operator|.
name|setRelation
argument_list|(
literal|2
argument_list|,
name|QSqlRelation
argument_list|(
name|reltest2
argument_list|,
literal|"tid"
argument_list|,
literal|"title"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|db
operator|.
name|driverName
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"QTDS"
argument_list|)
condition|)
name|model
operator|.
name|setRelation
argument_list|(
literal|3
argument_list|,
name|QSqlRelation
argument_list|(
name|reltest2
argument_list|,
literal|"tid"
argument_list|,
literal|"title"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|setSort
argument_list|(
literal|1
argument_list|,
name|Qt
operator|::
name|AscendingOrder
argument_list|)
expr_stmt|;
name|model
operator|.
name|setEditStrategy
argument_list|(
name|QSqlTableModel
operator|::
name|OnManualSubmit
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"vohi"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|db
operator|.
name|driverName
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"QTDS"
argument_list|)
condition|)
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"mister"
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|model
operator|.
name|insertRow
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|4
argument_list|,
literal|0
argument_list|)
argument_list|,
literal|7
argument_list|,
name|Qt
operator|::
name|EditRole
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|4
argument_list|,
literal|1
argument_list|)
argument_list|,
literal|"anders"
argument_list|,
name|Qt
operator|::
name|EditRole
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|4
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|1
argument_list|,
name|Qt
operator|::
name|EditRole
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|4
argument_list|,
literal|3
argument_list|)
argument_list|,
literal|1
argument_list|,
name|Qt
operator|::
name|EditRole
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|submitAll
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"anders"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|db
operator|.
name|driverName
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"QTDS"
argument_list|)
condition|)
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|4
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|4
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"vohi"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|4
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|db
operator|.
name|driverName
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"QTDS"
argument_list|)
condition|)
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|4
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"mister"
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|4
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|// For task 140782 and 176374: If the main table and the the related tables uses the same
end_comment
begin_comment
comment|// name for a column or display column then insertRecord() would return true though it
end_comment
begin_comment
comment|// actually failed.
end_comment
begin_function
DECL|function|insertRecordDuplicateFieldNames
name|void
name|tst_QSqlRelationalTableModel
operator|::
name|insertRecordDuplicateFieldNames
parameter_list|()
block|{
name|QFETCH_GLOBAL
argument_list|(
name|QString
argument_list|,
name|dbName
argument_list|)
expr_stmt|;
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbName
argument_list|)
decl_stmt|;
name|CHECK_DATABASE
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|QSqlRelationalTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|reltest3
argument_list|)
expr_stmt|;
name|model
operator|.
name|setEditStrategy
argument_list|(
name|QSqlTableModel
operator|::
name|OnManualSubmit
argument_list|)
expr_stmt|;
name|model
operator|.
name|setSort
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|AscendingOrder
argument_list|)
expr_stmt|;
comment|// Duplication of "name", used in both reltest3 and reltest4.
name|model
operator|.
name|setRelation
argument_list|(
literal|2
argument_list|,
name|QSqlRelation
argument_list|(
name|reltest4
argument_list|,
literal|"id"
argument_list|,
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|db
operator|.
name|driverName
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"QIBASE"
argument_list|)
operator|||
name|db
operator|.
name|driverName
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"QOCI"
argument_list|)
operator|||
name|db
operator|.
name|driverName
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"QDB2"
argument_list|)
condition|)
block|{
name|QCOMPARE
argument_list|(
name|model
operator|.
name|record
argument_list|(
literal|1
argument_list|)
operator|.
name|value
argument_list|(
operator|(
name|reltest4
operator|+
name|QLatin1String
argument_list|(
literal|"_name_2"
argument_list|)
operator|)
operator|.
name|toUpper
argument_list|()
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Trondheim"
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QCOMPARE
argument_list|(
name|model
operator|.
name|record
argument_list|(
literal|1
argument_list|)
operator|.
name|value
argument_list|(
operator|(
name|reltest4
operator|+
name|QLatin1String
argument_list|(
literal|"_name_2"
argument_list|)
operator|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Trondheim"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QSqlRecord
name|rec
init|=
name|model
operator|.
name|record
argument_list|()
decl_stmt|;
name|rec
operator|.
name|setValue
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|rec
operator|.
name|setValue
argument_list|(
literal|1
argument_list|,
literal|"Berge"
argument_list|)
expr_stmt|;
name|rec
operator|.
name|setValue
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// Must insert the key value
if|if
condition|(
name|db
operator|.
name|driverName
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"QIBASE"
argument_list|)
operator|||
name|db
operator|.
name|driverName
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"QOCI"
argument_list|)
operator|||
name|db
operator|.
name|driverName
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"QDB2"
argument_list|)
condition|)
block|{
name|QCOMPARE
argument_list|(
name|rec
operator|.
name|fieldName
argument_list|(
literal|0
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"ID"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rec
operator|.
name|fieldName
argument_list|(
literal|1
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"NAME"
argument_list|)
argument_list|)
expr_stmt|;
comment|// This comes from main table
block|}
else|else
block|{
name|QCOMPARE
argument_list|(
name|rec
operator|.
name|fieldName
argument_list|(
literal|0
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"id"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rec
operator|.
name|fieldName
argument_list|(
literal|1
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// The duplicate field names is aliased because it's comes from the relation's display column.
if|if
condition|(
name|db
operator|.
name|driverName
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"QIBASE"
argument_list|)
operator|||
name|db
operator|.
name|driverName
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"QOCI"
argument_list|)
operator|||
name|db
operator|.
name|driverName
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"QDB2"
argument_list|)
condition|)
name|QCOMPARE
argument_list|(
name|rec
operator|.
name|fieldName
argument_list|(
literal|2
argument_list|)
argument_list|,
operator|(
name|reltest4
operator|+
name|QLatin1String
argument_list|(
literal|"_name_2"
argument_list|)
operator|)
operator|.
name|toUpper
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|QCOMPARE
argument_list|(
name|rec
operator|.
name|fieldName
argument_list|(
literal|2
argument_list|)
argument_list|,
name|reltest4
operator|+
name|QLatin1String
argument_list|(
literal|"_name_2"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|insertRecord
argument_list|(
operator|-
literal|1
argument_list|,
name|rec
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Oslo"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|submitAll
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Oslo"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|invalidData
name|void
name|tst_QSqlRelationalTableModel
operator|::
name|invalidData
parameter_list|()
block|{
name|QFETCH_GLOBAL
argument_list|(
name|QString
argument_list|,
name|dbName
argument_list|)
expr_stmt|;
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbName
argument_list|)
decl_stmt|;
name|CHECK_DATABASE
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|QSqlRelationalTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|reltest1
argument_list|)
expr_stmt|;
name|model
operator|.
name|setRelation
argument_list|(
literal|2
argument_list|,
name|QSqlRelation
argument_list|(
name|reltest2
argument_list|,
literal|"tid"
argument_list|,
literal|"title"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
comment|//try set a non-existent relational key
name|QVERIFY
argument_list|(
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|3
argument_list|)
operator|==
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
comment|//try to set data in non valid index
name|QVERIFY
argument_list|(
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|)
argument_list|,
literal|5
argument_list|)
operator|==
literal|false
argument_list|)
expr_stmt|;
comment|//same test with LeftJoin mode
name|model
operator|.
name|setJoinMode
argument_list|(
name|QSqlRelationalTableModel
operator|::
name|LeftJoin
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
comment|//try set a non-existent relational key
name|QVERIFY
argument_list|(
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|3
argument_list|)
operator|==
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
comment|//try to set data in non valid index
name|QVERIFY
argument_list|(
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|)
argument_list|,
literal|5
argument_list|)
operator|==
literal|false
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|relationModel
name|void
name|tst_QSqlRelationalTableModel
operator|::
name|relationModel
parameter_list|()
block|{
name|QFETCH_GLOBAL
argument_list|(
name|QString
argument_list|,
name|dbName
argument_list|)
expr_stmt|;
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbName
argument_list|)
decl_stmt|;
name|CHECK_DATABASE
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|QSqlRelationalTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|reltest1
argument_list|)
expr_stmt|;
name|model
operator|.
name|setRelation
argument_list|(
literal|2
argument_list|,
name|QSqlRelation
argument_list|(
name|reltest2
argument_list|,
literal|"tid"
argument_list|,
literal|"title"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|relationModel
argument_list|(
literal|0
argument_list|)
operator|==
name|NULL
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|relationModel
argument_list|(
literal|1
argument_list|)
operator|==
name|NULL
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|relationModel
argument_list|(
literal|2
argument_list|)
operator|!=
name|NULL
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|relationModel
argument_list|(
literal|3
argument_list|)
operator|==
name|NULL
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|relationModel
argument_list|(
literal|4
argument_list|)
operator|==
name|NULL
argument_list|)
expr_stmt|;
name|model
operator|.
name|setRelation
argument_list|(
literal|3
argument_list|,
name|QSqlRelation
argument_list|(
name|reltest4
argument_list|,
literal|"id"
argument_list|,
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|relationModel
argument_list|(
literal|0
argument_list|)
operator|==
name|NULL
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|relationModel
argument_list|(
literal|1
argument_list|)
operator|==
name|NULL
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|relationModel
argument_list|(
literal|2
argument_list|)
operator|!=
name|NULL
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|relationModel
argument_list|(
literal|3
argument_list|)
operator|!=
name|NULL
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|relationModel
argument_list|(
literal|4
argument_list|)
operator|==
name|NULL
argument_list|)
expr_stmt|;
name|QSqlTableModel
modifier|*
name|rel_model
init|=
name|model
operator|.
name|relationModel
argument_list|(
literal|2
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|rel_model
operator|->
name|data
argument_list|(
name|rel_model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
comment|//same test in JoinMode
name|model
operator|.
name|setJoinMode
argument_list|(
name|QSqlRelationalTableModel
operator|::
name|LeftJoin
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|relationModel
argument_list|(
literal|0
argument_list|)
operator|==
name|NULL
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|relationModel
argument_list|(
literal|1
argument_list|)
operator|==
name|NULL
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|relationModel
argument_list|(
literal|2
argument_list|)
operator|!=
name|NULL
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|relationModel
argument_list|(
literal|3
argument_list|)
operator|!=
name|NULL
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|relationModel
argument_list|(
literal|4
argument_list|)
operator|==
name|NULL
argument_list|)
expr_stmt|;
name|QSqlTableModel
modifier|*
name|rel_model2
init|=
name|model
operator|.
name|relationModel
argument_list|(
literal|2
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|rel_model2
operator|->
name|data
argument_list|(
name|rel_model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|casing
name|void
name|tst_QSqlRelationalTableModel
operator|::
name|casing
parameter_list|()
block|{
name|QFETCH_GLOBAL
argument_list|(
name|QString
argument_list|,
name|dbName
argument_list|)
expr_stmt|;
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbName
argument_list|)
decl_stmt|;
name|CHECK_DATABASE
argument_list|(
name|db
argument_list|)
expr_stmt|;
if|if
condition|(
name|db
operator|.
name|driverName
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"QSQLITE"
argument_list|)
operator|||
name|db
operator|.
name|driverName
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"QIBASE"
argument_list|)
operator|||
name|tst_Databases
operator|::
name|isSqlServer
argument_list|(
name|db
argument_list|)
condition|)
name|QSKIP
argument_list|(
literal|"The casing test for this database is irrelevant since this database does not treat different cases as separate entities"
argument_list|)
expr_stmt|;
name|QSqlQuery
name|q
argument_list|(
name|db
argument_list|)
decl_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"create table "
operator|+
name|qTableName
argument_list|(
literal|"CASETEST1"
argument_list|,
name|db
operator|.
name|driver
argument_list|()
argument_list|)
operator|.
name|toUpper
argument_list|()
operator|+
literal|" (id int not null primary key, name varchar(20), title_key int, another_title_key int)"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|q
operator|.
name|exec
argument_list|(
literal|"create table "
operator|+
name|qTableName
argument_list|(
literal|"casetest1"
argument_list|,
name|db
operator|.
name|driver
argument_list|()
argument_list|)
operator|+
literal|" (ident int not null primary key, name varchar(20), title_key int)"
argument_list|)
condition|)
name|QSKIP
argument_list|(
literal|"The casing test for this database is irrelevant since this database does not treat different cases as separate entities"
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"insert into "
operator|+
name|qTableName
argument_list|(
literal|"CASETEST1"
argument_list|,
name|db
operator|.
name|driver
argument_list|()
argument_list|)
operator|.
name|toUpper
argument_list|()
operator|+
literal|" values(1, 'harry', 1, 2)"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"insert into "
operator|+
name|qTableName
argument_list|(
literal|"CASETEST1"
argument_list|,
name|db
operator|.
name|driver
argument_list|()
argument_list|)
operator|.
name|toUpper
argument_list|()
operator|+
literal|" values(2, 'trond', 2, 1)"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"insert into "
operator|+
name|qTableName
argument_list|(
literal|"CASETEST1"
argument_list|,
name|db
operator|.
name|driver
argument_list|()
argument_list|)
operator|.
name|toUpper
argument_list|()
operator|+
literal|" values(3, 'vohi', 1, 2)"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"insert into "
operator|+
name|qTableName
argument_list|(
literal|"CASETEST1"
argument_list|,
name|db
operator|.
name|driver
argument_list|()
argument_list|)
operator|.
name|toUpper
argument_list|()
operator|+
literal|" values(4, 'boris', 2, 2)"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"insert into "
operator|+
name|qTableName
argument_list|(
literal|"casetest1"
argument_list|,
name|db
operator|.
name|driver
argument_list|()
argument_list|)
operator|+
literal|" values(1, 'jerry', 1)"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"insert into "
operator|+
name|qTableName
argument_list|(
literal|"casetest1"
argument_list|,
name|db
operator|.
name|driver
argument_list|()
argument_list|)
operator|+
literal|" values(2, 'george', 2)"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"insert into "
operator|+
name|qTableName
argument_list|(
literal|"casetest1"
argument_list|,
name|db
operator|.
name|driver
argument_list|()
argument_list|)
operator|+
literal|" values(4, 'kramer', 2)"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|db
operator|.
name|driverName
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"QOCI"
argument_list|)
condition|)
block|{
comment|//try an owner that doesn't exist
name|QSqlRecord
name|rec
init|=
name|db
operator|.
name|driver
argument_list|()
operator|->
name|record
argument_list|(
literal|"doug."
operator|+
name|qTableName
argument_list|(
literal|"CASETEST1"
argument_list|,
name|db
operator|.
name|driver
argument_list|()
argument_list|)
operator|.
name|toUpper
argument_list|()
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|rec
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|//try an owner that does exist
name|rec
operator|=
name|db
operator|.
name|driver
argument_list|()
operator|->
name|record
argument_list|(
name|db
operator|.
name|userName
argument_list|()
operator|+
literal|"."
operator|+
name|qTableName
argument_list|(
literal|"CASETEST1"
argument_list|,
name|db
operator|.
name|driver
argument_list|()
argument_list|)
operator|.
name|toUpper
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rec
operator|.
name|count
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
block|}
name|QSqlRecord
name|rec
init|=
name|db
operator|.
name|driver
argument_list|()
operator|->
name|record
argument_list|(
name|qTableName
argument_list|(
literal|"CASETEST1"
argument_list|,
name|db
operator|.
name|driver
argument_list|()
argument_list|)
operator|.
name|toUpper
argument_list|()
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|rec
operator|.
name|count
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|rec
operator|=
name|db
operator|.
name|driver
argument_list|()
operator|->
name|record
argument_list|(
name|qTableName
argument_list|(
literal|"casetest1"
argument_list|,
name|db
operator|.
name|driver
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rec
operator|.
name|count
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QSqlTableModel
name|upperCaseModel
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|upperCaseModel
operator|.
name|setTable
argument_list|(
name|qTableName
argument_list|(
literal|"CASETEST1"
argument_list|,
name|db
operator|.
name|driver
argument_list|()
argument_list|)
operator|.
name|toUpper
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|upperCaseModel
operator|.
name|tableName
argument_list|()
argument_list|,
name|qTableName
argument_list|(
literal|"CASETEST1"
argument_list|,
name|db
operator|.
name|driver
argument_list|()
argument_list|)
operator|.
name|toUpper
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|upperCaseModel
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|upperCaseModel
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QSqlTableModel
name|lowerCaseModel
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|lowerCaseModel
operator|.
name|setTable
argument_list|(
name|qTableName
argument_list|(
literal|"casetest1"
argument_list|,
name|db
operator|.
name|driver
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|lowerCaseModel
operator|.
name|tableName
argument_list|()
argument_list|,
name|qTableName
argument_list|(
literal|"casetest1"
argument_list|,
name|db
operator|.
name|driver
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|lowerCaseModel
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|lowerCaseModel
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QSqlRelationalTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|qTableName
argument_list|(
literal|"CASETEST1"
argument_list|,
name|db
operator|.
name|driver
argument_list|()
argument_list|)
operator|.
name|toUpper
argument_list|()
argument_list|)
expr_stmt|;
name|model
operator|.
name|setRelation
argument_list|(
literal|2
argument_list|,
name|QSqlRelation
argument_list|(
name|reltest2
argument_list|,
literal|"tid"
argument_list|,
literal|"title"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|escapedRelations
name|void
name|tst_QSqlRelationalTableModel
operator|::
name|escapedRelations
parameter_list|()
block|{
name|QFETCH_GLOBAL
argument_list|(
name|QString
argument_list|,
name|dbName
argument_list|)
expr_stmt|;
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbName
argument_list|)
decl_stmt|;
name|CHECK_DATABASE
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|recreateTestTables
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|QSqlRelationalTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|reltest1
argument_list|)
expr_stmt|;
comment|//try with relation table name quoted
if|if
condition|(
name|db
operator|.
name|driverName
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"QIBASE"
argument_list|)
operator|||
name|db
operator|.
name|driverName
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"QOCI"
argument_list|)
operator|||
name|db
operator|.
name|driverName
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"QDB2"
argument_list|)
condition|)
block|{
name|model
operator|.
name|setRelation
argument_list|(
literal|2
argument_list|,
name|QSqlRelation
argument_list|(
name|db
operator|.
name|driver
argument_list|()
operator|->
name|escapeIdentifier
argument_list|(
name|reltest2
operator|.
name|toUpper
argument_list|()
argument_list|,
name|QSqlDriver
operator|::
name|TableName
argument_list|)
argument_list|,
literal|"tid"
argument_list|,
literal|"title"
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|model
operator|.
name|setRelation
argument_list|(
literal|2
argument_list|,
name|QSqlRelation
argument_list|(
name|db
operator|.
name|driver
argument_list|()
operator|->
name|escapeIdentifier
argument_list|(
name|reltest2
argument_list|,
name|QSqlDriver
operator|::
name|TableName
argument_list|)
argument_list|,
literal|"tid"
argument_list|,
literal|"title"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|setJoinMode
argument_list|(
name|QSqlRelationalTableModel
operator|::
name|LeftJoin
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
comment|//try with index column quoted
name|model
operator|.
name|setJoinMode
argument_list|(
name|QSqlRelationalTableModel
operator|::
name|InnerJoin
argument_list|)
expr_stmt|;
if|if
condition|(
name|db
operator|.
name|driverName
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"QIBASE"
argument_list|)
operator|||
name|db
operator|.
name|driverName
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"QOCI"
argument_list|)
operator|||
name|db
operator|.
name|driverName
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"QDB2"
argument_list|)
condition|)
block|{
name|model
operator|.
name|setRelation
argument_list|(
literal|2
argument_list|,
name|QSqlRelation
argument_list|(
name|reltest2
argument_list|,
name|db
operator|.
name|driver
argument_list|()
operator|->
name|escapeIdentifier
argument_list|(
literal|"tid"
argument_list|,
name|QSqlDriver
operator|::
name|FieldName
argument_list|)
operator|.
name|toUpper
argument_list|()
argument_list|,
literal|"title"
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|model
operator|.
name|setRelation
argument_list|(
literal|2
argument_list|,
name|QSqlRelation
argument_list|(
name|reltest2
argument_list|,
name|db
operator|.
name|driver
argument_list|()
operator|->
name|escapeIdentifier
argument_list|(
literal|"tid"
argument_list|,
name|QSqlDriver
operator|::
name|FieldName
argument_list|)
argument_list|,
literal|"title"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|setJoinMode
argument_list|(
name|QSqlRelationalTableModel
operator|::
name|LeftJoin
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
comment|//try with display column quoted
name|model
operator|.
name|setJoinMode
argument_list|(
name|QSqlRelationalTableModel
operator|::
name|InnerJoin
argument_list|)
expr_stmt|;
if|if
condition|(
name|db
operator|.
name|driverName
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"QIBASE"
argument_list|)
operator|||
name|db
operator|.
name|driverName
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"QOCI"
argument_list|)
operator|||
name|db
operator|.
name|driverName
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"QDB2"
argument_list|)
condition|)
block|{
name|model
operator|.
name|setRelation
argument_list|(
literal|2
argument_list|,
name|QSqlRelation
argument_list|(
name|reltest2
argument_list|,
literal|"tid"
argument_list|,
name|db
operator|.
name|driver
argument_list|()
operator|->
name|escapeIdentifier
argument_list|(
literal|"title"
argument_list|,
name|QSqlDriver
operator|::
name|FieldName
argument_list|)
operator|.
name|toUpper
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|model
operator|.
name|setRelation
argument_list|(
literal|2
argument_list|,
name|QSqlRelation
argument_list|(
name|reltest2
argument_list|,
literal|"tid"
argument_list|,
name|db
operator|.
name|driver
argument_list|()
operator|->
name|escapeIdentifier
argument_list|(
literal|"title"
argument_list|,
name|QSqlDriver
operator|::
name|FieldName
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|setJoinMode
argument_list|(
name|QSqlRelationalTableModel
operator|::
name|LeftJoin
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
comment|//try with tablename and index and display columns quoted in the relation
name|model
operator|.
name|setJoinMode
argument_list|(
name|QSqlRelationalTableModel
operator|::
name|InnerJoin
argument_list|)
expr_stmt|;
if|if
condition|(
name|db
operator|.
name|driverName
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"QIBASE"
argument_list|)
operator|||
name|db
operator|.
name|driverName
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"QOCI"
argument_list|)
operator|||
name|db
operator|.
name|driverName
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"QDB2"
argument_list|)
condition|)
block|{
name|model
operator|.
name|setRelation
argument_list|(
literal|2
argument_list|,
name|QSqlRelation
argument_list|(
name|reltest2
argument_list|,
literal|"tid"
argument_list|,
name|db
operator|.
name|driver
argument_list|()
operator|->
name|escapeIdentifier
argument_list|(
literal|"title"
argument_list|,
name|QSqlDriver
operator|::
name|FieldName
argument_list|)
operator|.
name|toUpper
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|model
operator|.
name|setRelation
argument_list|(
literal|2
argument_list|,
name|QSqlRelation
argument_list|(
name|reltest2
argument_list|,
literal|"tid"
argument_list|,
name|db
operator|.
name|driver
argument_list|()
operator|->
name|escapeIdentifier
argument_list|(
literal|"title"
argument_list|,
name|QSqlDriver
operator|::
name|FieldName
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|setJoinMode
argument_list|(
name|QSqlRelationalTableModel
operator|::
name|LeftJoin
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|escapedTableName
name|void
name|tst_QSqlRelationalTableModel
operator|::
name|escapedTableName
parameter_list|()
block|{
name|QFETCH_GLOBAL
argument_list|(
name|QString
argument_list|,
name|dbName
argument_list|)
expr_stmt|;
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbName
argument_list|)
decl_stmt|;
name|CHECK_DATABASE
argument_list|(
name|db
argument_list|)
expr_stmt|;
comment|// set the values using OnRowChange Strategy with an escaped tablename
block|{
name|QSqlRelationalTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
if|if
condition|(
name|db
operator|.
name|driverName
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"QIBASE"
argument_list|)
operator|||
name|db
operator|.
name|driverName
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"QOCI"
argument_list|)
operator|||
name|db
operator|.
name|driverName
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"QDB2"
argument_list|)
condition|)
block|{
name|model
operator|.
name|setTable
argument_list|(
name|db
operator|.
name|driver
argument_list|()
operator|->
name|escapeIdentifier
argument_list|(
name|reltest1
operator|.
name|toUpper
argument_list|()
argument_list|,
name|QSqlDriver
operator|::
name|TableName
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|model
operator|.
name|setTable
argument_list|(
name|db
operator|.
name|driver
argument_list|()
operator|->
name|escapeIdentifier
argument_list|(
name|reltest1
argument_list|,
name|QSqlDriver
operator|::
name|TableName
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|model
operator|.
name|setSort
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|AscendingOrder
argument_list|)
expr_stmt|;
name|model
operator|.
name|setRelation
argument_list|(
literal|2
argument_list|,
name|QSqlRelation
argument_list|(
name|reltest2
argument_list|,
literal|"tid"
argument_list|,
literal|"title"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"harry2"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry2"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"mister"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|submit
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"boris2"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"boris2"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|submit
argument_list|()
expr_stmt|;
block|}
block|{
comment|//verify values
name|QSqlRelationalTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|reltest1
argument_list|)
expr_stmt|;
name|model
operator|.
name|setSort
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|AscendingOrder
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry2"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"boris2"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|model
operator|.
name|setRelation
argument_list|(
literal|2
argument_list|,
name|QSqlRelation
argument_list|(
name|reltest2
argument_list|,
literal|"tid"
argument_list|,
literal|"title"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"mister"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|//ok, now do same test with LeftJoin
block|{
name|QSqlRelationalTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
if|if
condition|(
name|db
operator|.
name|driverName
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"QIBASE"
argument_list|)
operator|||
name|db
operator|.
name|driverName
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"QOCI"
argument_list|)
operator|||
name|db
operator|.
name|driverName
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"QDB2"
argument_list|)
condition|)
block|{
name|model
operator|.
name|setTable
argument_list|(
name|db
operator|.
name|driver
argument_list|()
operator|->
name|escapeIdentifier
argument_list|(
name|reltest1
operator|.
name|toUpper
argument_list|()
argument_list|,
name|QSqlDriver
operator|::
name|TableName
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|model
operator|.
name|setTable
argument_list|(
name|db
operator|.
name|driver
argument_list|()
operator|->
name|escapeIdentifier
argument_list|(
name|reltest1
argument_list|,
name|QSqlDriver
operator|::
name|TableName
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|model
operator|.
name|setSort
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|AscendingOrder
argument_list|)
expr_stmt|;
name|model
operator|.
name|setRelation
argument_list|(
literal|2
argument_list|,
name|QSqlRelation
argument_list|(
name|reltest2
argument_list|,
literal|"tid"
argument_list|,
literal|"title"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|setJoinMode
argument_list|(
name|QSqlRelationalTableModel
operator|::
name|LeftJoin
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"harry2"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry2"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"mister"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|submit
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"boris2"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"boris2"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|submit
argument_list|()
expr_stmt|;
block|}
block|{
comment|//verify values
name|QSqlRelationalTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|reltest1
argument_list|)
expr_stmt|;
name|model
operator|.
name|setSort
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|AscendingOrder
argument_list|)
expr_stmt|;
name|model
operator|.
name|setJoinMode
argument_list|(
name|QSqlRelationalTableModel
operator|::
name|LeftJoin
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"harry2"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"boris2"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|model
operator|.
name|setRelation
argument_list|(
literal|2
argument_list|,
name|QSqlRelation
argument_list|(
name|reltest2
argument_list|,
literal|"tid"
argument_list|,
literal|"title"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"mister"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"herr"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|whiteSpaceInIdentifiers
name|void
name|tst_QSqlRelationalTableModel
operator|::
name|whiteSpaceInIdentifiers
parameter_list|()
block|{
name|QFETCH_GLOBAL
argument_list|(
name|QString
argument_list|,
name|dbName
argument_list|)
expr_stmt|;
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbName
argument_list|)
decl_stmt|;
name|CHECK_DATABASE
argument_list|(
name|db
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|testWhiteSpaceNames
argument_list|(
name|db
operator|.
name|driverName
argument_list|()
argument_list|)
condition|)
name|QSKIP
argument_list|(
literal|"White space test irrelevant for driver"
argument_list|)
expr_stmt|;
name|QSqlRelationalTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|db
operator|.
name|driver
argument_list|()
operator|->
name|escapeIdentifier
argument_list|(
name|qTableName
argument_list|(
literal|"rel"
argument_list|,
name|__FILE__
argument_list|)
operator|+
literal|" test6"
argument_list|,
name|QSqlDriver
operator|::
name|TableName
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|setSort
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|DescendingOrder
argument_list|)
expr_stmt|;
name|model
operator|.
name|setRelation
argument_list|(
literal|1
argument_list|,
name|QSqlRelation
argument_list|(
name|db
operator|.
name|driver
argument_list|()
operator|->
name|escapeIdentifier
argument_list|(
name|qTableName
argument_list|(
literal|"rel"
argument_list|,
name|__FILE__
argument_list|)
operator|+
literal|" test7"
argument_list|,
name|QSqlDriver
operator|::
name|TableName
argument_list|)
argument_list|,
name|db
operator|.
name|driver
argument_list|()
operator|->
name|escapeIdentifier
argument_list|(
literal|"city id"
argument_list|,
name|QSqlDriver
operator|::
name|FieldName
argument_list|)
argument_list|,
name|db
operator|.
name|driver
argument_list|()
operator|->
name|escapeIdentifier
argument_list|(
literal|"city name"
argument_list|,
name|QSqlDriver
operator|::
name|FieldName
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Washington"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"New York"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|setJoinMode
argument_list|(
name|QSqlRelationalTableModel
operator|::
name|LeftJoin
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Washington"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"New York"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|setJoinMode
argument_list|(
name|QSqlRelationalTableModel
operator|::
name|InnerJoin
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QSqlRecord
name|rec
decl_stmt|;
name|QSqlField
name|f1
argument_list|(
literal|"id"
argument_list|,
name|QVariant
operator|::
name|Int
argument_list|)
decl_stmt|;
name|QSqlField
name|f2
argument_list|(
name|db
operator|.
name|driver
argument_list|()
operator|->
name|escapeIdentifier
argument_list|(
literal|"city key"
argument_list|,
name|QSqlDriver
operator|::
name|FieldName
argument_list|)
argument_list|,
name|QVariant
operator|::
name|Int
argument_list|)
decl_stmt|;
name|QSqlField
name|f3
argument_list|(
name|db
operator|.
name|driver
argument_list|()
operator|->
name|escapeIdentifier
argument_list|(
literal|"extra field"
argument_list|,
name|QSqlDriver
operator|::
name|FieldName
argument_list|)
argument_list|,
name|QVariant
operator|::
name|Int
argument_list|)
decl_stmt|;
name|f1
operator|.
name|setValue
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|f2
operator|.
name|setValue
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|f3
operator|.
name|setValue
argument_list|(
literal|7
argument_list|)
expr_stmt|;
name|f1
operator|.
name|setGenerated
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|f2
operator|.
name|setGenerated
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|f3
operator|.
name|setGenerated
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|rec
operator|.
name|append
argument_list|(
name|f1
argument_list|)
expr_stmt|;
name|rec
operator|.
name|append
argument_list|(
name|f2
argument_list|)
expr_stmt|;
name|rec
operator|.
name|append
argument_list|(
name|f3
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|insertRecord
argument_list|(
operator|-
literal|1
argument_list|,
name|rec
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|submitAll
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Washington"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|7
argument_list|)
expr_stmt|;
comment|//TODO: For some reson setting a record using manual submit fails
comment|//model.setEditStrategy(QSqlTableModel::OnManualSubmit);
name|QSqlRecord
name|recNew
decl_stmt|;
name|QSqlField
name|f1New
argument_list|(
literal|"id"
argument_list|,
name|QVariant
operator|::
name|Int
argument_list|)
decl_stmt|;
name|QSqlField
name|f2New
argument_list|(
name|db
operator|.
name|driver
argument_list|()
operator|->
name|escapeIdentifier
argument_list|(
literal|"city key"
argument_list|,
name|QSqlDriver
operator|::
name|FieldName
argument_list|)
argument_list|,
name|QVariant
operator|::
name|Int
argument_list|)
decl_stmt|;
name|QSqlField
name|f3New
argument_list|(
name|db
operator|.
name|driver
argument_list|()
operator|->
name|escapeIdentifier
argument_list|(
literal|"extra field"
argument_list|,
name|QSqlDriver
operator|::
name|FieldName
argument_list|)
argument_list|,
name|QVariant
operator|::
name|Int
argument_list|)
decl_stmt|;
name|f1New
operator|.
name|setValue
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|f2New
operator|.
name|setValue
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|f3New
operator|.
name|setValue
argument_list|(
literal|6
argument_list|)
expr_stmt|;
name|f1New
operator|.
name|setGenerated
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|f2New
operator|.
name|setGenerated
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|f3New
operator|.
name|setGenerated
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|recNew
operator|.
name|append
argument_list|(
name|f1New
argument_list|)
expr_stmt|;
name|recNew
operator|.
name|append
argument_list|(
name|f2New
argument_list|)
expr_stmt|;
name|recNew
operator|.
name|append
argument_list|(
name|f3New
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|setRecord
argument_list|(
literal|0
argument_list|,
name|recNew
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"New York"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|submitAll
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"New York"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|6
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|psqlSchemaTest
name|void
name|tst_QSqlRelationalTableModel
operator|::
name|psqlSchemaTest
parameter_list|()
block|{
name|QFETCH_GLOBAL
argument_list|(
name|QString
argument_list|,
name|dbName
argument_list|)
expr_stmt|;
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbName
argument_list|)
decl_stmt|;
name|CHECK_DATABASE
argument_list|(
name|db
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|tst_Databases
operator|::
name|isPostgreSQL
argument_list|(
name|db
argument_list|)
condition|)
name|QSKIP
argument_list|(
literal|"Postgresql specific test"
argument_list|)
expr_stmt|;
name|QSqlRelationalTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|QSqlQuery
name|q
argument_list|(
name|db
argument_list|)
decl_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"create schema "
operator|+
name|qTableName
argument_list|(
literal|"QTBUG_5373"
argument_list|,
name|__FILE__
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"create schema "
operator|+
name|qTableName
argument_list|(
literal|"QTBUG_5373_s2"
argument_list|,
name|__FILE__
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"create table "
operator|+
name|qTableName
argument_list|(
literal|"QTBUG_5373"
argument_list|,
name|__FILE__
argument_list|)
operator|+
literal|"."
operator|+
name|qTableName
argument_list|(
literal|"document"
argument_list|,
name|__FILE__
argument_list|)
operator|+
literal|"(document_id int primary key, relatingid int, userid int)"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"create table "
operator|+
name|qTableName
argument_list|(
literal|"QTBUG_5373_s2"
argument_list|,
name|__FILE__
argument_list|)
operator|+
literal|"."
operator|+
name|qTableName
argument_list|(
literal|"user"
argument_list|,
name|__FILE__
argument_list|)
operator|+
literal|"(userid int primary key, username char(40))"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|qTableName
argument_list|(
literal|"QTBUG_5373"
argument_list|,
name|__FILE__
argument_list|)
operator|+
literal|"."
operator|+
name|qTableName
argument_list|(
literal|"document"
argument_list|,
name|__FILE__
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|setRelation
argument_list|(
literal|1
argument_list|,
name|QSqlRelation
argument_list|(
name|qTableName
argument_list|(
literal|"QTBUG_5373_s2"
argument_list|,
name|__FILE__
argument_list|)
operator|+
literal|"."
operator|+
name|qTableName
argument_list|(
literal|"user"
argument_list|,
name|__FILE__
argument_list|)
argument_list|,
literal|"userid"
argument_list|,
literal|"username"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|setRelation
argument_list|(
literal|2
argument_list|,
name|QSqlRelation
argument_list|(
name|qTableName
argument_list|(
literal|"QTBUG_5373_s2"
argument_list|,
name|__FILE__
argument_list|)
operator|+
literal|"."
operator|+
name|qTableName
argument_list|(
literal|"user"
argument_list|,
name|__FILE__
argument_list|)
argument_list|,
literal|"userid"
argument_list|,
literal|"username"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|model
operator|.
name|setJoinMode
argument_list|(
name|QSqlRelationalTableModel
operator|::
name|LeftJoin
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|selectAfterUpdate
name|void
name|tst_QSqlRelationalTableModel
operator|::
name|selectAfterUpdate
parameter_list|()
block|{
name|QFETCH_GLOBAL
argument_list|(
name|QString
argument_list|,
name|dbName
argument_list|)
expr_stmt|;
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbName
argument_list|)
decl_stmt|;
name|CHECK_DATABASE
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|QSqlRelationalTableModel
name|model
argument_list|(
literal|0
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|reltest1
argument_list|)
expr_stmt|;
name|model
operator|.
name|setRelation
argument_list|(
literal|2
argument_list|,
name|QSqlRelation
argument_list|(
name|reltest2
argument_list|,
literal|"tid"
argument_list|,
literal|"title"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|relationModel
argument_list|(
literal|2
argument_list|)
operator|->
name|rowCount
argument_list|()
operator|==
literal|2
argument_list|)
expr_stmt|;
block|{
name|QSqlQuery
name|q
argument_list|(
name|db
argument_list|)
decl_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"insert into "
operator|+
name|reltest2
operator|+
literal|" values(3, 'mrs')"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|relationModel
argument_list|(
literal|2
argument_list|)
operator|->
name|select
argument_list|()
expr_stmt|;
block|}
name|QVERIFY
argument_list|(
name|model
operator|.
name|relationModel
argument_list|(
literal|2
argument_list|)
operator|->
name|rowCount
argument_list|()
operator|==
literal|3
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|submitAll
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
argument_list|,
name|QVariant
argument_list|(
literal|"mrs"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|/**   This test case verifies bug fix for QTBUG-20038.   */
end_comment
begin_function
DECL|function|relationOnFirstColumn
name|void
name|tst_QSqlRelationalTableModel
operator|::
name|relationOnFirstColumn
parameter_list|()
block|{
name|QFETCH_GLOBAL
argument_list|(
name|QString
argument_list|,
name|dbName
argument_list|)
expr_stmt|;
name|QSqlDatabase
name|db
init|=
name|QSqlDatabase
operator|::
name|database
argument_list|(
name|dbName
argument_list|)
decl_stmt|;
name|CHECK_DATABASE
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|QString
name|testTable1
init|=
name|qTableName
argument_list|(
literal|"QTBUG_20038_test1"
argument_list|,
name|__FILE__
argument_list|)
decl_stmt|;
name|QString
name|testTable2
init|=
name|qTableName
argument_list|(
literal|"QTBUG_20038_test2"
argument_list|,
name|__FILE__
argument_list|)
decl_stmt|;
name|tst_Databases
operator|::
name|safeDropTables
argument_list|(
name|db
argument_list|,
name|QStringList
argument_list|()
operator|<<
name|testTable1
operator|<<
name|testTable2
argument_list|)
expr_stmt|;
comment|//prepare test1 table
name|QSqlQuery
name|q
argument_list|(
name|db
argument_list|)
decl_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"CREATE TABLE "
operator|+
name|testTable1
operator|+
literal|" (val1 INTEGER, id1 INTEGER PRIMARY KEY);"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"DELETE FROM "
operator|+
name|testTable1
operator|+
literal|";"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"INSERT INTO "
operator|+
name|testTable1
operator|+
literal|" (id1, val1) VALUES(1, 10);"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"INSERT INTO "
operator|+
name|testTable1
operator|+
literal|" (id1, val1) VALUES(2, 20);"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"INSERT INTO "
operator|+
name|testTable1
operator|+
literal|" (id1, val1) VALUES(3, 30);"
argument_list|)
argument_list|)
expr_stmt|;
comment|//prepare test2 table
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"CREATE TABLE "
operator|+
name|testTable2
operator|+
literal|" (id INTEGER PRIMARY KEY, name TEXT);"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"DELETE FROM "
operator|+
name|testTable2
operator|+
literal|";"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"INSERT INTO "
operator|+
name|testTable2
operator|+
literal|" (id, name) VALUES (10, 'Hervanta');"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"INSERT INTO "
operator|+
name|testTable2
operator|+
literal|" (id, name) VALUES (20, 'Keskusta');"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"INSERT INTO "
operator|+
name|testTable2
operator|+
literal|" (id, name) VALUES (30, 'Annala');"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"INSERT INTO "
operator|+
name|testTable2
operator|+
literal|" (id, name) VALUES (40, 'Tammela');"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|q
argument_list|,
name|exec
argument_list|(
literal|"INSERT INTO "
operator|+
name|testTable2
operator|+
literal|" (id, name) VALUES (50, 'Amuri');"
argument_list|)
argument_list|)
expr_stmt|;
comment|//set test model
name|QSqlRelationalTableModel
name|model
argument_list|(
name|NULL
argument_list|,
name|db
argument_list|)
decl_stmt|;
name|model
operator|.
name|setTable
argument_list|(
name|testTable1
argument_list|)
expr_stmt|;
name|model
operator|.
name|setRelation
argument_list|(
literal|0
argument_list|,
name|QSqlRelation
argument_list|(
name|testTable2
argument_list|,
literal|"id"
argument_list|,
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|select
argument_list|()
argument_list|)
expr_stmt|;
comment|//verify the data
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|,
name|QVariant
argument_list|(
literal|"Hervanta"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|,
name|QVariant
argument_list|(
literal|"Keskusta"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|,
name|QVariant
argument_list|(
literal|"Annala"
argument_list|)
argument_list|)
expr_stmt|;
comment|//modify the model data
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
literal|40
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|,
literal|50
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY_SQL
argument_list|(
name|model
argument_list|,
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
argument_list|,
literal|30
argument_list|)
argument_list|)
expr_stmt|;
comment|//verify the data after modificaiton
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|,
name|QVariant
argument_list|(
literal|"Tammela"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|,
name|QVariant
argument_list|(
literal|"Amuri"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|data
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|,
name|QVariant
argument_list|(
literal|"Annala"
argument_list|)
argument_list|)
expr_stmt|;
name|tst_Databases
operator|::
name|safeDropTables
argument_list|(
name|db
argument_list|,
name|QStringList
argument_list|()
operator|<<
name|testTable1
operator|<<
name|testTable2
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QSqlRelationalTableModel
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qsqlrelationaltablemodel.moc"
end_include
end_unit
