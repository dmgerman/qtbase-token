begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_ifdef
ifdef|#
directive|ifdef
name|Q_WS_QWS
end_ifdef
begin_comment
comment|//TESTED_CLASS=
end_comment
begin_comment
comment|//TESTED_FILES=
end_comment
begin_include
include|#
directive|include
file|<QWSEmbedWidget>
end_include
begin_include
include|#
directive|include
file|<QLabel>
end_include
begin_class
DECL|class|tst_QWSEmbedWidget
class|class
name|tst_QWSEmbedWidget
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
DECL|function|tst_QWSEmbedWidget
name|tst_QWSEmbedWidget
parameter_list|()
block|{}
DECL|function|~tst_QWSEmbedWidget
name|~
name|tst_QWSEmbedWidget
parameter_list|()
block|{}
private|private
name|slots
private|:
name|void
name|embedWidget
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_function
DECL|function|embedWidget
name|void
name|tst_QWSEmbedWidget
operator|::
name|embedWidget
parameter_list|()
block|{
name|QLabel
name|embedded
argument_list|(
literal|"hello"
argument_list|)
decl_stmt|;
name|embedded
operator|.
name|show
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|embedded
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
block|{
name|QWSEmbedWidget
name|embedder
argument_list|(
name|embedded
operator|.
name|winId
argument_list|()
argument_list|)
decl_stmt|;
name|embedder
operator|.
name|show
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|embedded
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|embedded
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
block|{
name|QWidget
name|w
decl_stmt|;
name|embedded
operator|.
name|setWindowFlags
argument_list|(
name|Qt
operator|::
name|FramelessWindowHint
argument_list|)
expr_stmt|;
name|QWSEmbedWidget
name|embedder
argument_list|(
name|embedded
operator|.
name|winId
argument_list|()
argument_list|,
operator|&
name|w
argument_list|)
decl_stmt|;
specifier|const
name|QRect
name|geometry
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
decl_stmt|;
name|embedder
operator|.
name|setGeometry
argument_list|(
name|geometry
argument_list|)
expr_stmt|;
name|w
operator|.
name|show
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
specifier|const
name|QPoint
name|offset
init|=
name|w
operator|.
name|mapToGlobal
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|embedded
operator|.
name|geometry
argument_list|()
argument_list|,
name|geometry
operator|.
name|translated
argument_list|(
name|offset
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|embedded
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|embedded
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QWSEmbedWidget
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qwsembedwidget.moc"
end_include
begin_else
else|#
directive|else
end_else
begin_comment
comment|// Q_WS_QWS
end_comment
begin_macro
name|QTEST_NOOP_MAIN
end_macro
begin_endif
endif|#
directive|endif
end_endif
end_unit
