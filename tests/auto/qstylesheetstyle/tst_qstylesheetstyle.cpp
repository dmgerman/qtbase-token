begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtCore>
end_include
begin_include
include|#
directive|include
file|<QtGui>
end_include
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<QtDebug>
end_include
begin_include
include|#
directive|include
file|<QMetaObject>
end_include
begin_include
include|#
directive|include
file|<private/qstylesheetstyle_p.h>
end_include
begin_include
include|#
directive|include
file|"../platformquirks.h"
end_include
begin_comment
comment|//TESTED_CLASS=
end_comment
begin_comment
comment|//TESTED_FILES=
end_comment
begin_class
DECL|class|tst_QStyleSheetStyle
class|class
name|tst_QStyleSheetStyle
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
name|tst_QStyleSheetStyle
parameter_list|()
constructor_decl|;
name|~
name|tst_QStyleSheetStyle
parameter_list|()
destructor_decl|;
private|private
name|slots
private|:
name|void
name|repolish
parameter_list|()
function_decl|;
name|void
name|numinstances
parameter_list|()
function_decl|;
name|void
name|widgetsBeforeAppStyleSheet
parameter_list|()
function_decl|;
name|void
name|widgetsAfterAppStyleSheet
parameter_list|()
function_decl|;
name|void
name|applicationStyleSheet
parameter_list|()
function_decl|;
name|void
name|windowStyleSheet
parameter_list|()
function_decl|;
name|void
name|widgetStyleSheet
parameter_list|()
function_decl|;
name|void
name|reparentWithNoChildStyleSheet
parameter_list|()
function_decl|;
name|void
name|reparentWithChildStyleSheet
parameter_list|()
function_decl|;
name|void
name|dynamicProperty
parameter_list|()
function_decl|;
comment|// NB! Invoking this slot after layoutSpacing crashes on Mac.
name|void
name|namespaces
parameter_list|()
function_decl|;
ifdef|#
directive|ifdef
name|Q_OS_MAC
name|void
name|layoutSpacing
parameter_list|()
function_decl|;
endif|#
directive|endif
name|void
name|qproperty
parameter_list|()
function_decl|;
name|void
name|palettePropagation
parameter_list|()
function_decl|;
name|void
name|fontPropagation
parameter_list|()
function_decl|;
name|void
name|onWidgetDestroyed
parameter_list|()
function_decl|;
name|void
name|fontPrecedence
parameter_list|()
function_decl|;
name|void
name|focusColors
parameter_list|()
function_decl|;
name|void
name|hoverColors
parameter_list|()
function_decl|;
name|void
name|background
parameter_list|()
function_decl|;
name|void
name|tabAlignement
parameter_list|()
function_decl|;
name|void
name|attributesList
parameter_list|()
function_decl|;
name|void
name|minmaxSizes
parameter_list|()
function_decl|;
name|void
name|task206238_twice
parameter_list|()
function_decl|;
name|void
name|transparent
parameter_list|()
function_decl|;
name|void
name|proxyStyle
parameter_list|()
function_decl|;
name|void
name|dialogButtonBox
parameter_list|()
function_decl|;
name|void
name|emptyStyleSheet
parameter_list|()
function_decl|;
name|void
name|toolTip
parameter_list|()
function_decl|;
name|void
name|embeddedFonts
parameter_list|()
function_decl|;
name|void
name|opaquePaintEvent_data
parameter_list|()
function_decl|;
name|void
name|opaquePaintEvent
parameter_list|()
function_decl|;
name|void
name|complexWidgetFocus
parameter_list|()
function_decl|;
name|void
name|task188195_baseBackground
parameter_list|()
function_decl|;
name|void
name|task232085_spinBoxLineEditBg
parameter_list|()
function_decl|;
name|void
name|changeStyleInChangeEvent
parameter_list|()
function_decl|;
name|void
name|QTBUG15910_crashNullWidget
parameter_list|()
function_decl|;
comment|//at the end because it mess with the style.
name|void
name|widgetStyle
parameter_list|()
function_decl|;
name|void
name|appStyle
parameter_list|()
function_decl|;
name|void
name|QTBUG11658_cachecrash
parameter_list|()
function_decl|;
private|private:
DECL|function|COLOR
name|QColor
name|COLOR
parameter_list|(
specifier|const
name|QWidget
modifier|&
name|w
parameter_list|)
block|{
name|w
operator|.
name|ensurePolished
argument_list|()
expr_stmt|;
return|return
name|w
operator|.
name|palette
argument_list|()
operator|.
name|color
argument_list|(
name|w
operator|.
name|foregroundRole
argument_list|()
argument_list|)
return|;
block|}
DECL|function|APPCOLOR
name|QColor
name|APPCOLOR
parameter_list|(
specifier|const
name|QWidget
modifier|&
name|w
parameter_list|)
block|{
name|w
operator|.
name|ensurePolished
argument_list|()
expr_stmt|;
return|return
name|qApp
operator|->
name|palette
argument_list|(
operator|&
name|w
argument_list|)
operator|.
name|color
argument_list|(
name|w
operator|.
name|foregroundRole
argument_list|()
argument_list|)
return|;
block|}
DECL|function|BACKGROUND
name|QColor
name|BACKGROUND
parameter_list|(
specifier|const
name|QWidget
modifier|&
name|w
parameter_list|)
block|{
name|w
operator|.
name|ensurePolished
argument_list|()
expr_stmt|;
return|return
name|w
operator|.
name|palette
argument_list|()
operator|.
name|color
argument_list|(
name|w
operator|.
name|backgroundRole
argument_list|()
argument_list|)
return|;
block|}
DECL|function|APPBACKGROUND
name|QColor
name|APPBACKGROUND
parameter_list|(
specifier|const
name|QWidget
modifier|&
name|w
parameter_list|)
block|{
name|w
operator|.
name|ensurePolished
argument_list|()
expr_stmt|;
return|return
name|qApp
operator|->
name|palette
argument_list|(
operator|&
name|w
argument_list|)
operator|.
name|color
argument_list|(
name|w
operator|.
name|backgroundRole
argument_list|()
argument_list|)
return|;
block|}
DECL|function|FONTSIZE
name|int
name|FONTSIZE
parameter_list|(
specifier|const
name|QWidget
modifier|&
name|w
parameter_list|)
block|{
name|w
operator|.
name|ensurePolished
argument_list|()
expr_stmt|;
return|return
name|w
operator|.
name|font
argument_list|()
operator|.
name|pointSize
argument_list|()
return|;
block|}
DECL|function|APPFONTSIZE
name|int
name|APPFONTSIZE
parameter_list|(
specifier|const
name|QWidget
modifier|&
name|w
parameter_list|)
block|{
return|return
name|qApp
operator|->
name|font
argument_list|(
operator|&
name|w
argument_list|)
operator|.
name|pointSize
argument_list|()
return|;
block|}
block|}
class|;
end_class
begin_constructor
DECL|function|tst_QStyleSheetStyle
name|tst_QStyleSheetStyle
operator|::
name|tst_QStyleSheetStyle
parameter_list|()
block|{ }
end_constructor
begin_destructor
DECL|function|~tst_QStyleSheetStyle
name|tst_QStyleSheetStyle
operator|::
name|~
name|tst_QStyleSheetStyle
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|numinstances
name|void
name|tst_QStyleSheetStyle
operator|::
name|numinstances
parameter_list|()
block|{
name|QWidget
name|w
decl_stmt|;
name|QCommonStyle
modifier|*
name|style
init|=
operator|new
name|QCommonStyle
decl_stmt|;
name|style
operator|->
name|setParent
argument_list|(
operator|&
name|w
argument_list|)
expr_stmt|;
name|QWidget
name|c
argument_list|(
operator|&
name|w
argument_list|)
decl_stmt|;
name|w
operator|.
name|show
argument_list|()
expr_stmt|;
comment|// set and unset application stylesheet
name|QCOMPARE
argument_list|(
name|QStyleSheetStyle
operator|::
name|numinstances
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|setStyleSheet
argument_list|(
literal|"* { color: red; }"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QStyleSheetStyle
operator|::
name|numinstances
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|setStyleSheet
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QStyleSheetStyle
operator|::
name|numinstances
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// set and unset application stylesheet+widget
name|qApp
operator|->
name|setStyleSheet
argument_list|(
literal|"* { color: red; }"
argument_list|)
expr_stmt|;
name|w
operator|.
name|setStyleSheet
argument_list|(
literal|"color: red;"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QStyleSheetStyle
operator|::
name|numinstances
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|w
operator|.
name|setStyle
argument_list|(
name|style
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QStyleSheetStyle
operator|::
name|numinstances
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|setStyleSheet
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QStyleSheetStyle
operator|::
name|numinstances
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|w
operator|.
name|setStyleSheet
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QStyleSheetStyle
operator|::
name|numinstances
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// set and unset widget stylesheet
name|w
operator|.
name|setStyle
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|w
operator|.
name|setStyleSheet
argument_list|(
literal|"color: red"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QStyleSheetStyle
operator|::
name|numinstances
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|c
operator|.
name|setStyle
argument_list|(
name|style
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QStyleSheetStyle
operator|::
name|numinstances
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|w
operator|.
name|setStyleSheet
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QStyleSheetStyle
operator|::
name|numinstances
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|widgetsBeforeAppStyleSheet
name|void
name|tst_QStyleSheetStyle
operator|::
name|widgetsBeforeAppStyleSheet
parameter_list|()
block|{
name|QPushButton
name|w1
decl_stmt|;
comment|// widget with no stylesheet
name|qApp
operator|->
name|setStyleSheet
argument_list|(
literal|"* { color: red; }"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|COLOR
argument_list|(
name|w1
argument_list|)
operator|==
name|QColor
argument_list|(
literal|"red"
argument_list|)
argument_list|)
expr_stmt|;
name|w1
operator|.
name|setStyleSheet
argument_list|(
literal|"color: white"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|COLOR
argument_list|(
name|w1
argument_list|)
operator|==
name|QColor
argument_list|(
literal|"white"
argument_list|)
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|setStyleSheet
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|COLOR
argument_list|(
name|w1
argument_list|)
operator|==
name|QColor
argument_list|(
literal|"white"
argument_list|)
argument_list|)
expr_stmt|;
name|w1
operator|.
name|setStyleSheet
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|COLOR
argument_list|(
name|w1
argument_list|)
operator|==
name|APPCOLOR
argument_list|(
name|w1
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|FriendlySpinBox
class|class
name|FriendlySpinBox
super|:
specifier|public
name|QSpinBox
block|{
friend|friend
class_decl|class
name|tst_QStyleSheetStyle
class_decl|;
block|}
class|;
end_class
begin_function
DECL|function|widgetsAfterAppStyleSheet
name|void
name|tst_QStyleSheetStyle
operator|::
name|widgetsAfterAppStyleSheet
parameter_list|()
block|{
name|qApp
operator|->
name|setStyleSheet
argument_list|(
literal|"* { color: red; font-size: 32pt; }"
argument_list|)
expr_stmt|;
name|QPushButton
name|w1
decl_stmt|;
name|FriendlySpinBox
name|spin
decl_stmt|;
name|QVERIFY
argument_list|(
name|COLOR
argument_list|(
name|w1
argument_list|)
operator|==
name|QColor
argument_list|(
literal|"red"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|COLOR
argument_list|(
name|spin
argument_list|)
operator|==
name|QColor
argument_list|(
literal|"red"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|COLOR
argument_list|(
operator|*
name|spin
operator|.
name|lineEdit
argument_list|()
argument_list|)
operator|==
name|QColor
argument_list|(
literal|"red"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|FONTSIZE
argument_list|(
name|w1
argument_list|)
argument_list|,
literal|32
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|FONTSIZE
argument_list|(
name|spin
argument_list|)
argument_list|,
literal|32
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|FONTSIZE
argument_list|(
operator|*
name|spin
operator|.
name|lineEdit
argument_list|()
argument_list|)
argument_list|,
literal|32
argument_list|)
expr_stmt|;
name|w1
operator|.
name|setStyleSheet
argument_list|(
literal|"color: white"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|COLOR
argument_list|(
name|w1
argument_list|)
operator|==
name|QColor
argument_list|(
literal|"white"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|COLOR
argument_list|(
name|spin
argument_list|)
operator|==
name|QColor
argument_list|(
literal|"red"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|COLOR
argument_list|(
operator|*
name|spin
operator|.
name|lineEdit
argument_list|()
argument_list|)
operator|==
name|QColor
argument_list|(
literal|"red"
argument_list|)
argument_list|)
expr_stmt|;
name|w1
operator|.
name|setStyleSheet
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|COLOR
argument_list|(
name|w1
argument_list|)
operator|==
name|QColor
argument_list|(
literal|"red"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|COLOR
argument_list|(
name|spin
argument_list|)
operator|==
name|QColor
argument_list|(
literal|"red"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|COLOR
argument_list|(
operator|*
name|spin
operator|.
name|lineEdit
argument_list|()
argument_list|)
operator|==
name|QColor
argument_list|(
literal|"red"
argument_list|)
argument_list|)
expr_stmt|;
name|w1
operator|.
name|setStyleSheet
argument_list|(
literal|"color: white"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|COLOR
argument_list|(
name|w1
argument_list|)
operator|==
name|QColor
argument_list|(
literal|"white"
argument_list|)
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|setStyleSheet
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|COLOR
argument_list|(
name|w1
argument_list|)
operator|==
name|QColor
argument_list|(
literal|"white"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|COLOR
argument_list|(
name|spin
argument_list|)
operator|==
name|APPCOLOR
argument_list|(
name|spin
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|COLOR
argument_list|(
operator|*
name|spin
operator|.
name|lineEdit
argument_list|()
argument_list|)
operator|==
name|APPCOLOR
argument_list|(
operator|*
name|spin
operator|.
name|lineEdit
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|w1
operator|.
name|setStyleSheet
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|COLOR
argument_list|(
name|w1
argument_list|)
operator|==
name|APPCOLOR
argument_list|(
name|w1
argument_list|)
argument_list|)
expr_stmt|;
comment|// QCOMPARE(FONTSIZE(w1), APPFONTSIZE(w1));  //### task 244261
name|QCOMPARE
argument_list|(
name|FONTSIZE
argument_list|(
name|spin
argument_list|)
argument_list|,
name|APPFONTSIZE
argument_list|(
name|spin
argument_list|)
argument_list|)
expr_stmt|;
comment|//QCOMPARE(FONTSIZE(*spin.lineEdit()), APPFONTSIZE(*spin.lineEdit())); //### task 244261
block|}
end_function
begin_function
DECL|function|applicationStyleSheet
name|void
name|tst_QStyleSheetStyle
operator|::
name|applicationStyleSheet
parameter_list|()
block|{
name|QPushButton
name|w1
decl_stmt|;
name|qApp
operator|->
name|setStyleSheet
argument_list|(
literal|"* { color: red; }"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|COLOR
argument_list|(
name|w1
argument_list|)
operator|==
name|QColor
argument_list|(
literal|"red"
argument_list|)
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|setStyleSheet
argument_list|(
literal|"* { color: white; }"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|COLOR
argument_list|(
name|w1
argument_list|)
operator|==
name|QColor
argument_list|(
literal|"white"
argument_list|)
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|setStyleSheet
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|COLOR
argument_list|(
name|w1
argument_list|)
operator|==
name|APPCOLOR
argument_list|(
name|w1
argument_list|)
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|setStyleSheet
argument_list|(
literal|"* { color: red }"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|COLOR
argument_list|(
name|w1
argument_list|)
operator|==
name|QColor
argument_list|(
literal|"red"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|windowStyleSheet
name|void
name|tst_QStyleSheetStyle
operator|::
name|windowStyleSheet
parameter_list|()
block|{
name|QPushButton
name|w1
decl_stmt|;
name|qApp
operator|->
name|setStyleSheet
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|w1
operator|.
name|setStyleSheet
argument_list|(
literal|"* { color: red; }"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|COLOR
argument_list|(
name|w1
argument_list|)
operator|==
name|QColor
argument_list|(
literal|"red"
argument_list|)
argument_list|)
expr_stmt|;
name|w1
operator|.
name|setStyleSheet
argument_list|(
literal|"* { color: white; }"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|COLOR
argument_list|(
name|w1
argument_list|)
operator|==
name|QColor
argument_list|(
literal|"white"
argument_list|)
argument_list|)
expr_stmt|;
name|w1
operator|.
name|setStyleSheet
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|COLOR
argument_list|(
name|w1
argument_list|)
operator|==
name|APPCOLOR
argument_list|(
name|w1
argument_list|)
argument_list|)
expr_stmt|;
name|w1
operator|.
name|setStyleSheet
argument_list|(
literal|"* { color: red }"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|COLOR
argument_list|(
name|w1
argument_list|)
operator|==
name|QColor
argument_list|(
literal|"red"
argument_list|)
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|setStyleSheet
argument_list|(
literal|"* { color: green }"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|COLOR
argument_list|(
name|w1
argument_list|)
operator|==
name|QColor
argument_list|(
literal|"red"
argument_list|)
argument_list|)
expr_stmt|;
name|w1
operator|.
name|setStyleSheet
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|COLOR
argument_list|(
name|w1
argument_list|)
operator|==
name|QColor
argument_list|(
literal|"green"
argument_list|)
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|setStyleSheet
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|COLOR
argument_list|(
name|w1
argument_list|)
operator|==
name|APPCOLOR
argument_list|(
name|w1
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|widgetStyleSheet
name|void
name|tst_QStyleSheetStyle
operator|::
name|widgetStyleSheet
parameter_list|()
block|{
name|QPushButton
name|w1
decl_stmt|;
name|QPushButton
modifier|*
name|pb
init|=
operator|new
name|QPushButton
argument_list|(
operator|&
name|w1
argument_list|)
decl_stmt|;
name|QPushButton
modifier|&
name|w2
init|=
operator|*
name|pb
decl_stmt|;
name|qApp
operator|->
name|setStyleSheet
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|w1
operator|.
name|setStyleSheet
argument_list|(
literal|"* { color: red }"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|COLOR
argument_list|(
name|w1
argument_list|)
operator|==
name|QColor
argument_list|(
literal|"red"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|COLOR
argument_list|(
name|w2
argument_list|)
operator|==
name|QColor
argument_list|(
literal|"red"
argument_list|)
argument_list|)
expr_stmt|;
name|w2
operator|.
name|setStyleSheet
argument_list|(
literal|"* { color: white }"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|COLOR
argument_list|(
name|w2
argument_list|)
operator|==
name|QColor
argument_list|(
literal|"white"
argument_list|)
argument_list|)
expr_stmt|;
name|w1
operator|.
name|setStyleSheet
argument_list|(
literal|"* { color: blue }"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|COLOR
argument_list|(
name|w1
argument_list|)
operator|==
name|QColor
argument_list|(
literal|"blue"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|COLOR
argument_list|(
name|w2
argument_list|)
operator|==
name|QColor
argument_list|(
literal|"white"
argument_list|)
argument_list|)
expr_stmt|;
name|w1
operator|.
name|setStyleSheet
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|COLOR
argument_list|(
name|w1
argument_list|)
operator|==
name|APPCOLOR
argument_list|(
name|w1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|COLOR
argument_list|(
name|w2
argument_list|)
operator|==
name|QColor
argument_list|(
literal|"white"
argument_list|)
argument_list|)
expr_stmt|;
name|w2
operator|.
name|setStyleSheet
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|COLOR
argument_list|(
name|w1
argument_list|)
operator|==
name|APPCOLOR
argument_list|(
name|w1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|COLOR
argument_list|(
name|w2
argument_list|)
operator|==
name|APPCOLOR
argument_list|(
name|w2
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|reparentWithNoChildStyleSheet
name|void
name|tst_QStyleSheetStyle
operator|::
name|reparentWithNoChildStyleSheet
parameter_list|()
block|{
name|QPushButton
name|p1
decl_stmt|,
name|p2
decl_stmt|;
name|QPushButton
modifier|*
name|pb
init|=
operator|new
name|QPushButton
argument_list|(
operator|&
name|p1
argument_list|)
decl_stmt|;
name|QPushButton
modifier|&
name|c1
init|=
operator|*
name|pb
decl_stmt|;
comment|// child with no stylesheet
name|qApp
operator|->
name|setStyleSheet
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|p1
operator|.
name|setStyleSheet
argument_list|(
literal|"* { color: red }"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|COLOR
argument_list|(
name|c1
argument_list|)
operator|==
name|QColor
argument_list|(
literal|"red"
argument_list|)
argument_list|)
expr_stmt|;
name|c1
operator|.
name|setParent
argument_list|(
operator|&
name|p2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|COLOR
argument_list|(
name|c1
argument_list|)
operator|==
name|APPCOLOR
argument_list|(
name|c1
argument_list|)
argument_list|)
expr_stmt|;
name|p2
operator|.
name|setStyleSheet
argument_list|(
literal|"* { color: white }"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|COLOR
argument_list|(
name|c1
argument_list|)
operator|==
name|QColor
argument_list|(
literal|"white"
argument_list|)
argument_list|)
expr_stmt|;
name|c1
operator|.
name|setParent
argument_list|(
operator|&
name|p1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|COLOR
argument_list|(
name|c1
argument_list|)
operator|==
name|QColor
argument_list|(
literal|"red"
argument_list|)
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|setStyleSheet
argument_list|(
literal|"* { color: blue }"
argument_list|)
expr_stmt|;
name|c1
operator|.
name|setParent
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|COLOR
argument_list|(
name|c1
argument_list|)
operator|==
name|QColor
argument_list|(
literal|"blue"
argument_list|)
argument_list|)
expr_stmt|;
operator|delete
name|pb
expr_stmt|;
block|}
end_function
begin_function
DECL|function|reparentWithChildStyleSheet
name|void
name|tst_QStyleSheetStyle
operator|::
name|reparentWithChildStyleSheet
parameter_list|()
block|{
name|qApp
operator|->
name|setStyleSheet
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QPushButton
name|p1
decl_stmt|,
name|p2
decl_stmt|;
name|QPushButton
modifier|*
name|pb
init|=
operator|new
name|QPushButton
argument_list|(
operator|&
name|p1
argument_list|)
decl_stmt|;
name|QPushButton
modifier|&
name|c1
init|=
operator|*
name|pb
decl_stmt|;
name|c1
operator|.
name|setStyleSheet
argument_list|(
literal|"background: gray"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|BACKGROUND
argument_list|(
name|c1
argument_list|)
operator|==
name|QColor
argument_list|(
literal|"gray"
argument_list|)
argument_list|)
expr_stmt|;
name|c1
operator|.
name|setParent
argument_list|(
operator|&
name|p2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|BACKGROUND
argument_list|(
name|c1
argument_list|)
operator|==
name|QColor
argument_list|(
literal|"gray"
argument_list|)
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|setStyleSheet
argument_list|(
literal|"* { color: white }"
argument_list|)
expr_stmt|;
name|c1
operator|.
name|setParent
argument_list|(
operator|&
name|p1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|BACKGROUND
argument_list|(
name|c1
argument_list|)
operator|==
name|QColor
argument_list|(
literal|"gray"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|COLOR
argument_list|(
name|c1
argument_list|)
operator|==
name|QColor
argument_list|(
literal|"white"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|repolish
name|void
name|tst_QStyleSheetStyle
operator|::
name|repolish
parameter_list|()
block|{
name|qApp
operator|->
name|setStyleSheet
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QPushButton
name|p1
decl_stmt|;
name|p1
operator|.
name|setStyleSheet
argument_list|(
literal|"color: red; background: white"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|BACKGROUND
argument_list|(
name|p1
argument_list|)
operator|==
name|QColor
argument_list|(
literal|"white"
argument_list|)
argument_list|)
expr_stmt|;
name|p1
operator|.
name|setStyleSheet
argument_list|(
literal|"background: white"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|COLOR
argument_list|(
name|p1
argument_list|)
operator|==
name|APPCOLOR
argument_list|(
name|p1
argument_list|)
argument_list|)
expr_stmt|;
name|p1
operator|.
name|setStyleSheet
argument_list|(
literal|"color: red"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|COLOR
argument_list|(
name|p1
argument_list|)
operator|==
name|QColor
argument_list|(
literal|"red"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|BACKGROUND
argument_list|(
name|p1
argument_list|)
operator|==
name|APPBACKGROUND
argument_list|(
name|p1
argument_list|)
argument_list|)
expr_stmt|;
name|p1
operator|.
name|setStyleSheet
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|COLOR
argument_list|(
name|p1
argument_list|)
operator|==
name|APPCOLOR
argument_list|(
name|p1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|BACKGROUND
argument_list|(
name|p1
argument_list|)
operator|==
name|APPBACKGROUND
argument_list|(
name|p1
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|widgetStyle
name|void
name|tst_QStyleSheetStyle
operator|::
name|widgetStyle
parameter_list|()
block|{
name|qApp
operator|->
name|setStyleSheet
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|window1
init|=
operator|new
name|QWidget
decl_stmt|;
name|window1
operator|->
name|setObjectName
argument_list|(
literal|"window1"
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|widget1
init|=
operator|new
name|QWidget
argument_list|(
name|window1
argument_list|)
decl_stmt|;
name|widget1
operator|->
name|setObjectName
argument_list|(
literal|"widget1"
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|widget2
init|=
operator|new
name|QWidget
decl_stmt|;
name|widget2
operator|->
name|setObjectName
argument_list|(
literal|"widget2"
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|window2
init|=
operator|new
name|QWidget
decl_stmt|;
name|window2
operator|->
name|setObjectName
argument_list|(
literal|"window2"
argument_list|)
expr_stmt|;
name|window1
operator|->
name|ensurePolished
argument_list|()
expr_stmt|;
name|window2
operator|->
name|ensurePolished
argument_list|()
expr_stmt|;
name|widget1
operator|->
name|ensurePolished
argument_list|()
expr_stmt|;
name|widget2
operator|->
name|ensurePolished
argument_list|()
expr_stmt|;
name|QWindowsStyle
name|style1
decl_stmt|,
name|style2
decl_stmt|;
name|QPointer
argument_list|<
name|QStyle
argument_list|>
name|pstyle1
init|=
operator|&
name|style1
decl_stmt|;
name|QPointer
argument_list|<
name|QStyle
argument_list|>
name|pstyle2
init|=
operator|&
name|style2
decl_stmt|;
name|QStyle
modifier|*
name|appStyle
init|=
name|qApp
operator|->
name|style
argument_list|()
decl_stmt|;
comment|// Sanity: By default, a window inherits the application style
name|QCOMPARE
argument_list|(
name|appStyle
argument_list|,
name|window1
operator|->
name|style
argument_list|()
argument_list|)
expr_stmt|;
comment|// Setting a custom style on a widget
name|window1
operator|->
name|setStyle
argument_list|(
operator|&
name|style1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
cast|static_cast
argument_list|<
name|QStyle
operator|*
argument_list|>
argument_list|(
operator|&
name|style1
argument_list|)
argument_list|,
name|window1
operator|->
name|style
argument_list|()
argument_list|)
expr_stmt|;
comment|// Setting another style must not delete the older style
name|window1
operator|->
name|setStyle
argument_list|(
operator|&
name|style2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
cast|static_cast
argument_list|<
name|QStyle
operator|*
argument_list|>
argument_list|(
operator|&
name|style2
argument_list|)
argument_list|,
name|window1
operator|->
name|style
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|pstyle1
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
comment|// case we have not already crashed
comment|// Setting null style must make it follow the qApp style
name|window1
operator|->
name|setStyle
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window1
operator|->
name|style
argument_list|()
argument_list|,
name|appStyle
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|pstyle2
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
comment|// case we have not already crashed
name|QVERIFY
argument_list|(
operator|!
name|pstyle2
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
comment|// case we have not already crashed
comment|// Sanity: Set the stylesheet
name|window1
operator|->
name|setStyleSheet
argument_list|(
literal|":x { }"
argument_list|)
expr_stmt|;
name|QPointer
argument_list|<
name|QStyleSheetStyle
argument_list|>
name|proxy
init|=
operator|(
name|QStyleSheetStyle
operator|*
operator|)
name|window1
operator|->
name|style
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|proxy
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|->
name|metaObject
argument_list|()
operator|->
name|className
argument_list|()
argument_list|,
literal|"QStyleSheetStyle"
argument_list|)
expr_stmt|;
comment|// must be our proxy
name|QVERIFY
argument_list|(
name|proxy
operator|->
name|base
operator|==
literal|0
argument_list|)
expr_stmt|;
comment|// and follows the application
comment|// Set the stylesheet
name|window1
operator|->
name|setStyle
argument_list|(
operator|&
name|style1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|proxy
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
comment|// we create a new one each time
name|proxy
operator|=
operator|(
name|QStyleSheetStyle
operator|*
operator|)
name|window1
operator|->
name|style
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|->
name|metaObject
argument_list|()
operator|->
name|className
argument_list|()
argument_list|,
literal|"QStyleSheetStyle"
argument_list|)
expr_stmt|;
comment|// it is a proxy
name|QCOMPARE
argument_list|(
name|proxy
operator|->
name|baseStyle
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QStyle
operator|*
argument_list|>
argument_list|(
operator|&
name|style1
argument_list|)
argument_list|)
expr_stmt|;
comment|// must have been replaced with the new one
comment|// Update the stylesheet and check nothing changes
name|window1
operator|->
name|setStyleSheet
argument_list|(
literal|":y { }"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window1
operator|->
name|style
argument_list|()
operator|->
name|metaObject
argument_list|()
operator|->
name|className
argument_list|()
argument_list|,
literal|"QStyleSheetStyle"
argument_list|)
expr_stmt|;
comment|// it is a proxy
name|QCOMPARE
argument_list|(
name|proxy
operator|->
name|baseStyle
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QStyle
operator|*
argument_list|>
argument_list|(
operator|&
name|style1
argument_list|)
argument_list|)
expr_stmt|;
comment|// the same guy
comment|// Remove the stylesheet
name|proxy
operator|=
operator|(
name|QStyleSheetStyle
operator|*
operator|)
name|window1
operator|->
name|style
argument_list|()
expr_stmt|;
name|window1
operator|->
name|setStyleSheet
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|proxy
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
comment|// should have disappeared
name|QCOMPARE
argument_list|(
name|window1
operator|->
name|style
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QStyle
operator|*
argument_list|>
argument_list|(
operator|&
name|style1
argument_list|)
argument_list|)
expr_stmt|;
comment|// its restored
comment|// Style Sheet existing children propagation
name|window1
operator|->
name|setStyleSheet
argument_list|(
literal|":z { }"
argument_list|)
expr_stmt|;
name|proxy
operator|=
operator|(
name|QStyleSheetStyle
operator|*
operator|)
name|window1
operator|->
name|style
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|->
name|metaObject
argument_list|()
operator|->
name|className
argument_list|()
argument_list|,
literal|"QStyleSheetStyle"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window1
operator|->
name|style
argument_list|()
argument_list|,
name|widget1
operator|->
name|style
argument_list|()
argument_list|)
expr_stmt|;
comment|// proxy must have propagated
name|QCOMPARE
argument_list|(
name|widget2
operator|->
name|style
argument_list|()
argument_list|,
name|appStyle
argument_list|)
expr_stmt|;
comment|// widget2 is following the app style
comment|// Style Sheet automatic propagation to new children
name|widget2
operator|->
name|setParent
argument_list|(
name|window1
argument_list|)
expr_stmt|;
comment|// reparent in!
name|QCOMPARE
argument_list|(
name|window1
operator|->
name|style
argument_list|()
argument_list|,
name|widget2
operator|->
name|style
argument_list|()
argument_list|)
expr_stmt|;
comment|// proxy must have propagated
comment|// Style Sheet automatic removal from children who abandoned their parents
name|window2
operator|->
name|setStyle
argument_list|(
operator|&
name|style2
argument_list|)
expr_stmt|;
name|widget2
operator|->
name|setParent
argument_list|(
name|window2
argument_list|)
expr_stmt|;
comment|// reparent
name|QCOMPARE
argument_list|(
name|widget2
operator|->
name|style
argument_list|()
argument_list|,
name|appStyle
argument_list|)
expr_stmt|;
comment|// widget2 is following the app style
comment|// Style Sheet propagation on a child widget with a custom style
name|widget2
operator|->
name|setStyle
argument_list|(
operator|&
name|style1
argument_list|)
expr_stmt|;
name|window2
operator|->
name|setStyleSheet
argument_list|(
literal|":x { }"
argument_list|)
expr_stmt|;
name|proxy
operator|=
operator|(
name|QStyleSheetStyle
operator|*
operator|)
name|widget2
operator|->
name|style
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|->
name|metaObject
argument_list|()
operator|->
name|className
argument_list|()
argument_list|,
literal|"QStyleSheetStyle"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|->
name|baseStyle
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QStyle
operator|*
argument_list|>
argument_list|(
operator|&
name|style1
argument_list|)
argument_list|)
expr_stmt|;
comment|// Style Sheet propagation on a child widget with a custom style already set
name|window2
operator|->
name|setStyleSheet
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window2
operator|->
name|style
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QStyle
operator|*
argument_list|>
argument_list|(
operator|&
name|style2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget2
operator|->
name|style
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QStyle
operator|*
argument_list|>
argument_list|(
operator|&
name|style1
argument_list|)
argument_list|)
expr_stmt|;
name|widget2
operator|->
name|setStyle
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|window2
operator|->
name|setStyleSheet
argument_list|(
literal|":x { }"
argument_list|)
expr_stmt|;
name|widget2
operator|->
name|setStyle
argument_list|(
operator|&
name|style1
argument_list|)
expr_stmt|;
name|proxy
operator|=
operator|(
name|QStyleSheetStyle
operator|*
operator|)
name|widget2
operator|->
name|style
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|->
name|metaObject
argument_list|()
operator|->
name|className
argument_list|()
argument_list|,
literal|"QStyleSheetStyle"
argument_list|)
expr_stmt|;
comment|// QApplication, QWidget both having a style sheet
comment|// clean everything out
name|window1
operator|->
name|setStyle
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|window1
operator|->
name|setStyleSheet
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|window2
operator|->
name|setStyle
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|window2
operator|->
name|setStyleSheet
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|setStyle
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|setStyleSheet
argument_list|(
literal|"may_insanity_prevail { }"
argument_list|)
expr_stmt|;
comment|// app has stylesheet
name|QCOMPARE
argument_list|(
name|window1
operator|->
name|style
argument_list|()
argument_list|,
name|qApp
operator|->
name|style
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window1
operator|->
name|style
argument_list|()
operator|->
name|metaObject
argument_list|()
operator|->
name|className
argument_list|()
argument_list|,
literal|"QStyleSheetStyle"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget1
operator|->
name|style
argument_list|()
operator|->
name|metaObject
argument_list|()
operator|->
name|className
argument_list|()
argument_list|,
literal|"QStyleSheetStyle"
argument_list|)
expr_stmt|;
comment|// check the child
name|window1
operator|->
name|setStyleSheet
argument_list|(
literal|"may_more_insanity_prevail { }"
argument_list|)
expr_stmt|;
comment|// window has stylesheet
name|QCOMPARE
argument_list|(
name|window1
operator|->
name|style
argument_list|()
operator|->
name|metaObject
argument_list|()
operator|->
name|className
argument_list|()
argument_list|,
literal|"QStyleSheetStyle"
argument_list|)
expr_stmt|;
comment|// a new one
name|QCOMPARE
argument_list|(
name|widget1
operator|->
name|style
argument_list|()
argument_list|,
name|window1
operator|->
name|style
argument_list|()
argument_list|)
expr_stmt|;
comment|// child follows...
name|proxy
operator|=
operator|(
name|QStyleSheetStyle
operator|*
operator|)
name|window1
operator|->
name|style
argument_list|()
expr_stmt|;
name|QWindowsStyle
modifier|*
name|newStyle
init|=
operator|new
name|QWindowsStyle
decl_stmt|;
name|qApp
operator|->
name|setStyle
argument_list|(
name|newStyle
argument_list|)
expr_stmt|;
comment|// set a custom style on app
name|proxy
operator|=
operator|(
name|QStyleSheetStyle
operator|*
operator|)
name|window1
operator|->
name|style
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|->
name|baseStyle
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QStyle
operator|*
argument_list|>
argument_list|(
name|newStyle
argument_list|)
argument_list|)
expr_stmt|;
comment|// magic ;) the widget still follows the application
name|QCOMPARE
argument_list|(
cast|static_cast
argument_list|<
name|QStyle
operator|*
argument_list|>
argument_list|(
name|proxy
argument_list|)
argument_list|,
name|widget1
operator|->
name|style
argument_list|()
argument_list|)
expr_stmt|;
comment|// child still follows...
name|window1
operator|->
name|setStyleSheet
argument_list|(
literal|""
argument_list|)
expr_stmt|;
comment|// remove stylesheet
name|QCOMPARE
argument_list|(
name|window1
operator|->
name|style
argument_list|()
argument_list|,
name|qApp
operator|->
name|style
argument_list|()
argument_list|)
expr_stmt|;
comment|// is this cool or what
name|QCOMPARE
argument_list|(
name|widget1
operator|->
name|style
argument_list|()
argument_list|,
name|qApp
operator|->
name|style
argument_list|()
argument_list|)
expr_stmt|;
comment|// annoying child follows...
name|QWindowsStyle
name|wndStyle
decl_stmt|;
name|window1
operator|->
name|setStyle
argument_list|(
operator|&
name|wndStyle
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window1
operator|->
name|style
argument_list|()
operator|->
name|metaObject
argument_list|()
operator|->
name|className
argument_list|()
argument_list|,
literal|"QStyleSheetStyle"
argument_list|)
expr_stmt|;
comment|// auto wraps it
name|QCOMPARE
argument_list|(
name|widget1
operator|->
name|style
argument_list|()
argument_list|,
name|window1
operator|->
name|style
argument_list|()
argument_list|)
expr_stmt|;
comment|// and auto propagates to child
name|qApp
operator|->
name|setStyleSheet
argument_list|(
literal|""
argument_list|)
expr_stmt|;
comment|// remove the app stylesheet
name|QCOMPARE
argument_list|(
name|window1
operator|->
name|style
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QStyle
operator|*
argument_list|>
argument_list|(
operator|&
name|wndStyle
argument_list|)
argument_list|)
expr_stmt|;
comment|// auto dewrap
name|QCOMPARE
argument_list|(
name|widget1
operator|->
name|style
argument_list|()
argument_list|,
name|qApp
operator|->
name|style
argument_list|()
argument_list|)
expr_stmt|;
comment|// and child state is restored
name|window1
operator|->
name|setStyle
argument_list|(
literal|0
argument_list|)
expr_stmt|;
comment|// let sanity prevail
name|qApp
operator|->
name|setStyle
argument_list|(
literal|0
argument_list|)
expr_stmt|;
operator|delete
name|window1
expr_stmt|;
operator|delete
name|widget2
expr_stmt|;
operator|delete
name|window2
expr_stmt|;
block|}
end_function
begin_function
DECL|function|appStyle
name|void
name|tst_QStyleSheetStyle
operator|::
name|appStyle
parameter_list|()
block|{
name|qApp
operator|->
name|setStyleSheet
argument_list|(
literal|""
argument_list|)
expr_stmt|;
comment|// qApp style can never be 0
name|QVERIFY
argument_list|(
name|QApplication
operator|::
name|style
argument_list|()
operator|!=
literal|0
argument_list|)
expr_stmt|;
name|QPointer
argument_list|<
name|QStyle
argument_list|>
name|style1
init|=
operator|new
name|QWindowsStyle
decl_stmt|;
name|QPointer
argument_list|<
name|QStyle
argument_list|>
name|style2
init|=
operator|new
name|QWindowsStyle
decl_stmt|;
name|qApp
operator|->
name|setStyle
argument_list|(
name|style1
argument_list|)
expr_stmt|;
comment|// Basic sanity
name|QVERIFY
argument_list|(
name|qApp
operator|->
name|style
argument_list|()
operator|==
name|style1
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|setStyle
argument_list|(
name|style2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|style1
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
comment|// qApp must have taken ownership and deleted it
comment|// Setting null should not crash
name|qApp
operator|->
name|setStyle
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|qApp
operator|->
name|style
argument_list|()
operator|==
name|style2
argument_list|)
expr_stmt|;
comment|// Set the stylesheet
name|qApp
operator|->
name|setStyleSheet
argument_list|(
literal|"whatever"
argument_list|)
expr_stmt|;
name|QPointer
argument_list|<
name|QStyleSheetStyle
argument_list|>
name|sss
init|=
operator|(
name|QStyleSheetStyle
operator|*
operator|)
name|qApp
operator|->
name|style
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|sss
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|sss
operator|->
name|metaObject
argument_list|()
operator|->
name|className
argument_list|()
argument_list|,
literal|"QStyleSheetStyle"
argument_list|)
expr_stmt|;
comment|// must be our proxy now
name|QVERIFY
argument_list|(
operator|!
name|style2
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
comment|// this should exist as it is the base of the proxy
name|QVERIFY
argument_list|(
name|sss
operator|->
name|baseStyle
argument_list|()
operator|==
name|style2
argument_list|)
expr_stmt|;
name|style1
operator|=
operator|new
name|QWindowsStyle
expr_stmt|;
name|qApp
operator|->
name|setStyle
argument_list|(
name|style1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|style2
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
comment|// should disappear automatically
name|QVERIFY
argument_list|(
name|sss
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
comment|// should disappear automatically
comment|// Update the stylesheet and check nothing changes
name|sss
operator|=
operator|(
name|QStyleSheetStyle
operator|*
operator|)
name|qApp
operator|->
name|style
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|setStyleSheet
argument_list|(
literal|"whatever2"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|qApp
operator|->
name|style
argument_list|()
operator|==
name|sss
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|sss
operator|->
name|baseStyle
argument_list|()
operator|==
name|style1
argument_list|)
expr_stmt|;
comment|// Revert the stylesheet
name|qApp
operator|->
name|setStyleSheet
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|sss
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
comment|// should have disappeared
name|QVERIFY
argument_list|(
name|qApp
operator|->
name|style
argument_list|()
operator|==
name|style1
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|setStyleSheet
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|qApp
operator|->
name|style
argument_list|()
operator|==
name|style1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|dynamicProperty
name|void
name|tst_QStyleSheetStyle
operator|::
name|dynamicProperty
parameter_list|()
block|{
name|qApp
operator|->
name|setStyleSheet
argument_list|(
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|QString
name|appStyle
init|=
name|qApp
operator|->
name|style
argument_list|()
operator|->
name|metaObject
argument_list|()
operator|->
name|className
argument_list|()
decl_stmt|;
name|QPushButton
name|pb1
decl_stmt|,
name|pb2
decl_stmt|;
name|pb1
operator|.
name|setProperty
argument_list|(
literal|"type"
argument_list|,
literal|"critical"
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|setStyleSheet
argument_list|(
literal|"*[class~=\"QPushButton\"] { color: red; } *[type=\"critical\"] { background: white; }"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|COLOR
argument_list|(
name|pb1
argument_list|)
operator|==
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|BACKGROUND
argument_list|(
name|pb1
argument_list|)
operator|==
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|pb2
operator|.
name|setProperty
argument_list|(
literal|"class"
argument_list|,
literal|"critical"
argument_list|)
expr_stmt|;
comment|// dynamic class
name|pb2
operator|.
name|setStyleSheet
argument_list|(
name|QLatin1String
argument_list|(
literal|".critical[style~=\""
argument_list|)
operator|+
name|appStyle
operator|+
literal|"\"] { color: blue }"
argument_list|)
expr_stmt|;
name|pb2
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|COLOR
argument_list|(
name|pb2
argument_list|)
operator|==
name|Qt
operator|::
name|blue
argument_list|)
expr_stmt|;
block|}
end_function
begin_ifdef
ifdef|#
directive|ifdef
name|Q_OS_MAC
end_ifdef
begin_function
DECL|function|layoutSpacing
name|void
name|tst_QStyleSheetStyle
operator|::
name|layoutSpacing
parameter_list|()
block|{
name|qApp
operator|->
name|setStyleSheet
argument_list|(
literal|"* { color: red }"
argument_list|)
expr_stmt|;
name|QCheckBox
name|ck1
decl_stmt|;
name|QCheckBox
name|ck2
decl_stmt|;
name|QWidget
name|window
decl_stmt|;
name|int
name|spacing_widgetstyle
init|=
name|window
operator|.
name|style
argument_list|()
operator|->
name|layoutSpacing
argument_list|(
name|ck1
operator|.
name|sizePolicy
argument_list|()
operator|.
name|controlType
argument_list|()
argument_list|,
name|ck2
operator|.
name|sizePolicy
argument_list|()
operator|.
name|controlType
argument_list|()
argument_list|,
name|Qt
operator|::
name|Vertical
argument_list|)
decl_stmt|;
name|int
name|spacing_style
init|=
name|window
operator|.
name|style
argument_list|()
operator|->
name|layoutSpacing
argument_list|(
name|ck1
operator|.
name|sizePolicy
argument_list|()
operator|.
name|controlType
argument_list|()
argument_list|,
name|ck2
operator|.
name|sizePolicy
argument_list|()
operator|.
name|controlType
argument_list|()
argument_list|,
name|Qt
operator|::
name|Vertical
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|spacing_widgetstyle
argument_list|,
name|spacing_style
argument_list|)
expr_stmt|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_function
DECL|function|qproperty
name|void
name|tst_QStyleSheetStyle
operator|::
name|qproperty
parameter_list|()
block|{
name|QPushButton
name|pb
decl_stmt|;
name|pb
operator|.
name|setStyleSheet
argument_list|(
literal|"QPushButton { qproperty-text: hello; qproperty-checkable: true; qproperty-checked: 1}"
argument_list|)
expr_stmt|;
name|pb
operator|.
name|ensurePolished
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|pb
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"hello"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|pb
operator|.
name|isCheckable
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|pb
operator|.
name|isChecked
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
end_function
begin_namespace
DECL|namespace|ns
namespace|namespace
name|ns
block|{
DECL|class|PushButton1
class|class
name|PushButton1
super|:
specifier|public
name|QPushButton
block|{
name|Q_OBJECT
public|public:
DECL|function|PushButton1
name|PushButton1
parameter_list|()
block|{ }
block|}
class|;
DECL|class|PushButton2
class|class
name|PushButton2
super|:
specifier|public
name|PushButton1
block|{
name|Q_OBJECT
public|public:
DECL|function|PushButton2
name|PushButton2
parameter_list|()
block|{
name|setProperty
argument_list|(
literal|"class"
argument_list|,
literal|"PushButtonTwo PushButtonDuo"
argument_list|)
expr_stmt|;
block|}
block|}
class|;
block|}
end_namespace
begin_function
DECL|function|namespaces
name|void
name|tst_QStyleSheetStyle
operator|::
name|namespaces
parameter_list|()
block|{
name|ns
operator|::
name|PushButton1
name|pb1
decl_stmt|;
name|qApp
operator|->
name|setStyleSheet
argument_list|(
literal|"ns--PushButton1 { background: white }"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|BACKGROUND
argument_list|(
name|pb1
argument_list|)
operator|==
name|QColor
argument_list|(
literal|"white"
argument_list|)
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|setStyleSheet
argument_list|(
literal|".ns--PushButton1 { background: red }"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|BACKGROUND
argument_list|(
name|pb1
argument_list|)
operator|==
name|QColor
argument_list|(
literal|"red"
argument_list|)
argument_list|)
expr_stmt|;
name|ns
operator|::
name|PushButton2
name|pb2
decl_stmt|;
name|qApp
operator|->
name|setStyleSheet
argument_list|(
literal|"ns--PushButton1 { background: blue}"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|BACKGROUND
argument_list|(
name|pb2
argument_list|)
operator|==
name|QColor
argument_list|(
literal|"blue"
argument_list|)
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|setStyleSheet
argument_list|(
literal|"ns--PushButton2 { background: magenta }"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|BACKGROUND
argument_list|(
name|pb2
argument_list|)
operator|==
name|QColor
argument_list|(
literal|"magenta"
argument_list|)
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|setStyleSheet
argument_list|(
literal|".PushButtonTwo { background: white; }"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|BACKGROUND
argument_list|(
name|pb2
argument_list|)
operator|==
name|QColor
argument_list|(
literal|"white"
argument_list|)
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|setStyleSheet
argument_list|(
literal|".PushButtonDuo { background: red; }"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|BACKGROUND
argument_list|(
name|pb2
argument_list|)
operator|==
name|QColor
argument_list|(
literal|"red"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|palettePropagation
name|void
name|tst_QStyleSheetStyle
operator|::
name|palettePropagation
parameter_list|()
block|{
name|qApp
operator|->
name|setStyleSheet
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QGroupBox
name|gb
decl_stmt|;
name|QPushButton
modifier|*
name|push
init|=
operator|new
name|QPushButton
argument_list|(
operator|&
name|gb
argument_list|)
decl_stmt|;
name|QPushButton
modifier|&
name|pb
init|=
operator|*
name|push
decl_stmt|;
name|push
operator|->
name|setText
argument_list|(
literal|"AsdF"
argument_list|)
expr_stmt|;
name|gb
operator|.
name|setStyleSheet
argument_list|(
literal|"QGroupBox { color: red }"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|COLOR
argument_list|(
name|gb
argument_list|)
operator|==
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|COLOR
argument_list|(
name|pb
argument_list|)
operator|==
name|APPCOLOR
argument_list|(
name|pb
argument_list|)
argument_list|)
expr_stmt|;
comment|// palette shouldn't propagate
name|gb
operator|.
name|setStyleSheet
argument_list|(
literal|"QGroupBox * { color: red }"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|COLOR
argument_list|(
name|pb
argument_list|)
operator|==
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|COLOR
argument_list|(
name|gb
argument_list|)
operator|==
name|APPCOLOR
argument_list|(
name|gb
argument_list|)
argument_list|)
expr_stmt|;
name|QWidget
name|window
decl_stmt|;
name|window
operator|.
name|setStyleSheet
argument_list|(
literal|"* { color: white; }"
argument_list|)
expr_stmt|;
name|pb
operator|.
name|setParent
argument_list|(
operator|&
name|window
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|COLOR
argument_list|(
name|pb
argument_list|)
operator|==
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|fontPropagation
name|void
name|tst_QStyleSheetStyle
operator|::
name|fontPropagation
parameter_list|()
block|{
name|qApp
operator|->
name|setStyleSheet
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QComboBox
name|cb
decl_stmt|;
name|cb
operator|.
name|addItem
argument_list|(
literal|"item1"
argument_list|)
expr_stmt|;
name|cb
operator|.
name|addItem
argument_list|(
literal|"item2"
argument_list|)
expr_stmt|;
name|QAbstractItemView
modifier|*
name|popup
init|=
name|cb
operator|.
name|view
argument_list|()
decl_stmt|;
name|int
name|viewFontSize
init|=
name|FONTSIZE
argument_list|(
operator|*
name|popup
argument_list|)
decl_stmt|;
name|cb
operator|.
name|setStyleSheet
argument_list|(
literal|"QComboBox { font-size: 20pt; }"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|FONTSIZE
argument_list|(
name|cb
argument_list|)
operator|==
literal|20
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|FONTSIZE
argument_list|(
operator|*
name|popup
argument_list|)
operator|==
name|viewFontSize
argument_list|)
expr_stmt|;
name|QGroupBox
name|gb
decl_stmt|;
name|QPushButton
modifier|*
name|push
init|=
operator|new
name|QPushButton
argument_list|(
operator|&
name|gb
argument_list|)
decl_stmt|;
name|QPushButton
modifier|&
name|pb
init|=
operator|*
name|push
decl_stmt|;
name|int
name|buttonFontSize
init|=
name|FONTSIZE
argument_list|(
name|pb
argument_list|)
decl_stmt|;
name|int
name|gbFontSize
init|=
name|FONTSIZE
argument_list|(
name|gb
argument_list|)
decl_stmt|;
name|gb
operator|.
name|setStyleSheet
argument_list|(
literal|"QGroupBox { font-size: 20pt }"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|FONTSIZE
argument_list|(
name|gb
argument_list|)
operator|==
literal|20
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|FONTSIZE
argument_list|(
name|pb
argument_list|)
operator|==
name|buttonFontSize
argument_list|)
expr_stmt|;
comment|// font does not propagate
name|gb
operator|.
name|setStyleSheet
argument_list|(
literal|"QGroupBox * { font-size: 20pt; }"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|FONTSIZE
argument_list|(
name|gb
argument_list|)
operator|==
name|gbFontSize
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|FONTSIZE
argument_list|(
name|pb
argument_list|)
operator|==
literal|20
argument_list|)
expr_stmt|;
name|QWidget
name|window
decl_stmt|;
name|window
operator|.
name|setStyleSheet
argument_list|(
literal|"* { font-size: 10pt }"
argument_list|)
expr_stmt|;
name|pb
operator|.
name|setParent
argument_list|(
operator|&
name|window
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|FONTSIZE
argument_list|(
name|pb
argument_list|)
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|window
operator|.
name|setStyleSheet
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|FONTSIZE
argument_list|(
name|pb
argument_list|)
operator|==
name|buttonFontSize
argument_list|)
expr_stmt|;
name|QTabWidget
name|tw
decl_stmt|;
name|tw
operator|.
name|setStyleSheet
argument_list|(
literal|"QTabWidget { font-size: 20pt; }"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|FONTSIZE
argument_list|(
name|tw
argument_list|)
operator|==
literal|20
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|child
init|=
name|qFindChild
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
operator|&
name|tw
argument_list|,
literal|"qt_tabwidget_tabbar"
argument_list|)
decl_stmt|;
name|QVERIFY2
argument_list|(
name|child
argument_list|,
literal|"QTabWidget did not contain a widget named \"qt_tabwidget_tabbar\""
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|FONTSIZE
argument_list|(
operator|*
name|child
argument_list|)
operator|==
literal|20
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|onWidgetDestroyed
name|void
name|tst_QStyleSheetStyle
operator|::
name|onWidgetDestroyed
parameter_list|()
block|{
name|qApp
operator|->
name|setStyleSheet
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QLabel
modifier|*
name|l
init|=
operator|new
name|QLabel
decl_stmt|;
name|l
operator|->
name|setStyleSheet
argument_list|(
literal|"QLabel { color: red }"
argument_list|)
expr_stmt|;
name|QPointer
argument_list|<
name|QStyleSheetStyle
argument_list|>
name|ss
init|=
operator|(
name|QStyleSheetStyle
operator|*
operator|)
name|l
operator|->
name|style
argument_list|()
decl_stmt|;
operator|delete
name|l
expr_stmt|;
name|QVERIFY
argument_list|(
name|ss
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|fontPrecedence
name|void
name|tst_QStyleSheetStyle
operator|::
name|fontPrecedence
parameter_list|()
block|{
name|QLineEdit
name|edit
decl_stmt|;
name|edit
operator|.
name|show
argument_list|()
expr_stmt|;
name|QFont
name|font
decl_stmt|;
name|QVERIFY
argument_list|(
name|FONTSIZE
argument_list|(
name|edit
argument_list|)
operator|!=
literal|22
argument_list|)
expr_stmt|;
comment|// Sanity check to make sure this test makes sense.
name|edit
operator|.
name|setStyleSheet
argument_list|(
literal|"QLineEdit { font-size: 22pt; }"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|FONTSIZE
argument_list|(
name|edit
argument_list|)
argument_list|,
literal|22
argument_list|)
expr_stmt|;
name|font
operator|.
name|setPointSize
argument_list|(
literal|16
argument_list|)
expr_stmt|;
name|edit
operator|.
name|setFont
argument_list|(
name|font
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|FONTSIZE
argument_list|(
name|edit
argument_list|)
argument_list|,
literal|22
argument_list|)
expr_stmt|;
name|edit
operator|.
name|setStyleSheet
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|FONTSIZE
argument_list|(
name|edit
argument_list|)
argument_list|,
literal|16
argument_list|)
expr_stmt|;
name|font
operator|.
name|setPointSize
argument_list|(
literal|18
argument_list|)
expr_stmt|;
name|edit
operator|.
name|setFont
argument_list|(
name|font
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|FONTSIZE
argument_list|(
name|edit
argument_list|)
argument_list|,
literal|18
argument_list|)
expr_stmt|;
name|edit
operator|.
name|setStyleSheet
argument_list|(
literal|"QLineEdit { font-size: 20pt; }"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|FONTSIZE
argument_list|(
name|edit
argument_list|)
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|edit
operator|.
name|setStyleSheet
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|FONTSIZE
argument_list|(
name|edit
argument_list|)
argument_list|,
literal|18
argument_list|)
expr_stmt|;
name|edit
operator|.
name|hide
argument_list|()
expr_stmt|;
name|QLineEdit
name|edit2
decl_stmt|;
name|edit2
operator|.
name|setReadOnly
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|edit2
operator|.
name|setStyleSheet
argument_list|(
literal|"QLineEdit { font-size: 24pt; } QLineEdit:read-only { font-size: 26pt; }"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|FONTSIZE
argument_list|(
name|edit2
argument_list|)
argument_list|,
literal|26
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|// Ensure primary will only return true if the color covers more than 50% of pixels
end_comment
begin_function
DECL|function|testForColors
specifier|static
name|bool
name|testForColors
parameter_list|(
specifier|const
name|QImage
modifier|&
name|image
parameter_list|,
specifier|const
name|QColor
modifier|&
name|color
parameter_list|,
name|bool
name|ensurePrimary
init|=
literal|false
parameter_list|)
block|{
name|int
name|count
init|=
literal|0
decl_stmt|;
name|QRgb
name|rgb
init|=
name|color
operator|.
name|rgba
argument_list|()
decl_stmt|;
name|int
name|totalCount
init|=
name|image
operator|.
name|height
argument_list|()
operator|*
name|image
operator|.
name|width
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|y
init|=
literal|0
init|;
name|y
operator|<
name|image
operator|.
name|height
argument_list|()
condition|;
operator|++
name|y
control|)
block|{
for|for
control|(
name|int
name|x
init|=
literal|0
init|;
name|x
operator|<
name|image
operator|.
name|width
argument_list|()
condition|;
operator|++
name|x
control|)
block|{
comment|// Because of antialiasing we allow a certain range of errors here.
name|QRgb
name|pixel
init|=
name|image
operator|.
name|pixel
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
decl_stmt|;
if|if
condition|(
name|qAbs
argument_list|(
call|(
name|int
call|)
argument_list|(
name|pixel
operator|&
literal|0xff
argument_list|)
operator|-
call|(
name|int
call|)
argument_list|(
name|rgb
operator|&
literal|0xff
argument_list|)
argument_list|)
operator|+
name|qAbs
argument_list|(
call|(
name|int
call|)
argument_list|(
operator|(
name|pixel
operator|&
literal|0xff00
operator|)
operator|>>
literal|8
argument_list|)
operator|-
call|(
name|int
call|)
argument_list|(
operator|(
name|rgb
operator|&
literal|0xff00
operator|)
operator|>>
literal|8
argument_list|)
argument_list|)
operator|+
name|qAbs
argument_list|(
call|(
name|int
call|)
argument_list|(
operator|(
name|pixel
operator|&
literal|0xff0000
operator|)
operator|>>
literal|16
argument_list|)
operator|-
call|(
name|int
call|)
argument_list|(
operator|(
name|rgb
operator|&
literal|0xff0000
operator|)
operator|>>
literal|16
argument_list|)
argument_list|)
operator|<=
literal|50
condition|)
block|{
name|count
operator|++
expr_stmt|;
if|if
condition|(
operator|!
name|ensurePrimary
operator|&&
name|count
operator|>=
literal|10
condition|)
return|return
literal|true
return|;
elseif|else
if|if
condition|(
name|count
operator|>
name|totalCount
operator|/
literal|2
condition|)
return|return
literal|true
return|;
block|}
block|}
block|}
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|focusColors
name|void
name|tst_QStyleSheetStyle
operator|::
name|focusColors
parameter_list|()
block|{
comment|// Tests if colors can be changed by altering the focus of the widget.
comment|// To avoid messy pixel-by-pixel comparison, we assume that the goal
comment|// is reached if at least ten pixels of the right color can be found in
comment|// the image.
comment|// For this reason, we use unusual and extremely ugly colors! :-)
if|#
directive|if
operator|!
name|defined
argument_list|(
name|Q_OS_WIN32
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|Q_OS_MAC
argument_list|)
operator|&&
operator|!
operator|(
name|defined
argument_list|(
name|Q_OS_LINUX
argument_list|)
operator|&&
name|defined
argument_list|(
name|Q_CC_GNU
argument_list|)
expr|\
operator|&&
operator|!
name|defined
argument_list|(
name|Q_CC_INTEL
argument_list|)
operator|)
name|QSKIP
argument_list|(
literal|"This is a fragile test which fails on many esoteric platforms "
literal|"because of focus problems. "
literal|"That doesn't mean that the feature doesn't work in practice."
argument_list|,
name|SkipAll
argument_list|)
expr_stmt|;
endif|#
directive|endif
comment|/*  Disabled changing style in order not to mess with the application style #ifdef Q_OS_MAC     int styleCount = 3;     QStyle *styles[3]; #else     int styleCount = 2;     QStyle *styles[2]; #endif      styles[0] = new QPlastiqueStyle;     styles[1] = new QWindowsStyle;  #ifdef Q_OS_MAC     styles[2] = new QMacStyle; #endif       for (int i = 0; i< styleCount; ++i) {         qApp->setStyle(styles[i]); */
name|QList
argument_list|<
name|QWidget
modifier|*
argument_list|>
name|widgets
decl_stmt|;
name|widgets
operator|<<
operator|new
name|QPushButton
argument_list|(
literal|"TESTING"
argument_list|)
expr_stmt|;
name|widgets
operator|<<
operator|new
name|QLineEdit
argument_list|(
literal|"TESTING"
argument_list|)
expr_stmt|;
name|widgets
operator|<<
operator|new
name|QLabel
argument_list|(
literal|"TESTING"
argument_list|)
expr_stmt|;
name|QSpinBox
modifier|*
name|spinbox
init|=
operator|new
name|QSpinBox
decl_stmt|;
name|spinbox
operator|->
name|setValue
argument_list|(
literal|8888
argument_list|)
expr_stmt|;
name|widgets
operator|<<
name|spinbox
expr_stmt|;
name|QComboBox
modifier|*
name|combobox
init|=
operator|new
name|QComboBox
decl_stmt|;
name|combobox
operator|->
name|setEditable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|combobox
operator|->
name|addItems
argument_list|(
name|QStringList
argument_list|()
operator|<<
literal|"TESTING"
argument_list|)
expr_stmt|;
name|widgets
operator|<<
name|combobox
expr_stmt|;
name|widgets
operator|<<
operator|new
name|QLabel
argument_list|(
literal|"TESTING"
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_QWS
comment|// QWS has its own special focus logic which is slightly different
comment|// and I don't dare change it at this point, because someone will
comment|// be relying on it. It means that setFocus() on a NoFocus widget (i.e.
comment|// a QLabel) will not work before the window is activated.
name|widgets
index|[
literal|2
index|]
operator|->
name|setFocusPolicy
argument_list|(
name|Qt
operator|::
name|StrongFocus
argument_list|)
expr_stmt|;
endif|#
directive|endif
foreach|foreach
control|(
name|QWidget
modifier|*
name|widget
decl|,
name|widgets
control|)
block|{
name|QDialog
name|frame
decl_stmt|;
name|QLayout
modifier|*
name|layout
init|=
operator|new
name|QGridLayout
decl_stmt|;
name|QLineEdit
modifier|*
name|dummy
init|=
operator|new
name|QLineEdit
decl_stmt|;
comment|// Avoids initial focus.
name|widget
operator|->
name|setStyleSheet
argument_list|(
literal|"*:focus { border:none; background: #e8ff66; color: #ff0084 }"
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|dummy
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|widget
argument_list|)
expr_stmt|;
name|frame
operator|.
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
name|frame
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|frame
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|frame
argument_list|)
expr_stmt|;
name|widget
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QImage
name|image
argument_list|(
name|frame
operator|.
name|width
argument_list|()
argument_list|,
name|frame
operator|.
name|height
argument_list|()
argument_list|,
name|QImage
operator|::
name|Format_ARGB32
argument_list|)
decl_stmt|;
name|frame
operator|.
name|render
argument_list|(
operator|&
name|image
argument_list|)
expr_stmt|;
if|if
condition|(
name|image
operator|.
name|depth
argument_list|()
operator|<
literal|24
condition|)
block|{
name|QSKIP
argument_list|(
literal|"Test doesn't support color depth< 24"
argument_list|,
name|SkipAll
argument_list|)
expr_stmt|;
block|}
name|QVERIFY2
argument_list|(
name|testForColors
argument_list|(
name|image
argument_list|,
name|QColor
argument_list|(
literal|0xe8
argument_list|,
literal|0xff
argument_list|,
literal|0x66
argument_list|)
argument_list|)
argument_list|,
operator|(
name|QString
operator|::
name|fromLatin1
argument_list|(
name|widget
operator|->
name|metaObject
argument_list|()
operator|->
name|className
argument_list|()
argument_list|)
operator|+
literal|" did not contain background color #e8ff66, using style "
operator|+
name|QString
operator|::
name|fromLatin1
argument_list|(
name|qApp
operator|->
name|style
argument_list|()
operator|->
name|metaObject
argument_list|()
operator|->
name|className
argument_list|()
argument_list|)
operator|)
operator|.
name|toLocal8Bit
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY2
argument_list|(
name|testForColors
argument_list|(
name|image
argument_list|,
name|QColor
argument_list|(
literal|0xff
argument_list|,
literal|0x00
argument_list|,
literal|0x84
argument_list|)
argument_list|)
argument_list|,
operator|(
name|QString
operator|::
name|fromLatin1
argument_list|(
name|widget
operator|->
name|metaObject
argument_list|()
operator|->
name|className
argument_list|()
argument_list|)
operator|+
literal|" did not contain text color #ff0084, using style "
operator|+
name|QString
operator|::
name|fromLatin1
argument_list|(
name|qApp
operator|->
name|style
argument_list|()
operator|->
name|metaObject
argument_list|()
operator|->
name|className
argument_list|()
argument_list|)
operator|)
operator|.
name|toLocal8Bit
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|//  }
block|}
end_function
begin_function
DECL|function|hoverColors
name|void
name|tst_QStyleSheetStyle
operator|::
name|hoverColors
parameter_list|()
block|{
if|if
condition|(
operator|!
name|PlatformQuirks
operator|::
name|haveMouseCursor
argument_list|()
condition|)
name|QSKIP
argument_list|(
literal|"No mouse Cursor on this platform"
argument_list|,
name|SkipAll
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|QWidget
modifier|*
argument_list|>
name|widgets
decl_stmt|;
name|widgets
operator|<<
operator|new
name|QPushButton
argument_list|(
literal|"TESTING"
argument_list|)
expr_stmt|;
name|widgets
operator|<<
operator|new
name|QLineEdit
argument_list|(
literal|"TESTING"
argument_list|)
expr_stmt|;
name|widgets
operator|<<
operator|new
name|QLabel
argument_list|(
literal|"TESTING"
argument_list|)
expr_stmt|;
name|QSpinBox
modifier|*
name|spinbox
init|=
operator|new
name|QSpinBox
decl_stmt|;
name|spinbox
operator|->
name|setValue
argument_list|(
literal|8888
argument_list|)
expr_stmt|;
name|widgets
operator|<<
name|spinbox
expr_stmt|;
name|QComboBox
modifier|*
name|combobox
init|=
operator|new
name|QComboBox
decl_stmt|;
name|combobox
operator|->
name|setEditable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|combobox
operator|->
name|addItems
argument_list|(
name|QStringList
argument_list|()
operator|<<
literal|"TESTING"
argument_list|)
expr_stmt|;
name|widgets
operator|<<
name|combobox
expr_stmt|;
name|widgets
operator|<<
operator|new
name|QLabel
argument_list|(
literal|"<b>TESTING</b>"
argument_list|)
expr_stmt|;
foreach|foreach
control|(
name|QWidget
modifier|*
name|widget
decl|,
name|widgets
control|)
block|{
comment|//without Qt::X11BypassWindowManagerHint the window manager may move the window after we moved the cursor
name|QDialog
name|frame
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|X11BypassWindowManagerHint
argument_list|)
decl_stmt|;
name|QLayout
modifier|*
name|layout
init|=
operator|new
name|QGridLayout
decl_stmt|;
name|QLineEdit
modifier|*
name|dummy
init|=
operator|new
name|QLineEdit
decl_stmt|;
name|widget
operator|->
name|setStyleSheet
argument_list|(
literal|"*:hover { border:none; background: #e8ff66; color: #ff0084 }"
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|dummy
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|widget
argument_list|)
expr_stmt|;
name|frame
operator|.
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
name|frame
operator|.
name|show
argument_list|()
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_QWS
comment|//QWS does not implement enter/leave when windows are shown underneath the cursor
name|QCursor
operator|::
name|setPos
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|frame
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|frame
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|60
argument_list|)
expr_stmt|;
comment|//move the mouse inside the widget, it should be colored
name|QTest
operator|::
name|mouseMove
argument_list|(
name|widget
argument_list|,
name|QPoint
argument_list|(
literal|6
argument_list|,
literal|6
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|60
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|widget
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_UnderMouse
argument_list|)
argument_list|)
expr_stmt|;
name|QImage
name|image
argument_list|(
name|frame
operator|.
name|width
argument_list|()
argument_list|,
name|frame
operator|.
name|height
argument_list|()
argument_list|,
name|QImage
operator|::
name|Format_ARGB32
argument_list|)
decl_stmt|;
name|frame
operator|.
name|render
argument_list|(
operator|&
name|image
argument_list|)
expr_stmt|;
name|QVERIFY2
argument_list|(
name|testForColors
argument_list|(
name|image
argument_list|,
name|QColor
argument_list|(
literal|0xe8
argument_list|,
literal|0xff
argument_list|,
literal|0x66
argument_list|)
argument_list|)
argument_list|,
operator|(
name|QString
operator|::
name|fromLatin1
argument_list|(
name|widget
operator|->
name|metaObject
argument_list|()
operator|->
name|className
argument_list|()
argument_list|)
operator|+
literal|" did not contain background color #e8ff66"
operator|)
operator|.
name|toLocal8Bit
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY2
argument_list|(
name|testForColors
argument_list|(
name|image
argument_list|,
name|QColor
argument_list|(
literal|0xff
argument_list|,
literal|0x00
argument_list|,
literal|0x84
argument_list|)
argument_list|)
argument_list|,
operator|(
name|QString
operator|::
name|fromLatin1
argument_list|(
name|widget
operator|->
name|metaObject
argument_list|()
operator|->
name|className
argument_list|()
argument_list|)
operator|+
literal|" did not contain text color #ff0084"
operator|)
operator|.
name|toLocal8Bit
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|)
expr_stmt|;
comment|//move the mouse outside the widget, it should NOT be colored
name|QTest
operator|::
name|mouseMove
argument_list|(
name|dummy
argument_list|,
name|QPoint
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|60
argument_list|)
expr_stmt|;
name|frame
operator|.
name|render
argument_list|(
operator|&
name|image
argument_list|)
expr_stmt|;
name|QVERIFY2
argument_list|(
operator|!
name|testForColors
argument_list|(
name|image
argument_list|,
name|QColor
argument_list|(
literal|0xe8
argument_list|,
literal|0xff
argument_list|,
literal|0x66
argument_list|)
argument_list|)
argument_list|,
operator|(
name|QString
operator|::
name|fromLatin1
argument_list|(
name|widget
operator|->
name|metaObject
argument_list|()
operator|->
name|className
argument_list|()
argument_list|)
operator|+
literal|" did contain background color #e8ff66"
operator|)
operator|.
name|toLocal8Bit
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY2
argument_list|(
operator|!
name|testForColors
argument_list|(
name|image
argument_list|,
name|QColor
argument_list|(
literal|0xff
argument_list|,
literal|0x00
argument_list|,
literal|0x84
argument_list|)
argument_list|)
argument_list|,
operator|(
name|QString
operator|::
name|fromLatin1
argument_list|(
name|widget
operator|->
name|metaObject
argument_list|()
operator|->
name|className
argument_list|()
argument_list|)
operator|+
literal|" did contain text color #ff0084"
operator|)
operator|.
name|toLocal8Bit
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|)
expr_stmt|;
comment|//move the mouse again inside the widget, it should be colored
name|QTest
operator|::
name|mouseMove
argument_list|(
name|widget
argument_list|,
name|QPoint
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|60
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|widget
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_UnderMouse
argument_list|)
argument_list|)
expr_stmt|;
name|frame
operator|.
name|render
argument_list|(
operator|&
name|image
argument_list|)
expr_stmt|;
name|QVERIFY2
argument_list|(
name|testForColors
argument_list|(
name|image
argument_list|,
name|QColor
argument_list|(
literal|0xe8
argument_list|,
literal|0xff
argument_list|,
literal|0x66
argument_list|)
argument_list|)
argument_list|,
operator|(
name|QString
operator|::
name|fromLatin1
argument_list|(
name|widget
operator|->
name|metaObject
argument_list|()
operator|->
name|className
argument_list|()
argument_list|)
operator|+
literal|" did not contain background color #e8ff66"
operator|)
operator|.
name|toLocal8Bit
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY2
argument_list|(
name|testForColors
argument_list|(
name|image
argument_list|,
name|QColor
argument_list|(
literal|0xff
argument_list|,
literal|0x00
argument_list|,
literal|0x84
argument_list|)
argument_list|)
argument_list|,
operator|(
name|QString
operator|::
name|fromLatin1
argument_list|(
name|widget
operator|->
name|metaObject
argument_list|()
operator|->
name|className
argument_list|()
argument_list|)
operator|+
literal|" did not contain text color #ff0084"
operator|)
operator|.
name|toLocal8Bit
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_class
DECL|class|SingleInheritanceDialog
class|class
name|SingleInheritanceDialog
super|:
specifier|public
name|QDialog
block|{
name|Q_OBJECT
public|public:
DECL|function|SingleInheritanceDialog
name|SingleInheritanceDialog
parameter_list|(
name|QWidget
modifier|*
name|w
init|=
literal|0
parameter_list|)
member_init_list|:
name|QDialog
argument_list|(
name|w
argument_list|)
block|{     }
block|}
class|;
end_class
begin_class
DECL|class|DoubleInheritanceDialog
class|class
name|DoubleInheritanceDialog
super|:
specifier|public
name|SingleInheritanceDialog
block|{
name|Q_OBJECT
public|public:
DECL|function|DoubleInheritanceDialog
name|DoubleInheritanceDialog
parameter_list|(
name|QWidget
modifier|*
name|w
init|=
literal|0
parameter_list|)
member_init_list|:
name|SingleInheritanceDialog
argument_list|(
name|w
argument_list|)
block|{     }
block|}
class|;
end_class
begin_function
DECL|function|background
name|void
name|tst_QStyleSheetStyle
operator|::
name|background
parameter_list|()
block|{
specifier|const
name|int
name|number
init|=
literal|4
decl_stmt|;
name|QWidget
modifier|*
name|widgets
index|[
name|number
index|]
decl_stmt|;
comment|// Testing inheritance styling of QDialog.
name|widgets
index|[
literal|0
index|]
operator|=
operator|new
name|SingleInheritanceDialog
expr_stmt|;
name|widgets
index|[
literal|0
index|]
operator|->
name|setStyleSheet
argument_list|(
literal|"* { background-color: #e8ff66; }"
argument_list|)
expr_stmt|;
name|widgets
index|[
literal|1
index|]
operator|=
operator|new
name|DoubleInheritanceDialog
expr_stmt|;
name|widgets
index|[
literal|1
index|]
operator|->
name|setStyleSheet
argument_list|(
literal|"* { background-color: #e8ff66; }"
argument_list|)
expr_stmt|;
comment|// Testing gradients in QComboBox.
name|QLayout
modifier|*
name|layout
decl_stmt|;
name|QComboBox
modifier|*
name|cb
decl_stmt|;
comment|// First color
name|widgets
index|[
literal|2
index|]
operator|=
operator|new
name|QDialog
expr_stmt|;
name|layout
operator|=
operator|new
name|QGridLayout
expr_stmt|;
name|cb
operator|=
operator|new
name|QComboBox
expr_stmt|;
name|cb
operator|->
name|setStyleSheet
argument_list|(
literal|"* { background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1, stop:0 #e8ff66, stop:1 #000000); }"
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|cb
argument_list|)
expr_stmt|;
name|widgets
index|[
literal|2
index|]
operator|->
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
comment|// Second color
name|widgets
index|[
literal|3
index|]
operator|=
operator|new
name|QDialog
expr_stmt|;
name|layout
operator|=
operator|new
name|QGridLayout
expr_stmt|;
name|cb
operator|=
operator|new
name|QComboBox
expr_stmt|;
name|cb
operator|->
name|setStyleSheet
argument_list|(
literal|"* { background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1, stop:0 #e8ff66, stop:1 #000000); }"
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|cb
argument_list|)
expr_stmt|;
name|widgets
index|[
literal|3
index|]
operator|->
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
name|number
condition|;
operator|++
name|c
control|)
block|{
name|QWidget
modifier|*
name|widget
init|=
name|widgets
index|[
name|c
index|]
decl_stmt|;
name|widget
operator|->
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
name|widget
argument_list|)
expr_stmt|;
name|QImage
name|image
argument_list|(
name|widget
operator|->
name|width
argument_list|()
argument_list|,
name|widget
operator|->
name|height
argument_list|()
argument_list|,
name|QImage
operator|::
name|Format_ARGB32
argument_list|)
decl_stmt|;
name|widget
operator|->
name|render
argument_list|(
operator|&
name|image
argument_list|)
expr_stmt|;
if|if
condition|(
name|image
operator|.
name|depth
argument_list|()
operator|<
literal|24
condition|)
block|{
name|QSKIP
argument_list|(
literal|"Test doesn't support color depth< 24"
argument_list|,
name|SkipAll
argument_list|)
expr_stmt|;
block|}
name|QVERIFY2
argument_list|(
name|testForColors
argument_list|(
name|image
argument_list|,
name|QColor
argument_list|(
literal|0xe8
argument_list|,
literal|0xff
argument_list|,
literal|0x66
argument_list|)
argument_list|)
argument_list|,
operator|(
name|QString
operator|::
name|fromLatin1
argument_list|(
name|widget
operator|->
name|metaObject
argument_list|()
operator|->
name|className
argument_list|()
argument_list|)
operator|+
literal|" did not contain background image with color #e8ff66"
operator|)
operator|.
name|toLocal8Bit
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|)
expr_stmt|;
operator|delete
name|widget
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|tabAlignement
name|void
name|tst_QStyleSheetStyle
operator|::
name|tabAlignement
parameter_list|()
block|{
name|QWidget
name|topLevel
decl_stmt|;
name|QTabWidget
name|tabWidget
argument_list|(
operator|&
name|topLevel
argument_list|)
decl_stmt|;
name|tabWidget
operator|.
name|addTab
argument_list|(
operator|new
name|QLabel
argument_list|(
literal|"tab1"
argument_list|)
argument_list|,
literal|"tab1"
argument_list|)
expr_stmt|;
name|tabWidget
operator|.
name|resize
argument_list|(
name|QSize
argument_list|(
literal|400
argument_list|,
literal|400
argument_list|)
argument_list|)
expr_stmt|;
name|topLevel
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|tabWidget
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|50
argument_list|)
expr_stmt|;
name|QTabBar
modifier|*
name|bar
init|=
name|qFindChild
argument_list|<
name|QTabBar
operator|*
argument_list|>
argument_list|(
operator|&
name|tabWidget
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|bar
argument_list|)
expr_stmt|;
comment|//check the tab is on the right
name|tabWidget
operator|.
name|setStyleSheet
argument_list|(
literal|"QTabWidget::tab-bar { alignment: right ; }"
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|bar
operator|->
name|geometry
argument_list|()
operator|.
name|right
argument_list|()
operator|>
literal|380
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|bar
operator|->
name|geometry
argument_list|()
operator|.
name|left
argument_list|()
operator|>
literal|200
argument_list|)
expr_stmt|;
comment|//check the tab is on the middle
name|tabWidget
operator|.
name|setStyleSheet
argument_list|(
literal|"QTabWidget::tab-bar { alignment: center ; }"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|bar
operator|->
name|geometry
argument_list|()
operator|.
name|right
argument_list|()
operator|<
literal|300
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|bar
operator|->
name|geometry
argument_list|()
operator|.
name|left
argument_list|()
operator|>
literal|100
argument_list|)
expr_stmt|;
comment|//check the tab is on the left
name|tabWidget
operator|.
name|setStyleSheet
argument_list|(
literal|"QTabWidget::tab-bar { alignment: left ; }"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|bar
operator|->
name|geometry
argument_list|()
operator|.
name|left
argument_list|()
operator|<
literal|20
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|bar
operator|->
name|geometry
argument_list|()
operator|.
name|right
argument_list|()
operator|<
literal|200
argument_list|)
expr_stmt|;
name|tabWidget
operator|.
name|setTabPosition
argument_list|(
name|QTabWidget
operator|::
name|West
argument_list|)
expr_stmt|;
comment|//check the tab is on the top
name|QVERIFY
argument_list|(
name|bar
operator|->
name|geometry
argument_list|()
operator|.
name|top
argument_list|()
operator|<
literal|20
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|bar
operator|->
name|geometry
argument_list|()
operator|.
name|bottom
argument_list|()
operator|<
literal|200
argument_list|)
expr_stmt|;
comment|//check the tab is on the bottom
name|tabWidget
operator|.
name|setStyleSheet
argument_list|(
literal|"QTabWidget::tab-bar { alignment: right ; }"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|bar
operator|->
name|geometry
argument_list|()
operator|.
name|bottom
argument_list|()
operator|>
literal|380
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|bar
operator|->
name|geometry
argument_list|()
operator|.
name|top
argument_list|()
operator|>
literal|200
argument_list|)
expr_stmt|;
comment|//check the tab is on the middle
name|tabWidget
operator|.
name|setStyleSheet
argument_list|(
literal|"QTabWidget::tab-bar { alignment: center ; }"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|bar
operator|->
name|geometry
argument_list|()
operator|.
name|bottom
argument_list|()
operator|<
literal|300
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|bar
operator|->
name|geometry
argument_list|()
operator|.
name|top
argument_list|()
operator|>
literal|100
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|attributesList
name|void
name|tst_QStyleSheetStyle
operator|::
name|attributesList
parameter_list|()
block|{
name|QWidget
name|w
decl_stmt|;
name|QPushButton
modifier|*
name|p1
init|=
operator|new
name|QPushButton
argument_list|(
operator|&
name|w
argument_list|)
decl_stmt|;
name|QPushButton
modifier|*
name|p2
init|=
operator|new
name|QPushButton
argument_list|(
operator|&
name|w
argument_list|)
decl_stmt|;
name|QPushButton
modifier|*
name|p3
init|=
operator|new
name|QPushButton
argument_list|(
operator|&
name|w
argument_list|)
decl_stmt|;
name|QPushButton
modifier|*
name|p4
init|=
operator|new
name|QPushButton
argument_list|(
operator|&
name|w
argument_list|)
decl_stmt|;
name|p1
operator|->
name|setProperty
argument_list|(
literal|"prop"
argument_list|,
name|QStringList
argument_list|()
operator|<<
literal|"red"
argument_list|)
expr_stmt|;
name|p2
operator|->
name|setProperty
argument_list|(
literal|"prop"
argument_list|,
name|QStringList
argument_list|()
operator|<<
literal|"foo"
operator|<<
literal|"red"
argument_list|)
expr_stmt|;
name|p3
operator|->
name|setProperty
argument_list|(
literal|"prop"
argument_list|,
name|QStringList
argument_list|()
operator|<<
literal|"foo"
operator|<<
literal|"bar"
argument_list|)
expr_stmt|;
name|w
operator|.
name|setStyleSheet
argument_list|(
literal|" QPushButton{ background-color:blue; }  QPushButton[prop~=red] { background-color:red; }"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|BACKGROUND
argument_list|(
operator|*
name|p1
argument_list|)
argument_list|,
name|QColor
argument_list|(
literal|"red"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|BACKGROUND
argument_list|(
operator|*
name|p2
argument_list|)
argument_list|,
name|QColor
argument_list|(
literal|"red"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|BACKGROUND
argument_list|(
operator|*
name|p3
argument_list|)
argument_list|,
name|QColor
argument_list|(
literal|"blue"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|BACKGROUND
argument_list|(
operator|*
name|p4
argument_list|)
argument_list|,
name|QColor
argument_list|(
literal|"blue"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|minmaxSizes
name|void
name|tst_QStyleSheetStyle
operator|::
name|minmaxSizes
parameter_list|()
block|{
name|QTabWidget
name|tabWidget
decl_stmt|;
name|tabWidget
operator|.
name|setObjectName
argument_list|(
literal|"tabWidget"
argument_list|)
expr_stmt|;
name|int
name|index1
init|=
name|tabWidget
operator|.
name|addTab
argument_list|(
operator|new
name|QLabel
argument_list|(
literal|"Tab1"
argument_list|)
argument_list|,
literal|"a"
argument_list|)
decl_stmt|;
name|QWidget
modifier|*
name|page2
init|=
operator|new
name|QLabel
argument_list|(
literal|"page2"
argument_list|)
decl_stmt|;
name|page2
operator|->
name|setObjectName
argument_list|(
literal|"page2"
argument_list|)
expr_stmt|;
name|page2
operator|->
name|setStyleSheet
argument_list|(
literal|"* {background-color: white; min-width: 250px; max-width:500px }"
argument_list|)
expr_stmt|;
name|tabWidget
operator|.
name|addTab
argument_list|(
name|page2
argument_list|,
literal|"Tab2"
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|page3
init|=
operator|new
name|QLabel
argument_list|(
literal|"plop"
argument_list|)
decl_stmt|;
name|page3
operator|->
name|setObjectName
argument_list|(
literal|"Page3"
argument_list|)
expr_stmt|;
name|page3
operator|->
name|setStyleSheet
argument_list|(
literal|"* {background-color: yellow; min-height: 250px; max-height:500px }"
argument_list|)
expr_stmt|;
name|int
name|index3
init|=
name|tabWidget
operator|.
name|addTab
argument_list|(
name|page3
argument_list|,
literal|"very_long_long_long_long_caption"
argument_list|)
decl_stmt|;
name|tabWidget
operator|.
name|setStyleSheet
argument_list|(
literal|"QTabBar::tab { min-width:100px; max-width:130px; }"
argument_list|)
expr_stmt|;
name|tabWidget
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|50
argument_list|)
expr_stmt|;
comment|//i allow 4px additional border from the native style (hence the -2,<=2)
name|QVERIFY
argument_list|(
name|qAbs
argument_list|(
name|page2
operator|->
name|maximumSize
argument_list|()
operator|.
name|width
argument_list|()
operator|-
literal|500
operator|-
literal|2
argument_list|)
operator|<=
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|qAbs
argument_list|(
name|page2
operator|->
name|minimumSize
argument_list|()
operator|.
name|width
argument_list|()
operator|-
literal|250
operator|-
literal|2
argument_list|)
operator|<=
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|qAbs
argument_list|(
name|page3
operator|->
name|maximumSize
argument_list|()
operator|.
name|height
argument_list|()
operator|-
literal|500
operator|-
literal|2
argument_list|)
operator|<=
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|qAbs
argument_list|(
name|page3
operator|->
name|minimumSize
argument_list|()
operator|.
name|height
argument_list|()
operator|-
literal|250
operator|-
literal|2
argument_list|)
operator|<=
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|qAbs
argument_list|(
name|page3
operator|->
name|minimumSize
argument_list|()
operator|.
name|height
argument_list|()
operator|-
literal|250
operator|-
literal|2
argument_list|)
operator|<=
literal|2
argument_list|)
expr_stmt|;
name|QTabBar
modifier|*
name|bar
init|=
name|qFindChild
argument_list|<
name|QTabBar
operator|*
argument_list|>
argument_list|(
operator|&
name|tabWidget
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|bar
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|qAbs
argument_list|(
name|bar
operator|->
name|tabRect
argument_list|(
name|index1
argument_list|)
operator|.
name|width
argument_list|()
operator|-
literal|100
operator|-
literal|2
argument_list|)
operator|<=
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|qAbs
argument_list|(
name|bar
operator|->
name|tabRect
argument_list|(
name|index3
argument_list|)
operator|.
name|width
argument_list|()
operator|-
literal|130
operator|-
literal|2
argument_list|)
operator|<=
literal|2
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|task206238_twice
name|void
name|tst_QStyleSheetStyle
operator|::
name|task206238_twice
parameter_list|()
block|{
name|QMainWindow
name|w
decl_stmt|;
name|QTabWidget
modifier|*
name|tw
init|=
operator|new
name|QTabWidget
decl_stmt|;
name|tw
operator|->
name|addTab
argument_list|(
operator|new
name|QLabel
argument_list|(
literal|"foo"
argument_list|)
argument_list|,
literal|"test"
argument_list|)
expr_stmt|;
name|w
operator|.
name|setCentralWidget
argument_list|(
name|tw
argument_list|)
expr_stmt|;
name|w
operator|.
name|setStyleSheet
argument_list|(
literal|"background: red;"
argument_list|)
expr_stmt|;
name|w
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|BACKGROUND
argument_list|(
name|w
argument_list|)
argument_list|,
name|QColor
argument_list|(
literal|"red"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|BACKGROUND
argument_list|(
operator|*
name|tw
argument_list|)
argument_list|,
name|QColor
argument_list|(
literal|"red"
argument_list|)
argument_list|)
expr_stmt|;
name|w
operator|.
name|setStyleSheet
argument_list|(
literal|"background: red;"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|BACKGROUND
argument_list|(
name|w
argument_list|)
argument_list|,
name|QColor
argument_list|(
literal|"red"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|BACKGROUND
argument_list|(
operator|*
name|tw
argument_list|)
argument_list|,
name|QColor
argument_list|(
literal|"red"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|transparent
name|void
name|tst_QStyleSheetStyle
operator|::
name|transparent
parameter_list|()
block|{
name|QWidget
name|w
decl_stmt|;
name|QPushButton
modifier|*
name|p1
init|=
operator|new
name|QPushButton
argument_list|(
operator|&
name|w
argument_list|)
decl_stmt|;
name|QPushButton
modifier|*
name|p2
init|=
operator|new
name|QPushButton
argument_list|(
operator|&
name|w
argument_list|)
decl_stmt|;
name|QPushButton
modifier|*
name|p3
init|=
operator|new
name|QPushButton
argument_list|(
operator|&
name|w
argument_list|)
decl_stmt|;
name|p1
operator|->
name|setStyleSheet
argument_list|(
literal|"background:transparent"
argument_list|)
expr_stmt|;
name|p2
operator|->
name|setStyleSheet
argument_list|(
literal|"background-color:transparent"
argument_list|)
expr_stmt|;
name|p3
operator|->
name|setStyleSheet
argument_list|(
literal|"background:rgb(0,0,0,0)"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|BACKGROUND
argument_list|(
operator|*
name|p1
argument_list|)
argument_list|,
name|QColor
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|BACKGROUND
argument_list|(
operator|*
name|p2
argument_list|)
argument_list|,
name|QColor
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|BACKGROUND
argument_list|(
operator|*
name|p3
argument_list|)
argument_list|,
name|QColor
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|ProxyStyle
class|class
name|ProxyStyle
super|:
specifier|public
name|QStyle
block|{
public|public:
DECL|function|ProxyStyle
name|ProxyStyle
parameter_list|(
name|QStyle
modifier|*
name|s
parameter_list|)
block|{
name|style
operator|=
name|s
expr_stmt|;
block|}
name|void
name|drawControl
parameter_list|(
name|ControlElement
name|ce
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|opt
parameter_list|,
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
init|=
literal|0
parameter_list|)
specifier|const
function_decl|;
DECL|function|drawPrimitive
name|void
name|drawPrimitive
parameter_list|(
name|QStyle
operator|::
name|PrimitiveElement
name|pe
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|opt
parameter_list|,
name|QPainter
modifier|*
name|p
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|w
parameter_list|)
specifier|const
block|{
name|style
operator|->
name|drawPrimitive
argument_list|(
name|pe
argument_list|,
name|opt
argument_list|,
name|p
argument_list|,
name|w
argument_list|)
expr_stmt|;
block|}
DECL|function|subElementRect
name|QRect
name|subElementRect
parameter_list|(
name|QStyle
operator|::
name|SubElement
name|se
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|opt
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|w
parameter_list|)
specifier|const
block|{
name|Q_UNUSED
argument_list|(
name|se
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|opt
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|w
argument_list|)
expr_stmt|;
return|return
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|3
argument_list|,
literal|3
argument_list|)
return|;
block|}
DECL|function|drawComplexControl
name|void
name|drawComplexControl
parameter_list|(
name|QStyle
operator|::
name|ComplexControl
name|cc
parameter_list|,
specifier|const
name|QStyleOptionComplex
modifier|*
name|opt
parameter_list|,
name|QPainter
modifier|*
name|p
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|w
parameter_list|)
specifier|const
block|{
name|style
operator|->
name|drawComplexControl
argument_list|(
name|cc
argument_list|,
name|opt
argument_list|,
name|p
argument_list|,
name|w
argument_list|)
expr_stmt|;
block|}
DECL|function|hitTestComplexControl
name|SubControl
name|hitTestComplexControl
parameter_list|(
name|QStyle
operator|::
name|ComplexControl
name|cc
parameter_list|,
specifier|const
name|QStyleOptionComplex
modifier|*
name|opt
parameter_list|,
specifier|const
name|QPoint
modifier|&
name|pt
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|w
parameter_list|)
specifier|const
block|{
return|return
name|style
operator|->
name|hitTestComplexControl
argument_list|(
name|cc
argument_list|,
name|opt
argument_list|,
name|pt
argument_list|,
name|w
argument_list|)
return|;
block|}
DECL|function|subControlRect
name|QRect
name|subControlRect
parameter_list|(
name|QStyle
operator|::
name|ComplexControl
name|cc
parameter_list|,
specifier|const
name|QStyleOptionComplex
modifier|*
name|opt
parameter_list|,
name|QStyle
operator|::
name|SubControl
name|sc
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|w
parameter_list|)
specifier|const
block|{
return|return
name|style
operator|->
name|subControlRect
argument_list|(
name|cc
argument_list|,
name|opt
argument_list|,
name|sc
argument_list|,
name|w
argument_list|)
return|;
block|}
DECL|function|pixelMetric
name|int
name|pixelMetric
parameter_list|(
name|QStyle
operator|::
name|PixelMetric
name|pm
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|opt
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|w
parameter_list|)
specifier|const
block|{
return|return
name|style
operator|->
name|pixelMetric
argument_list|(
name|pm
argument_list|,
name|opt
argument_list|,
name|w
argument_list|)
return|;
block|}
DECL|function|sizeFromContents
name|QSize
name|sizeFromContents
parameter_list|(
name|QStyle
operator|::
name|ContentsType
name|ct
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|opt
parameter_list|,
specifier|const
name|QSize
modifier|&
name|size
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|w
parameter_list|)
specifier|const
block|{
return|return
name|style
operator|->
name|sizeFromContents
argument_list|(
name|ct
argument_list|,
name|opt
argument_list|,
name|size
argument_list|,
name|w
argument_list|)
return|;
block|}
DECL|function|styleHint
name|int
name|styleHint
parameter_list|(
name|QStyle
operator|::
name|StyleHint
name|sh
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|opt
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|w
parameter_list|,
name|QStyleHintReturn
modifier|*
name|shr
parameter_list|)
specifier|const
block|{
return|return
name|style
operator|->
name|styleHint
argument_list|(
name|sh
argument_list|,
name|opt
argument_list|,
name|w
argument_list|,
name|shr
argument_list|)
return|;
block|}
DECL|function|standardPixmap
name|QPixmap
name|standardPixmap
parameter_list|(
name|QStyle
operator|::
name|StandardPixmap
name|spix
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|opt
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|w
parameter_list|)
specifier|const
block|{
return|return
name|style
operator|->
name|standardPixmap
argument_list|(
name|spix
argument_list|,
name|opt
argument_list|,
name|w
argument_list|)
return|;
block|}
DECL|function|generatedIconPixmap
name|QPixmap
name|generatedIconPixmap
parameter_list|(
name|QIcon
operator|::
name|Mode
name|mode
parameter_list|,
specifier|const
name|QPixmap
modifier|&
name|pix
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|opt
parameter_list|)
specifier|const
block|{
return|return
name|style
operator|->
name|generatedIconPixmap
argument_list|(
name|mode
argument_list|,
name|pix
argument_list|,
name|opt
argument_list|)
return|;
block|}
private|private:
DECL|member|style
name|QStyle
modifier|*
name|style
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|drawControl
name|void
name|ProxyStyle
operator|::
name|drawControl
parameter_list|(
name|ControlElement
name|ce
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|opt
parameter_list|,
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
if|if
condition|(
name|ce
operator|==
name|CE_PushButton
condition|)
block|{
if|if
condition|(
specifier|const
name|QStyleOptionButton
modifier|*
name|btn
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionButton
operator|*
argument_list|>
argument_list|(
name|opt
argument_list|)
condition|)
block|{
name|QRect
name|r
init|=
name|btn
operator|->
name|rect
decl_stmt|;
name|painter
operator|->
name|fillRect
argument_list|(
name|r
argument_list|,
name|Qt
operator|::
name|green
argument_list|)
expr_stmt|;
if|if
condition|(
name|btn
operator|->
name|state
operator|&
name|QStyle
operator|::
name|State_HasFocus
condition|)
name|painter
operator|->
name|fillRect
argument_list|(
name|r
operator|.
name|adjusted
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|,
operator|-
literal|5
argument_list|,
operator|-
literal|5
argument_list|)
argument_list|,
name|Qt
operator|::
name|yellow
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawText
argument_list|(
name|r
argument_list|,
name|Qt
operator|::
name|AlignCenter
argument_list|,
name|btn
operator|->
name|text
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|style
operator|->
name|drawControl
argument_list|(
name|ce
argument_list|,
name|opt
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|proxyStyle
name|void
name|tst_QStyleSheetStyle
operator|::
name|proxyStyle
parameter_list|()
block|{
comment|//Should not crash;   task 158984
name|ProxyStyle
modifier|*
name|proxy
init|=
operator|new
name|ProxyStyle
argument_list|(
name|qApp
operator|->
name|style
argument_list|()
argument_list|)
decl_stmt|;
name|QString
name|styleSheet
argument_list|(
literal|"QPushButton {background-color: red; }"
argument_list|)
decl_stmt|;
name|QWidget
modifier|*
name|w
init|=
operator|new
name|QWidget
decl_stmt|;
name|QVBoxLayout
modifier|*
name|layout
init|=
operator|new
name|QVBoxLayout
argument_list|(
name|w
argument_list|)
decl_stmt|;
name|QPushButton
modifier|*
name|pb1
init|=
operator|new
name|QPushButton
argument_list|(
name|qApp
operator|->
name|style
argument_list|()
operator|->
name|objectName
argument_list|()
argument_list|,
name|w
argument_list|)
decl_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|pb1
argument_list|)
expr_stmt|;
name|QPushButton
modifier|*
name|pb2
init|=
operator|new
name|QPushButton
argument_list|(
literal|"ProxyStyle"
argument_list|,
name|w
argument_list|)
decl_stmt|;
name|pb2
operator|->
name|setStyle
argument_list|(
name|proxy
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|pb2
argument_list|)
expr_stmt|;
name|QPushButton
modifier|*
name|pb3
init|=
operator|new
name|QPushButton
argument_list|(
literal|"StyleSheet"
argument_list|,
name|w
argument_list|)
decl_stmt|;
name|pb3
operator|->
name|setStyleSheet
argument_list|(
name|styleSheet
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|pb3
argument_list|)
expr_stmt|;
name|QPushButton
modifier|*
name|pb4
init|=
operator|new
name|QPushButton
argument_list|(
literal|"StyleSheet then ProxyStyle "
argument_list|,
name|w
argument_list|)
decl_stmt|;
name|pb4
operator|->
name|setStyleSheet
argument_list|(
name|styleSheet
argument_list|)
expr_stmt|;
comment|// We are creating our Proxy based on current style...
comment|// In this case it would be the QStyleSheetStyle that is deleted
comment|// later on. We need to get access to the "real" QStyle to be able to
comment|// draw correctly.
name|ProxyStyle
modifier|*
name|newProxy
init|=
operator|new
name|ProxyStyle
argument_list|(
name|qApp
operator|->
name|style
argument_list|()
argument_list|)
decl_stmt|;
name|pb4
operator|->
name|setStyle
argument_list|(
name|newProxy
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|pb4
argument_list|)
expr_stmt|;
name|QPushButton
modifier|*
name|pb5
init|=
operator|new
name|QPushButton
argument_list|(
literal|"ProxyStyle then StyleSheet "
argument_list|,
name|w
argument_list|)
decl_stmt|;
name|pb5
operator|->
name|setStyle
argument_list|(
name|proxy
argument_list|)
expr_stmt|;
name|pb5
operator|->
name|setStyleSheet
argument_list|(
name|styleSheet
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|pb5
argument_list|)
expr_stmt|;
name|w
operator|->
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
comment|// Test for QTBUG-7198 - style sheet overrides custom element size
name|QStyleOptionViewItemV4
name|opt
decl_stmt|;
name|opt
operator|.
name|initFrom
argument_list|(
name|w
argument_list|)
expr_stmt|;
name|opt
operator|.
name|features
operator||=
name|QStyleOptionViewItemV2
operator|::
name|HasCheckIndicator
expr_stmt|;
name|QVERIFY
argument_list|(
name|pb5
operator|->
name|style
argument_list|()
operator|->
name|subElementRect
argument_list|(
name|QStyle
operator|::
name|SE_ItemViewItemCheckIndicator
argument_list|,
operator|&
name|opt
argument_list|,
name|pb5
argument_list|)
operator|.
name|width
argument_list|()
operator|==
literal|3
argument_list|)
expr_stmt|;
operator|delete
name|w
expr_stmt|;
operator|delete
name|proxy
expr_stmt|;
operator|delete
name|newProxy
expr_stmt|;
block|}
end_function
begin_function
DECL|function|dialogButtonBox
name|void
name|tst_QStyleSheetStyle
operator|::
name|dialogButtonBox
parameter_list|()
block|{
name|QDialogButtonBox
name|box
decl_stmt|;
name|box
operator|.
name|addButton
argument_list|(
name|QDialogButtonBox
operator|::
name|Ok
argument_list|)
expr_stmt|;
name|box
operator|.
name|addButton
argument_list|(
name|QDialogButtonBox
operator|::
name|Cancel
argument_list|)
expr_stmt|;
name|box
operator|.
name|setStyleSheet
argument_list|(
literal|"/** */ "
argument_list|)
expr_stmt|;
name|box
operator|.
name|setStyleSheet
argument_list|(
name|QString
argument_list|()
argument_list|)
expr_stmt|;
comment|//should not crash
block|}
end_function
begin_function
DECL|function|emptyStyleSheet
name|void
name|tst_QStyleSheetStyle
operator|::
name|emptyStyleSheet
parameter_list|()
block|{
comment|//empty stylesheet should not change anything
name|qApp
operator|->
name|setStyleSheet
argument_list|(
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|QWidget
name|w
decl_stmt|;
name|QHBoxLayout
name|layout
argument_list|(
operator|&
name|w
argument_list|)
decl_stmt|;
name|w
operator|.
name|setLayout
argument_list|(
operator|&
name|layout
argument_list|)
expr_stmt|;
name|layout
operator|.
name|addWidget
argument_list|(
operator|new
name|QPushButton
argument_list|(
literal|"push"
argument_list|,
operator|&
name|w
argument_list|)
argument_list|)
expr_stmt|;
name|layout
operator|.
name|addWidget
argument_list|(
operator|new
name|QToolButton
argument_list|(
operator|&
name|w
argument_list|)
argument_list|)
expr_stmt|;
name|QLabel
name|label
argument_list|(
literal|"toto"
argument_list|,
operator|&
name|w
argument_list|)
decl_stmt|;
name|label
operator|.
name|setFrameShape
argument_list|(
name|QLabel
operator|::
name|Panel
argument_list|)
expr_stmt|;
name|label
operator|.
name|setFrameShadow
argument_list|(
name|QLabel
operator|::
name|Sunken
argument_list|)
expr_stmt|;
name|layout
operator|.
name|addWidget
argument_list|(
operator|&
name|label
argument_list|)
expr_stmt|;
comment|//task 231137
name|layout
operator|.
name|addWidget
argument_list|(
operator|new
name|QTableWidget
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|,
operator|&
name|w
argument_list|)
argument_list|)
expr_stmt|;
name|layout
operator|.
name|addWidget
argument_list|(
operator|new
name|QProgressBar
argument_list|(
operator|&
name|w
argument_list|)
argument_list|)
expr_stmt|;
name|layout
operator|.
name|addWidget
argument_list|(
operator|new
name|QLineEdit
argument_list|(
operator|&
name|w
argument_list|)
argument_list|)
expr_stmt|;
name|layout
operator|.
name|addWidget
argument_list|(
operator|new
name|QSpinBox
argument_list|(
operator|&
name|w
argument_list|)
argument_list|)
expr_stmt|;
name|layout
operator|.
name|addWidget
argument_list|(
operator|new
name|QComboBox
argument_list|(
operator|&
name|w
argument_list|)
argument_list|)
expr_stmt|;
name|layout
operator|.
name|addWidget
argument_list|(
operator|new
name|QDateEdit
argument_list|(
operator|&
name|w
argument_list|)
argument_list|)
expr_stmt|;
name|layout
operator|.
name|addWidget
argument_list|(
operator|new
name|QGroupBox
argument_list|(
literal|"some text"
argument_list|,
operator|&
name|w
argument_list|)
argument_list|)
expr_stmt|;
name|w
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|w
argument_list|)
expr_stmt|;
comment|//workaround the fact that the label sizehint is one pixel different the first time.
name|label
operator|.
name|setIndent
argument_list|(
literal|0
argument_list|)
expr_stmt|;
comment|//force to recompute the sizeHint:
name|w
operator|.
name|setFocus
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QImage
name|img1
argument_list|(
name|w
operator|.
name|size
argument_list|()
argument_list|,
name|QImage
operator|::
name|Format_ARGB32
argument_list|)
decl_stmt|;
name|w
operator|.
name|render
argument_list|(
operator|&
name|img1
argument_list|)
expr_stmt|;
name|w
operator|.
name|setStyleSheet
argument_list|(
literal|"/* */"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QImage
name|img2
argument_list|(
name|w
operator|.
name|size
argument_list|()
argument_list|,
name|QImage
operator|::
name|Format_ARGB32
argument_list|)
decl_stmt|;
name|w
operator|.
name|render
argument_list|(
operator|&
name|img2
argument_list|)
expr_stmt|;
if|if
condition|(
name|img1
operator|!=
name|img2
condition|)
block|{
name|img1
operator|.
name|save
argument_list|(
literal|"emptyStyleSheet_img1.png"
argument_list|)
expr_stmt|;
name|img2
operator|.
name|save
argument_list|(
literal|"emptyStyleSheet_img2.png"
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|img1
argument_list|,
name|img2
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toolTip
name|void
name|tst_QStyleSheetStyle
operator|::
name|toolTip
parameter_list|()
block|{
name|qApp
operator|->
name|setStyleSheet
argument_list|(
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|QWidget
name|w
decl_stmt|;
name|QHBoxLayout
name|layout
argument_list|(
operator|&
name|w
argument_list|)
decl_stmt|;
name|w
operator|.
name|setLayout
argument_list|(
operator|&
name|layout
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|wid1
init|=
operator|new
name|QGroupBox
argument_list|(
operator|&
name|w
argument_list|)
decl_stmt|;
name|layout
operator|.
name|addWidget
argument_list|(
name|wid1
argument_list|)
expr_stmt|;
name|wid1
operator|->
name|setStyleSheet
argument_list|(
literal|"QToolTip { background: #ae2; }   #wid3> QToolTip { background: #0b8; } "
argument_list|)
expr_stmt|;
name|QVBoxLayout
modifier|*
name|layout1
init|=
operator|new
name|QVBoxLayout
argument_list|(
name|wid1
argument_list|)
decl_stmt|;
name|wid1
operator|->
name|setLayout
argument_list|(
name|layout1
argument_list|)
expr_stmt|;
name|wid1
operator|->
name|setToolTip
argument_list|(
literal|"this is wid1"
argument_list|)
expr_stmt|;
name|wid1
operator|->
name|setObjectName
argument_list|(
literal|"wid1"
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|wid2
init|=
operator|new
name|QPushButton
argument_list|(
literal|"wid2"
argument_list|,
name|wid1
argument_list|)
decl_stmt|;
name|layout1
operator|->
name|addWidget
argument_list|(
name|wid2
argument_list|)
expr_stmt|;
name|wid2
operator|->
name|setStyleSheet
argument_list|(
literal|"QToolTip { background: #f81; } "
argument_list|)
expr_stmt|;
name|wid2
operator|->
name|setToolTip
argument_list|(
literal|"this is wid2"
argument_list|)
expr_stmt|;
name|wid2
operator|->
name|setObjectName
argument_list|(
literal|"wid2"
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|wid3
init|=
operator|new
name|QPushButton
argument_list|(
literal|"wid3"
argument_list|,
name|wid1
argument_list|)
decl_stmt|;
name|layout1
operator|->
name|addWidget
argument_list|(
name|wid3
argument_list|)
expr_stmt|;
name|wid3
operator|->
name|setToolTip
argument_list|(
literal|"this is wid3"
argument_list|)
expr_stmt|;
name|wid3
operator|->
name|setObjectName
argument_list|(
literal|"wid3"
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|wid4
init|=
operator|new
name|QPushButton
argument_list|(
literal|"wid4"
argument_list|,
operator|&
name|w
argument_list|)
decl_stmt|;
name|layout
operator|.
name|addWidget
argument_list|(
name|wid4
argument_list|)
expr_stmt|;
name|wid4
operator|->
name|setToolTip
argument_list|(
literal|"this is wid4"
argument_list|)
expr_stmt|;
name|wid4
operator|->
name|setObjectName
argument_list|(
literal|"wid4"
argument_list|)
expr_stmt|;
name|w
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QColor
name|normalToolTip
init|=
name|qApp
operator|->
name|palette
argument_list|()
operator|.
name|toolTipBase
argument_list|()
operator|.
name|color
argument_list|()
decl_stmt|;
name|QList
argument_list|<
name|QWidget
modifier|*
argument_list|>
name|widgets
decl_stmt|;
name|QList
argument_list|<
name|QColor
argument_list|>
name|colors
decl_stmt|;
comment|//tooltip on the widget without stylesheet, then to othes widget, including one without stylesheet
comment|//(the tooltip will be reused but his colour must change)
name|widgets
operator|<<
name|wid4
operator|<<
name|wid1
operator|<<
name|wid2
operator|<<
name|wid3
operator|<<
name|wid4
expr_stmt|;
name|colors
operator|<<
name|normalToolTip
operator|<<
literal|"#ae2"
operator|<<
literal|"#f81"
operator|<<
literal|"#0b8"
operator|<<
name|normalToolTip
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|widgets
operator|.
name|count
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|QWidget
modifier|*
name|wid
init|=
name|widgets
operator|.
name|at
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|QColor
name|col
init|=
name|colors
operator|.
name|at
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|QToolTip
operator|::
name|showText
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
literal|"This is "
operator|+
name|wid
operator|->
name|objectName
argument_list|()
argument_list|,
name|wid
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|tooltip
init|=
literal|0
decl_stmt|;
foreach|foreach
control|(
name|QWidget
modifier|*
name|widget
decl|,
name|QApplication
operator|::
name|topLevelWidgets
argument_list|()
control|)
block|{
if|if
condition|(
name|widget
operator|->
name|inherits
argument_list|(
literal|"QTipLabel"
argument_list|)
operator|&&
name|widget
operator|->
name|isVisible
argument_list|()
condition|)
block|{
name|tooltip
operator|=
name|widget
expr_stmt|;
break|break;
block|}
block|}
name|QVERIFY
argument_list|(
name|tooltip
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tooltip
operator|->
name|palette
argument_list|()
operator|.
name|color
argument_list|(
name|tooltip
operator|->
name|backgroundRole
argument_list|()
argument_list|)
argument_list|,
name|col
argument_list|)
expr_stmt|;
block|}
name|QToolTip
operator|::
name|showText
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
literal|"This is "
operator|+
name|wid3
operator|->
name|objectName
argument_list|()
argument_list|,
name|wid3
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
operator|delete
name|wid3
expr_stmt|;
comment|//should not crash;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
foreach|foreach
control|(
name|QWidget
modifier|*
name|widget
decl|,
name|QApplication
operator|::
name|topLevelWidgets
argument_list|()
control|)
block|{
name|widget
operator|->
name|update
argument_list|()
expr_stmt|;
comment|//should not crash either
block|}
block|}
end_function
begin_function
DECL|function|embeddedFonts
name|void
name|tst_QStyleSheetStyle
operator|::
name|embeddedFonts
parameter_list|()
block|{
comment|//task 235622 and 210551
name|QSpinBox
name|spin
decl_stmt|;
name|spin
operator|.
name|show
argument_list|()
expr_stmt|;
name|spin
operator|.
name|setStyleSheet
argument_list|(
literal|"QSpinBox { font-size: 32px; }"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|QLineEdit
modifier|*
name|embedded
init|=
name|spin
operator|.
name|findChild
argument_list|<
name|QLineEdit
operator|*
argument_list|>
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|embedded
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spin
operator|.
name|font
argument_list|()
operator|.
name|pixelSize
argument_list|()
argument_list|,
literal|32
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|embedded
operator|->
name|font
argument_list|()
operator|.
name|pixelSize
argument_list|()
argument_list|,
literal|32
argument_list|)
expr_stmt|;
name|QMenu
modifier|*
name|menu
init|=
name|embedded
operator|->
name|createStandardContextMenu
argument_list|()
decl_stmt|;
name|menu
operator|->
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|menu
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|menu
operator|->
name|font
argument_list|()
operator|.
name|pixelSize
argument_list|()
operator|!=
literal|32
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|menu
operator|->
name|font
argument_list|()
operator|.
name|pixelSize
argument_list|()
argument_list|,
name|qApp
operator|->
name|font
argument_list|(
name|menu
argument_list|)
operator|.
name|pixelSize
argument_list|()
argument_list|)
expr_stmt|;
comment|//task 242556
name|QComboBox
name|box
decl_stmt|;
name|box
operator|.
name|setEditable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|box
operator|.
name|addItems
argument_list|(
name|QStringList
argument_list|()
operator|<<
literal|"First"
operator|<<
literal|"Second"
operator|<<
literal|"Third"
argument_list|)
expr_stmt|;
name|box
operator|.
name|setStyleSheet
argument_list|(
literal|"QComboBox { font-size: 32px; }"
argument_list|)
expr_stmt|;
name|box
operator|.
name|show
argument_list|()
expr_stmt|;
name|embedded
operator|=
name|box
operator|.
name|findChild
argument_list|<
name|QLineEdit
operator|*
argument_list|>
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|embedded
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|box
operator|.
name|font
argument_list|()
operator|.
name|pixelSize
argument_list|()
argument_list|,
literal|32
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|embedded
operator|->
name|font
argument_list|()
operator|.
name|pixelSize
argument_list|()
argument_list|,
literal|32
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|opaquePaintEvent_data
name|void
name|tst_QStyleSheetStyle
operator|::
name|opaquePaintEvent_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"stylesheet"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"transparent"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"styled"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"none"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/* */"
argument_list|)
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"background black "
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"background: black;"
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"background qrgba"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"background: rgba(125,0,0,125);"
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"background transparent"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"background: transparent;"
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"border native"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"border: native;"
argument_list|)
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"border solid"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"border: 2px solid black;"
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"border transparent"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"background: black; border: 2px solid rgba(125,0,0,125);"
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"margin"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"margin: 25px;"
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"focus"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"*:focus { background: rgba(125,0,0,125) }"
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
expr_stmt|;
block|}
end_function
begin_function
DECL|function|opaquePaintEvent
name|void
name|tst_QStyleSheetStyle
operator|::
name|opaquePaintEvent
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|stylesheet
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|transparent
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|styled
argument_list|)
expr_stmt|;
name|QWidget
name|tl
decl_stmt|;
name|QWidget
name|cl
argument_list|(
operator|&
name|tl
argument_list|)
decl_stmt|;
name|cl
operator|.
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_OpaquePaintEvent
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|cl
operator|.
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|cl
operator|.
name|setStyleSheet
argument_list|(
name|stylesheet
argument_list|)
expr_stmt|;
name|cl
operator|.
name|ensurePolished
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|cl
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_OpaquePaintEvent
argument_list|)
argument_list|,
operator|!
name|transparent
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|cl
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_StyledBackground
argument_list|)
argument_list|,
name|styled
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|cl
operator|.
name|autoFillBackground
argument_list|()
argument_list|,
operator|!
name|styled
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|complexWidgetFocus
name|void
name|tst_QStyleSheetStyle
operator|::
name|complexWidgetFocus
parameter_list|()
block|{
comment|// This test is a simplified version of the focusColors() test above.
comment|// Tests if colors can be changed by altering the focus of the widget.
comment|// To avoid messy pixel-by-pixel comparison, we assume that the goal
comment|// is reached if at least ten pixels of the right color can be found in
comment|// the image.
comment|// For this reason, we use unusual and extremely ugly colors! :-)
name|QDialog
name|frame
decl_stmt|;
name|frame
operator|.
name|setStyleSheet
argument_list|(
literal|"*:focus { background: black; color: black } "
literal|"QSpinBox::up-arrow:focus, QSpinBox::down-arrow:focus { width: 7px; height: 7px; background: #ff0084 } "
literal|"QComboBox::down-arrow:focus { width: 7px; height: 7px; background: #ff0084 }"
literal|"QSlider::handle:horizontal:focus { width: 7px; height: 7px; background: #ff0084 } "
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|QWidget
modifier|*
argument_list|>
name|widgets
decl_stmt|;
name|widgets
operator|<<
operator|new
name|QSpinBox
expr_stmt|;
name|widgets
operator|<<
operator|new
name|QComboBox
expr_stmt|;
name|widgets
operator|<<
operator|new
name|QSlider
argument_list|(
name|Qt
operator|::
name|Horizontal
argument_list|)
expr_stmt|;
name|QLayout
modifier|*
name|layout
init|=
operator|new
name|QGridLayout
decl_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
operator|new
name|QLineEdit
argument_list|)
expr_stmt|;
comment|// Avoids initial focus.
foreach|foreach
control|(
name|QWidget
modifier|*
name|widget
decl|,
name|widgets
control|)
name|layout
operator|->
name|addWidget
argument_list|(
name|widget
argument_list|)
expr_stmt|;
name|frame
operator|.
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
name|frame
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|frame
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|frame
argument_list|)
expr_stmt|;
foreach|foreach
control|(
name|QWidget
modifier|*
name|widget
decl|,
name|widgets
control|)
block|{
name|widget
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QImage
name|image
argument_list|(
name|frame
operator|.
name|width
argument_list|()
argument_list|,
name|frame
operator|.
name|height
argument_list|()
argument_list|,
name|QImage
operator|::
name|Format_ARGB32
argument_list|)
decl_stmt|;
name|frame
operator|.
name|render
argument_list|(
operator|&
name|image
argument_list|)
expr_stmt|;
if|if
condition|(
name|image
operator|.
name|depth
argument_list|()
operator|<
literal|24
condition|)
block|{
name|QSKIP
argument_list|(
literal|"Test doesn't support color depth< 24"
argument_list|,
name|SkipAll
argument_list|)
expr_stmt|;
block|}
name|QVERIFY2
argument_list|(
name|testForColors
argument_list|(
name|image
argument_list|,
name|QColor
argument_list|(
literal|0xff
argument_list|,
literal|0x00
argument_list|,
literal|0x84
argument_list|)
argument_list|)
argument_list|,
operator|(
name|QString
operator|::
name|fromLatin1
argument_list|(
name|widget
operator|->
name|metaObject
argument_list|()
operator|->
name|className
argument_list|()
argument_list|)
operator|+
literal|" did not contain text color #ff0084, using style "
operator|+
name|QString
operator|::
name|fromLatin1
argument_list|(
name|qApp
operator|->
name|style
argument_list|()
operator|->
name|metaObject
argument_list|()
operator|->
name|className
argument_list|()
argument_list|)
operator|)
operator|.
name|toLocal8Bit
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|task188195_baseBackground
name|void
name|tst_QStyleSheetStyle
operator|::
name|task188195_baseBackground
parameter_list|()
block|{
name|QTreeView
name|tree
decl_stmt|;
name|tree
operator|.
name|setStyleSheet
argument_list|(
literal|"QTreeView:disabled { background-color:#ab1251; }"
argument_list|)
expr_stmt|;
name|tree
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|QImage
name|image
argument_list|(
name|tree
operator|.
name|width
argument_list|()
argument_list|,
name|tree
operator|.
name|height
argument_list|()
argument_list|,
name|QImage
operator|::
name|Format_ARGB32
argument_list|)
decl_stmt|;
name|tree
operator|.
name|render
argument_list|(
operator|&
name|image
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testForColors
argument_list|(
name|image
argument_list|,
name|tree
operator|.
name|palette
argument_list|()
operator|.
name|base
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|testForColors
argument_list|(
name|image
argument_list|,
name|QColor
argument_list|(
literal|0xab
argument_list|,
literal|0x12
argument_list|,
literal|0x51
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|tree
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|tree
operator|.
name|render
argument_list|(
operator|&
name|image
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testForColors
argument_list|(
name|image
argument_list|,
name|QColor
argument_list|(
literal|0xab
argument_list|,
literal|0x12
argument_list|,
literal|0x51
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|tree
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|tree
operator|.
name|render
argument_list|(
operator|&
name|image
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testForColors
argument_list|(
name|image
argument_list|,
name|tree
operator|.
name|palette
argument_list|()
operator|.
name|base
argument_list|()
operator|.
name|color
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|testForColors
argument_list|(
name|image
argument_list|,
name|QColor
argument_list|(
literal|0xab
argument_list|,
literal|0x12
argument_list|,
literal|0x51
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QTableWidget
name|table
argument_list|(
literal|12
argument_list|,
literal|12
argument_list|)
decl_stmt|;
name|table
operator|.
name|setItem
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|new
name|QTableWidgetItem
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|setStyleSheet
argument_list|(
literal|"QTableView {background-color: #ff0000}"
argument_list|)
expr_stmt|;
name|table
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|image
operator|=
name|QImage
argument_list|(
name|table
operator|.
name|width
argument_list|()
argument_list|,
name|table
operator|.
name|height
argument_list|()
argument_list|,
name|QImage
operator|::
name|Format_ARGB32
argument_list|)
expr_stmt|;
name|table
operator|.
name|render
argument_list|(
operator|&
name|image
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testForColors
argument_list|(
name|image
argument_list|,
name|Qt
operator|::
name|red
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|task232085_spinBoxLineEditBg
name|void
name|tst_QStyleSheetStyle
operator|::
name|task232085_spinBoxLineEditBg
parameter_list|()
block|{
comment|// This test is a simplified version of the focusColors() test above.
comment|// Tests if colors can be changed by altering the focus of the widget.
comment|// To avoid messy pixel-by-pixel comparison, we assume that the goal
comment|// is reached if at least ten pixels of the right color can be found in
comment|// the image.
comment|// For this reason, we use unusual and extremely ugly colors! :-)
name|QSpinBox
modifier|*
name|spinbox
init|=
operator|new
name|QSpinBox
decl_stmt|;
name|spinbox
operator|->
name|setValue
argument_list|(
literal|8888
argument_list|)
expr_stmt|;
name|QDialog
name|frame
decl_stmt|;
name|QLayout
modifier|*
name|layout
init|=
operator|new
name|QGridLayout
decl_stmt|;
name|QLineEdit
modifier|*
name|dummy
init|=
operator|new
name|QLineEdit
decl_stmt|;
comment|// Avoids initial focus.
comment|// We only want to test the line edit colors.
name|spinbox
operator|->
name|setStyleSheet
argument_list|(
literal|"QSpinBox:focus { background: #e8ff66; color: #ff0084 } "
literal|"QSpinBox::up-button, QSpinBox::down-button { background: black; }"
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|dummy
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|spinbox
argument_list|)
expr_stmt|;
name|frame
operator|.
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
name|frame
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|frame
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|frame
argument_list|)
expr_stmt|;
name|spinbox
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QImage
name|image
argument_list|(
name|frame
operator|.
name|width
argument_list|()
argument_list|,
name|frame
operator|.
name|height
argument_list|()
argument_list|,
name|QImage
operator|::
name|Format_ARGB32
argument_list|)
decl_stmt|;
name|frame
operator|.
name|render
argument_list|(
operator|&
name|image
argument_list|)
expr_stmt|;
if|if
condition|(
name|image
operator|.
name|depth
argument_list|()
operator|<
literal|24
condition|)
block|{
name|QSKIP
argument_list|(
literal|"Test doesn't support color depth< 24"
argument_list|,
name|SkipAll
argument_list|)
expr_stmt|;
block|}
name|QVERIFY2
argument_list|(
name|testForColors
argument_list|(
name|image
argument_list|,
name|QColor
argument_list|(
literal|0xe8
argument_list|,
literal|0xff
argument_list|,
literal|0x66
argument_list|)
argument_list|)
argument_list|,
operator|(
name|QString
operator|::
name|fromLatin1
argument_list|(
name|spinbox
operator|->
name|metaObject
argument_list|()
operator|->
name|className
argument_list|()
argument_list|)
operator|+
literal|" did not contain background color #e8ff66, using style "
operator|+
name|QString
operator|::
name|fromLatin1
argument_list|(
name|qApp
operator|->
name|style
argument_list|()
operator|->
name|metaObject
argument_list|()
operator|->
name|className
argument_list|()
argument_list|)
operator|)
operator|.
name|toLocal8Bit
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY2
argument_list|(
name|testForColors
argument_list|(
name|image
argument_list|,
name|QColor
argument_list|(
literal|0xff
argument_list|,
literal|0x00
argument_list|,
literal|0x84
argument_list|)
argument_list|)
argument_list|,
operator|(
name|QString
operator|::
name|fromLatin1
argument_list|(
name|spinbox
operator|->
name|metaObject
argument_list|()
operator|->
name|className
argument_list|()
argument_list|)
operator|+
literal|" did not contain text color #ff0084, using style "
operator|+
name|QString
operator|::
name|fromLatin1
argument_list|(
name|qApp
operator|->
name|style
argument_list|()
operator|->
name|metaObject
argument_list|()
operator|->
name|className
argument_list|()
argument_list|)
operator|)
operator|.
name|toLocal8Bit
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|ChangeEventWidget
class|class
name|ChangeEventWidget
super|:
specifier|public
name|QWidget
block|{
public|public:
DECL|function|changeEvent
name|void
name|changeEvent
parameter_list|(
name|QEvent
modifier|*
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|->
name|type
argument_list|()
operator|==
name|QEvent
operator|::
name|StyleChange
condition|)
block|{
specifier|static
name|bool
name|recurse
init|=
literal|false
decl_stmt|;
if|if
condition|(
operator|!
name|recurse
condition|)
block|{
name|recurse
operator|=
literal|true
expr_stmt|;
name|QStyle
modifier|*
name|style
init|=
operator|new
name|QMotifStyle
decl_stmt|;
name|style
operator|->
name|setParent
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|setStyle
argument_list|(
name|style
argument_list|)
expr_stmt|;
name|recurse
operator|=
literal|false
expr_stmt|;
block|}
block|}
name|QWidget
operator|::
name|changeEvent
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|changeStyleInChangeEvent
name|void
name|tst_QStyleSheetStyle
operator|::
name|changeStyleInChangeEvent
parameter_list|()
block|{
comment|//must not crash;
name|ChangeEventWidget
name|wid
decl_stmt|;
name|wid
operator|.
name|ensurePolished
argument_list|()
expr_stmt|;
name|wid
operator|.
name|setStyleSheet
argument_list|(
literal|" /* */ "
argument_list|)
expr_stmt|;
name|wid
operator|.
name|ensurePolished
argument_list|()
expr_stmt|;
name|wid
operator|.
name|setStyleSheet
argument_list|(
literal|" /* ** */ "
argument_list|)
expr_stmt|;
name|wid
operator|.
name|ensurePolished
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|QTBUG11658_cachecrash
name|void
name|tst_QStyleSheetStyle
operator|::
name|QTBUG11658_cachecrash
parameter_list|()
block|{
comment|//should not crash
class|class
name|Widget
super|:
specifier|public
name|QWidget
block|{
public|public:
name|Widget
parameter_list|(
name|QWidget
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QWidget
argument_list|(
name|parent
argument_list|)
block|{
name|QVBoxLayout
modifier|*
name|pLayout
init|=
operator|new
name|QVBoxLayout
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|QCheckBox
modifier|*
name|pCheckBox
init|=
operator|new
name|QCheckBox
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|pLayout
operator|->
name|addWidget
argument_list|(
name|pCheckBox
argument_list|)
expr_stmt|;
name|setLayout
argument_list|(
name|pLayout
argument_list|)
expr_stmt|;
name|QString
name|szStyleSheet
init|=
name|QLatin1String
argument_list|(
literal|"* { color: red; }"
argument_list|)
decl_stmt|;
name|qApp
operator|->
name|setStyleSheet
argument_list|(
name|szStyleSheet
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|setStyle
argument_list|(
name|QStyleFactory
operator|::
name|create
argument_list|(
name|QLatin1String
argument_list|(
literal|"Windows"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
class|;
name|Widget
modifier|*
name|w
init|=
operator|new
name|Widget
argument_list|()
decl_stmt|;
operator|delete
name|w
expr_stmt|;
name|w
operator|=
operator|new
name|Widget
argument_list|()
expr_stmt|;
name|w
operator|->
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
name|w
argument_list|)
expr_stmt|;
operator|delete
name|w
expr_stmt|;
name|qApp
operator|->
name|setStyleSheet
argument_list|(
name|QString
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|QTBUG15910_crashNullWidget
name|void
name|tst_QStyleSheetStyle
operator|::
name|QTBUG15910_crashNullWidget
parameter_list|()
block|{
struct|struct
name|Widget
super|:
name|QWidget
block|{
specifier|virtual
name|void
name|paintEvent
parameter_list|(
name|QPaintEvent
modifier|*
parameter_list|)
block|{
name|QStyleOption
name|opt
decl_stmt|;
name|opt
operator|.
name|init
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|style
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|QStyle
operator|::
name|PE_Widget
argument_list|,
operator|&
name|opt
argument_list|,
operator|&
name|p
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|style
argument_list|()
operator|->
name|drawPrimitive
argument_list|(
name|QStyle
operator|::
name|PE_Frame
argument_list|,
operator|&
name|opt
argument_list|,
operator|&
name|p
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|style
argument_list|()
operator|->
name|drawControl
argument_list|(
name|QStyle
operator|::
name|CE_PushButton
argument_list|,
operator|&
name|opt
argument_list|,
operator|&
name|p
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
name|w
struct|;
name|w
operator|.
name|setStyleSheet
argument_list|(
literal|"* { background-color: white; color:black; border 3px solid yellow }"
argument_list|)
expr_stmt|;
name|w
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|w
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QStyleSheetStyle
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qstylesheetstyle.moc"
end_include
end_unit
