begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<QErrorMessage>
end_include
begin_include
include|#
directive|include
file|<QDebug>
end_include
begin_include
include|#
directive|include
file|<QCheckBox>
end_include
begin_class
DECL|class|tst_QErrorMessage
class|class
name|tst_QErrorMessage
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
private|private
name|slots
private|:
name|void
name|dontShowAgain
parameter_list|()
function_decl|;
name|void
name|dontShowCategoryAgain
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_function
DECL|function|dontShowAgain
name|void
name|tst_QErrorMessage
operator|::
name|dontShowAgain
parameter_list|()
block|{
name|QString
name|plainString
init|=
name|QLatin1String
argument_list|(
literal|"foo"
argument_list|)
decl_stmt|;
name|QString
name|htmlString
init|=
name|QLatin1String
argument_list|(
literal|"foo<br>bar"
argument_list|)
decl_stmt|;
name|QCheckBox
modifier|*
name|checkBox
init|=
literal|0
decl_stmt|;
name|QErrorMessage
name|errorMessageDialog
argument_list|(
literal|0
argument_list|)
decl_stmt|;
comment|// show an error with plain string
name|errorMessageDialog
operator|.
name|showMessage
argument_list|(
name|plainString
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|errorMessageDialog
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|checkBox
operator|=
name|qFindChild
argument_list|<
name|QCheckBox
operator|*
argument_list|>
argument_list|(
operator|&
name|errorMessageDialog
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|checkBox
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|checkBox
operator|->
name|isChecked
argument_list|()
argument_list|)
expr_stmt|;
name|errorMessageDialog
operator|.
name|close
argument_list|()
expr_stmt|;
name|errorMessageDialog
operator|.
name|showMessage
argument_list|(
name|plainString
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|errorMessageDialog
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|checkBox
operator|=
name|qFindChild
argument_list|<
name|QCheckBox
operator|*
argument_list|>
argument_list|(
operator|&
name|errorMessageDialog
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|checkBox
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|checkBox
operator|->
name|isChecked
argument_list|()
argument_list|)
expr_stmt|;
name|checkBox
operator|->
name|setChecked
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|errorMessageDialog
operator|.
name|close
argument_list|()
expr_stmt|;
name|errorMessageDialog
operator|.
name|showMessage
argument_list|(
name|plainString
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|errorMessageDialog
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
comment|// show an error with an html string
name|errorMessageDialog
operator|.
name|showMessage
argument_list|(
name|htmlString
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|errorMessageDialog
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|checkBox
operator|=
name|qFindChild
argument_list|<
name|QCheckBox
operator|*
argument_list|>
argument_list|(
operator|&
name|errorMessageDialog
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|checkBox
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|checkBox
operator|->
name|isChecked
argument_list|()
argument_list|)
expr_stmt|;
name|checkBox
operator|->
name|setChecked
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|errorMessageDialog
operator|.
name|close
argument_list|()
expr_stmt|;
name|errorMessageDialog
operator|.
name|showMessage
argument_list|(
name|htmlString
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|errorMessageDialog
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|checkBox
operator|=
name|qFindChild
argument_list|<
name|QCheckBox
operator|*
argument_list|>
argument_list|(
operator|&
name|errorMessageDialog
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|checkBox
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|checkBox
operator|->
name|isChecked
argument_list|()
argument_list|)
expr_stmt|;
name|checkBox
operator|->
name|setChecked
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|errorMessageDialog
operator|.
name|close
argument_list|()
expr_stmt|;
name|errorMessageDialog
operator|.
name|showMessage
argument_list|(
name|htmlString
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|errorMessageDialog
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|dontShowCategoryAgain
name|void
name|tst_QErrorMessage
operator|::
name|dontShowCategoryAgain
parameter_list|()
block|{
name|QString
name|htmlString
init|=
name|QLatin1String
argument_list|(
literal|"foo<br>bar"
argument_list|)
decl_stmt|;
name|QString
name|htmlString2
init|=
name|QLatin1String
argument_list|(
literal|"foo2<br>bar2"
argument_list|)
decl_stmt|;
name|QCheckBox
modifier|*
name|checkBox
init|=
literal|0
decl_stmt|;
name|QErrorMessage
name|errorMessageDialog
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|errorMessageDialog
operator|.
name|showMessage
argument_list|(
name|htmlString
argument_list|,
literal|"Cat 1"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|errorMessageDialog
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|checkBox
operator|=
name|qFindChild
argument_list|<
name|QCheckBox
operator|*
argument_list|>
argument_list|(
operator|&
name|errorMessageDialog
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|checkBox
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|checkBox
operator|->
name|isChecked
argument_list|()
argument_list|)
expr_stmt|;
name|checkBox
operator|->
name|setChecked
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|errorMessageDialog
operator|.
name|close
argument_list|()
expr_stmt|;
name|errorMessageDialog
operator|.
name|showMessage
argument_list|(
name|htmlString
argument_list|,
literal|"Cat 1"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|errorMessageDialog
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|checkBox
operator|=
name|qFindChild
argument_list|<
name|QCheckBox
operator|*
argument_list|>
argument_list|(
operator|&
name|errorMessageDialog
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|checkBox
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|checkBox
operator|->
name|isChecked
argument_list|()
argument_list|)
expr_stmt|;
name|checkBox
operator|->
name|setChecked
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|errorMessageDialog
operator|.
name|close
argument_list|()
expr_stmt|;
name|errorMessageDialog
operator|.
name|showMessage
argument_list|(
name|htmlString2
argument_list|,
literal|"Cat 1"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|errorMessageDialog
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|checkBox
operator|=
name|qFindChild
argument_list|<
name|QCheckBox
operator|*
argument_list|>
argument_list|(
operator|&
name|errorMessageDialog
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|checkBox
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|checkBox
operator|->
name|isChecked
argument_list|()
argument_list|)
expr_stmt|;
name|checkBox
operator|->
name|setChecked
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|errorMessageDialog
operator|.
name|close
argument_list|()
expr_stmt|;
name|errorMessageDialog
operator|.
name|showMessage
argument_list|(
name|htmlString
argument_list|,
literal|"Cat 1"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|errorMessageDialog
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|checkBox
operator|=
name|qFindChild
argument_list|<
name|QCheckBox
operator|*
argument_list|>
argument_list|(
operator|&
name|errorMessageDialog
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|checkBox
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|checkBox
operator|->
name|isChecked
argument_list|()
argument_list|)
expr_stmt|;
name|checkBox
operator|->
name|setChecked
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|errorMessageDialog
operator|.
name|close
argument_list|()
expr_stmt|;
name|errorMessageDialog
operator|.
name|showMessage
argument_list|(
name|htmlString2
argument_list|,
literal|"Cat 1"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|errorMessageDialog
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|errorMessageDialog
operator|.
name|showMessage
argument_list|(
name|htmlString
argument_list|,
literal|"Cat 1"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|errorMessageDialog
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|errorMessageDialog
operator|.
name|showMessage
argument_list|(
name|htmlString
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|errorMessageDialog
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|errorMessageDialog
operator|.
name|showMessage
argument_list|(
name|htmlString
argument_list|,
literal|"Cat 2"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|errorMessageDialog
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QErrorMessage
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qerrormessage.moc"
end_include
end_unit
