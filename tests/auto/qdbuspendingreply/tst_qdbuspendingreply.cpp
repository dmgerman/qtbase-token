begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtCore/QObject>
end_include
begin_include
include|#
directive|include
file|<QtCore/QVariant>
end_include
begin_include
include|#
directive|include
file|<QtCore/QList>
end_include
begin_include
include|#
directive|include
file|<QtCore/QVector>
end_include
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_DBUS
end_ifndef
begin_include
include|#
directive|include
file|<QtDBus>
end_include
begin_typedef
DECL|typedef|IntStringMap
typedef|typedef
name|QMap
argument_list|<
name|int
argument_list|,
name|QString
argument_list|>
name|IntStringMap
typedef|;
end_typedef
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|IntStringMap
argument_list|)
end_macro
begin_struct
DECL|struct|MyStruct
struct|struct
name|MyStruct
block|{
DECL|member|i
name|int
name|i
decl_stmt|;
DECL|member|s
name|QString
name|s
decl_stmt|;
DECL|function|MyStruct
name|MyStruct
parameter_list|()
member_init_list|:
name|i
argument_list|(
literal|1
argument_list|)
member_init_list|,
name|s
argument_list|(
literal|"String"
argument_list|)
block|{ }
DECL|function|operator ==
name|bool
name|operator
name|==
parameter_list|(
specifier|const
name|MyStruct
modifier|&
name|other
parameter_list|)
specifier|const
block|{
return|return
name|i
operator|==
name|other
operator|.
name|i
operator|&&
name|s
operator|==
name|other
operator|.
name|s
return|;
block|}
block|}
struct|;
end_struct
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|MyStruct
argument_list|)
end_macro
begin_function
DECL|function|operator <<
name|QDBusArgument
modifier|&
name|operator
name|<<
parameter_list|(
name|QDBusArgument
modifier|&
name|arg
parameter_list|,
specifier|const
name|MyStruct
modifier|&
name|ms
parameter_list|)
block|{
name|arg
operator|.
name|beginStructure
argument_list|()
expr_stmt|;
name|arg
operator|<<
name|ms
operator|.
name|i
operator|<<
name|ms
operator|.
name|s
expr_stmt|;
name|arg
operator|.
name|endStructure
argument_list|()
expr_stmt|;
return|return
name|arg
return|;
block|}
end_function
begin_function
DECL|function|operator >>
specifier|const
name|QDBusArgument
modifier|&
name|operator
name|>>
parameter_list|(
specifier|const
name|QDBusArgument
modifier|&
name|arg
parameter_list|,
name|MyStruct
modifier|&
name|ms
parameter_list|)
block|{
name|arg
operator|.
name|beginStructure
argument_list|()
expr_stmt|;
name|arg
operator|>>
name|ms
operator|.
name|i
operator|>>
name|ms
operator|.
name|s
expr_stmt|;
name|arg
operator|.
name|endStructure
argument_list|()
expr_stmt|;
return|return
name|arg
return|;
block|}
end_function
begin_class_decl
class_decl|class
name|TypesInterface
class_decl|;
end_class_decl
begin_class
DECL|class|tst_QDBusPendingReply
class|class
name|tst_QDBusPendingReply
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
DECL|member|iface
name|QDBusInterface
modifier|*
name|iface
decl_stmt|;
DECL|member|adaptor
name|TypesInterface
modifier|*
name|adaptor
decl_stmt|;
public|public:
name|tst_QDBusPendingReply
parameter_list|()
constructor_decl|;
private|private
name|slots
private|:
DECL|function|initTestCase
name|void
name|initTestCase
parameter_list|()
block|{
name|qDBusRegisterMetaType
argument_list|<
name|IntStringMap
argument_list|>
argument_list|()
expr_stmt|;
name|qDBusRegisterMetaType
argument_list|<
name|MyStruct
argument_list|>
argument_list|()
expr_stmt|;
block|}
name|void
name|init
parameter_list|()
function_decl|;
name|void
name|unconnected
parameter_list|()
function_decl|;
name|void
name|simpleTypes
parameter_list|()
function_decl|;
name|void
name|complexTypes
parameter_list|()
function_decl|;
name|void
name|wrongTypes
parameter_list|()
function_decl|;
name|void
name|multipleTypes
parameter_list|()
function_decl|;
name|void
name|synchronousSimpleTypes
parameter_list|()
function_decl|;
name|void
name|errors
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_class
DECL|class|TypesInterface
class|class
name|TypesInterface
super|:
specifier|public
name|QDBusAbstractAdaptor
block|{
name|Q_OBJECT
name|Q_CLASSINFO
argument_list|(
literal|"D-Bus Interface"
argument_list|,
literal|"com.trolltech.Qt.Autotests.TypesInterface"
argument_list|)
decl|public
range|:
DECL|function|TypesInterface
name|TypesInterface
argument_list|(
name|QObject
operator|*
name|parent
argument_list|)
operator|:
name|QDBusAbstractAdaptor
argument_list|(
argument|parent
argument_list|)
block|{ }
specifier|public
name|slots
operator|:
DECL|function|retrieveVoid
name|void
name|retrieveVoid
argument_list|()
block|{ }
DECL|function|retrieveBool
name|bool
name|retrieveBool
argument_list|()
block|{
return|return
literal|true
return|;
block|}
DECL|function|retrieveUChar
name|uchar
name|retrieveUChar
parameter_list|()
block|{
return|return
literal|'A'
return|;
block|}
DECL|function|retrieveShort
name|short
name|retrieveShort
parameter_list|()
block|{
return|return
operator|-
literal|47
return|;
block|}
DECL|function|retrieveUShort
name|ushort
name|retrieveUShort
parameter_list|()
block|{
return|return
literal|42U
return|;
block|}
DECL|function|retrieveInt
name|int
name|retrieveInt
parameter_list|()
block|{
return|return
operator|-
literal|470000
return|;
block|}
DECL|function|retrieveIntInt
name|void
name|retrieveIntInt
parameter_list|(
name|int
modifier|&
name|i1
parameter_list|,
name|int
modifier|&
name|i2
parameter_list|)
block|{
name|i1
operator|=
operator|-
literal|424242
expr_stmt|;
name|i2
operator|=
literal|434343
expr_stmt|;
block|}
DECL|function|retrieveUInt
name|uint
name|retrieveUInt
parameter_list|()
block|{
return|return
literal|42424242
return|;
block|}
DECL|function|retrieveLongLong
name|qlonglong
name|retrieveLongLong
parameter_list|()
block|{
return|return
operator|-
operator|(
name|Q_INT64_C
argument_list|(
literal|1
argument_list|)
operator|<<
literal|32
operator|)
return|;
block|}
DECL|function|retrieveULongLong
name|qulonglong
name|retrieveULongLong
parameter_list|()
block|{
return|return
name|Q_INT64_C
argument_list|(
literal|1
argument_list|)
operator|<<
literal|32
return|;
block|}
DECL|function|retrieveDouble
name|double
name|retrieveDouble
parameter_list|()
block|{
return|return
literal|1.5
return|;
block|}
DECL|function|retrieveString
name|QString
name|retrieveString
parameter_list|()
block|{
return|return
literal|"This string you should see"
return|;
block|}
DECL|function|retrieveObjectPath
name|QDBusObjectPath
name|retrieveObjectPath
parameter_list|()
block|{
return|return
name|QDBusObjectPath
argument_list|(
literal|"/"
argument_list|)
return|;
block|}
DECL|function|retrieveSignature
name|QDBusSignature
name|retrieveSignature
parameter_list|()
block|{
return|return
name|QDBusSignature
argument_list|(
literal|"g"
argument_list|)
return|;
block|}
DECL|function|retrieveVariant
name|QDBusVariant
name|retrieveVariant
parameter_list|()
block|{
return|return
name|QDBusVariant
argument_list|(
name|retrieveString
argument_list|()
argument_list|)
return|;
block|}
DECL|function|retrieveStringList
name|QStringList
name|retrieveStringList
parameter_list|()
block|{
return|return
name|QStringList
argument_list|()
operator|<<
literal|"one"
operator|<<
literal|"two"
return|;
block|}
DECL|function|retrieveByteArray
name|QByteArray
name|retrieveByteArray
parameter_list|()
block|{
return|return
literal|"Hello, World"
return|;
block|}
DECL|function|retrieveList
name|QVariantList
name|retrieveList
parameter_list|()
block|{
return|return
name|QVariantList
argument_list|()
operator|<<
name|retrieveInt
argument_list|()
operator|<<
name|retrieveString
argument_list|()
operator|<<
name|retrieveByteArray
argument_list|()
return|;
block|}
DECL|function|retrieveMap
name|QVariantMap
name|retrieveMap
parameter_list|()
block|{
name|QVariantMap
name|map
decl_stmt|;
name|map
index|[
literal|"one"
index|]
operator|=
literal|1
expr_stmt|;
name|map
index|[
literal|"two"
index|]
operator|=
literal|2U
expr_stmt|;
name|map
index|[
literal|"string"
index|]
operator|=
name|retrieveString
argument_list|()
expr_stmt|;
name|map
index|[
literal|"stringlist"
index|]
operator|=
name|retrieveStringList
argument_list|()
expr_stmt|;
return|return
name|map
return|;
block|}
DECL|function|retrieveIntStringMap
name|IntStringMap
name|retrieveIntStringMap
parameter_list|()
block|{
name|IntStringMap
name|map
decl_stmt|;
name|map
index|[
literal|1
index|]
operator|=
literal|"1"
expr_stmt|;
name|map
index|[
literal|2
index|]
operator|=
literal|"2"
expr_stmt|;
name|map
index|[
operator|-
literal|1231456
index|]
operator|=
literal|"foo"
expr_stmt|;
return|return
name|map
return|;
block|}
DECL|function|retrieveStruct
name|MyStruct
name|retrieveStruct
parameter_list|()
block|{
return|return
name|MyStruct
argument_list|()
return|;
block|}
DECL|function|sendError
name|void
name|sendError
parameter_list|(
specifier|const
name|QDBusMessage
modifier|&
name|msg
parameter_list|)
block|{
name|msg
operator|.
name|setDelayedReply
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QDBusConnection
operator|::
name|sessionBus
argument_list|()
operator|.
name|send
argument_list|(
name|msg
operator|.
name|createErrorReply
argument_list|(
literal|"local.AnErrorName"
argument_list|,
literal|"You've got an error!"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
class|;
end_class
begin_constructor
DECL|function|tst_QDBusPendingReply
name|tst_QDBusPendingReply
operator|::
name|tst_QDBusPendingReply
parameter_list|()
block|{
name|adaptor
operator|=
operator|new
name|TypesInterface
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|QDBusConnection
operator|::
name|sessionBus
argument_list|()
operator|.
name|registerObject
argument_list|(
literal|"/"
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|iface
operator|=
operator|new
name|QDBusInterface
argument_list|(
name|QDBusConnection
operator|::
name|sessionBus
argument_list|()
operator|.
name|baseService
argument_list|()
argument_list|,
literal|"/"
argument_list|,
literal|"com.trolltech.Qt.Autotests.TypesInterface"
argument_list|,
name|QDBusConnection
operator|::
name|sessionBus
argument_list|()
argument_list|,
name|this
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_function
DECL|function|init
name|void
name|tst_QDBusPendingReply
operator|::
name|init
parameter_list|()
block|{
name|QVERIFY
argument_list|(
name|iface
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|iface
operator|->
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|unconnected
name|void
name|tst_QDBusPendingReply
operator|::
name|unconnected
parameter_list|()
block|{
name|QDBusConnection
name|con
argument_list|(
literal|"invalid stored connection"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|con
operator|.
name|isConnected
argument_list|()
argument_list|)
expr_stmt|;
name|QDBusInterface
name|iface
argument_list|(
literal|"doesnt.matter"
argument_list|,
literal|"/"
argument_list|,
literal|"doesnt.matter"
argument_list|,
name|con
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|iface
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QDBusPendingReply
argument_list|<>
name|rvoid
init|=
name|iface
operator|.
name|asyncCall
argument_list|(
literal|"ReloadConfig"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|rvoid
operator|.
name|isFinished
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|rvoid
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|rvoid
operator|.
name|isError
argument_list|()
argument_list|)
expr_stmt|;
name|rvoid
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|rvoid
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|rvoid
operator|.
name|isError
argument_list|()
argument_list|)
expr_stmt|;
name|QDBusPendingReply
argument_list|<
name|QString
argument_list|>
name|rstring
init|=
name|iface
operator|.
name|asyncCall
argument_list|(
literal|"GetId"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|rstring
operator|.
name|isFinished
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|rstring
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|rstring
operator|.
name|isError
argument_list|()
argument_list|)
expr_stmt|;
name|rstring
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|rstring
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|rstring
operator|.
name|isError
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|simpleTypes
name|void
name|tst_QDBusPendingReply
operator|::
name|simpleTypes
parameter_list|()
block|{
name|QDBusPendingReply
argument_list|<>
name|rvoid
init|=
name|iface
operator|->
name|asyncCall
argument_list|(
literal|"retrieveVoid"
argument_list|)
decl_stmt|;
name|rvoid
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|rvoid
operator|.
name|isFinished
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|rvoid
operator|.
name|isError
argument_list|()
argument_list|)
expr_stmt|;
name|QDBusPendingReply
argument_list|<
name|bool
argument_list|>
name|rbool
init|=
name|iface
operator|->
name|asyncCall
argument_list|(
literal|"retrieveBool"
argument_list|)
decl_stmt|;
name|rbool
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|rbool
operator|.
name|isFinished
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rbool
operator|.
name|argumentAt
argument_list|<
literal|0
argument_list|>
argument_list|()
argument_list|,
name|adaptor
operator|->
name|retrieveBool
argument_list|()
argument_list|)
expr_stmt|;
name|QDBusPendingReply
argument_list|<
name|uchar
argument_list|>
name|ruchar
init|=
name|iface
operator|->
name|asyncCall
argument_list|(
literal|"retrieveUChar"
argument_list|)
decl_stmt|;
name|ruchar
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|ruchar
operator|.
name|isFinished
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ruchar
operator|.
name|argumentAt
argument_list|<
literal|0
argument_list|>
argument_list|()
argument_list|,
name|adaptor
operator|->
name|retrieveUChar
argument_list|()
argument_list|)
expr_stmt|;
name|QDBusPendingReply
argument_list|<
name|short
argument_list|>
name|rshort
init|=
name|iface
operator|->
name|asyncCall
argument_list|(
literal|"retrieveShort"
argument_list|)
decl_stmt|;
name|rshort
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|rshort
operator|.
name|isFinished
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rshort
operator|.
name|argumentAt
argument_list|<
literal|0
argument_list|>
argument_list|()
argument_list|,
name|adaptor
operator|->
name|retrieveShort
argument_list|()
argument_list|)
expr_stmt|;
name|QDBusPendingReply
argument_list|<
name|ushort
argument_list|>
name|rushort
init|=
name|iface
operator|->
name|asyncCall
argument_list|(
literal|"retrieveUShort"
argument_list|)
decl_stmt|;
name|rushort
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|rushort
operator|.
name|isFinished
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rushort
operator|.
name|argumentAt
argument_list|<
literal|0
argument_list|>
argument_list|()
argument_list|,
name|adaptor
operator|->
name|retrieveUShort
argument_list|()
argument_list|)
expr_stmt|;
name|QDBusPendingReply
argument_list|<
name|int
argument_list|>
name|rint
init|=
name|iface
operator|->
name|asyncCall
argument_list|(
literal|"retrieveInt"
argument_list|)
decl_stmt|;
name|rint
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|rint
operator|.
name|isFinished
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rint
operator|.
name|argumentAt
argument_list|<
literal|0
argument_list|>
argument_list|()
argument_list|,
name|adaptor
operator|->
name|retrieveInt
argument_list|()
argument_list|)
expr_stmt|;
name|QDBusPendingReply
argument_list|<
name|uint
argument_list|>
name|ruint
init|=
name|iface
operator|->
name|asyncCall
argument_list|(
literal|"retrieveUInt"
argument_list|)
decl_stmt|;
name|ruint
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|ruint
operator|.
name|isFinished
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ruint
operator|.
name|argumentAt
argument_list|<
literal|0
argument_list|>
argument_list|()
argument_list|,
name|adaptor
operator|->
name|retrieveUInt
argument_list|()
argument_list|)
expr_stmt|;
name|QDBusPendingReply
argument_list|<
name|qlonglong
argument_list|>
name|rqlonglong
init|=
name|iface
operator|->
name|asyncCall
argument_list|(
literal|"retrieveLongLong"
argument_list|)
decl_stmt|;
name|rqlonglong
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|rqlonglong
operator|.
name|isFinished
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rqlonglong
operator|.
name|argumentAt
argument_list|<
literal|0
argument_list|>
argument_list|()
argument_list|,
name|adaptor
operator|->
name|retrieveLongLong
argument_list|()
argument_list|)
expr_stmt|;
name|QDBusPendingReply
argument_list|<
name|qulonglong
argument_list|>
name|rqulonglong
init|=
name|iface
operator|->
name|asyncCall
argument_list|(
literal|"retrieveULongLong"
argument_list|)
decl_stmt|;
name|rqulonglong
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|rqulonglong
operator|.
name|isFinished
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rqulonglong
operator|.
name|argumentAt
argument_list|<
literal|0
argument_list|>
argument_list|()
argument_list|,
name|adaptor
operator|->
name|retrieveULongLong
argument_list|()
argument_list|)
expr_stmt|;
name|QDBusPendingReply
argument_list|<
name|double
argument_list|>
name|rdouble
init|=
name|iface
operator|->
name|asyncCall
argument_list|(
literal|"retrieveDouble"
argument_list|)
decl_stmt|;
name|rdouble
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|rdouble
operator|.
name|isFinished
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rdouble
operator|.
name|argumentAt
argument_list|<
literal|0
argument_list|>
argument_list|()
argument_list|,
name|adaptor
operator|->
name|retrieveDouble
argument_list|()
argument_list|)
expr_stmt|;
name|QDBusPendingReply
argument_list|<
name|QString
argument_list|>
name|rstring
init|=
name|iface
operator|->
name|asyncCall
argument_list|(
literal|"retrieveString"
argument_list|)
decl_stmt|;
name|rstring
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|rstring
operator|.
name|isFinished
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rstring
operator|.
name|argumentAt
argument_list|<
literal|0
argument_list|>
argument_list|()
argument_list|,
name|adaptor
operator|->
name|retrieveString
argument_list|()
argument_list|)
expr_stmt|;
name|QDBusPendingReply
argument_list|<
name|QDBusObjectPath
argument_list|>
name|robjectpath
init|=
name|iface
operator|->
name|asyncCall
argument_list|(
literal|"retrieveObjectPath"
argument_list|)
decl_stmt|;
name|robjectpath
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|robjectpath
operator|.
name|isFinished
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|robjectpath
operator|.
name|argumentAt
argument_list|<
literal|0
argument_list|>
argument_list|()
operator|.
name|path
argument_list|()
argument_list|,
name|adaptor
operator|->
name|retrieveObjectPath
argument_list|()
operator|.
name|path
argument_list|()
argument_list|)
expr_stmt|;
name|QDBusPendingReply
argument_list|<
name|QDBusSignature
argument_list|>
name|rsignature
init|=
name|iface
operator|->
name|asyncCall
argument_list|(
literal|"retrieveSignature"
argument_list|)
decl_stmt|;
name|rsignature
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|rsignature
operator|.
name|isFinished
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rsignature
operator|.
name|argumentAt
argument_list|<
literal|0
argument_list|>
argument_list|()
operator|.
name|signature
argument_list|()
argument_list|,
name|adaptor
operator|->
name|retrieveSignature
argument_list|()
operator|.
name|signature
argument_list|()
argument_list|)
expr_stmt|;
name|QDBusPendingReply
argument_list|<
name|QDBusVariant
argument_list|>
name|rdbusvariant
init|=
name|iface
operator|->
name|asyncCall
argument_list|(
literal|"retrieveVariant"
argument_list|)
decl_stmt|;
name|rdbusvariant
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|rdbusvariant
operator|.
name|isFinished
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rdbusvariant
operator|.
name|argumentAt
argument_list|<
literal|0
argument_list|>
argument_list|()
operator|.
name|variant
argument_list|()
argument_list|,
name|adaptor
operator|->
name|retrieveVariant
argument_list|()
operator|.
name|variant
argument_list|()
argument_list|)
expr_stmt|;
name|QDBusPendingReply
argument_list|<
name|QVariant
argument_list|>
name|rvariant
init|=
name|iface
operator|->
name|asyncCall
argument_list|(
literal|"retrieveVariant"
argument_list|)
decl_stmt|;
name|rvariant
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|rvariant
operator|.
name|isFinished
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rvariant
operator|.
name|argumentAt
argument_list|<
literal|0
argument_list|>
argument_list|()
argument_list|,
name|adaptor
operator|->
name|retrieveVariant
argument_list|()
operator|.
name|variant
argument_list|()
argument_list|)
expr_stmt|;
name|QDBusPendingReply
argument_list|<
name|QByteArray
argument_list|>
name|rbytearray
init|=
name|iface
operator|->
name|asyncCall
argument_list|(
literal|"retrieveByteArray"
argument_list|)
decl_stmt|;
name|rbytearray
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|rbytearray
operator|.
name|isFinished
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rbytearray
operator|.
name|argumentAt
argument_list|<
literal|0
argument_list|>
argument_list|()
argument_list|,
name|adaptor
operator|->
name|retrieveByteArray
argument_list|()
argument_list|)
expr_stmt|;
name|QDBusPendingReply
argument_list|<
name|QStringList
argument_list|>
name|rstringlist
init|=
name|iface
operator|->
name|asyncCall
argument_list|(
literal|"retrieveStringList"
argument_list|)
decl_stmt|;
name|rstringlist
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|rstringlist
operator|.
name|isFinished
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rstringlist
operator|.
name|argumentAt
argument_list|<
literal|0
argument_list|>
argument_list|()
argument_list|,
name|adaptor
operator|->
name|retrieveStringList
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|complexTypes
name|void
name|tst_QDBusPendingReply
operator|::
name|complexTypes
parameter_list|()
block|{
name|QDBusPendingReply
argument_list|<
name|QVariantList
argument_list|>
name|rlist
init|=
name|iface
operator|->
name|asyncCall
argument_list|(
literal|"retrieveList"
argument_list|)
decl_stmt|;
name|rlist
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|rlist
operator|.
name|isFinished
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rlist
operator|.
name|argumentAt
argument_list|<
literal|0
argument_list|>
argument_list|()
argument_list|,
name|adaptor
operator|->
name|retrieveList
argument_list|()
argument_list|)
expr_stmt|;
name|QDBusPendingReply
argument_list|<
name|QVariantMap
argument_list|>
name|rmap
init|=
name|iface
operator|->
name|asyncCall
argument_list|(
literal|"retrieveMap"
argument_list|)
decl_stmt|;
name|rmap
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|rmap
operator|.
name|isFinished
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rmap
operator|.
name|argumentAt
argument_list|<
literal|0
argument_list|>
argument_list|()
argument_list|,
name|adaptor
operator|->
name|retrieveMap
argument_list|()
argument_list|)
expr_stmt|;
name|QDBusPendingReply
argument_list|<
name|IntStringMap
argument_list|>
name|rismap
init|=
name|iface
operator|->
name|asyncCall
argument_list|(
literal|"retrieveIntStringMap"
argument_list|)
decl_stmt|;
name|rismap
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|rismap
operator|.
name|isFinished
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rismap
operator|.
name|argumentAt
argument_list|<
literal|0
argument_list|>
argument_list|()
argument_list|,
name|adaptor
operator|->
name|retrieveIntStringMap
argument_list|()
argument_list|)
expr_stmt|;
name|QDBusPendingReply
argument_list|<
name|MyStruct
argument_list|>
name|rstruct
init|=
name|iface
operator|->
name|asyncCall
argument_list|(
literal|"retrieveStruct"
argument_list|)
decl_stmt|;
name|rstruct
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|rstruct
operator|.
name|isFinished
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rstruct
operator|.
name|argumentAt
argument_list|<
literal|0
argument_list|>
argument_list|()
argument_list|,
name|adaptor
operator|->
name|retrieveStruct
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_define
DECL|macro|VERIFY_WRONG_TYPE
define|#
directive|define
name|VERIFY_WRONG_TYPE
parameter_list|(
name|error
parameter_list|)
define|\
value|QVERIFY(error.isValid());                                   \     QCOMPARE(error.type(), QDBusError::InvalidSignature)
end_define
begin_function
DECL|function|wrongTypes
name|void
name|tst_QDBusPendingReply
operator|::
name|wrongTypes
parameter_list|()
block|{
name|QDBusError
name|error
decl_stmt|;
name|QDBusPendingReply
argument_list|<
name|bool
argument_list|>
name|rbool
init|=
name|iface
operator|->
name|asyncCall
argument_list|(
literal|"retrieveInt"
argument_list|)
decl_stmt|;
name|rbool
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|rbool
operator|.
name|isFinished
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|rbool
operator|.
name|isError
argument_list|()
argument_list|)
expr_stmt|;
name|error
operator|=
name|rbool
operator|.
name|error
argument_list|()
expr_stmt|;
name|VERIFY_WRONG_TYPE
argument_list|(
name|error
argument_list|)
expr_stmt|;
name|rbool
operator|=
name|iface
operator|->
name|asyncCall
argument_list|(
literal|"retrieveShort"
argument_list|)
expr_stmt|;
name|rbool
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|rbool
operator|.
name|isFinished
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|rbool
operator|.
name|isError
argument_list|()
argument_list|)
expr_stmt|;
name|error
operator|=
name|rbool
operator|.
name|error
argument_list|()
expr_stmt|;
name|VERIFY_WRONG_TYPE
argument_list|(
name|error
argument_list|)
expr_stmt|;
name|rbool
operator|=
name|iface
operator|->
name|asyncCall
argument_list|(
literal|"retrieveStruct"
argument_list|)
expr_stmt|;
name|rbool
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|rbool
operator|.
name|isFinished
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|rbool
operator|.
name|isError
argument_list|()
argument_list|)
expr_stmt|;
name|error
operator|=
name|rbool
operator|.
name|error
argument_list|()
expr_stmt|;
name|VERIFY_WRONG_TYPE
argument_list|(
name|error
argument_list|)
expr_stmt|;
name|QDBusPendingReply
argument_list|<
name|short
argument_list|>
name|rshort
init|=
name|iface
operator|->
name|asyncCall
argument_list|(
literal|"retrieveInt"
argument_list|)
decl_stmt|;
name|rshort
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|rshort
operator|.
name|isFinished
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|rshort
operator|.
name|isError
argument_list|()
argument_list|)
expr_stmt|;
name|error
operator|=
name|rshort
operator|.
name|error
argument_list|()
expr_stmt|;
name|VERIFY_WRONG_TYPE
argument_list|(
name|error
argument_list|)
expr_stmt|;
name|rshort
operator|=
name|iface
operator|->
name|asyncCall
argument_list|(
literal|"retrieveBool"
argument_list|)
expr_stmt|;
name|rshort
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|rshort
operator|.
name|isFinished
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|rshort
operator|.
name|isError
argument_list|()
argument_list|)
expr_stmt|;
name|error
operator|=
name|rshort
operator|.
name|error
argument_list|()
expr_stmt|;
name|VERIFY_WRONG_TYPE
argument_list|(
name|error
argument_list|)
expr_stmt|;
name|rshort
operator|=
name|iface
operator|->
name|asyncCall
argument_list|(
literal|"retrieveStruct"
argument_list|)
expr_stmt|;
name|rshort
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|rshort
operator|.
name|isFinished
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|rshort
operator|.
name|isError
argument_list|()
argument_list|)
expr_stmt|;
name|error
operator|=
name|rshort
operator|.
name|error
argument_list|()
expr_stmt|;
name|VERIFY_WRONG_TYPE
argument_list|(
name|error
argument_list|)
expr_stmt|;
name|QDBusPendingReply
argument_list|<
name|MyStruct
argument_list|>
name|rstruct
init|=
name|iface
operator|->
name|asyncCall
argument_list|(
literal|"retrieveInt"
argument_list|)
decl_stmt|;
name|rstruct
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|rstruct
operator|.
name|isFinished
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|rstruct
operator|.
name|isError
argument_list|()
argument_list|)
expr_stmt|;
name|error
operator|=
name|rstruct
operator|.
name|error
argument_list|()
expr_stmt|;
name|VERIFY_WRONG_TYPE
argument_list|(
name|error
argument_list|)
expr_stmt|;
name|rstruct
operator|=
name|iface
operator|->
name|asyncCall
argument_list|(
literal|"retrieveShort"
argument_list|)
expr_stmt|;
name|rstruct
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|rstruct
operator|.
name|isFinished
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|rstruct
operator|.
name|isError
argument_list|()
argument_list|)
expr_stmt|;
name|error
operator|=
name|rstruct
operator|.
name|error
argument_list|()
expr_stmt|;
name|VERIFY_WRONG_TYPE
argument_list|(
name|error
argument_list|)
expr_stmt|;
name|rstruct
operator|=
name|iface
operator|->
name|asyncCall
argument_list|(
literal|"retrieveIntStringMap"
argument_list|)
expr_stmt|;
name|rstruct
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|rstruct
operator|.
name|isFinished
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|rstruct
operator|.
name|isError
argument_list|()
argument_list|)
expr_stmt|;
name|error
operator|=
name|rstruct
operator|.
name|error
argument_list|()
expr_stmt|;
name|VERIFY_WRONG_TYPE
argument_list|(
name|error
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|multipleTypes
name|void
name|tst_QDBusPendingReply
operator|::
name|multipleTypes
parameter_list|()
block|{
name|QDBusPendingReply
argument_list|<
name|int
argument_list|,
name|int
argument_list|>
name|rintint
init|=
name|iface
operator|->
name|asyncCall
argument_list|(
literal|"retrieveIntInt"
argument_list|)
decl_stmt|;
name|rintint
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|rintint
operator|.
name|isFinished
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|rintint
operator|.
name|isError
argument_list|()
argument_list|)
expr_stmt|;
name|int
name|i1
decl_stmt|,
name|i2
decl_stmt|;
name|adaptor
operator|->
name|retrieveIntInt
argument_list|(
name|i1
argument_list|,
name|i2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rintint
operator|.
name|argumentAt
argument_list|<
literal|0
argument_list|>
argument_list|()
argument_list|,
name|i1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rintint
operator|.
name|argumentAt
argument_list|<
literal|1
argument_list|>
argument_list|()
argument_list|,
name|i2
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|synchronousSimpleTypes
name|void
name|tst_QDBusPendingReply
operator|::
name|synchronousSimpleTypes
parameter_list|()
block|{
name|QDBusPendingReply
argument_list|<
name|bool
argument_list|>
name|rbool
init|=
name|iface
operator|->
name|call
argument_list|(
literal|"retrieveBool"
argument_list|)
decl_stmt|;
name|rbool
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|rbool
operator|.
name|isFinished
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rbool
operator|.
name|argumentAt
argument_list|<
literal|0
argument_list|>
argument_list|()
argument_list|,
name|adaptor
operator|->
name|retrieveBool
argument_list|()
argument_list|)
expr_stmt|;
name|QDBusPendingReply
argument_list|<
name|uchar
argument_list|>
name|ruchar
init|=
name|iface
operator|->
name|call
argument_list|(
literal|"retrieveUChar"
argument_list|)
decl_stmt|;
name|ruchar
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|ruchar
operator|.
name|isFinished
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ruchar
operator|.
name|argumentAt
argument_list|<
literal|0
argument_list|>
argument_list|()
argument_list|,
name|adaptor
operator|->
name|retrieveUChar
argument_list|()
argument_list|)
expr_stmt|;
name|QDBusPendingReply
argument_list|<
name|short
argument_list|>
name|rshort
init|=
name|iface
operator|->
name|call
argument_list|(
literal|"retrieveShort"
argument_list|)
decl_stmt|;
name|rshort
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|rshort
operator|.
name|isFinished
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rshort
operator|.
name|argumentAt
argument_list|<
literal|0
argument_list|>
argument_list|()
argument_list|,
name|adaptor
operator|->
name|retrieveShort
argument_list|()
argument_list|)
expr_stmt|;
name|QDBusPendingReply
argument_list|<
name|ushort
argument_list|>
name|rushort
init|=
name|iface
operator|->
name|call
argument_list|(
literal|"retrieveUShort"
argument_list|)
decl_stmt|;
name|rushort
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|rushort
operator|.
name|isFinished
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rushort
operator|.
name|argumentAt
argument_list|<
literal|0
argument_list|>
argument_list|()
argument_list|,
name|adaptor
operator|->
name|retrieveUShort
argument_list|()
argument_list|)
expr_stmt|;
name|QDBusPendingReply
argument_list|<
name|int
argument_list|>
name|rint
init|=
name|iface
operator|->
name|call
argument_list|(
literal|"retrieveInt"
argument_list|)
decl_stmt|;
name|rint
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|rint
operator|.
name|isFinished
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rint
operator|.
name|argumentAt
argument_list|<
literal|0
argument_list|>
argument_list|()
argument_list|,
name|adaptor
operator|->
name|retrieveInt
argument_list|()
argument_list|)
expr_stmt|;
name|QDBusPendingReply
argument_list|<
name|uint
argument_list|>
name|ruint
init|=
name|iface
operator|->
name|call
argument_list|(
literal|"retrieveUInt"
argument_list|)
decl_stmt|;
name|ruint
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|ruint
operator|.
name|isFinished
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ruint
operator|.
name|argumentAt
argument_list|<
literal|0
argument_list|>
argument_list|()
argument_list|,
name|adaptor
operator|->
name|retrieveUInt
argument_list|()
argument_list|)
expr_stmt|;
name|QDBusPendingReply
argument_list|<
name|qlonglong
argument_list|>
name|rqlonglong
init|=
name|iface
operator|->
name|call
argument_list|(
literal|"retrieveLongLong"
argument_list|)
decl_stmt|;
name|rqlonglong
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|rqlonglong
operator|.
name|isFinished
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rqlonglong
operator|.
name|argumentAt
argument_list|<
literal|0
argument_list|>
argument_list|()
argument_list|,
name|adaptor
operator|->
name|retrieveLongLong
argument_list|()
argument_list|)
expr_stmt|;
name|QDBusPendingReply
argument_list|<
name|qulonglong
argument_list|>
name|rqulonglong
init|=
name|iface
operator|->
name|call
argument_list|(
literal|"retrieveULongLong"
argument_list|)
decl_stmt|;
name|rqulonglong
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|rqulonglong
operator|.
name|isFinished
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rqulonglong
operator|.
name|argumentAt
argument_list|<
literal|0
argument_list|>
argument_list|()
argument_list|,
name|adaptor
operator|->
name|retrieveULongLong
argument_list|()
argument_list|)
expr_stmt|;
name|QDBusPendingReply
argument_list|<
name|double
argument_list|>
name|rdouble
init|=
name|iface
operator|->
name|call
argument_list|(
literal|"retrieveDouble"
argument_list|)
decl_stmt|;
name|rdouble
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|rdouble
operator|.
name|isFinished
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rdouble
operator|.
name|argumentAt
argument_list|<
literal|0
argument_list|>
argument_list|()
argument_list|,
name|adaptor
operator|->
name|retrieveDouble
argument_list|()
argument_list|)
expr_stmt|;
name|QDBusPendingReply
argument_list|<
name|QString
argument_list|>
name|rstring
init|=
name|iface
operator|->
name|call
argument_list|(
literal|"retrieveString"
argument_list|)
decl_stmt|;
name|rstring
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|rstring
operator|.
name|isFinished
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rstring
operator|.
name|argumentAt
argument_list|<
literal|0
argument_list|>
argument_list|()
argument_list|,
name|adaptor
operator|->
name|retrieveString
argument_list|()
argument_list|)
expr_stmt|;
name|QDBusPendingReply
argument_list|<
name|QDBusObjectPath
argument_list|>
name|robjectpath
init|=
name|iface
operator|->
name|call
argument_list|(
literal|"retrieveObjectPath"
argument_list|)
decl_stmt|;
name|robjectpath
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|robjectpath
operator|.
name|isFinished
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|robjectpath
operator|.
name|argumentAt
argument_list|<
literal|0
argument_list|>
argument_list|()
operator|.
name|path
argument_list|()
argument_list|,
name|adaptor
operator|->
name|retrieveObjectPath
argument_list|()
operator|.
name|path
argument_list|()
argument_list|)
expr_stmt|;
name|QDBusPendingReply
argument_list|<
name|QDBusSignature
argument_list|>
name|rsignature
init|=
name|iface
operator|->
name|call
argument_list|(
literal|"retrieveSignature"
argument_list|)
decl_stmt|;
name|rsignature
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|rsignature
operator|.
name|isFinished
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rsignature
operator|.
name|argumentAt
argument_list|<
literal|0
argument_list|>
argument_list|()
operator|.
name|signature
argument_list|()
argument_list|,
name|adaptor
operator|->
name|retrieveSignature
argument_list|()
operator|.
name|signature
argument_list|()
argument_list|)
expr_stmt|;
name|QDBusPendingReply
argument_list|<
name|QDBusVariant
argument_list|>
name|rdbusvariant
init|=
name|iface
operator|->
name|call
argument_list|(
literal|"retrieveVariant"
argument_list|)
decl_stmt|;
name|rdbusvariant
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|rdbusvariant
operator|.
name|isFinished
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rdbusvariant
operator|.
name|argumentAt
argument_list|<
literal|0
argument_list|>
argument_list|()
operator|.
name|variant
argument_list|()
argument_list|,
name|adaptor
operator|->
name|retrieveVariant
argument_list|()
operator|.
name|variant
argument_list|()
argument_list|)
expr_stmt|;
name|QDBusPendingReply
argument_list|<
name|QByteArray
argument_list|>
name|rbytearray
init|=
name|iface
operator|->
name|call
argument_list|(
literal|"retrieveByteArray"
argument_list|)
decl_stmt|;
name|rbytearray
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|rbytearray
operator|.
name|isFinished
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rbytearray
operator|.
name|argumentAt
argument_list|<
literal|0
argument_list|>
argument_list|()
argument_list|,
name|adaptor
operator|->
name|retrieveByteArray
argument_list|()
argument_list|)
expr_stmt|;
name|QDBusPendingReply
argument_list|<
name|QStringList
argument_list|>
name|rstringlist
init|=
name|iface
operator|->
name|call
argument_list|(
literal|"retrieveStringList"
argument_list|)
decl_stmt|;
name|rstringlist
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|rstringlist
operator|.
name|isFinished
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rstringlist
operator|.
name|argumentAt
argument_list|<
literal|0
argument_list|>
argument_list|()
argument_list|,
name|adaptor
operator|->
name|retrieveStringList
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_define
DECL|macro|VERIFY_ERROR
define|#
directive|define
name|VERIFY_ERROR
parameter_list|(
name|error
parameter_list|)
define|\
value|QVERIFY(error.isValid());                                   \     QCOMPARE(error.name(), QString("local.AnErrorName"));       \     QCOMPARE(error.type(), QDBusError::Other)
end_define
begin_function
DECL|function|errors
name|void
name|tst_QDBusPendingReply
operator|::
name|errors
parameter_list|()
block|{
name|QDBusError
name|error
decl_stmt|;
name|QDBusPendingReply
argument_list|<>
name|rvoid
init|=
name|iface
operator|->
name|asyncCall
argument_list|(
literal|"sendError"
argument_list|)
decl_stmt|;
name|rvoid
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|rvoid
operator|.
name|isFinished
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|rvoid
operator|.
name|isError
argument_list|()
argument_list|)
expr_stmt|;
name|error
operator|=
name|rvoid
operator|.
name|error
argument_list|()
expr_stmt|;
name|VERIFY_ERROR
argument_list|(
name|error
argument_list|)
expr_stmt|;
name|QDBusPendingReply
argument_list|<
name|int
argument_list|>
name|rint
init|=
name|iface
operator|->
name|asyncCall
argument_list|(
literal|"sendError"
argument_list|)
decl_stmt|;
name|rint
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|rint
operator|.
name|isFinished
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|rint
operator|.
name|isError
argument_list|()
argument_list|)
expr_stmt|;
name|error
operator|=
name|rint
operator|.
name|error
argument_list|()
expr_stmt|;
name|VERIFY_ERROR
argument_list|(
name|error
argument_list|)
expr_stmt|;
name|QDBusPendingReply
argument_list|<
name|int
argument_list|,
name|int
argument_list|>
name|rintint
init|=
name|iface
operator|->
name|asyncCall
argument_list|(
literal|"sendError"
argument_list|)
decl_stmt|;
name|rintint
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|rintint
operator|.
name|isFinished
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|rintint
operator|.
name|isError
argument_list|()
argument_list|)
expr_stmt|;
name|error
operator|=
name|rintint
operator|.
name|error
argument_list|()
expr_stmt|;
name|VERIFY_ERROR
argument_list|(
name|error
argument_list|)
expr_stmt|;
name|QDBusPendingReply
argument_list|<
name|QString
argument_list|>
name|rstring
init|=
name|iface
operator|->
name|asyncCall
argument_list|(
literal|"sendError"
argument_list|)
decl_stmt|;
name|rstring
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|rstring
operator|.
name|isFinished
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|rstring
operator|.
name|isError
argument_list|()
argument_list|)
expr_stmt|;
name|error
operator|=
name|rstring
operator|.
name|error
argument_list|()
expr_stmt|;
name|VERIFY_ERROR
argument_list|(
name|error
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QDBusPendingReply
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qdbuspendingreply.moc"
end_include
begin_else
else|#
directive|else
end_else
begin_macro
name|QTEST_NOOP_MAIN
end_macro
begin_endif
endif|#
directive|endif
end_endif
end_unit
