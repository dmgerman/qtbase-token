begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_class
DECL|class|tst_TestA
class|class
name|tst_TestA
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
private|private
name|slots
private|:
DECL|function|slotName
name|void
name|slotName
parameter_list|()
specifier|const
block|{
name|QVERIFY
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
DECL|function|aDifferentSlot
name|void
name|aDifferentSlot
parameter_list|()
specifier|const
block|{
name|QVERIFY
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
class|;
end_class
begin_class
DECL|class|tst_TestB
class|class
name|tst_TestB
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
private|private
name|slots
private|:
DECL|function|slotName
name|void
name|slotName
parameter_list|()
specifier|const
block|{
name|QVERIFY
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
DECL|function|aSecondDifferentSlot
name|void
name|aSecondDifferentSlot
parameter_list|()
specifier|const
block|{
name|QVERIFY
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|main
name|int
name|main
parameter_list|()
block|{
name|char
modifier|*
name|argv
index|[]
init|=
block|{
cast|const_cast
argument_list|<
name|char
operator|*
argument_list|>
argument_list|(
literal|"appName"
argument_list|)
block|,
expr|const_cast
operator|<
name|char
operator|*
operator|>
operator|(
literal|"slotName"
operator|)
block|}
decl_stmt|;
name|int
name|argc
init|=
literal|2
decl_stmt|;
name|tst_TestA
name|testA
decl_stmt|;
name|QTest
operator|::
name|qExec
argument_list|(
operator|&
name|testA
argument_list|,
name|argc
argument_list|,
name|argv
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qExec
argument_list|(
operator|&
name|testA
argument_list|,
name|argc
argument_list|,
name|argv
argument_list|)
expr_stmt|;
name|tst_TestB
name|testB
decl_stmt|;
name|QTest
operator|::
name|qExec
argument_list|(
operator|&
name|testB
argument_list|,
name|argc
argument_list|,
name|argv
argument_list|)
expr_stmt|;
return|return
literal|0
return|;
block|}
end_function
begin_include
include|#
directive|include
file|"tst_differentexec.moc"
end_include
end_unit
