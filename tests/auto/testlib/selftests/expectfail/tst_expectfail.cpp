begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtCore>
end_include
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_class
DECL|class|tst_ExpectFail
class|class
name|tst_ExpectFail
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
private|private
name|slots
private|:
name|void
name|expectAndContinue
parameter_list|()
specifier|const
function_decl|;
name|void
name|expectAndAbort
parameter_list|()
specifier|const
function_decl|;
name|void
name|xfailWithQString
parameter_list|()
specifier|const
function_decl|;
block|}
class|;
end_class
begin_function
DECL|function|expectAndContinue
name|void
name|tst_ExpectFail
operator|::
name|expectAndContinue
parameter_list|()
specifier|const
block|{
name|qDebug
argument_list|(
literal|"begin"
argument_list|)
expr_stmt|;
name|QEXPECT_FAIL
argument_list|(
literal|""
argument_list|,
literal|"This should xfail"
argument_list|,
name|Continue
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|qDebug
argument_list|(
literal|"after"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|expectAndAbort
name|void
name|tst_ExpectFail
operator|::
name|expectAndAbort
parameter_list|()
specifier|const
block|{
name|qDebug
argument_list|(
literal|"begin"
argument_list|)
expr_stmt|;
name|QEXPECT_FAIL
argument_list|(
literal|""
argument_list|,
literal|"This should xfail"
argument_list|,
name|Abort
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|qDebug
argument_list|(
literal|"this should not be reached"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|xfailWithQString
name|void
name|tst_ExpectFail
operator|::
name|xfailWithQString
parameter_list|()
specifier|const
block|{
name|QEXPECT_FAIL
argument_list|(
literal|""
argument_list|,
name|QString
argument_list|(
literal|"A string"
argument_list|)
operator|.
name|toLatin1
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|,
name|Continue
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|int
name|bugNo
init|=
literal|5
decl_stmt|;
name|QString
name|msg
argument_list|(
literal|"The message"
argument_list|)
decl_stmt|;
name|QEXPECT_FAIL
argument_list|(
literal|""
argument_list|,
name|QString
argument_list|(
literal|"Bug %1 (%2)"
argument_list|)
operator|.
name|arg
argument_list|(
name|bugNo
argument_list|)
operator|.
name|arg
argument_list|(
name|msg
argument_list|)
operator|.
name|toLatin1
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|,
name|Continue
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_ExpectFail
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_expectfail.moc"
end_include
end_unit
