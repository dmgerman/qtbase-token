begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtCore/QCoreApplication>
end_include
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<private/qtestlog_p.h>
end_include
begin_class
DECL|class|tst_Silent
class|class
name|tst_Silent
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
private|private
name|slots
private|:
name|void
name|pass
parameter_list|()
function_decl|;
name|void
name|skip
parameter_list|()
function_decl|;
name|void
name|fail
parameter_list|()
function_decl|;
name|void
name|xfail
parameter_list|()
function_decl|;
name|void
name|xpass
parameter_list|()
function_decl|;
comment|// This test function must be last, as it calls qFatal().
name|void
name|messages
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_function
DECL|function|pass
name|void
name|tst_Silent
operator|::
name|pass
parameter_list|()
block|{
name|QVERIFY
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|skip
name|void
name|tst_Silent
operator|::
name|skip
parameter_list|()
block|{
name|QSKIP
argument_list|(
literal|"This test should skip"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|fail
name|void
name|tst_Silent
operator|::
name|fail
parameter_list|()
block|{
name|QVERIFY2
argument_list|(
literal|false
argument_list|,
literal|"This test should fail"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|xfail
name|void
name|tst_Silent
operator|::
name|xfail
parameter_list|()
block|{
name|QEXPECT_FAIL
argument_list|(
literal|""
argument_list|,
literal|"This test should XFAIL"
argument_list|,
name|Abort
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|xpass
name|void
name|tst_Silent
operator|::
name|xpass
parameter_list|()
block|{
name|QEXPECT_FAIL
argument_list|(
literal|""
argument_list|,
literal|"This test should XPASS"
argument_list|,
name|Abort
argument_list|)
expr_stmt|;
name|QVERIFY2
argument_list|(
literal|true
argument_list|,
literal|"This test should XPASS"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|messages
name|void
name|tst_Silent
operator|::
name|messages
parameter_list|()
block|{
name|qWarning
argument_list|(
literal|"This is a warning that should not appear in silent test output"
argument_list|)
expr_stmt|;
name|QWARN
argument_list|(
literal|"This is an internal testlib warning that should not appear in silent test output"
argument_list|)
expr_stmt|;
name|qDebug
argument_list|(
literal|"This is a debug message that should not appear in silent test output"
argument_list|)
expr_stmt|;
name|qCritical
argument_list|(
literal|"This is a critical message that should not appear in silent test output"
argument_list|)
expr_stmt|;
name|QTestLog
operator|::
name|info
argument_list|(
literal|"This is an internal testlib info message that should not appear in silent test output"
argument_list|,
name|__FILE__
argument_list|,
name|__LINE__
argument_list|)
expr_stmt|;
name|qFatal
argument_list|(
literal|"This is a fatal error message that should still appear in silent test output"
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_Silent
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_silent.moc"
end_include
end_unit
