begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtCore/QCoreApplication>
end_include
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<private/cycle_p.h>
end_include
begin_class
DECL|class|tst_BenchlibTickCounter
class|class
name|tst_BenchlibTickCounter
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
private|private
name|slots
private|:
name|void
name|threeBillionTicks
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_function
DECL|function|threeBillionTicks
name|void
name|tst_BenchlibTickCounter
operator|::
name|threeBillionTicks
parameter_list|()
block|{
ifndef|#
directive|ifndef
name|HAVE_TICK_COUNTER
name|QSKIP
argument_list|(
literal|"Tick counter not available on this platform"
argument_list|)
expr_stmt|;
else|#
directive|else
name|QBENCHMARK
block|{
name|CycleCounterTicks
name|start
init|=
name|getticks
argument_list|()
decl_stmt|;
name|double
name|el
init|=
literal|0.
decl_stmt|;
name|double
name|max
init|=
name|el
decl_stmt|;
while|while
condition|(
name|el
operator|<
literal|3000000000.
condition|)
block|{
comment|/* Verify that elapsed time never decreases */
name|QVERIFY2
argument_list|(
name|el
operator|>=
name|max
argument_list|,
name|qPrintable
argument_list|(
name|QString
argument_list|(
literal|"Tick counter is not monotonic\nElapsed moved from %1 to %2"
argument_list|)
operator|.
name|arg
argument_list|(
name|max
argument_list|)
operator|.
name|arg
argument_list|(
name|el
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|max
operator|=
name|el
expr_stmt|;
name|el
operator|=
name|elapsed
argument_list|(
name|getticks
argument_list|()
argument_list|,
name|start
argument_list|)
expr_stmt|;
block|}
block|}
endif|#
directive|endif
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_BenchlibTickCounter
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_benchlibtickcounter.moc"
end_include
end_unit
