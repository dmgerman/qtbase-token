begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<QtGui>
end_include
begin_include
include|#
directive|include
file|<QtWidgets>
end_include
begin_function
DECL|function|setFrameless
specifier|static
specifier|inline
name|void
name|setFrameless
parameter_list|(
name|QWidget
modifier|*
name|w
parameter_list|)
block|{
name|Qt
operator|::
name|WindowFlags
name|flags
init|=
name|w
operator|->
name|windowFlags
argument_list|()
decl_stmt|;
name|flags
operator||=
name|Qt
operator|::
name|FramelessWindowHint
expr_stmt|;
name|flags
operator|&=
operator|~
operator|(
name|Qt
operator|::
name|WindowTitleHint
operator||
name|Qt
operator|::
name|WindowSystemMenuHint
operator||
name|Qt
operator|::
name|WindowMinMaxButtonsHint
operator||
name|Qt
operator|::
name|WindowCloseButtonHint
operator|)
expr_stmt|;
name|w
operator|->
name|setWindowFlags
argument_list|(
name|flags
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|tst_QBoxLayout
class|class
name|tst_QBoxLayout
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
name|tst_QBoxLayout
parameter_list|()
constructor_decl|;
specifier|virtual
name|~
name|tst_QBoxLayout
parameter_list|()
destructor_decl|;
public|public
name|slots
public|:
name|void
name|initTestCase
parameter_list|()
function_decl|;
name|void
name|cleanupTestCase
parameter_list|()
function_decl|;
name|void
name|init
parameter_list|()
function_decl|;
name|void
name|cleanup
parameter_list|()
function_decl|;
private|private
name|slots
private|:
name|void
name|insertSpacerItem
parameter_list|()
function_decl|;
name|void
name|insertLayout
parameter_list|()
function_decl|;
name|void
name|sizeHint
parameter_list|()
function_decl|;
name|void
name|sizeConstraints
parameter_list|()
function_decl|;
name|void
name|setGeometry
parameter_list|()
function_decl|;
name|void
name|setStyleShouldChangeSpacing
parameter_list|()
function_decl|;
name|void
name|testLayoutEngine_data
parameter_list|()
function_decl|;
name|void
name|testLayoutEngine
parameter_list|()
function_decl|;
name|void
name|taskQTBUG_7103_minMaxWidthNotRespected
parameter_list|()
function_decl|;
name|void
name|taskQTBUG_27420_takeAtShouldUnparentLayout
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_class
DECL|class|CustomLayoutStyle
class|class
name|CustomLayoutStyle
super|:
specifier|public
name|QProxyStyle
block|{
name|Q_OBJECT
public|public:
DECL|function|CustomLayoutStyle
name|CustomLayoutStyle
parameter_list|()
member_init_list|:
name|QProxyStyle
argument_list|(
name|QStyleFactory
operator|::
name|create
argument_list|(
literal|"windows"
argument_list|)
argument_list|)
block|{
name|hspacing
operator|=
literal|5
expr_stmt|;
name|vspacing
operator|=
literal|10
expr_stmt|;
block|}
specifier|virtual
name|int
name|pixelMetric
parameter_list|(
name|PixelMetric
name|metric
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|option
init|=
literal|0
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
init|=
literal|0
parameter_list|)
specifier|const
function_decl|;
DECL|member|hspacing
name|int
name|hspacing
decl_stmt|;
DECL|member|vspacing
name|int
name|vspacing
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|pixelMetric
name|int
name|CustomLayoutStyle
operator|::
name|pixelMetric
parameter_list|(
name|PixelMetric
name|metric
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|option
comment|/*= 0*/
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
comment|/*= 0*/
parameter_list|)
specifier|const
block|{
switch|switch
condition|(
name|metric
condition|)
block|{
case|case
name|PM_LayoutLeftMargin
case|:
return|return
literal|0
return|;
break|break;
case|case
name|PM_LayoutTopMargin
case|:
return|return
literal|3
return|;
break|break;
case|case
name|PM_LayoutRightMargin
case|:
return|return
literal|6
return|;
break|break;
case|case
name|PM_LayoutBottomMargin
case|:
return|return
literal|9
return|;
break|break;
case|case
name|PM_LayoutHorizontalSpacing
case|:
return|return
name|hspacing
return|;
case|case
name|PM_LayoutVerticalSpacing
case|:
return|return
name|vspacing
return|;
break|break;
default|default:
break|break;
block|}
return|return
name|QProxyStyle
operator|::
name|pixelMetric
argument_list|(
name|metric
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
return|;
block|}
end_function
begin_constructor
DECL|function|tst_QBoxLayout
name|tst_QBoxLayout
operator|::
name|tst_QBoxLayout
parameter_list|()
block|{ }
end_constructor
begin_destructor
DECL|function|~tst_QBoxLayout
name|tst_QBoxLayout
operator|::
name|~
name|tst_QBoxLayout
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|initTestCase
name|void
name|tst_QBoxLayout
operator|::
name|initTestCase
parameter_list|()
block|{ }
end_function
begin_function
DECL|function|cleanupTestCase
name|void
name|tst_QBoxLayout
operator|::
name|cleanupTestCase
parameter_list|()
block|{ }
end_function
begin_function
DECL|function|init
name|void
name|tst_QBoxLayout
operator|::
name|init
parameter_list|()
block|{ }
end_function
begin_function
DECL|function|cleanup
name|void
name|tst_QBoxLayout
operator|::
name|cleanup
parameter_list|()
block|{ }
end_function
begin_function
DECL|function|insertSpacerItem
name|void
name|tst_QBoxLayout
operator|::
name|insertSpacerItem
parameter_list|()
block|{
name|QWidget
modifier|*
name|window
init|=
operator|new
name|QWidget
decl_stmt|;
name|QSpacerItem
modifier|*
name|spacer1
init|=
operator|new
name|QSpacerItem
argument_list|(
literal|20
argument_list|,
literal|10
argument_list|,
name|QSizePolicy
operator|::
name|Expanding
argument_list|,
name|QSizePolicy
operator|::
name|Expanding
argument_list|)
decl_stmt|;
name|QSpacerItem
modifier|*
name|spacer2
init|=
operator|new
name|QSpacerItem
argument_list|(
literal|40
argument_list|,
literal|20
argument_list|,
name|QSizePolicy
operator|::
name|Expanding
argument_list|,
name|QSizePolicy
operator|::
name|Expanding
argument_list|)
decl_stmt|;
name|QBoxLayout
modifier|*
name|layout
init|=
operator|new
name|QHBoxLayout
decl_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
operator|new
name|QLineEdit
argument_list|(
literal|"Foooooooooooooooooooooooooo"
argument_list|)
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addSpacerItem
argument_list|(
name|spacer1
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
operator|new
name|QLineEdit
argument_list|(
literal|"Baaaaaaaaaaaaaaaaaaaaaaaaar"
argument_list|)
argument_list|)
expr_stmt|;
name|layout
operator|->
name|insertSpacerItem
argument_list|(
literal|0
argument_list|,
name|spacer2
argument_list|)
expr_stmt|;
name|window
operator|->
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|layout
operator|->
name|itemAt
argument_list|(
literal|0
argument_list|)
operator|==
name|spacer2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|layout
operator|->
name|itemAt
argument_list|(
literal|2
argument_list|)
operator|==
name|spacer1
argument_list|)
expr_stmt|;
name|window
operator|->
name|show
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|insertLayout
name|void
name|tst_QBoxLayout
operator|::
name|insertLayout
parameter_list|()
block|{
name|QWidget
modifier|*
name|window
init|=
operator|new
name|QWidget
decl_stmt|;
name|QVBoxLayout
modifier|*
name|vbox
init|=
operator|new
name|QVBoxLayout
argument_list|(
name|window
argument_list|)
decl_stmt|;
name|QVBoxLayout
modifier|*
name|dummyParentLayout
init|=
operator|new
name|QVBoxLayout
decl_stmt|;
name|QHBoxLayout
modifier|*
name|subLayout
init|=
operator|new
name|QHBoxLayout
decl_stmt|;
name|dummyParentLayout
operator|->
name|addLayout
argument_list|(
name|subLayout
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subLayout
operator|->
name|parent
argument_list|()
argument_list|,
name|dummyParentLayout
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dummyParentLayout
operator|->
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// add subLayout to another layout
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QLayout::addChildLayout: layout \"\" already has a parent"
argument_list|)
expr_stmt|;
name|vbox
operator|->
name|addLayout
argument_list|(
name|subLayout
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
operator|(
name|subLayout
operator|->
name|parent
argument_list|()
operator|==
name|vbox
operator|)
argument_list|,
operator|(
name|vbox
operator|->
name|count
argument_list|()
operator|==
literal|1
operator|)
argument_list|)
expr_stmt|;
operator|delete
name|dummyParentLayout
expr_stmt|;
operator|delete
name|window
expr_stmt|;
block|}
end_function
begin_function
DECL|function|sizeHint
name|void
name|tst_QBoxLayout
operator|::
name|sizeHint
parameter_list|()
block|{
name|QWidget
modifier|*
name|window
init|=
operator|new
name|QWidget
decl_stmt|;
name|QHBoxLayout
modifier|*
name|lay1
init|=
operator|new
name|QHBoxLayout
decl_stmt|;
name|QHBoxLayout
modifier|*
name|lay2
init|=
operator|new
name|QHBoxLayout
decl_stmt|;
name|QLabel
modifier|*
name|label
init|=
operator|new
name|QLabel
argument_list|(
literal|"widget twooooooooooooooooooooooooooooooooooooooooooooooooooooooo"
argument_list|)
decl_stmt|;
name|lay2
operator|->
name|addWidget
argument_list|(
name|label
argument_list|)
expr_stmt|;
name|lay1
operator|->
name|addLayout
argument_list|(
name|lay2
argument_list|)
expr_stmt|;
name|window
operator|->
name|setLayout
argument_list|(
name|lay1
argument_list|)
expr_stmt|;
name|window
operator|->
name|show
argument_list|()
expr_stmt|;
name|label
operator|->
name|setText
argument_list|(
literal|"foooooooo baaaaaaar"
argument_list|)
expr_stmt|;
name|QSize
name|sh
init|=
name|lay1
operator|->
name|sizeHint
argument_list|()
decl_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
comment|// Note that this is not strictly required behaviour - actually
comment|// the preferred behaviour would be that sizeHint returns
comment|// the same value regardless of what's lying in the event queue.
comment|// (i.e. we would check for equality here instead)
name|QVERIFY
argument_list|(
name|lay1
operator|->
name|sizeHint
argument_list|()
operator|!=
name|sh
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|sizeConstraints
name|void
name|tst_QBoxLayout
operator|::
name|sizeConstraints
parameter_list|()
block|{
name|QWidget
modifier|*
name|window
init|=
operator|new
name|QWidget
decl_stmt|;
name|QHBoxLayout
modifier|*
name|lay
init|=
operator|new
name|QHBoxLayout
decl_stmt|;
name|lay
operator|->
name|addWidget
argument_list|(
operator|new
name|QLabel
argument_list|(
literal|"foooooooooooooooooooooooooooooooooooo"
argument_list|)
argument_list|)
expr_stmt|;
name|lay
operator|->
name|addWidget
argument_list|(
operator|new
name|QLabel
argument_list|(
literal|"baaaaaaaaaaaaaaaaaaaaaaaaaaaaaar"
argument_list|)
argument_list|)
expr_stmt|;
name|lay
operator|->
name|setSizeConstraint
argument_list|(
name|QLayout
operator|::
name|SetFixedSize
argument_list|)
expr_stmt|;
name|window
operator|->
name|setLayout
argument_list|(
name|lay
argument_list|)
expr_stmt|;
name|window
operator|->
name|show
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QSize
name|sh
init|=
name|window
operator|->
name|sizeHint
argument_list|()
decl_stmt|;
name|lay
operator|->
name|takeAt
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|sh
operator|.
name|width
argument_list|()
operator|>=
name|window
operator|->
name|sizeHint
argument_list|()
operator|.
name|width
argument_list|()
operator|&&
name|sh
operator|.
name|height
argument_list|()
operator|>=
name|window
operator|->
name|sizeHint
argument_list|()
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setGeometry
name|void
name|tst_QBoxLayout
operator|::
name|setGeometry
parameter_list|()
block|{
name|QWidget
name|toplevel
decl_stmt|;
name|setFrameless
argument_list|(
operator|&
name|toplevel
argument_list|)
expr_stmt|;
name|QWidget
name|w
argument_list|(
operator|&
name|toplevel
argument_list|)
decl_stmt|;
name|QVBoxLayout
modifier|*
name|lay
init|=
operator|new
name|QVBoxLayout
decl_stmt|;
name|lay
operator|->
name|setMargin
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|lay
operator|->
name|setSpacing
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QHBoxLayout
modifier|*
name|lay2
init|=
operator|new
name|QHBoxLayout
decl_stmt|;
name|QDial
modifier|*
name|dial
init|=
operator|new
name|QDial
decl_stmt|;
name|lay2
operator|->
name|addWidget
argument_list|(
name|dial
argument_list|)
expr_stmt|;
name|lay2
operator|->
name|setAlignment
argument_list|(
name|Qt
operator|::
name|AlignTop
argument_list|)
expr_stmt|;
name|lay2
operator|->
name|setAlignment
argument_list|(
name|Qt
operator|::
name|AlignRight
argument_list|)
expr_stmt|;
name|lay
operator|->
name|addLayout
argument_list|(
name|lay2
argument_list|)
expr_stmt|;
name|w
operator|.
name|setLayout
argument_list|(
name|lay
argument_list|)
expr_stmt|;
name|toplevel
operator|.
name|show
argument_list|()
expr_stmt|;
name|QRect
name|newGeom
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|70
argument_list|,
literal|70
argument_list|)
decl_stmt|;
name|lay2
operator|->
name|setGeometry
argument_list|(
name|newGeom
argument_list|)
expr_stmt|;
name|QVERIFY2
argument_list|(
name|newGeom
operator|.
name|contains
argument_list|(
name|dial
operator|->
name|geometry
argument_list|()
argument_list|)
argument_list|,
literal|"dial->geometry() should be smaller and within newGeom"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setStyleShouldChangeSpacing
name|void
name|tst_QBoxLayout
operator|::
name|setStyleShouldChangeSpacing
parameter_list|()
block|{
name|QWidget
modifier|*
name|window
init|=
operator|new
name|QWidget
decl_stmt|;
name|QHBoxLayout
modifier|*
name|hbox
init|=
operator|new
name|QHBoxLayout
argument_list|(
name|window
argument_list|)
decl_stmt|;
name|QPushButton
modifier|*
name|pb1
init|=
operator|new
name|QPushButton
argument_list|(
name|tr
argument_list|(
literal|"The spacing between this"
argument_list|)
argument_list|)
decl_stmt|;
name|QPushButton
modifier|*
name|pb2
init|=
operator|new
name|QPushButton
argument_list|(
name|tr
argument_list|(
literal|"and this button should depend on the style of the parent widget"
argument_list|)
argument_list|)
decl_stmt|;
empty_stmt|;
name|pb1
operator|->
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_LayoutUsesWidgetRect
argument_list|)
expr_stmt|;
name|pb2
operator|->
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_LayoutUsesWidgetRect
argument_list|)
expr_stmt|;
name|hbox
operator|->
name|addWidget
argument_list|(
name|pb1
argument_list|)
expr_stmt|;
name|hbox
operator|->
name|addWidget
argument_list|(
name|pb2
argument_list|)
expr_stmt|;
name|CustomLayoutStyle
modifier|*
name|style1
init|=
operator|new
name|CustomLayoutStyle
decl_stmt|;
name|style1
operator|->
name|hspacing
operator|=
literal|6
expr_stmt|;
name|window
operator|->
name|setStyle
argument_list|(
name|style1
argument_list|)
expr_stmt|;
name|window
operator|->
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|int
name|spacing
init|=
name|pb2
operator|->
name|geometry
argument_list|()
operator|.
name|left
argument_list|()
operator|-
name|pb1
operator|->
name|geometry
argument_list|()
operator|.
name|right
argument_list|()
operator|-
literal|1
decl_stmt|;
name|QCOMPARE
argument_list|(
name|spacing
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|CustomLayoutStyle
modifier|*
name|style2
init|=
operator|new
name|CustomLayoutStyle
argument_list|()
decl_stmt|;
name|style2
operator|->
name|hspacing
operator|=
literal|10
expr_stmt|;
name|window
operator|->
name|setStyle
argument_list|(
name|style2
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|spacing
operator|=
name|pb2
operator|->
name|geometry
argument_list|()
operator|.
name|left
argument_list|()
operator|-
name|pb1
operator|->
name|geometry
argument_list|()
operator|.
name|right
argument_list|()
operator|-
literal|1
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spacing
argument_list|,
literal|10
argument_list|)
expr_stmt|;
operator|delete
name|window
expr_stmt|;
operator|delete
name|style1
expr_stmt|;
operator|delete
name|style2
expr_stmt|;
block|}
end_function
begin_function
DECL|function|taskQTBUG_7103_minMaxWidthNotRespected
name|void
name|tst_QBoxLayout
operator|::
name|taskQTBUG_7103_minMaxWidthNotRespected
parameter_list|()
block|{
name|QLabel
modifier|*
name|label
init|=
operator|new
name|QLabel
argument_list|(
literal|"Qt uses standard C++, but makes extensive use of the C pre-processor to enrich the language. Qt can also be used in several other programming languages via language bindings. It runs on all major platforms, and has extensive internationalization support. Non-GUI features include SQL database access, XML parsing, thread management, network support and a unified cross-platform API for file handling."
argument_list|)
decl_stmt|;
name|label
operator|->
name|setWordWrap
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|label
operator|->
name|setFixedWidth
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|QVBoxLayout
modifier|*
name|layout
init|=
operator|new
name|QVBoxLayout
decl_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|label
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addSpacerItem
argument_list|(
operator|new
name|QSpacerItem
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
name|QSizePolicy
operator|::
name|Fixed
argument_list|,
name|QSizePolicy
operator|::
name|Expanding
argument_list|)
argument_list|)
expr_stmt|;
name|QWidget
name|widget
decl_stmt|;
name|widget
operator|.
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
name|widget
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|widget
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|height
init|=
name|label
operator|->
name|height
argument_list|()
decl_stmt|;
name|QRect
name|g
init|=
name|widget
operator|.
name|geometry
argument_list|()
decl_stmt|;
name|g
operator|.
name|setWidth
argument_list|(
literal|600
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setGeometry
argument_list|(
name|g
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|50
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|label
operator|->
name|height
argument_list|()
argument_list|,
name|height
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|taskQTBUG_27420_takeAtShouldUnparentLayout
name|void
name|tst_QBoxLayout
operator|::
name|taskQTBUG_27420_takeAtShouldUnparentLayout
parameter_list|()
block|{
name|QSharedPointer
argument_list|<
name|QHBoxLayout
argument_list|>
name|outer
argument_list|(
operator|new
name|QHBoxLayout
argument_list|)
decl_stmt|;
name|QPointer
argument_list|<
name|QVBoxLayout
argument_list|>
name|inner
init|=
operator|new
name|QVBoxLayout
decl_stmt|;
name|outer
operator|->
name|addLayout
argument_list|(
name|inner
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|outer
operator|->
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|inner
operator|->
name|parent
argument_list|()
argument_list|,
name|outer
operator|.
name|data
argument_list|()
argument_list|)
expr_stmt|;
name|QLayoutItem
modifier|*
name|item
init|=
name|outer
operator|->
name|takeAt
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|item
operator|->
name|layout
argument_list|()
argument_list|,
name|inner
operator|.
name|data
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|item
operator|->
name|layout
argument_list|()
operator|->
name|parent
argument_list|()
argument_list|)
expr_stmt|;
name|outer
operator|.
name|reset
argument_list|()
expr_stmt|;
if|if
condition|(
name|inner
condition|)
operator|delete
name|item
expr_stmt|;
comment|// success: a taken item/layout should not be deleted when the old parent is deleted
else|else
name|QVERIFY
argument_list|(
operator|!
name|inner
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_struct
DECL|struct|Descr
struct|struct
name|Descr
block|{
DECL|function|Descr
name|Descr
parameter_list|(
name|int
name|min
parameter_list|,
name|int
name|sh
parameter_list|,
name|int
name|max
init|=
operator|-
literal|1
parameter_list|,
name|bool
name|exp
init|=
literal|false
parameter_list|,
name|int
name|_stretch
init|=
literal|0
parameter_list|,
name|bool
name|_empty
init|=
literal|false
parameter_list|)
member_init_list|:
name|minimumSize
argument_list|(
name|min
argument_list|)
member_init_list|,
name|sizeHint
argument_list|(
name|sh
argument_list|)
member_init_list|,
name|maximumSize
argument_list|(
name|max
operator|<
literal|0
condition|?
name|QLAYOUTSIZE_MAX
else|:
name|max
argument_list|)
member_init_list|,
name|expanding
argument_list|(
name|exp
argument_list|)
member_init_list|,
name|stretch
argument_list|(
name|_stretch
argument_list|)
member_init_list|,
name|empty
argument_list|(
name|_empty
argument_list|)
block|{}
DECL|member|minimumSize
name|int
name|minimumSize
decl_stmt|;
DECL|member|sizeHint
name|int
name|sizeHint
decl_stmt|;
DECL|member|maximumSize
name|int
name|maximumSize
decl_stmt|;
DECL|member|expanding
name|bool
name|expanding
decl_stmt|;
DECL|member|stretch
name|int
name|stretch
decl_stmt|;
DECL|member|empty
name|bool
name|empty
decl_stmt|;
block|}
struct|;
end_struct
begin_typedef
DECL|typedef|DescrList
typedef|typedef
name|QList
argument_list|<
name|Descr
argument_list|>
name|DescrList
typedef|;
end_typedef
begin_expr_stmt
DECL|variable|DescrList
name|Q_DECLARE_METATYPE
argument_list|(
name|DescrList
argument_list|)
expr_stmt|;
end_expr_stmt
begin_typedef
DECL|typedef|SizeList
typedef|typedef
name|QList
argument_list|<
name|int
argument_list|>
name|SizeList
typedef|;
end_typedef
begin_typedef
DECL|typedef|PosList
typedef|typedef
name|QList
argument_list|<
name|int
argument_list|>
name|PosList
typedef|;
end_typedef
begin_class
DECL|class|LayoutItem
class|class
name|LayoutItem
super|:
specifier|public
name|QLayoutItem
block|{
public|public:
DECL|function|LayoutItem
name|LayoutItem
parameter_list|(
specifier|const
name|Descr
modifier|&
name|descr
parameter_list|)
member_init_list|:
name|m_descr
argument_list|(
name|descr
argument_list|)
block|{}
DECL|function|sizeHint
name|QSize
name|sizeHint
parameter_list|()
specifier|const
block|{
return|return
name|QSize
argument_list|(
name|m_descr
operator|.
name|sizeHint
argument_list|,
literal|100
argument_list|)
return|;
block|}
DECL|function|minimumSize
name|QSize
name|minimumSize
parameter_list|()
specifier|const
block|{
return|return
name|QSize
argument_list|(
name|m_descr
operator|.
name|minimumSize
argument_list|,
literal|0
argument_list|)
return|;
block|}
DECL|function|maximumSize
name|QSize
name|maximumSize
parameter_list|()
specifier|const
block|{
return|return
name|QSize
argument_list|(
name|m_descr
operator|.
name|maximumSize
argument_list|,
name|QLAYOUTSIZE_MAX
argument_list|)
return|;
block|}
DECL|function|expandingDirections
name|Qt
operator|::
name|Orientations
name|expandingDirections
parameter_list|()
specifier|const
block|{
return|return
name|m_descr
operator|.
name|expanding
condition|?
name|Qt
operator|::
name|Horizontal
else|:
name|Qt
operator|::
name|Orientations
argument_list|(
literal|0
argument_list|)
return|;
block|}
DECL|function|setGeometry
name|void
name|setGeometry
parameter_list|(
specifier|const
name|QRect
modifier|&
name|r
parameter_list|)
block|{
name|m_pos
operator|=
name|r
operator|.
name|x
argument_list|()
expr_stmt|;
name|m_size
operator|=
name|r
operator|.
name|width
argument_list|()
expr_stmt|;
block|}
DECL|function|geometry
name|QRect
name|geometry
parameter_list|()
specifier|const
block|{
return|return
name|QRect
argument_list|(
name|m_pos
argument_list|,
literal|0
argument_list|,
name|m_size
argument_list|,
literal|100
argument_list|)
return|;
block|}
DECL|function|isEmpty
name|bool
name|isEmpty
parameter_list|()
specifier|const
block|{
return|return
name|m_descr
operator|.
name|empty
return|;
block|}
private|private:
DECL|member|m_descr
name|Descr
name|m_descr
decl_stmt|;
DECL|member|m_pos
name|int
name|m_pos
decl_stmt|;
DECL|member|m_size
name|int
name|m_size
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|testLayoutEngine_data
name|void
name|tst_QBoxLayout
operator|::
name|testLayoutEngine_data
parameter_list|()
block|{
comment|// (int min, int sh, int max = -1, bool exp= false, int _stretch = 0, bool _empty = false)
name|QTest
operator|::
name|addColumn
argument_list|<
name|DescrList
argument_list|>
argument_list|(
literal|"itemDescriptions"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"size"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"spacing"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|PosList
argument_list|>
argument_list|(
literal|"expectedPositions"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|SizeList
argument_list|>
argument_list|(
literal|"expectedSizes"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Just one"
argument_list|)
operator|<<
operator|(
name|DescrList
argument_list|()
operator|<<
name|Descr
argument_list|(
literal|0
argument_list|,
literal|100
argument_list|)
operator|)
operator|<<
literal|200
operator|<<
literal|0
operator|<<
operator|(
name|PosList
argument_list|()
operator|<<
literal|0
operator|)
operator|<<
operator|(
name|SizeList
argument_list|()
operator|<<
literal|200
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Two non-exp"
argument_list|)
operator|<<
operator|(
name|DescrList
argument_list|()
operator|<<
name|Descr
argument_list|(
literal|0
argument_list|,
literal|100
argument_list|)
operator|<<
name|Descr
argument_list|(
literal|0
argument_list|,
literal|100
argument_list|)
operator|)
operator|<<
literal|400
operator|<<
literal|0
operator|<<
operator|(
name|PosList
argument_list|()
operator|<<
literal|0
operator|<<
literal|200
operator|)
operator|<<
operator|(
name|SizeList
argument_list|()
operator|<<
literal|200
operator|<<
literal|200
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Exp + non-exp"
argument_list|)
operator|<<
operator|(
name|DescrList
argument_list|()
operator|<<
name|Descr
argument_list|(
literal|0
argument_list|,
literal|100
argument_list|,
operator|-
literal|1
argument_list|,
literal|true
argument_list|)
operator|<<
name|Descr
argument_list|(
literal|0
argument_list|,
literal|100
argument_list|)
operator|)
operator|<<
literal|400
operator|<<
literal|0
operator|<<
operator|(
name|PosList
argument_list|()
operator|<<
literal|0
operator|<<
literal|300
operator|)
operator|<<
operator|(
name|SizeList
argument_list|()
operator|<<
literal|300
operator|<<
literal|100
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Stretch"
argument_list|)
operator|<<
operator|(
name|DescrList
argument_list|()
operator|<<
name|Descr
argument_list|(
literal|0
argument_list|,
literal|100
argument_list|,
operator|-
literal|1
argument_list|,
literal|false
argument_list|,
literal|1
argument_list|)
operator|<<
name|Descr
argument_list|(
literal|0
argument_list|,
literal|100
argument_list|,
operator|-
literal|1
argument_list|,
literal|false
argument_list|,
literal|2
argument_list|)
operator|)
operator|<<
literal|300
operator|<<
literal|0
operator|<<
operator|(
name|PosList
argument_list|()
operator|<<
literal|0
operator|<<
literal|100
operator|)
operator|<<
operator|(
name|SizeList
argument_list|()
operator|<<
literal|100
operator|<<
literal|200
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Spacing"
argument_list|)
operator|<<
operator|(
name|DescrList
argument_list|()
operator|<<
name|Descr
argument_list|(
literal|0
argument_list|,
literal|100
argument_list|)
operator|<<
name|Descr
argument_list|(
literal|0
argument_list|,
literal|100
argument_list|)
operator|)
operator|<<
literal|400
operator|<<
literal|10
operator|<<
operator|(
name|PosList
argument_list|()
operator|<<
literal|0
operator|<<
literal|205
operator|)
operator|<<
operator|(
name|SizeList
argument_list|()
operator|<<
literal|195
operator|<<
literal|195
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Less than minimum"
argument_list|)
operator|<<
operator|(
name|DescrList
argument_list|()
operator|<<
name|Descr
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
literal|false
argument_list|)
operator|<<
name|Descr
argument_list|(
literal|50
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
literal|false
argument_list|)
operator|)
operator|<<
literal|100
operator|<<
literal|0
operator|<<
operator|(
name|PosList
argument_list|()
operator|<<
literal|0
operator|<<
literal|50
operator|)
operator|<<
operator|(
name|SizeList
argument_list|()
operator|<<
literal|50
operator|<<
literal|50
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Less than sizehint"
argument_list|)
operator|<<
operator|(
name|DescrList
argument_list|()
operator|<<
name|Descr
argument_list|(
literal|100
argument_list|,
literal|200
argument_list|,
literal|100
argument_list|,
literal|false
argument_list|)
operator|<<
name|Descr
argument_list|(
literal|50
argument_list|,
literal|200
argument_list|,
literal|100
argument_list|,
literal|false
argument_list|)
operator|)
operator|<<
literal|200
operator|<<
literal|0
operator|<<
operator|(
name|PosList
argument_list|()
operator|<<
literal|0
operator|<<
literal|100
operator|)
operator|<<
operator|(
name|SizeList
argument_list|()
operator|<<
literal|100
operator|<<
literal|100
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Too much space"
argument_list|)
operator|<<
operator|(
name|DescrList
argument_list|()
operator|<<
name|Descr
argument_list|(
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
literal|false
argument_list|)
operator|<<
name|Descr
argument_list|(
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
literal|false
argument_list|)
operator|)
operator|<<
literal|500
operator|<<
literal|0
operator|<<
operator|(
name|PosList
argument_list|()
operator|<<
literal|100
operator|<<
literal|300
operator|)
operator|<<
operator|(
name|SizeList
argument_list|()
operator|<<
literal|100
operator|<<
literal|100
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Empty"
argument_list|)
operator|<<
operator|(
name|DescrList
argument_list|()
operator|<<
name|Descr
argument_list|(
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|Descr
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
literal|false
argument_list|,
literal|0
argument_list|,
literal|true
argument_list|)
operator|<<
name|Descr
argument_list|(
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
operator|)
operator|<<
literal|500
operator|<<
literal|0
operator|<<
operator|(
name|PosList
argument_list|()
operator|<<
literal|100
operator|<<
literal|300
operator|<<
literal|300
operator|)
operator|<<
operator|(
name|SizeList
argument_list|()
operator|<<
literal|100
operator|<<
literal|0
operator|<<
literal|100
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"QTBUG-33104"
argument_list|)
operator|<<
operator|(
name|DescrList
argument_list|()
operator|<<
name|Descr
argument_list|(
literal|11
argument_list|,
literal|75
argument_list|,
literal|75
argument_list|,
literal|true
argument_list|)
operator|<<
name|Descr
argument_list|(
literal|75
argument_list|,
literal|75
argument_list|)
operator|)
operator|<<
literal|200
operator|<<
literal|0
operator|<<
operator|(
name|PosList
argument_list|()
operator|<<
literal|0
operator|<<
literal|75
operator|)
operator|<<
operator|(
name|SizeList
argument_list|()
operator|<<
literal|75
operator|<<
literal|125
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Expanding with maximumSize"
argument_list|)
operator|<<
operator|(
name|DescrList
argument_list|()
operator|<<
name|Descr
argument_list|(
literal|11
argument_list|,
literal|75
argument_list|,
literal|100
argument_list|,
literal|true
argument_list|)
operator|<<
name|Descr
argument_list|(
literal|75
argument_list|,
literal|75
argument_list|)
operator|)
operator|<<
literal|200
operator|<<
literal|0
operator|<<
operator|(
name|PosList
argument_list|()
operator|<<
literal|0
operator|<<
literal|100
operator|)
operator|<<
operator|(
name|SizeList
argument_list|()
operator|<<
literal|100
operator|<<
literal|100
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Stretch with maximumSize"
argument_list|)
operator|<<
operator|(
name|DescrList
argument_list|()
operator|<<
name|Descr
argument_list|(
literal|11
argument_list|,
literal|75
argument_list|,
literal|100
argument_list|,
literal|false
argument_list|,
literal|1
argument_list|)
operator|<<
name|Descr
argument_list|(
literal|75
argument_list|,
literal|75
argument_list|)
operator|)
operator|<<
literal|200
operator|<<
literal|0
operator|<<
operator|(
name|PosList
argument_list|()
operator|<<
literal|0
operator|<<
literal|100
operator|)
operator|<<
operator|(
name|SizeList
argument_list|()
operator|<<
literal|100
operator|<<
literal|100
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Stretch with maximumSize last"
argument_list|)
operator|<<
operator|(
name|DescrList
argument_list|()
operator|<<
name|Descr
argument_list|(
literal|75
argument_list|,
literal|75
argument_list|)
operator|<<
name|Descr
argument_list|(
literal|11
argument_list|,
literal|75
argument_list|,
literal|100
argument_list|,
literal|false
argument_list|,
literal|1
argument_list|)
operator|)
operator|<<
literal|200
operator|<<
literal|0
operator|<<
operator|(
name|PosList
argument_list|()
operator|<<
literal|0
operator|<<
literal|100
operator|)
operator|<<
operator|(
name|SizeList
argument_list|()
operator|<<
literal|100
operator|<<
literal|100
operator|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testLayoutEngine
name|void
name|tst_QBoxLayout
operator|::
name|testLayoutEngine
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|DescrList
argument_list|,
name|itemDescriptions
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|size
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|spacing
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|PosList
argument_list|,
name|expectedPositions
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|SizeList
argument_list|,
name|expectedSizes
argument_list|)
expr_stmt|;
name|QHBoxLayout
name|box
decl_stmt|;
name|box
operator|.
name|setSpacing
argument_list|(
name|spacing
argument_list|)
expr_stmt|;
name|int
name|i
decl_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
name|itemDescriptions
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|Descr
name|descr
init|=
name|itemDescriptions
operator|.
name|at
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|LayoutItem
modifier|*
name|li
init|=
operator|new
name|LayoutItem
argument_list|(
name|descr
argument_list|)
decl_stmt|;
name|box
operator|.
name|addItem
argument_list|(
name|li
argument_list|)
expr_stmt|;
name|box
operator|.
name|setStretch
argument_list|(
name|i
argument_list|,
name|descr
operator|.
name|stretch
argument_list|)
expr_stmt|;
block|}
name|box
operator|.
name|setGeometry
argument_list|(
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|size
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
name|expectedSizes
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|int
name|xSize
init|=
name|expectedSizes
operator|.
name|at
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|int
name|xPos
init|=
name|expectedPositions
operator|.
name|at
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|QLayoutItem
modifier|*
name|item
init|=
name|box
operator|.
name|itemAt
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|item
operator|->
name|geometry
argument_list|()
operator|.
name|width
argument_list|()
argument_list|,
name|xSize
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item
operator|->
name|geometry
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|xPos
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QBoxLayout
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qboxlayout.moc"
end_include
end_unit
