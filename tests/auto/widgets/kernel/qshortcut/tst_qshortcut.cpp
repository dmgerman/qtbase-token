begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<qapplication.h>
end_include
begin_include
include|#
directive|include
file|<qtextedit.h>
end_include
begin_include
include|#
directive|include
file|<qpushbutton.h>
end_include
begin_include
include|#
directive|include
file|<qmainwindow.h>
end_include
begin_include
include|#
directive|include
file|<qstatusbar.h>
end_include
begin_include
include|#
directive|include
file|<qboxlayout.h>
end_include
begin_include
include|#
directive|include
file|<qdebug.h>
end_include
begin_include
include|#
directive|include
file|<qstring.h>
end_include
begin_include
include|#
directive|include
file|<qshortcut.h>
end_include
begin_include
include|#
directive|include
file|<qscreen.h>
end_include
begin_class_decl
class_decl|class
name|AccelForm
class_decl|;
end_class_decl
begin_macro
name|QT_BEGIN_NAMESPACE
end_macro
begin_class_decl
class_decl|class
name|QMainWindow
class_decl|;
end_class_decl
begin_class_decl
class_decl|class
name|QTextEdit
class_decl|;
end_class_decl
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_class
DECL|class|tst_QShortcut
class|class
name|tst_QShortcut
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
name|tst_QShortcut
parameter_list|()
constructor_decl|;
specifier|virtual
name|~
name|tst_QShortcut
parameter_list|()
destructor_decl|;
DECL|enum|Action
enum|enum
name|Action
block|{
DECL|enumerator|SetupAccel
name|SetupAccel
block|,
DECL|enumerator|TestAccel
name|TestAccel
block|,
DECL|enumerator|ClearAll
name|ClearAll
block|}
DECL|member|currentAction
name|currentAction
enum|;
DECL|enum|Widget
enum|enum
name|Widget
block|{
DECL|enumerator|NoWidget
name|NoWidget
block|,
DECL|enumerator|TriggerSlot1
name|TriggerSlot1
block|,
DECL|enumerator|TriggerSlot2
name|TriggerSlot2
block|,
DECL|enumerator|TriggerSlot3
name|TriggerSlot3
block|,
DECL|enumerator|TriggerSlot4
name|TriggerSlot4
block|,
DECL|enumerator|TriggerSlot5
name|TriggerSlot5
block|,
DECL|enumerator|TriggerSlot6
name|TriggerSlot6
block|,
DECL|enumerator|TriggerSlot7
name|TriggerSlot7
block|,
DECL|enumerator|SendKeyEvent
name|SendKeyEvent
block|}
enum|;
DECL|enum|Result
enum|enum
name|Result
block|{
DECL|enumerator|NoResult
name|NoResult
block|,
DECL|enumerator|Slot1Triggered
name|Slot1Triggered
block|,
DECL|enumerator|Slot2Triggered
name|Slot2Triggered
block|,
DECL|enumerator|Slot3Triggered
name|Slot3Triggered
block|,
DECL|enumerator|Slot4Triggered
name|Slot4Triggered
block|,
DECL|enumerator|Slot5Triggered
name|Slot5Triggered
block|,
DECL|enumerator|Slot6Triggered
name|Slot6Triggered
block|,
DECL|enumerator|Slot7Triggered
name|Slot7Triggered
block|,
DECL|enumerator|SentKeyEvent
name|SentKeyEvent
block|,
DECL|enumerator|Ambiguous
name|Ambiguous
block|}
DECL|member|currentResult
name|currentResult
enum|;
public|public
name|slots
public|:
DECL|function|slotTrig1
name|void
name|slotTrig1
parameter_list|()
block|{
name|currentResult
operator|=
name|Slot1Triggered
expr_stmt|;
block|}
DECL|function|slotTrig2
name|void
name|slotTrig2
parameter_list|()
block|{
name|currentResult
operator|=
name|Slot2Triggered
expr_stmt|;
block|}
DECL|function|slotTrig3
name|void
name|slotTrig3
parameter_list|()
block|{
name|currentResult
operator|=
name|Slot3Triggered
expr_stmt|;
block|}
DECL|function|slotTrig4
name|void
name|slotTrig4
parameter_list|()
block|{
name|currentResult
operator|=
name|Slot4Triggered
expr_stmt|;
block|}
DECL|function|slotTrig5
name|void
name|slotTrig5
parameter_list|()
block|{
name|currentResult
operator|=
name|Slot5Triggered
expr_stmt|;
block|}
DECL|function|slotTrig6
name|void
name|slotTrig6
parameter_list|()
block|{
name|currentResult
operator|=
name|Slot6Triggered
expr_stmt|;
block|}
DECL|function|slotTrig7
name|void
name|slotTrig7
parameter_list|()
block|{
name|currentResult
operator|=
name|Slot7Triggered
expr_stmt|;
block|}
DECL|function|ambigSlot1
name|void
name|ambigSlot1
parameter_list|()
block|{
name|currentResult
operator|=
name|Ambiguous
expr_stmt|;
name|ambigResult
operator|=
name|Slot1Triggered
expr_stmt|;
block|}
DECL|function|ambigSlot2
name|void
name|ambigSlot2
parameter_list|()
block|{
name|currentResult
operator|=
name|Ambiguous
expr_stmt|;
name|ambigResult
operator|=
name|Slot2Triggered
expr_stmt|;
block|}
DECL|function|ambigSlot3
name|void
name|ambigSlot3
parameter_list|()
block|{
name|currentResult
operator|=
name|Ambiguous
expr_stmt|;
name|ambigResult
operator|=
name|Slot3Triggered
expr_stmt|;
block|}
DECL|function|ambigSlot4
name|void
name|ambigSlot4
parameter_list|()
block|{
name|currentResult
operator|=
name|Ambiguous
expr_stmt|;
name|ambigResult
operator|=
name|Slot4Triggered
expr_stmt|;
block|}
DECL|function|ambigSlot5
name|void
name|ambigSlot5
parameter_list|()
block|{
name|currentResult
operator|=
name|Ambiguous
expr_stmt|;
name|ambigResult
operator|=
name|Slot5Triggered
expr_stmt|;
block|}
DECL|function|ambigSlot6
name|void
name|ambigSlot6
parameter_list|()
block|{
name|currentResult
operator|=
name|Ambiguous
expr_stmt|;
name|ambigResult
operator|=
name|Slot6Triggered
expr_stmt|;
block|}
DECL|function|ambigSlot7
name|void
name|ambigSlot7
parameter_list|()
block|{
name|currentResult
operator|=
name|Ambiguous
expr_stmt|;
name|ambigResult
operator|=
name|Slot7Triggered
expr_stmt|;
block|}
DECL|function|statusMessage
name|void
name|statusMessage
parameter_list|(
specifier|const
name|QString
modifier|&
name|message
parameter_list|)
block|{
name|sbText
operator|=
name|message
expr_stmt|;
block|}
name|void
name|shortcutDestroyed
parameter_list|(
name|QObject
modifier|*
name|obj
parameter_list|)
function_decl|;
DECL|function|sendKeyEvent
name|void
name|sendKeyEvent
parameter_list|()
block|{
name|sendKeyEvents
argument_list|(
name|edit
argument_list|,
name|Qt
operator|::
name|CTRL
operator|+
name|Qt
operator|::
name|Key_B
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|currentResult
operator|=
name|SentKeyEvent
expr_stmt|;
block|}
public|public
name|slots
public|:
name|void
name|initTestCase
parameter_list|()
function_decl|;
name|void
name|cleanupTestCase
parameter_list|()
function_decl|;
DECL|function|cleanup
name|void
name|cleanup
parameter_list|()
block|{
name|QCOMPARE
argument_list|(
name|QApplication
operator|::
name|topLevelWidgets
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
private|private
name|slots
private|:
name|void
name|number_data
parameter_list|()
function_decl|;
name|void
name|number
parameter_list|()
function_decl|;
name|void
name|text_data
parameter_list|()
function_decl|;
name|void
name|text
parameter_list|()
function_decl|;
name|void
name|disabledItems
parameter_list|()
function_decl|;
name|void
name|ambiguousItems
parameter_list|()
function_decl|;
name|void
name|ambiguousRotation
parameter_list|()
function_decl|;
name|void
name|keypressConsumption
parameter_list|()
function_decl|;
name|void
name|unicodeCompare
parameter_list|()
function_decl|;
name|void
name|context
parameter_list|()
function_decl|;
name|void
name|duplicatedShortcutOverride
parameter_list|()
function_decl|;
protected|protected:
specifier|static
name|Qt
operator|::
name|KeyboardModifiers
name|toButtons
parameter_list|(
name|int
name|key
parameter_list|)
function_decl|;
name|void
name|defElements
parameter_list|()
function_decl|;
name|void
name|clearAllShortcuts
parameter_list|()
function_decl|;
name|QShortcut
modifier|*
name|setupShortcut
parameter_list|(
name|int
name|testWidget
parameter_list|,
specifier|const
name|QKeySequence
modifier|&
name|ks
parameter_list|)
function_decl|;
name|QShortcut
modifier|*
name|setupShortcut
parameter_list|(
name|int
name|testWidget
parameter_list|,
specifier|const
name|QString
modifier|&
name|txt
parameter_list|,
name|int
name|k1
init|=
literal|0
parameter_list|,
name|int
name|k2
init|=
literal|0
parameter_list|,
name|int
name|k3
init|=
literal|0
parameter_list|,
name|int
name|k4
init|=
literal|0
parameter_list|)
function_decl|;
name|QShortcut
modifier|*
name|setupShortcut
parameter_list|(
name|QWidget
modifier|*
name|parent
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|,
name|int
name|testWidget
parameter_list|,
specifier|const
name|QString
modifier|&
name|txt
parameter_list|,
name|int
name|k1
init|=
literal|0
parameter_list|,
name|int
name|k2
init|=
literal|0
parameter_list|,
name|int
name|k3
init|=
literal|0
parameter_list|,
name|int
name|k4
init|=
literal|0
parameter_list|)
function_decl|;
name|QShortcut
modifier|*
name|setupShortcut
parameter_list|(
name|QWidget
modifier|*
name|parent
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|,
name|int
name|testWidget
parameter_list|,
specifier|const
name|QKeySequence
modifier|&
name|ks
parameter_list|,
name|Qt
operator|::
name|ShortcutContext
name|context
init|=
name|Qt
operator|::
name|WindowShortcut
parameter_list|)
function_decl|;
name|void
name|sendKeyEvents
parameter_list|(
name|QWidget
modifier|*
name|w
parameter_list|,
name|int
name|k1
parameter_list|,
name|QChar
name|c1
init|=
literal|0
parameter_list|,
name|int
name|k2
init|=
literal|0
parameter_list|,
name|QChar
name|c2
init|=
literal|0
parameter_list|,
name|int
name|k3
init|=
literal|0
parameter_list|,
name|QChar
name|c3
init|=
literal|0
parameter_list|,
name|int
name|k4
init|=
literal|0
parameter_list|,
name|QChar
name|c4
init|=
literal|0
parameter_list|)
function_decl|;
name|void
name|sendKeyEvents
parameter_list|(
name|int
name|k1
parameter_list|,
name|QChar
name|c1
init|=
literal|0
parameter_list|,
name|int
name|k2
init|=
literal|0
parameter_list|,
name|QChar
name|c2
init|=
literal|0
parameter_list|,
name|int
name|k3
init|=
literal|0
parameter_list|,
name|QChar
name|c3
init|=
literal|0
parameter_list|,
name|int
name|k4
init|=
literal|0
parameter_list|,
name|QChar
name|c4
init|=
literal|0
parameter_list|)
function_decl|;
name|void
name|testElement
parameter_list|()
function_decl|;
DECL|member|mainW
name|QMainWindow
modifier|*
name|mainW
decl_stmt|;
DECL|member|shortcuts
name|QList
argument_list|<
name|QShortcut
modifier|*
argument_list|>
name|shortcuts
decl_stmt|;
DECL|member|edit
name|QTextEdit
modifier|*
name|edit
decl_stmt|;
DECL|member|sbText
name|QString
name|sbText
decl_stmt|;
DECL|member|ambigResult
name|Result
name|ambigResult
decl_stmt|;
block|}
class|;
end_class
begin_expr_stmt
DECL|variable|Widget
name|Q_DECLARE_METATYPE
argument_list|(
name|tst_QShortcut
operator|::
name|Widget
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
DECL|variable|Result
name|Q_DECLARE_METATYPE
argument_list|(
name|tst_QShortcut
operator|::
name|Result
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
DECL|variable|Action
name|Q_DECLARE_METATYPE
argument_list|(
name|tst_QShortcut
operator|::
name|Action
argument_list|)
expr_stmt|;
end_expr_stmt
begin_class
DECL|class|TestEdit
class|class
name|TestEdit
super|:
specifier|public
name|QTextEdit
block|{
name|Q_OBJECT
public|public:
DECL|function|TestEdit
name|TestEdit
parameter_list|(
name|QWidget
modifier|*
name|parent
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|)
member_init_list|:
name|QTextEdit
argument_list|(
name|parent
argument_list|)
block|{
name|setObjectName
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
protected|protected:
DECL|function|event
name|bool
name|event
parameter_list|(
name|QEvent
modifier|*
name|e
parameter_list|)
block|{
comment|// Make testedit allow any Ctrl+Key as shortcut
if|if
condition|(
name|e
operator|->
name|type
argument_list|()
operator|==
name|QEvent
operator|::
name|ShortcutOverride
condition|)
block|{
name|QKeyEvent
modifier|*
name|ke
init|=
cast|static_cast
argument_list|<
name|QKeyEvent
operator|*
argument_list|>
argument_list|(
name|e
argument_list|)
decl_stmt|;
if|if
condition|(
name|ke
operator|->
name|modifiers
argument_list|()
operator|==
name|Qt
operator|::
name|ControlModifier
operator|&&
name|ke
operator|->
name|key
argument_list|()
operator|>
name|Qt
operator|::
name|Key_Any
operator|&&
name|ke
operator|->
name|key
argument_list|()
operator|<
name|Qt
operator|::
name|Key_ydiaeresis
condition|)
block|{
name|ke
operator|->
name|ignore
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
block|}
comment|// If keypress not processed as normal, check for
comment|// Ctrl+Key event, and input custom string for
comment|// result comparison.
if|if
condition|(
name|e
operator|->
name|type
argument_list|()
operator|==
name|QEvent
operator|::
name|KeyPress
condition|)
block|{
name|QKeyEvent
modifier|*
name|ke
init|=
cast|static_cast
argument_list|<
name|QKeyEvent
operator|*
argument_list|>
argument_list|(
name|e
argument_list|)
decl_stmt|;
if|if
condition|(
name|ke
operator|->
name|modifiers
argument_list|()
operator|&&
name|ke
operator|->
name|key
argument_list|()
operator|>
name|Qt
operator|::
name|Key_Any
operator|&&
name|ke
operator|->
name|key
argument_list|()
operator|<
name|Qt
operator|::
name|Key_ydiaeresis
condition|)
block|{
if|if
condition|(
name|ke
operator|->
name|modifiers
argument_list|()
operator|==
name|Qt
operator|::
name|ControlModifier
condition|)
name|insertPlainText
argument_list|(
name|QString
argument_list|(
literal|"<Ctrl+%1>"
argument_list|)
operator|.
name|arg
argument_list|(
name|char
argument_list|(
name|ke
operator|->
name|key
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|ke
operator|->
name|modifiers
argument_list|()
operator|==
name|Qt
operator|::
name|AltModifier
condition|)
name|insertPlainText
argument_list|(
name|QString
argument_list|(
literal|"<Alt+%1>"
argument_list|)
operator|.
name|arg
argument_list|(
name|char
argument_list|(
name|ke
operator|->
name|key
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|ke
operator|->
name|modifiers
argument_list|()
operator|==
name|Qt
operator|::
name|ShiftModifier
condition|)
name|insertPlainText
argument_list|(
name|QString
argument_list|(
literal|"<Shift+%1>"
argument_list|)
operator|.
name|arg
argument_list|(
name|char
argument_list|(
name|ke
operator|->
name|key
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
block|}
return|return
name|QTextEdit
operator|::
name|event
argument_list|(
name|e
argument_list|)
return|;
block|}
block|}
class|;
end_class
begin_constructor
DECL|function|tst_QShortcut
name|tst_QShortcut
operator|::
name|tst_QShortcut
parameter_list|()
member_init_list|:
name|mainW
argument_list|(
literal|0
argument_list|)
block|{ }
end_constructor
begin_destructor
DECL|function|~tst_QShortcut
name|tst_QShortcut
operator|::
name|~
name|tst_QShortcut
parameter_list|()
block|{
name|clearAllShortcuts
argument_list|()
expr_stmt|;
block|}
end_destructor
begin_function
DECL|function|initTestCase
name|void
name|tst_QShortcut
operator|::
name|initTestCase
parameter_list|()
block|{
name|currentResult
operator|=
name|NoResult
expr_stmt|;
name|mainW
operator|=
operator|new
name|QMainWindow
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|mainW
operator|->
name|setWindowFlags
argument_list|(
name|Qt
operator|::
name|X11BypassWindowManagerHint
argument_list|)
expr_stmt|;
name|edit
operator|=
operator|new
name|TestEdit
argument_list|(
name|mainW
argument_list|,
literal|"test_edit"
argument_list|)
expr_stmt|;
name|mainW
operator|->
name|setFixedSize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|mainW
operator|->
name|setCentralWidget
argument_list|(
name|edit
argument_list|)
expr_stmt|;
name|mainW
operator|->
name|show
argument_list|()
expr_stmt|;
name|mainW
operator|->
name|activateWindow
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowActive
argument_list|(
name|mainW
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|mainW
operator|->
name|statusBar
argument_list|()
argument_list|,
name|SIGNAL
argument_list|(
name|messageChanged
argument_list|(
name|QString
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|statusMessage
argument_list|(
name|QString
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|cleanupTestCase
name|void
name|tst_QShortcut
operator|::
name|cleanupTestCase
parameter_list|()
block|{
operator|delete
name|mainW
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toButtons
name|Qt
operator|::
name|KeyboardModifiers
name|tst_QShortcut
operator|::
name|toButtons
parameter_list|(
name|int
name|key
parameter_list|)
block|{
name|Qt
operator|::
name|KeyboardModifiers
name|result
init|=
name|Qt
operator|::
name|NoModifier
decl_stmt|;
if|if
condition|(
name|key
operator|&
name|Qt
operator|::
name|SHIFT
condition|)
name|result
operator||=
name|Qt
operator|::
name|ShiftModifier
expr_stmt|;
if|if
condition|(
name|key
operator|&
name|Qt
operator|::
name|CTRL
condition|)
name|result
operator||=
name|Qt
operator|::
name|ControlModifier
expr_stmt|;
if|if
condition|(
name|key
operator|&
name|Qt
operator|::
name|META
condition|)
name|result
operator||=
name|Qt
operator|::
name|MetaModifier
expr_stmt|;
if|if
condition|(
name|key
operator|&
name|Qt
operator|::
name|ALT
condition|)
name|result
operator||=
name|Qt
operator|::
name|AltModifier
expr_stmt|;
return|return
name|result
return|;
block|}
end_function
begin_function
DECL|function|defElements
name|void
name|tst_QShortcut
operator|::
name|defElements
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|tst_QShortcut
operator|::
name|Action
argument_list|>
argument_list|(
literal|"action"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|tst_QShortcut
operator|::
name|Widget
argument_list|>
argument_list|(
literal|"testWidget"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"txt"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"k1"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"c1"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"k2"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"c2"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"k3"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"c3"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"k4"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"c4"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|tst_QShortcut
operator|::
name|Result
argument_list|>
argument_list|(
literal|"result"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|number
name|void
name|tst_QShortcut
operator|::
name|number
parameter_list|()
block|{
comment|// We expect a failure on these tests, until QtTestKeyboard is
comment|// fixed to do real platform dependent keyboard simulations
if|if
condition|(
name|QTest
operator|::
name|currentDataTag
argument_list|()
operator|==
name|QString
argument_list|(
literal|"N006a:Shift+Tab - [BackTab]"
argument_list|)
operator|||
name|QTest
operator|::
name|currentDataTag
argument_list|()
operator|==
name|QString
argument_list|(
literal|"N006b:Shift+Tab - [Shift+BackTab]"
argument_list|)
condition|)
name|QEXPECT_FAIL
argument_list|(
literal|""
argument_list|,
literal|"FLAW IN QTESTKEYBOARD: Keyboard events not passed through "
literal|"platform dependent key handling code"
argument_list|,
name|Continue
argument_list|)
expr_stmt|;
name|testElement
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|text
name|void
name|tst_QShortcut
operator|::
name|text
parameter_list|()
block|{
name|testElement
argument_list|()
expr_stmt|;
block|}
end_function
begin_comment
comment|// ------------------------------------------------------------------
end_comment
begin_comment
comment|// Number Elements --------------------------------------------------
end_comment
begin_comment
comment|// ------------------------------------------------------------------
end_comment
begin_function
DECL|function|number_data
name|void
name|tst_QShortcut
operator|::
name|number_data
parameter_list|()
block|{
name|defElements
argument_list|()
expr_stmt|;
comment|// Clear all
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N00 - clear"
argument_list|)
operator|<<
name|ClearAll
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
comment|//===========================================
comment|// [Shift + key] on non-shift shortcuts testing
comment|//===========================================
comment|/* Testing Single Sequences        Shift + Qt::Key_M    on  Qt::Key_M                Qt::Key_M    on  Qt::Key_M        Shift + Qt::Key_Plus on  Qt::Key_Pluss                Qt::Key_Plus on  Qt::Key_Pluss     */
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N001 - slot1"
argument_list|)
operator|<<
name|SetupAccel
operator|<<
name|TriggerSlot1
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Key_M
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
comment|//commented out because the behaviour changed, those tests should be updated
comment|//QTest::newRow("N001:Shift + M - [M]")<< TestAccel<< NoWidget<< QString("")<< int(Qt::SHIFT + Qt::Key_M)<< int('M')<< 0<< 0<< 0<< 0<< 0<< 0<< Slot1Triggered;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N001:M - [M]"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Key_M
argument_list|)
operator|<<
name|int
argument_list|(
literal|'m'
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|Slot1Triggered
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N001 - slot2"
argument_list|)
operator|<<
name|SetupAccel
operator|<<
name|TriggerSlot2
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Key_Plus
argument_list|)
operator|<<
name|int
argument_list|(
literal|'+'
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
comment|//commented out because the behaviour changed, those tests should be updated
comment|//QTest::newRow("N001:Shift++ [+]")<< TestAccel<< NoWidget<< QString("")<< int(Qt::SHIFT + Qt::Key_Plus)<< int('+')<< 0<< 0<< 0<< 0<< 0<< 0<< Slot2Triggered;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N001:+ [+]"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Key_Plus
argument_list|)
operator|<<
name|int
argument_list|(
literal|'+'
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|Slot2Triggered
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N001 - clear"
argument_list|)
operator|<<
name|ClearAll
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
comment|// Clear all
comment|/* Testing Single Sequences        Shift + Qt::Key_M    on  Shift + Qt::Key_M                Qt::Key_M    on  Shift + Qt::Key_M        Shift + Qt::Key_Plus on  Shift + Qt::Key_Pluss                Qt::Key_Plus on  Shift + Qt::Key_Pluss     */
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N002 - slot1"
argument_list|)
operator|<<
name|SetupAccel
operator|<<
name|TriggerSlot1
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|SHIFT
operator|+
name|Qt
operator|::
name|Key_M
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N002:Shift+M - [Shift+M]"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|SHIFT
operator|+
name|Qt
operator|::
name|Key_M
argument_list|)
operator|<<
name|int
argument_list|(
literal|'M'
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|Slot1Triggered
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N002:M - [Shift+M]"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Key_M
argument_list|)
operator|<<
name|int
argument_list|(
literal|'m'
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N002 - slot2"
argument_list|)
operator|<<
name|SetupAccel
operator|<<
name|TriggerSlot2
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|SHIFT
operator|+
name|Qt
operator|::
name|Key_Plus
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N002:Shift++ [Shift++]"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|SHIFT
operator|+
name|Qt
operator|::
name|Key_Plus
argument_list|)
operator|<<
name|int
argument_list|(
literal|'+'
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|Slot2Triggered
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N002:+ [Shift++]"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Key_Plus
argument_list|)
operator|<<
name|int
argument_list|(
literal|'+'
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N002 - clear"
argument_list|)
operator|<<
name|ClearAll
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
comment|// Clear all
comment|/* Testing Single Sequences        Shift + Qt::Key_F1   on  Qt::Key_F1                Qt::Key_F1   on  Qt::Key_F1     */
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N003 - slot1"
argument_list|)
operator|<<
name|SetupAccel
operator|<<
name|TriggerSlot1
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Key_F1
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
comment|//commented out because the behaviour changed, those tests should be updated
comment|//QTest::newRow("N003:Shift+F1 - [F1]")<< TestAccel<< NoWidget<< QString("")<< int(Qt::SHIFT + Qt::Key_F1)<< 0<< 0<< 0<< 0<< 0<< 0<< 0<< Slot1Triggered;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N003:F1 - [F1]"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Key_F1
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|Slot1Triggered
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N003 - clear"
argument_list|)
operator|<<
name|ClearAll
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
comment|// Clear all
comment|/* Testing Single Sequences        Shift + Qt::Key_F1   on  Shift + Qt::Key_F1                Qt::Key_F1   on  Shift + Qt::Key_F1     */
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N004 - slot1"
argument_list|)
operator|<<
name|SetupAccel
operator|<<
name|TriggerSlot1
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|SHIFT
operator|+
name|Qt
operator|::
name|Key_F1
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N004:Shift+F1 - [Shift+F1]"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|SHIFT
operator|+
name|Qt
operator|::
name|Key_F1
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|Slot1Triggered
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N004:F1 - [Shift+F1]"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Key_F1
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N004 - clear"
argument_list|)
operator|<<
name|ClearAll
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
comment|// Clear all
comment|/* Testing Single Sequences                Qt::Key_Tab      on  Qt::Key_Tab        Shift + Qt::Key_Tab      on  Qt::Key_Tab                Qt::Key_Backtab  on  Qt::Key_Tab        Shift + Qt::Key_Backtab  on  Qt::Key_Tab     */
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N005a - slot1"
argument_list|)
operator|<<
name|SetupAccel
operator|<<
name|TriggerSlot1
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N005a:Tab - [Tab]"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|Slot1Triggered
expr_stmt|;
comment|//commented out because the behaviour changed, those tests should be updated
comment|//QTest::newRow("N005a:Shift+Tab - [Tab]")<< TestAccel<< NoWidget<< QString("")<< int(Qt::SHIFT + Qt::Key_Tab)<< 0<< 0<< 0<< 0<< 0<< 0<< 0<< Slot1Triggered;
comment|// (Shift+)BackTab != Tab, but Shift+BackTab == Shift+Tab
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N005a:Backtab - [Tab]"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Key_Backtab
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N005a:Shift+Backtab - [Tab]"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|SHIFT
operator|+
name|Qt
operator|::
name|Key_Backtab
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N005a - clear"
argument_list|)
operator|<<
name|ClearAll
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
comment|// Clear all
comment|/* Testing Single Sequences                Qt::Key_Tab      on  Shift + Qt::Key_Tab        Shift + Qt::Key_Tab      on  Shift + Qt::Key_Tab                Qt::Key_Backtab  on  Shift + Qt::Key_Tab        Shift + Qt::Key_Backtab  on  Shift + Qt::Key_Tab     */
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N005b - slot1"
argument_list|)
operator|<<
name|SetupAccel
operator|<<
name|TriggerSlot1
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|SHIFT
operator|+
name|Qt
operator|::
name|Key_Tab
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N005b:Tab - [Shift+Tab]"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N005b:Shift+Tab - [Shift+Tab]"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|SHIFT
operator|+
name|Qt
operator|::
name|Key_Tab
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|Slot1Triggered
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N005b:BackTab - [Shift+Tab]"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Key_Backtab
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N005b:Shift+BackTab - [Shift+Tab]"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|SHIFT
operator|+
name|Qt
operator|::
name|Key_Backtab
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|Slot1Triggered
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N005b - clear"
argument_list|)
operator|<<
name|ClearAll
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
comment|// Clear all
comment|/* Testing Single Sequences                Qt::Key_Tab      on  Qt::Key_Backtab        Shift + Qt::Key_Tab      on  Qt::Key_Backtab                Qt::Key_Backtab  on  Qt::Key_Backtab        Shift + Qt::Key_Backtab  on  Qt::Key_Backtab     */
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N006a - slot1"
argument_list|)
operator|<<
name|SetupAccel
operator|<<
name|TriggerSlot1
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Key_Backtab
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N006a:Tab - [BackTab]"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
comment|// This should work, since platform dependent code will transform the
comment|// Shift+Tab into a Shift+BackTab, which should trigger the shortcut
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N006a:Shift+Tab - [BackTab]"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|SHIFT
operator|+
name|Qt
operator|::
name|Key_Tab
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|Slot1Triggered
expr_stmt|;
comment|//XFAIL
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N006a:BackTab - [BackTab]"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Key_Backtab
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|Slot1Triggered
expr_stmt|;
comment|//commented out because the behaviour changed, those tests should be updated
comment|//QTest::newRow("N006a:Shift+BackTab - [BackTab]")<< TestAccel<< NoWidget<< QString("")<< int(Qt::SHIFT + Qt::Key_Backtab)<< 0<< 0<< 0<< 0<< 0<< 0<< 0<< Slot1Triggered;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N006a - clear"
argument_list|)
operator|<<
name|ClearAll
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
comment|// Clear all
comment|/* Testing Single Sequences                Qt::Key_Tab      on  Shift + Qt::Key_Backtab        Shift + Qt::Key_Tab      on  Shift + Qt::Key_Backtab                Qt::Key_Backtab  on  Shift + Qt::Key_Backtab        Shift + Qt::Key_Backtab  on  Shift + Qt::Key_Backtab     */
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N006b - slot1"
argument_list|)
operator|<<
name|SetupAccel
operator|<<
name|TriggerSlot1
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|SHIFT
operator|+
name|Qt
operator|::
name|Key_Backtab
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N006b:Tab - [Shift+BackTab]"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N006b:Shift+Tab - [Shift+BackTab]"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|SHIFT
operator|+
name|Qt
operator|::
name|Key_Tab
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|Slot1Triggered
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N006b:BackTab - [Shift+BackTab]"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Key_Backtab
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N006b:Shift+BackTab - [Shift+BackTab]"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|SHIFT
operator|+
name|Qt
operator|::
name|Key_Backtab
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|Slot1Triggered
expr_stmt|;
comment|//XFAIL
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N006b - clear"
argument_list|)
operator|<<
name|ClearAll
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
comment|// Clear all
comment|//===========================================
comment|// [Shift + key] and [key] on shortcuts with
comment|// and without modifiers
comment|//===========================================
comment|/* Testing Single Sequences        Qt::Key_F1        Shift + Qt::Key_F1     */
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N007 - slot1"
argument_list|)
operator|<<
name|SetupAccel
operator|<<
name|TriggerSlot1
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Key_F1
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N007 - slot2"
argument_list|)
operator|<<
name|SetupAccel
operator|<<
name|TriggerSlot2
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|SHIFT
operator|+
name|Qt
operator|::
name|Key_F1
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N007:F1"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Key_F1
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|Slot1Triggered
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N007:Shift + F1"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|SHIFT
operator|+
name|Qt
operator|::
name|Key_F1
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|Slot2Triggered
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N007 - clear"
argument_list|)
operator|<<
name|ClearAll
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
comment|// Clear all
comment|/* Testing Single Sequences        Qt::Key_M        Shift + Qt::Key_M        Ctrl  + Qt::Key_M        Alt   + Qt::Key_M     */
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N01 - slot1"
argument_list|)
operator|<<
name|SetupAccel
operator|<<
name|TriggerSlot1
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Key_M
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N02 - slot2"
argument_list|)
operator|<<
name|SetupAccel
operator|<<
name|TriggerSlot2
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|SHIFT
operator|+
name|Qt
operator|::
name|Key_M
argument_list|)
operator|<<
name|int
argument_list|(
literal|'M'
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N03 - slot1"
argument_list|)
operator|<<
name|SetupAccel
operator|<<
name|TriggerSlot1
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|CTRL
operator|+
name|Qt
operator|::
name|Key_M
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N04 - slot2"
argument_list|)
operator|<<
name|SetupAccel
operator|<<
name|TriggerSlot2
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|ALT
operator|+
name|Qt
operator|::
name|Key_M
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N:Qt::Key_M"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Key_M
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|Slot1Triggered
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N:Shift+Qt::Key_M"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|SHIFT
operator|+
name|Qt
operator|::
name|Key_M
argument_list|)
operator|<<
name|int
argument_list|(
literal|'M'
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|Slot2Triggered
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N:Ctrl+Qt::Key_M"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|CTRL
operator|+
name|Qt
operator|::
name|Key_M
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|Slot1Triggered
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N:Alt+Qt::Key_M"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|ALT
operator|+
name|Qt
operator|::
name|Key_M
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|Slot2Triggered
expr_stmt|;
comment|/* Testing Single Sequence Ambiguity        Qt::Key_M on shortcut2     */
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N05 - slot2"
argument_list|)
operator|<<
name|SetupAccel
operator|<<
name|TriggerSlot2
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Key_M
argument_list|)
operator|<<
name|int
argument_list|(
literal|'m'
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N:Qt::Key_M on slot"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Key_M
argument_list|)
operator|<<
name|int
argument_list|(
literal|'m'
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|Ambiguous
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N05 - clear"
argument_list|)
operator|<<
name|ClearAll
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
comment|// Clear all
comment|/* Testing Single Specialkeys        Qt::Key_aring        Qt::Key_Aring        Qt::UNICODE_ACCEL + Qt::Key_K     */
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N06 - slot1"
argument_list|)
operator|<<
name|SetupAccel
operator|<<
name|TriggerSlot1
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Key_Aring
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N07 - slot2"
argument_list|)
operator|<<
name|SetupAccel
operator|<<
name|TriggerSlot2
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|SHIFT
operator|+
name|Qt
operator|::
name|Key_Aring
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N08 - slot2"
argument_list|)
operator|<<
name|SetupAccel
operator|<<
name|TriggerSlot1
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|UNICODE_ACCEL
operator|+
name|Qt
operator|::
name|Key_K
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N:Qt::Key_aring"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Key_Aring
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|Slot1Triggered
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N:Qt::Key_Aring"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|SHIFT
operator|+
name|Qt
operator|::
name|Key_Aring
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|Slot2Triggered
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N:Qt::Key_aring - Text Form"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
literal|0
operator|<<
literal|0xC5
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|Slot1Triggered
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N:Qt::Key_Aring - Text Form"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|SHIFT
operator|+
literal|0
argument_list|)
operator|<<
literal|0xC5
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|Slot2Triggered
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N:Qt::UNICODE_ACCEL + Qt::Key_K"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|UNICODE_ACCEL
operator|+
name|Qt
operator|::
name|Key_K
argument_list|)
operator|<<
name|int
argument_list|(
literal|'k'
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|Slot1Triggered
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N09 - clear"
argument_list|)
operator|<<
name|ClearAll
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
comment|// Clear all
comment|/* Testing Multiple Sequences        Qt::Key_M        Qt::Key_I, Qt::Key_M        Shift+Qt::Key_I, Qt::Key_M     */
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N10 - slot1"
argument_list|)
operator|<<
name|SetupAccel
operator|<<
name|TriggerSlot1
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Key_M
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N11 - slot2"
argument_list|)
operator|<<
name|SetupAccel
operator|<<
name|TriggerSlot2
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Key_I
argument_list|)
operator|<<
literal|0
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Key_M
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N12 - slot1"
argument_list|)
operator|<<
name|SetupAccel
operator|<<
name|TriggerSlot1
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|SHIFT
operator|+
name|Qt
operator|::
name|Key_I
argument_list|)
operator|<<
literal|0
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Key_M
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N:Qt::Key_M (2)"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Key_M
argument_list|)
operator|<<
name|int
argument_list|(
literal|'m'
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|Slot1Triggered
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N:Qt::Key_I, Qt::Key_M"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Key_I
argument_list|)
operator|<<
name|int
argument_list|(
literal|'i'
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Key_M
argument_list|)
operator|<<
name|int
argument_list|(
literal|'m'
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|Slot2Triggered
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N:Shift+Qt::Key_I, Qt::Key_M"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|SHIFT
operator|+
name|Qt
operator|::
name|Key_I
argument_list|)
operator|<<
name|int
argument_list|(
literal|'I'
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Key_M
argument_list|)
operator|<<
name|int
argument_list|(
literal|'m'
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|Slot1Triggered
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"N13 - clear"
argument_list|)
operator|<<
name|ClearAll
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
comment|// Clear all
block|}
end_function
begin_comment
comment|// ------------------------------------------------------------------
end_comment
begin_comment
comment|// Text Elements ----------------------------------------------------
end_comment
begin_comment
comment|// ------------------------------------------------------------------
end_comment
begin_function
DECL|function|text_data
name|void
name|tst_QShortcut
operator|::
name|text_data
parameter_list|()
block|{
name|defElements
argument_list|()
expr_stmt|;
comment|// Clear all
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T00 - clear"
argument_list|)
operator|<<
name|ClearAll
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
comment|//===========================================
comment|// [Shift + key] on non-shift shortcuts testing
comment|//===========================================
comment|/* Testing Single Sequences        Shift + Qt::Key_M    on  Qt::Key_M                Qt::Key_M    on  Qt::Key_M        Shift + Qt::Key_Plus on  Qt::Key_Pluss                Qt::Key_Plus on  Qt::Key_Pluss     */
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T001 - slot1"
argument_list|)
operator|<<
name|SetupAccel
operator|<<
name|TriggerSlot1
operator|<<
name|QString
argument_list|(
literal|"M"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
comment|//commented out because the behaviour changed, those tests should be updated
comment|//QTest::newRow("T001:Shift+M - [M]")<< TestAccel<< NoWidget<< QString("")<< int(Qt::SHIFT + Qt::Key_M)<< int('M')<< 0<< 0<< 0<< 0<< 0<< 0<< Slot1Triggered;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T001:M - [M]"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Key_M
argument_list|)
operator|<<
name|int
argument_list|(
literal|'m'
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|Slot1Triggered
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T001 - slot2"
argument_list|)
operator|<<
name|SetupAccel
operator|<<
name|TriggerSlot2
operator|<<
name|QString
argument_list|(
literal|"+"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
comment|//commented out because the behaviour changed, those tests should be updated
comment|//QTest::newRow("T001:Shift++ [+]")<< TestAccel<< NoWidget<< QString("")<< int(Qt::SHIFT + Qt::Key_Plus)<< int('+')<< 0<< 0<< 0<< 0<< 0<< 0<< Slot2Triggered;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T001:+ [+]"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Key_Plus
argument_list|)
operator|<<
name|int
argument_list|(
literal|'+'
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|Slot2Triggered
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T001 - clear"
argument_list|)
operator|<<
name|ClearAll
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
comment|// Clear all
comment|/* Testing Single Sequences        Shift + Qt::Key_M    on  Shift + Qt::Key_M                Qt::Key_M    on  Shift + Qt::Key_M        Shift + Qt::Key_Plus on  Shift + Qt::Key_Pluss                Qt::Key_Plus on  Shift + Qt::Key_Pluss        Shift + Ctrl + Qt::Key_Plus on  Ctrl + Qt::Key_Pluss                Ctrl + Qt::Key_Plus on  Ctrl + Qt::Key_Pluss     */
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T002 - slot1"
argument_list|)
operator|<<
name|SetupAccel
operator|<<
name|TriggerSlot1
operator|<<
name|QString
argument_list|(
literal|"Shift+M"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T002:Shift+M - [Shift+M]"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|SHIFT
operator|+
name|Qt
operator|::
name|Key_M
argument_list|)
operator|<<
name|int
argument_list|(
literal|'M'
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|Slot1Triggered
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T002:M - [Shift+M]"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Key_M
argument_list|)
operator|<<
name|int
argument_list|(
literal|'m'
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T002 - slot2"
argument_list|)
operator|<<
name|SetupAccel
operator|<<
name|TriggerSlot2
operator|<<
name|QString
argument_list|(
literal|"Shift++"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T002:Shift++ [Shift++]"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|SHIFT
operator|+
name|Qt
operator|::
name|Key_Plus
argument_list|)
operator|<<
name|int
argument_list|(
literal|'+'
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|Slot2Triggered
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T002:+ [Shift++]"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Key_Plus
argument_list|)
operator|<<
name|int
argument_list|(
literal|'+'
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T002 - clear"
argument_list|)
operator|<<
name|ClearAll
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
comment|// Clear all
comment|/* Testing Single Sequences        Shift + Ctrl + Qt::Key_Plus on  Ctrl + Qt::Key_Plus                Ctrl + Qt::Key_Plus on  Ctrl + Qt::Key_Plus                       Qt::Key_Plus on  Ctrl + Qt::Key_Plus     */
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T002b - slot1"
argument_list|)
operator|<<
name|SetupAccel
operator|<<
name|TriggerSlot1
operator|<<
name|QString
argument_list|(
literal|"Ctrl++"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
comment|//commented out because the behaviour changed, those tests should be updated
comment|//QTest::newRow("T002b:Shift+Ctrl++ [Ctrl++]")<< TestAccel<< NoWidget<< QString("")<< int(Qt::SHIFT + Qt::CTRL + Qt::Key_Plus)<< int('+')<< 0<< 0<< 0<< 0<< 0<< 0<< Slot1Triggered;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T002b:Ctrl++ [Ctrl++]"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|CTRL
operator|+
name|Qt
operator|::
name|Key_Plus
argument_list|)
operator|<<
name|int
argument_list|(
literal|'+'
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|Slot1Triggered
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T002b:+ [Ctrl++]"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Key_Plus
argument_list|)
operator|<<
name|int
argument_list|(
literal|'+'
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T002b - clear"
argument_list|)
operator|<<
name|ClearAll
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
comment|// Clear all
comment|/* Testing Single Sequences        Shift + Qt::Key_F1   on  Qt::Key_F1                Qt::Key_F1   on  Qt::Key_F1     */
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T003 - slot1"
argument_list|)
operator|<<
name|SetupAccel
operator|<<
name|TriggerSlot1
operator|<<
name|QString
argument_list|(
literal|"F1"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
comment|//commented out because the behaviour changed, those tests should be updated
comment|//QTest::newRow("T003:Shift+F1 - [F1]")<< TestAccel<< NoWidget<< QString("")<< int(Qt::SHIFT + Qt::Key_F1)<< 0<< 0<< 0<< 0<< 0<< 0<< 0<< Slot1Triggered;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T003:F1 - [F1]"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Key_F1
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|Slot1Triggered
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T003 - clear"
argument_list|)
operator|<<
name|ClearAll
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
comment|// Clear all
comment|/* Testing Single Sequences        Shift + Qt::Key_F1   on  Shift + Qt::Key_F1                Qt::Key_F1   on  Shift + Qt::Key_F1     */
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T004 - slot1"
argument_list|)
operator|<<
name|SetupAccel
operator|<<
name|TriggerSlot1
operator|<<
name|QString
argument_list|(
literal|"Shift+F1"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T004:Shift+F1 - [Shift+F1]"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|SHIFT
operator|+
name|Qt
operator|::
name|Key_F1
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|Slot1Triggered
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T004:F1 - [Shift+F1]"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Key_F1
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T004 - clear"
argument_list|)
operator|<<
name|ClearAll
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
comment|// Clear all
comment|//===========================================
comment|// [Shift + key] and [key] on shortcuts with
comment|// and without modifiers
comment|//===========================================
comment|/* Testing Single Sequences        Qt::Key_F1        Shift + Qt::Key_F1     */
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T007 - slot1"
argument_list|)
operator|<<
name|SetupAccel
operator|<<
name|TriggerSlot1
operator|<<
name|QString
argument_list|(
literal|"F1"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T007 - slot2"
argument_list|)
operator|<<
name|SetupAccel
operator|<<
name|TriggerSlot2
operator|<<
name|QString
argument_list|(
literal|"Shift+F1"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T007:F1"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Key_F1
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|Slot1Triggered
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T007:Shift + F1"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|SHIFT
operator|+
name|Qt
operator|::
name|Key_F1
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|Slot2Triggered
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T007 - clear"
argument_list|)
operator|<<
name|ClearAll
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
comment|// Clear all
comment|/* Testing Single Sequences        Qt::Key_M        Shift + Qt::Key_M        Ctrl  + Qt::Key_M        Alt   + Qt::Key_M     */
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T01 - slot1"
argument_list|)
operator|<<
name|SetupAccel
operator|<<
name|TriggerSlot1
operator|<<
name|QString
argument_list|(
literal|"M"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T02 - slot2"
argument_list|)
operator|<<
name|SetupAccel
operator|<<
name|TriggerSlot2
operator|<<
name|QString
argument_list|(
literal|"Shift+M"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T03 - slot1"
argument_list|)
operator|<<
name|SetupAccel
operator|<<
name|TriggerSlot1
operator|<<
name|QString
argument_list|(
literal|"Ctrl+M"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T04 - slot2"
argument_list|)
operator|<<
name|SetupAccel
operator|<<
name|TriggerSlot2
operator|<<
name|QString
argument_list|(
literal|"Alt+M"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T:Qt::Key_M"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Key_M
argument_list|)
operator|<<
name|int
argument_list|(
literal|'m'
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|Slot1Triggered
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T:Shift + Qt::Key_M"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|SHIFT
operator|+
name|Qt
operator|::
name|Key_M
argument_list|)
operator|<<
name|int
argument_list|(
literal|'M'
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|Slot2Triggered
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T:Ctrl + Qt::Key_M"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|CTRL
operator|+
name|Qt
operator|::
name|Key_M
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|Slot1Triggered
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T:Alt + Qt::Key_M"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|ALT
operator|+
name|Qt
operator|::
name|Key_M
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|Slot2Triggered
expr_stmt|;
comment|/* Testing Single Sequence Ambiguity        Qt::Key_M on shortcut2     */
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T05 - slot2"
argument_list|)
operator|<<
name|SetupAccel
operator|<<
name|TriggerSlot2
operator|<<
name|QString
argument_list|(
literal|"M"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T:Qt::Key_M on TriggerSlot2"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Key_M
argument_list|)
operator|<<
name|int
argument_list|(
literal|'m'
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|Ambiguous
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T06 - clear"
argument_list|)
operator|<<
name|ClearAll
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
comment|// Clear all
comment|/* Testing Single Specialkeys        Qt::Key_aring        Qt::Key_Aring        Qt::UNICODE_ACCEL + Qt::Key_K     */
comment|/* see comments above on the #ifdef'ery */
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T06 - slot1"
argument_list|)
operator|<<
name|SetupAccel
operator|<<
name|TriggerSlot1
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"\x0C5"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T07 - slot2"
argument_list|)
operator|<<
name|SetupAccel
operator|<<
name|TriggerSlot2
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"Shift+\x0C5"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T08 - slot2"
argument_list|)
operator|<<
name|SetupAccel
operator|<<
name|TriggerSlot1
operator|<<
name|QString
argument_list|(
literal|"K"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T:Qt::Key_aring"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Key_Aring
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|Slot1Triggered
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T:Qt::Key_Aring"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|SHIFT
operator|+
name|Qt
operator|::
name|Key_Aring
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|Slot2Triggered
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T:Qt::Key_aring - Text Form"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
literal|0
operator|<<
literal|0xC5
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|Slot1Triggered
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T:Qt::Key_Aring - Text Form"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|SHIFT
operator|+
literal|0
argument_list|)
operator|<<
literal|0xC5
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|Slot2Triggered
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T:Qt::UNICODE_ACCEL + Qt::Key_K"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|UNICODE_ACCEL
operator|+
name|Qt
operator|::
name|Key_K
argument_list|)
operator|<<
name|int
argument_list|(
literal|'k'
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|Slot1Triggered
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T09 - clear"
argument_list|)
operator|<<
name|ClearAll
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
comment|// Clear all
comment|/* Testing Multiple Sequences        Qt::Key_M        Qt::Key_I, Qt::Key_M        Shift+Qt::Key_I, Qt::Key_M     */
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T10 - slot1"
argument_list|)
operator|<<
name|SetupAccel
operator|<<
name|TriggerSlot1
operator|<<
name|QString
argument_list|(
literal|"M"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T11 - slot2"
argument_list|)
operator|<<
name|SetupAccel
operator|<<
name|TriggerSlot2
operator|<<
name|QString
argument_list|(
literal|"I, M"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T12 - slot1"
argument_list|)
operator|<<
name|SetupAccel
operator|<<
name|TriggerSlot1
operator|<<
name|QString
argument_list|(
literal|"Shift+I, M"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T:Qt::Key_M (2)"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Key_M
argument_list|)
operator|<<
name|int
argument_list|(
literal|'m'
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|Slot1Triggered
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T:Qt::Key_I, Qt::Key_M"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Key_I
argument_list|)
operator|<<
name|int
argument_list|(
literal|'i'
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Key_M
argument_list|)
operator|<<
name|int
argument_list|(
literal|'m'
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|Slot2Triggered
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T:Shift+Qt::Key_I, Qt::Key_M"
argument_list|)
operator|<<
name|TestAccel
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|SHIFT
operator|+
name|Qt
operator|::
name|Key_I
argument_list|)
operator|<<
name|int
argument_list|(
literal|'I'
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Key_M
argument_list|)
operator|<<
name|int
argument_list|(
literal|'m'
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|Slot1Triggered
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"T13 - clear"
argument_list|)
operator|<<
name|ClearAll
operator|<<
name|NoWidget
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|NoResult
expr_stmt|;
comment|// Clear all
block|}
end_function
begin_comment
comment|// ------------------------------------------------------------------
end_comment
begin_comment
comment|// Disabled Elements ------------------------------------------------
end_comment
begin_comment
comment|// ------------------------------------------------------------------
end_comment
begin_function
DECL|function|disabledItems
name|void
name|tst_QShortcut
operator|::
name|disabledItems
parameter_list|()
block|{
name|clearAllShortcuts
argument_list|()
expr_stmt|;
name|mainW
operator|->
name|activateWindow
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
comment|/* Testing Disabled Shortcuts        Qt::Key_M          on slot1        Shift + Qt::Key_M  on slot1        Qt::Key_M          on slot2 (disabled)        Shift + Qt::Key_M  on slot2 (disabled)     */
comment|// Setup two identical shortcuts on different pushbuttons
name|QPushButton
name|pb1
argument_list|(
name|mainW
argument_list|)
decl_stmt|;
name|QPushButton
name|pb2
argument_list|(
name|mainW
argument_list|)
decl_stmt|;
name|pb1
operator|.
name|setObjectName
argument_list|(
literal|"pushbutton-1"
argument_list|)
expr_stmt|;
name|pb2
operator|.
name|setObjectName
argument_list|(
literal|"pushbutton-2"
argument_list|)
expr_stmt|;
name|pb1
operator|.
name|show
argument_list|()
expr_stmt|;
comment|// Must be show for QShortcutMap::correctSubWindow to trigger
name|pb2
operator|.
name|show
argument_list|()
expr_stmt|;
name|QShortcut
modifier|*
name|cut1
init|=
name|setupShortcut
argument_list|(
operator|&
name|pb1
argument_list|,
literal|"shortcut1-pb1"
argument_list|,
name|TriggerSlot1
argument_list|,
literal|"M"
argument_list|)
decl_stmt|;
name|QShortcut
modifier|*
name|cut2
init|=
name|setupShortcut
argument_list|(
operator|&
name|pb1
argument_list|,
literal|"shortcut2-pb1"
argument_list|,
name|TriggerSlot1
argument_list|,
literal|"Shift+M"
argument_list|)
decl_stmt|;
name|QShortcut
modifier|*
name|cut3
init|=
name|setupShortcut
argument_list|(
operator|&
name|pb2
argument_list|,
literal|"shortcut3-pb2"
argument_list|,
name|TriggerSlot2
argument_list|,
literal|"M"
argument_list|)
decl_stmt|;
name|QShortcut
modifier|*
name|cut4
init|=
name|setupShortcut
argument_list|(
operator|&
name|pb2
argument_list|,
literal|"shortcut4-pb2"
argument_list|,
name|TriggerSlot2
argument_list|,
literal|"Shift+M"
argument_list|)
decl_stmt|;
name|cut3
operator|->
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|cut4
operator|->
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|currentResult
operator|=
name|NoResult
expr_stmt|;
name|sendKeyEvents
argument_list|(
name|Qt
operator|::
name|Key_M
argument_list|,
literal|'m'
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|currentResult
argument_list|,
name|Slot1Triggered
argument_list|)
expr_stmt|;
name|currentResult
operator|=
name|NoResult
expr_stmt|;
name|sendKeyEvents
argument_list|(
name|Qt
operator|::
name|SHIFT
operator|+
name|Qt
operator|::
name|Key_M
argument_list|,
literal|'M'
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|currentResult
argument_list|,
name|Slot1Triggered
argument_list|)
expr_stmt|;
name|cut2
operator|->
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|cut4
operator|->
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|/* Testing Disabled Shortcuts        Qt::Key_M          on slot1        Shift + Qt::Key_M  on slot1 (disabled)        Qt::Key_M          on slot2 (disabled)        Shift + Qt::Key_M  on slot2     */
name|currentResult
operator|=
name|NoResult
expr_stmt|;
name|sendKeyEvents
argument_list|(
name|Qt
operator|::
name|Key_M
argument_list|,
literal|'m'
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|currentResult
argument_list|,
name|Slot1Triggered
argument_list|)
expr_stmt|;
name|currentResult
operator|=
name|NoResult
expr_stmt|;
name|sendKeyEvents
argument_list|(
name|Qt
operator|::
name|SHIFT
operator|+
name|Qt
operator|::
name|Key_M
argument_list|,
literal|'M'
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|currentResult
argument_list|,
name|Slot2Triggered
argument_list|)
expr_stmt|;
comment|/* Testing Disabled Accel        Qt::Key_F5          on slot1        Shift + Qt::Key_F5  on slot2 (disabled)     */
name|clearAllShortcuts
argument_list|()
expr_stmt|;
name|cut1
operator|=
name|setupShortcut
argument_list|(
operator|&
name|pb1
argument_list|,
literal|"shortcut1-pb1"
argument_list|,
name|TriggerSlot1
argument_list|,
literal|"F5"
argument_list|)
expr_stmt|;
name|cut4
operator|=
name|setupShortcut
argument_list|(
operator|&
name|pb2
argument_list|,
literal|"shortcut4-pb2"
argument_list|,
name|TriggerSlot2
argument_list|,
literal|"Shift+F5"
argument_list|)
expr_stmt|;
name|cut1
operator|->
name|setKey
argument_list|(
name|QKeySequence
argument_list|(
literal|"F5"
argument_list|)
argument_list|)
expr_stmt|;
name|cut4
operator|->
name|setKey
argument_list|(
name|QKeySequence
argument_list|(
literal|"Shift+F5"
argument_list|)
argument_list|)
expr_stmt|;
name|cut1
operator|->
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|cut4
operator|->
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|currentResult
operator|=
name|NoResult
expr_stmt|;
name|sendKeyEvents
argument_list|(
name|Qt
operator|::
name|Key_F5
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|currentResult
argument_list|,
name|Slot1Triggered
argument_list|)
expr_stmt|;
name|currentResult
operator|=
name|NoResult
expr_stmt|;
name|sendKeyEvents
argument_list|(
name|Qt
operator|::
name|SHIFT
operator|+
name|Qt
operator|::
name|Key_F5
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|currentResult
argument_list|,
name|NoResult
argument_list|)
expr_stmt|;
if|#
directive|if
literal|0
block|qFatal("Not testing statusbar text feedback yet, since not implemented");
comment|/* Testing Disabled Accel, and the corresponding statusbar feedback        Ctrl + Qt::Key_K, Ctrl + Qt::Key_L on slot1        Ctrl + Qt::Key_K, Ctrl + Qt::Key_M on slot2 (disabled)     */
block|cut1->setKey(QKeySequence("Ctrl+K, Ctrl+L"));     cut4->setKey(QKeySequence("Ctrl+K, Ctrl+M"));      cut1->setEnabled(true);     cut4->setEnabled(false);      currentResult = NoResult;     sendKeyEvents( Qt::CTRL+Qt::Key_K, 0 );     sendKeyEvents( Qt::CTRL+Qt::Key_Q, 0 );     QCOMPARE( currentResult, NoResult );     if (over_330)         QCOMPARE( sbText, QString("Ctrl+K, Ctrl+Q not defined") );      currentResult = NoResult;     sendKeyEvents( Qt::CTRL+Qt::Key_K, 0 );     sendKeyEvents( Qt::CTRL+Qt::Key_M, 0 );     QCOMPARE( currentResult, NoResult );     if (over_330)         QCOMPARE( sbText, QString::null );      currentResult = NoResult;     sendKeyEvents( Qt::CTRL+Qt::Key_K, 0 );     sendKeyEvents( Qt::CTRL+Qt::Key_L, 0 );     QCOMPARE( currentResult, Slot1Triggered );     if (over_330)         QCOMPARE( sbText, QString::null );
endif|#
directive|endif
name|clearAllShortcuts
argument_list|()
expr_stmt|;
name|cut1
operator|=
literal|0
expr_stmt|;
name|cut4
operator|=
literal|0
expr_stmt|;
block|}
end_function
begin_comment
comment|// ------------------------------------------------------------------
end_comment
begin_comment
comment|// Ambiguous Elements -----------------------------------------------
end_comment
begin_comment
comment|// ------------------------------------------------------------------
end_comment
begin_function
DECL|function|ambiguousRotation
name|void
name|tst_QShortcut
operator|::
name|ambiguousRotation
parameter_list|()
block|{
name|clearAllShortcuts
argument_list|()
expr_stmt|;
comment|/* Testing Shortcut rotation scheme        Ctrl + Qt::Key_A   on slot1 (disabled)        Ctrl + Qt::Key_A   on slot2 (disabled)        Ctrl + Qt::Key_A   on slot3        Ctrl + Qt::Key_A   on slot4        Ctrl + Qt::Key_A   on slot5 (disabled)        Ctrl + Qt::Key_A   on slot6        Ctrl + Qt::Key_A   on slot7 (disabled)     */
name|QShortcut
modifier|*
name|cut1
init|=
name|setupShortcut
argument_list|(
name|TriggerSlot1
argument_list|,
literal|"Ctrl+A"
argument_list|)
decl_stmt|;
name|QShortcut
modifier|*
name|cut2
init|=
name|setupShortcut
argument_list|(
name|TriggerSlot2
argument_list|,
literal|"Ctrl+A"
argument_list|)
decl_stmt|;
name|QShortcut
modifier|*
name|cut3
init|=
name|setupShortcut
argument_list|(
name|TriggerSlot3
argument_list|,
literal|"Ctrl+A"
argument_list|)
decl_stmt|;
name|QShortcut
modifier|*
name|cut4
init|=
name|setupShortcut
argument_list|(
name|TriggerSlot4
argument_list|,
literal|"Ctrl+A"
argument_list|)
decl_stmt|;
name|QShortcut
modifier|*
name|cut5
init|=
name|setupShortcut
argument_list|(
name|TriggerSlot5
argument_list|,
literal|"Ctrl+A"
argument_list|)
decl_stmt|;
name|QShortcut
modifier|*
name|cut6
init|=
name|setupShortcut
argument_list|(
name|TriggerSlot6
argument_list|,
literal|"Ctrl+A"
argument_list|)
decl_stmt|;
name|QShortcut
modifier|*
name|cut7
init|=
name|setupShortcut
argument_list|(
name|TriggerSlot7
argument_list|,
literal|"Ctrl+A"
argument_list|)
decl_stmt|;
name|cut1
operator|->
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|cut2
operator|->
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|cut5
operator|->
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|cut7
operator|->
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
comment|// Test proper rotation
comment|//   Start on first
comment|//   Go to last
comment|//   Go back to first
comment|//   Continue...
name|currentResult
operator|=
name|NoResult
expr_stmt|;
name|ambigResult
operator|=
name|NoResult
expr_stmt|;
name|sendKeyEvents
argument_list|(
name|Qt
operator|::
name|CTRL
operator|+
name|Qt
operator|::
name|Key_A
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|currentResult
argument_list|,
name|Ambiguous
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ambigResult
argument_list|,
name|Slot3Triggered
argument_list|)
expr_stmt|;
name|currentResult
operator|=
name|NoResult
expr_stmt|;
name|ambigResult
operator|=
name|NoResult
expr_stmt|;
name|sendKeyEvents
argument_list|(
name|Qt
operator|::
name|CTRL
operator|+
name|Qt
operator|::
name|Key_A
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|currentResult
argument_list|,
name|Ambiguous
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ambigResult
argument_list|,
name|Slot4Triggered
argument_list|)
expr_stmt|;
name|currentResult
operator|=
name|NoResult
expr_stmt|;
name|ambigResult
operator|=
name|NoResult
expr_stmt|;
name|sendKeyEvents
argument_list|(
name|Qt
operator|::
name|CTRL
operator|+
name|Qt
operator|::
name|Key_A
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|currentResult
argument_list|,
name|Ambiguous
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ambigResult
argument_list|,
name|Slot6Triggered
argument_list|)
expr_stmt|;
name|currentResult
operator|=
name|NoResult
expr_stmt|;
name|ambigResult
operator|=
name|NoResult
expr_stmt|;
name|sendKeyEvents
argument_list|(
name|Qt
operator|::
name|CTRL
operator|+
name|Qt
operator|::
name|Key_A
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|currentResult
argument_list|,
name|Ambiguous
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ambigResult
argument_list|,
name|Slot3Triggered
argument_list|)
expr_stmt|;
name|currentResult
operator|=
name|NoResult
expr_stmt|;
name|ambigResult
operator|=
name|NoResult
expr_stmt|;
name|sendKeyEvents
argument_list|(
name|Qt
operator|::
name|CTRL
operator|+
name|Qt
operator|::
name|Key_A
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|currentResult
argument_list|,
name|Ambiguous
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ambigResult
argument_list|,
name|Slot4Triggered
argument_list|)
expr_stmt|;
name|currentResult
operator|=
name|NoResult
expr_stmt|;
name|ambigResult
operator|=
name|NoResult
expr_stmt|;
name|sendKeyEvents
argument_list|(
name|Qt
operator|::
name|CTRL
operator|+
name|Qt
operator|::
name|Key_A
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|currentResult
argument_list|,
name|Ambiguous
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ambigResult
argument_list|,
name|Slot6Triggered
argument_list|)
expr_stmt|;
comment|/* Testing Shortcut rotation scheme        Ctrl + Qt::Key_A   on slot1        Ctrl + Qt::Key_A   on slot2        Ctrl + Qt::Key_A   on slot3 (disabled)        Ctrl + Qt::Key_A   on slot4 (disabled)        Ctrl + Qt::Key_A   on slot5        Ctrl + Qt::Key_A   on slot6 (disabled)        Ctrl + Qt::Key_A   on slot7     */
name|cut1
operator|->
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|cut2
operator|->
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|cut5
operator|->
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|cut7
operator|->
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|cut3
operator|->
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|cut4
operator|->
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|cut6
operator|->
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|currentResult
operator|=
name|NoResult
expr_stmt|;
name|ambigResult
operator|=
name|NoResult
expr_stmt|;
name|sendKeyEvents
argument_list|(
name|Qt
operator|::
name|CTRL
operator|+
name|Qt
operator|::
name|Key_A
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|currentResult
argument_list|,
name|Ambiguous
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ambigResult
argument_list|,
name|Slot1Triggered
argument_list|)
expr_stmt|;
name|currentResult
operator|=
name|NoResult
expr_stmt|;
name|ambigResult
operator|=
name|NoResult
expr_stmt|;
name|sendKeyEvents
argument_list|(
name|Qt
operator|::
name|CTRL
operator|+
name|Qt
operator|::
name|Key_A
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|currentResult
argument_list|,
name|Ambiguous
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ambigResult
argument_list|,
name|Slot2Triggered
argument_list|)
expr_stmt|;
name|currentResult
operator|=
name|NoResult
expr_stmt|;
name|ambigResult
operator|=
name|NoResult
expr_stmt|;
name|sendKeyEvents
argument_list|(
name|Qt
operator|::
name|CTRL
operator|+
name|Qt
operator|::
name|Key_A
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|currentResult
argument_list|,
name|Ambiguous
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ambigResult
argument_list|,
name|Slot5Triggered
argument_list|)
expr_stmt|;
name|currentResult
operator|=
name|NoResult
expr_stmt|;
name|ambigResult
operator|=
name|NoResult
expr_stmt|;
name|sendKeyEvents
argument_list|(
name|Qt
operator|::
name|CTRL
operator|+
name|Qt
operator|::
name|Key_A
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|currentResult
argument_list|,
name|Ambiguous
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ambigResult
argument_list|,
name|Slot7Triggered
argument_list|)
expr_stmt|;
name|currentResult
operator|=
name|NoResult
expr_stmt|;
name|ambigResult
operator|=
name|NoResult
expr_stmt|;
name|sendKeyEvents
argument_list|(
name|Qt
operator|::
name|CTRL
operator|+
name|Qt
operator|::
name|Key_A
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|currentResult
argument_list|,
name|Ambiguous
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ambigResult
argument_list|,
name|Slot1Triggered
argument_list|)
expr_stmt|;
name|currentResult
operator|=
name|NoResult
expr_stmt|;
name|ambigResult
operator|=
name|NoResult
expr_stmt|;
name|sendKeyEvents
argument_list|(
name|Qt
operator|::
name|CTRL
operator|+
name|Qt
operator|::
name|Key_A
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|currentResult
argument_list|,
name|Ambiguous
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ambigResult
argument_list|,
name|Slot2Triggered
argument_list|)
expr_stmt|;
name|currentResult
operator|=
name|NoResult
expr_stmt|;
name|ambigResult
operator|=
name|NoResult
expr_stmt|;
name|sendKeyEvents
argument_list|(
name|Qt
operator|::
name|CTRL
operator|+
name|Qt
operator|::
name|Key_A
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|currentResult
argument_list|,
name|Ambiguous
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ambigResult
argument_list|,
name|Slot5Triggered
argument_list|)
expr_stmt|;
name|currentResult
operator|=
name|NoResult
expr_stmt|;
name|ambigResult
operator|=
name|NoResult
expr_stmt|;
name|sendKeyEvents
argument_list|(
name|Qt
operator|::
name|CTRL
operator|+
name|Qt
operator|::
name|Key_A
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|currentResult
argument_list|,
name|Ambiguous
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ambigResult
argument_list|,
name|Slot7Triggered
argument_list|)
expr_stmt|;
name|clearAllShortcuts
argument_list|()
expr_stmt|;
name|cut1
operator|=
literal|0
expr_stmt|;
name|cut2
operator|=
literal|0
expr_stmt|;
name|cut3
operator|=
literal|0
expr_stmt|;
name|cut4
operator|=
literal|0
expr_stmt|;
name|cut5
operator|=
literal|0
expr_stmt|;
name|cut6
operator|=
literal|0
expr_stmt|;
name|cut7
operator|=
literal|0
expr_stmt|;
block|}
end_function
begin_function
DECL|function|ambiguousItems
name|void
name|tst_QShortcut
operator|::
name|ambiguousItems
parameter_list|()
block|{
name|clearAllShortcuts
argument_list|()
expr_stmt|;
comment|/* Testing Ambiguous Shortcuts        Qt::Key_M  on Pushbutton 1        Qt::Key_M  on Pushbutton 2     */
comment|// Setup two identical shortcuts on different pushbuttons
name|QPushButton
name|pb1
argument_list|(
name|mainW
argument_list|)
decl_stmt|;
name|QPushButton
name|pb2
argument_list|(
name|mainW
argument_list|)
decl_stmt|;
name|pb1
operator|.
name|setObjectName
argument_list|(
literal|"pushbutton-1"
argument_list|)
expr_stmt|;
name|pb2
operator|.
name|setObjectName
argument_list|(
literal|"pushbutton-2"
argument_list|)
expr_stmt|;
name|pb1
operator|.
name|show
argument_list|()
expr_stmt|;
comment|// Must be show for QShortcutMap::correctSubWindow to trigger
name|pb2
operator|.
name|show
argument_list|()
expr_stmt|;
name|setupShortcut
argument_list|(
operator|&
name|pb1
argument_list|,
literal|"shortcut1-pb1"
argument_list|,
name|TriggerSlot1
argument_list|,
literal|"M"
argument_list|)
expr_stmt|;
name|setupShortcut
argument_list|(
operator|&
name|pb1
argument_list|,
literal|"shortcut2-pb2"
argument_list|,
name|TriggerSlot2
argument_list|,
literal|"M"
argument_list|)
expr_stmt|;
name|currentResult
operator|=
name|NoResult
expr_stmt|;
name|sendKeyEvents
argument_list|(
name|Qt
operator|::
name|Key_M
argument_list|,
literal|'m'
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|currentResult
argument_list|,
name|Ambiguous
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ambigResult
argument_list|,
name|Slot1Triggered
argument_list|)
expr_stmt|;
name|currentResult
operator|=
name|NoResult
expr_stmt|;
name|sendKeyEvents
argument_list|(
name|Qt
operator|::
name|Key_M
argument_list|,
literal|'m'
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|currentResult
argument_list|,
name|Ambiguous
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ambigResult
argument_list|,
name|Slot2Triggered
argument_list|)
expr_stmt|;
name|currentResult
operator|=
name|NoResult
expr_stmt|;
name|sendKeyEvents
argument_list|(
name|Qt
operator|::
name|Key_M
argument_list|,
literal|'m'
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|currentResult
argument_list|,
name|Ambiguous
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ambigResult
argument_list|,
name|Slot1Triggered
argument_list|)
expr_stmt|;
name|clearAllShortcuts
argument_list|()
expr_stmt|;
block|}
end_function
begin_comment
comment|// ------------------------------------------------------------------
end_comment
begin_comment
comment|// Unicode and non-unicode Elements ---------------------------------
end_comment
begin_comment
comment|// ------------------------------------------------------------------
end_comment
begin_function
DECL|function|unicodeCompare
name|void
name|tst_QShortcut
operator|::
name|unicodeCompare
parameter_list|()
block|{
name|clearAllShortcuts
argument_list|()
expr_stmt|;
comment|/* Testing Unicode/non-Unicode Shortcuts        Qt::Key_M  on Pushbutton 1        Qt::Key_M  on Pushbutton 2     */
name|QPushButton
name|pb1
argument_list|(
name|mainW
argument_list|)
decl_stmt|;
name|QPushButton
name|pb2
argument_list|(
name|mainW
argument_list|)
decl_stmt|;
name|pb1
operator|.
name|setObjectName
argument_list|(
literal|"pushbutton-1"
argument_list|)
expr_stmt|;
name|pb2
operator|.
name|setObjectName
argument_list|(
literal|"pushbutton-2"
argument_list|)
expr_stmt|;
name|pb1
operator|.
name|show
argument_list|()
expr_stmt|;
comment|// Must be show for QShortcutMap::correctSubWindow to trigger
name|pb2
operator|.
name|show
argument_list|()
expr_stmt|;
name|QKeySequence
name|ks1
argument_list|(
literal|"Ctrl+M"
argument_list|)
decl_stmt|;
comment|// Unicode
name|QKeySequence
name|ks2
argument_list|(
name|Qt
operator|::
name|CTRL
operator|+
name|Qt
operator|::
name|Key_M
argument_list|)
decl_stmt|;
comment|// non-Unicode
name|setupShortcut
argument_list|(
operator|&
name|pb1
argument_list|,
literal|"shortcut1-pb1"
argument_list|,
name|TriggerSlot1
argument_list|,
name|ks1
argument_list|)
expr_stmt|;
name|setupShortcut
argument_list|(
operator|&
name|pb1
argument_list|,
literal|"shortcut2-pb2"
argument_list|,
name|TriggerSlot2
argument_list|,
name|ks2
argument_list|)
expr_stmt|;
name|currentResult
operator|=
name|NoResult
expr_stmt|;
name|sendKeyEvents
argument_list|(
name|Qt
operator|::
name|CTRL
operator|+
name|Qt
operator|::
name|Key_M
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|currentResult
argument_list|,
name|Ambiguous
argument_list|)
expr_stmt|;
comment|// They _are_ ambiguous, so the QKeySequence operator==
comment|// should indicate the same
name|QVERIFY
argument_list|(
name|ks1
operator|==
name|ks2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|ks1
operator|!=
name|ks2
operator|)
argument_list|)
expr_stmt|;
name|clearAllShortcuts
argument_list|()
expr_stmt|;
block|}
end_function
begin_comment
comment|// ------------------------------------------------------------------
end_comment
begin_comment
comment|// Keypress consumption verification --------------------------------
end_comment
begin_comment
comment|// ------------------------------------------------------------------
end_comment
begin_function
DECL|function|keypressConsumption
name|void
name|tst_QShortcut
operator|::
name|keypressConsumption
parameter_list|()
block|{
name|clearAllShortcuts
argument_list|()
expr_stmt|;
name|edit
operator|->
name|clear
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|->
name|toPlainText
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QShortcut
modifier|*
name|cut1
init|=
name|setupShortcut
argument_list|(
name|edit
argument_list|,
literal|"shortcut1-line"
argument_list|,
name|TriggerSlot1
argument_list|,
literal|"Ctrl+I, A"
argument_list|)
decl_stmt|;
name|QShortcut
modifier|*
name|cut2
init|=
name|setupShortcut
argument_list|(
name|edit
argument_list|,
literal|"shortcut1-line"
argument_list|,
name|TriggerSlot2
argument_list|,
literal|"Ctrl+I, B"
argument_list|)
decl_stmt|;
name|currentResult
operator|=
name|NoResult
expr_stmt|;
name|ambigResult
operator|=
name|NoResult
expr_stmt|;
name|sendKeyEvents
argument_list|(
name|edit
argument_list|,
name|Qt
operator|::
name|CTRL
operator|+
name|Qt
operator|::
name|Key_I
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// Send key to edit
name|QCOMPARE
argument_list|(
name|currentResult
argument_list|,
name|NoResult
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ambigResult
argument_list|,
name|NoResult
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|->
name|toPlainText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
comment|// Make sure next keypress is eaten (failing multiple keysequence)
name|sendKeyEvents
argument_list|(
name|edit
argument_list|,
name|Qt
operator|::
name|Key_C
argument_list|,
literal|'c'
argument_list|)
expr_stmt|;
comment|// Send key to edit
name|QCOMPARE
argument_list|(
name|currentResult
argument_list|,
name|NoResult
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ambigResult
argument_list|,
name|NoResult
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|->
name|toPlainText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
comment|// Next keypress should be normal
name|sendKeyEvents
argument_list|(
name|edit
argument_list|,
name|Qt
operator|::
name|Key_C
argument_list|,
literal|'c'
argument_list|)
expr_stmt|;
comment|// Send key to edit
name|QCOMPARE
argument_list|(
name|currentResult
argument_list|,
name|NoResult
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ambigResult
argument_list|,
name|NoResult
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|->
name|toPlainText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"c"
argument_list|)
argument_list|)
expr_stmt|;
name|currentResult
operator|=
name|NoResult
expr_stmt|;
name|ambigResult
operator|=
name|NoResult
expr_stmt|;
name|edit
operator|->
name|clear
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|->
name|toPlainText
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|cut1
operator|->
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|cut2
operator|->
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
comment|// Make sure keypresses is passed on, since all multiple keysequences
comment|// with Ctrl+I are disabled
name|sendKeyEvents
argument_list|(
name|edit
argument_list|,
name|Qt
operator|::
name|CTRL
operator|+
name|Qt
operator|::
name|Key_I
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// Send key to edit
name|QCOMPARE
argument_list|(
name|currentResult
argument_list|,
name|NoResult
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ambigResult
argument_list|,
name|NoResult
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|edit
operator|->
name|toPlainText
argument_list|()
operator|.
name|endsWith
argument_list|(
literal|"<Ctrl+I>"
argument_list|)
argument_list|)
expr_stmt|;
name|sendKeyEvents
argument_list|(
name|edit
argument_list|,
name|Qt
operator|::
name|Key_A
argument_list|,
literal|'a'
argument_list|)
expr_stmt|;
comment|// Send key to edit
name|QCOMPARE
argument_list|(
name|currentResult
argument_list|,
name|NoResult
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ambigResult
argument_list|,
name|NoResult
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|edit
operator|->
name|toPlainText
argument_list|()
operator|.
name|endsWith
argument_list|(
literal|"<Ctrl+I>a"
argument_list|)
argument_list|)
expr_stmt|;
name|clearAllShortcuts
argument_list|()
expr_stmt|;
name|edit
operator|->
name|clear
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|->
name|toPlainText
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|setupShortcut
argument_list|(
name|edit
argument_list|,
literal|"first"
argument_list|,
name|SendKeyEvent
argument_list|,
literal|"Ctrl+A"
argument_list|)
expr_stmt|;
comment|// Verify reentrancy when a non-shortcut is triggered as part
comment|// of shortcut processing.
name|currentResult
operator|=
name|NoResult
expr_stmt|;
name|ambigResult
operator|=
name|NoResult
expr_stmt|;
name|sendKeyEvents
argument_list|(
name|edit
argument_list|,
name|Qt
operator|::
name|CTRL
operator|+
name|Qt
operator|::
name|Key_A
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|currentResult
argument_list|,
name|SentKeyEvent
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ambigResult
argument_list|,
name|NoResult
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|->
name|toPlainText
argument_list|()
argument_list|,
name|QString
argument_list|(
name|QString
argument_list|(
literal|"<Ctrl+B>"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|// ------------------------------------------------------------------
end_comment
begin_comment
comment|// Context Validation -----------------------------------------------
end_comment
begin_comment
comment|// ------------------------------------------------------------------
end_comment
begin_function
DECL|function|context
name|void
name|tst_QShortcut
operator|::
name|context
parameter_list|()
block|{
name|clearAllShortcuts
argument_list|()
expr_stmt|;
name|QWidget
name|myBox
decl_stmt|;
name|TestEdit
modifier|*
name|other1
init|=
operator|new
name|TestEdit
argument_list|(
operator|&
name|myBox
argument_list|,
literal|"test_edit_other1"
argument_list|)
decl_stmt|;
name|TestEdit
modifier|*
name|other2
init|=
operator|new
name|TestEdit
argument_list|(
operator|&
name|myBox
argument_list|,
literal|"test_edit_other2"
argument_list|)
decl_stmt|;
name|QHBoxLayout
modifier|*
name|layout
init|=
operator|new
name|QHBoxLayout
argument_list|(
operator|&
name|myBox
argument_list|)
decl_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|other1
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|other2
argument_list|)
expr_stmt|;
name|myBox
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|myBox
argument_list|)
argument_list|)
expr_stmt|;
name|setupShortcut
argument_list|(
name|other1
argument_list|,
literal|"ActiveWindow"
argument_list|,
name|TriggerSlot1
argument_list|,
name|QKeySequence
argument_list|(
literal|"Alt+1"
argument_list|)
argument_list|,
name|Qt
operator|::
name|WindowShortcut
argument_list|)
expr_stmt|;
name|setupShortcut
argument_list|(
name|other2
argument_list|,
literal|"Focus"
argument_list|,
name|TriggerSlot2
argument_list|,
name|QKeySequence
argument_list|(
literal|"Alt+2"
argument_list|)
argument_list|,
name|Qt
operator|::
name|WidgetShortcut
argument_list|)
expr_stmt|;
name|setupShortcut
argument_list|(
name|edit
argument_list|,
literal|"Application"
argument_list|,
name|TriggerSlot3
argument_list|,
name|QKeySequence
argument_list|(
literal|"Alt+3"
argument_list|)
argument_list|,
name|Qt
operator|::
name|ApplicationShortcut
argument_list|)
expr_stmt|;
name|currentResult
operator|=
name|NoResult
expr_stmt|;
name|ambigResult
operator|=
name|NoResult
expr_stmt|;
name|edit
operator|->
name|clear
argument_list|()
expr_stmt|;
name|other1
operator|->
name|clear
argument_list|()
expr_stmt|;
name|other2
operator|->
name|clear
argument_list|()
expr_stmt|;
comment|// edit doesn't have focus, so ActiveWindow context should work
comment|// ..but Focus context shouldn't..
comment|// Changing focus to edit should make focus context work
comment|// Application context should always work
comment|// Focus on 'other1' edit, so Active Window context should trigger
name|other1
operator|->
name|activateWindow
argument_list|()
expr_stmt|;
comment|//<---
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
name|other1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qApp
operator|->
name|activeWindow
argument_list|()
argument_list|,
name|other1
operator|->
name|window
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qApp
operator|->
name|focusWidget
argument_list|()
argument_list|,
operator|(
name|QWidget
operator|*
operator|)
name|other1
argument_list|)
expr_stmt|;
name|currentResult
operator|=
name|NoResult
expr_stmt|;
name|ambigResult
operator|=
name|NoResult
expr_stmt|;
name|edit
operator|->
name|clear
argument_list|()
expr_stmt|;
name|other1
operator|->
name|clear
argument_list|()
expr_stmt|;
name|other2
operator|->
name|clear
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qApp
operator|->
name|focusWidget
argument_list|()
argument_list|,
operator|(
name|QWidget
operator|*
operator|)
name|other1
argument_list|)
expr_stmt|;
name|sendKeyEvents
argument_list|(
name|other1
argument_list|,
name|Qt
operator|::
name|ALT
operator|+
name|Qt
operator|::
name|Key_1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|currentResult
argument_list|,
name|Slot1Triggered
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ambigResult
argument_list|,
name|NoResult
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|->
name|toPlainText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|other1
operator|->
name|toPlainText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|other2
operator|->
name|toPlainText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
comment|// ..but not Focus context on 'other2'..
name|currentResult
operator|=
name|NoResult
expr_stmt|;
name|ambigResult
operator|=
name|NoResult
expr_stmt|;
name|edit
operator|->
name|clear
argument_list|()
expr_stmt|;
name|other1
operator|->
name|clear
argument_list|()
expr_stmt|;
name|other2
operator|->
name|clear
argument_list|()
expr_stmt|;
name|sendKeyEvents
argument_list|(
name|other1
argument_list|,
name|Qt
operator|::
name|ALT
operator|+
name|Qt
operator|::
name|Key_2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|currentResult
argument_list|,
name|NoResult
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ambigResult
argument_list|,
name|NoResult
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|->
name|toPlainText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|other1
operator|->
name|toPlainText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"<Alt+2>"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|other2
operator|->
name|toPlainText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
comment|// ..however, application global context on 'edit' should..
name|currentResult
operator|=
name|NoResult
expr_stmt|;
name|ambigResult
operator|=
name|NoResult
expr_stmt|;
name|edit
operator|->
name|clear
argument_list|()
expr_stmt|;
name|other1
operator|->
name|clear
argument_list|()
expr_stmt|;
name|other2
operator|->
name|clear
argument_list|()
expr_stmt|;
name|sendKeyEvents
argument_list|(
name|other1
argument_list|,
name|Qt
operator|::
name|ALT
operator|+
name|Qt
operator|::
name|Key_3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|currentResult
argument_list|,
name|Slot3Triggered
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ambigResult
argument_list|,
name|NoResult
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|->
name|toPlainText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|other1
operator|->
name|toPlainText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|other2
operator|->
name|toPlainText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
comment|// Changing focus to 'other2' should make the Focus context there work
name|other2
operator|->
name|activateWindow
argument_list|()
expr_stmt|;
name|other2
operator|->
name|setFocus
argument_list|()
expr_stmt|;
comment|// ###
name|QTRY_COMPARE
argument_list|(
name|qApp
operator|->
name|activeWindow
argument_list|()
argument_list|,
name|other2
operator|->
name|window
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qApp
operator|->
name|focusWidget
argument_list|()
argument_list|,
operator|(
name|QWidget
operator|*
operator|)
name|other2
argument_list|)
expr_stmt|;
name|currentResult
operator|=
name|NoResult
expr_stmt|;
name|ambigResult
operator|=
name|NoResult
expr_stmt|;
name|edit
operator|->
name|clear
argument_list|()
expr_stmt|;
name|other1
operator|->
name|clear
argument_list|()
expr_stmt|;
name|other2
operator|->
name|clear
argument_list|()
expr_stmt|;
name|sendKeyEvents
argument_list|(
name|other2
argument_list|,
name|Qt
operator|::
name|ALT
operator|+
name|Qt
operator|::
name|Key_2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|currentResult
argument_list|,
name|Slot2Triggered
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ambigResult
argument_list|,
name|NoResult
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|->
name|toPlainText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|other1
operator|->
name|toPlainText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|other2
operator|->
name|toPlainText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|clearAllShortcuts
argument_list|()
expr_stmt|;
block|}
end_function
begin_comment
comment|// QTBUG-38986, do not generate duplicated QEvent::ShortcutOverride in event processing.
end_comment
begin_class
DECL|class|OverrideCountingWidget
class|class
name|OverrideCountingWidget
super|:
specifier|public
name|QWidget
block|{
public|public:
DECL|function|OverrideCountingWidget
name|OverrideCountingWidget
parameter_list|(
name|QWidget
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QWidget
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|overrideCount
argument_list|(
literal|0
argument_list|)
block|{}
DECL|member|overrideCount
name|int
name|overrideCount
decl_stmt|;
name|bool
name|event
parameter_list|(
name|QEvent
modifier|*
name|e
parameter_list|)
name|Q_DECL_OVERRIDE
block|{
if|if
condition|(
name|e
operator|->
name|type
argument_list|()
operator|==
name|QEvent
operator|::
name|ShortcutOverride
condition|)
name|overrideCount
operator|++
expr_stmt|;
return|return
name|QWidget
operator|::
name|event
argument_list|(
name|e
argument_list|)
return|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|duplicatedShortcutOverride
name|void
name|tst_QShortcut
operator|::
name|duplicatedShortcutOverride
parameter_list|()
block|{
name|OverrideCountingWidget
name|w
decl_stmt|;
name|w
operator|.
name|setWindowTitle
argument_list|(
name|Q_FUNC_INFO
argument_list|)
expr_stmt|;
name|w
operator|.
name|resize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|w
operator|.
name|move
argument_list|(
name|QGuiApplication
operator|::
name|primaryScreen
argument_list|()
operator|->
name|availableGeometry
argument_list|()
operator|.
name|center
argument_list|()
operator|-
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|w
operator|.
name|show
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|w
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowActive
argument_list|(
operator|&
name|w
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyPress
argument_list|(
name|w
operator|.
name|windowHandle
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_A
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|overrideCount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|// ------------------------------------------------------------------
end_comment
begin_comment
comment|// Element Testing helper functions ---------------------------------
end_comment
begin_comment
comment|// ------------------------------------------------------------------
end_comment
begin_function
DECL|function|clearAllShortcuts
name|void
name|tst_QShortcut
operator|::
name|clearAllShortcuts
parameter_list|()
block|{
name|QList
argument_list|<
name|QShortcut
modifier|*
argument_list|>
name|shortcutsCpy
init|=
name|shortcuts
decl_stmt|;
name|qDeleteAll
argument_list|(
name|shortcutsCpy
argument_list|)
expr_stmt|;
name|shortcuts
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setupShortcut
name|QShortcut
modifier|*
name|tst_QShortcut
operator|::
name|setupShortcut
parameter_list|(
name|int
name|testWidget
parameter_list|,
specifier|const
name|QKeySequence
modifier|&
name|ks
parameter_list|)
block|{
return|return
name|setupShortcut
argument_list|(
name|mainW
argument_list|,
name|QTest
operator|::
name|currentDataTag
argument_list|()
condition|?
name|QTest
operator|::
name|currentDataTag
argument_list|()
else|:
literal|""
argument_list|,
name|testWidget
argument_list|,
name|ks
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|setupShortcut
name|QShortcut
modifier|*
name|tst_QShortcut
operator|::
name|setupShortcut
parameter_list|(
name|int
name|testWidget
parameter_list|,
specifier|const
name|QString
modifier|&
name|txt
parameter_list|,
name|int
name|k1
parameter_list|,
name|int
name|k2
parameter_list|,
name|int
name|k3
parameter_list|,
name|int
name|k4
parameter_list|)
block|{
return|return
name|setupShortcut
argument_list|(
name|mainW
argument_list|,
name|QTest
operator|::
name|currentDataTag
argument_list|()
condition|?
name|QTest
operator|::
name|currentDataTag
argument_list|()
else|:
literal|""
argument_list|,
name|testWidget
argument_list|,
operator|(
name|txt
operator|.
name|isEmpty
argument_list|()
condition|?
name|QKeySequence
argument_list|(
name|k1
argument_list|,
name|k2
argument_list|,
name|k3
argument_list|,
name|k4
argument_list|)
else|:
name|QKeySequence
argument_list|(
name|txt
argument_list|)
operator|)
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|setupShortcut
name|QShortcut
modifier|*
name|tst_QShortcut
operator|::
name|setupShortcut
parameter_list|(
name|QWidget
modifier|*
name|parent
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|,
name|int
name|testWidget
parameter_list|,
specifier|const
name|QString
modifier|&
name|txt
parameter_list|,
name|int
name|k1
parameter_list|,
name|int
name|k2
parameter_list|,
name|int
name|k3
parameter_list|,
name|int
name|k4
parameter_list|)
block|{
return|return
name|setupShortcut
argument_list|(
name|parent
argument_list|,
name|name
argument_list|,
name|testWidget
argument_list|,
operator|(
name|txt
operator|.
name|isEmpty
argument_list|()
condition|?
name|QKeySequence
argument_list|(
name|k1
argument_list|,
name|k2
argument_list|,
name|k3
argument_list|,
name|k4
argument_list|)
else|:
name|QKeySequence
argument_list|(
name|txt
argument_list|)
operator|)
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|setupShortcut
name|QShortcut
modifier|*
name|tst_QShortcut
operator|::
name|setupShortcut
parameter_list|(
name|QWidget
modifier|*
name|parent
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|,
name|int
name|testWidget
parameter_list|,
specifier|const
name|QKeySequence
modifier|&
name|ks
parameter_list|,
name|Qt
operator|::
name|ShortcutContext
name|context
parameter_list|)
block|{
comment|// Set up shortcut for next test
name|QShortcut
modifier|*
name|cut
init|=
operator|new
name|QShortcut
argument_list|(
name|QKeySequence
argument_list|()
argument_list|,
name|parent
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|context
argument_list|)
decl_stmt|;
name|cut
operator|->
name|setObjectName
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|cut
operator|->
name|setKey
argument_list|(
name|ks
argument_list|)
expr_stmt|;
specifier|const
name|char
modifier|*
name|normal
init|=
literal|0
decl_stmt|;
specifier|const
name|char
modifier|*
name|ambig
init|=
literal|0
decl_stmt|;
switch|switch
condition|(
name|testWidget
condition|)
block|{
case|case
name|TriggerSlot1
case|:
name|normal
operator|=
name|SLOT
argument_list|(
name|slotTrig1
argument_list|()
argument_list|)
expr_stmt|;
name|ambig
operator|=
name|SLOT
argument_list|(
name|ambigSlot1
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|TriggerSlot2
case|:
name|normal
operator|=
name|SLOT
argument_list|(
name|slotTrig2
argument_list|()
argument_list|)
expr_stmt|;
name|ambig
operator|=
name|SLOT
argument_list|(
name|ambigSlot2
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|TriggerSlot3
case|:
name|normal
operator|=
name|SLOT
argument_list|(
name|slotTrig3
argument_list|()
argument_list|)
expr_stmt|;
name|ambig
operator|=
name|SLOT
argument_list|(
name|ambigSlot3
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|TriggerSlot4
case|:
name|normal
operator|=
name|SLOT
argument_list|(
name|slotTrig4
argument_list|()
argument_list|)
expr_stmt|;
name|ambig
operator|=
name|SLOT
argument_list|(
name|ambigSlot4
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|TriggerSlot5
case|:
name|normal
operator|=
name|SLOT
argument_list|(
name|slotTrig5
argument_list|()
argument_list|)
expr_stmt|;
name|ambig
operator|=
name|SLOT
argument_list|(
name|ambigSlot5
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|TriggerSlot6
case|:
name|normal
operator|=
name|SLOT
argument_list|(
name|slotTrig6
argument_list|()
argument_list|)
expr_stmt|;
name|ambig
operator|=
name|SLOT
argument_list|(
name|ambigSlot6
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|TriggerSlot7
case|:
name|normal
operator|=
name|SLOT
argument_list|(
name|slotTrig7
argument_list|()
argument_list|)
expr_stmt|;
name|ambig
operator|=
name|SLOT
argument_list|(
name|ambigSlot7
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|SendKeyEvent
case|:
name|normal
operator|=
name|SLOT
argument_list|(
name|sendKeyEvent
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|connect
argument_list|(
name|cut
argument_list|,
name|SIGNAL
argument_list|(
name|activated
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|normal
argument_list|)
expr_stmt|;
if|if
condition|(
name|ambig
condition|)
name|connect
argument_list|(
name|cut
argument_list|,
name|SIGNAL
argument_list|(
name|activatedAmbiguously
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|ambig
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|cut
argument_list|,
name|SIGNAL
argument_list|(
name|destroyed
argument_list|(
name|QObject
operator|*
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|shortcutDestroyed
argument_list|(
name|QObject
operator|*
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|shortcuts
operator|.
name|append
argument_list|(
name|cut
argument_list|)
expr_stmt|;
return|return
name|cut
return|;
block|}
end_function
begin_function
DECL|function|shortcutDestroyed
name|void
name|tst_QShortcut
operator|::
name|shortcutDestroyed
parameter_list|(
name|QObject
modifier|*
name|obj
parameter_list|)
block|{
name|shortcuts
operator|.
name|removeAll
argument_list|(
cast|static_cast
argument_list|<
name|QShortcut
operator|*
argument_list|>
argument_list|(
name|obj
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|sendKeyEvents
name|void
name|tst_QShortcut
operator|::
name|sendKeyEvents
parameter_list|(
name|int
name|k1
parameter_list|,
name|QChar
name|c1
parameter_list|,
name|int
name|k2
parameter_list|,
name|QChar
name|c2
parameter_list|,
name|int
name|k3
parameter_list|,
name|QChar
name|c3
parameter_list|,
name|int
name|k4
parameter_list|,
name|QChar
name|c4
parameter_list|)
block|{
name|sendKeyEvents
argument_list|(
name|mainW
argument_list|,
name|k1
argument_list|,
name|c1
argument_list|,
name|k2
argument_list|,
name|c2
argument_list|,
name|k3
argument_list|,
name|c3
argument_list|,
name|k4
argument_list|,
name|c4
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|sendKeyEvents
name|void
name|tst_QShortcut
operator|::
name|sendKeyEvents
parameter_list|(
name|QWidget
modifier|*
name|w
parameter_list|,
name|int
name|k1
parameter_list|,
name|QChar
name|c1
parameter_list|,
name|int
name|k2
parameter_list|,
name|QChar
name|c2
parameter_list|,
name|int
name|k3
parameter_list|,
name|QChar
name|c3
parameter_list|,
name|int
name|k4
parameter_list|,
name|QChar
name|c4
parameter_list|)
block|{
name|Qt
operator|::
name|KeyboardModifiers
name|b1
init|=
name|toButtons
argument_list|(
name|k1
argument_list|)
decl_stmt|;
name|Qt
operator|::
name|KeyboardModifiers
name|b2
init|=
name|toButtons
argument_list|(
name|k2
argument_list|)
decl_stmt|;
name|Qt
operator|::
name|KeyboardModifiers
name|b3
init|=
name|toButtons
argument_list|(
name|k3
argument_list|)
decl_stmt|;
name|Qt
operator|::
name|KeyboardModifiers
name|b4
init|=
name|toButtons
argument_list|(
name|k4
argument_list|)
decl_stmt|;
name|k1
operator|&=
operator|~
name|Qt
operator|::
name|MODIFIER_MASK
expr_stmt|;
name|k2
operator|&=
operator|~
name|Qt
operator|::
name|MODIFIER_MASK
expr_stmt|;
name|k3
operator|&=
operator|~
name|Qt
operator|::
name|MODIFIER_MASK
expr_stmt|;
name|k4
operator|&=
operator|~
name|Qt
operator|::
name|MODIFIER_MASK
expr_stmt|;
if|if
condition|(
name|k1
operator|||
name|c1
operator|.
name|toLatin1
argument_list|()
condition|)
block|{
name|QString
name|c
argument_list|(
name|c1
operator|.
name|unicode
argument_list|()
operator|==
name|QChar
operator|::
name|Null
condition|?
name|QString
argument_list|()
else|:
name|QString
argument_list|(
name|c1
argument_list|)
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|sendKeyEvent
argument_list|(
name|QTest
operator|::
name|Press
argument_list|,
name|w
argument_list|,
cast|static_cast
argument_list|<
name|Qt
operator|::
name|Key
argument_list|>
argument_list|(
name|k1
argument_list|)
argument_list|,
name|c
argument_list|,
name|b1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|sendKeyEvent
argument_list|(
name|QTest
operator|::
name|Release
argument_list|,
name|w
argument_list|,
cast|static_cast
argument_list|<
name|Qt
operator|::
name|Key
argument_list|>
argument_list|(
name|k1
argument_list|)
argument_list|,
name|c
argument_list|,
name|b1
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|k2
operator|||
name|c2
operator|.
name|toLatin1
argument_list|()
condition|)
block|{
name|QString
name|c
argument_list|(
name|c2
operator|.
name|unicode
argument_list|()
operator|==
name|QChar
operator|::
name|Null
condition|?
name|QString
argument_list|()
else|:
name|QString
argument_list|(
name|c2
argument_list|)
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|sendKeyEvent
argument_list|(
name|QTest
operator|::
name|Press
argument_list|,
name|w
argument_list|,
cast|static_cast
argument_list|<
name|Qt
operator|::
name|Key
argument_list|>
argument_list|(
name|k2
argument_list|)
argument_list|,
name|c
argument_list|,
name|b2
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|sendKeyEvent
argument_list|(
name|QTest
operator|::
name|Release
argument_list|,
name|w
argument_list|,
cast|static_cast
argument_list|<
name|Qt
operator|::
name|Key
argument_list|>
argument_list|(
name|k2
argument_list|)
argument_list|,
name|c
argument_list|,
name|b2
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|k3
operator|||
name|c3
operator|.
name|toLatin1
argument_list|()
condition|)
block|{
name|QString
name|c
argument_list|(
name|c3
operator|.
name|unicode
argument_list|()
operator|==
name|QChar
operator|::
name|Null
condition|?
name|QString
argument_list|()
else|:
name|QString
argument_list|(
name|c3
argument_list|)
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|sendKeyEvent
argument_list|(
name|QTest
operator|::
name|Press
argument_list|,
name|w
argument_list|,
cast|static_cast
argument_list|<
name|Qt
operator|::
name|Key
argument_list|>
argument_list|(
name|k3
argument_list|)
argument_list|,
name|c
argument_list|,
name|b3
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|sendKeyEvent
argument_list|(
name|QTest
operator|::
name|Release
argument_list|,
name|w
argument_list|,
cast|static_cast
argument_list|<
name|Qt
operator|::
name|Key
argument_list|>
argument_list|(
name|k3
argument_list|)
argument_list|,
name|c
argument_list|,
name|b3
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|k4
operator|||
name|c4
operator|.
name|toLatin1
argument_list|()
condition|)
block|{
name|QString
name|c
argument_list|(
name|c4
operator|.
name|unicode
argument_list|()
operator|==
name|QChar
operator|::
name|Null
condition|?
name|QString
argument_list|()
else|:
name|QString
argument_list|(
name|c4
argument_list|)
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|sendKeyEvent
argument_list|(
name|QTest
operator|::
name|Press
argument_list|,
name|w
argument_list|,
cast|static_cast
argument_list|<
name|Qt
operator|::
name|Key
argument_list|>
argument_list|(
name|k4
argument_list|)
argument_list|,
name|c
argument_list|,
name|b4
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|sendKeyEvent
argument_list|(
name|QTest
operator|::
name|Release
argument_list|,
name|w
argument_list|,
cast|static_cast
argument_list|<
name|Qt
operator|::
name|Key
argument_list|>
argument_list|(
name|k4
argument_list|)
argument_list|,
name|c
argument_list|,
name|b4
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|testElement
name|void
name|tst_QShortcut
operator|::
name|testElement
parameter_list|()
block|{
name|currentResult
operator|=
name|NoResult
expr_stmt|;
name|QFETCH
argument_list|(
name|tst_QShortcut
operator|::
name|Action
argument_list|,
name|action
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|tst_QShortcut
operator|::
name|Widget
argument_list|,
name|testWidget
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|txt
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|k1
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|c1
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|k2
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|c2
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|k3
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|c3
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|k4
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|c4
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|tst_QShortcut
operator|::
name|Result
argument_list|,
name|result
argument_list|)
expr_stmt|;
if|if
condition|(
name|action
operator|==
name|ClearAll
condition|)
block|{
name|clearAllShortcuts
argument_list|()
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|action
operator|==
name|SetupAccel
condition|)
block|{
name|setupShortcut
argument_list|(
name|testWidget
argument_list|,
name|txt
argument_list|,
name|k1
argument_list|,
name|k2
argument_list|,
name|k3
argument_list|,
name|k4
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|sendKeyEvents
argument_list|(
name|k1
argument_list|,
name|c1
argument_list|,
name|k2
argument_list|,
name|c2
argument_list|,
name|k3
argument_list|,
name|c3
argument_list|,
name|k4
argument_list|,
name|c4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
operator|(
name|int
operator|)
name|currentResult
argument_list|,
operator|(
name|int
operator|)
name|result
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QShortcut
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qshortcut.moc"
end_include
end_unit
