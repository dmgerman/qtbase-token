begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 KlarÃ¤lvdalens Datakonsult AB, a KDAB Group company, info@kdab.com, author Stephen Kelly<stephen.kelly@kdab.com> ** Contact: http://www.qt-project.org/legal ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<qwidget.h>
end_include
begin_include
include|#
directive|include
file|<qlabel.h>
end_include
begin_class
DECL|class|tst_QWidgetMetaType
class|class
name|tst_QWidgetMetaType
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
DECL|function|tst_QWidgetMetaType
name|tst_QWidgetMetaType
parameter_list|()
block|{}
DECL|function|~tst_QWidgetMetaType
specifier|virtual
name|~
name|tst_QWidgetMetaType
parameter_list|()
block|{}
private|private
name|slots
private|:
name|void
name|metaObject
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_class
DECL|class|CustomWidget
class|class
name|CustomWidget
super|:
specifier|public
name|QWidget
block|{
name|Q_OBJECT
public|public:
DECL|function|CustomWidget
name|CustomWidget
parameter_list|(
name|QWidget
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QWidget
argument_list|(
name|parent
argument_list|)
block|{    }
block|}
class|;
end_class
begin_expr_stmt
name|Q_STATIC_ASSERT
argument_list|(
operator|(
name|QMetaTypeId2
argument_list|<
name|QSizePolicy
argument_list|>
operator|::
name|IsBuiltIn
operator|)
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|Q_STATIC_ASSERT
argument_list|(
operator|(
operator|!
name|QMetaTypeId2
argument_list|<
name|QWidget
operator|*
argument_list|>
operator|::
name|IsBuiltIn
operator|)
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|Q_STATIC_ASSERT
argument_list|(
operator|(
operator|!
name|QMetaTypeId2
argument_list|<
name|QList
argument_list|<
name|QSizePolicy
argument_list|>
argument_list|>
operator|::
name|IsBuiltIn
operator|)
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|Q_STATIC_ASSERT
argument_list|(
operator|(
operator|!
name|QMetaTypeId2
argument_list|<
name|QMap
argument_list|<
name|QString
argument_list|,
name|QSizePolicy
argument_list|>
argument_list|>
operator|::
name|IsBuiltIn
operator|)
argument_list|)
expr_stmt|;
end_expr_stmt
begin_function
DECL|function|metaObject
name|void
name|tst_QWidgetMetaType
operator|::
name|metaObject
parameter_list|()
block|{
name|QCOMPARE
argument_list|(
name|QMetaType
operator|::
name|metaObjectForType
argument_list|(
name|qMetaTypeId
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|()
argument_list|)
argument_list|,
operator|&
name|QWidget
operator|::
name|staticMetaObject
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QMetaType
operator|::
name|metaObjectForType
argument_list|(
name|qMetaTypeId
argument_list|<
name|QLabel
operator|*
argument_list|>
argument_list|()
argument_list|)
argument_list|,
operator|&
name|QLabel
operator|::
name|staticMetaObject
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QMetaType
operator|::
name|metaObjectForType
argument_list|(
name|qMetaTypeId
argument_list|<
name|CustomWidget
operator|*
argument_list|>
argument_list|()
argument_list|)
argument_list|,
operator|&
name|CustomWidget
operator|::
name|staticMetaObject
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QWidgetMetaType
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qwidgetmetatype.moc"
end_include
end_unit
