begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<qstatusbar.h>
end_include
begin_include
include|#
directive|include
file|<QLabel>
end_include
begin_include
include|#
directive|include
file|<QMainWindow>
end_include
begin_include
include|#
directive|include
file|<QSizeGrip>
end_include
begin_class
DECL|class|tst_QStatusBar
class|class
name|tst_QStatusBar
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
name|tst_QStatusBar
parameter_list|()
constructor_decl|;
specifier|virtual
name|~
name|tst_QStatusBar
parameter_list|()
destructor_decl|;
protected|protected
name|slots
protected|:
name|void
name|messageChanged
parameter_list|(
specifier|const
name|QString
modifier|&
parameter_list|)
function_decl|;
public|public
name|slots
public|:
name|void
name|initTestCase
parameter_list|()
function_decl|;
name|void
name|cleanupTestCase
parameter_list|()
function_decl|;
name|void
name|init
parameter_list|()
function_decl|;
name|void
name|cleanup
parameter_list|()
function_decl|;
private|private
name|slots
private|:
name|void
name|tempMessage
parameter_list|()
function_decl|;
name|void
name|insertWidget
parameter_list|()
function_decl|;
name|void
name|insertPermanentWidget
parameter_list|()
function_decl|;
name|void
name|setSizeGripEnabled
parameter_list|()
function_decl|;
name|void
name|task194017_hiddenWidget
parameter_list|()
function_decl|;
name|void
name|QTBUG4334_hiddenOnMaximizedWindow
parameter_list|()
function_decl|;
name|void
name|QTBUG25492_msgtimeout
parameter_list|()
function_decl|;
name|void
name|messageChangedSignal
parameter_list|()
function_decl|;
private|private:
DECL|member|testWidget
name|QStatusBar
modifier|*
name|testWidget
decl_stmt|;
DECL|member|currentMessage
name|QString
name|currentMessage
decl_stmt|;
block|}
class|;
end_class
begin_constructor
DECL|function|tst_QStatusBar
name|tst_QStatusBar
operator|::
name|tst_QStatusBar
parameter_list|()
block|{ }
end_constructor
begin_destructor
DECL|function|~tst_QStatusBar
name|tst_QStatusBar
operator|::
name|~
name|tst_QStatusBar
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|init
name|void
name|tst_QStatusBar
operator|::
name|init
parameter_list|()
block|{
name|testWidget
operator|=
operator|new
name|QStatusBar
expr_stmt|;
name|connect
argument_list|(
name|testWidget
argument_list|,
name|SIGNAL
argument_list|(
name|messageChanged
argument_list|(
name|QString
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|messageChanged
argument_list|(
name|QString
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|item1
init|=
operator|new
name|QWidget
argument_list|(
name|testWidget
argument_list|)
decl_stmt|;
name|testWidget
operator|->
name|addWidget
argument_list|(
name|item1
argument_list|)
expr_stmt|;
comment|// currentMessage needs to be null as the code relies on this
name|currentMessage
operator|=
name|QString
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|cleanup
name|void
name|tst_QStatusBar
operator|::
name|cleanup
parameter_list|()
block|{
operator|delete
name|testWidget
expr_stmt|;
block|}
end_function
begin_function
DECL|function|initTestCase
name|void
name|tst_QStatusBar
operator|::
name|initTestCase
parameter_list|()
block|{ }
end_function
begin_function
DECL|function|cleanupTestCase
name|void
name|tst_QStatusBar
operator|::
name|cleanupTestCase
parameter_list|()
block|{ }
end_function
begin_function
DECL|function|messageChanged
name|void
name|tst_QStatusBar
operator|::
name|messageChanged
parameter_list|(
specifier|const
name|QString
modifier|&
name|m
parameter_list|)
block|{
name|currentMessage
operator|=
name|m
expr_stmt|;
block|}
end_function
begin_function
DECL|function|tempMessage
name|void
name|tst_QStatusBar
operator|::
name|tempMessage
parameter_list|()
block|{
name|QVERIFY
argument_list|(
name|testWidget
operator|->
name|currentMessage
argument_list|()
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|currentMessage
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|showMessage
argument_list|(
literal|"Ready"
argument_list|,
literal|500
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|currentMessage
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Ready"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|currentMessage
argument_list|()
argument_list|,
name|currentMessage
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|testWidget
operator|->
name|currentMessage
argument_list|()
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|currentMessage
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|showMessage
argument_list|(
literal|"Ready again"
argument_list|,
literal|500
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|currentMessage
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Ready again"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|currentMessage
argument_list|()
argument_list|,
name|currentMessage
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|clearMessage
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|testWidget
operator|->
name|currentMessage
argument_list|()
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|currentMessage
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|insertWidget
name|void
name|tst_QStatusBar
operator|::
name|insertWidget
parameter_list|()
block|{
name|QStatusBar
name|sb
decl_stmt|;
name|sb
operator|.
name|addPermanentWidget
argument_list|(
operator|new
name|QLabel
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QStatusBar::insertWidget: Index out of range (-1), appending widget"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|sb
operator|.
name|insertWidget
argument_list|(
operator|-
literal|1
argument_list|,
operator|new
name|QLabel
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QStatusBar::insertWidget: Index out of range (2), appending widget"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|sb
operator|.
name|insertWidget
argument_list|(
literal|2
argument_list|,
operator|new
name|QLabel
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|sb
operator|.
name|insertWidget
argument_list|(
literal|0
argument_list|,
operator|new
name|QLabel
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|sb
operator|.
name|insertWidget
argument_list|(
literal|3
argument_list|,
operator|new
name|QLabel
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
argument_list|,
literal|3
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|insertPermanentWidget
name|void
name|tst_QStatusBar
operator|::
name|insertPermanentWidget
parameter_list|()
block|{
name|QStatusBar
name|sb
decl_stmt|;
name|sb
operator|.
name|addWidget
argument_list|(
operator|new
name|QLabel
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QStatusBar::insertPermanentWidget: Index out of range (-1), appending widget"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|sb
operator|.
name|insertPermanentWidget
argument_list|(
operator|-
literal|1
argument_list|,
operator|new
name|QLabel
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QStatusBar::insertPermanentWidget: Index out of range (0), appending widget"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|sb
operator|.
name|insertPermanentWidget
argument_list|(
literal|0
argument_list|,
operator|new
name|QLabel
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|sb
operator|.
name|insertPermanentWidget
argument_list|(
literal|2
argument_list|,
operator|new
name|QLabel
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QStatusBar::insertPermanentWidget: Index out of range (5), appending widget"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|sb
operator|.
name|insertPermanentWidget
argument_list|(
literal|5
argument_list|,
operator|new
name|QLabel
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|sb
operator|.
name|insertWidget
argument_list|(
literal|1
argument_list|,
operator|new
name|QLabel
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QStatusBar::insertPermanentWidget: Index out of range (1), appending widget"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|sb
operator|.
name|insertPermanentWidget
argument_list|(
literal|1
argument_list|,
operator|new
name|QLabel
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
argument_list|,
literal|6
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setSizeGripEnabled
name|void
name|tst_QStatusBar
operator|::
name|setSizeGripEnabled
parameter_list|()
block|{
name|QMainWindow
name|mainWindow
decl_stmt|;
name|QPointer
argument_list|<
name|QStatusBar
argument_list|>
name|statusBar
init|=
name|mainWindow
operator|.
name|statusBar
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|statusBar
argument_list|)
expr_stmt|;
name|mainWindow
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|mainWindow
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|statusBar
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QPointer
argument_list|<
name|QSizeGrip
argument_list|>
name|sizeGrip
init|=
name|statusBar
operator|->
name|findChild
argument_list|<
name|QSizeGrip
operator|*
argument_list|>
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|sizeGrip
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|sizeGrip
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|statusBar
operator|->
name|setSizeGripEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|sizeGrip
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|sizeGrip
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|statusBar
operator|->
name|hide
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|sizeGrip
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|statusBar
operator|->
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|sizeGrip
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|sizeGrip
operator|->
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|sizeGrip
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|statusBar
operator|->
name|hide
argument_list|()
expr_stmt|;
name|statusBar
operator|->
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|sizeGrip
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|statusBar
operator|->
name|setSizeGripEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|sizeGrip
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
ifndef|#
directive|ifndef
name|Q_OS_MAC
comment|// Work around Lion fullscreen issues on CI system - QTQAINFRA-506
name|mainWindow
operator|.
name|showFullScreen
argument_list|()
expr_stmt|;
endif|#
directive|endif
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|mainWindow
argument_list|)
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|mainWindow
operator|.
name|setStatusBar
argument_list|(
operator|new
name|QStatusBar
argument_list|(
operator|&
name|mainWindow
argument_list|)
argument_list|)
expr_stmt|;
comment|//we now call deleteLater on the previous statusbar
name|QCoreApplication
operator|::
name|sendPostedEvents
argument_list|(
literal|0
argument_list|,
name|QEvent
operator|::
name|DeferredDelete
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|statusBar
argument_list|)
expr_stmt|;
name|statusBar
operator|=
name|mainWindow
operator|.
name|statusBar
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|statusBar
argument_list|)
expr_stmt|;
name|sizeGrip
operator|=
name|statusBar
operator|->
name|findChild
argument_list|<
name|QSizeGrip
operator|*
argument_list|>
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|sizeGrip
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|sizeGrip
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|statusBar
operator|->
name|setSizeGripEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|sizeGrip
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
ifndef|#
directive|ifndef
name|Q_OS_MAC
name|mainWindow
operator|.
name|showNormal
argument_list|()
expr_stmt|;
endif|#
directive|endif
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|sizeGrip
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|task194017_hiddenWidget
name|void
name|tst_QStatusBar
operator|::
name|task194017_hiddenWidget
parameter_list|()
block|{
name|QStatusBar
name|sb
decl_stmt|;
name|QWidget
modifier|*
name|label
init|=
operator|new
name|QLabel
argument_list|(
literal|"bar"
argument_list|,
operator|&
name|sb
argument_list|)
decl_stmt|;
name|sb
operator|.
name|addWidget
argument_list|(
name|label
argument_list|)
expr_stmt|;
name|sb
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|label
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|sb
operator|.
name|showMessage
argument_list|(
literal|"messssage"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|label
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|sb
operator|.
name|hide
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|label
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|sb
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|label
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|sb
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|label
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|label
operator|->
name|hide
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|label
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|sb
operator|.
name|showMessage
argument_list|(
literal|"messssage"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|label
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|sb
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|label
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|sb
operator|.
name|hide
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|label
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|sb
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|label
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|QTBUG4334_hiddenOnMaximizedWindow
name|void
name|tst_QStatusBar
operator|::
name|QTBUG4334_hiddenOnMaximizedWindow
parameter_list|()
block|{
name|QMainWindow
decl|main
decl_stmt|;
name|QStatusBar
name|statusbar
decl_stmt|;
name|statusbar
operator|.
name|setSizeGripEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
expr|main
operator|.
name|setStatusBar
argument_list|(
operator|&
name|statusbar
argument_list|)
expr_stmt|;
expr|main
operator|.
name|showMaximized
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowActive
argument_list|(
operator|&
expr|main
argument_list|)
argument_list|)
expr_stmt|;
ifndef|#
directive|ifndef
name|Q_OS_MAC
name|QVERIFY
argument_list|(
operator|!
name|statusbar
operator|.
name|findChild
argument_list|<
name|QSizeGrip
operator|*
argument_list|>
argument_list|()
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
endif|#
directive|endif
expr|main
operator|.
name|showNormal
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
expr|main
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|statusbar
operator|.
name|findChild
argument_list|<
name|QSizeGrip
operator|*
argument_list|>
argument_list|()
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
expr|main
operator|.
name|showFullScreen
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
expr|main
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|statusbar
operator|.
name|findChild
argument_list|<
name|QSizeGrip
operator|*
argument_list|>
argument_list|()
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|QTBUG25492_msgtimeout
name|void
name|tst_QStatusBar
operator|::
name|QTBUG25492_msgtimeout
parameter_list|()
block|{
name|QVERIFY
argument_list|(
name|testWidget
operator|->
name|currentMessage
argument_list|()
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|currentMessage
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|show
argument_list|()
expr_stmt|;
comment|// Set display message forever first
name|testWidget
operator|->
name|showMessage
argument_list|(
literal|"Ready"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|currentMessage
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Ready"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|currentMessage
argument_list|()
argument_list|,
name|currentMessage
argument_list|)
expr_stmt|;
comment|// Set display message for 2 seconds
name|QElapsedTimer
name|t
decl_stmt|;
name|t
operator|.
name|start
argument_list|()
expr_stmt|;
name|testWidget
operator|->
name|showMessage
argument_list|(
literal|"Ready 2000"
argument_list|,
literal|2000
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|currentMessage
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Ready 2000"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|currentMessage
argument_list|()
argument_list|,
name|currentMessage
argument_list|)
expr_stmt|;
comment|// Message disappears after 2 seconds
name|QTRY_VERIFY
argument_list|(
name|testWidget
operator|->
name|currentMessage
argument_list|()
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|qint64
name|ts
init|=
name|t
operator|.
name|elapsed
argument_list|()
decl_stmt|;
comment|// XXX: ideally ts should be 2000, but sometimes it appears to go away early, probably due to timer granularity.
name|QVERIFY2
argument_list|(
name|ts
operator|>=
literal|1800
argument_list|,
name|qPrintable
argument_list|(
literal|"Timer was "
operator|+
name|QString
operator|::
name|number
argument_list|(
name|ts
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|ts
operator|<
literal|2000
condition|)
name|qWarning
argument_list|(
literal|"QTBUG25492_msgtimeout: message vanished early, should be>= 2000, was %lld"
argument_list|,
name|ts
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|currentMessage
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
comment|// Set display message for 2 seconds first
name|testWidget
operator|->
name|showMessage
argument_list|(
literal|"Ready 25492"
argument_list|,
literal|2000
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|currentMessage
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Ready 25492"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|currentMessage
argument_list|()
argument_list|,
name|currentMessage
argument_list|)
expr_stmt|;
comment|// Set display message forever again
name|testWidget
operator|->
name|showMessage
argument_list|(
literal|"Ready 25492"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|currentMessage
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Ready 25492"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|currentMessage
argument_list|()
argument_list|,
name|currentMessage
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|3000
argument_list|)
expr_stmt|;
comment|// Message displays forever
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|currentMessage
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Ready 25492"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|currentMessage
argument_list|()
argument_list|,
name|currentMessage
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|messageChangedSignal
name|void
name|tst_QStatusBar
operator|::
name|messageChangedSignal
parameter_list|()
block|{
name|QVERIFY
argument_list|(
name|testWidget
operator|->
name|currentMessage
argument_list|()
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|currentMessage
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|show
argument_list|()
expr_stmt|;
name|QSignalSpy
name|spy
argument_list|(
name|testWidget
argument_list|,
name|SIGNAL
argument_list|(
name|messageChanged
argument_list|(
name|QString
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|testWidget
operator|->
name|showMessage
argument_list|(
literal|"Ready"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|currentMessage
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Ready"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|currentMessage
argument_list|()
argument_list|,
name|currentMessage
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|takeFirst
argument_list|()
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|currentMessage
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|clearMessage
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|currentMessage
argument_list|()
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|currentMessage
argument_list|()
argument_list|,
name|currentMessage
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|takeFirst
argument_list|()
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|currentMessage
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|showMessage
argument_list|(
literal|"Ready"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|showMessage
argument_list|(
literal|"Ready"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|currentMessage
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Ready"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|currentMessage
argument_list|()
argument_list|,
name|currentMessage
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|takeFirst
argument_list|()
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|currentMessage
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QStatusBar
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qstatusbar.moc"
end_include
end_unit
