begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:GPL-EXCEPT$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3 as published by the Free Software ** Foundation with exceptions as appearing in the file LICENSE.GPL3-EXCEPT ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<QScrollBar>
end_include
begin_include
include|#
directive|include
file|<QStyleOptionSlider>
end_include
begin_include
include|#
directive|include
file|<QScrollArea>
end_include
begin_include
include|#
directive|include
file|<QScreen>
end_include
begin_function
DECL|function|centerOnScreen
specifier|static
specifier|inline
name|void
name|centerOnScreen
parameter_list|(
name|QWidget
modifier|*
name|w
parameter_list|,
specifier|const
name|QSize
modifier|&
name|size
parameter_list|)
block|{
specifier|const
name|QPoint
name|offset
init|=
name|QPoint
argument_list|(
name|size
operator|.
name|width
argument_list|()
operator|/
literal|2
argument_list|,
name|size
operator|.
name|height
argument_list|()
operator|/
literal|2
argument_list|)
decl_stmt|;
name|w
operator|->
name|move
argument_list|(
name|QGuiApplication
operator|::
name|primaryScreen
argument_list|()
operator|->
name|availableGeometry
argument_list|()
operator|.
name|center
argument_list|()
operator|-
name|offset
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|centerOnScreen
specifier|static
specifier|inline
name|void
name|centerOnScreen
parameter_list|(
name|QWidget
modifier|*
name|w
parameter_list|)
block|{
name|centerOnScreen
argument_list|(
name|w
argument_list|,
name|w
operator|->
name|geometry
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|tst_QScrollBar
class|class
name|tst_QScrollBar
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
private|private
name|slots
private|:
name|void
name|scrollSingleStep
parameter_list|()
function_decl|;
name|void
name|task_209492
parameter_list|()
function_decl|;
ifndef|#
directive|ifndef
name|QT_NO_WHEELEVENT
name|void
name|QTBUG_27308
parameter_list|()
function_decl|;
endif|#
directive|endif
name|void
name|QTBUG_42871
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_class
DECL|class|SingleStepTestScrollBar
class|class
name|SingleStepTestScrollBar
super|:
specifier|public
name|QScrollBar
block|{
name|Q_OBJECT
public|public:
DECL|function|SingleStepTestScrollBar
specifier|explicit
name|SingleStepTestScrollBar
parameter_list|(
name|Qt
operator|::
name|Orientation
name|o
parameter_list|,
name|QWidget
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QScrollBar
argument_list|(
name|o
argument_list|,
name|parent
argument_list|)
block|{}
public|public
name|slots
public|:
DECL|function|hideAndShow
name|void
name|hideAndShow
parameter_list|()
block|{
name|hide
argument_list|()
expr_stmt|;
name|show
argument_list|()
expr_stmt|;
block|}
block|}
class|;
end_class
begin_comment
comment|// Check that the scrollbar doesn't scroll after calling hide and show
end_comment
begin_comment
comment|// from a slot connected to the scrollbar's actionTriggered signal.
end_comment
begin_function
DECL|function|scrollSingleStep
name|void
name|tst_QScrollBar
operator|::
name|scrollSingleStep
parameter_list|()
block|{
name|SingleStepTestScrollBar
name|testWidget
argument_list|(
name|Qt
operator|::
name|Horizontal
argument_list|)
decl_stmt|;
name|connect
argument_list|(
operator|&
name|testWidget
argument_list|,
operator|&
name|QAbstractSlider
operator|::
name|actionTriggered
argument_list|,
operator|&
name|testWidget
argument_list|,
operator|&
name|SingleStepTestScrollBar
operator|::
name|hideAndShow
argument_list|)
expr_stmt|;
name|testWidget
operator|.
name|resize
argument_list|(
literal|100
argument_list|,
name|testWidget
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
name|centerOnScreen
argument_list|(
operator|&
name|testWidget
argument_list|)
expr_stmt|;
name|testWidget
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|testWidget
argument_list|)
expr_stmt|;
name|testWidget
operator|.
name|setValue
argument_list|(
name|testWidget
operator|.
name|minimum
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|.
name|value
argument_list|()
argument_list|,
name|testWidget
operator|.
name|minimum
argument_list|()
argument_list|)
expr_stmt|;
comment|// Get rect for the area to click on
specifier|const
name|QStyleOptionSlider
name|opt
init|=
name|qt_qscrollbarStyleOption
argument_list|(
operator|&
name|testWidget
argument_list|)
decl_stmt|;
name|QRect
name|sr
init|=
name|testWidget
operator|.
name|style
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|QStyle
operator|::
name|CC_ScrollBar
argument_list|,
operator|&
name|opt
argument_list|,
name|QStyle
operator|::
name|SC_ScrollBarAddLine
argument_list|,
operator|&
name|testWidget
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|sr
operator|.
name|isValid
argument_list|()
condition|)
name|QSKIP
argument_list|(
literal|"SC_ScrollBarAddLine not valid"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
operator|&
name|testWidget
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|,
name|QPoint
argument_list|(
name|sr
operator|.
name|x
argument_list|()
argument_list|,
name|sr
operator|.
name|y
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|510
argument_list|)
expr_stmt|;
comment|// initial delay is 500 for setRepeatAction
name|disconnect
argument_list|(
operator|&
name|testWidget
argument_list|,
operator|&
name|QAbstractSlider
operator|::
name|actionTriggered
argument_list|,
operator|&
name|testWidget
argument_list|,
operator|&
name|SingleStepTestScrollBar
operator|::
name|hideAndShow
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_OS_MAC
name|QEXPECT_FAIL
argument_list|(
literal|""
argument_list|,
literal|"This test fails on OS X, see QTBUG-25272"
argument_list|,
name|Abort
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QCOMPARE
argument_list|(
name|testWidget
operator|.
name|value
argument_list|()
argument_list|,
name|testWidget
operator|.
name|singleStep
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|task_209492
name|void
name|tst_QScrollBar
operator|::
name|task_209492
parameter_list|()
block|{
class|class
name|MyScrollArea
super|:
specifier|public
name|QScrollArea
block|{
public|public:
name|int
name|scrollCount
decl_stmt|;
name|MyScrollArea
parameter_list|(
name|QWidget
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QScrollArea
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|scrollCount
argument_list|(
literal|0
argument_list|)
block|{}
protected|protected:
name|void
name|paintEvent
parameter_list|(
name|QPaintEvent
modifier|*
parameter_list|)
block|{
name|QTest
operator|::
name|qSleep
argument_list|(
literal|600
argument_list|)
expr_stmt|;
block|}
name|void
name|scrollContentsBy
parameter_list|(
name|int
parameter_list|,
name|int
parameter_list|)
block|{
operator|++
name|scrollCount
expr_stmt|;
name|viewport
argument_list|()
operator|->
name|update
argument_list|()
expr_stmt|;
block|}
block|}
class|;
name|MyScrollArea
name|scrollArea
decl_stmt|;
name|QScrollBar
modifier|*
name|verticalScrollBar
init|=
name|scrollArea
operator|.
name|verticalScrollBar
argument_list|()
decl_stmt|;
name|verticalScrollBar
operator|->
name|setRange
argument_list|(
literal|0
argument_list|,
literal|1000
argument_list|)
expr_stmt|;
name|centerOnScreen
argument_list|(
operator|&
name|scrollArea
argument_list|)
expr_stmt|;
name|scrollArea
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|scrollArea
argument_list|)
expr_stmt|;
name|QSignalSpy
name|spy
argument_list|(
name|verticalScrollBar
argument_list|,
name|SIGNAL
argument_list|(
name|actionTriggered
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|scrollArea
operator|.
name|scrollCount
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// Simulate a mouse click on the "scroll down button".
specifier|const
name|QPoint
name|pressPoint
argument_list|(
name|verticalScrollBar
operator|->
name|width
argument_list|()
operator|/
literal|2
argument_list|,
name|verticalScrollBar
operator|->
name|height
argument_list|()
operator|-
literal|10
argument_list|)
decl_stmt|;
specifier|const
name|QPoint
name|globalPressPoint
init|=
name|verticalScrollBar
operator|->
name|mapToGlobal
argument_list|(
name|globalPressPoint
argument_list|)
decl_stmt|;
name|QMouseEvent
name|mousePressEvent
argument_list|(
name|QEvent
operator|::
name|MouseButtonPress
argument_list|,
name|pressPoint
argument_list|,
name|globalPressPoint
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QApplication
operator|::
name|sendEvent
argument_list|(
name|verticalScrollBar
argument_list|,
operator|&
name|mousePressEvent
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|QMouseEvent
name|mouseReleaseEvent
argument_list|(
name|QEvent
operator|::
name|MouseButtonRelease
argument_list|,
name|pressPoint
argument_list|,
name|globalPressPoint
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QApplication
operator|::
name|sendEvent
argument_list|(
name|verticalScrollBar
argument_list|,
operator|&
name|mouseReleaseEvent
argument_list|)
expr_stmt|;
comment|// Check that the action was triggered once.
ifdef|#
directive|ifdef
name|Q_OS_MAC
name|QSKIP
argument_list|(
literal|"The result depends on system setting and is not relevant on Mac"
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QCOMPARE
argument_list|(
name|scrollArea
operator|.
name|scrollCount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_WHEELEVENT
end_ifndef
begin_define
DECL|macro|WHEEL_DELTA
define|#
directive|define
name|WHEEL_DELTA
value|120
end_define
begin_comment
DECL|macro|WHEEL_DELTA
comment|// copied from tst_QAbstractSlider / tst_QComboBox
end_comment
begin_function
DECL|function|QTBUG_27308
name|void
name|tst_QScrollBar
operator|::
name|QTBUG_27308
parameter_list|()
block|{
comment|// QTBUG-27308
comment|// Check that a disabled scrollbar doesn't react on wheel events anymore
name|QScrollBar
name|testWidget
argument_list|(
name|Qt
operator|::
name|Horizontal
argument_list|)
decl_stmt|;
name|testWidget
operator|.
name|resize
argument_list|(
literal|100
argument_list|,
name|testWidget
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
name|centerOnScreen
argument_list|(
operator|&
name|testWidget
argument_list|)
expr_stmt|;
name|testWidget
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|testWidget
argument_list|)
expr_stmt|;
name|testWidget
operator|.
name|setValue
argument_list|(
name|testWidget
operator|.
name|minimum
argument_list|()
argument_list|)
expr_stmt|;
name|testWidget
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QWheelEvent
name|event
argument_list|(
name|testWidget
operator|.
name|rect
argument_list|()
operator|.
name|center
argument_list|()
argument_list|,
operator|-
name|WHEEL_DELTA
argument_list|,
name|Qt
operator|::
name|NoButton
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|,
name|testWidget
operator|.
name|orientation
argument_list|()
argument_list|)
decl_stmt|;
name|qApp
operator|->
name|sendEvent
argument_list|(
operator|&
name|testWidget
argument_list|,
operator|&
name|event
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|.
name|value
argument_list|()
argument_list|,
name|testWidget
operator|.
name|minimum
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_class
DECL|class|QTBUG_42871_Handler
class|class
name|QTBUG_42871_Handler
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
DECL|member|updatesCount
name|int
name|updatesCount
decl_stmt|;
DECL|function|QTBUG_42871_Handler
name|QTBUG_42871_Handler
parameter_list|()
member_init_list|:
name|QObject
argument_list|()
member_init_list|,
name|updatesCount
argument_list|(
literal|0
argument_list|)
block|{}
public|public
name|slots
public|:
DECL|function|valueUpdated
name|void
name|valueUpdated
parameter_list|(
name|int
parameter_list|)
block|{
operator|++
name|updatesCount
expr_stmt|;
name|QTest
operator|::
name|qSleep
argument_list|(
literal|600
argument_list|)
expr_stmt|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|QTBUG_42871
name|void
name|tst_QScrollBar
operator|::
name|QTBUG_42871
parameter_list|()
block|{
name|QTBUG_42871_Handler
name|myHandler
decl_stmt|;
name|QScrollBar
name|scrollBarWidget
argument_list|(
name|Qt
operator|::
name|Vertical
argument_list|)
decl_stmt|;
name|bool
name|connection
init|=
name|connect
argument_list|(
operator|&
name|scrollBarWidget
argument_list|,
name|SIGNAL
argument_list|(
name|valueChanged
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|,
operator|&
name|myHandler
argument_list|,
name|SLOT
argument_list|(
name|valueUpdated
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|connection
argument_list|)
expr_stmt|;
name|scrollBarWidget
operator|.
name|resize
argument_list|(
literal|100
argument_list|,
name|scrollBarWidget
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
name|centerOnScreen
argument_list|(
operator|&
name|scrollBarWidget
argument_list|)
expr_stmt|;
name|scrollBarWidget
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|scrollBarWidget
argument_list|)
expr_stmt|;
name|QSignalSpy
name|spy
argument_list|(
operator|&
name|scrollBarWidget
argument_list|,
name|SIGNAL
argument_list|(
name|actionTriggered
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|spy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|myHandler
operator|.
name|updatesCount
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// Simulate a mouse click on the "scroll down button".
specifier|const
name|QPoint
name|pressPoint
argument_list|(
name|scrollBarWidget
operator|.
name|width
argument_list|()
operator|/
literal|2
argument_list|,
name|scrollBarWidget
operator|.
name|height
argument_list|()
operator|-
literal|10
argument_list|)
decl_stmt|;
specifier|const
name|QPoint
name|globalPressPoint
init|=
name|scrollBarWidget
operator|.
name|mapToGlobal
argument_list|(
name|pressPoint
argument_list|)
decl_stmt|;
name|QMouseEvent
name|mousePressEvent
argument_list|(
name|QEvent
operator|::
name|MouseButtonPress
argument_list|,
name|pressPoint
argument_list|,
name|globalPressPoint
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QApplication
operator|::
name|sendEvent
argument_list|(
operator|&
name|scrollBarWidget
argument_list|,
operator|&
name|mousePressEvent
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|QMouseEvent
name|mouseReleaseEvent
argument_list|(
name|QEvent
operator|::
name|MouseButtonRelease
argument_list|,
name|pressPoint
argument_list|,
name|globalPressPoint
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QApplication
operator|::
name|sendEvent
argument_list|(
operator|&
name|scrollBarWidget
argument_list|,
operator|&
name|mouseReleaseEvent
argument_list|)
expr_stmt|;
comment|// Check that the action was triggered once.
name|QCOMPARE
argument_list|(
name|myHandler
operator|.
name|updatesCount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QScrollBar
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qscrollbar.moc"
end_include
end_unit
