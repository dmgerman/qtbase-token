begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia. For licensing terms and ** conditions see http://qt.digia.com/licensing. For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights. These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<QSplashScreen>
end_include
begin_class
DECL|class|tst_QSplashScreen
class|class
name|tst_QSplashScreen
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
private|private
name|slots
private|:
name|void
name|checkCloseTime
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_class
DECL|class|CloseEventSplash
class|class
name|CloseEventSplash
super|:
specifier|public
name|QSplashScreen
block|{
public|public:
DECL|function|CloseEventSplash
name|CloseEventSplash
parameter_list|(
specifier|const
name|QPixmap
modifier|&
name|pix
parameter_list|)
member_init_list|:
name|QSplashScreen
argument_list|(
name|pix
argument_list|)
member_init_list|,
name|receivedCloseEvent
argument_list|(
literal|false
argument_list|)
block|{}
DECL|member|receivedCloseEvent
name|bool
name|receivedCloseEvent
decl_stmt|;
protected|protected:
DECL|function|closeEvent
name|void
name|closeEvent
parameter_list|(
name|QCloseEvent
modifier|*
name|event
parameter_list|)
block|{
name|receivedCloseEvent
operator|=
literal|true
expr_stmt|;
name|QSplashScreen
operator|::
name|closeEvent
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|checkCloseTime
name|void
name|tst_QSplashScreen
operator|::
name|checkCloseTime
parameter_list|()
block|{
name|QPixmap
name|pix
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
decl_stmt|;
name|pix
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|CloseEventSplash
name|splash
argument_list|(
name|pix
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|splash
operator|.
name|receivedCloseEvent
argument_list|)
expr_stmt|;
name|QWidget
name|w
decl_stmt|;
name|splash
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTimer
operator|::
name|singleShot
argument_list|(
literal|500
argument_list|,
operator|&
name|w
argument_list|,
name|SLOT
argument_list|(
name|show
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|splash
operator|.
name|receivedCloseEvent
argument_list|)
expr_stmt|;
name|splash
operator|.
name|finish
argument_list|(
operator|&
name|w
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|splash
operator|.
name|receivedCloseEvent
argument_list|)
expr_stmt|;
comment|// We check the window handle because if this is not valid, then
comment|// it can't have been exposed
name|QVERIFY
argument_list|(
name|w
operator|.
name|windowHandle
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|w
operator|.
name|windowHandle
argument_list|()
operator|->
name|isExposed
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QSplashScreen
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qsplashscreen.moc"
end_include
end_unit
