begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: http://www.qt-project.org/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<QLineEdit>
end_include
begin_include
include|#
directive|include
file|<QStyle>
end_include
begin_include
include|#
directive|include
file|<QStyleOptionGroupBox>
end_include
begin_include
include|#
directive|include
file|<QVBoxLayout>
end_include
begin_include
include|#
directive|include
file|<QRadioButton>
end_include
begin_include
include|#
directive|include
file|"qgroupbox.h"
end_include
begin_class
DECL|class|tst_QGroupBox
class|class
name|tst_QGroupBox
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
name|tst_QGroupBox
parameter_list|()
constructor_decl|;
specifier|virtual
name|~
name|tst_QGroupBox
parameter_list|()
destructor_decl|;
public|public
name|slots
public|:
name|void
name|toggledHelperSlot
parameter_list|(
name|bool
name|on
parameter_list|)
function_decl|;
name|void
name|init
parameter_list|()
function_decl|;
name|void
name|clickTimestampSlot
parameter_list|()
function_decl|;
name|void
name|toggleTimestampSlot
parameter_list|()
function_decl|;
private|private
name|slots
private|:
name|void
name|setTitle_data
parameter_list|()
function_decl|;
name|void
name|setTitle
parameter_list|()
function_decl|;
name|void
name|setCheckable_data
parameter_list|()
function_decl|;
name|void
name|setCheckable
parameter_list|()
function_decl|;
name|void
name|setChecked_data
parameter_list|()
function_decl|;
name|void
name|setChecked
parameter_list|()
function_decl|;
name|void
name|enabledPropagation
parameter_list|()
function_decl|;
name|void
name|sizeHint
parameter_list|()
function_decl|;
name|void
name|toggled
parameter_list|()
function_decl|;
name|void
name|clicked_data
parameter_list|()
function_decl|;
name|void
name|clicked
parameter_list|()
function_decl|;
name|void
name|toggledVsClicked
parameter_list|()
function_decl|;
name|void
name|childrenAreDisabled
parameter_list|()
function_decl|;
name|void
name|propagateFocus
parameter_list|()
function_decl|;
name|void
name|task_QTBUG_19170_ignoreMouseReleseEvent
parameter_list|()
function_decl|;
private|private:
DECL|member|checked
name|bool
name|checked
decl_stmt|;
DECL|member|timeStamp
name|qint64
name|timeStamp
decl_stmt|;
DECL|member|clickTimeStamp
name|qint64
name|clickTimeStamp
decl_stmt|;
DECL|member|toggleTimeStamp
name|qint64
name|toggleTimeStamp
decl_stmt|;
block|}
class|;
end_class
begin_constructor
DECL|function|tst_QGroupBox
name|tst_QGroupBox
operator|::
name|tst_QGroupBox
parameter_list|()
block|{
name|checked
operator|=
literal|true
expr_stmt|;
block|}
end_constructor
begin_destructor
DECL|function|~tst_QGroupBox
name|tst_QGroupBox
operator|::
name|~
name|tst_QGroupBox
parameter_list|()
block|{  }
end_destructor
begin_function
DECL|function|init
name|void
name|tst_QGroupBox
operator|::
name|init
parameter_list|()
block|{
name|checked
operator|=
literal|true
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setTitle_data
name|void
name|tst_QGroupBox
operator|::
name|setTitle_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"title"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"expectedTitle"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"empty_title"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"normal_title"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"Whatisthematrix"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"Whatisthematrix"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"special_chars_title"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"<>%&#/()="
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"<>%&#/()="
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"spaces_title"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"  Hello  "
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"  Hello  "
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setCheckable_data
name|void
name|tst_QGroupBox
operator|::
name|setCheckable_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"checkable"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"expectedCheckable"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"checkable_true"
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"checkable_false"
argument_list|)
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setChecked_data
name|void
name|tst_QGroupBox
operator|::
name|setChecked_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"checkable"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"checked"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"expectedChecked"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"checkable_false_checked_true"
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"checkable_true_checked_true"
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"checkable_true_checked_false"
argument_list|)
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setTitle
name|void
name|tst_QGroupBox
operator|::
name|setTitle
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|title
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|expectedTitle
argument_list|)
expr_stmt|;
name|QGroupBox
name|groupBox
decl_stmt|;
name|groupBox
operator|.
name|setTitle
argument_list|(
name|title
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|groupBox
operator|.
name|title
argument_list|()
argument_list|,
name|expectedTitle
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setCheckable
name|void
name|tst_QGroupBox
operator|::
name|setCheckable
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|checkable
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|expectedCheckable
argument_list|)
expr_stmt|;
name|QGroupBox
name|groupBox
decl_stmt|;
name|groupBox
operator|.
name|setCheckable
argument_list|(
name|checkable
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|groupBox
operator|.
name|isCheckable
argument_list|()
argument_list|,
name|expectedCheckable
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setChecked
name|void
name|tst_QGroupBox
operator|::
name|setChecked
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|checkable
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|checked
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|expectedChecked
argument_list|)
expr_stmt|;
name|QGroupBox
name|groupBox
decl_stmt|;
name|groupBox
operator|.
name|setCheckable
argument_list|(
name|checkable
argument_list|)
expr_stmt|;
name|groupBox
operator|.
name|setChecked
argument_list|(
name|checked
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|groupBox
operator|.
name|isChecked
argument_list|()
argument_list|,
name|expectedChecked
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|enabledPropagation
name|void
name|tst_QGroupBox
operator|::
name|enabledPropagation
parameter_list|()
block|{
name|QGroupBox
modifier|*
name|testWidget
init|=
operator|new
name|QGroupBox
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|testWidget
operator|->
name|setCheckable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setChecked
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|childWidget
init|=
operator|new
name|QWidget
argument_list|(
name|testWidget
argument_list|)
decl_stmt|;
name|childWidget
operator|->
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|testWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|childWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|testWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|childWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDisabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|childWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|grandChildWidget
init|=
operator|new
name|QWidget
argument_list|(
name|childWidget
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|grandChildWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDisabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|testWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|childWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|grandChildWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|grandChildWidget
operator|->
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|childWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|grandChildWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|grandChildWidget
operator|->
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|childWidget
operator|->
name|setDisabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|childWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|grandChildWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
comment|// Reset state
name|testWidget
operator|->
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|childWidget
operator|->
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|grandChildWidget
operator|->
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|// Now check when it's disabled
name|testWidget
operator|->
name|setChecked
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|childWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|testWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|childWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDisabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|childWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|grandChildWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDisabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|testWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|childWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|grandChildWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|grandChildWidget
operator|->
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|childWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|grandChildWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|grandChildWidget
operator|->
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|childWidget
operator|->
name|setDisabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|childWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|grandChildWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
comment|// Reset state
name|testWidget
operator|->
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|childWidget
operator|->
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|grandChildWidget
operator|->
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|// Finally enable it again
name|testWidget
operator|->
name|setChecked
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|childWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|testWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|childWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDisabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|childWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|grandChildWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDisabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|testWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|childWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|grandChildWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|grandChildWidget
operator|->
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|childWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|grandChildWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|grandChildWidget
operator|->
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|childWidget
operator|->
name|setDisabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|childWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|grandChildWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
operator|delete
name|testWidget
expr_stmt|;
block|}
end_function
begin_function
DECL|function|sizeHint
name|void
name|tst_QGroupBox
operator|::
name|sizeHint
parameter_list|()
block|{
name|QGroupBox
name|testWidget1
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|testWidget1
operator|.
name|setTitle
argument_list|(
literal|"&0&0&0&0&0&0&0&0&0&0"
argument_list|)
expr_stmt|;
name|QGroupBox
name|testWidget2
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|testWidget2
operator|.
name|setTitle
argument_list|(
literal|"0000000000"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget1
operator|.
name|sizeHint
argument_list|()
operator|.
name|width
argument_list|()
argument_list|,
name|testWidget2
operator|.
name|sizeHint
argument_list|()
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
comment|// if the above fails one should maybe test to see like underneath.
comment|// QVERIFY((QABS(testWidget1->sizeHint().width() - testWidget2->sizeHint().width())< 10));
block|}
end_function
begin_function
DECL|function|toggledHelperSlot
name|void
name|tst_QGroupBox
operator|::
name|toggledHelperSlot
parameter_list|(
name|bool
name|on
parameter_list|)
block|{
name|checked
operator|=
name|on
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toggled
name|void
name|tst_QGroupBox
operator|::
name|toggled
parameter_list|()
block|{
name|QGroupBox
name|testWidget1
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|testWidget1
operator|.
name|setCheckable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|connect
argument_list|(
operator|&
name|testWidget1
argument_list|,
name|SIGNAL
argument_list|(
name|toggled
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|toggledHelperSlot
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QLineEdit
modifier|*
name|edit
init|=
operator|new
name|QLineEdit
argument_list|(
operator|&
name|testWidget1
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|checked
argument_list|)
expr_stmt|;
name|testWidget1
operator|.
name|setChecked
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|checked
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|edit
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|testWidget1
operator|.
name|setChecked
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|checked
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|edit
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|clicked_data
name|void
name|tst_QGroupBox
operator|::
name|clicked_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"checkable"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"initialCheck"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"areaToHit"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"clickedCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"finalCheck"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"hit nothing, not checkable"
argument_list|)
operator|<<
literal|false
operator|<<
literal|false
operator|<<
name|int
argument_list|(
name|QStyle
operator|::
name|SC_None
argument_list|)
operator|<<
literal|0
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"hit frame, not checkable"
argument_list|)
operator|<<
literal|false
operator|<<
literal|false
operator|<<
name|int
argument_list|(
name|QStyle
operator|::
name|SC_GroupBoxFrame
argument_list|)
operator|<<
literal|0
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"hit content, not checkable"
argument_list|)
operator|<<
literal|false
operator|<<
literal|false
operator|<<
name|int
argument_list|(
name|QStyle
operator|::
name|SC_GroupBoxContents
argument_list|)
operator|<<
literal|0
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"hit label, not checkable"
argument_list|)
operator|<<
literal|false
operator|<<
literal|false
operator|<<
name|int
argument_list|(
name|QStyle
operator|::
name|SC_GroupBoxLabel
argument_list|)
operator|<<
literal|0
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"hit checkbox, not checkable"
argument_list|)
operator|<<
literal|false
operator|<<
literal|false
operator|<<
name|int
argument_list|(
name|QStyle
operator|::
name|SC_GroupBoxCheckBox
argument_list|)
operator|<<
literal|0
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"hit nothing, checkable"
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
operator|<<
name|int
argument_list|(
name|QStyle
operator|::
name|SC_None
argument_list|)
operator|<<
literal|0
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"hit frame, checkable"
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
operator|<<
name|int
argument_list|(
name|QStyle
operator|::
name|SC_GroupBoxFrame
argument_list|)
operator|<<
literal|0
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"hit content, checkable"
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
operator|<<
name|int
argument_list|(
name|QStyle
operator|::
name|SC_GroupBoxContents
argument_list|)
operator|<<
literal|0
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"hit label, checkable"
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
operator|<<
name|int
argument_list|(
name|QStyle
operator|::
name|SC_GroupBoxLabel
argument_list|)
operator|<<
literal|1
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"hit checkbox, checkable"
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
operator|<<
name|int
argument_list|(
name|QStyle
operator|::
name|SC_GroupBoxCheckBox
argument_list|)
operator|<<
literal|1
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"hit nothing, checkable, but unchecked"
argument_list|)
operator|<<
literal|true
operator|<<
literal|false
operator|<<
name|int
argument_list|(
name|QStyle
operator|::
name|SC_None
argument_list|)
operator|<<
literal|0
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"hit frame, checkable, but unchecked"
argument_list|)
operator|<<
literal|true
operator|<<
literal|false
operator|<<
name|int
argument_list|(
name|QStyle
operator|::
name|SC_GroupBoxFrame
argument_list|)
operator|<<
literal|0
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"hit content, checkable, but unchecked"
argument_list|)
operator|<<
literal|true
operator|<<
literal|false
operator|<<
name|int
argument_list|(
name|QStyle
operator|::
name|SC_GroupBoxContents
argument_list|)
operator|<<
literal|0
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"hit label, checkable, but unchecked"
argument_list|)
operator|<<
literal|true
operator|<<
literal|false
operator|<<
name|int
argument_list|(
name|QStyle
operator|::
name|SC_GroupBoxLabel
argument_list|)
operator|<<
literal|1
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"hit checkbox, checkable, but unchecked"
argument_list|)
operator|<<
literal|true
operator|<<
literal|false
operator|<<
name|int
argument_list|(
name|QStyle
operator|::
name|SC_GroupBoxCheckBox
argument_list|)
operator|<<
literal|1
operator|<<
literal|true
expr_stmt|;
block|}
end_function
begin_function
DECL|function|clicked
name|void
name|tst_QGroupBox
operator|::
name|clicked
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|checkable
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|initialCheck
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|areaToHit
argument_list|)
expr_stmt|;
name|QGroupBox
name|testWidget
argument_list|(
name|QLatin1String
argument_list|(
literal|"Testing Clicked"
argument_list|)
argument_list|)
decl_stmt|;
name|testWidget
operator|.
name|setCheckable
argument_list|(
name|checkable
argument_list|)
expr_stmt|;
name|testWidget
operator|.
name|setChecked
argument_list|(
name|initialCheck
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|.
name|isChecked
argument_list|()
argument_list|,
name|initialCheck
argument_list|)
expr_stmt|;
name|testWidget
operator|.
name|resize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|QSignalSpy
name|spy
argument_list|(
operator|&
name|testWidget
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QStyleOptionGroupBox
name|option
decl_stmt|;
name|option
operator|.
name|initFrom
argument_list|(
operator|&
name|testWidget
argument_list|)
expr_stmt|;
name|option
operator|.
name|subControls
operator|=
name|checkable
condition|?
name|QStyle
operator|::
name|SubControls
argument_list|(
name|QStyle
operator|::
name|SC_All
argument_list|)
else|:
name|QStyle
operator|::
name|SubControls
argument_list|(
name|QStyle
operator|::
name|SC_All
operator|&
operator|~
name|QStyle
operator|::
name|SC_GroupBoxCheckBox
argument_list|)
expr_stmt|;
name|option
operator|.
name|text
operator|=
name|testWidget
operator|.
name|title
argument_list|()
expr_stmt|;
name|option
operator|.
name|textAlignment
operator|=
name|testWidget
operator|.
name|alignment
argument_list|()
expr_stmt|;
name|QRect
name|rect
init|=
name|testWidget
operator|.
name|style
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|QStyle
operator|::
name|CC_GroupBox
argument_list|,
operator|&
name|option
argument_list|,
name|QStyle
operator|::
name|SubControl
argument_list|(
name|areaToHit
argument_list|)
argument_list|,
operator|&
name|testWidget
argument_list|)
decl_stmt|;
if|if
condition|(
name|rect
operator|.
name|isValid
argument_list|()
condition|)
name|QTest
operator|::
name|mouseClick
argument_list|(
operator|&
name|testWidget
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
literal|0
argument_list|,
name|rect
operator|.
name|center
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|QTest
operator|::
name|mouseClick
argument_list|(
operator|&
name|testWidget
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
name|QTEST
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|"clickedCount"
argument_list|)
expr_stmt|;
if|if
condition|(
name|spy
operator|.
name|count
argument_list|()
operator|>
literal|0
condition|)
name|QTEST
argument_list|(
name|spy
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|,
literal|"finalCheck"
argument_list|)
expr_stmt|;
name|QTEST
argument_list|(
name|testWidget
operator|.
name|isChecked
argument_list|()
argument_list|,
literal|"finalCheck"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toggledVsClicked
name|void
name|tst_QGroupBox
operator|::
name|toggledVsClicked
parameter_list|()
block|{
name|timeStamp
operator|=
name|clickTimeStamp
operator|=
name|toggleTimeStamp
operator|=
literal|0
expr_stmt|;
name|QGroupBox
name|groupBox
decl_stmt|;
name|groupBox
operator|.
name|setCheckable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QSignalSpy
name|toggleSpy
argument_list|(
operator|&
name|groupBox
argument_list|,
name|SIGNAL
argument_list|(
name|toggled
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|clickSpy
argument_list|(
operator|&
name|groupBox
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|groupBox
operator|.
name|setChecked
argument_list|(
operator|!
name|groupBox
operator|.
name|isChecked
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|clickSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|toggleSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
if|if
condition|(
name|toggleSpy
operator|.
name|count
argument_list|()
operator|>
literal|0
condition|)
name|QCOMPARE
argument_list|(
name|toggleSpy
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|,
name|groupBox
operator|.
name|isChecked
argument_list|()
argument_list|)
expr_stmt|;
name|connect
argument_list|(
operator|&
name|groupBox
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|clickTimestampSlot
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
operator|&
name|groupBox
argument_list|,
name|SIGNAL
argument_list|(
name|toggled
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|toggleTimestampSlot
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QStyleOptionGroupBox
name|option
decl_stmt|;
name|option
operator|.
name|initFrom
argument_list|(
operator|&
name|groupBox
argument_list|)
expr_stmt|;
name|option
operator|.
name|subControls
operator|=
name|QStyle
operator|::
name|SubControls
argument_list|(
name|QStyle
operator|::
name|SC_All
argument_list|)
expr_stmt|;
name|QRect
name|rect
init|=
name|groupBox
operator|.
name|style
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|QStyle
operator|::
name|CC_GroupBox
argument_list|,
operator|&
name|option
argument_list|,
name|QStyle
operator|::
name|SC_GroupBoxCheckBox
argument_list|,
operator|&
name|groupBox
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
operator|&
name|groupBox
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
literal|0
argument_list|,
name|rect
operator|.
name|center
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|clickSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|toggleSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|toggleTimeStamp
operator|<
name|clickTimeStamp
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|clickTimestampSlot
name|void
name|tst_QGroupBox
operator|::
name|clickTimestampSlot
parameter_list|()
block|{
name|clickTimeStamp
operator|=
operator|++
name|timeStamp
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toggleTimestampSlot
name|void
name|tst_QGroupBox
operator|::
name|toggleTimestampSlot
parameter_list|()
block|{
name|toggleTimeStamp
operator|=
operator|++
name|timeStamp
expr_stmt|;
block|}
end_function
begin_function
DECL|function|childrenAreDisabled
name|void
name|tst_QGroupBox
operator|::
name|childrenAreDisabled
parameter_list|()
block|{
name|QGroupBox
name|box
decl_stmt|;
name|box
operator|.
name|setCheckable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|box
operator|.
name|setChecked
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QVBoxLayout
modifier|*
name|layout
init|=
operator|new
name|QVBoxLayout
decl_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
operator|new
name|QRadioButton
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
operator|new
name|QRadioButton
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
operator|new
name|QRadioButton
argument_list|)
expr_stmt|;
name|box
operator|.
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
foreach|foreach
control|(
name|QObject
modifier|*
name|object
decl|,
name|box
operator|.
name|children
argument_list|()
control|)
block|{
if|if
condition|(
name|QWidget
modifier|*
name|widget
init|=
name|qobject_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
name|object
argument_list|)
condition|)
block|{
name|QVERIFY
argument_list|(
operator|!
name|widget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|widget
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_ForceDisabled
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|box
operator|.
name|setChecked
argument_list|(
literal|true
argument_list|)
expr_stmt|;
foreach|foreach
control|(
name|QObject
modifier|*
name|object
decl|,
name|box
operator|.
name|children
argument_list|()
control|)
block|{
if|if
condition|(
name|QWidget
modifier|*
name|widget
init|=
name|qobject_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
name|object
argument_list|)
condition|)
block|{
name|QVERIFY
argument_list|(
name|widget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|widget
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_ForceDisabled
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|box
operator|.
name|setChecked
argument_list|(
literal|false
argument_list|)
expr_stmt|;
foreach|foreach
control|(
name|QObject
modifier|*
name|object
decl|,
name|box
operator|.
name|children
argument_list|()
control|)
block|{
if|if
condition|(
name|QWidget
modifier|*
name|widget
init|=
name|qobject_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
name|object
argument_list|)
condition|)
block|{
name|QVERIFY
argument_list|(
operator|!
name|widget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|widget
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_ForceDisabled
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_function
begin_function
DECL|function|propagateFocus
name|void
name|tst_QGroupBox
operator|::
name|propagateFocus
parameter_list|()
block|{
name|QGroupBox
name|box
decl_stmt|;
name|QLineEdit
name|lineEdit
argument_list|(
operator|&
name|box
argument_list|)
decl_stmt|;
name|box
operator|.
name|show
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|box
argument_list|)
expr_stmt|;
name|box
operator|.
name|setFocus
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|250
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|qApp
operator|->
name|focusWidget
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
operator|&
name|lineEdit
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|task_QTBUG_19170_ignoreMouseReleseEvent
name|void
name|tst_QGroupBox
operator|::
name|task_QTBUG_19170_ignoreMouseReleseEvent
parameter_list|()
block|{
name|QGroupBox
name|box
decl_stmt|;
name|box
operator|.
name|setCheckable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|box
operator|.
name|setChecked
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|box
operator|.
name|setTitle
argument_list|(
literal|"This is a test for QTBUG-19170"
argument_list|)
expr_stmt|;
name|box
operator|.
name|show
argument_list|()
expr_stmt|;
name|QStyleOptionGroupBox
name|option
decl_stmt|;
name|option
operator|.
name|initFrom
argument_list|(
operator|&
name|box
argument_list|)
expr_stmt|;
name|option
operator|.
name|subControls
operator|=
name|QStyle
operator|::
name|SubControls
argument_list|(
name|QStyle
operator|::
name|SC_All
argument_list|)
expr_stmt|;
name|QRect
name|rect
init|=
name|box
operator|.
name|style
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|QStyle
operator|::
name|CC_GroupBox
argument_list|,
operator|&
name|option
argument_list|,
name|QStyle
operator|::
name|SC_GroupBoxCheckBox
argument_list|,
operator|&
name|box
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
operator|&
name|box
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
literal|0
argument_list|,
name|rect
operator|.
name|center
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|box
operator|.
name|isChecked
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|box
operator|.
name|setChecked
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseRelease
argument_list|(
operator|&
name|box
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
literal|0
argument_list|,
name|rect
operator|.
name|center
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|box
operator|.
name|isChecked
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QGroupBox
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qgroupbox.moc"
end_include
end_unit
