begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Copyright (C) 2014 KlarÃ¤lvdalens Datakonsult AB, a KDAB Group company, info@kdab.com, author Giuseppe D'Angelo<giuseppe.dangelo@kdab.com> ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QTest>
end_include
begin_include
include|#
directive|include
file|<QFrame>
end_include
begin_include
include|#
directive|include
file|<QStyleOptionFrame>
end_include
begin_include
include|#
directive|include
file|<QPixmap>
end_include
begin_include
include|#
directive|include
file|<QStyle>
end_include
begin_include
include|#
directive|include
file|<QStyleFactory>
end_include
begin_class
DECL|class|tst_QFrame
class|class
name|tst_QFrame
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
private|private
name|slots
private|:
name|void
name|testDefaults
parameter_list|()
function_decl|;
name|void
name|testInitStyleOption_data
parameter_list|()
function_decl|;
name|void
name|testInitStyleOption
parameter_list|()
function_decl|;
name|void
name|testPainting_data
parameter_list|()
function_decl|;
name|void
name|testPainting
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QFrame::Shape
argument_list|)
end_macro
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QFrame::Shadow
argument_list|)
end_macro
begin_function
DECL|function|testDefaults
name|void
name|tst_QFrame
operator|::
name|testDefaults
parameter_list|()
block|{
name|QFrame
name|frame
decl_stmt|;
name|QCOMPARE
argument_list|(
name|frame
operator|.
name|frameStyle
argument_list|()
argument_list|,
name|int
argument_list|(
name|QFrame
operator|::
name|NoFrame
operator||
name|QFrame
operator|::
name|Plain
argument_list|)
argument_list|)
expr_stmt|;
name|frame
operator|.
name|setFrameShape
argument_list|(
name|QFrame
operator|::
name|Box
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|frame
operator|.
name|frameStyle
argument_list|()
argument_list|,
name|int
argument_list|(
name|QFrame
operator|::
name|Box
operator||
name|QFrame
operator|::
name|Plain
argument_list|)
argument_list|)
expr_stmt|;
name|frame
operator|.
name|setFrameStyle
argument_list|(
name|QFrame
operator|::
name|Box
argument_list|)
expr_stmt|;
comment|// no shadow specified!
name|QCOMPARE
argument_list|(
name|frame
operator|.
name|frameStyle
argument_list|()
argument_list|,
name|int
argument_list|(
name|QFrame
operator|::
name|Box
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|provideFrameData
specifier|static
name|void
name|provideFrameData
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"basename"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"lineWidth"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"midLineWidth"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QFrame
operator|::
name|Shape
argument_list|>
argument_list|(
literal|"shape"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QFrame
operator|::
name|Shadow
argument_list|>
argument_list|(
literal|"shadow"
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|lineWidth
init|=
literal|0
init|;
name|lineWidth
operator|<
literal|3
condition|;
operator|++
name|lineWidth
control|)
block|{
for|for
control|(
name|int
name|midLineWidth
init|=
literal|0
init|;
name|midLineWidth
operator|<
literal|3
condition|;
operator|++
name|midLineWidth
control|)
block|{
name|QTest
operator|::
name|newRow
argument_list|(
name|qPrintable
argument_list|(
name|QStringLiteral
argument_list|(
literal|"box_noshadow_%1_%2"
argument_list|)
operator|.
name|arg
argument_list|(
name|lineWidth
argument_list|)
operator|.
name|arg
argument_list|(
name|midLineWidth
argument_list|)
argument_list|)
argument_list|)
operator|<<
literal|"box_noshadow"
operator|<<
name|lineWidth
operator|<<
name|midLineWidth
operator|<<
name|QFrame
operator|::
name|Box
operator|<<
operator|(
name|QFrame
operator|::
name|Shadow
operator|)
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|qPrintable
argument_list|(
name|QStringLiteral
argument_list|(
literal|"box_plain_%1_%2"
argument_list|)
operator|.
name|arg
argument_list|(
name|lineWidth
argument_list|)
operator|.
name|arg
argument_list|(
name|midLineWidth
argument_list|)
argument_list|)
argument_list|)
operator|<<
literal|"box_plain"
operator|<<
name|lineWidth
operator|<<
name|midLineWidth
operator|<<
name|QFrame
operator|::
name|Box
operator|<<
name|QFrame
operator|::
name|Plain
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|qPrintable
argument_list|(
name|QStringLiteral
argument_list|(
literal|"box_raised_%1_%2"
argument_list|)
operator|.
name|arg
argument_list|(
name|lineWidth
argument_list|)
operator|.
name|arg
argument_list|(
name|midLineWidth
argument_list|)
argument_list|)
argument_list|)
operator|<<
literal|"box_raised"
operator|<<
name|lineWidth
operator|<<
name|midLineWidth
operator|<<
name|QFrame
operator|::
name|Box
operator|<<
name|QFrame
operator|::
name|Raised
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|qPrintable
argument_list|(
name|QStringLiteral
argument_list|(
literal|"box_sunken_%1_%2"
argument_list|)
operator|.
name|arg
argument_list|(
name|lineWidth
argument_list|)
operator|.
name|arg
argument_list|(
name|midLineWidth
argument_list|)
argument_list|)
argument_list|)
operator|<<
literal|"box_sunken"
operator|<<
name|lineWidth
operator|<<
name|midLineWidth
operator|<<
name|QFrame
operator|::
name|Box
operator|<<
name|QFrame
operator|::
name|Sunken
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|qPrintable
argument_list|(
name|QStringLiteral
argument_list|(
literal|"winpanel_noshadow_%1_%2"
argument_list|)
operator|.
name|arg
argument_list|(
name|lineWidth
argument_list|)
operator|.
name|arg
argument_list|(
name|midLineWidth
argument_list|)
argument_list|)
argument_list|)
operator|<<
literal|"winpanel_noshadow"
operator|<<
name|lineWidth
operator|<<
name|midLineWidth
operator|<<
name|QFrame
operator|::
name|WinPanel
operator|<<
operator|(
name|QFrame
operator|::
name|Shadow
operator|)
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|qPrintable
argument_list|(
name|QStringLiteral
argument_list|(
literal|"winpanel_plain_%1_%2"
argument_list|)
operator|.
name|arg
argument_list|(
name|lineWidth
argument_list|)
operator|.
name|arg
argument_list|(
name|midLineWidth
argument_list|)
argument_list|)
argument_list|)
operator|<<
literal|"winpanel_plain"
operator|<<
name|lineWidth
operator|<<
name|midLineWidth
operator|<<
name|QFrame
operator|::
name|WinPanel
operator|<<
name|QFrame
operator|::
name|Plain
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|qPrintable
argument_list|(
name|QStringLiteral
argument_list|(
literal|"winpanel_raised_%1_%2"
argument_list|)
operator|.
name|arg
argument_list|(
name|lineWidth
argument_list|)
operator|.
name|arg
argument_list|(
name|midLineWidth
argument_list|)
argument_list|)
argument_list|)
operator|<<
literal|"winpanel_raised"
operator|<<
name|lineWidth
operator|<<
name|midLineWidth
operator|<<
name|QFrame
operator|::
name|WinPanel
operator|<<
name|QFrame
operator|::
name|Raised
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|qPrintable
argument_list|(
name|QStringLiteral
argument_list|(
literal|"winpanel_sunken_%1_%2"
argument_list|)
operator|.
name|arg
argument_list|(
name|lineWidth
argument_list|)
operator|.
name|arg
argument_list|(
name|midLineWidth
argument_list|)
argument_list|)
argument_list|)
operator|<<
literal|"winpanel_sunken"
operator|<<
name|lineWidth
operator|<<
name|midLineWidth
operator|<<
name|QFrame
operator|::
name|WinPanel
operator|<<
name|QFrame
operator|::
name|Sunken
expr_stmt|;
block|}
block|}
block|}
end_function
begin_class
DECL|class|Frame
class|class
name|Frame
super|:
specifier|public
name|QFrame
block|{
public|public:
using|using
name|QFrame
operator|::
name|initStyleOption
using|;
block|}
class|;
end_class
begin_function
DECL|function|testInitStyleOption_data
name|void
name|tst_QFrame
operator|::
name|testInitStyleOption_data
parameter_list|()
block|{
name|provideFrameData
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testInitStyleOption
name|void
name|tst_QFrame
operator|::
name|testInitStyleOption
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|basename
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|lineWidth
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|midLineWidth
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QFrame
operator|::
name|Shape
argument_list|,
name|shape
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QFrame
operator|::
name|Shadow
argument_list|,
name|shadow
argument_list|)
expr_stmt|;
name|Frame
name|frame
decl_stmt|;
name|frame
operator|.
name|setFrameStyle
argument_list|(
name|shape
operator||
name|shadow
argument_list|)
expr_stmt|;
name|frame
operator|.
name|setLineWidth
argument_list|(
name|lineWidth
argument_list|)
expr_stmt|;
name|frame
operator|.
name|setMidLineWidth
argument_list|(
name|midLineWidth
argument_list|)
expr_stmt|;
name|frame
operator|.
name|resize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
expr_stmt|;
name|QStyleOptionFrame
name|styleOption
decl_stmt|;
name|frame
operator|.
name|initStyleOption
argument_list|(
operator|&
name|styleOption
argument_list|)
expr_stmt|;
switch|switch
condition|(
name|shape
condition|)
block|{
case|case
name|QFrame
operator|::
name|Box
case|:
case|case
name|QFrame
operator|::
name|Panel
case|:
case|case
name|QFrame
operator|::
name|StyledPanel
case|:
case|case
name|QFrame
operator|::
name|HLine
case|:
case|case
name|QFrame
operator|::
name|VLine
case|:
name|QCOMPARE
argument_list|(
name|styleOption
operator|.
name|lineWidth
argument_list|,
name|lineWidth
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|styleOption
operator|.
name|midLineWidth
argument_list|,
name|midLineWidth
argument_list|)
expr_stmt|;
break|break;
case|case
name|QFrame
operator|::
name|NoFrame
case|:
case|case
name|QFrame
operator|::
name|WinPanel
case|:
name|QCOMPARE
argument_list|(
name|styleOption
operator|.
name|lineWidth
argument_list|,
name|frame
operator|.
name|frameWidth
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|styleOption
operator|.
name|midLineWidth
argument_list|,
literal|0
argument_list|)
expr_stmt|;
break|break;
block|}
name|QCOMPARE
argument_list|(
name|styleOption
operator|.
name|features
argument_list|,
name|QStyleOptionFrame
operator|::
name|None
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|styleOption
operator|.
name|frameShape
argument_list|,
name|shape
argument_list|)
expr_stmt|;
if|if
condition|(
name|shadow
operator|==
name|QFrame
operator|::
name|Sunken
condition|)
name|QVERIFY
argument_list|(
name|styleOption
operator|.
name|state
operator|&
name|QStyle
operator|::
name|State_Sunken
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|shadow
operator|==
name|QFrame
operator|::
name|Raised
condition|)
name|QVERIFY
argument_list|(
name|styleOption
operator|.
name|state
operator|&
name|QStyle
operator|::
name|State_Raised
argument_list|)
expr_stmt|;
block|}
end_function
begin_function_decl
name|QT_BEGIN_NAMESPACE
name|Q_GUI_EXPORT
name|QPalette
name|qt_fusionPalette
parameter_list|()
function_decl|;
end_function_decl
begin_function
name|QT_END_NAMESPACE
DECL|function|testPainting_data
name|void
name|tst_QFrame
operator|::
name|testPainting_data
parameter_list|()
block|{
name|provideFrameData
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testPainting
name|void
name|tst_QFrame
operator|::
name|testPainting
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|basename
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|lineWidth
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|midLineWidth
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QFrame
operator|::
name|Shape
argument_list|,
name|shape
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QFrame
operator|::
name|Shadow
argument_list|,
name|shadow
argument_list|)
expr_stmt|;
name|QFrame
name|frame
decl_stmt|;
name|frame
operator|.
name|setStyle
argument_list|(
name|QStyleFactory
operator|::
name|create
argument_list|(
name|QStringLiteral
argument_list|(
literal|"fusion"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|frame
operator|.
name|setPalette
argument_list|(
name|qt_fusionPalette
argument_list|()
argument_list|)
expr_stmt|;
name|frame
operator|.
name|setFrameStyle
argument_list|(
name|shape
operator||
name|shadow
argument_list|)
expr_stmt|;
name|frame
operator|.
name|setLineWidth
argument_list|(
name|lineWidth
argument_list|)
expr_stmt|;
name|frame
operator|.
name|setMidLineWidth
argument_list|(
name|midLineWidth
argument_list|)
expr_stmt|;
name|frame
operator|.
name|resize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
expr_stmt|;
specifier|const
name|QPixmap
name|pixmap
init|=
name|frame
operator|.
name|grab
argument_list|()
decl_stmt|;
specifier|const
name|QString
name|referenceFilePath
init|=
name|QFINDTESTDATA
argument_list|(
name|QStringLiteral
argument_list|(
literal|"images/%1_%2_%3.png"
argument_list|)
operator|.
name|arg
argument_list|(
name|basename
argument_list|)
operator|.
name|arg
argument_list|(
name|lineWidth
argument_list|)
operator|.
name|arg
argument_list|(
name|midLineWidth
argument_list|)
argument_list|)
decl_stmt|;
specifier|const
name|QPixmap
name|referencePixmap
argument_list|(
name|referenceFilePath
argument_list|)
decl_stmt|;
name|QVERIFY2
argument_list|(
operator|!
name|referencePixmap
operator|.
name|isNull
argument_list|()
argument_list|,
name|qPrintable
argument_list|(
name|QStringLiteral
argument_list|(
literal|"Could not load reference pixmap %1"
argument_list|)
operator|.
name|arg
argument_list|(
name|referenceFilePath
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|pixmap
argument_list|,
name|referencePixmap
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QFrame
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qframe.moc"
end_include
end_unit
