begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<qdebug.h>
end_include
begin_include
include|#
directive|include
file|<qapplication.h>
end_include
begin_include
include|#
directive|include
file|<limits.h>
end_include
begin_include
include|#
directive|include
file|<qspinbox.h>
end_include
begin_include
include|#
directive|include
file|<qlocale.h>
end_include
begin_include
include|#
directive|include
file|<qlineedit.h>
end_include
begin_include
include|#
directive|include
file|<qlayout.h>
end_include
begin_include
include|#
directive|include
file|<QSpinBox>
end_include
begin_include
include|#
directive|include
file|<QWidget>
end_include
begin_include
include|#
directive|include
file|<QString>
end_include
begin_include
include|#
directive|include
file|<QValidator>
end_include
begin_include
include|#
directive|include
file|<QLineEdit>
end_include
begin_include
include|#
directive|include
file|<QObject>
end_include
begin_include
include|#
directive|include
file|<QStringList>
end_include
begin_include
include|#
directive|include
file|<QList>
end_include
begin_include
include|#
directive|include
file|<QLocale>
end_include
begin_include
include|#
directive|include
file|<QDoubleSpinBox>
end_include
begin_include
include|#
directive|include
file|<QVBoxLayout>
end_include
begin_include
include|#
directive|include
file|<QKeySequence>
end_include
begin_include
include|#
directive|include
file|<QStackedWidget>
end_include
begin_include
include|#
directive|include
file|<QDebug>
end_include
begin_class
DECL|class|SpinBox
class|class
name|SpinBox
super|:
specifier|public
name|QSpinBox
block|{
public|public:
DECL|function|SpinBox
name|SpinBox
parameter_list|(
name|QWidget
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QSpinBox
argument_list|(
name|parent
argument_list|)
block|{}
DECL|function|textFromValue
name|QString
name|textFromValue
parameter_list|(
name|int
name|v
parameter_list|)
specifier|const
block|{
return|return
name|QSpinBox
operator|::
name|textFromValue
argument_list|(
name|v
argument_list|)
return|;
block|}
DECL|function|validate
name|QValidator
operator|::
name|State
name|validate
parameter_list|(
name|QString
modifier|&
name|text
parameter_list|,
name|int
modifier|&
name|pos
parameter_list|)
specifier|const
block|{
return|return
name|QSpinBox
operator|::
name|validate
argument_list|(
name|text
argument_list|,
name|pos
argument_list|)
return|;
block|}
DECL|function|valueFromText
name|int
name|valueFromText
parameter_list|(
specifier|const
name|QString
modifier|&
name|text
parameter_list|)
specifier|const
block|{
return|return
name|QSpinBox
operator|::
name|valueFromText
argument_list|(
name|text
argument_list|)
return|;
block|}
DECL|function|lineEdit
name|QLineEdit
modifier|*
name|lineEdit
parameter_list|()
specifier|const
block|{
return|return
name|QSpinBox
operator|::
name|lineEdit
argument_list|()
return|;
block|}
block|}
class|;
end_class
begin_class
DECL|class|tst_QSpinBox
class|class
name|tst_QSpinBox
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
name|tst_QSpinBox
parameter_list|()
constructor_decl|;
public|public
name|slots
public|:
name|void
name|init
parameter_list|()
function_decl|;
private|private
name|slots
private|:
name|void
name|getSetCheck
parameter_list|()
function_decl|;
name|void
name|setValue_data
parameter_list|()
function_decl|;
name|void
name|setValue
parameter_list|()
function_decl|;
name|void
name|setDisplayIntegerBase_data
parameter_list|()
function_decl|;
name|void
name|setDisplayIntegerBase
parameter_list|()
function_decl|;
name|void
name|setPrefixSuffix_data
parameter_list|()
function_decl|;
name|void
name|setPrefixSuffix
parameter_list|()
function_decl|;
name|void
name|setReadOnly
parameter_list|()
function_decl|;
name|void
name|setTracking_data
parameter_list|()
function_decl|;
name|void
name|setTracking
parameter_list|()
function_decl|;
name|void
name|locale_data
parameter_list|()
function_decl|;
name|void
name|locale
parameter_list|()
function_decl|;
name|void
name|setWrapping_data
parameter_list|()
function_decl|;
name|void
name|setWrapping
parameter_list|()
function_decl|;
name|void
name|setSpecialValueText_data
parameter_list|()
function_decl|;
name|void
name|setSpecialValueText
parameter_list|()
function_decl|;
name|void
name|setSingleStep_data
parameter_list|()
function_decl|;
name|void
name|setSingleStep
parameter_list|()
function_decl|;
name|void
name|setMinMax_data
parameter_list|()
function_decl|;
name|void
name|setMinMax
parameter_list|()
function_decl|;
name|void
name|editingFinished
parameter_list|()
function_decl|;
name|void
name|valueFromTextAndValidate_data
parameter_list|()
function_decl|;
name|void
name|valueFromTextAndValidate
parameter_list|()
function_decl|;
name|void
name|removeAll
parameter_list|()
function_decl|;
name|void
name|startWithDash
parameter_list|()
function_decl|;
name|void
name|undoRedo
parameter_list|()
function_decl|;
name|void
name|specialValue
parameter_list|()
function_decl|;
name|void
name|textFromValue
parameter_list|()
function_decl|;
name|void
name|sizeHint
parameter_list|()
function_decl|;
name|void
name|integerOverflow
parameter_list|()
function_decl|;
name|void
name|taskQTBUG_5008_textFromValueAndValidate
parameter_list|()
function_decl|;
name|void
name|lineEditReturnPressed
parameter_list|()
function_decl|;
name|void
name|setGroupSeparatorShown_data
parameter_list|()
function_decl|;
name|void
name|setGroupSeparatorShown
parameter_list|()
function_decl|;
public|public
name|slots
public|:
name|void
name|valueChangedHelper
parameter_list|(
specifier|const
name|QString
modifier|&
parameter_list|)
function_decl|;
name|void
name|valueChangedHelper
parameter_list|(
name|int
parameter_list|)
function_decl|;
private|private:
DECL|member|actualTexts
name|QStringList
name|actualTexts
decl_stmt|;
DECL|member|actualValues
name|QList
argument_list|<
name|int
argument_list|>
name|actualValues
decl_stmt|;
block|}
class|;
end_class
begin_typedef
DECL|typedef|IntList
typedef|typedef
name|QList
argument_list|<
name|int
argument_list|>
name|IntList
typedef|;
end_typedef
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QLocale::Language
argument_list|)
end_macro
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QLocale::Country
argument_list|)
end_macro
begin_comment
comment|// Testing get/set functions
end_comment
begin_function
DECL|function|getSetCheck
name|void
name|tst_QSpinBox
operator|::
name|getSetCheck
parameter_list|()
block|{
name|QSpinBox
name|obj1
decl_stmt|;
comment|// int QSpinBox::singleStep()
comment|// void QSpinBox::setSingleStep(int)
name|obj1
operator|.
name|setSingleStep
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|0
argument_list|,
name|obj1
operator|.
name|singleStep
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setSingleStep
argument_list|(
name|INT_MIN
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|0
argument_list|,
name|obj1
operator|.
name|singleStep
argument_list|()
argument_list|)
expr_stmt|;
comment|// Can't have negative steps => keep old value
name|obj1
operator|.
name|setSingleStep
argument_list|(
name|INT_MAX
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|INT_MAX
argument_list|,
name|obj1
operator|.
name|singleStep
argument_list|()
argument_list|)
expr_stmt|;
comment|// int QSpinBox::minimum()
comment|// void QSpinBox::setMinimum(int)
name|obj1
operator|.
name|setMinimum
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|0
argument_list|,
name|obj1
operator|.
name|minimum
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setMinimum
argument_list|(
name|INT_MIN
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|INT_MIN
argument_list|,
name|obj1
operator|.
name|minimum
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setMinimum
argument_list|(
name|INT_MAX
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|INT_MAX
argument_list|,
name|obj1
operator|.
name|minimum
argument_list|()
argument_list|)
expr_stmt|;
comment|// int QSpinBox::maximum()
comment|// void QSpinBox::setMaximum(int)
name|obj1
operator|.
name|setMaximum
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|0
argument_list|,
name|obj1
operator|.
name|maximum
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setMaximum
argument_list|(
name|INT_MIN
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|INT_MIN
argument_list|,
name|obj1
operator|.
name|maximum
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setMaximum
argument_list|(
name|INT_MAX
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|INT_MAX
argument_list|,
name|obj1
operator|.
name|maximum
argument_list|()
argument_list|)
expr_stmt|;
comment|// int QSpinBox::value()
comment|// void QSpinBox::setValue(int)
name|obj1
operator|.
name|setValue
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|0
argument_list|,
name|obj1
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setValue
argument_list|(
name|INT_MIN
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|INT_MIN
argument_list|,
name|obj1
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setValue
argument_list|(
name|INT_MAX
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|INT_MAX
argument_list|,
name|obj1
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
name|QDoubleSpinBox
name|obj2
decl_stmt|;
comment|// double QDoubleSpinBox::singleStep()
comment|// void QDoubleSpinBox::setSingleStep(double)
name|obj2
operator|.
name|setSingleStep
argument_list|(
literal|0.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|0.0
argument_list|,
name|obj2
operator|.
name|singleStep
argument_list|()
argument_list|)
expr_stmt|;
name|obj2
operator|.
name|setSingleStep
argument_list|(
literal|1.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|1.0
argument_list|,
name|obj2
operator|.
name|singleStep
argument_list|()
argument_list|)
expr_stmt|;
comment|// double QDoubleSpinBox::minimum()
comment|// void QDoubleSpinBox::setMinimum(double)
name|obj2
operator|.
name|setMinimum
argument_list|(
literal|1.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|1.0
argument_list|,
name|obj2
operator|.
name|minimum
argument_list|()
argument_list|)
expr_stmt|;
name|obj2
operator|.
name|setMinimum
argument_list|(
literal|0.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|0.0
argument_list|,
name|obj2
operator|.
name|minimum
argument_list|()
argument_list|)
expr_stmt|;
name|obj2
operator|.
name|setMinimum
argument_list|(
operator|-
literal|1.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
operator|-
literal|1.0
argument_list|,
name|obj2
operator|.
name|minimum
argument_list|()
argument_list|)
expr_stmt|;
comment|// double QDoubleSpinBox::maximum()
comment|// void QDoubleSpinBox::setMaximum(double)
name|obj2
operator|.
name|setMaximum
argument_list|(
operator|-
literal|1.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
operator|-
literal|1.0
argument_list|,
name|obj2
operator|.
name|maximum
argument_list|()
argument_list|)
expr_stmt|;
name|obj2
operator|.
name|setMaximum
argument_list|(
literal|0.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|0.0
argument_list|,
name|obj2
operator|.
name|maximum
argument_list|()
argument_list|)
expr_stmt|;
name|obj2
operator|.
name|setMaximum
argument_list|(
literal|1.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|1.0
argument_list|,
name|obj2
operator|.
name|maximum
argument_list|()
argument_list|)
expr_stmt|;
comment|// int QDoubleSpinBox::decimals()
comment|// void QDoubleSpinBox::setDecimals(int)
name|obj2
operator|.
name|setDecimals
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|0
argument_list|,
name|obj2
operator|.
name|decimals
argument_list|()
argument_list|)
expr_stmt|;
name|obj2
operator|.
name|setDecimals
argument_list|(
name|INT_MIN
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|0
argument_list|,
name|obj2
operator|.
name|decimals
argument_list|()
argument_list|)
expr_stmt|;
comment|// Range<0, 13>
comment|//obj2.setDecimals(INT_MAX);
comment|//QCOMPARE(13, obj2.decimals()); // Range<0, 13>
name|obj2
operator|.
name|setDecimals
argument_list|(
literal|128
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj2
operator|.
name|decimals
argument_list|()
argument_list|,
literal|128
argument_list|)
expr_stmt|;
comment|// Range<0, 128>
comment|// double QDoubleSpinBox::value()
comment|// void QDoubleSpinBox::setValue(double)
name|obj2
operator|.
name|setValue
argument_list|(
operator|-
literal|1.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
operator|-
literal|1.0
argument_list|,
name|obj2
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
name|obj2
operator|.
name|setValue
argument_list|(
literal|0.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|0.0
argument_list|,
name|obj2
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
name|obj2
operator|.
name|setValue
argument_list|(
literal|1.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|1.0
argument_list|,
name|obj2
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
comment|// Make sure we update line edit geometry when updating
comment|// buttons - see task 235747
name|QRect
name|oldEditGeometry
init|=
name|obj1
operator|.
name|childrenRect
argument_list|()
decl_stmt|;
name|obj1
operator|.
name|setButtonSymbols
argument_list|(
name|QAbstractSpinBox
operator|::
name|NoButtons
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|obj1
operator|.
name|childrenRect
argument_list|()
operator|!=
name|oldEditGeometry
argument_list|)
expr_stmt|;
block|}
end_function
begin_constructor
DECL|function|tst_QSpinBox
name|tst_QSpinBox
operator|::
name|tst_QSpinBox
parameter_list|()
block|{ }
end_constructor
begin_function
DECL|function|init
name|void
name|tst_QSpinBox
operator|::
name|init
parameter_list|()
block|{
name|QLocale
operator|::
name|setDefault
argument_list|(
name|QLocale
argument_list|(
name|QLocale
operator|::
name|C
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setValue_data
name|void
name|tst_QSpinBox
operator|::
name|setValue_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"set"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expected"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data0"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data1"
argument_list|)
operator|<<
literal|100
operator|<<
literal|100
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data2"
argument_list|)
operator|<<
operator|-
literal|100
operator|<<
operator|-
literal|100
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data3"
argument_list|)
operator|<<
name|INT_MIN
operator|<<
name|INT_MIN
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data4"
argument_list|)
operator|<<
name|INT_MAX
operator|<<
name|INT_MAX
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setValue
name|void
name|tst_QSpinBox
operator|::
name|setValue
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|set
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expected
argument_list|)
expr_stmt|;
name|QSpinBox
name|spin
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|spin
operator|.
name|setRange
argument_list|(
name|INT_MIN
argument_list|,
name|INT_MAX
argument_list|)
expr_stmt|;
name|spin
operator|.
name|setValue
argument_list|(
name|set
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spin
operator|.
name|value
argument_list|()
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setDisplayIntegerBase_data
name|void
name|tst_QSpinBox
operator|::
name|setDisplayIntegerBase_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"value"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"base"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"string"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"base 10"
argument_list|)
operator|<<
literal|42
operator|<<
literal|10
operator|<<
literal|"42"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"base 2"
argument_list|)
operator|<<
literal|42
operator|<<
literal|2
operator|<<
literal|"101010"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"base 8"
argument_list|)
operator|<<
literal|42
operator|<<
literal|8
operator|<<
literal|"52"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"base 16"
argument_list|)
operator|<<
literal|42
operator|<<
literal|16
operator|<<
literal|"2a"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"base 0"
argument_list|)
operator|<<
literal|42
operator|<<
literal|0
operator|<<
literal|"42"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"base -4"
argument_list|)
operator|<<
literal|42
operator|<<
operator|-
literal|4
operator|<<
literal|"42"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"base 40"
argument_list|)
operator|<<
literal|42
operator|<<
literal|40
operator|<<
literal|"42"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"negative base 10"
argument_list|)
operator|<<
operator|-
literal|42
operator|<<
literal|10
operator|<<
literal|"-42"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"negative base 2"
argument_list|)
operator|<<
operator|-
literal|42
operator|<<
literal|2
operator|<<
literal|"-101010"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"negative base 8"
argument_list|)
operator|<<
operator|-
literal|42
operator|<<
literal|8
operator|<<
literal|"-52"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"negative base 16"
argument_list|)
operator|<<
operator|-
literal|42
operator|<<
literal|16
operator|<<
literal|"-2a"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"negative base 0"
argument_list|)
operator|<<
operator|-
literal|42
operator|<<
literal|0
operator|<<
literal|"-42"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"negative base -4"
argument_list|)
operator|<<
operator|-
literal|42
operator|<<
operator|-
literal|4
operator|<<
literal|"-42"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"negative base 40"
argument_list|)
operator|<<
operator|-
literal|42
operator|<<
literal|40
operator|<<
literal|"-42"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0 base 10"
argument_list|)
operator|<<
literal|0
operator|<<
literal|10
operator|<<
literal|"0"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0 base 2"
argument_list|)
operator|<<
literal|0
operator|<<
literal|2
operator|<<
literal|"0"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0 base 8"
argument_list|)
operator|<<
literal|0
operator|<<
literal|8
operator|<<
literal|"0"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0 base 16"
argument_list|)
operator|<<
literal|0
operator|<<
literal|16
operator|<<
literal|"0"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0 base 0"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|"0"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0 base -4"
argument_list|)
operator|<<
literal|0
operator|<<
operator|-
literal|4
operator|<<
literal|"0"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0 base 40"
argument_list|)
operator|<<
literal|0
operator|<<
literal|40
operator|<<
literal|"0"
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setDisplayIntegerBase
name|void
name|tst_QSpinBox
operator|::
name|setDisplayIntegerBase
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|base
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|string
argument_list|)
expr_stmt|;
name|SpinBox
name|spin
decl_stmt|;
name|spin
operator|.
name|setRange
argument_list|(
name|INT_MIN
argument_list|,
name|INT_MAX
argument_list|)
expr_stmt|;
name|spin
operator|.
name|setValue
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spin
operator|.
name|lineEdit
argument_list|()
operator|->
name|text
argument_list|()
argument_list|,
name|QString
operator|::
name|number
argument_list|(
name|value
argument_list|)
argument_list|)
expr_stmt|;
name|spin
operator|.
name|setDisplayIntegerBase
argument_list|(
name|base
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spin
operator|.
name|lineEdit
argument_list|()
operator|->
name|text
argument_list|()
argument_list|,
name|string
argument_list|)
expr_stmt|;
name|spin
operator|.
name|setValue
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spin
operator|.
name|value
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spin
operator|.
name|lineEdit
argument_list|()
operator|->
name|text
argument_list|()
argument_list|,
name|QString
operator|::
name|number
argument_list|(
literal|0
argument_list|,
name|base
argument_list|)
argument_list|)
expr_stmt|;
name|spin
operator|.
name|lineEdit
argument_list|()
operator|->
name|clear
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|keyClicks
argument_list|(
name|spin
operator|.
name|lineEdit
argument_list|()
argument_list|,
name|string
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spin
operator|.
name|value
argument_list|()
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setPrefixSuffix_data
name|void
name|tst_QSpinBox
operator|::
name|setPrefixSuffix_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"prefix"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"suffix"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"value"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"expectedText"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"expectedCleanText"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"show"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data0"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
name|QString
argument_list|()
operator|<<
literal|10
operator|<<
literal|"10"
operator|<<
literal|"10"
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data1"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
literal|"cm"
operator|<<
literal|10
operator|<<
literal|"10cm"
operator|<<
literal|"10"
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data2"
argument_list|)
operator|<<
literal|"cm: "
operator|<<
name|QString
argument_list|()
operator|<<
literal|10
operator|<<
literal|"cm: 10"
operator|<<
literal|"10"
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data3"
argument_list|)
operator|<<
literal|"length: "
operator|<<
literal|"cm"
operator|<<
literal|10
operator|<<
literal|"length: 10cm"
operator|<<
literal|"10"
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data4"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
name|QString
argument_list|()
operator|<<
literal|10
operator|<<
literal|"10"
operator|<<
literal|"10"
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data5"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
literal|"cm"
operator|<<
literal|10
operator|<<
literal|"10cm"
operator|<<
literal|"10"
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data6"
argument_list|)
operator|<<
literal|"cm: "
operator|<<
name|QString
argument_list|()
operator|<<
literal|10
operator|<<
literal|"cm: 10"
operator|<<
literal|"10"
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data7"
argument_list|)
operator|<<
literal|"length: "
operator|<<
literal|"cm"
operator|<<
literal|10
operator|<<
literal|"length: 10cm"
operator|<<
literal|"10"
operator|<<
literal|true
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setPrefixSuffix
name|void
name|tst_QSpinBox
operator|::
name|setPrefixSuffix
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|prefix
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|suffix
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|expectedText
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|expectedCleanText
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|show
argument_list|)
expr_stmt|;
name|QSpinBox
name|spin
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|spin
operator|.
name|setPrefix
argument_list|(
name|prefix
argument_list|)
expr_stmt|;
name|spin
operator|.
name|setSuffix
argument_list|(
name|suffix
argument_list|)
expr_stmt|;
name|spin
operator|.
name|setValue
argument_list|(
name|value
argument_list|)
expr_stmt|;
if|if
condition|(
name|show
condition|)
name|spin
operator|.
name|show
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spin
operator|.
name|prefix
argument_list|()
argument_list|,
name|prefix
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spin
operator|.
name|suffix
argument_list|()
argument_list|,
name|suffix
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spin
operator|.
name|text
argument_list|()
argument_list|,
name|expectedText
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spin
operator|.
name|cleanText
argument_list|()
argument_list|,
name|expectedCleanText
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|valueChangedHelper
name|void
name|tst_QSpinBox
operator|::
name|valueChangedHelper
parameter_list|(
specifier|const
name|QString
modifier|&
name|text
parameter_list|)
block|{
name|actualTexts
operator|<<
name|text
expr_stmt|;
block|}
end_function
begin_function
DECL|function|valueChangedHelper
name|void
name|tst_QSpinBox
operator|::
name|valueChangedHelper
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|actualValues
operator|<<
name|value
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setReadOnly
name|void
name|tst_QSpinBox
operator|::
name|setReadOnly
parameter_list|()
block|{
name|QSpinBox
name|spin
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|spin
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|spin
argument_list|,
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spin
operator|.
name|value
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|spin
operator|.
name|setReadOnly
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|spin
argument_list|,
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spin
operator|.
name|value
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|spin
operator|.
name|stepBy
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spin
operator|.
name|value
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|spin
operator|.
name|setReadOnly
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|spin
argument_list|,
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spin
operator|.
name|value
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setTracking_data
name|void
name|tst_QSpinBox
operator|::
name|setTracking_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QTestEventList
argument_list|>
argument_list|(
literal|"keys"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QStringList
argument_list|>
argument_list|(
literal|"texts"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"tracking"
argument_list|)
expr_stmt|;
name|QTestEventList
name|keys
decl_stmt|;
name|QStringList
name|texts1
decl_stmt|;
name|QStringList
name|texts2
decl_stmt|;
ifdef|#
directive|ifdef
name|Q_OS_MAC
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Right
argument_list|,
name|Qt
operator|::
name|ControlModifier
argument_list|)
expr_stmt|;
else|#
directive|else
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_End
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|keys
operator|.
name|addKeyClick
argument_list|(
literal|'7'
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
literal|'9'
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Enter
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Enter
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Enter
argument_list|)
expr_stmt|;
name|texts1
operator|<<
literal|"07"
operator|<<
literal|"079"
operator|<<
literal|"79"
operator|<<
literal|"79"
operator|<<
literal|"79"
expr_stmt|;
name|texts2
operator|<<
literal|"79"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data1"
argument_list|)
operator|<<
name|keys
operator|<<
name|texts1
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data2"
argument_list|)
operator|<<
name|keys
operator|<<
name|texts2
operator|<<
literal|false
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setTracking
name|void
name|tst_QSpinBox
operator|::
name|setTracking
parameter_list|()
block|{
name|actualTexts
operator|.
name|clear
argument_list|()
expr_stmt|;
name|QFETCH
argument_list|(
name|QTestEventList
argument_list|,
name|keys
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QStringList
argument_list|,
name|texts
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|tracking
argument_list|)
expr_stmt|;
name|QSpinBox
name|spin
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|spin
operator|.
name|setKeyboardTracking
argument_list|(
name|tracking
argument_list|)
expr_stmt|;
name|spin
operator|.
name|show
argument_list|()
expr_stmt|;
name|connect
argument_list|(
operator|&
name|spin
argument_list|,
name|SIGNAL
argument_list|(
name|valueChanged
argument_list|(
name|QString
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|valueChangedHelper
argument_list|(
name|QString
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|keys
operator|.
name|simulate
argument_list|(
operator|&
name|spin
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|actualTexts
argument_list|,
name|texts
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setWrapping_data
name|void
name|tst_QSpinBox
operator|::
name|setWrapping_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"wrapping"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"minimum"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"maximum"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"startValue"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QTestEventList
argument_list|>
argument_list|(
literal|"keys"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|IntList
argument_list|>
argument_list|(
literal|"expected"
argument_list|)
expr_stmt|;
name|QTestEventList
name|keys
decl_stmt|;
name|IntList
name|values
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|values
operator|<<
literal|10
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data0"
argument_list|)
operator|<<
literal|false
operator|<<
literal|0
operator|<<
literal|10
operator|<<
literal|9
operator|<<
name|keys
operator|<<
name|values
expr_stmt|;
name|keys
operator|.
name|clear
argument_list|()
expr_stmt|;
name|values
operator|.
name|clear
argument_list|()
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|values
operator|<<
literal|10
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|values
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data1"
argument_list|)
operator|<<
literal|true
operator|<<
literal|0
operator|<<
literal|10
operator|<<
literal|9
operator|<<
name|keys
operator|<<
name|values
expr_stmt|;
name|keys
operator|.
name|clear
argument_list|()
expr_stmt|;
name|values
operator|.
name|clear
argument_list|()
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Delete
argument_list|)
expr_stmt|;
comment|// doesn't emit because lineedit is empty so intermediate
name|keys
operator|.
name|addKeyClick
argument_list|(
literal|'1'
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|values
operator|<<
literal|1
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data2"
argument_list|)
operator|<<
literal|false
operator|<<
literal|0
operator|<<
literal|10
operator|<<
literal|9
operator|<<
name|keys
operator|<<
name|values
expr_stmt|;
name|keys
operator|.
name|clear
argument_list|()
expr_stmt|;
name|values
operator|.
name|clear
argument_list|()
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Delete
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
literal|'1'
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|values
operator|<<
literal|1
operator|<<
literal|0
operator|<<
literal|10
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data3"
argument_list|)
operator|<<
literal|true
operator|<<
literal|0
operator|<<
literal|10
operator|<<
literal|9
operator|<<
name|keys
operator|<<
name|values
expr_stmt|;
name|keys
operator|.
name|clear
argument_list|()
expr_stmt|;
name|values
operator|.
name|clear
argument_list|()
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_PageDown
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|values
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data4"
argument_list|)
operator|<<
literal|false
operator|<<
literal|0
operator|<<
literal|10
operator|<<
literal|6
operator|<<
name|keys
operator|<<
name|values
expr_stmt|;
name|keys
operator|.
name|clear
argument_list|()
expr_stmt|;
name|values
operator|.
name|clear
argument_list|()
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_PageDown
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|values
operator|<<
literal|0
operator|<<
literal|10
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data5"
argument_list|)
operator|<<
literal|true
operator|<<
literal|0
operator|<<
literal|10
operator|<<
literal|6
operator|<<
name|keys
operator|<<
name|values
expr_stmt|;
name|keys
operator|.
name|clear
argument_list|()
expr_stmt|;
name|values
operator|.
name|clear
argument_list|()
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_PageUp
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_PageDown
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_PageDown
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_PageDown
argument_list|)
expr_stmt|;
name|values
operator|<<
literal|10
operator|<<
literal|0
operator|<<
literal|10
operator|<<
literal|0
operator|<<
literal|10
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data6"
argument_list|)
operator|<<
literal|true
operator|<<
literal|0
operator|<<
literal|10
operator|<<
literal|6
operator|<<
name|keys
operator|<<
name|values
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setWrapping
name|void
name|tst_QSpinBox
operator|::
name|setWrapping
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|wrapping
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|minimum
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|maximum
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|startValue
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QTestEventList
argument_list|,
name|keys
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|IntList
argument_list|,
name|expected
argument_list|)
expr_stmt|;
name|QSpinBox
name|spin
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|spin
operator|.
name|wrapping
argument_list|()
argument_list|)
expr_stmt|;
name|spin
operator|.
name|setMinimum
argument_list|(
name|minimum
argument_list|)
expr_stmt|;
name|spin
operator|.
name|setMaximum
argument_list|(
name|maximum
argument_list|)
expr_stmt|;
name|spin
operator|.
name|setValue
argument_list|(
name|startValue
argument_list|)
expr_stmt|;
name|spin
operator|.
name|setWrapping
argument_list|(
name|wrapping
argument_list|)
expr_stmt|;
name|spin
operator|.
name|show
argument_list|()
expr_stmt|;
name|actualValues
operator|.
name|clear
argument_list|()
expr_stmt|;
name|connect
argument_list|(
operator|&
name|spin
argument_list|,
name|SIGNAL
argument_list|(
name|valueChanged
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|valueChangedHelper
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|keys
operator|.
name|simulate
argument_list|(
operator|&
name|spin
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|actualValues
operator|.
name|size
argument_list|()
argument_list|,
name|expected
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|qMin
argument_list|(
name|actualValues
operator|.
name|size
argument_list|()
argument_list|,
name|expected
operator|.
name|size
argument_list|()
argument_list|)
condition|;
operator|++
name|i
control|)
block|{
name|QCOMPARE
argument_list|(
name|actualValues
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|,
name|expected
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|setSpecialValueText_data
name|void
name|tst_QSpinBox
operator|::
name|setSpecialValueText_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"specialValueText"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"minimum"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"maximum"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"value"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"expected"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"show"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data0"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
literal|0
operator|<<
literal|10
operator|<<
literal|1
operator|<<
literal|"1"
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data1"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
literal|0
operator|<<
literal|10
operator|<<
literal|1
operator|<<
literal|"1"
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data2"
argument_list|)
operator|<<
literal|"foo"
operator|<<
literal|0
operator|<<
literal|10
operator|<<
literal|0
operator|<<
literal|"foo"
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data3"
argument_list|)
operator|<<
literal|"foo"
operator|<<
literal|0
operator|<<
literal|10
operator|<<
literal|0
operator|<<
literal|"foo"
operator|<<
literal|true
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setSpecialValueText
name|void
name|tst_QSpinBox
operator|::
name|setSpecialValueText
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|specialValueText
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|minimum
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|maximum
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|expected
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|show
argument_list|)
expr_stmt|;
name|QSpinBox
name|spin
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|spin
operator|.
name|setSpecialValueText
argument_list|(
name|specialValueText
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spin
operator|.
name|specialValueText
argument_list|()
argument_list|,
name|specialValueText
argument_list|)
expr_stmt|;
name|spin
operator|.
name|setMinimum
argument_list|(
name|minimum
argument_list|)
expr_stmt|;
name|spin
operator|.
name|setMaximum
argument_list|(
name|maximum
argument_list|)
expr_stmt|;
name|spin
operator|.
name|setValue
argument_list|(
name|value
argument_list|)
expr_stmt|;
if|if
condition|(
name|show
condition|)
name|spin
operator|.
name|show
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spin
operator|.
name|text
argument_list|()
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setSingleStep_data
name|void
name|tst_QSpinBox
operator|::
name|setSingleStep_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"singleStep"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"startValue"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QTestEventList
argument_list|>
argument_list|(
literal|"keys"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|IntList
argument_list|>
argument_list|(
literal|"expected"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"show"
argument_list|)
expr_stmt|;
name|QTestEventList
name|keys
decl_stmt|;
name|IntList
name|values
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|values
operator|<<
literal|11
operator|<<
literal|10
operator|<<
literal|11
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data0"
argument_list|)
operator|<<
literal|1
operator|<<
literal|10
operator|<<
name|keys
operator|<<
name|values
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data1"
argument_list|)
operator|<<
literal|1
operator|<<
literal|10
operator|<<
name|keys
operator|<<
name|values
operator|<<
literal|true
expr_stmt|;
name|keys
operator|.
name|clear
argument_list|()
expr_stmt|;
name|values
operator|.
name|clear
argument_list|()
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|values
operator|<<
literal|12
operator|<<
literal|10
operator|<<
literal|12
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data2"
argument_list|)
operator|<<
literal|2
operator|<<
literal|10
operator|<<
name|keys
operator|<<
name|values
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data3"
argument_list|)
operator|<<
literal|2
operator|<<
literal|10
operator|<<
name|keys
operator|<<
name|values
operator|<<
literal|true
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setSingleStep
name|void
name|tst_QSpinBox
operator|::
name|setSingleStep
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|singleStep
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|startValue
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QTestEventList
argument_list|,
name|keys
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|IntList
argument_list|,
name|expected
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|show
argument_list|)
expr_stmt|;
name|QSpinBox
name|spin
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|actualValues
operator|.
name|clear
argument_list|()
expr_stmt|;
name|spin
operator|.
name|setSingleStep
argument_list|(
name|singleStep
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spin
operator|.
name|singleStep
argument_list|()
argument_list|,
name|singleStep
argument_list|)
expr_stmt|;
name|spin
operator|.
name|setValue
argument_list|(
name|startValue
argument_list|)
expr_stmt|;
if|if
condition|(
name|show
condition|)
name|spin
operator|.
name|show
argument_list|()
expr_stmt|;
name|connect
argument_list|(
operator|&
name|spin
argument_list|,
name|SIGNAL
argument_list|(
name|valueChanged
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|valueChangedHelper
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|actualValues
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|keys
operator|.
name|simulate
argument_list|(
operator|&
name|spin
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|actualValues
operator|.
name|size
argument_list|()
argument_list|,
name|expected
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|qMin
argument_list|(
name|actualValues
operator|.
name|size
argument_list|()
argument_list|,
name|expected
operator|.
name|size
argument_list|()
argument_list|)
condition|;
operator|++
name|i
control|)
block|{
name|QCOMPARE
argument_list|(
name|actualValues
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|,
name|expected
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|setMinMax_data
name|void
name|tst_QSpinBox
operator|::
name|setMinMax_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"startValue"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"mini"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"maxi"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QTestEventList
argument_list|>
argument_list|(
literal|"keys"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expected"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"show"
argument_list|)
expr_stmt|;
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data0"
argument_list|)
operator|<<
literal|1
operator|<<
name|INT_MIN
operator|<<
literal|2
operator|<<
name|keys
operator|<<
literal|2
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data1"
argument_list|)
operator|<<
literal|1
operator|<<
name|INT_MIN
operator|<<
literal|2
operator|<<
name|keys
operator|<<
literal|2
operator|<<
literal|true
expr_stmt|;
name|keys
operator|.
name|clear
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data2"
argument_list|)
operator|<<
literal|2
operator|<<
name|INT_MAX
operator|-
literal|2
operator|<<
name|INT_MAX
operator|<<
name|keys
operator|<<
name|INT_MAX
operator|-
literal|2
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data3"
argument_list|)
operator|<<
literal|2
operator|<<
name|INT_MAX
operator|-
literal|2
operator|<<
name|INT_MAX
operator|<<
name|keys
operator|<<
name|INT_MAX
operator|-
literal|2
operator|<<
literal|true
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setMinMax
name|void
name|tst_QSpinBox
operator|::
name|setMinMax
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|startValue
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|mini
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|maxi
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QTestEventList
argument_list|,
name|keys
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expected
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|show
argument_list|)
expr_stmt|;
name|QSpinBox
name|spin
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|spin
operator|.
name|setValue
argument_list|(
name|startValue
argument_list|)
expr_stmt|;
name|spin
operator|.
name|setMinimum
argument_list|(
name|mini
argument_list|)
expr_stmt|;
name|spin
operator|.
name|setMaximum
argument_list|(
name|maxi
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spin
operator|.
name|minimum
argument_list|()
argument_list|,
name|mini
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spin
operator|.
name|maximum
argument_list|()
argument_list|,
name|maxi
argument_list|)
expr_stmt|;
if|if
condition|(
name|show
condition|)
name|spin
operator|.
name|show
argument_list|()
expr_stmt|;
name|keys
operator|.
name|simulate
argument_list|(
operator|&
name|spin
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spin
operator|.
name|value
argument_list|()
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|valueFromTextAndValidate_data
name|void
name|tst_QSpinBox
operator|::
name|valueFromTextAndValidate_data
parameter_list|()
block|{
specifier|const
name|int
name|Intermediate
init|=
name|QValidator
operator|::
name|Intermediate
decl_stmt|;
specifier|const
name|int
name|Invalid
init|=
name|QValidator
operator|::
name|Invalid
decl_stmt|;
specifier|const
name|int
name|Acceptable
init|=
name|QValidator
operator|::
name|Acceptable
decl_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"txt"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"state"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"mini"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"maxi"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"expectedText"
argument_list|)
expr_stmt|;
comment|// if empty we don't check
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data0"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"2"
argument_list|)
operator|<<
name|Intermediate
operator|<<
literal|3
operator|<<
literal|5
operator|<<
name|QString
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data1"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
name|Intermediate
operator|<<
literal|0
operator|<<
literal|100
operator|<<
name|QString
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data2"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"asd"
argument_list|)
operator|<<
name|Invalid
operator|<<
literal|0
operator|<<
literal|100
operator|<<
name|QString
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data3"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"2"
argument_list|)
operator|<<
name|Acceptable
operator|<<
literal|0
operator|<<
literal|100
operator|<<
name|QString
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data4"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
name|Intermediate
operator|<<
literal|0
operator|<<
literal|1
operator|<<
name|QString
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data5"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
name|Invalid
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|QString
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data6"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"5"
argument_list|)
operator|<<
name|Intermediate
operator|<<
literal|2004
operator|<<
literal|2005
operator|<<
name|QString
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data7"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"50"
argument_list|)
operator|<<
name|Intermediate
operator|<<
literal|2004
operator|<<
literal|2005
operator|<<
name|QString
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data8"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"205"
argument_list|)
operator|<<
name|Intermediate
operator|<<
literal|2004
operator|<<
literal|2005
operator|<<
name|QString
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data9"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"2005"
argument_list|)
operator|<<
name|Acceptable
operator|<<
literal|2004
operator|<<
literal|2005
operator|<<
name|QString
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data10"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"3"
argument_list|)
operator|<<
name|Intermediate
operator|<<
literal|2004
operator|<<
literal|2005
operator|<<
name|QString
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data11"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"-"
argument_list|)
operator|<<
name|Intermediate
operator|<<
operator|-
literal|20
operator|<<
operator|-
literal|10
operator|<<
name|QString
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data12"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"-1"
argument_list|)
operator|<<
name|Intermediate
operator|<<
operator|-
literal|20
operator|<<
operator|-
literal|10
operator|<<
name|QString
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data13"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"-5"
argument_list|)
operator|<<
name|Intermediate
operator|<<
operator|-
literal|20
operator|<<
operator|-
literal|10
operator|<<
name|QString
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data14"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"-5"
argument_list|)
operator|<<
name|Intermediate
operator|<<
operator|-
literal|20
operator|<<
operator|-
literal|16
operator|<<
name|QString
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data15"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"-2"
argument_list|)
operator|<<
name|Intermediate
operator|<<
operator|-
literal|20
operator|<<
operator|-
literal|16
operator|<<
name|QString
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data16"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"2"
argument_list|)
operator|<<
name|Invalid
operator|<<
operator|-
literal|20
operator|<<
operator|-
literal|16
operator|<<
name|QString
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data17"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
name|Intermediate
operator|<<
operator|-
literal|20
operator|<<
operator|-
literal|16
operator|<<
name|QString
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data18"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"  22"
argument_list|)
operator|<<
name|Acceptable
operator|<<
literal|0
operator|<<
literal|1000
operator|<<
name|QString
argument_list|(
literal|"22"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data19"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"22  "
argument_list|)
operator|<<
name|Acceptable
operator|<<
literal|0
operator|<<
literal|1000
operator|<<
name|QString
argument_list|(
literal|"22"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data20"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"  22  "
argument_list|)
operator|<<
name|Acceptable
operator|<<
literal|0
operator|<<
literal|1000
operator|<<
name|QString
argument_list|(
literal|"22"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data21"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"2 2"
argument_list|)
operator|<<
name|Invalid
operator|<<
literal|0
operator|<<
literal|1000
operator|<<
name|QString
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|stateName
specifier|static
name|QString
name|stateName
parameter_list|(
name|int
name|state
parameter_list|)
block|{
switch|switch
condition|(
name|state
condition|)
block|{
case|case
name|QValidator
operator|::
name|Acceptable
case|:
return|return
name|QString
argument_list|(
literal|"Acceptable"
argument_list|)
return|;
case|case
name|QValidator
operator|::
name|Intermediate
case|:
return|return
name|QString
argument_list|(
literal|"Intermediate"
argument_list|)
return|;
case|case
name|QValidator
operator|::
name|Invalid
case|:
return|return
name|QString
argument_list|(
literal|"Invalid"
argument_list|)
return|;
default|default:
break|break;
block|}
name|qWarning
argument_list|(
literal|"%s %d: this should never happen"
argument_list|,
name|__FILE__
argument_list|,
name|__LINE__
argument_list|)
expr_stmt|;
return|return
name|QString
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|valueFromTextAndValidate
name|void
name|tst_QSpinBox
operator|::
name|valueFromTextAndValidate
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|txt
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|state
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|mini
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|maxi
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|expectedText
argument_list|)
expr_stmt|;
name|SpinBox
name|sb
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|sb
operator|.
name|show
argument_list|()
expr_stmt|;
name|sb
operator|.
name|setRange
argument_list|(
name|mini
argument_list|,
name|maxi
argument_list|)
expr_stmt|;
name|int
name|unused
init|=
literal|0
decl_stmt|;
name|QCOMPARE
argument_list|(
name|stateName
argument_list|(
name|sb
operator|.
name|validate
argument_list|(
name|txt
argument_list|,
name|unused
argument_list|)
argument_list|)
argument_list|,
name|stateName
argument_list|(
name|state
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|expectedText
operator|.
name|isEmpty
argument_list|()
condition|)
name|QCOMPARE
argument_list|(
name|txt
argument_list|,
name|expectedText
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|locale_data
name|void
name|tst_QSpinBox
operator|::
name|locale_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QLocale
argument_list|>
argument_list|(
literal|"loc"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"value"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"textFromVal"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"text"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"valFromText"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data0"
argument_list|)
operator|<<
name|QLocale
argument_list|(
name|QLocale
operator|::
name|Norwegian
argument_list|,
name|QLocale
operator|::
name|Norway
argument_list|)
operator|<<
literal|1234
operator|<<
name|QString
argument_list|(
literal|"1234"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"2345"
argument_list|)
operator|<<
literal|2345
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data1"
argument_list|)
operator|<<
name|QLocale
argument_list|(
name|QLocale
operator|::
name|German
argument_list|,
name|QLocale
operator|::
name|Germany
argument_list|)
operator|<<
literal|1234
operator|<<
name|QString
argument_list|(
literal|"1234"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"2345"
argument_list|)
operator|<<
literal|2345
expr_stmt|;
block|}
end_function
begin_function
DECL|function|locale
name|void
name|tst_QSpinBox
operator|::
name|locale
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QLocale
argument_list|,
name|loc
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|textFromVal
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|text
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|valFromText
argument_list|)
expr_stmt|;
name|QLocale
name|old
decl_stmt|;
name|QLocale
operator|::
name|setDefault
argument_list|(
name|loc
argument_list|)
expr_stmt|;
name|SpinBox
name|box
decl_stmt|;
name|box
operator|.
name|setMaximum
argument_list|(
literal|100000
argument_list|)
expr_stmt|;
name|box
operator|.
name|setValue
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|box
operator|.
name|cleanText
argument_list|()
argument_list|,
name|textFromVal
argument_list|)
expr_stmt|;
name|box
operator|.
name|lineEdit
argument_list|()
operator|->
name|setText
argument_list|(
name|text
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|box
operator|.
name|cleanText
argument_list|()
argument_list|,
name|text
argument_list|)
expr_stmt|;
name|box
operator|.
name|interpretText
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|box
operator|.
name|value
argument_list|()
argument_list|,
name|valFromText
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|editingFinished
name|void
name|tst_QSpinBox
operator|::
name|editingFinished
parameter_list|()
block|{
name|QWidget
name|testFocusWidget
decl_stmt|;
name|testFocusWidget
operator|.
name|setObjectName
argument_list|(
name|QLatin1String
argument_list|(
literal|"tst_qspinbox"
argument_list|)
argument_list|)
expr_stmt|;
name|testFocusWidget
operator|.
name|setWindowTitle
argument_list|(
name|objectName
argument_list|()
argument_list|)
expr_stmt|;
name|testFocusWidget
operator|.
name|resize
argument_list|(
literal|200
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QVBoxLayout
modifier|*
name|layout
init|=
operator|new
name|QVBoxLayout
argument_list|(
operator|&
name|testFocusWidget
argument_list|)
decl_stmt|;
name|QSpinBox
modifier|*
name|box
init|=
operator|new
name|QSpinBox
argument_list|(
operator|&
name|testFocusWidget
argument_list|)
decl_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|box
argument_list|)
expr_stmt|;
name|QSpinBox
modifier|*
name|box2
init|=
operator|new
name|QSpinBox
argument_list|(
operator|&
name|testFocusWidget
argument_list|)
decl_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|box2
argument_list|)
expr_stmt|;
name|testFocusWidget
operator|.
name|show
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|testFocusWidget
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowActive
argument_list|(
operator|&
name|testFocusWidget
argument_list|)
argument_list|)
expr_stmt|;
name|box
operator|->
name|activateWindow
argument_list|()
expr_stmt|;
name|box
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|qApp
operator|->
name|focusWidget
argument_list|()
argument_list|,
operator|(
name|QWidget
operator|*
operator|)
name|box
argument_list|)
expr_stmt|;
name|QSignalSpy
name|editingFinishedSpy1
argument_list|(
name|box
argument_list|,
name|SIGNAL
argument_list|(
name|editingFinished
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|editingFinishedSpy2
argument_list|(
name|box2
argument_list|,
name|SIGNAL
argument_list|(
name|editingFinished
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|box
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|box
argument_list|,
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|box
argument_list|,
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|editingFinishedSpy1
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|editingFinishedSpy2
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|box2
argument_list|,
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|box2
argument_list|,
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|box2
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|editingFinishedSpy1
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|box
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|editingFinishedSpy1
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|editingFinishedSpy2
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|box
argument_list|,
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|editingFinishedSpy1
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|editingFinishedSpy2
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|box
argument_list|,
name|Qt
operator|::
name|Key_Enter
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|editingFinishedSpy1
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|editingFinishedSpy2
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|box
argument_list|,
name|Qt
operator|::
name|Key_Return
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|editingFinishedSpy1
operator|.
name|count
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|editingFinishedSpy2
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|box2
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|editingFinishedSpy1
operator|.
name|count
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|editingFinishedSpy2
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|box2
argument_list|,
name|Qt
operator|::
name|Key_Enter
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|editingFinishedSpy1
operator|.
name|count
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|editingFinishedSpy2
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|box2
argument_list|,
name|Qt
operator|::
name|Key_Return
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|editingFinishedSpy1
operator|.
name|count
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|editingFinishedSpy2
operator|.
name|count
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|testFocusWidget
operator|.
name|hide
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|editingFinishedSpy1
operator|.
name|count
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|editingFinishedSpy2
operator|.
name|count
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
comment|//task203285
name|editingFinishedSpy1
operator|.
name|clear
argument_list|()
expr_stmt|;
name|testFocusWidget
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|box
operator|->
name|setKeyboardTracking
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|setActiveWindow
argument_list|(
operator|&
name|testFocusWidget
argument_list|)
expr_stmt|;
name|testFocusWidget
operator|.
name|activateWindow
argument_list|()
expr_stmt|;
name|box
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|box
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|box
operator|->
name|setValue
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|box
argument_list|,
literal|'2'
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|box
operator|->
name|text
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"20"
argument_list|)
argument_list|)
expr_stmt|;
name|box2
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|qApp
operator|->
name|focusWidget
argument_list|()
operator|!=
name|box
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|box
operator|->
name|text
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"20"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|editingFinishedSpy1
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|removeAll
name|void
name|tst_QSpinBox
operator|::
name|removeAll
parameter_list|()
block|{
name|SpinBox
name|spin
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|spin
operator|.
name|setPrefix
argument_list|(
literal|"foo"
argument_list|)
expr_stmt|;
name|spin
operator|.
name|setSuffix
argument_list|(
literal|"bar"
argument_list|)
expr_stmt|;
name|spin
operator|.
name|setValue
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|spin
operator|.
name|show
argument_list|()
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_OS_MAC
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|spin
argument_list|,
name|Qt
operator|::
name|Key_Left
argument_list|,
name|Qt
operator|::
name|ControlModifier
argument_list|)
expr_stmt|;
else|#
directive|else
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|spin
argument_list|,
name|Qt
operator|::
name|Key_Home
argument_list|)
expr_stmt|;
endif|#
directive|endif
ifdef|#
directive|ifdef
name|Q_OS_MAC
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|spin
argument_list|,
name|Qt
operator|::
name|Key_Right
argument_list|,
name|Qt
operator|::
name|ControlModifier
operator||
name|Qt
operator|::
name|ShiftModifier
argument_list|)
expr_stmt|;
else|#
directive|else
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|spin
argument_list|,
name|Qt
operator|::
name|Key_End
argument_list|,
name|Qt
operator|::
name|ShiftModifier
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QCOMPARE
argument_list|(
name|spin
operator|.
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"foo2bar"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|spin
argument_list|,
name|Qt
operator|::
name|Key_1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spin
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"foo1bar"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|startWithDash
name|void
name|tst_QSpinBox
operator|::
name|startWithDash
parameter_list|()
block|{
name|SpinBox
name|spin
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|spin
operator|.
name|show
argument_list|()
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_OS_MAC
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|spin
argument_list|,
name|Qt
operator|::
name|Key_Left
argument_list|,
name|Qt
operator|::
name|ControlModifier
argument_list|)
expr_stmt|;
else|#
directive|else
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|spin
argument_list|,
name|Qt
operator|::
name|Key_Home
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QCOMPARE
argument_list|(
name|spin
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"0"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|spin
argument_list|,
name|Qt
operator|::
name|Key_Minus
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spin
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"0"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|undoRedo
name|void
name|tst_QSpinBox
operator|::
name|undoRedo
parameter_list|()
block|{
comment|//test undo/redo feature (in conjunction with the "undoRedoEnabled" property)
name|SpinBox
name|spin
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|spin
operator|.
name|show
argument_list|()
expr_stmt|;
comment|//the undo/redo is disabled by default
name|QCOMPARE
argument_list|(
name|spin
operator|.
name|value
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|//this is the default value
name|QVERIFY
argument_list|(
operator|!
name|spin
operator|.
name|lineEdit
argument_list|()
operator|->
name|isUndoAvailable
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|spin
operator|.
name|lineEdit
argument_list|()
operator|->
name|isRedoAvailable
argument_list|()
argument_list|)
expr_stmt|;
name|spin
operator|.
name|lineEdit
argument_list|()
operator|->
name|selectAll
argument_list|()
expr_stmt|;
comment|//ensures everything is selected and will be cleared by typing a key
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|spin
argument_list|,
name|Qt
operator|::
name|Key_1
argument_list|)
expr_stmt|;
comment|//we put 1 into the spinbox
name|QCOMPARE
argument_list|(
name|spin
operator|.
name|value
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|spin
operator|.
name|lineEdit
argument_list|()
operator|->
name|isUndoAvailable
argument_list|()
argument_list|)
expr_stmt|;
comment|//testing CTRL+Z (undo)
name|int
name|val
init|=
name|QKeySequence
argument_list|(
name|QKeySequence
operator|::
name|Undo
argument_list|)
index|[
literal|0
index|]
decl_stmt|;
name|Qt
operator|::
name|KeyboardModifiers
name|mods
init|=
call|(
name|Qt
operator|::
name|KeyboardModifiers
call|)
argument_list|(
name|val
operator|&
name|Qt
operator|::
name|KeyboardModifierMask
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|spin
argument_list|,
name|val
operator|&
operator|~
name|mods
argument_list|,
name|mods
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spin
operator|.
name|value
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|spin
operator|.
name|lineEdit
argument_list|()
operator|->
name|isUndoAvailable
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|spin
operator|.
name|lineEdit
argument_list|()
operator|->
name|isRedoAvailable
argument_list|()
argument_list|)
expr_stmt|;
comment|//testing CTRL+Y (redo)
name|val
operator|=
name|QKeySequence
argument_list|(
name|QKeySequence
operator|::
name|Redo
argument_list|)
index|[
literal|0
index|]
expr_stmt|;
name|mods
operator|=
call|(
name|Qt
operator|::
name|KeyboardModifiers
call|)
argument_list|(
name|val
operator|&
name|Qt
operator|::
name|KeyboardModifierMask
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|spin
argument_list|,
name|val
operator|&
operator|~
name|mods
argument_list|,
name|mods
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spin
operator|.
name|value
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|spin
operator|.
name|lineEdit
argument_list|()
operator|->
name|isRedoAvailable
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|spin
operator|.
name|lineEdit
argument_list|()
operator|->
name|isUndoAvailable
argument_list|()
argument_list|)
expr_stmt|;
name|spin
operator|.
name|setValue
argument_list|(
literal|55
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|spin
operator|.
name|lineEdit
argument_list|()
operator|->
name|isUndoAvailable
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|spin
operator|.
name|lineEdit
argument_list|()
operator|->
name|isRedoAvailable
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|spin
argument_list|,
name|Qt
operator|::
name|Key_Return
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|spin
argument_list|,
literal|'1'
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|spin
operator|.
name|lineEdit
argument_list|()
operator|->
name|isUndoAvailable
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|spin
operator|.
name|lineEdit
argument_list|()
operator|->
name|isRedoAvailable
argument_list|()
argument_list|)
expr_stmt|;
name|spin
operator|.
name|lineEdit
argument_list|()
operator|->
name|undo
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spin
operator|.
name|value
argument_list|()
argument_list|,
literal|55
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|spin
operator|.
name|lineEdit
argument_list|()
operator|->
name|isUndoAvailable
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|spin
operator|.
name|lineEdit
argument_list|()
operator|->
name|isRedoAvailable
argument_list|()
argument_list|)
expr_stmt|;
name|spin
operator|.
name|lineEdit
argument_list|()
operator|->
name|redo
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spin
operator|.
name|value
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|spin
operator|.
name|lineEdit
argument_list|()
operator|->
name|isUndoAvailable
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|spin
operator|.
name|lineEdit
argument_list|()
operator|->
name|isRedoAvailable
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|specialValue
name|void
name|tst_QSpinBox
operator|::
name|specialValue
parameter_list|()
block|{
name|QString
name|specialText
init|=
literal|"foo"
decl_stmt|;
name|QWidget
name|topWidget
decl_stmt|;
name|QVBoxLayout
name|layout
argument_list|(
operator|&
name|topWidget
argument_list|)
decl_stmt|;
name|SpinBox
name|spin
argument_list|(
operator|&
name|topWidget
argument_list|)
decl_stmt|;
name|layout
operator|.
name|addWidget
argument_list|(
operator|&
name|spin
argument_list|)
expr_stmt|;
name|SpinBox
name|box2
argument_list|(
operator|&
name|topWidget
argument_list|)
decl_stmt|;
name|layout
operator|.
name|addWidget
argument_list|(
operator|&
name|box2
argument_list|)
expr_stmt|;
name|spin
operator|.
name|setSpecialValueText
argument_list|(
name|specialText
argument_list|)
expr_stmt|;
name|spin
operator|.
name|setMinimum
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|spin
operator|.
name|setMaximum
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|spin
operator|.
name|setValue
argument_list|(
literal|50
argument_list|)
expr_stmt|;
name|topWidget
operator|.
name|show
argument_list|()
expr_stmt|;
comment|//make sure we have the focus (even if editingFinished fails)
name|qApp
operator|->
name|setActiveWindow
argument_list|(
operator|&
name|topWidget
argument_list|)
expr_stmt|;
name|topWidget
operator|.
name|activateWindow
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowActive
argument_list|(
operator|&
name|topWidget
argument_list|)
argument_list|)
expr_stmt|;
name|spin
operator|.
name|setFocus
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|spin
argument_list|,
name|Qt
operator|::
name|Key_Return
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|spin
argument_list|,
literal|'0'
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spin
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"0"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|spin
argument_list|,
name|Qt
operator|::
name|Key_Return
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spin
operator|.
name|text
argument_list|()
argument_list|,
name|specialText
argument_list|)
expr_stmt|;
name|spin
operator|.
name|setValue
argument_list|(
literal|50
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|spin
argument_list|,
name|Qt
operator|::
name|Key_Return
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|spin
argument_list|,
literal|'0'
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spin
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"0"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|spin
operator|.
name|lineEdit
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spin
operator|.
name|text
argument_list|()
argument_list|,
name|specialText
argument_list|)
expr_stmt|;
name|spin
operator|.
name|setValue
argument_list|(
literal|50
argument_list|)
expr_stmt|;
name|spin
operator|.
name|setFocus
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|spin
argument_list|,
name|Qt
operator|::
name|Key_Return
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|spin
argument_list|,
literal|'0'
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spin
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"0"
argument_list|)
argument_list|)
expr_stmt|;
name|box2
operator|.
name|setFocus
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spin
operator|.
name|text
argument_list|()
argument_list|,
name|specialText
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|textFromValue
name|void
name|tst_QSpinBox
operator|::
name|textFromValue
parameter_list|()
block|{
name|SpinBox
name|spinBox
decl_stmt|;
name|QCOMPARE
argument_list|(
name|spinBox
operator|.
name|textFromValue
argument_list|(
name|INT_MIN
argument_list|)
argument_list|,
name|QString
operator|::
name|number
argument_list|(
name|INT_MIN
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|sizeHint_SpinBox
class|class
name|sizeHint_SpinBox
super|:
specifier|public
name|QSpinBox
block|{
public|public:
DECL|function|sizeHint
name|QSize
name|sizeHint
parameter_list|()
specifier|const
block|{
operator|++
name|sizeHintRequests
expr_stmt|;
return|return
name|QSpinBox
operator|::
name|sizeHint
argument_list|()
return|;
block|}
DECL|member|sizeHintRequests
specifier|mutable
name|int
name|sizeHintRequests
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|sizeHint
name|void
name|tst_QSpinBox
operator|::
name|sizeHint
parameter_list|()
block|{
name|QWidget
modifier|*
name|widget
init|=
operator|new
name|QWidget
decl_stmt|;
name|QHBoxLayout
modifier|*
name|layout
init|=
operator|new
name|QHBoxLayout
argument_list|(
name|widget
argument_list|)
decl_stmt|;
name|sizeHint_SpinBox
modifier|*
name|spinBox
init|=
operator|new
name|sizeHint_SpinBox
decl_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|spinBox
argument_list|)
expr_stmt|;
name|widget
operator|->
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
name|widget
argument_list|)
argument_list|)
expr_stmt|;
comment|// Prefix
name|spinBox
operator|->
name|sizeHintRequests
operator|=
literal|0
expr_stmt|;
name|spinBox
operator|->
name|setPrefix
argument_list|(
name|QLatin1String
argument_list|(
literal|"abcdefghij"
argument_list|)
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|spinBox
operator|->
name|sizeHintRequests
operator|>
literal|0
argument_list|)
expr_stmt|;
comment|// Suffix
name|spinBox
operator|->
name|sizeHintRequests
operator|=
literal|0
expr_stmt|;
name|spinBox
operator|->
name|setSuffix
argument_list|(
name|QLatin1String
argument_list|(
literal|"abcdefghij"
argument_list|)
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|spinBox
operator|->
name|sizeHintRequests
operator|>
literal|0
argument_list|)
expr_stmt|;
comment|// Range
name|spinBox
operator|->
name|sizeHintRequests
operator|=
literal|0
expr_stmt|;
name|spinBox
operator|->
name|setRange
argument_list|(
literal|0
argument_list|,
literal|1234567890
argument_list|)
expr_stmt|;
name|spinBox
operator|->
name|setValue
argument_list|(
name|spinBox
operator|->
name|maximum
argument_list|()
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|spinBox
operator|->
name|sizeHintRequests
operator|>
literal|0
argument_list|)
expr_stmt|;
operator|delete
name|widget
expr_stmt|;
block|}
end_function
begin_function
DECL|function|taskQTBUG_5008_textFromValueAndValidate
name|void
name|tst_QSpinBox
operator|::
name|taskQTBUG_5008_textFromValueAndValidate
parameter_list|()
block|{
class|class
name|DecoratedSpinBox
super|:
specifier|public
name|QSpinBox
block|{
public|public:
name|DecoratedSpinBox
parameter_list|()
block|{
name|setLocale
argument_list|(
name|QLocale
operator|::
name|French
argument_list|)
expr_stmt|;
name|setMaximum
argument_list|(
literal|100000000
argument_list|)
expr_stmt|;
name|setValue
argument_list|(
literal|1000000
argument_list|)
expr_stmt|;
block|}
name|QLineEdit
modifier|*
name|lineEdit
parameter_list|()
specifier|const
block|{
return|return
name|QSpinBox
operator|::
name|lineEdit
argument_list|()
return|;
block|}
comment|//we use the French delimiters here
name|QString
name|textFromValue
parameter_list|(
name|int
name|value
parameter_list|)
specifier|const
block|{
return|return
name|locale
argument_list|()
operator|.
name|toString
argument_list|(
name|value
argument_list|)
return|;
block|}
block|}
name|spinbox
class|;
name|spinbox
operator|.
name|show
argument_list|()
expr_stmt|;
name|spinbox
operator|.
name|activateWindow
argument_list|()
expr_stmt|;
name|spinbox
operator|.
name|setFocus
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|spinbox
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowActive
argument_list|(
operator|&
name|spinbox
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|spinbox
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
operator|&
name|spinbox
argument_list|)
argument_list|,
name|QApplication
operator|::
name|activeWindow
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spinbox
operator|.
name|text
argument_list|()
argument_list|,
name|spinbox
operator|.
name|locale
argument_list|()
operator|.
name|toString
argument_list|(
name|spinbox
operator|.
name|value
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|spinbox
operator|.
name|lineEdit
argument_list|()
operator|->
name|setCursorPosition
argument_list|(
literal|2
argument_list|)
expr_stmt|;
comment|//just after the first thousand separator
name|QTest
operator|::
name|keyClick
argument_list|(
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|,
name|Qt
operator|::
name|Key_0
argument_list|)
expr_stmt|;
comment|// let's insert a 0
name|QCOMPARE
argument_list|(
name|spinbox
operator|.
name|value
argument_list|()
argument_list|,
literal|10000000
argument_list|)
expr_stmt|;
comment|//it's been multiplied by 10
name|spinbox
operator|.
name|clearFocus
argument_list|()
expr_stmt|;
comment|//make sure the value is correctly formatted
name|QCOMPARE
argument_list|(
name|spinbox
operator|.
name|text
argument_list|()
argument_list|,
name|spinbox
operator|.
name|locale
argument_list|()
operator|.
name|toString
argument_list|(
name|spinbox
operator|.
name|value
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|integerOverflow
name|void
name|tst_QSpinBox
operator|::
name|integerOverflow
parameter_list|()
block|{
name|QSpinBox
name|sb
decl_stmt|;
name|sb
operator|.
name|setRange
argument_list|(
name|INT_MIN
argument_list|,
name|INT_MAX
argument_list|)
expr_stmt|;
name|sb
operator|.
name|setValue
argument_list|(
name|INT_MAX
operator|-
literal|1
argument_list|)
expr_stmt|;
name|sb
operator|.
name|stepUp
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|sb
operator|.
name|value
argument_list|()
argument_list|,
name|INT_MAX
argument_list|)
expr_stmt|;
name|sb
operator|.
name|stepUp
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|sb
operator|.
name|value
argument_list|()
argument_list|,
name|INT_MAX
argument_list|)
expr_stmt|;
name|sb
operator|.
name|setValue
argument_list|(
name|INT_MIN
operator|+
literal|1
argument_list|)
expr_stmt|;
name|sb
operator|.
name|stepDown
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|sb
operator|.
name|value
argument_list|()
argument_list|,
name|INT_MIN
argument_list|)
expr_stmt|;
name|sb
operator|.
name|stepDown
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|sb
operator|.
name|value
argument_list|()
argument_list|,
name|INT_MIN
argument_list|)
expr_stmt|;
name|sb
operator|.
name|setValue
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|sb
operator|.
name|value
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|sb
operator|.
name|setSingleStep
argument_list|(
name|INT_MAX
argument_list|)
expr_stmt|;
name|sb
operator|.
name|stepUp
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|sb
operator|.
name|value
argument_list|()
argument_list|,
name|INT_MAX
argument_list|)
expr_stmt|;
name|sb
operator|.
name|stepDown
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|sb
operator|.
name|value
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|sb
operator|.
name|stepDown
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|sb
operator|.
name|value
argument_list|()
argument_list|,
name|INT_MIN
operator|+
literal|1
argument_list|)
expr_stmt|;
name|sb
operator|.
name|stepDown
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|sb
operator|.
name|value
argument_list|()
argument_list|,
name|INT_MIN
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|lineEditReturnPressed
name|void
name|tst_QSpinBox
operator|::
name|lineEditReturnPressed
parameter_list|()
block|{
name|SpinBox
name|spinBox
decl_stmt|;
name|QSignalSpy
name|spyCurrentChanged
argument_list|(
name|spinBox
operator|.
name|lineEdit
argument_list|()
argument_list|,
name|SIGNAL
argument_list|(
name|returnPressed
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|spinBox
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|spinBox
argument_list|,
name|Qt
operator|::
name|Key_Return
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spyCurrentChanged
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setGroupSeparatorShown_data
name|void
name|tst_QSpinBox
operator|::
name|setGroupSeparatorShown_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QLocale
operator|::
name|Language
argument_list|>
argument_list|(
literal|"lang"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QLocale
operator|::
name|Country
argument_list|>
argument_list|(
literal|"country"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data0"
argument_list|)
operator|<<
name|QLocale
operator|::
name|English
operator|<<
name|QLocale
operator|::
name|UnitedStates
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data1"
argument_list|)
operator|<<
name|QLocale
operator|::
name|Swedish
operator|<<
name|QLocale
operator|::
name|Sweden
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data2"
argument_list|)
operator|<<
name|QLocale
operator|::
name|German
operator|<<
name|QLocale
operator|::
name|Germany
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data3"
argument_list|)
operator|<<
name|QLocale
operator|::
name|Georgian
operator|<<
name|QLocale
operator|::
name|Georgia
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data3"
argument_list|)
operator|<<
name|QLocale
operator|::
name|Macedonian
operator|<<
name|QLocale
operator|::
name|Macedonia
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setGroupSeparatorShown
name|void
name|tst_QSpinBox
operator|::
name|setGroupSeparatorShown
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QLocale
operator|::
name|Language
argument_list|,
name|lang
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QLocale
operator|::
name|Country
argument_list|,
name|country
argument_list|)
expr_stmt|;
name|QLocale
name|loc
argument_list|(
name|lang
argument_list|,
name|country
argument_list|)
decl_stmt|;
name|QLocale
operator|::
name|setDefault
argument_list|(
name|loc
argument_list|)
expr_stmt|;
name|SpinBox
name|spinBox
decl_stmt|;
name|spinBox
operator|.
name|setMaximum
argument_list|(
literal|99999
argument_list|)
expr_stmt|;
name|spinBox
operator|.
name|setValue
argument_list|(
literal|13000
argument_list|)
expr_stmt|;
name|spinBox
operator|.
name|setGroupSeparatorShown
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spinBox
operator|.
name|lineEdit
argument_list|()
operator|->
name|text
argument_list|()
argument_list|,
name|spinBox
operator|.
name|locale
argument_list|()
operator|.
name|toString
argument_list|(
literal|13000
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spinBox
operator|.
name|isGroupSeparatorShown
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spinBox
operator|.
name|textFromValue
argument_list|(
literal|23421
argument_list|)
argument_list|,
name|spinBox
operator|.
name|locale
argument_list|()
operator|.
name|toString
argument_list|(
literal|23421
argument_list|)
argument_list|)
expr_stmt|;
name|spinBox
operator|.
name|setGroupSeparatorShown
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spinBox
operator|.
name|lineEdit
argument_list|()
operator|->
name|text
argument_list|()
argument_list|,
name|QStringLiteral
argument_list|(
literal|"13000"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spinBox
operator|.
name|isGroupSeparatorShown
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|spinBox
operator|.
name|setMaximum
argument_list|(
literal|72000
argument_list|)
expr_stmt|;
name|spinBox
operator|.
name|lineEdit
argument_list|()
operator|->
name|setText
argument_list|(
name|spinBox
operator|.
name|locale
argument_list|()
operator|.
name|toString
argument_list|(
literal|32000
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spinBox
operator|.
name|value
argument_list|()
operator|+
literal|1000
argument_list|,
literal|33000
argument_list|)
expr_stmt|;
name|spinBox
operator|.
name|lineEdit
argument_list|()
operator|->
name|setText
argument_list|(
name|QStringLiteral
argument_list|(
literal|"32000"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spinBox
operator|.
name|value
argument_list|()
operator|+
literal|1000
argument_list|,
literal|33000
argument_list|)
expr_stmt|;
name|spinBox
operator|.
name|lineEdit
argument_list|()
operator|->
name|setText
argument_list|(
name|QStringLiteral
argument_list|(
literal|"32,000"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spinBox
operator|.
name|value
argument_list|()
operator|+
literal|1000
argument_list|,
literal|33000
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QSpinBox
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qspinbox.moc"
end_include
end_unit
