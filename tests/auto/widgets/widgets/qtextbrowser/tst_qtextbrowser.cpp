begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<qtextbrowser.h>
end_include
begin_include
include|#
directive|include
file|<qdatetime.h>
end_include
begin_include
include|#
directive|include
file|<qapplication.h>
end_include
begin_include
include|#
directive|include
file|<qscrollbar.h>
end_include
begin_include
include|#
directive|include
file|<qtextbrowser.h>
end_include
begin_include
include|#
directive|include
file|<qtextobject.h>
end_include
begin_class
DECL|class|TestBrowser
class|class
name|TestBrowser
super|:
specifier|public
name|QTextBrowser
block|{
public|public:
DECL|function|TestBrowser
specifier|inline
name|TestBrowser
parameter_list|()
member_init_list|:
name|htmlLoadAttempts
argument_list|(
literal|0
argument_list|)
block|{
name|show
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|activateWindow
argument_list|()
expr_stmt|;
name|setFocus
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowActive
argument_list|(
name|this
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|virtual
name|QVariant
name|loadResource
parameter_list|(
name|int
name|type
parameter_list|,
specifier|const
name|QUrl
modifier|&
name|name
parameter_list|)
function_decl|;
DECL|member|htmlLoadAttempts
name|int
name|htmlLoadAttempts
decl_stmt|;
DECL|member|lastResource
name|QUrl
name|lastResource
decl_stmt|;
DECL|member|sourceInsideLoadResource
name|QUrl
name|sourceInsideLoadResource
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|loadResource
name|QVariant
name|TestBrowser
operator|::
name|loadResource
parameter_list|(
name|int
name|type
parameter_list|,
specifier|const
name|QUrl
modifier|&
name|name
parameter_list|)
block|{
if|if
condition|(
name|type
operator|==
name|QTextDocument
operator|::
name|HtmlResource
condition|)
name|htmlLoadAttempts
operator|++
expr_stmt|;
name|lastResource
operator|=
name|name
expr_stmt|;
name|sourceInsideLoadResource
operator|=
name|source
argument_list|()
expr_stmt|;
return|return
name|QTextBrowser
operator|::
name|loadResource
argument_list|(
name|type
argument_list|,
name|name
argument_list|)
return|;
block|}
end_function
begin_class
DECL|class|tst_QTextBrowser
class|class
name|tst_QTextBrowser
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
name|tst_QTextBrowser
parameter_list|()
constructor_decl|;
specifier|virtual
name|~
name|tst_QTextBrowser
parameter_list|()
destructor_decl|;
public|public
name|slots
public|:
name|void
name|init
parameter_list|()
function_decl|;
name|void
name|cleanup
parameter_list|()
function_decl|;
private|private
name|slots
private|:
name|void
name|noReloadOnAnchorJump
parameter_list|()
function_decl|;
name|void
name|bgColorOnSourceChange
parameter_list|()
function_decl|;
name|void
name|forwardButton
parameter_list|()
function_decl|;
name|void
name|viewportPositionInHistory
parameter_list|()
function_decl|;
name|void
name|relativeLinks
parameter_list|()
function_decl|;
name|void
name|anchors
parameter_list|()
function_decl|;
name|void
name|resourceAutoDetection
parameter_list|()
function_decl|;
name|void
name|forwardBackwardAvailable
parameter_list|()
function_decl|;
name|void
name|clearHistory
parameter_list|()
function_decl|;
name|void
name|sourceInsideLoadResource
parameter_list|()
function_decl|;
name|void
name|textInteractionFlags_vs_readOnly
parameter_list|()
function_decl|;
name|void
name|anchorsWithSelfBuiltHtml
parameter_list|()
function_decl|;
name|void
name|relativeNonLocalUrls
parameter_list|()
function_decl|;
name|void
name|adjacentAnchors
parameter_list|()
function_decl|;
name|void
name|loadResourceOnRelativeLocalFiles
parameter_list|()
function_decl|;
name|void
name|focusIndicator
parameter_list|()
function_decl|;
name|void
name|focusHistory
parameter_list|()
function_decl|;
name|void
name|urlEncoding
parameter_list|()
function_decl|;
private|private:
DECL|member|browser
name|TestBrowser
modifier|*
name|browser
decl_stmt|;
block|}
class|;
end_class
begin_constructor
DECL|function|tst_QTextBrowser
name|tst_QTextBrowser
operator|::
name|tst_QTextBrowser
parameter_list|()
block|{ }
end_constructor
begin_destructor
DECL|function|~tst_QTextBrowser
name|tst_QTextBrowser
operator|::
name|~
name|tst_QTextBrowser
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|init
name|void
name|tst_QTextBrowser
operator|::
name|init
parameter_list|()
block|{
name|QString
name|prefix
init|=
name|QFileInfo
argument_list|(
name|QFINDTESTDATA
argument_list|(
literal|"subdir"
argument_list|)
argument_list|)
operator|.
name|absolutePath
argument_list|()
decl_stmt|;
name|QVERIFY2
argument_list|(
operator|!
name|prefix
operator|.
name|isEmpty
argument_list|()
argument_list|,
literal|"Test data directory not found"
argument_list|)
expr_stmt|;
name|QDir
operator|::
name|setCurrent
argument_list|(
name|prefix
argument_list|)
expr_stmt|;
name|browser
operator|=
operator|new
name|TestBrowser
expr_stmt|;
name|browser
operator|->
name|show
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|cleanup
name|void
name|tst_QTextBrowser
operator|::
name|cleanup
parameter_list|()
block|{
operator|delete
name|browser
expr_stmt|;
name|browser
operator|=
literal|0
expr_stmt|;
block|}
end_function
begin_function
DECL|function|noReloadOnAnchorJump
name|void
name|tst_QTextBrowser
operator|::
name|noReloadOnAnchorJump
parameter_list|()
block|{
name|QUrl
name|url
init|=
name|QUrl
operator|::
name|fromLocalFile
argument_list|(
literal|"anchor.html"
argument_list|)
decl_stmt|;
name|browser
operator|->
name|htmlLoadAttempts
operator|=
literal|0
expr_stmt|;
name|browser
operator|->
name|setSource
argument_list|(
name|url
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|browser
operator|->
name|htmlLoadAttempts
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|browser
operator|->
name|toPlainText
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|url
operator|.
name|setFragment
argument_list|(
literal|"jumphere"
argument_list|)
expr_stmt|;
comment|// anchor.html#jumphere
name|browser
operator|->
name|setSource
argument_list|(
name|url
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|browser
operator|->
name|htmlLoadAttempts
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|browser
operator|->
name|toPlainText
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|browser
operator|->
name|source
argument_list|()
operator|==
name|url
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|bgColorOnSourceChange
name|void
name|tst_QTextBrowser
operator|::
name|bgColorOnSourceChange
parameter_list|()
block|{
name|browser
operator|->
name|setSource
argument_list|(
name|QUrl
operator|::
name|fromLocalFile
argument_list|(
literal|"pagewithbg.html"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|browser
operator|->
name|document
argument_list|()
operator|->
name|rootFrame
argument_list|()
operator|->
name|frameFormat
argument_list|()
operator|.
name|hasProperty
argument_list|(
name|QTextFormat
operator|::
name|BackgroundBrush
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|browser
operator|->
name|document
argument_list|()
operator|->
name|rootFrame
argument_list|()
operator|->
name|frameFormat
argument_list|()
operator|.
name|background
argument_list|()
operator|.
name|color
argument_list|()
operator|==
name|Qt
operator|::
name|blue
argument_list|)
expr_stmt|;
name|browser
operator|->
name|setSource
argument_list|(
name|QUrl
operator|::
name|fromLocalFile
argument_list|(
literal|"pagewithoutbg.html"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|browser
operator|->
name|document
argument_list|()
operator|->
name|rootFrame
argument_list|()
operator|->
name|frameFormat
argument_list|()
operator|.
name|hasProperty
argument_list|(
name|QTextFormat
operator|::
name|BackgroundBrush
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|forwardButton
name|void
name|tst_QTextBrowser
operator|::
name|forwardButton
parameter_list|()
block|{
name|QSignalSpy
name|forwardEmissions
argument_list|(
name|browser
argument_list|,
name|SIGNAL
argument_list|(
name|forwardAvailable
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|backwardEmissions
argument_list|(
name|browser
argument_list|,
name|SIGNAL
argument_list|(
name|backwardAvailable
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|browser
operator|->
name|historyTitle
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|browser
operator|->
name|historyTitle
argument_list|(
literal|0
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|browser
operator|->
name|historyTitle
argument_list|(
literal|1
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|browser
operator|->
name|setSource
argument_list|(
name|QUrl
operator|::
name|fromLocalFile
argument_list|(
literal|"pagewithbg.html"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|forwardEmissions
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVariant
name|val
init|=
name|forwardEmissions
operator|.
name|takeLast
argument_list|()
index|[
literal|0
index|]
decl_stmt|;
name|QVERIFY
argument_list|(
name|val
operator|.
name|type
argument_list|()
operator|==
name|QVariant
operator|::
name|Bool
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|val
operator|.
name|toBool
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|backwardEmissions
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|val
operator|=
name|backwardEmissions
operator|.
name|takeLast
argument_list|()
index|[
literal|0
index|]
expr_stmt|;
name|QVERIFY
argument_list|(
name|val
operator|.
name|type
argument_list|()
operator|==
name|QVariant
operator|::
name|Bool
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|val
operator|.
name|toBool
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|browser
operator|->
name|historyTitle
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|browser
operator|->
name|historyUrl
argument_list|(
literal|0
argument_list|)
argument_list|,
name|QUrl
operator|::
name|fromLocalFile
argument_list|(
literal|"pagewithbg.html"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|browser
operator|->
name|documentTitle
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Page With BG"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|browser
operator|->
name|historyTitle
argument_list|(
literal|0
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Page With BG"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|browser
operator|->
name|historyTitle
argument_list|(
literal|1
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|browser
operator|->
name|setSource
argument_list|(
name|QUrl
operator|::
name|fromLocalFile
argument_list|(
literal|"anchor.html"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|forwardEmissions
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|val
operator|=
name|forwardEmissions
operator|.
name|takeLast
argument_list|()
index|[
literal|0
index|]
expr_stmt|;
name|QVERIFY
argument_list|(
name|val
operator|.
name|type
argument_list|()
operator|==
name|QVariant
operator|::
name|Bool
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|val
operator|.
name|toBool
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|backwardEmissions
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|val
operator|=
name|backwardEmissions
operator|.
name|takeLast
argument_list|()
index|[
literal|0
index|]
expr_stmt|;
name|QVERIFY
argument_list|(
name|val
operator|.
name|type
argument_list|()
operator|==
name|QVariant
operator|::
name|Bool
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|val
operator|.
name|toBool
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|browser
operator|->
name|historyTitle
argument_list|(
operator|-
literal|1
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Page With BG"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|browser
operator|->
name|historyTitle
argument_list|(
literal|0
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Sample Anchor"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|browser
operator|->
name|historyTitle
argument_list|(
literal|1
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|browser
operator|->
name|backward
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|forwardEmissions
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|val
operator|=
name|forwardEmissions
operator|.
name|takeLast
argument_list|()
index|[
literal|0
index|]
expr_stmt|;
name|QVERIFY
argument_list|(
name|val
operator|.
name|type
argument_list|()
operator|==
name|QVariant
operator|::
name|Bool
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|val
operator|.
name|toBool
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|backwardEmissions
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|val
operator|=
name|backwardEmissions
operator|.
name|takeLast
argument_list|()
index|[
literal|0
index|]
expr_stmt|;
name|QVERIFY
argument_list|(
name|val
operator|.
name|type
argument_list|()
operator|==
name|QVariant
operator|::
name|Bool
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|val
operator|.
name|toBool
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|browser
operator|->
name|historyTitle
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|browser
operator|->
name|historyTitle
argument_list|(
literal|0
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Page With BG"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|browser
operator|->
name|historyTitle
argument_list|(
literal|1
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Sample Anchor"
argument_list|)
argument_list|)
expr_stmt|;
name|browser
operator|->
name|setSource
argument_list|(
name|QUrl
argument_list|(
literal|"pagewithoutbg.html"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|forwardEmissions
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|val
operator|=
name|forwardEmissions
operator|.
name|takeLast
argument_list|()
index|[
literal|0
index|]
expr_stmt|;
name|QVERIFY
argument_list|(
name|val
operator|.
name|type
argument_list|()
operator|==
name|QVariant
operator|::
name|Bool
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|val
operator|.
name|toBool
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|backwardEmissions
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|val
operator|=
name|backwardEmissions
operator|.
name|takeLast
argument_list|()
index|[
literal|0
index|]
expr_stmt|;
name|QVERIFY
argument_list|(
name|val
operator|.
name|type
argument_list|()
operator|==
name|QVariant
operator|::
name|Bool
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|val
operator|.
name|toBool
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|viewportPositionInHistory
name|void
name|tst_QTextBrowser
operator|::
name|viewportPositionInHistory
parameter_list|()
block|{
name|browser
operator|->
name|setSource
argument_list|(
name|QUrl
operator|::
name|fromLocalFile
argument_list|(
literal|"bigpage.html"
argument_list|)
argument_list|)
expr_stmt|;
name|browser
operator|->
name|scrollToAnchor
argument_list|(
literal|"bottom"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|browser
operator|->
name|verticalScrollBar
argument_list|()
operator|->
name|value
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|browser
operator|->
name|setSource
argument_list|(
name|QUrl
operator|::
name|fromLocalFile
argument_list|(
literal|"pagewithbg.html"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|browser
operator|->
name|verticalScrollBar
argument_list|()
operator|->
name|value
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|browser
operator|->
name|backward
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|browser
operator|->
name|verticalScrollBar
argument_list|()
operator|->
name|value
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|relativeLinks
name|void
name|tst_QTextBrowser
operator|::
name|relativeLinks
parameter_list|()
block|{
name|QSignalSpy
name|sourceChangedSpy
argument_list|(
name|browser
argument_list|,
name|SIGNAL
argument_list|(
name|sourceChanged
argument_list|(
name|QUrl
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|browser
operator|->
name|setSource
argument_list|(
name|QUrl
argument_list|(
literal|"subdir/../qtextbrowser.html"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|browser
operator|->
name|document
argument_list|()
operator|->
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|sourceChangedSpy
operator|.
name|count
argument_list|()
operator|==
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|sourceChangedSpy
operator|.
name|takeFirst
argument_list|()
index|[
literal|0
index|]
operator|.
name|toUrl
argument_list|()
argument_list|,
name|QUrl
argument_list|(
literal|"subdir/../qtextbrowser.html"
argument_list|)
argument_list|)
expr_stmt|;
name|browser
operator|->
name|setSource
argument_list|(
name|QUrl
argument_list|(
literal|"subdir/index.html"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|browser
operator|->
name|document
argument_list|()
operator|->
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|sourceChangedSpy
operator|.
name|count
argument_list|()
operator|==
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|sourceChangedSpy
operator|.
name|takeFirst
argument_list|()
index|[
literal|0
index|]
operator|.
name|toUrl
argument_list|()
argument_list|,
name|QUrl
argument_list|(
literal|"subdir/index.html"
argument_list|)
argument_list|)
expr_stmt|;
name|browser
operator|->
name|setSource
argument_list|(
name|QUrl
argument_list|(
literal|"anchor.html"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|browser
operator|->
name|document
argument_list|()
operator|->
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|sourceChangedSpy
operator|.
name|count
argument_list|()
operator|==
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|sourceChangedSpy
operator|.
name|takeFirst
argument_list|()
index|[
literal|0
index|]
operator|.
name|toUrl
argument_list|()
argument_list|,
name|QUrl
argument_list|(
literal|"anchor.html"
argument_list|)
argument_list|)
expr_stmt|;
name|browser
operator|->
name|setSource
argument_list|(
name|QUrl
argument_list|(
literal|"subdir/index.html"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|browser
operator|->
name|document
argument_list|()
operator|->
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|sourceChangedSpy
operator|.
name|count
argument_list|()
operator|==
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|sourceChangedSpy
operator|.
name|takeFirst
argument_list|()
index|[
literal|0
index|]
operator|.
name|toUrl
argument_list|()
argument_list|,
name|QUrl
argument_list|(
literal|"subdir/index.html"
argument_list|)
argument_list|)
expr_stmt|;
comment|// using QUrl::fromLocalFile()
name|browser
operator|->
name|setSource
argument_list|(
name|QUrl
operator|::
name|fromLocalFile
argument_list|(
literal|"anchor.html"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|browser
operator|->
name|document
argument_list|()
operator|->
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|sourceChangedSpy
operator|.
name|count
argument_list|()
operator|==
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|sourceChangedSpy
operator|.
name|takeFirst
argument_list|()
index|[
literal|0
index|]
operator|.
name|toUrl
argument_list|()
argument_list|,
name|QUrl
argument_list|(
literal|"file:anchor.html"
argument_list|)
argument_list|)
expr_stmt|;
name|browser
operator|->
name|setSource
argument_list|(
name|QUrl
argument_list|(
literal|"subdir/../qtextbrowser.html"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|browser
operator|->
name|document
argument_list|()
operator|->
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|sourceChangedSpy
operator|.
name|count
argument_list|()
operator|==
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|sourceChangedSpy
operator|.
name|takeFirst
argument_list|()
index|[
literal|0
index|]
operator|.
name|toUrl
argument_list|()
argument_list|,
name|QUrl
argument_list|(
literal|"subdir/../qtextbrowser.html"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|anchors
name|void
name|tst_QTextBrowser
operator|::
name|anchors
parameter_list|()
block|{
name|browser
operator|->
name|setSource
argument_list|(
name|QUrl
operator|::
name|fromLocalFile
argument_list|(
literal|"bigpage.html"
argument_list|)
argument_list|)
expr_stmt|;
name|browser
operator|->
name|setSource
argument_list|(
name|QUrl
argument_list|(
literal|"#bottom"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|browser
operator|->
name|verticalScrollBar
argument_list|()
operator|->
name|value
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|browser
operator|->
name|setSource
argument_list|(
name|QUrl
operator|::
name|fromLocalFile
argument_list|(
literal|"bigpage.html"
argument_list|)
argument_list|)
expr_stmt|;
name|browser
operator|->
name|setSource
argument_list|(
name|QUrl
argument_list|(
literal|"#id-anchor"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|browser
operator|->
name|verticalScrollBar
argument_list|()
operator|->
name|value
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|resourceAutoDetection
name|void
name|tst_QTextBrowser
operator|::
name|resourceAutoDetection
parameter_list|()
block|{
name|browser
operator|->
name|setHtml
argument_list|(
literal|"<img src=\":/some/resource\"/>"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|browser
operator|->
name|lastResource
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"qrc:/some/resource"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|forwardBackwardAvailable
name|void
name|tst_QTextBrowser
operator|::
name|forwardBackwardAvailable
parameter_list|()
block|{
name|QSignalSpy
name|backwardSpy
argument_list|(
name|browser
argument_list|,
name|SIGNAL
argument_list|(
name|backwardAvailable
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|forwardSpy
argument_list|(
name|browser
argument_list|,
name|SIGNAL
argument_list|(
name|forwardAvailable
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|browser
operator|->
name|isBackwardAvailable
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|browser
operator|->
name|isForwardAvailable
argument_list|()
argument_list|)
expr_stmt|;
name|browser
operator|->
name|setSource
argument_list|(
name|QUrl
operator|::
name|fromLocalFile
argument_list|(
literal|"anchor.html"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|browser
operator|->
name|isBackwardAvailable
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|browser
operator|->
name|isForwardAvailable
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|backwardSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|backwardSpy
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|forwardSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|forwardSpy
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|)
expr_stmt|;
name|backwardSpy
operator|.
name|clear
argument_list|()
expr_stmt|;
name|forwardSpy
operator|.
name|clear
argument_list|()
expr_stmt|;
name|browser
operator|->
name|setSource
argument_list|(
name|QUrl
operator|::
name|fromLocalFile
argument_list|(
literal|"bigpage.html"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|browser
operator|->
name|isBackwardAvailable
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|browser
operator|->
name|isForwardAvailable
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|backwardSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|backwardSpy
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|forwardSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|forwardSpy
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|)
expr_stmt|;
name|backwardSpy
operator|.
name|clear
argument_list|()
expr_stmt|;
name|forwardSpy
operator|.
name|clear
argument_list|()
expr_stmt|;
name|browser
operator|->
name|setSource
argument_list|(
name|QUrl
operator|::
name|fromLocalFile
argument_list|(
literal|"pagewithbg.html"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|browser
operator|->
name|isBackwardAvailable
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|browser
operator|->
name|isForwardAvailable
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|backwardSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|backwardSpy
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|forwardSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|forwardSpy
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|)
expr_stmt|;
name|backwardSpy
operator|.
name|clear
argument_list|()
expr_stmt|;
name|forwardSpy
operator|.
name|clear
argument_list|()
expr_stmt|;
name|browser
operator|->
name|backward
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|browser
operator|->
name|isBackwardAvailable
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|browser
operator|->
name|isForwardAvailable
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|backwardSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|backwardSpy
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|forwardSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|forwardSpy
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|)
expr_stmt|;
name|backwardSpy
operator|.
name|clear
argument_list|()
expr_stmt|;
name|forwardSpy
operator|.
name|clear
argument_list|()
expr_stmt|;
name|browser
operator|->
name|backward
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|browser
operator|->
name|isBackwardAvailable
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|browser
operator|->
name|isForwardAvailable
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|backwardSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|backwardSpy
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|forwardSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|forwardSpy
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|)
expr_stmt|;
name|backwardSpy
operator|.
name|clear
argument_list|()
expr_stmt|;
name|forwardSpy
operator|.
name|clear
argument_list|()
expr_stmt|;
name|browser
operator|->
name|forward
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|browser
operator|->
name|isBackwardAvailable
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|browser
operator|->
name|isForwardAvailable
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|backwardSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|backwardSpy
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|forwardSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|forwardSpy
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|)
expr_stmt|;
name|backwardSpy
operator|.
name|clear
argument_list|()
expr_stmt|;
name|forwardSpy
operator|.
name|clear
argument_list|()
expr_stmt|;
name|browser
operator|->
name|forward
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|browser
operator|->
name|isBackwardAvailable
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|browser
operator|->
name|isForwardAvailable
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|backwardSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|backwardSpy
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|forwardSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|forwardSpy
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|)
expr_stmt|;
name|backwardSpy
operator|.
name|clear
argument_list|()
expr_stmt|;
name|forwardSpy
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|clearHistory
name|void
name|tst_QTextBrowser
operator|::
name|clearHistory
parameter_list|()
block|{
name|QSignalSpy
name|backwardSpy
argument_list|(
name|browser
argument_list|,
name|SIGNAL
argument_list|(
name|backwardAvailable
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|forwardSpy
argument_list|(
name|browser
argument_list|,
name|SIGNAL
argument_list|(
name|forwardAvailable
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|browser
operator|->
name|isBackwardAvailable
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|browser
operator|->
name|isForwardAvailable
argument_list|()
argument_list|)
expr_stmt|;
name|browser
operator|->
name|clearHistory
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|browser
operator|->
name|isBackwardAvailable
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|browser
operator|->
name|isForwardAvailable
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|backwardSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|backwardSpy
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|forwardSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|forwardSpy
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|browser
operator|->
name|historyTitle
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|browser
operator|->
name|historyTitle
argument_list|(
literal|0
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|browser
operator|->
name|historyTitle
argument_list|(
literal|1
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|backwardSpy
operator|.
name|clear
argument_list|()
expr_stmt|;
name|forwardSpy
operator|.
name|clear
argument_list|()
expr_stmt|;
name|browser
operator|->
name|setSource
argument_list|(
name|QUrl
operator|::
name|fromLocalFile
argument_list|(
literal|"anchor.html"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|browser
operator|->
name|isBackwardAvailable
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|browser
operator|->
name|isForwardAvailable
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|backwardSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|backwardSpy
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|forwardSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|forwardSpy
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|)
expr_stmt|;
name|backwardSpy
operator|.
name|clear
argument_list|()
expr_stmt|;
name|forwardSpy
operator|.
name|clear
argument_list|()
expr_stmt|;
name|browser
operator|->
name|setSource
argument_list|(
name|QUrl
operator|::
name|fromLocalFile
argument_list|(
literal|"bigpage.html"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|browser
operator|->
name|isBackwardAvailable
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|browser
operator|->
name|isForwardAvailable
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|backwardSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|backwardSpy
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|forwardSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|forwardSpy
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|)
expr_stmt|;
name|backwardSpy
operator|.
name|clear
argument_list|()
expr_stmt|;
name|forwardSpy
operator|.
name|clear
argument_list|()
expr_stmt|;
name|browser
operator|->
name|clearHistory
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|browser
operator|->
name|isBackwardAvailable
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|browser
operator|->
name|isForwardAvailable
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|backwardSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|backwardSpy
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|forwardSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|forwardSpy
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|browser
operator|->
name|historyTitle
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|browser
operator|->
name|historyTitle
argument_list|(
literal|1
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|browser
operator|->
name|source
argument_list|()
argument_list|,
name|QUrl
operator|::
name|fromLocalFile
argument_list|(
literal|"bigpage.html"
argument_list|)
argument_list|)
expr_stmt|;
name|browser
operator|->
name|backward
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|browser
operator|->
name|source
argument_list|()
argument_list|,
name|QUrl
operator|::
name|fromLocalFile
argument_list|(
literal|"bigpage.html"
argument_list|)
argument_list|)
expr_stmt|;
name|browser
operator|->
name|home
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|browser
operator|->
name|source
argument_list|()
argument_list|,
name|QUrl
operator|::
name|fromLocalFile
argument_list|(
literal|"bigpage.html"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|sourceInsideLoadResource
name|void
name|tst_QTextBrowser
operator|::
name|sourceInsideLoadResource
parameter_list|()
block|{
name|QUrl
name|url
init|=
name|QUrl
operator|::
name|fromLocalFile
argument_list|(
literal|"pagewithimage.html"
argument_list|)
decl_stmt|;
name|browser
operator|->
name|setSource
argument_list|(
name|url
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|browser
operator|->
name|lastResource
argument_list|,
name|QUrl
operator|::
name|fromLocalFile
argument_list|(
name|QDir
operator|::
name|current
argument_list|()
operator|.
name|filePath
argument_list|(
literal|"foobar.png"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QEXPECT_FAIL
argument_list|(
literal|""
argument_list|,
literal|"This is currently not supported"
argument_list|,
name|Continue
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|browser
operator|->
name|sourceInsideLoadResource
operator|.
name|toString
argument_list|()
argument_list|,
name|url
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|textInteractionFlags_vs_readOnly
name|void
name|tst_QTextBrowser
operator|::
name|textInteractionFlags_vs_readOnly
parameter_list|()
block|{
name|QVERIFY
argument_list|(
name|browser
operator|->
name|isReadOnly
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|browser
operator|->
name|textInteractionFlags
argument_list|()
operator|==
name|Qt
operator|::
name|TextBrowserInteraction
argument_list|)
expr_stmt|;
name|browser
operator|->
name|setReadOnly
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|browser
operator|->
name|textInteractionFlags
argument_list|()
operator|==
name|Qt
operator|::
name|TextBrowserInteraction
argument_list|)
expr_stmt|;
name|browser
operator|->
name|setReadOnly
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|browser
operator|->
name|textInteractionFlags
argument_list|()
operator|==
name|Qt
operator|::
name|TextEditorInteraction
argument_list|)
expr_stmt|;
name|browser
operator|->
name|setReadOnly
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|browser
operator|->
name|textInteractionFlags
argument_list|()
operator|==
name|Qt
operator|::
name|TextBrowserInteraction
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|anchorsWithSelfBuiltHtml
name|void
name|tst_QTextBrowser
operator|::
name|anchorsWithSelfBuiltHtml
parameter_list|()
block|{
name|browser
operator|->
name|setHtml
argument_list|(
literal|"<p>Hello<a href=\"#anchor\">Link</a>"
literal|"<p><a name=\"anchor\"/>Blah</p>"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|browser
operator|->
name|document
argument_list|()
operator|->
name|blockCount
argument_list|()
operator|>
literal|1
argument_list|)
expr_stmt|;
name|browser
operator|->
name|setSource
argument_list|(
name|QUrl
argument_list|(
literal|"#anchor"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|browser
operator|->
name|document
argument_list|()
operator|->
name|blockCount
argument_list|()
operator|>
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|HelpBrowser
class|class
name|HelpBrowser
super|:
specifier|public
name|QTextBrowser
block|{
public|public:
DECL|function|loadResource
specifier|virtual
name|QVariant
name|loadResource
parameter_list|(
name|int
comment|/*type*/
parameter_list|,
specifier|const
name|QUrl
modifier|&
name|name
parameter_list|)
block|{
name|QString
name|url
init|=
name|name
operator|.
name|toString
argument_list|()
decl_stmt|;
if|if
condition|(
name|url
operator|==
literal|"qhelp://docs/index.html"
condition|)
block|{
return|return
literal|"index"
return|;
block|}
elseif|else
if|if
condition|(
name|url
operator|==
literal|"qhelp://docs/classes.html"
condition|)
block|{
return|return
literal|"classes"
return|;
block|}
elseif|else
if|if
condition|(
name|url
operator|==
literal|"qhelp://docs/someclass.html"
condition|)
block|{
return|return
literal|"someclass"
return|;
block|}
return|return
name|QVariant
argument_list|()
return|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|relativeNonLocalUrls
name|void
name|tst_QTextBrowser
operator|::
name|relativeNonLocalUrls
parameter_list|()
block|{
name|HelpBrowser
name|browser
decl_stmt|;
name|browser
operator|.
name|setSource
argument_list|(
name|QUrl
argument_list|(
literal|"qhelp://docs/index.html"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|browser
operator|.
name|toPlainText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"index"
argument_list|)
argument_list|)
expr_stmt|;
name|browser
operator|.
name|setSource
argument_list|(
name|QUrl
argument_list|(
literal|"classes.html"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|browser
operator|.
name|toPlainText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"classes"
argument_list|)
argument_list|)
expr_stmt|;
name|browser
operator|.
name|setSource
argument_list|(
name|QUrl
argument_list|(
literal|"someclass.html"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|browser
operator|.
name|toPlainText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"someclass"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|HackBrowser
class|class
name|HackBrowser
super|:
specifier|public
name|TestBrowser
block|{
public|public:
DECL|function|focusTheNextChild
specifier|inline
name|bool
name|focusTheNextChild
parameter_list|()
block|{
return|return
name|QTextBrowser
operator|::
name|focusNextChild
argument_list|()
return|;
block|}
DECL|function|focusThePreviousChild
specifier|inline
name|bool
name|focusThePreviousChild
parameter_list|()
block|{
return|return
name|QTextBrowser
operator|::
name|focusPreviousChild
argument_list|()
return|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|adjacentAnchors
name|void
name|tst_QTextBrowser
operator|::
name|adjacentAnchors
parameter_list|()
block|{
name|HackBrowser
modifier|*
name|browser
init|=
operator|new
name|HackBrowser
decl_stmt|;
name|browser
operator|->
name|setHtml
argument_list|(
literal|"<a href=\"#foo\">foo</a><a href=\"#bar\">bar</a>"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|browser
operator|->
name|focusTheNextChild
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|browser
operator|->
name|textCursor
argument_list|()
operator|.
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|browser
operator|->
name|focusTheNextChild
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|browser
operator|->
name|textCursor
argument_list|()
operator|.
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"bar"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|browser
operator|->
name|focusTheNextChild
argument_list|()
argument_list|)
expr_stmt|;
name|browser
operator|->
name|moveCursor
argument_list|(
name|QTextCursor
operator|::
name|End
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|browser
operator|->
name|focusThePreviousChild
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|browser
operator|->
name|textCursor
argument_list|()
operator|.
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"bar"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|browser
operator|->
name|focusThePreviousChild
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|browser
operator|->
name|textCursor
argument_list|()
operator|.
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
operator|delete
name|browser
expr_stmt|;
block|}
end_function
begin_function
DECL|function|loadResourceOnRelativeLocalFiles
name|void
name|tst_QTextBrowser
operator|::
name|loadResourceOnRelativeLocalFiles
parameter_list|()
block|{
name|browser
operator|->
name|setSource
argument_list|(
name|QUrl
operator|::
name|fromLocalFile
argument_list|(
literal|"subdir/index.html"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|browser
operator|->
name|toPlainText
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVariant
name|v
init|=
name|browser
operator|->
name|loadResource
argument_list|(
name|QTextDocument
operator|::
name|HtmlResource
argument_list|,
name|QUrl
argument_list|(
literal|"../anchor.html"
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|v
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|v
operator|.
name|type
argument_list|()
operator|==
name|QVariant
operator|::
name|ByteArray
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|v
operator|.
name|toByteArray
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|focusIndicator
name|void
name|tst_QTextBrowser
operator|::
name|focusIndicator
parameter_list|()
block|{
name|HackBrowser
modifier|*
name|browser
init|=
operator|new
name|HackBrowser
decl_stmt|;
name|browser
operator|->
name|setSource
argument_list|(
name|QUrl
operator|::
name|fromLocalFile
argument_list|(
literal|"firstpage.html"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|browser
operator|->
name|textCursor
argument_list|()
operator|.
name|hasSelection
argument_list|()
argument_list|)
expr_stmt|;
name|browser
operator|->
name|focusTheNextChild
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|browser
operator|->
name|textCursor
argument_list|()
operator|.
name|hasSelection
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|browser
operator|->
name|textCursor
argument_list|()
operator|.
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Link to second page"
argument_list|)
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|QT_KEYPAD_NAVIGATION
name|browser
operator|->
name|setEditFocus
argument_list|(
literal|true
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTest
operator|::
name|keyClick
argument_list|(
name|browser
argument_list|,
name|Qt
operator|::
name|Key_Enter
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|browser
operator|->
name|textCursor
argument_list|()
operator|.
name|hasSelection
argument_list|()
argument_list|)
expr_stmt|;
name|browser
operator|->
name|focusTheNextChild
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|browser
operator|->
name|textCursor
argument_list|()
operator|.
name|hasSelection
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|browser
operator|->
name|textCursor
argument_list|()
operator|.
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Link to third page from second page"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|browser
argument_list|,
name|Qt
operator|::
name|Key_Enter
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|browser
operator|->
name|textCursor
argument_list|()
operator|.
name|hasSelection
argument_list|()
argument_list|)
expr_stmt|;
name|browser
operator|->
name|backward
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|browser
operator|->
name|textCursor
argument_list|()
operator|.
name|hasSelection
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|browser
operator|->
name|textCursor
argument_list|()
operator|.
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Link to third page from second page"
argument_list|)
argument_list|)
expr_stmt|;
name|browser
operator|->
name|backward
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|browser
operator|->
name|textCursor
argument_list|()
operator|.
name|hasSelection
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|browser
operator|->
name|textCursor
argument_list|()
operator|.
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Link to second page"
argument_list|)
argument_list|)
expr_stmt|;
name|browser
operator|->
name|forward
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|browser
operator|->
name|textCursor
argument_list|()
operator|.
name|hasSelection
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|browser
operator|->
name|textCursor
argument_list|()
operator|.
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Link to third page from second page"
argument_list|)
argument_list|)
expr_stmt|;
name|browser
operator|->
name|backward
argument_list|()
expr_stmt|;
name|browser
operator|->
name|backward
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|browser
operator|->
name|textCursor
argument_list|()
operator|.
name|hasSelection
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|browser
operator|->
name|textCursor
argument_list|()
operator|.
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Link to second page"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|browser
argument_list|,
name|Qt
operator|::
name|Key_Enter
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|browser
operator|->
name|textCursor
argument_list|()
operator|.
name|hasSelection
argument_list|()
argument_list|)
expr_stmt|;
operator|delete
name|browser
expr_stmt|;
block|}
end_function
begin_function
DECL|function|focusHistory
name|void
name|tst_QTextBrowser
operator|::
name|focusHistory
parameter_list|()
block|{
name|HackBrowser
modifier|*
name|browser
init|=
operator|new
name|HackBrowser
decl_stmt|;
name|browser
operator|->
name|setSource
argument_list|(
name|QUrl
operator|::
name|fromLocalFile
argument_list|(
literal|"firstpage.html"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|browser
operator|->
name|textCursor
argument_list|()
operator|.
name|hasSelection
argument_list|()
argument_list|)
expr_stmt|;
name|browser
operator|->
name|focusTheNextChild
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|browser
operator|->
name|textCursor
argument_list|()
operator|.
name|hasSelection
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|browser
operator|->
name|textCursor
argument_list|()
operator|.
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Link to second page"
argument_list|)
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|QT_KEYPAD_NAVIGATION
name|browser
operator|->
name|setEditFocus
argument_list|(
literal|true
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTest
operator|::
name|keyClick
argument_list|(
name|browser
argument_list|,
name|Qt
operator|::
name|Key_Enter
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|browser
operator|->
name|textCursor
argument_list|()
operator|.
name|hasSelection
argument_list|()
argument_list|)
expr_stmt|;
name|browser
operator|->
name|focusTheNextChild
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|browser
operator|->
name|textCursor
argument_list|()
operator|.
name|hasSelection
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|browser
operator|->
name|textCursor
argument_list|()
operator|.
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Link to third page from second page"
argument_list|)
argument_list|)
expr_stmt|;
name|browser
operator|->
name|backward
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|browser
operator|->
name|textCursor
argument_list|()
operator|.
name|hasSelection
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|browser
operator|->
name|textCursor
argument_list|()
operator|.
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Link to second page"
argument_list|)
argument_list|)
expr_stmt|;
name|browser
operator|->
name|focusTheNextChild
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|browser
operator|->
name|textCursor
argument_list|()
operator|.
name|hasSelection
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|browser
operator|->
name|textCursor
argument_list|()
operator|.
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Link to third page"
argument_list|)
argument_list|)
expr_stmt|;
comment|// Despite the third page link being highlighted, going forward should go to second,
comment|// and going back after that should still highlight the third link
name|browser
operator|->
name|forward
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|browser
operator|->
name|textCursor
argument_list|()
operator|.
name|hasSelection
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|browser
operator|->
name|textCursor
argument_list|()
operator|.
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Link to third page from second page"
argument_list|)
argument_list|)
expr_stmt|;
name|browser
operator|->
name|backward
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|browser
operator|->
name|textCursor
argument_list|()
operator|.
name|hasSelection
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|browser
operator|->
name|textCursor
argument_list|()
operator|.
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Link to third page"
argument_list|)
argument_list|)
expr_stmt|;
name|browser
operator|->
name|forward
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|browser
operator|->
name|textCursor
argument_list|()
operator|.
name|hasSelection
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|browser
operator|->
name|textCursor
argument_list|()
operator|.
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Link to third page from second page"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|browser
argument_list|,
name|Qt
operator|::
name|Key_Enter
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|browser
operator|->
name|textCursor
argument_list|()
operator|.
name|hasSelection
argument_list|()
argument_list|)
expr_stmt|;
name|browser
operator|->
name|backward
argument_list|()
expr_stmt|;
name|browser
operator|->
name|backward
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|browser
operator|->
name|textCursor
argument_list|()
operator|.
name|hasSelection
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|browser
operator|->
name|textCursor
argument_list|()
operator|.
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Link to third page"
argument_list|)
argument_list|)
expr_stmt|;
operator|delete
name|browser
expr_stmt|;
block|}
end_function
begin_function
DECL|function|urlEncoding
name|void
name|tst_QTextBrowser
operator|::
name|urlEncoding
parameter_list|()
block|{
name|HackBrowser
modifier|*
name|browser
init|=
operator|new
name|HackBrowser
decl_stmt|;
name|browser
operator|->
name|setOpenLinks
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|browser
operator|->
name|setHtml
argument_list|(
literal|"<a href=\"http://www.google.com/q=%22\">link</a>"
argument_list|)
expr_stmt|;
name|browser
operator|->
name|focusTheNextChild
argument_list|()
expr_stmt|;
name|QSignalSpy
name|spy
argument_list|(
name|browser
argument_list|,
name|SIGNAL
argument_list|(
name|anchorClicked
argument_list|(
name|QUrl
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
ifdef|#
directive|ifdef
name|QT_KEYPAD_NAVIGATION
name|browser
operator|->
name|setEditFocus
argument_list|(
literal|true
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTest
operator|::
name|keyClick
argument_list|(
name|browser
argument_list|,
name|Qt
operator|::
name|Key_Enter
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QUrl
name|url
init|=
name|spy
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toUrl
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|toEncoded
argument_list|()
operator|==
name|QByteArray
argument_list|(
literal|"http://www.google.com/q=%22"
argument_list|)
argument_list|)
expr_stmt|;
operator|delete
name|browser
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QTextBrowser
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qtextbrowser.moc"
end_include
end_unit
